// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package gcpauthbackend

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type CustomEndpoint struct {
	// Api: string, optional
	Api terra.StringValue `hcl:"api,attr"`
	// Compute: string, optional
	Compute terra.StringValue `hcl:"compute,attr"`
	// Crm: string, optional
	Crm terra.StringValue `hcl:"crm,attr"`
	// Iam: string, optional
	Iam terra.StringValue `hcl:"iam,attr"`
}

type CustomEndpointAttributes struct {
	ref terra.Reference
}

func (ce CustomEndpointAttributes) InternalRef() (terra.Reference, error) {
	return ce.ref, nil
}

func (ce CustomEndpointAttributes) InternalWithRef(ref terra.Reference) CustomEndpointAttributes {
	return CustomEndpointAttributes{ref: ref}
}

func (ce CustomEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ce.ref.InternalTokens()
}

func (ce CustomEndpointAttributes) Api() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("api"))
}

func (ce CustomEndpointAttributes) Compute() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("compute"))
}

func (ce CustomEndpointAttributes) Crm() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("crm"))
}

func (ce CustomEndpointAttributes) Iam() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("iam"))
}

type CustomEndpointState struct {
	Api     string `json:"api"`
	Compute string `json:"compute"`
	Crm     string `json:"crm"`
	Iam     string `json:"iam"`
}
