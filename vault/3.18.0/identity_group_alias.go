// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIdentityGroupAlias creates a new instance of [IdentityGroupAlias].
func NewIdentityGroupAlias(name string, args IdentityGroupAliasArgs) *IdentityGroupAlias {
	return &IdentityGroupAlias{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityGroupAlias)(nil)

// IdentityGroupAlias represents the Terraform resource vault_identity_group_alias.
type IdentityGroupAlias struct {
	Name      string
	Args      IdentityGroupAliasArgs
	state     *identityGroupAliasState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityGroupAlias].
func (iga *IdentityGroupAlias) Type() string {
	return "vault_identity_group_alias"
}

// LocalName returns the local name for [IdentityGroupAlias].
func (iga *IdentityGroupAlias) LocalName() string {
	return iga.Name
}

// Configuration returns the configuration (args) for [IdentityGroupAlias].
func (iga *IdentityGroupAlias) Configuration() interface{} {
	return iga.Args
}

// DependOn is used for other resources to depend on [IdentityGroupAlias].
func (iga *IdentityGroupAlias) DependOn() terra.Reference {
	return terra.ReferenceResource(iga)
}

// Dependencies returns the list of resources [IdentityGroupAlias] depends_on.
func (iga *IdentityGroupAlias) Dependencies() terra.Dependencies {
	return iga.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityGroupAlias].
func (iga *IdentityGroupAlias) LifecycleManagement() *terra.Lifecycle {
	return iga.Lifecycle
}

// Attributes returns the attributes for [IdentityGroupAlias].
func (iga *IdentityGroupAlias) Attributes() identityGroupAliasAttributes {
	return identityGroupAliasAttributes{ref: terra.ReferenceResource(iga)}
}

// ImportState imports the given attribute values into [IdentityGroupAlias]'s state.
func (iga *IdentityGroupAlias) ImportState(av io.Reader) error {
	iga.state = &identityGroupAliasState{}
	if err := json.NewDecoder(av).Decode(iga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iga.Type(), iga.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityGroupAlias] has state.
func (iga *IdentityGroupAlias) State() (*identityGroupAliasState, bool) {
	return iga.state, iga.state != nil
}

// StateMust returns the state for [IdentityGroupAlias]. Panics if the state is nil.
func (iga *IdentityGroupAlias) StateMust() *identityGroupAliasState {
	if iga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iga.Type(), iga.LocalName()))
	}
	return iga.state
}

// IdentityGroupAliasArgs contains the configurations for vault_identity_group_alias.
type IdentityGroupAliasArgs struct {
	// CanonicalId: string, required
	CanonicalId terra.StringValue `hcl:"canonical_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MountAccessor: string, required
	MountAccessor terra.StringValue `hcl:"mount_accessor,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}
type identityGroupAliasAttributes struct {
	ref terra.Reference
}

// CanonicalId returns a reference to field canonical_id of vault_identity_group_alias.
func (iga identityGroupAliasAttributes) CanonicalId() terra.StringValue {
	return terra.ReferenceAsString(iga.ref.Append("canonical_id"))
}

// Id returns a reference to field id of vault_identity_group_alias.
func (iga identityGroupAliasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iga.ref.Append("id"))
}

// MountAccessor returns a reference to field mount_accessor of vault_identity_group_alias.
func (iga identityGroupAliasAttributes) MountAccessor() terra.StringValue {
	return terra.ReferenceAsString(iga.ref.Append("mount_accessor"))
}

// Name returns a reference to field name of vault_identity_group_alias.
func (iga identityGroupAliasAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(iga.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_group_alias.
func (iga identityGroupAliasAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(iga.ref.Append("namespace"))
}

type identityGroupAliasState struct {
	CanonicalId   string `json:"canonical_id"`
	Id            string `json:"id"`
	MountAccessor string `json:"mount_accessor"`
	Name          string `json:"name"`
	Namespace     string `json:"namespace"`
}
