// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIdentityOidcKey creates a new instance of [IdentityOidcKey].
func NewIdentityOidcKey(name string, args IdentityOidcKeyArgs) *IdentityOidcKey {
	return &IdentityOidcKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityOidcKey)(nil)

// IdentityOidcKey represents the Terraform resource vault_identity_oidc_key.
type IdentityOidcKey struct {
	Name      string
	Args      IdentityOidcKeyArgs
	state     *identityOidcKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityOidcKey].
func (iok *IdentityOidcKey) Type() string {
	return "vault_identity_oidc_key"
}

// LocalName returns the local name for [IdentityOidcKey].
func (iok *IdentityOidcKey) LocalName() string {
	return iok.Name
}

// Configuration returns the configuration (args) for [IdentityOidcKey].
func (iok *IdentityOidcKey) Configuration() interface{} {
	return iok.Args
}

// DependOn is used for other resources to depend on [IdentityOidcKey].
func (iok *IdentityOidcKey) DependOn() terra.Reference {
	return terra.ReferenceResource(iok)
}

// Dependencies returns the list of resources [IdentityOidcKey] depends_on.
func (iok *IdentityOidcKey) Dependencies() terra.Dependencies {
	return iok.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityOidcKey].
func (iok *IdentityOidcKey) LifecycleManagement() *terra.Lifecycle {
	return iok.Lifecycle
}

// Attributes returns the attributes for [IdentityOidcKey].
func (iok *IdentityOidcKey) Attributes() identityOidcKeyAttributes {
	return identityOidcKeyAttributes{ref: terra.ReferenceResource(iok)}
}

// ImportState imports the given attribute values into [IdentityOidcKey]'s state.
func (iok *IdentityOidcKey) ImportState(av io.Reader) error {
	iok.state = &identityOidcKeyState{}
	if err := json.NewDecoder(av).Decode(iok.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iok.Type(), iok.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityOidcKey] has state.
func (iok *IdentityOidcKey) State() (*identityOidcKeyState, bool) {
	return iok.state, iok.state != nil
}

// StateMust returns the state for [IdentityOidcKey]. Panics if the state is nil.
func (iok *IdentityOidcKey) StateMust() *identityOidcKeyState {
	if iok.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iok.Type(), iok.LocalName()))
	}
	return iok.state
}

// IdentityOidcKeyArgs contains the configurations for vault_identity_oidc_key.
type IdentityOidcKeyArgs struct {
	// Algorithm: string, optional
	Algorithm terra.StringValue `hcl:"algorithm,attr"`
	// AllowedClientIds: set of string, optional
	AllowedClientIds terra.SetValue[terra.StringValue] `hcl:"allowed_client_ids,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RotationPeriod: number, optional
	RotationPeriod terra.NumberValue `hcl:"rotation_period,attr"`
	// VerificationTtl: number, optional
	VerificationTtl terra.NumberValue `hcl:"verification_ttl,attr"`
}
type identityOidcKeyAttributes struct {
	ref terra.Reference
}

// Algorithm returns a reference to field algorithm of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) Algorithm() terra.StringValue {
	return terra.ReferenceAsString(iok.ref.Append("algorithm"))
}

// AllowedClientIds returns a reference to field allowed_client_ids of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) AllowedClientIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](iok.ref.Append("allowed_client_ids"))
}

// Id returns a reference to field id of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iok.ref.Append("id"))
}

// Name returns a reference to field name of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(iok.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(iok.ref.Append("namespace"))
}

// RotationPeriod returns a reference to field rotation_period of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) RotationPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(iok.ref.Append("rotation_period"))
}

// VerificationTtl returns a reference to field verification_ttl of vault_identity_oidc_key.
func (iok identityOidcKeyAttributes) VerificationTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(iok.ref.Append("verification_ttl"))
}

type identityOidcKeyState struct {
	Algorithm        string   `json:"algorithm"`
	AllowedClientIds []string `json:"allowed_client_ids"`
	Id               string   `json:"id"`
	Name             string   `json:"name"`
	Namespace        string   `json:"namespace"`
	RotationPeriod   float64  `json:"rotation_period"`
	VerificationTtl  float64  `json:"verification_ttl"`
}
