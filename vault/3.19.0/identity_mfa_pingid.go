// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIdentityMfaPingid creates a new instance of [IdentityMfaPingid].
func NewIdentityMfaPingid(name string, args IdentityMfaPingidArgs) *IdentityMfaPingid {
	return &IdentityMfaPingid{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityMfaPingid)(nil)

// IdentityMfaPingid represents the Terraform resource vault_identity_mfa_pingid.
type IdentityMfaPingid struct {
	Name      string
	Args      IdentityMfaPingidArgs
	state     *identityMfaPingidState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityMfaPingid].
func (imp *IdentityMfaPingid) Type() string {
	return "vault_identity_mfa_pingid"
}

// LocalName returns the local name for [IdentityMfaPingid].
func (imp *IdentityMfaPingid) LocalName() string {
	return imp.Name
}

// Configuration returns the configuration (args) for [IdentityMfaPingid].
func (imp *IdentityMfaPingid) Configuration() interface{} {
	return imp.Args
}

// DependOn is used for other resources to depend on [IdentityMfaPingid].
func (imp *IdentityMfaPingid) DependOn() terra.Reference {
	return terra.ReferenceResource(imp)
}

// Dependencies returns the list of resources [IdentityMfaPingid] depends_on.
func (imp *IdentityMfaPingid) Dependencies() terra.Dependencies {
	return imp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityMfaPingid].
func (imp *IdentityMfaPingid) LifecycleManagement() *terra.Lifecycle {
	return imp.Lifecycle
}

// Attributes returns the attributes for [IdentityMfaPingid].
func (imp *IdentityMfaPingid) Attributes() identityMfaPingidAttributes {
	return identityMfaPingidAttributes{ref: terra.ReferenceResource(imp)}
}

// ImportState imports the given attribute values into [IdentityMfaPingid]'s state.
func (imp *IdentityMfaPingid) ImportState(av io.Reader) error {
	imp.state = &identityMfaPingidState{}
	if err := json.NewDecoder(av).Decode(imp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", imp.Type(), imp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityMfaPingid] has state.
func (imp *IdentityMfaPingid) State() (*identityMfaPingidState, bool) {
	return imp.state, imp.state != nil
}

// StateMust returns the state for [IdentityMfaPingid]. Panics if the state is nil.
func (imp *IdentityMfaPingid) StateMust() *identityMfaPingidState {
	if imp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", imp.Type(), imp.LocalName()))
	}
	return imp.state
}

// IdentityMfaPingidArgs contains the configurations for vault_identity_mfa_pingid.
type IdentityMfaPingidArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// SettingsFileBase64: string, required
	SettingsFileBase64 terra.StringValue `hcl:"settings_file_base64,attr" validate:"required"`
	// UsernameFormat: string, optional
	UsernameFormat terra.StringValue `hcl:"username_format,attr"`
}
type identityMfaPingidAttributes struct {
	ref terra.Reference
}

// AdminUrl returns a reference to field admin_url of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) AdminUrl() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("admin_url"))
}

// AuthenticatorUrl returns a reference to field authenticator_url of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) AuthenticatorUrl() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("authenticator_url"))
}

// Id returns a reference to field id of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("id"))
}

// IdpUrl returns a reference to field idp_url of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) IdpUrl() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("idp_url"))
}

// MethodId returns a reference to field method_id of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) MethodId() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("method_id"))
}

// MountAccessor returns a reference to field mount_accessor of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) MountAccessor() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("mount_accessor"))
}

// Name returns a reference to field name of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("namespace"))
}

// NamespaceId returns a reference to field namespace_id of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("namespace_id"))
}

// NamespacePath returns a reference to field namespace_path of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) NamespacePath() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("namespace_path"))
}

// OrgAlias returns a reference to field org_alias of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) OrgAlias() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("org_alias"))
}

// SettingsFileBase64 returns a reference to field settings_file_base64 of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) SettingsFileBase64() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("settings_file_base64"))
}

// Type returns a reference to field type of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("type"))
}

// UseSignature returns a reference to field use_signature of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) UseSignature() terra.BoolValue {
	return terra.ReferenceAsBool(imp.ref.Append("use_signature"))
}

// UsernameFormat returns a reference to field username_format of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) UsernameFormat() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("username_format"))
}

// Uuid returns a reference to field uuid of vault_identity_mfa_pingid.
func (imp identityMfaPingidAttributes) Uuid() terra.StringValue {
	return terra.ReferenceAsString(imp.ref.Append("uuid"))
}

type identityMfaPingidState struct {
	AdminUrl           string `json:"admin_url"`
	AuthenticatorUrl   string `json:"authenticator_url"`
	Id                 string `json:"id"`
	IdpUrl             string `json:"idp_url"`
	MethodId           string `json:"method_id"`
	MountAccessor      string `json:"mount_accessor"`
	Name               string `json:"name"`
	Namespace          string `json:"namespace"`
	NamespaceId        string `json:"namespace_id"`
	NamespacePath      string `json:"namespace_path"`
	OrgAlias           string `json:"org_alias"`
	SettingsFileBase64 string `json:"settings_file_base64"`
	Type               string `json:"type"`
	UseSignature       bool   `json:"use_signature"`
	UsernameFormat     string `json:"username_format"`
	Uuid               string `json:"uuid"`
}
