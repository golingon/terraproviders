// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewTransitSecretCacheConfig creates a new instance of [TransitSecretCacheConfig].
func NewTransitSecretCacheConfig(name string, args TransitSecretCacheConfigArgs) *TransitSecretCacheConfig {
	return &TransitSecretCacheConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*TransitSecretCacheConfig)(nil)

// TransitSecretCacheConfig represents the Terraform resource vault_transit_secret_cache_config.
type TransitSecretCacheConfig struct {
	Name      string
	Args      TransitSecretCacheConfigArgs
	state     *transitSecretCacheConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [TransitSecretCacheConfig].
func (tscc *TransitSecretCacheConfig) Type() string {
	return "vault_transit_secret_cache_config"
}

// LocalName returns the local name for [TransitSecretCacheConfig].
func (tscc *TransitSecretCacheConfig) LocalName() string {
	return tscc.Name
}

// Configuration returns the configuration (args) for [TransitSecretCacheConfig].
func (tscc *TransitSecretCacheConfig) Configuration() interface{} {
	return tscc.Args
}

// DependOn is used for other resources to depend on [TransitSecretCacheConfig].
func (tscc *TransitSecretCacheConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(tscc)
}

// Dependencies returns the list of resources [TransitSecretCacheConfig] depends_on.
func (tscc *TransitSecretCacheConfig) Dependencies() terra.Dependencies {
	return tscc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [TransitSecretCacheConfig].
func (tscc *TransitSecretCacheConfig) LifecycleManagement() *terra.Lifecycle {
	return tscc.Lifecycle
}

// Attributes returns the attributes for [TransitSecretCacheConfig].
func (tscc *TransitSecretCacheConfig) Attributes() transitSecretCacheConfigAttributes {
	return transitSecretCacheConfigAttributes{ref: terra.ReferenceResource(tscc)}
}

// ImportState imports the given attribute values into [TransitSecretCacheConfig]'s state.
func (tscc *TransitSecretCacheConfig) ImportState(av io.Reader) error {
	tscc.state = &transitSecretCacheConfigState{}
	if err := json.NewDecoder(av).Decode(tscc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", tscc.Type(), tscc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [TransitSecretCacheConfig] has state.
func (tscc *TransitSecretCacheConfig) State() (*transitSecretCacheConfigState, bool) {
	return tscc.state, tscc.state != nil
}

// StateMust returns the state for [TransitSecretCacheConfig]. Panics if the state is nil.
func (tscc *TransitSecretCacheConfig) StateMust() *transitSecretCacheConfigState {
	if tscc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", tscc.Type(), tscc.LocalName()))
	}
	return tscc.state
}

// TransitSecretCacheConfigArgs contains the configurations for vault_transit_secret_cache_config.
type TransitSecretCacheConfigArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Size: number, required
	Size terra.NumberValue `hcl:"size,attr" validate:"required"`
}
type transitSecretCacheConfigAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_transit_secret_cache_config.
func (tscc transitSecretCacheConfigAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(tscc.ref.Append("backend"))
}

// Id returns a reference to field id of vault_transit_secret_cache_config.
func (tscc transitSecretCacheConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tscc.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_transit_secret_cache_config.
func (tscc transitSecretCacheConfigAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(tscc.ref.Append("namespace"))
}

// Size returns a reference to field size of vault_transit_secret_cache_config.
func (tscc transitSecretCacheConfigAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(tscc.ref.Append("size"))
}

type transitSecretCacheConfigState struct {
	Backend   string  `json:"backend"`
	Id        string  `json:"id"`
	Namespace string  `json:"namespace"`
	Size      float64 `json:"size"`
}
