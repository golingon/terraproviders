// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sshsecretbackendrole

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AllowedUserKeyConfig struct {
	// Lengths: list of number, required
	Lengths terra.ListValue[terra.NumberValue] `hcl:"lengths,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type AllowedUserKeyConfigAttributes struct {
	ref terra.Reference
}

func (aukc AllowedUserKeyConfigAttributes) InternalRef() (terra.Reference, error) {
	return aukc.ref, nil
}

func (aukc AllowedUserKeyConfigAttributes) InternalWithRef(ref terra.Reference) AllowedUserKeyConfigAttributes {
	return AllowedUserKeyConfigAttributes{ref: ref}
}

func (aukc AllowedUserKeyConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aukc.ref.InternalTokens()
}

func (aukc AllowedUserKeyConfigAttributes) Lengths() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](aukc.ref.Append("lengths"))
}

func (aukc AllowedUserKeyConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aukc.ref.Append("type"))
}

type AllowedUserKeyConfigState struct {
	Lengths []float64 `json:"lengths"`
	Type    string    `json:"type"`
}
