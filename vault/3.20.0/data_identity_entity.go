// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	dataidentityentity "github.com/golingon/terraproviders/vault/3.20.0/dataidentityentity"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataIdentityEntity creates a new instance of [DataIdentityEntity].
func NewDataIdentityEntity(name string, args DataIdentityEntityArgs) *DataIdentityEntity {
	return &DataIdentityEntity{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataIdentityEntity)(nil)

// DataIdentityEntity represents the Terraform data resource vault_identity_entity.
type DataIdentityEntity struct {
	Name string
	Args DataIdentityEntityArgs
}

// DataSource returns the Terraform object type for [DataIdentityEntity].
func (ie *DataIdentityEntity) DataSource() string {
	return "vault_identity_entity"
}

// LocalName returns the local name for [DataIdentityEntity].
func (ie *DataIdentityEntity) LocalName() string {
	return ie.Name
}

// Configuration returns the configuration (args) for [DataIdentityEntity].
func (ie *DataIdentityEntity) Configuration() interface{} {
	return ie.Args
}

// Attributes returns the attributes for [DataIdentityEntity].
func (ie *DataIdentityEntity) Attributes() dataIdentityEntityAttributes {
	return dataIdentityEntityAttributes{ref: terra.ReferenceDataResource(ie)}
}

// DataIdentityEntityArgs contains the configurations for vault_identity_entity.
type DataIdentityEntityArgs struct {
	// AliasId: string, optional
	AliasId terra.StringValue `hcl:"alias_id,attr"`
	// AliasMountAccessor: string, optional
	AliasMountAccessor terra.StringValue `hcl:"alias_mount_accessor,attr"`
	// AliasName: string, optional
	AliasName terra.StringValue `hcl:"alias_name,attr"`
	// EntityId: string, optional
	EntityId terra.StringValue `hcl:"entity_id,attr"`
	// EntityName: string, optional
	EntityName terra.StringValue `hcl:"entity_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Aliases: min=0
	Aliases []dataidentityentity.Aliases `hcl:"aliases,block" validate:"min=0"`
}
type dataIdentityEntityAttributes struct {
	ref terra.Reference
}

// AliasId returns a reference to field alias_id of vault_identity_entity.
func (ie dataIdentityEntityAttributes) AliasId() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("alias_id"))
}

// AliasMountAccessor returns a reference to field alias_mount_accessor of vault_identity_entity.
func (ie dataIdentityEntityAttributes) AliasMountAccessor() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("alias_mount_accessor"))
}

// AliasName returns a reference to field alias_name of vault_identity_entity.
func (ie dataIdentityEntityAttributes) AliasName() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("alias_name"))
}

// CreationTime returns a reference to field creation_time of vault_identity_entity.
func (ie dataIdentityEntityAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("creation_time"))
}

// DataJson returns a reference to field data_json of vault_identity_entity.
func (ie dataIdentityEntityAttributes) DataJson() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("data_json"))
}

// DirectGroupIds returns a reference to field direct_group_ids of vault_identity_entity.
func (ie dataIdentityEntityAttributes) DirectGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ie.ref.Append("direct_group_ids"))
}

// Disabled returns a reference to field disabled of vault_identity_entity.
func (ie dataIdentityEntityAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(ie.ref.Append("disabled"))
}

// EntityId returns a reference to field entity_id of vault_identity_entity.
func (ie dataIdentityEntityAttributes) EntityId() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("entity_id"))
}

// EntityName returns a reference to field entity_name of vault_identity_entity.
func (ie dataIdentityEntityAttributes) EntityName() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("entity_name"))
}

// GroupIds returns a reference to field group_ids of vault_identity_entity.
func (ie dataIdentityEntityAttributes) GroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ie.ref.Append("group_ids"))
}

// Id returns a reference to field id of vault_identity_entity.
func (ie dataIdentityEntityAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("id"))
}

// InheritedGroupIds returns a reference to field inherited_group_ids of vault_identity_entity.
func (ie dataIdentityEntityAttributes) InheritedGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ie.ref.Append("inherited_group_ids"))
}

// LastUpdateTime returns a reference to field last_update_time of vault_identity_entity.
func (ie dataIdentityEntityAttributes) LastUpdateTime() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("last_update_time"))
}

// MergedEntityIds returns a reference to field merged_entity_ids of vault_identity_entity.
func (ie dataIdentityEntityAttributes) MergedEntityIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ie.ref.Append("merged_entity_ids"))
}

// Metadata returns a reference to field metadata of vault_identity_entity.
func (ie dataIdentityEntityAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ie.ref.Append("metadata"))
}

// Namespace returns a reference to field namespace of vault_identity_entity.
func (ie dataIdentityEntityAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("namespace"))
}

// NamespaceId returns a reference to field namespace_id of vault_identity_entity.
func (ie dataIdentityEntityAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("namespace_id"))
}

// Policies returns a reference to field policies of vault_identity_entity.
func (ie dataIdentityEntityAttributes) Policies() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ie.ref.Append("policies"))
}

func (ie dataIdentityEntityAttributes) Aliases() terra.SetValue[dataidentityentity.AliasesAttributes] {
	return terra.ReferenceAsSet[dataidentityentity.AliasesAttributes](ie.ref.Append("aliases"))
}
