// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	azuresecretbackendrole "github.com/golingon/terraproviders/vault/3.15.2/azuresecretbackendrole"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewAzureSecretBackendRole creates a new instance of [AzureSecretBackendRole].
func NewAzureSecretBackendRole(name string, args AzureSecretBackendRoleArgs) *AzureSecretBackendRole {
	return &AzureSecretBackendRole{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AzureSecretBackendRole)(nil)

// AzureSecretBackendRole represents the Terraform resource vault_azure_secret_backend_role.
type AzureSecretBackendRole struct {
	Name      string
	Args      AzureSecretBackendRoleArgs
	state     *azureSecretBackendRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AzureSecretBackendRole].
func (asbr *AzureSecretBackendRole) Type() string {
	return "vault_azure_secret_backend_role"
}

// LocalName returns the local name for [AzureSecretBackendRole].
func (asbr *AzureSecretBackendRole) LocalName() string {
	return asbr.Name
}

// Configuration returns the configuration (args) for [AzureSecretBackendRole].
func (asbr *AzureSecretBackendRole) Configuration() interface{} {
	return asbr.Args
}

// DependOn is used for other resources to depend on [AzureSecretBackendRole].
func (asbr *AzureSecretBackendRole) DependOn() terra.Reference {
	return terra.ReferenceResource(asbr)
}

// Dependencies returns the list of resources [AzureSecretBackendRole] depends_on.
func (asbr *AzureSecretBackendRole) Dependencies() terra.Dependencies {
	return asbr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AzureSecretBackendRole].
func (asbr *AzureSecretBackendRole) LifecycleManagement() *terra.Lifecycle {
	return asbr.Lifecycle
}

// Attributes returns the attributes for [AzureSecretBackendRole].
func (asbr *AzureSecretBackendRole) Attributes() azureSecretBackendRoleAttributes {
	return azureSecretBackendRoleAttributes{ref: terra.ReferenceResource(asbr)}
}

// ImportState imports the given attribute values into [AzureSecretBackendRole]'s state.
func (asbr *AzureSecretBackendRole) ImportState(av io.Reader) error {
	asbr.state = &azureSecretBackendRoleState{}
	if err := json.NewDecoder(av).Decode(asbr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asbr.Type(), asbr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AzureSecretBackendRole] has state.
func (asbr *AzureSecretBackendRole) State() (*azureSecretBackendRoleState, bool) {
	return asbr.state, asbr.state != nil
}

// StateMust returns the state for [AzureSecretBackendRole]. Panics if the state is nil.
func (asbr *AzureSecretBackendRole) StateMust() *azureSecretBackendRoleState {
	if asbr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asbr.Type(), asbr.LocalName()))
	}
	return asbr.state
}

// AzureSecretBackendRoleArgs contains the configurations for vault_azure_secret_backend_role.
type AzureSecretBackendRoleArgs struct {
	// ApplicationObjectId: string, optional
	ApplicationObjectId terra.StringValue `hcl:"application_object_id,attr"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxTtl: string, optional
	MaxTtl terra.StringValue `hcl:"max_ttl,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Ttl: string, optional
	Ttl terra.StringValue `hcl:"ttl,attr"`
	// AzureGroups: min=0
	AzureGroups []azuresecretbackendrole.AzureGroups `hcl:"azure_groups,block" validate:"min=0"`
	// AzureRoles: min=0
	AzureRoles []azuresecretbackendrole.AzureRoles `hcl:"azure_roles,block" validate:"min=0"`
}
type azureSecretBackendRoleAttributes struct {
	ref terra.Reference
}

// ApplicationObjectId returns a reference to field application_object_id of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) ApplicationObjectId() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("application_object_id"))
}

// Backend returns a reference to field backend of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("backend"))
}

// Description returns a reference to field description of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("description"))
}

// Id returns a reference to field id of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("id"))
}

// MaxTtl returns a reference to field max_ttl of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) MaxTtl() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("max_ttl"))
}

// Namespace returns a reference to field namespace of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("namespace"))
}

// Role returns a reference to field role of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("role"))
}

// Ttl returns a reference to field ttl of vault_azure_secret_backend_role.
func (asbr azureSecretBackendRoleAttributes) Ttl() terra.StringValue {
	return terra.ReferenceAsString(asbr.ref.Append("ttl"))
}

func (asbr azureSecretBackendRoleAttributes) AzureGroups() terra.SetValue[azuresecretbackendrole.AzureGroupsAttributes] {
	return terra.ReferenceAsSet[azuresecretbackendrole.AzureGroupsAttributes](asbr.ref.Append("azure_groups"))
}

func (asbr azureSecretBackendRoleAttributes) AzureRoles() terra.SetValue[azuresecretbackendrole.AzureRolesAttributes] {
	return terra.ReferenceAsSet[azuresecretbackendrole.AzureRolesAttributes](asbr.ref.Append("azure_roles"))
}

type azureSecretBackendRoleState struct {
	ApplicationObjectId string                                    `json:"application_object_id"`
	Backend             string                                    `json:"backend"`
	Description         string                                    `json:"description"`
	Id                  string                                    `json:"id"`
	MaxTtl              string                                    `json:"max_ttl"`
	Namespace           string                                    `json:"namespace"`
	Role                string                                    `json:"role"`
	Ttl                 string                                    `json:"ttl"`
	AzureGroups         []azuresecretbackendrole.AzureGroupsState `json:"azure_groups"`
	AzureRoles          []azuresecretbackendrole.AzureRolesState  `json:"azure_roles"`
}
