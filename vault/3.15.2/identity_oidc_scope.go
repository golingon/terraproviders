// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIdentityOidcScope creates a new instance of [IdentityOidcScope].
func NewIdentityOidcScope(name string, args IdentityOidcScopeArgs) *IdentityOidcScope {
	return &IdentityOidcScope{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityOidcScope)(nil)

// IdentityOidcScope represents the Terraform resource vault_identity_oidc_scope.
type IdentityOidcScope struct {
	Name      string
	Args      IdentityOidcScopeArgs
	state     *identityOidcScopeState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityOidcScope].
func (ios *IdentityOidcScope) Type() string {
	return "vault_identity_oidc_scope"
}

// LocalName returns the local name for [IdentityOidcScope].
func (ios *IdentityOidcScope) LocalName() string {
	return ios.Name
}

// Configuration returns the configuration (args) for [IdentityOidcScope].
func (ios *IdentityOidcScope) Configuration() interface{} {
	return ios.Args
}

// DependOn is used for other resources to depend on [IdentityOidcScope].
func (ios *IdentityOidcScope) DependOn() terra.Reference {
	return terra.ReferenceResource(ios)
}

// Dependencies returns the list of resources [IdentityOidcScope] depends_on.
func (ios *IdentityOidcScope) Dependencies() terra.Dependencies {
	return ios.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityOidcScope].
func (ios *IdentityOidcScope) LifecycleManagement() *terra.Lifecycle {
	return ios.Lifecycle
}

// Attributes returns the attributes for [IdentityOidcScope].
func (ios *IdentityOidcScope) Attributes() identityOidcScopeAttributes {
	return identityOidcScopeAttributes{ref: terra.ReferenceResource(ios)}
}

// ImportState imports the given attribute values into [IdentityOidcScope]'s state.
func (ios *IdentityOidcScope) ImportState(av io.Reader) error {
	ios.state = &identityOidcScopeState{}
	if err := json.NewDecoder(av).Decode(ios.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ios.Type(), ios.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityOidcScope] has state.
func (ios *IdentityOidcScope) State() (*identityOidcScopeState, bool) {
	return ios.state, ios.state != nil
}

// StateMust returns the state for [IdentityOidcScope]. Panics if the state is nil.
func (ios *IdentityOidcScope) StateMust() *identityOidcScopeState {
	if ios.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ios.Type(), ios.LocalName()))
	}
	return ios.state
}

// IdentityOidcScopeArgs contains the configurations for vault_identity_oidc_scope.
type IdentityOidcScopeArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Template: string, optional
	Template terra.StringValue `hcl:"template,attr"`
}
type identityOidcScopeAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of vault_identity_oidc_scope.
func (ios identityOidcScopeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ios.ref.Append("description"))
}

// Id returns a reference to field id of vault_identity_oidc_scope.
func (ios identityOidcScopeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ios.ref.Append("id"))
}

// Name returns a reference to field name of vault_identity_oidc_scope.
func (ios identityOidcScopeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ios.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_oidc_scope.
func (ios identityOidcScopeAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ios.ref.Append("namespace"))
}

// Template returns a reference to field template of vault_identity_oidc_scope.
func (ios identityOidcScopeAttributes) Template() terra.StringValue {
	return terra.ReferenceAsString(ios.ref.Append("template"))
}

type identityOidcScopeState struct {
	Description string `json:"description"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Namespace   string `json:"namespace"`
	Template    string `json:"template"`
}
