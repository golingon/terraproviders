// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIdentityOidcRole creates a new instance of [IdentityOidcRole].
func NewIdentityOidcRole(name string, args IdentityOidcRoleArgs) *IdentityOidcRole {
	return &IdentityOidcRole{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityOidcRole)(nil)

// IdentityOidcRole represents the Terraform resource vault_identity_oidc_role.
type IdentityOidcRole struct {
	Name      string
	Args      IdentityOidcRoleArgs
	state     *identityOidcRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityOidcRole].
func (ior *IdentityOidcRole) Type() string {
	return "vault_identity_oidc_role"
}

// LocalName returns the local name for [IdentityOidcRole].
func (ior *IdentityOidcRole) LocalName() string {
	return ior.Name
}

// Configuration returns the configuration (args) for [IdentityOidcRole].
func (ior *IdentityOidcRole) Configuration() interface{} {
	return ior.Args
}

// DependOn is used for other resources to depend on [IdentityOidcRole].
func (ior *IdentityOidcRole) DependOn() terra.Reference {
	return terra.ReferenceResource(ior)
}

// Dependencies returns the list of resources [IdentityOidcRole] depends_on.
func (ior *IdentityOidcRole) Dependencies() terra.Dependencies {
	return ior.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityOidcRole].
func (ior *IdentityOidcRole) LifecycleManagement() *terra.Lifecycle {
	return ior.Lifecycle
}

// Attributes returns the attributes for [IdentityOidcRole].
func (ior *IdentityOidcRole) Attributes() identityOidcRoleAttributes {
	return identityOidcRoleAttributes{ref: terra.ReferenceResource(ior)}
}

// ImportState imports the given attribute values into [IdentityOidcRole]'s state.
func (ior *IdentityOidcRole) ImportState(av io.Reader) error {
	ior.state = &identityOidcRoleState{}
	if err := json.NewDecoder(av).Decode(ior.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ior.Type(), ior.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityOidcRole] has state.
func (ior *IdentityOidcRole) State() (*identityOidcRoleState, bool) {
	return ior.state, ior.state != nil
}

// StateMust returns the state for [IdentityOidcRole]. Panics if the state is nil.
func (ior *IdentityOidcRole) StateMust() *identityOidcRoleState {
	if ior.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ior.Type(), ior.LocalName()))
	}
	return ior.state
}

// IdentityOidcRoleArgs contains the configurations for vault_identity_oidc_role.
type IdentityOidcRoleArgs struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Template: string, optional
	Template terra.StringValue `hcl:"template,attr"`
	// Ttl: number, optional
	Ttl terra.NumberValue `hcl:"ttl,attr"`
}
type identityOidcRoleAttributes struct {
	ref terra.Reference
}

// ClientId returns a reference to field client_id of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ior.ref.Append("client_id"))
}

// Id returns a reference to field id of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ior.ref.Append("id"))
}

// Key returns a reference to field key of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ior.ref.Append("key"))
}

// Name returns a reference to field name of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ior.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ior.ref.Append("namespace"))
}

// Template returns a reference to field template of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) Template() terra.StringValue {
	return terra.ReferenceAsString(ior.ref.Append("template"))
}

// Ttl returns a reference to field ttl of vault_identity_oidc_role.
func (ior identityOidcRoleAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(ior.ref.Append("ttl"))
}

type identityOidcRoleState struct {
	ClientId  string  `json:"client_id"`
	Id        string  `json:"id"`
	Key       string  `json:"key"`
	Name      string  `json:"name"`
	Namespace string  `json:"namespace"`
	Template  string  `json:"template"`
	Ttl       float64 `json:"ttl"`
}
