// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDatabaseSecretBackendStaticRole creates a new instance of [DatabaseSecretBackendStaticRole].
func NewDatabaseSecretBackendStaticRole(name string, args DatabaseSecretBackendStaticRoleArgs) *DatabaseSecretBackendStaticRole {
	return &DatabaseSecretBackendStaticRole{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DatabaseSecretBackendStaticRole)(nil)

// DatabaseSecretBackendStaticRole represents the Terraform resource vault_database_secret_backend_static_role.
type DatabaseSecretBackendStaticRole struct {
	Name      string
	Args      DatabaseSecretBackendStaticRoleArgs
	state     *databaseSecretBackendStaticRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DatabaseSecretBackendStaticRole].
func (dsbsr *DatabaseSecretBackendStaticRole) Type() string {
	return "vault_database_secret_backend_static_role"
}

// LocalName returns the local name for [DatabaseSecretBackendStaticRole].
func (dsbsr *DatabaseSecretBackendStaticRole) LocalName() string {
	return dsbsr.Name
}

// Configuration returns the configuration (args) for [DatabaseSecretBackendStaticRole].
func (dsbsr *DatabaseSecretBackendStaticRole) Configuration() interface{} {
	return dsbsr.Args
}

// DependOn is used for other resources to depend on [DatabaseSecretBackendStaticRole].
func (dsbsr *DatabaseSecretBackendStaticRole) DependOn() terra.Reference {
	return terra.ReferenceResource(dsbsr)
}

// Dependencies returns the list of resources [DatabaseSecretBackendStaticRole] depends_on.
func (dsbsr *DatabaseSecretBackendStaticRole) Dependencies() terra.Dependencies {
	return dsbsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DatabaseSecretBackendStaticRole].
func (dsbsr *DatabaseSecretBackendStaticRole) LifecycleManagement() *terra.Lifecycle {
	return dsbsr.Lifecycle
}

// Attributes returns the attributes for [DatabaseSecretBackendStaticRole].
func (dsbsr *DatabaseSecretBackendStaticRole) Attributes() databaseSecretBackendStaticRoleAttributes {
	return databaseSecretBackendStaticRoleAttributes{ref: terra.ReferenceResource(dsbsr)}
}

// ImportState imports the given attribute values into [DatabaseSecretBackendStaticRole]'s state.
func (dsbsr *DatabaseSecretBackendStaticRole) ImportState(av io.Reader) error {
	dsbsr.state = &databaseSecretBackendStaticRoleState{}
	if err := json.NewDecoder(av).Decode(dsbsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dsbsr.Type(), dsbsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DatabaseSecretBackendStaticRole] has state.
func (dsbsr *DatabaseSecretBackendStaticRole) State() (*databaseSecretBackendStaticRoleState, bool) {
	return dsbsr.state, dsbsr.state != nil
}

// StateMust returns the state for [DatabaseSecretBackendStaticRole]. Panics if the state is nil.
func (dsbsr *DatabaseSecretBackendStaticRole) StateMust() *databaseSecretBackendStaticRoleState {
	if dsbsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dsbsr.Type(), dsbsr.LocalName()))
	}
	return dsbsr.state
}

// DatabaseSecretBackendStaticRoleArgs contains the configurations for vault_database_secret_backend_static_role.
type DatabaseSecretBackendStaticRoleArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// DbName: string, required
	DbName terra.StringValue `hcl:"db_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RotationPeriod: number, required
	RotationPeriod terra.NumberValue `hcl:"rotation_period,attr" validate:"required"`
	// RotationStatements: list of string, optional
	RotationStatements terra.ListValue[terra.StringValue] `hcl:"rotation_statements,attr"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}
type databaseSecretBackendStaticRoleAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(dsbsr.ref.Append("backend"))
}

// DbName returns a reference to field db_name of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) DbName() terra.StringValue {
	return terra.ReferenceAsString(dsbsr.ref.Append("db_name"))
}

// Id returns a reference to field id of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dsbsr.ref.Append("id"))
}

// Name returns a reference to field name of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dsbsr.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(dsbsr.ref.Append("namespace"))
}

// RotationPeriod returns a reference to field rotation_period of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) RotationPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(dsbsr.ref.Append("rotation_period"))
}

// RotationStatements returns a reference to field rotation_statements of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) RotationStatements() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dsbsr.ref.Append("rotation_statements"))
}

// Username returns a reference to field username of vault_database_secret_backend_static_role.
func (dsbsr databaseSecretBackendStaticRoleAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(dsbsr.ref.Append("username"))
}

type databaseSecretBackendStaticRoleState struct {
	Backend            string   `json:"backend"`
	DbName             string   `json:"db_name"`
	Id                 string   `json:"id"`
	Name               string   `json:"name"`
	Namespace          string   `json:"namespace"`
	RotationPeriod     float64  `json:"rotation_period"`
	RotationStatements []string `json:"rotation_statements"`
	Username           string   `json:"username"`
}
