// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_database_secret_backend_static_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_database_secret_backend_static_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultDatabaseSecretBackendStaticRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vdsbsr *Resource) Type() string {
	return "vault_database_secret_backend_static_role"
}

// LocalName returns the local name for [Resource].
func (vdsbsr *Resource) LocalName() string {
	return vdsbsr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vdsbsr *Resource) Configuration() interface{} {
	return vdsbsr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vdsbsr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vdsbsr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vdsbsr *Resource) Dependencies() terra.Dependencies {
	return vdsbsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vdsbsr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vdsbsr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vdsbsr *Resource) Attributes() vaultDatabaseSecretBackendStaticRoleAttributes {
	return vaultDatabaseSecretBackendStaticRoleAttributes{ref: terra.ReferenceResource(vdsbsr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vdsbsr *Resource) ImportState(state io.Reader) error {
	vdsbsr.state = &vaultDatabaseSecretBackendStaticRoleState{}
	if err := json.NewDecoder(state).Decode(vdsbsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vdsbsr.Type(), vdsbsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vdsbsr *Resource) State() (*vaultDatabaseSecretBackendStaticRoleState, bool) {
	return vdsbsr.state, vdsbsr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vdsbsr *Resource) StateMust() *vaultDatabaseSecretBackendStaticRoleState {
	if vdsbsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vdsbsr.Type(), vdsbsr.LocalName()))
	}
	return vdsbsr.state
}

// Args contains the configurations for vault_database_secret_backend_static_role.
type Args struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// DbName: string, required
	DbName terra.StringValue `hcl:"db_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RotationPeriod: number, optional
	RotationPeriod terra.NumberValue `hcl:"rotation_period,attr"`
	// RotationSchedule: string, optional
	RotationSchedule terra.StringValue `hcl:"rotation_schedule,attr"`
	// RotationStatements: list of string, optional
	RotationStatements terra.ListValue[terra.StringValue] `hcl:"rotation_statements,attr"`
	// RotationWindow: number, optional
	RotationWindow terra.NumberValue `hcl:"rotation_window,attr"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type vaultDatabaseSecretBackendStaticRoleAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("backend"))
}

// DbName returns a reference to field db_name of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) DbName() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("db_name"))
}

// Id returns a reference to field id of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("id"))
}

// Name returns a reference to field name of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("namespace"))
}

// RotationPeriod returns a reference to field rotation_period of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) RotationPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(vdsbsr.ref.Append("rotation_period"))
}

// RotationSchedule returns a reference to field rotation_schedule of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) RotationSchedule() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("rotation_schedule"))
}

// RotationStatements returns a reference to field rotation_statements of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) RotationStatements() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vdsbsr.ref.Append("rotation_statements"))
}

// RotationWindow returns a reference to field rotation_window of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) RotationWindow() terra.NumberValue {
	return terra.ReferenceAsNumber(vdsbsr.ref.Append("rotation_window"))
}

// Username returns a reference to field username of vault_database_secret_backend_static_role.
func (vdsbsr vaultDatabaseSecretBackendStaticRoleAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(vdsbsr.ref.Append("username"))
}

type vaultDatabaseSecretBackendStaticRoleState struct {
	Backend            string   `json:"backend"`
	DbName             string   `json:"db_name"`
	Id                 string   `json:"id"`
	Name               string   `json:"name"`
	Namespace          string   `json:"namespace"`
	RotationPeriod     float64  `json:"rotation_period"`
	RotationSchedule   string   `json:"rotation_schedule"`
	RotationStatements []string `json:"rotation_statements"`
	RotationWindow     float64  `json:"rotation_window"`
	Username           string   `json:"username"`
}
