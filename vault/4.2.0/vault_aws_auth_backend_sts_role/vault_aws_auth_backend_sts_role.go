// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_aws_auth_backend_sts_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_aws_auth_backend_sts_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultAwsAuthBackendStsRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vaabsr *Resource) Type() string {
	return "vault_aws_auth_backend_sts_role"
}

// LocalName returns the local name for [Resource].
func (vaabsr *Resource) LocalName() string {
	return vaabsr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vaabsr *Resource) Configuration() interface{} {
	return vaabsr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vaabsr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vaabsr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vaabsr *Resource) Dependencies() terra.Dependencies {
	return vaabsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vaabsr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vaabsr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vaabsr *Resource) Attributes() vaultAwsAuthBackendStsRoleAttributes {
	return vaultAwsAuthBackendStsRoleAttributes{ref: terra.ReferenceResource(vaabsr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vaabsr *Resource) ImportState(state io.Reader) error {
	vaabsr.state = &vaultAwsAuthBackendStsRoleState{}
	if err := json.NewDecoder(state).Decode(vaabsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaabsr.Type(), vaabsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vaabsr *Resource) State() (*vaultAwsAuthBackendStsRoleState, bool) {
	return vaabsr.state, vaabsr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vaabsr *Resource) StateMust() *vaultAwsAuthBackendStsRoleState {
	if vaabsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaabsr.Type(), vaabsr.LocalName()))
	}
	return vaabsr.state
}

// Args contains the configurations for vault_aws_auth_backend_sts_role.
type Args struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// StsRole: string, required
	StsRole terra.StringValue `hcl:"sts_role,attr" validate:"required"`
}

type vaultAwsAuthBackendStsRoleAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of vault_aws_auth_backend_sts_role.
func (vaabsr vaultAwsAuthBackendStsRoleAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(vaabsr.ref.Append("account_id"))
}

// Backend returns a reference to field backend of vault_aws_auth_backend_sts_role.
func (vaabsr vaultAwsAuthBackendStsRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vaabsr.ref.Append("backend"))
}

// Id returns a reference to field id of vault_aws_auth_backend_sts_role.
func (vaabsr vaultAwsAuthBackendStsRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaabsr.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_sts_role.
func (vaabsr vaultAwsAuthBackendStsRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vaabsr.ref.Append("namespace"))
}

// StsRole returns a reference to field sts_role of vault_aws_auth_backend_sts_role.
func (vaabsr vaultAwsAuthBackendStsRoleAttributes) StsRole() terra.StringValue {
	return terra.ReferenceAsString(vaabsr.ref.Append("sts_role"))
}

type vaultAwsAuthBackendStsRoleState struct {
	AccountId string `json:"account_id"`
	Backend   string `json:"backend"`
	Id        string `json:"id"`
	Namespace string `json:"namespace"`
	StsRole   string `json:"sts_role"`
}
