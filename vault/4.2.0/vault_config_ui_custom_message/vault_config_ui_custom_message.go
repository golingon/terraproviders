// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_config_ui_custom_message

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_config_ui_custom_message.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultConfigUiCustomMessageState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vcucm *Resource) Type() string {
	return "vault_config_ui_custom_message"
}

// LocalName returns the local name for [Resource].
func (vcucm *Resource) LocalName() string {
	return vcucm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vcucm *Resource) Configuration() interface{} {
	return vcucm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vcucm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vcucm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vcucm *Resource) Dependencies() terra.Dependencies {
	return vcucm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vcucm *Resource) LifecycleManagement() *terra.Lifecycle {
	return vcucm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vcucm *Resource) Attributes() vaultConfigUiCustomMessageAttributes {
	return vaultConfigUiCustomMessageAttributes{ref: terra.ReferenceResource(vcucm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vcucm *Resource) ImportState(state io.Reader) error {
	vcucm.state = &vaultConfigUiCustomMessageState{}
	if err := json.NewDecoder(state).Decode(vcucm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vcucm.Type(), vcucm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vcucm *Resource) State() (*vaultConfigUiCustomMessageState, bool) {
	return vcucm.state, vcucm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vcucm *Resource) StateMust() *vaultConfigUiCustomMessageState {
	if vcucm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vcucm.Type(), vcucm.LocalName()))
	}
	return vcucm.state
}

// Args contains the configurations for vault_config_ui_custom_message.
type Args struct {
	// Authenticated: bool, optional
	Authenticated terra.BoolValue `hcl:"authenticated,attr"`
	// EndTime: string, optional
	EndTime terra.StringValue `hcl:"end_time,attr"`
	// MessageBase64: string, required
	MessageBase64 terra.StringValue `hcl:"message_base64,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Options: map of string, optional
	Options terra.MapValue[terra.StringValue] `hcl:"options,attr"`
	// StartTime: string, required
	StartTime terra.StringValue `hcl:"start_time,attr" validate:"required"`
	// Title: string, required
	Title terra.StringValue `hcl:"title,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Link: optional
	Link *Link `hcl:"link,block"`
}

type vaultConfigUiCustomMessageAttributes struct {
	ref terra.Reference
}

// Authenticated returns a reference to field authenticated of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) Authenticated() terra.BoolValue {
	return terra.ReferenceAsBool(vcucm.ref.Append("authenticated"))
}

// EndTime returns a reference to field end_time of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("end_time"))
}

// Id returns a reference to field id of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("id"))
}

// MessageBase64 returns a reference to field message_base64 of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) MessageBase64() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("message_base64"))
}

// Namespace returns a reference to field namespace of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("namespace"))
}

// Options returns a reference to field options of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) Options() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vcucm.ref.Append("options"))
}

// StartTime returns a reference to field start_time of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("start_time"))
}

// Title returns a reference to field title of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("title"))
}

// Type returns a reference to field type of vault_config_ui_custom_message.
func (vcucm vaultConfigUiCustomMessageAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(vcucm.ref.Append("type"))
}

func (vcucm vaultConfigUiCustomMessageAttributes) Link() terra.SetValue[LinkAttributes] {
	return terra.ReferenceAsSet[LinkAttributes](vcucm.ref.Append("link"))
}

type vaultConfigUiCustomMessageState struct {
	Authenticated bool              `json:"authenticated"`
	EndTime       string            `json:"end_time"`
	Id            string            `json:"id"`
	MessageBase64 string            `json:"message_base64"`
	Namespace     string            `json:"namespace"`
	Options       map[string]string `json:"options"`
	StartTime     string            `json:"start_time"`
	Title         string            `json:"title"`
	Type          string            `json:"type"`
	Link          []LinkState       `json:"link"`
}
