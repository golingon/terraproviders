// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_aws_auth_backend_cert

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_aws_auth_backend_cert.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultAwsAuthBackendCertState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vaabc *Resource) Type() string {
	return "vault_aws_auth_backend_cert"
}

// LocalName returns the local name for [Resource].
func (vaabc *Resource) LocalName() string {
	return vaabc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vaabc *Resource) Configuration() interface{} {
	return vaabc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vaabc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vaabc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vaabc *Resource) Dependencies() terra.Dependencies {
	return vaabc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vaabc *Resource) LifecycleManagement() *terra.Lifecycle {
	return vaabc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vaabc *Resource) Attributes() vaultAwsAuthBackendCertAttributes {
	return vaultAwsAuthBackendCertAttributes{ref: terra.ReferenceResource(vaabc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vaabc *Resource) ImportState(state io.Reader) error {
	vaabc.state = &vaultAwsAuthBackendCertState{}
	if err := json.NewDecoder(state).Decode(vaabc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaabc.Type(), vaabc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vaabc *Resource) State() (*vaultAwsAuthBackendCertState, bool) {
	return vaabc.state, vaabc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vaabc *Resource) StateMust() *vaultAwsAuthBackendCertState {
	if vaabc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaabc.Type(), vaabc.LocalName()))
	}
	return vaabc.state
}

// Args contains the configurations for vault_aws_auth_backend_cert.
type Args struct {
	// AwsPublicCert: string, required
	AwsPublicCert terra.StringValue `hcl:"aws_public_cert,attr" validate:"required"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// CertName: string, required
	CertName terra.StringValue `hcl:"cert_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type vaultAwsAuthBackendCertAttributes struct {
	ref terra.Reference
}

// AwsPublicCert returns a reference to field aws_public_cert of vault_aws_auth_backend_cert.
func (vaabc vaultAwsAuthBackendCertAttributes) AwsPublicCert() terra.StringValue {
	return terra.ReferenceAsString(vaabc.ref.Append("aws_public_cert"))
}

// Backend returns a reference to field backend of vault_aws_auth_backend_cert.
func (vaabc vaultAwsAuthBackendCertAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vaabc.ref.Append("backend"))
}

// CertName returns a reference to field cert_name of vault_aws_auth_backend_cert.
func (vaabc vaultAwsAuthBackendCertAttributes) CertName() terra.StringValue {
	return terra.ReferenceAsString(vaabc.ref.Append("cert_name"))
}

// Id returns a reference to field id of vault_aws_auth_backend_cert.
func (vaabc vaultAwsAuthBackendCertAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaabc.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_cert.
func (vaabc vaultAwsAuthBackendCertAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vaabc.ref.Append("namespace"))
}

// Type returns a reference to field type of vault_aws_auth_backend_cert.
func (vaabc vaultAwsAuthBackendCertAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(vaabc.ref.Append("type"))
}

type vaultAwsAuthBackendCertState struct {
	AwsPublicCert string `json:"aws_public_cert"`
	Backend       string `json:"backend"`
	CertName      string `json:"cert_name"`
	Id            string `json:"id"`
	Namespace     string `json:"namespace"`
	Type          string `json:"type"`
}
