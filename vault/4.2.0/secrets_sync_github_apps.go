// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSecretsSyncGithubApps creates a new instance of [SecretsSyncGithubApps].
func NewSecretsSyncGithubApps(name string, args SecretsSyncGithubAppsArgs) *SecretsSyncGithubApps {
	return &SecretsSyncGithubApps{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecretsSyncGithubApps)(nil)

// SecretsSyncGithubApps represents the Terraform resource vault_secrets_sync_github_apps.
type SecretsSyncGithubApps struct {
	Name      string
	Args      SecretsSyncGithubAppsArgs
	state     *secretsSyncGithubAppsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecretsSyncGithubApps].
func (ssga *SecretsSyncGithubApps) Type() string {
	return "vault_secrets_sync_github_apps"
}

// LocalName returns the local name for [SecretsSyncGithubApps].
func (ssga *SecretsSyncGithubApps) LocalName() string {
	return ssga.Name
}

// Configuration returns the configuration (args) for [SecretsSyncGithubApps].
func (ssga *SecretsSyncGithubApps) Configuration() interface{} {
	return ssga.Args
}

// DependOn is used for other resources to depend on [SecretsSyncGithubApps].
func (ssga *SecretsSyncGithubApps) DependOn() terra.Reference {
	return terra.ReferenceResource(ssga)
}

// Dependencies returns the list of resources [SecretsSyncGithubApps] depends_on.
func (ssga *SecretsSyncGithubApps) Dependencies() terra.Dependencies {
	return ssga.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecretsSyncGithubApps].
func (ssga *SecretsSyncGithubApps) LifecycleManagement() *terra.Lifecycle {
	return ssga.Lifecycle
}

// Attributes returns the attributes for [SecretsSyncGithubApps].
func (ssga *SecretsSyncGithubApps) Attributes() secretsSyncGithubAppsAttributes {
	return secretsSyncGithubAppsAttributes{ref: terra.ReferenceResource(ssga)}
}

// ImportState imports the given attribute values into [SecretsSyncGithubApps]'s state.
func (ssga *SecretsSyncGithubApps) ImportState(av io.Reader) error {
	ssga.state = &secretsSyncGithubAppsState{}
	if err := json.NewDecoder(av).Decode(ssga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssga.Type(), ssga.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecretsSyncGithubApps] has state.
func (ssga *SecretsSyncGithubApps) State() (*secretsSyncGithubAppsState, bool) {
	return ssga.state, ssga.state != nil
}

// StateMust returns the state for [SecretsSyncGithubApps]. Panics if the state is nil.
func (ssga *SecretsSyncGithubApps) StateMust() *secretsSyncGithubAppsState {
	if ssga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssga.Type(), ssga.LocalName()))
	}
	return ssga.state
}

// SecretsSyncGithubAppsArgs contains the configurations for vault_secrets_sync_github_apps.
type SecretsSyncGithubAppsArgs struct {
	// AppId: number, required
	AppId terra.NumberValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// PrivateKey: string, required
	PrivateKey terra.StringValue `hcl:"private_key,attr" validate:"required"`
}
type secretsSyncGithubAppsAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of vault_secrets_sync_github_apps.
func (ssga secretsSyncGithubAppsAttributes) AppId() terra.NumberValue {
	return terra.ReferenceAsNumber(ssga.ref.Append("app_id"))
}

// Fingerprint returns a reference to field fingerprint of vault_secrets_sync_github_apps.
func (ssga secretsSyncGithubAppsAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(ssga.ref.Append("fingerprint"))
}

// Id returns a reference to field id of vault_secrets_sync_github_apps.
func (ssga secretsSyncGithubAppsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssga.ref.Append("id"))
}

// Name returns a reference to field name of vault_secrets_sync_github_apps.
func (ssga secretsSyncGithubAppsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ssga.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_secrets_sync_github_apps.
func (ssga secretsSyncGithubAppsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ssga.ref.Append("namespace"))
}

// PrivateKey returns a reference to field private_key of vault_secrets_sync_github_apps.
func (ssga secretsSyncGithubAppsAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(ssga.ref.Append("private_key"))
}

type secretsSyncGithubAppsState struct {
	AppId       float64 `json:"app_id"`
	Fingerprint string  `json:"fingerprint"`
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Namespace   string  `json:"namespace"`
	PrivateKey  string  `json:"private_key"`
}
