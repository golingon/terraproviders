// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_aws_auth_backend_roletag_blacklist

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_aws_auth_backend_roletag_blacklist.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultAwsAuthBackendRoletagBlacklistState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vaabrb *Resource) Type() string {
	return "vault_aws_auth_backend_roletag_blacklist"
}

// LocalName returns the local name for [Resource].
func (vaabrb *Resource) LocalName() string {
	return vaabrb.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vaabrb *Resource) Configuration() interface{} {
	return vaabrb.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vaabrb *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vaabrb)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vaabrb *Resource) Dependencies() terra.Dependencies {
	return vaabrb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vaabrb *Resource) LifecycleManagement() *terra.Lifecycle {
	return vaabrb.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vaabrb *Resource) Attributes() vaultAwsAuthBackendRoletagBlacklistAttributes {
	return vaultAwsAuthBackendRoletagBlacklistAttributes{ref: terra.ReferenceResource(vaabrb)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vaabrb *Resource) ImportState(state io.Reader) error {
	vaabrb.state = &vaultAwsAuthBackendRoletagBlacklistState{}
	if err := json.NewDecoder(state).Decode(vaabrb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaabrb.Type(), vaabrb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vaabrb *Resource) State() (*vaultAwsAuthBackendRoletagBlacklistState, bool) {
	return vaabrb.state, vaabrb.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vaabrb *Resource) StateMust() *vaultAwsAuthBackendRoletagBlacklistState {
	if vaabrb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaabrb.Type(), vaabrb.LocalName()))
	}
	return vaabrb.state
}

// Args contains the configurations for vault_aws_auth_backend_roletag_blacklist.
type Args struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// DisablePeriodicTidy: bool, optional
	DisablePeriodicTidy terra.BoolValue `hcl:"disable_periodic_tidy,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// SafetyBuffer: number, optional
	SafetyBuffer terra.NumberValue `hcl:"safety_buffer,attr"`
}

type vaultAwsAuthBackendRoletagBlacklistAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_aws_auth_backend_roletag_blacklist.
func (vaabrb vaultAwsAuthBackendRoletagBlacklistAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vaabrb.ref.Append("backend"))
}

// DisablePeriodicTidy returns a reference to field disable_periodic_tidy of vault_aws_auth_backend_roletag_blacklist.
func (vaabrb vaultAwsAuthBackendRoletagBlacklistAttributes) DisablePeriodicTidy() terra.BoolValue {
	return terra.ReferenceAsBool(vaabrb.ref.Append("disable_periodic_tidy"))
}

// Id returns a reference to field id of vault_aws_auth_backend_roletag_blacklist.
func (vaabrb vaultAwsAuthBackendRoletagBlacklistAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaabrb.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_roletag_blacklist.
func (vaabrb vaultAwsAuthBackendRoletagBlacklistAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vaabrb.ref.Append("namespace"))
}

// SafetyBuffer returns a reference to field safety_buffer of vault_aws_auth_backend_roletag_blacklist.
func (vaabrb vaultAwsAuthBackendRoletagBlacklistAttributes) SafetyBuffer() terra.NumberValue {
	return terra.ReferenceAsNumber(vaabrb.ref.Append("safety_buffer"))
}

type vaultAwsAuthBackendRoletagBlacklistState struct {
	Backend             string  `json:"backend"`
	DisablePeriodicTidy bool    `json:"disable_periodic_tidy"`
	Id                  string  `json:"id"`
	Namespace           string  `json:"namespace"`
	SafetyBuffer        float64 `json:"safety_buffer"`
}
