// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_terraform_cloud_secret_creds

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_terraform_cloud_secret_creds.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultTerraformCloudSecretCredsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vtcsc *Resource) Type() string {
	return "vault_terraform_cloud_secret_creds"
}

// LocalName returns the local name for [Resource].
func (vtcsc *Resource) LocalName() string {
	return vtcsc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vtcsc *Resource) Configuration() interface{} {
	return vtcsc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vtcsc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vtcsc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vtcsc *Resource) Dependencies() terra.Dependencies {
	return vtcsc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vtcsc *Resource) LifecycleManagement() *terra.Lifecycle {
	return vtcsc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vtcsc *Resource) Attributes() vaultTerraformCloudSecretCredsAttributes {
	return vaultTerraformCloudSecretCredsAttributes{ref: terra.ReferenceResource(vtcsc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vtcsc *Resource) ImportState(state io.Reader) error {
	vtcsc.state = &vaultTerraformCloudSecretCredsState{}
	if err := json.NewDecoder(state).Decode(vtcsc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vtcsc.Type(), vtcsc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vtcsc *Resource) State() (*vaultTerraformCloudSecretCredsState, bool) {
	return vtcsc.state, vtcsc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vtcsc *Resource) StateMust() *vaultTerraformCloudSecretCredsState {
	if vtcsc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vtcsc.Type(), vtcsc.LocalName()))
	}
	return vtcsc.state
}

// Args contains the configurations for vault_terraform_cloud_secret_creds.
type Args struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
}

type vaultTerraformCloudSecretCredsAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("backend"))
}

// Id returns a reference to field id of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("id"))
}

// LeaseId returns a reference to field lease_id of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) LeaseId() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("lease_id"))
}

// Namespace returns a reference to field namespace of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("namespace"))
}

// Organization returns a reference to field organization of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) Organization() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("organization"))
}

// Role returns a reference to field role of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("role"))
}

// TeamId returns a reference to field team_id of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) TeamId() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("team_id"))
}

// Token returns a reference to field token of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) Token() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("token"))
}

// TokenId returns a reference to field token_id of vault_terraform_cloud_secret_creds.
func (vtcsc vaultTerraformCloudSecretCredsAttributes) TokenId() terra.StringValue {
	return terra.ReferenceAsString(vtcsc.ref.Append("token_id"))
}

type vaultTerraformCloudSecretCredsState struct {
	Backend      string `json:"backend"`
	Id           string `json:"id"`
	LeaseId      string `json:"lease_id"`
	Namespace    string `json:"namespace"`
	Organization string `json:"organization"`
	Role         string `json:"role"`
	TeamId       string `json:"team_id"`
	Token        string `json:"token"`
	TokenId      string `json:"token_id"`
}
