// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_pki_secret_backend_intermediate_set_signed

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_pki_secret_backend_intermediate_set_signed.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultPkiSecretBackendIntermediateSetSignedState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vpsbiss *Resource) Type() string {
	return "vault_pki_secret_backend_intermediate_set_signed"
}

// LocalName returns the local name for [Resource].
func (vpsbiss *Resource) LocalName() string {
	return vpsbiss.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vpsbiss *Resource) Configuration() interface{} {
	return vpsbiss.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vpsbiss *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vpsbiss)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vpsbiss *Resource) Dependencies() terra.Dependencies {
	return vpsbiss.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vpsbiss *Resource) LifecycleManagement() *terra.Lifecycle {
	return vpsbiss.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vpsbiss *Resource) Attributes() vaultPkiSecretBackendIntermediateSetSignedAttributes {
	return vaultPkiSecretBackendIntermediateSetSignedAttributes{ref: terra.ReferenceResource(vpsbiss)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vpsbiss *Resource) ImportState(state io.Reader) error {
	vpsbiss.state = &vaultPkiSecretBackendIntermediateSetSignedState{}
	if err := json.NewDecoder(state).Decode(vpsbiss.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vpsbiss.Type(), vpsbiss.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vpsbiss *Resource) State() (*vaultPkiSecretBackendIntermediateSetSignedState, bool) {
	return vpsbiss.state, vpsbiss.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vpsbiss *Resource) StateMust() *vaultPkiSecretBackendIntermediateSetSignedState {
	if vpsbiss.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vpsbiss.Type(), vpsbiss.LocalName()))
	}
	return vpsbiss.state
}

// Args contains the configurations for vault_pki_secret_backend_intermediate_set_signed.
type Args struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Certificate: string, required
	Certificate terra.StringValue `hcl:"certificate,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}

type vaultPkiSecretBackendIntermediateSetSignedAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_pki_secret_backend_intermediate_set_signed.
func (vpsbiss vaultPkiSecretBackendIntermediateSetSignedAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vpsbiss.ref.Append("backend"))
}

// Certificate returns a reference to field certificate of vault_pki_secret_backend_intermediate_set_signed.
func (vpsbiss vaultPkiSecretBackendIntermediateSetSignedAttributes) Certificate() terra.StringValue {
	return terra.ReferenceAsString(vpsbiss.ref.Append("certificate"))
}

// Id returns a reference to field id of vault_pki_secret_backend_intermediate_set_signed.
func (vpsbiss vaultPkiSecretBackendIntermediateSetSignedAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vpsbiss.ref.Append("id"))
}

// ImportedIssuers returns a reference to field imported_issuers of vault_pki_secret_backend_intermediate_set_signed.
func (vpsbiss vaultPkiSecretBackendIntermediateSetSignedAttributes) ImportedIssuers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vpsbiss.ref.Append("imported_issuers"))
}

// ImportedKeys returns a reference to field imported_keys of vault_pki_secret_backend_intermediate_set_signed.
func (vpsbiss vaultPkiSecretBackendIntermediateSetSignedAttributes) ImportedKeys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vpsbiss.ref.Append("imported_keys"))
}

// Namespace returns a reference to field namespace of vault_pki_secret_backend_intermediate_set_signed.
func (vpsbiss vaultPkiSecretBackendIntermediateSetSignedAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vpsbiss.ref.Append("namespace"))
}

type vaultPkiSecretBackendIntermediateSetSignedState struct {
	Backend         string   `json:"backend"`
	Certificate     string   `json:"certificate"`
	Id              string   `json:"id"`
	ImportedIssuers []string `json:"imported_issuers"`
	ImportedKeys    []string `json:"imported_keys"`
	Namespace       string   `json:"namespace"`
}
