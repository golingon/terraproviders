// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_kmip_secret_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_kmip_secret_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultKmipSecretRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vksr *Resource) Type() string {
	return "vault_kmip_secret_role"
}

// LocalName returns the local name for [Resource].
func (vksr *Resource) LocalName() string {
	return vksr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vksr *Resource) Configuration() interface{} {
	return vksr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vksr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vksr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vksr *Resource) Dependencies() terra.Dependencies {
	return vksr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vksr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vksr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vksr *Resource) Attributes() vaultKmipSecretRoleAttributes {
	return vaultKmipSecretRoleAttributes{ref: terra.ReferenceResource(vksr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vksr *Resource) ImportState(state io.Reader) error {
	vksr.state = &vaultKmipSecretRoleState{}
	if err := json.NewDecoder(state).Decode(vksr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vksr.Type(), vksr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vksr *Resource) State() (*vaultKmipSecretRoleState, bool) {
	return vksr.state, vksr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vksr *Resource) StateMust() *vaultKmipSecretRoleState {
	if vksr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vksr.Type(), vksr.LocalName()))
	}
	return vksr.state
}

// Args contains the configurations for vault_kmip_secret_role.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// OperationActivate: bool, optional
	OperationActivate terra.BoolValue `hcl:"operation_activate,attr"`
	// OperationAddAttribute: bool, optional
	OperationAddAttribute terra.BoolValue `hcl:"operation_add_attribute,attr"`
	// OperationAll: bool, optional
	OperationAll terra.BoolValue `hcl:"operation_all,attr"`
	// OperationCreate: bool, optional
	OperationCreate terra.BoolValue `hcl:"operation_create,attr"`
	// OperationDestroy: bool, optional
	OperationDestroy terra.BoolValue `hcl:"operation_destroy,attr"`
	// OperationDiscoverVersions: bool, optional
	OperationDiscoverVersions terra.BoolValue `hcl:"operation_discover_versions,attr"`
	// OperationGet: bool, optional
	OperationGet terra.BoolValue `hcl:"operation_get,attr"`
	// OperationGetAttributeList: bool, optional
	OperationGetAttributeList terra.BoolValue `hcl:"operation_get_attribute_list,attr"`
	// OperationGetAttributes: bool, optional
	OperationGetAttributes terra.BoolValue `hcl:"operation_get_attributes,attr"`
	// OperationLocate: bool, optional
	OperationLocate terra.BoolValue `hcl:"operation_locate,attr"`
	// OperationNone: bool, optional
	OperationNone terra.BoolValue `hcl:"operation_none,attr"`
	// OperationRegister: bool, optional
	OperationRegister terra.BoolValue `hcl:"operation_register,attr"`
	// OperationRekey: bool, optional
	OperationRekey terra.BoolValue `hcl:"operation_rekey,attr"`
	// OperationRevoke: bool, optional
	OperationRevoke terra.BoolValue `hcl:"operation_revoke,attr"`
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Scope: string, required
	Scope terra.StringValue `hcl:"scope,attr" validate:"required"`
	// TlsClientKeyBits: number, optional
	TlsClientKeyBits terra.NumberValue `hcl:"tls_client_key_bits,attr"`
	// TlsClientKeyType: string, optional
	TlsClientKeyType terra.StringValue `hcl:"tls_client_key_type,attr"`
	// TlsClientTtl: number, optional
	TlsClientTtl terra.NumberValue `hcl:"tls_client_ttl,attr"`
}

type vaultKmipSecretRoleAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vksr.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vksr.ref.Append("namespace"))
}

// OperationActivate returns a reference to field operation_activate of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationActivate() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_activate"))
}

// OperationAddAttribute returns a reference to field operation_add_attribute of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationAddAttribute() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_add_attribute"))
}

// OperationAll returns a reference to field operation_all of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationAll() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_all"))
}

// OperationCreate returns a reference to field operation_create of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationCreate() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_create"))
}

// OperationDestroy returns a reference to field operation_destroy of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_destroy"))
}

// OperationDiscoverVersions returns a reference to field operation_discover_versions of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationDiscoverVersions() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_discover_versions"))
}

// OperationGet returns a reference to field operation_get of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationGet() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_get"))
}

// OperationGetAttributeList returns a reference to field operation_get_attribute_list of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationGetAttributeList() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_get_attribute_list"))
}

// OperationGetAttributes returns a reference to field operation_get_attributes of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationGetAttributes() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_get_attributes"))
}

// OperationLocate returns a reference to field operation_locate of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationLocate() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_locate"))
}

// OperationNone returns a reference to field operation_none of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationNone() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_none"))
}

// OperationRegister returns a reference to field operation_register of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationRegister() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_register"))
}

// OperationRekey returns a reference to field operation_rekey of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationRekey() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_rekey"))
}

// OperationRevoke returns a reference to field operation_revoke of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) OperationRevoke() terra.BoolValue {
	return terra.ReferenceAsBool(vksr.ref.Append("operation_revoke"))
}

// Path returns a reference to field path of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vksr.ref.Append("path"))
}

// Role returns a reference to field role of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vksr.ref.Append("role"))
}

// Scope returns a reference to field scope of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(vksr.ref.Append("scope"))
}

// TlsClientKeyBits returns a reference to field tls_client_key_bits of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) TlsClientKeyBits() terra.NumberValue {
	return terra.ReferenceAsNumber(vksr.ref.Append("tls_client_key_bits"))
}

// TlsClientKeyType returns a reference to field tls_client_key_type of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) TlsClientKeyType() terra.StringValue {
	return terra.ReferenceAsString(vksr.ref.Append("tls_client_key_type"))
}

// TlsClientTtl returns a reference to field tls_client_ttl of vault_kmip_secret_role.
func (vksr vaultKmipSecretRoleAttributes) TlsClientTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(vksr.ref.Append("tls_client_ttl"))
}

type vaultKmipSecretRoleState struct {
	Id                        string  `json:"id"`
	Namespace                 string  `json:"namespace"`
	OperationActivate         bool    `json:"operation_activate"`
	OperationAddAttribute     bool    `json:"operation_add_attribute"`
	OperationAll              bool    `json:"operation_all"`
	OperationCreate           bool    `json:"operation_create"`
	OperationDestroy          bool    `json:"operation_destroy"`
	OperationDiscoverVersions bool    `json:"operation_discover_versions"`
	OperationGet              bool    `json:"operation_get"`
	OperationGetAttributeList bool    `json:"operation_get_attribute_list"`
	OperationGetAttributes    bool    `json:"operation_get_attributes"`
	OperationLocate           bool    `json:"operation_locate"`
	OperationNone             bool    `json:"operation_none"`
	OperationRegister         bool    `json:"operation_register"`
	OperationRekey            bool    `json:"operation_rekey"`
	OperationRevoke           bool    `json:"operation_revoke"`
	Path                      string  `json:"path"`
	Role                      string  `json:"role"`
	Scope                     string  `json:"scope"`
	TlsClientKeyBits          float64 `json:"tls_client_key_bits"`
	TlsClientKeyType          string  `json:"tls_client_key_type"`
	TlsClientTtl              float64 `json:"tls_client_ttl"`
}
