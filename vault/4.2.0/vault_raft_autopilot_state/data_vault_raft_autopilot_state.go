// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_raft_autopilot_state

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource vault_raft_autopilot_state.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (vras *DataSource) DataSource() string {
	return "vault_raft_autopilot_state"
}

// LocalName returns the local name for [DataSource].
func (vras *DataSource) LocalName() string {
	return vras.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (vras *DataSource) Configuration() interface{} {
	return vras.Args
}

// Attributes returns the attributes for [DataSource].
func (vras *DataSource) Attributes() dataVaultRaftAutopilotStateAttributes {
	return dataVaultRaftAutopilotStateAttributes{ref: terra.ReferenceDataSource(vras)}
}

// DataArgs contains the configurations for vault_raft_autopilot_state.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}

type dataVaultRaftAutopilotStateAttributes struct {
	ref terra.Reference
}

// FailureTolerance returns a reference to field failure_tolerance of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) FailureTolerance() terra.NumberValue {
	return terra.ReferenceAsNumber(vras.ref.Append("failure_tolerance"))
}

// Healthy returns a reference to field healthy of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) Healthy() terra.BoolValue {
	return terra.ReferenceAsBool(vras.ref.Append("healthy"))
}

// Id returns a reference to field id of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vras.ref.Append("id"))
}

// Leader returns a reference to field leader of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) Leader() terra.StringValue {
	return terra.ReferenceAsString(vras.ref.Append("leader"))
}

// Namespace returns a reference to field namespace of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vras.ref.Append("namespace"))
}

// OptimisticFailureTolerance returns a reference to field optimistic_failure_tolerance of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) OptimisticFailureTolerance() terra.NumberValue {
	return terra.ReferenceAsNumber(vras.ref.Append("optimistic_failure_tolerance"))
}

// RedundancyZones returns a reference to field redundancy_zones of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) RedundancyZones() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vras.ref.Append("redundancy_zones"))
}

// RedundancyZonesJson returns a reference to field redundancy_zones_json of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) RedundancyZonesJson() terra.StringValue {
	return terra.ReferenceAsString(vras.ref.Append("redundancy_zones_json"))
}

// Servers returns a reference to field servers of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) Servers() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vras.ref.Append("servers"))
}

// ServersJson returns a reference to field servers_json of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) ServersJson() terra.StringValue {
	return terra.ReferenceAsString(vras.ref.Append("servers_json"))
}

// UpgradeInfo returns a reference to field upgrade_info of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) UpgradeInfo() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vras.ref.Append("upgrade_info"))
}

// UpgradeInfoJson returns a reference to field upgrade_info_json of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) UpgradeInfoJson() terra.StringValue {
	return terra.ReferenceAsString(vras.ref.Append("upgrade_info_json"))
}

// Voters returns a reference to field voters of vault_raft_autopilot_state.
func (vras dataVaultRaftAutopilotStateAttributes) Voters() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vras.ref.Append("voters"))
}
