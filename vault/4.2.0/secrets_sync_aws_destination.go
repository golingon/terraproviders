// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSecretsSyncAwsDestination creates a new instance of [SecretsSyncAwsDestination].
func NewSecretsSyncAwsDestination(name string, args SecretsSyncAwsDestinationArgs) *SecretsSyncAwsDestination {
	return &SecretsSyncAwsDestination{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecretsSyncAwsDestination)(nil)

// SecretsSyncAwsDestination represents the Terraform resource vault_secrets_sync_aws_destination.
type SecretsSyncAwsDestination struct {
	Name      string
	Args      SecretsSyncAwsDestinationArgs
	state     *secretsSyncAwsDestinationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecretsSyncAwsDestination].
func (ssad *SecretsSyncAwsDestination) Type() string {
	return "vault_secrets_sync_aws_destination"
}

// LocalName returns the local name for [SecretsSyncAwsDestination].
func (ssad *SecretsSyncAwsDestination) LocalName() string {
	return ssad.Name
}

// Configuration returns the configuration (args) for [SecretsSyncAwsDestination].
func (ssad *SecretsSyncAwsDestination) Configuration() interface{} {
	return ssad.Args
}

// DependOn is used for other resources to depend on [SecretsSyncAwsDestination].
func (ssad *SecretsSyncAwsDestination) DependOn() terra.Reference {
	return terra.ReferenceResource(ssad)
}

// Dependencies returns the list of resources [SecretsSyncAwsDestination] depends_on.
func (ssad *SecretsSyncAwsDestination) Dependencies() terra.Dependencies {
	return ssad.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecretsSyncAwsDestination].
func (ssad *SecretsSyncAwsDestination) LifecycleManagement() *terra.Lifecycle {
	return ssad.Lifecycle
}

// Attributes returns the attributes for [SecretsSyncAwsDestination].
func (ssad *SecretsSyncAwsDestination) Attributes() secretsSyncAwsDestinationAttributes {
	return secretsSyncAwsDestinationAttributes{ref: terra.ReferenceResource(ssad)}
}

// ImportState imports the given attribute values into [SecretsSyncAwsDestination]'s state.
func (ssad *SecretsSyncAwsDestination) ImportState(av io.Reader) error {
	ssad.state = &secretsSyncAwsDestinationState{}
	if err := json.NewDecoder(av).Decode(ssad.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssad.Type(), ssad.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecretsSyncAwsDestination] has state.
func (ssad *SecretsSyncAwsDestination) State() (*secretsSyncAwsDestinationState, bool) {
	return ssad.state, ssad.state != nil
}

// StateMust returns the state for [SecretsSyncAwsDestination]. Panics if the state is nil.
func (ssad *SecretsSyncAwsDestination) StateMust() *secretsSyncAwsDestinationState {
	if ssad.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssad.Type(), ssad.LocalName()))
	}
	return ssad.state
}

// SecretsSyncAwsDestinationArgs contains the configurations for vault_secrets_sync_aws_destination.
type SecretsSyncAwsDestinationArgs struct {
	// AccessKeyId: string, optional
	AccessKeyId terra.StringValue `hcl:"access_key_id,attr"`
	// CustomTags: map of string, optional
	CustomTags terra.MapValue[terra.StringValue] `hcl:"custom_tags,attr"`
	// ExternalId: string, optional
	ExternalId terra.StringValue `hcl:"external_id,attr"`
	// Granularity: string, optional
	Granularity terra.StringValue `hcl:"granularity,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// SecretAccessKey: string, optional
	SecretAccessKey terra.StringValue `hcl:"secret_access_key,attr"`
	// SecretNameTemplate: string, optional
	SecretNameTemplate terra.StringValue `hcl:"secret_name_template,attr"`
}
type secretsSyncAwsDestinationAttributes struct {
	ref terra.Reference
}

// AccessKeyId returns a reference to field access_key_id of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) AccessKeyId() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("access_key_id"))
}

// CustomTags returns a reference to field custom_tags of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) CustomTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ssad.ref.Append("custom_tags"))
}

// ExternalId returns a reference to field external_id of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) ExternalId() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("external_id"))
}

// Granularity returns a reference to field granularity of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) Granularity() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("granularity"))
}

// Id returns a reference to field id of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("id"))
}

// Name returns a reference to field name of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("namespace"))
}

// Region returns a reference to field region of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("region"))
}

// RoleArn returns a reference to field role_arn of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("role_arn"))
}

// SecretAccessKey returns a reference to field secret_access_key of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) SecretAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("secret_access_key"))
}

// SecretNameTemplate returns a reference to field secret_name_template of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) SecretNameTemplate() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("secret_name_template"))
}

// Type returns a reference to field type of vault_secrets_sync_aws_destination.
func (ssad secretsSyncAwsDestinationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("type"))
}

type secretsSyncAwsDestinationState struct {
	AccessKeyId        string            `json:"access_key_id"`
	CustomTags         map[string]string `json:"custom_tags"`
	ExternalId         string            `json:"external_id"`
	Granularity        string            `json:"granularity"`
	Id                 string            `json:"id"`
	Name               string            `json:"name"`
	Namespace          string            `json:"namespace"`
	Region             string            `json:"region"`
	RoleArn            string            `json:"role_arn"`
	SecretAccessKey    string            `json:"secret_access_key"`
	SecretNameTemplate string            `json:"secret_name_template"`
	Type               string            `json:"type"`
}
