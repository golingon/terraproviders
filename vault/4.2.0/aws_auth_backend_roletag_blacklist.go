// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewAwsAuthBackendRoletagBlacklist creates a new instance of [AwsAuthBackendRoletagBlacklist].
func NewAwsAuthBackendRoletagBlacklist(name string, args AwsAuthBackendRoletagBlacklistArgs) *AwsAuthBackendRoletagBlacklist {
	return &AwsAuthBackendRoletagBlacklist{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AwsAuthBackendRoletagBlacklist)(nil)

// AwsAuthBackendRoletagBlacklist represents the Terraform resource vault_aws_auth_backend_roletag_blacklist.
type AwsAuthBackendRoletagBlacklist struct {
	Name      string
	Args      AwsAuthBackendRoletagBlacklistArgs
	state     *awsAuthBackendRoletagBlacklistState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AwsAuthBackendRoletagBlacklist].
func (aabrb *AwsAuthBackendRoletagBlacklist) Type() string {
	return "vault_aws_auth_backend_roletag_blacklist"
}

// LocalName returns the local name for [AwsAuthBackendRoletagBlacklist].
func (aabrb *AwsAuthBackendRoletagBlacklist) LocalName() string {
	return aabrb.Name
}

// Configuration returns the configuration (args) for [AwsAuthBackendRoletagBlacklist].
func (aabrb *AwsAuthBackendRoletagBlacklist) Configuration() interface{} {
	return aabrb.Args
}

// DependOn is used for other resources to depend on [AwsAuthBackendRoletagBlacklist].
func (aabrb *AwsAuthBackendRoletagBlacklist) DependOn() terra.Reference {
	return terra.ReferenceResource(aabrb)
}

// Dependencies returns the list of resources [AwsAuthBackendRoletagBlacklist] depends_on.
func (aabrb *AwsAuthBackendRoletagBlacklist) Dependencies() terra.Dependencies {
	return aabrb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AwsAuthBackendRoletagBlacklist].
func (aabrb *AwsAuthBackendRoletagBlacklist) LifecycleManagement() *terra.Lifecycle {
	return aabrb.Lifecycle
}

// Attributes returns the attributes for [AwsAuthBackendRoletagBlacklist].
func (aabrb *AwsAuthBackendRoletagBlacklist) Attributes() awsAuthBackendRoletagBlacklistAttributes {
	return awsAuthBackendRoletagBlacklistAttributes{ref: terra.ReferenceResource(aabrb)}
}

// ImportState imports the given attribute values into [AwsAuthBackendRoletagBlacklist]'s state.
func (aabrb *AwsAuthBackendRoletagBlacklist) ImportState(av io.Reader) error {
	aabrb.state = &awsAuthBackendRoletagBlacklistState{}
	if err := json.NewDecoder(av).Decode(aabrb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aabrb.Type(), aabrb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AwsAuthBackendRoletagBlacklist] has state.
func (aabrb *AwsAuthBackendRoletagBlacklist) State() (*awsAuthBackendRoletagBlacklistState, bool) {
	return aabrb.state, aabrb.state != nil
}

// StateMust returns the state for [AwsAuthBackendRoletagBlacklist]. Panics if the state is nil.
func (aabrb *AwsAuthBackendRoletagBlacklist) StateMust() *awsAuthBackendRoletagBlacklistState {
	if aabrb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aabrb.Type(), aabrb.LocalName()))
	}
	return aabrb.state
}

// AwsAuthBackendRoletagBlacklistArgs contains the configurations for vault_aws_auth_backend_roletag_blacklist.
type AwsAuthBackendRoletagBlacklistArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// DisablePeriodicTidy: bool, optional
	DisablePeriodicTidy terra.BoolValue `hcl:"disable_periodic_tidy,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// SafetyBuffer: number, optional
	SafetyBuffer terra.NumberValue `hcl:"safety_buffer,attr"`
}
type awsAuthBackendRoletagBlacklistAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_aws_auth_backend_roletag_blacklist.
func (aabrb awsAuthBackendRoletagBlacklistAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(aabrb.ref.Append("backend"))
}

// DisablePeriodicTidy returns a reference to field disable_periodic_tidy of vault_aws_auth_backend_roletag_blacklist.
func (aabrb awsAuthBackendRoletagBlacklistAttributes) DisablePeriodicTidy() terra.BoolValue {
	return terra.ReferenceAsBool(aabrb.ref.Append("disable_periodic_tidy"))
}

// Id returns a reference to field id of vault_aws_auth_backend_roletag_blacklist.
func (aabrb awsAuthBackendRoletagBlacklistAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aabrb.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_roletag_blacklist.
func (aabrb awsAuthBackendRoletagBlacklistAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(aabrb.ref.Append("namespace"))
}

// SafetyBuffer returns a reference to field safety_buffer of vault_aws_auth_backend_roletag_blacklist.
func (aabrb awsAuthBackendRoletagBlacklistAttributes) SafetyBuffer() terra.NumberValue {
	return terra.ReferenceAsNumber(aabrb.ref.Append("safety_buffer"))
}

type awsAuthBackendRoletagBlacklistState struct {
	Backend             string  `json:"backend"`
	DisablePeriodicTidy bool    `json:"disable_periodic_tidy"`
	Id                  string  `json:"id"`
	Namespace           string  `json:"namespace"`
	SafetyBuffer        float64 `json:"safety_buffer"`
}
