// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSamlAuthBackendRole creates a new instance of [SamlAuthBackendRole].
func NewSamlAuthBackendRole(name string, args SamlAuthBackendRoleArgs) *SamlAuthBackendRole {
	return &SamlAuthBackendRole{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SamlAuthBackendRole)(nil)

// SamlAuthBackendRole represents the Terraform resource vault_saml_auth_backend_role.
type SamlAuthBackendRole struct {
	Name      string
	Args      SamlAuthBackendRoleArgs
	state     *samlAuthBackendRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SamlAuthBackendRole].
func (sabr *SamlAuthBackendRole) Type() string {
	return "vault_saml_auth_backend_role"
}

// LocalName returns the local name for [SamlAuthBackendRole].
func (sabr *SamlAuthBackendRole) LocalName() string {
	return sabr.Name
}

// Configuration returns the configuration (args) for [SamlAuthBackendRole].
func (sabr *SamlAuthBackendRole) Configuration() interface{} {
	return sabr.Args
}

// DependOn is used for other resources to depend on [SamlAuthBackendRole].
func (sabr *SamlAuthBackendRole) DependOn() terra.Reference {
	return terra.ReferenceResource(sabr)
}

// Dependencies returns the list of resources [SamlAuthBackendRole] depends_on.
func (sabr *SamlAuthBackendRole) Dependencies() terra.Dependencies {
	return sabr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SamlAuthBackendRole].
func (sabr *SamlAuthBackendRole) LifecycleManagement() *terra.Lifecycle {
	return sabr.Lifecycle
}

// Attributes returns the attributes for [SamlAuthBackendRole].
func (sabr *SamlAuthBackendRole) Attributes() samlAuthBackendRoleAttributes {
	return samlAuthBackendRoleAttributes{ref: terra.ReferenceResource(sabr)}
}

// ImportState imports the given attribute values into [SamlAuthBackendRole]'s state.
func (sabr *SamlAuthBackendRole) ImportState(av io.Reader) error {
	sabr.state = &samlAuthBackendRoleState{}
	if err := json.NewDecoder(av).Decode(sabr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sabr.Type(), sabr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SamlAuthBackendRole] has state.
func (sabr *SamlAuthBackendRole) State() (*samlAuthBackendRoleState, bool) {
	return sabr.state, sabr.state != nil
}

// StateMust returns the state for [SamlAuthBackendRole]. Panics if the state is nil.
func (sabr *SamlAuthBackendRole) StateMust() *samlAuthBackendRoleState {
	if sabr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sabr.Type(), sabr.LocalName()))
	}
	return sabr.state
}

// SamlAuthBackendRoleArgs contains the configurations for vault_saml_auth_backend_role.
type SamlAuthBackendRoleArgs struct {
	// BoundAttributes: map of string, optional
	BoundAttributes terra.MapValue[terra.StringValue] `hcl:"bound_attributes,attr"`
	// BoundAttributesType: string, optional
	BoundAttributesType terra.StringValue `hcl:"bound_attributes_type,attr"`
	// BoundSubjects: list of string, optional
	BoundSubjects terra.ListValue[terra.StringValue] `hcl:"bound_subjects,attr"`
	// BoundSubjectsType: string, optional
	BoundSubjectsType terra.StringValue `hcl:"bound_subjects_type,attr"`
	// GroupsAttribute: string, optional
	GroupsAttribute terra.StringValue `hcl:"groups_attribute,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// TokenBoundCidrs: set of string, optional
	TokenBoundCidrs terra.SetValue[terra.StringValue] `hcl:"token_bound_cidrs,attr"`
	// TokenExplicitMaxTtl: number, optional
	TokenExplicitMaxTtl terra.NumberValue `hcl:"token_explicit_max_ttl,attr"`
	// TokenMaxTtl: number, optional
	TokenMaxTtl terra.NumberValue `hcl:"token_max_ttl,attr"`
	// TokenNoDefaultPolicy: bool, optional
	TokenNoDefaultPolicy terra.BoolValue `hcl:"token_no_default_policy,attr"`
	// TokenNumUses: number, optional
	TokenNumUses terra.NumberValue `hcl:"token_num_uses,attr"`
	// TokenPeriod: number, optional
	TokenPeriod terra.NumberValue `hcl:"token_period,attr"`
	// TokenPolicies: set of string, optional
	TokenPolicies terra.SetValue[terra.StringValue] `hcl:"token_policies,attr"`
	// TokenTtl: number, optional
	TokenTtl terra.NumberValue `hcl:"token_ttl,attr"`
	// TokenType: string, optional
	TokenType terra.StringValue `hcl:"token_type,attr"`
}
type samlAuthBackendRoleAttributes struct {
	ref terra.Reference
}

// BoundAttributes returns a reference to field bound_attributes of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) BoundAttributes() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sabr.ref.Append("bound_attributes"))
}

// BoundAttributesType returns a reference to field bound_attributes_type of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) BoundAttributesType() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("bound_attributes_type"))
}

// BoundSubjects returns a reference to field bound_subjects of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) BoundSubjects() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sabr.ref.Append("bound_subjects"))
}

// BoundSubjectsType returns a reference to field bound_subjects_type of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) BoundSubjectsType() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("bound_subjects_type"))
}

// GroupsAttribute returns a reference to field groups_attribute of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) GroupsAttribute() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("groups_attribute"))
}

// Id returns a reference to field id of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("id"))
}

// Name returns a reference to field name of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("path"))
}

// TokenBoundCidrs returns a reference to field token_bound_cidrs of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenBoundCidrs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sabr.ref.Append("token_bound_cidrs"))
}

// TokenExplicitMaxTtl returns a reference to field token_explicit_max_ttl of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenExplicitMaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(sabr.ref.Append("token_explicit_max_ttl"))
}

// TokenMaxTtl returns a reference to field token_max_ttl of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenMaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(sabr.ref.Append("token_max_ttl"))
}

// TokenNoDefaultPolicy returns a reference to field token_no_default_policy of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenNoDefaultPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(sabr.ref.Append("token_no_default_policy"))
}

// TokenNumUses returns a reference to field token_num_uses of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenNumUses() terra.NumberValue {
	return terra.ReferenceAsNumber(sabr.ref.Append("token_num_uses"))
}

// TokenPeriod returns a reference to field token_period of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(sabr.ref.Append("token_period"))
}

// TokenPolicies returns a reference to field token_policies of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenPolicies() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sabr.ref.Append("token_policies"))
}

// TokenTtl returns a reference to field token_ttl of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(sabr.ref.Append("token_ttl"))
}

// TokenType returns a reference to field token_type of vault_saml_auth_backend_role.
func (sabr samlAuthBackendRoleAttributes) TokenType() terra.StringValue {
	return terra.ReferenceAsString(sabr.ref.Append("token_type"))
}

type samlAuthBackendRoleState struct {
	BoundAttributes      map[string]string `json:"bound_attributes"`
	BoundAttributesType  string            `json:"bound_attributes_type"`
	BoundSubjects        []string          `json:"bound_subjects"`
	BoundSubjectsType    string            `json:"bound_subjects_type"`
	GroupsAttribute      string            `json:"groups_attribute"`
	Id                   string            `json:"id"`
	Name                 string            `json:"name"`
	Namespace            string            `json:"namespace"`
	Path                 string            `json:"path"`
	TokenBoundCidrs      []string          `json:"token_bound_cidrs"`
	TokenExplicitMaxTtl  float64           `json:"token_explicit_max_ttl"`
	TokenMaxTtl          float64           `json:"token_max_ttl"`
	TokenNoDefaultPolicy bool              `json:"token_no_default_policy"`
	TokenNumUses         float64           `json:"token_num_uses"`
	TokenPeriod          float64           `json:"token_period"`
	TokenPolicies        []string          `json:"token_policies"`
	TokenTtl             float64           `json:"token_ttl"`
	TokenType            string            `json:"token_type"`
}
