// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewAlicloudAuthBackendRole creates a new instance of [AlicloudAuthBackendRole].
func NewAlicloudAuthBackendRole(name string, args AlicloudAuthBackendRoleArgs) *AlicloudAuthBackendRole {
	return &AlicloudAuthBackendRole{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AlicloudAuthBackendRole)(nil)

// AlicloudAuthBackendRole represents the Terraform resource vault_alicloud_auth_backend_role.
type AlicloudAuthBackendRole struct {
	Name      string
	Args      AlicloudAuthBackendRoleArgs
	state     *alicloudAuthBackendRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AlicloudAuthBackendRole].
func (aabr *AlicloudAuthBackendRole) Type() string {
	return "vault_alicloud_auth_backend_role"
}

// LocalName returns the local name for [AlicloudAuthBackendRole].
func (aabr *AlicloudAuthBackendRole) LocalName() string {
	return aabr.Name
}

// Configuration returns the configuration (args) for [AlicloudAuthBackendRole].
func (aabr *AlicloudAuthBackendRole) Configuration() interface{} {
	return aabr.Args
}

// DependOn is used for other resources to depend on [AlicloudAuthBackendRole].
func (aabr *AlicloudAuthBackendRole) DependOn() terra.Reference {
	return terra.ReferenceResource(aabr)
}

// Dependencies returns the list of resources [AlicloudAuthBackendRole] depends_on.
func (aabr *AlicloudAuthBackendRole) Dependencies() terra.Dependencies {
	return aabr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AlicloudAuthBackendRole].
func (aabr *AlicloudAuthBackendRole) LifecycleManagement() *terra.Lifecycle {
	return aabr.Lifecycle
}

// Attributes returns the attributes for [AlicloudAuthBackendRole].
func (aabr *AlicloudAuthBackendRole) Attributes() alicloudAuthBackendRoleAttributes {
	return alicloudAuthBackendRoleAttributes{ref: terra.ReferenceResource(aabr)}
}

// ImportState imports the given attribute values into [AlicloudAuthBackendRole]'s state.
func (aabr *AlicloudAuthBackendRole) ImportState(av io.Reader) error {
	aabr.state = &alicloudAuthBackendRoleState{}
	if err := json.NewDecoder(av).Decode(aabr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aabr.Type(), aabr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AlicloudAuthBackendRole] has state.
func (aabr *AlicloudAuthBackendRole) State() (*alicloudAuthBackendRoleState, bool) {
	return aabr.state, aabr.state != nil
}

// StateMust returns the state for [AlicloudAuthBackendRole]. Panics if the state is nil.
func (aabr *AlicloudAuthBackendRole) StateMust() *alicloudAuthBackendRoleState {
	if aabr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aabr.Type(), aabr.LocalName()))
	}
	return aabr.state
}

// AlicloudAuthBackendRoleArgs contains the configurations for vault_alicloud_auth_backend_role.
type AlicloudAuthBackendRoleArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// TokenBoundCidrs: set of string, optional
	TokenBoundCidrs terra.SetValue[terra.StringValue] `hcl:"token_bound_cidrs,attr"`
	// TokenExplicitMaxTtl: number, optional
	TokenExplicitMaxTtl terra.NumberValue `hcl:"token_explicit_max_ttl,attr"`
	// TokenMaxTtl: number, optional
	TokenMaxTtl terra.NumberValue `hcl:"token_max_ttl,attr"`
	// TokenNoDefaultPolicy: bool, optional
	TokenNoDefaultPolicy terra.BoolValue `hcl:"token_no_default_policy,attr"`
	// TokenNumUses: number, optional
	TokenNumUses terra.NumberValue `hcl:"token_num_uses,attr"`
	// TokenPeriod: number, optional
	TokenPeriod terra.NumberValue `hcl:"token_period,attr"`
	// TokenPolicies: set of string, optional
	TokenPolicies terra.SetValue[terra.StringValue] `hcl:"token_policies,attr"`
	// TokenTtl: number, optional
	TokenTtl terra.NumberValue `hcl:"token_ttl,attr"`
	// TokenType: string, optional
	TokenType terra.StringValue `hcl:"token_type,attr"`
}
type alicloudAuthBackendRoleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aabr.ref.Append("arn"))
}

// Backend returns a reference to field backend of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(aabr.ref.Append("backend"))
}

// Id returns a reference to field id of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aabr.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(aabr.ref.Append("namespace"))
}

// Role returns a reference to field role of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(aabr.ref.Append("role"))
}

// TokenBoundCidrs returns a reference to field token_bound_cidrs of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenBoundCidrs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aabr.ref.Append("token_bound_cidrs"))
}

// TokenExplicitMaxTtl returns a reference to field token_explicit_max_ttl of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenExplicitMaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(aabr.ref.Append("token_explicit_max_ttl"))
}

// TokenMaxTtl returns a reference to field token_max_ttl of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenMaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(aabr.ref.Append("token_max_ttl"))
}

// TokenNoDefaultPolicy returns a reference to field token_no_default_policy of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenNoDefaultPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(aabr.ref.Append("token_no_default_policy"))
}

// TokenNumUses returns a reference to field token_num_uses of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenNumUses() terra.NumberValue {
	return terra.ReferenceAsNumber(aabr.ref.Append("token_num_uses"))
}

// TokenPeriod returns a reference to field token_period of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(aabr.ref.Append("token_period"))
}

// TokenPolicies returns a reference to field token_policies of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenPolicies() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aabr.ref.Append("token_policies"))
}

// TokenTtl returns a reference to field token_ttl of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(aabr.ref.Append("token_ttl"))
}

// TokenType returns a reference to field token_type of vault_alicloud_auth_backend_role.
func (aabr alicloudAuthBackendRoleAttributes) TokenType() terra.StringValue {
	return terra.ReferenceAsString(aabr.ref.Append("token_type"))
}

type alicloudAuthBackendRoleState struct {
	Arn                  string   `json:"arn"`
	Backend              string   `json:"backend"`
	Id                   string   `json:"id"`
	Namespace            string   `json:"namespace"`
	Role                 string   `json:"role"`
	TokenBoundCidrs      []string `json:"token_bound_cidrs"`
	TokenExplicitMaxTtl  float64  `json:"token_explicit_max_ttl"`
	TokenMaxTtl          float64  `json:"token_max_ttl"`
	TokenNoDefaultPolicy bool     `json:"token_no_default_policy"`
	TokenNumUses         float64  `json:"token_num_uses"`
	TokenPeriod          float64  `json:"token_period"`
	TokenPolicies        []string `json:"token_policies"`
	TokenTtl             float64  `json:"token_ttl"`
	TokenType            string   `json:"token_type"`
}
