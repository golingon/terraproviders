// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_pki_secret_backend_config_issuers

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_pki_secret_backend_config_issuers.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultPkiSecretBackendConfigIssuersState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vpsbci *Resource) Type() string {
	return "vault_pki_secret_backend_config_issuers"
}

// LocalName returns the local name for [Resource].
func (vpsbci *Resource) LocalName() string {
	return vpsbci.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vpsbci *Resource) Configuration() interface{} {
	return vpsbci.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vpsbci *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vpsbci)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vpsbci *Resource) Dependencies() terra.Dependencies {
	return vpsbci.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vpsbci *Resource) LifecycleManagement() *terra.Lifecycle {
	return vpsbci.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vpsbci *Resource) Attributes() vaultPkiSecretBackendConfigIssuersAttributes {
	return vaultPkiSecretBackendConfigIssuersAttributes{ref: terra.ReferenceResource(vpsbci)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vpsbci *Resource) ImportState(state io.Reader) error {
	vpsbci.state = &vaultPkiSecretBackendConfigIssuersState{}
	if err := json.NewDecoder(state).Decode(vpsbci.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vpsbci.Type(), vpsbci.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vpsbci *Resource) State() (*vaultPkiSecretBackendConfigIssuersState, bool) {
	return vpsbci.state, vpsbci.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vpsbci *Resource) StateMust() *vaultPkiSecretBackendConfigIssuersState {
	if vpsbci.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vpsbci.Type(), vpsbci.LocalName()))
	}
	return vpsbci.state
}

// Args contains the configurations for vault_pki_secret_backend_config_issuers.
type Args struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Default: string, optional
	Default terra.StringValue `hcl:"default,attr"`
	// DefaultFollowsLatestIssuer: bool, optional
	DefaultFollowsLatestIssuer terra.BoolValue `hcl:"default_follows_latest_issuer,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}

type vaultPkiSecretBackendConfigIssuersAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_pki_secret_backend_config_issuers.
func (vpsbci vaultPkiSecretBackendConfigIssuersAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vpsbci.ref.Append("backend"))
}

// Default returns a reference to field default of vault_pki_secret_backend_config_issuers.
func (vpsbci vaultPkiSecretBackendConfigIssuersAttributes) Default() terra.StringValue {
	return terra.ReferenceAsString(vpsbci.ref.Append("default"))
}

// DefaultFollowsLatestIssuer returns a reference to field default_follows_latest_issuer of vault_pki_secret_backend_config_issuers.
func (vpsbci vaultPkiSecretBackendConfigIssuersAttributes) DefaultFollowsLatestIssuer() terra.BoolValue {
	return terra.ReferenceAsBool(vpsbci.ref.Append("default_follows_latest_issuer"))
}

// Id returns a reference to field id of vault_pki_secret_backend_config_issuers.
func (vpsbci vaultPkiSecretBackendConfigIssuersAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vpsbci.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_pki_secret_backend_config_issuers.
func (vpsbci vaultPkiSecretBackendConfigIssuersAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vpsbci.ref.Append("namespace"))
}

type vaultPkiSecretBackendConfigIssuersState struct {
	Backend                    string `json:"backend"`
	Default                    string `json:"default"`
	DefaultFollowsLatestIssuer bool   `json:"default_follows_latest_issuer"`
	Id                         string `json:"id"`
	Namespace                  string `json:"namespace"`
}
