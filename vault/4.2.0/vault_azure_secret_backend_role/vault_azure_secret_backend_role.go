// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_azure_secret_backend_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_azure_secret_backend_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultAzureSecretBackendRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vasbr *Resource) Type() string {
	return "vault_azure_secret_backend_role"
}

// LocalName returns the local name for [Resource].
func (vasbr *Resource) LocalName() string {
	return vasbr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vasbr *Resource) Configuration() interface{} {
	return vasbr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vasbr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vasbr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vasbr *Resource) Dependencies() terra.Dependencies {
	return vasbr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vasbr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vasbr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vasbr *Resource) Attributes() vaultAzureSecretBackendRoleAttributes {
	return vaultAzureSecretBackendRoleAttributes{ref: terra.ReferenceResource(vasbr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vasbr *Resource) ImportState(state io.Reader) error {
	vasbr.state = &vaultAzureSecretBackendRoleState{}
	if err := json.NewDecoder(state).Decode(vasbr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vasbr.Type(), vasbr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vasbr *Resource) State() (*vaultAzureSecretBackendRoleState, bool) {
	return vasbr.state, vasbr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vasbr *Resource) StateMust() *vaultAzureSecretBackendRoleState {
	if vasbr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vasbr.Type(), vasbr.LocalName()))
	}
	return vasbr.state
}

// Args contains the configurations for vault_azure_secret_backend_role.
type Args struct {
	// ApplicationObjectId: string, optional
	ApplicationObjectId terra.StringValue `hcl:"application_object_id,attr"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxTtl: string, optional
	MaxTtl terra.StringValue `hcl:"max_ttl,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// PermanentlyDelete: bool, optional
	PermanentlyDelete terra.BoolValue `hcl:"permanently_delete,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// SignInAudience: string, optional
	SignInAudience terra.StringValue `hcl:"sign_in_audience,attr"`
	// Tags: list of string, optional
	Tags terra.ListValue[terra.StringValue] `hcl:"tags,attr"`
	// Ttl: string, optional
	Ttl terra.StringValue `hcl:"ttl,attr"`
	// AzureGroups: min=0
	AzureGroups []AzureGroups `hcl:"azure_groups,block" validate:"min=0"`
	// AzureRoles: min=0
	AzureRoles []AzureRoles `hcl:"azure_roles,block" validate:"min=0"`
}

type vaultAzureSecretBackendRoleAttributes struct {
	ref terra.Reference
}

// ApplicationObjectId returns a reference to field application_object_id of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) ApplicationObjectId() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("application_object_id"))
}

// Backend returns a reference to field backend of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("backend"))
}

// Description returns a reference to field description of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("description"))
}

// Id returns a reference to field id of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("id"))
}

// MaxTtl returns a reference to field max_ttl of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) MaxTtl() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("max_ttl"))
}

// Namespace returns a reference to field namespace of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("namespace"))
}

// PermanentlyDelete returns a reference to field permanently_delete of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) PermanentlyDelete() terra.BoolValue {
	return terra.ReferenceAsBool(vasbr.ref.Append("permanently_delete"))
}

// Role returns a reference to field role of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("role"))
}

// SignInAudience returns a reference to field sign_in_audience of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) SignInAudience() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("sign_in_audience"))
}

// Tags returns a reference to field tags of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vasbr.ref.Append("tags"))
}

// Ttl returns a reference to field ttl of vault_azure_secret_backend_role.
func (vasbr vaultAzureSecretBackendRoleAttributes) Ttl() terra.StringValue {
	return terra.ReferenceAsString(vasbr.ref.Append("ttl"))
}

func (vasbr vaultAzureSecretBackendRoleAttributes) AzureGroups() terra.SetValue[AzureGroupsAttributes] {
	return terra.ReferenceAsSet[AzureGroupsAttributes](vasbr.ref.Append("azure_groups"))
}

func (vasbr vaultAzureSecretBackendRoleAttributes) AzureRoles() terra.SetValue[AzureRolesAttributes] {
	return terra.ReferenceAsSet[AzureRolesAttributes](vasbr.ref.Append("azure_roles"))
}

type vaultAzureSecretBackendRoleState struct {
	ApplicationObjectId string             `json:"application_object_id"`
	Backend             string             `json:"backend"`
	Description         string             `json:"description"`
	Id                  string             `json:"id"`
	MaxTtl              string             `json:"max_ttl"`
	Namespace           string             `json:"namespace"`
	PermanentlyDelete   bool               `json:"permanently_delete"`
	Role                string             `json:"role"`
	SignInAudience      string             `json:"sign_in_audience"`
	Tags                []string           `json:"tags"`
	Ttl                 string             `json:"ttl"`
	AzureGroups         []AzureGroupsState `json:"azure_groups"`
	AzureRoles          []AzureRolesState  `json:"azure_roles"`
}
