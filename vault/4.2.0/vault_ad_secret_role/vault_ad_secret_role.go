// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_ad_secret_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_ad_secret_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultAdSecretRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vasr *Resource) Type() string {
	return "vault_ad_secret_role"
}

// LocalName returns the local name for [Resource].
func (vasr *Resource) LocalName() string {
	return vasr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vasr *Resource) Configuration() interface{} {
	return vasr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vasr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vasr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vasr *Resource) Dependencies() terra.Dependencies {
	return vasr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vasr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vasr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vasr *Resource) Attributes() vaultAdSecretRoleAttributes {
	return vaultAdSecretRoleAttributes{ref: terra.ReferenceResource(vasr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vasr *Resource) ImportState(state io.Reader) error {
	vasr.state = &vaultAdSecretRoleState{}
	if err := json.NewDecoder(state).Decode(vasr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vasr.Type(), vasr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vasr *Resource) State() (*vaultAdSecretRoleState, bool) {
	return vasr.state, vasr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vasr *Resource) StateMust() *vaultAdSecretRoleState {
	if vasr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vasr.Type(), vasr.LocalName()))
	}
	return vasr.state
}

// Args contains the configurations for vault_ad_secret_role.
type Args struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// ServiceAccountName: string, required
	ServiceAccountName terra.StringValue `hcl:"service_account_name,attr" validate:"required"`
	// Ttl: number, optional
	Ttl terra.NumberValue `hcl:"ttl,attr"`
}

type vaultAdSecretRoleAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("backend"))
}

// Id returns a reference to field id of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("id"))
}

// LastVaultRotation returns a reference to field last_vault_rotation of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) LastVaultRotation() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("last_vault_rotation"))
}

// Namespace returns a reference to field namespace of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("namespace"))
}

// PasswordLastSet returns a reference to field password_last_set of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) PasswordLastSet() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("password_last_set"))
}

// Role returns a reference to field role of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("role"))
}

// ServiceAccountName returns a reference to field service_account_name of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) ServiceAccountName() terra.StringValue {
	return terra.ReferenceAsString(vasr.ref.Append("service_account_name"))
}

// Ttl returns a reference to field ttl of vault_ad_secret_role.
func (vasr vaultAdSecretRoleAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(vasr.ref.Append("ttl"))
}

type vaultAdSecretRoleState struct {
	Backend            string  `json:"backend"`
	Id                 string  `json:"id"`
	LastVaultRotation  string  `json:"last_vault_rotation"`
	Namespace          string  `json:"namespace"`
	PasswordLastSet    string  `json:"password_last_set"`
	Role               string  `json:"role"`
	ServiceAccountName string  `json:"service_account_name"`
	Ttl                float64 `json:"ttl"`
}
