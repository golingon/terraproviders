// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewAwsAuthBackendStsRole creates a new instance of [AwsAuthBackendStsRole].
func NewAwsAuthBackendStsRole(name string, args AwsAuthBackendStsRoleArgs) *AwsAuthBackendStsRole {
	return &AwsAuthBackendStsRole{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AwsAuthBackendStsRole)(nil)

// AwsAuthBackendStsRole represents the Terraform resource vault_aws_auth_backend_sts_role.
type AwsAuthBackendStsRole struct {
	Name      string
	Args      AwsAuthBackendStsRoleArgs
	state     *awsAuthBackendStsRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AwsAuthBackendStsRole].
func (aabsr *AwsAuthBackendStsRole) Type() string {
	return "vault_aws_auth_backend_sts_role"
}

// LocalName returns the local name for [AwsAuthBackendStsRole].
func (aabsr *AwsAuthBackendStsRole) LocalName() string {
	return aabsr.Name
}

// Configuration returns the configuration (args) for [AwsAuthBackendStsRole].
func (aabsr *AwsAuthBackendStsRole) Configuration() interface{} {
	return aabsr.Args
}

// DependOn is used for other resources to depend on [AwsAuthBackendStsRole].
func (aabsr *AwsAuthBackendStsRole) DependOn() terra.Reference {
	return terra.ReferenceResource(aabsr)
}

// Dependencies returns the list of resources [AwsAuthBackendStsRole] depends_on.
func (aabsr *AwsAuthBackendStsRole) Dependencies() terra.Dependencies {
	return aabsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AwsAuthBackendStsRole].
func (aabsr *AwsAuthBackendStsRole) LifecycleManagement() *terra.Lifecycle {
	return aabsr.Lifecycle
}

// Attributes returns the attributes for [AwsAuthBackendStsRole].
func (aabsr *AwsAuthBackendStsRole) Attributes() awsAuthBackendStsRoleAttributes {
	return awsAuthBackendStsRoleAttributes{ref: terra.ReferenceResource(aabsr)}
}

// ImportState imports the given attribute values into [AwsAuthBackendStsRole]'s state.
func (aabsr *AwsAuthBackendStsRole) ImportState(av io.Reader) error {
	aabsr.state = &awsAuthBackendStsRoleState{}
	if err := json.NewDecoder(av).Decode(aabsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aabsr.Type(), aabsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AwsAuthBackendStsRole] has state.
func (aabsr *AwsAuthBackendStsRole) State() (*awsAuthBackendStsRoleState, bool) {
	return aabsr.state, aabsr.state != nil
}

// StateMust returns the state for [AwsAuthBackendStsRole]. Panics if the state is nil.
func (aabsr *AwsAuthBackendStsRole) StateMust() *awsAuthBackendStsRoleState {
	if aabsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aabsr.Type(), aabsr.LocalName()))
	}
	return aabsr.state
}

// AwsAuthBackendStsRoleArgs contains the configurations for vault_aws_auth_backend_sts_role.
type AwsAuthBackendStsRoleArgs struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// StsRole: string, required
	StsRole terra.StringValue `hcl:"sts_role,attr" validate:"required"`
}
type awsAuthBackendStsRoleAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of vault_aws_auth_backend_sts_role.
func (aabsr awsAuthBackendStsRoleAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(aabsr.ref.Append("account_id"))
}

// Backend returns a reference to field backend of vault_aws_auth_backend_sts_role.
func (aabsr awsAuthBackendStsRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(aabsr.ref.Append("backend"))
}

// Id returns a reference to field id of vault_aws_auth_backend_sts_role.
func (aabsr awsAuthBackendStsRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aabsr.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_sts_role.
func (aabsr awsAuthBackendStsRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(aabsr.ref.Append("namespace"))
}

// StsRole returns a reference to field sts_role of vault_aws_auth_backend_sts_role.
func (aabsr awsAuthBackendStsRoleAttributes) StsRole() terra.StringValue {
	return terra.ReferenceAsString(aabsr.ref.Append("sts_role"))
}

type awsAuthBackendStsRoleState struct {
	AccountId string `json:"account_id"`
	Backend   string `json:"backend"`
	Id        string `json:"id"`
	Namespace string `json:"namespace"`
	StsRole   string `json:"sts_role"`
}
