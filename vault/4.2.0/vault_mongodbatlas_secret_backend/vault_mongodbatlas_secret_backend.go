// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_mongodbatlas_secret_backend

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_mongodbatlas_secret_backend.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultMongodbatlasSecretBackendState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vmsb *Resource) Type() string {
	return "vault_mongodbatlas_secret_backend"
}

// LocalName returns the local name for [Resource].
func (vmsb *Resource) LocalName() string {
	return vmsb.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vmsb *Resource) Configuration() interface{} {
	return vmsb.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vmsb *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vmsb)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vmsb *Resource) Dependencies() terra.Dependencies {
	return vmsb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vmsb *Resource) LifecycleManagement() *terra.Lifecycle {
	return vmsb.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vmsb *Resource) Attributes() vaultMongodbatlasSecretBackendAttributes {
	return vaultMongodbatlasSecretBackendAttributes{ref: terra.ReferenceResource(vmsb)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vmsb *Resource) ImportState(state io.Reader) error {
	vmsb.state = &vaultMongodbatlasSecretBackendState{}
	if err := json.NewDecoder(state).Decode(vmsb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vmsb.Type(), vmsb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vmsb *Resource) State() (*vaultMongodbatlasSecretBackendState, bool) {
	return vmsb.state, vmsb.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vmsb *Resource) StateMust() *vaultMongodbatlasSecretBackendState {
	if vmsb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vmsb.Type(), vmsb.LocalName()))
	}
	return vmsb.state
}

// Args contains the configurations for vault_mongodbatlas_secret_backend.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mount: string, required
	Mount terra.StringValue `hcl:"mount,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// PrivateKey: string, required
	PrivateKey terra.StringValue `hcl:"private_key,attr" validate:"required"`
	// PublicKey: string, required
	PublicKey terra.StringValue `hcl:"public_key,attr" validate:"required"`
}

type vaultMongodbatlasSecretBackendAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of vault_mongodbatlas_secret_backend.
func (vmsb vaultMongodbatlasSecretBackendAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vmsb.ref.Append("id"))
}

// Mount returns a reference to field mount of vault_mongodbatlas_secret_backend.
func (vmsb vaultMongodbatlasSecretBackendAttributes) Mount() terra.StringValue {
	return terra.ReferenceAsString(vmsb.ref.Append("mount"))
}

// Namespace returns a reference to field namespace of vault_mongodbatlas_secret_backend.
func (vmsb vaultMongodbatlasSecretBackendAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vmsb.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_mongodbatlas_secret_backend.
func (vmsb vaultMongodbatlasSecretBackendAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vmsb.ref.Append("path"))
}

// PrivateKey returns a reference to field private_key of vault_mongodbatlas_secret_backend.
func (vmsb vaultMongodbatlasSecretBackendAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(vmsb.ref.Append("private_key"))
}

// PublicKey returns a reference to field public_key of vault_mongodbatlas_secret_backend.
func (vmsb vaultMongodbatlasSecretBackendAttributes) PublicKey() terra.StringValue {
	return terra.ReferenceAsString(vmsb.ref.Append("public_key"))
}

type vaultMongodbatlasSecretBackendState struct {
	Id         string `json:"id"`
	Mount      string `json:"mount"`
	Namespace  string `json:"namespace"`
	Path       string `json:"path"`
	PrivateKey string `json:"private_key"`
	PublicKey  string `json:"public_key"`
}
