// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewQuotaRateLimit creates a new instance of [QuotaRateLimit].
func NewQuotaRateLimit(name string, args QuotaRateLimitArgs) *QuotaRateLimit {
	return &QuotaRateLimit{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*QuotaRateLimit)(nil)

// QuotaRateLimit represents the Terraform resource vault_quota_rate_limit.
type QuotaRateLimit struct {
	Name      string
	Args      QuotaRateLimitArgs
	state     *quotaRateLimitState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [QuotaRateLimit].
func (qrl *QuotaRateLimit) Type() string {
	return "vault_quota_rate_limit"
}

// LocalName returns the local name for [QuotaRateLimit].
func (qrl *QuotaRateLimit) LocalName() string {
	return qrl.Name
}

// Configuration returns the configuration (args) for [QuotaRateLimit].
func (qrl *QuotaRateLimit) Configuration() interface{} {
	return qrl.Args
}

// DependOn is used for other resources to depend on [QuotaRateLimit].
func (qrl *QuotaRateLimit) DependOn() terra.Reference {
	return terra.ReferenceResource(qrl)
}

// Dependencies returns the list of resources [QuotaRateLimit] depends_on.
func (qrl *QuotaRateLimit) Dependencies() terra.Dependencies {
	return qrl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [QuotaRateLimit].
func (qrl *QuotaRateLimit) LifecycleManagement() *terra.Lifecycle {
	return qrl.Lifecycle
}

// Attributes returns the attributes for [QuotaRateLimit].
func (qrl *QuotaRateLimit) Attributes() quotaRateLimitAttributes {
	return quotaRateLimitAttributes{ref: terra.ReferenceResource(qrl)}
}

// ImportState imports the given attribute values into [QuotaRateLimit]'s state.
func (qrl *QuotaRateLimit) ImportState(av io.Reader) error {
	qrl.state = &quotaRateLimitState{}
	if err := json.NewDecoder(av).Decode(qrl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", qrl.Type(), qrl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [QuotaRateLimit] has state.
func (qrl *QuotaRateLimit) State() (*quotaRateLimitState, bool) {
	return qrl.state, qrl.state != nil
}

// StateMust returns the state for [QuotaRateLimit]. Panics if the state is nil.
func (qrl *QuotaRateLimit) StateMust() *quotaRateLimitState {
	if qrl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", qrl.Type(), qrl.LocalName()))
	}
	return qrl.state
}

// QuotaRateLimitArgs contains the configurations for vault_quota_rate_limit.
type QuotaRateLimitArgs struct {
	// BlockInterval: number, optional
	BlockInterval terra.NumberValue `hcl:"block_interval,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Interval: number, optional
	Interval terra.NumberValue `hcl:"interval,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Rate: number, required
	Rate terra.NumberValue `hcl:"rate,attr" validate:"required"`
	// Role: string, optional
	Role terra.StringValue `hcl:"role,attr"`
}
type quotaRateLimitAttributes struct {
	ref terra.Reference
}

// BlockInterval returns a reference to field block_interval of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) BlockInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(qrl.ref.Append("block_interval"))
}

// Id returns a reference to field id of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(qrl.ref.Append("id"))
}

// Interval returns a reference to field interval of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(qrl.ref.Append("interval"))
}

// Name returns a reference to field name of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qrl.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(qrl.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(qrl.ref.Append("path"))
}

// Rate returns a reference to field rate of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Rate() terra.NumberValue {
	return terra.ReferenceAsNumber(qrl.ref.Append("rate"))
}

// Role returns a reference to field role of vault_quota_rate_limit.
func (qrl quotaRateLimitAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(qrl.ref.Append("role"))
}

type quotaRateLimitState struct {
	BlockInterval float64 `json:"block_interval"`
	Id            string  `json:"id"`
	Interval      float64 `json:"interval"`
	Name          string  `json:"name"`
	Namespace     string  `json:"namespace"`
	Path          string  `json:"path"`
	Rate          float64 `json:"rate"`
	Role          string  `json:"role"`
}
