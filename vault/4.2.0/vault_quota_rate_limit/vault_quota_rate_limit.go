// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_quota_rate_limit

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_quota_rate_limit.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultQuotaRateLimitState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vqrl *Resource) Type() string {
	return "vault_quota_rate_limit"
}

// LocalName returns the local name for [Resource].
func (vqrl *Resource) LocalName() string {
	return vqrl.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vqrl *Resource) Configuration() interface{} {
	return vqrl.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vqrl *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vqrl)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vqrl *Resource) Dependencies() terra.Dependencies {
	return vqrl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vqrl *Resource) LifecycleManagement() *terra.Lifecycle {
	return vqrl.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vqrl *Resource) Attributes() vaultQuotaRateLimitAttributes {
	return vaultQuotaRateLimitAttributes{ref: terra.ReferenceResource(vqrl)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vqrl *Resource) ImportState(state io.Reader) error {
	vqrl.state = &vaultQuotaRateLimitState{}
	if err := json.NewDecoder(state).Decode(vqrl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vqrl.Type(), vqrl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vqrl *Resource) State() (*vaultQuotaRateLimitState, bool) {
	return vqrl.state, vqrl.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vqrl *Resource) StateMust() *vaultQuotaRateLimitState {
	if vqrl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vqrl.Type(), vqrl.LocalName()))
	}
	return vqrl.state
}

// Args contains the configurations for vault_quota_rate_limit.
type Args struct {
	// BlockInterval: number, optional
	BlockInterval terra.NumberValue `hcl:"block_interval,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Interval: number, optional
	Interval terra.NumberValue `hcl:"interval,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Rate: number, required
	Rate terra.NumberValue `hcl:"rate,attr" validate:"required"`
	// Role: string, optional
	Role terra.StringValue `hcl:"role,attr"`
}

type vaultQuotaRateLimitAttributes struct {
	ref terra.Reference
}

// BlockInterval returns a reference to field block_interval of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) BlockInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(vqrl.ref.Append("block_interval"))
}

// Id returns a reference to field id of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vqrl.ref.Append("id"))
}

// Interval returns a reference to field interval of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(vqrl.ref.Append("interval"))
}

// Name returns a reference to field name of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vqrl.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vqrl.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vqrl.ref.Append("path"))
}

// Rate returns a reference to field rate of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Rate() terra.NumberValue {
	return terra.ReferenceAsNumber(vqrl.ref.Append("rate"))
}

// Role returns a reference to field role of vault_quota_rate_limit.
func (vqrl vaultQuotaRateLimitAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vqrl.ref.Append("role"))
}

type vaultQuotaRateLimitState struct {
	BlockInterval float64 `json:"block_interval"`
	Id            string  `json:"id"`
	Interval      float64 `json:"interval"`
	Name          string  `json:"name"`
	Namespace     string  `json:"namespace"`
	Path          string  `json:"path"`
	Rate          float64 `json:"rate"`
	Role          string  `json:"role"`
}
