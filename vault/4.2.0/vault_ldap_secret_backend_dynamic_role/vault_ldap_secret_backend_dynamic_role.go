// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_ldap_secret_backend_dynamic_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_ldap_secret_backend_dynamic_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultLdapSecretBackendDynamicRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vlsbdr *Resource) Type() string {
	return "vault_ldap_secret_backend_dynamic_role"
}

// LocalName returns the local name for [Resource].
func (vlsbdr *Resource) LocalName() string {
	return vlsbdr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vlsbdr *Resource) Configuration() interface{} {
	return vlsbdr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vlsbdr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vlsbdr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vlsbdr *Resource) Dependencies() terra.Dependencies {
	return vlsbdr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vlsbdr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vlsbdr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vlsbdr *Resource) Attributes() vaultLdapSecretBackendDynamicRoleAttributes {
	return vaultLdapSecretBackendDynamicRoleAttributes{ref: terra.ReferenceResource(vlsbdr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vlsbdr *Resource) ImportState(state io.Reader) error {
	vlsbdr.state = &vaultLdapSecretBackendDynamicRoleState{}
	if err := json.NewDecoder(state).Decode(vlsbdr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vlsbdr.Type(), vlsbdr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vlsbdr *Resource) State() (*vaultLdapSecretBackendDynamicRoleState, bool) {
	return vlsbdr.state, vlsbdr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vlsbdr *Resource) StateMust() *vaultLdapSecretBackendDynamicRoleState {
	if vlsbdr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vlsbdr.Type(), vlsbdr.LocalName()))
	}
	return vlsbdr.state
}

// Args contains the configurations for vault_ldap_secret_backend_dynamic_role.
type Args struct {
	// CreationLdif: string, required
	CreationLdif terra.StringValue `hcl:"creation_ldif,attr" validate:"required"`
	// DefaultTtl: number, optional
	DefaultTtl terra.NumberValue `hcl:"default_ttl,attr"`
	// DeletionLdif: string, required
	DeletionLdif terra.StringValue `hcl:"deletion_ldif,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxTtl: number, optional
	MaxTtl terra.NumberValue `hcl:"max_ttl,attr"`
	// Mount: string, optional
	Mount terra.StringValue `hcl:"mount,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RoleName: string, required
	RoleName terra.StringValue `hcl:"role_name,attr" validate:"required"`
	// RollbackLdif: string, optional
	RollbackLdif terra.StringValue `hcl:"rollback_ldif,attr"`
	// UsernameTemplate: string, optional
	UsernameTemplate terra.StringValue `hcl:"username_template,attr"`
}

type vaultLdapSecretBackendDynamicRoleAttributes struct {
	ref terra.Reference
}

// CreationLdif returns a reference to field creation_ldif of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) CreationLdif() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("creation_ldif"))
}

// DefaultTtl returns a reference to field default_ttl of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) DefaultTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(vlsbdr.ref.Append("default_ttl"))
}

// DeletionLdif returns a reference to field deletion_ldif of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) DeletionLdif() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("deletion_ldif"))
}

// Id returns a reference to field id of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("id"))
}

// MaxTtl returns a reference to field max_ttl of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) MaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(vlsbdr.ref.Append("max_ttl"))
}

// Mount returns a reference to field mount of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) Mount() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("mount"))
}

// Namespace returns a reference to field namespace of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("namespace"))
}

// RoleName returns a reference to field role_name of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) RoleName() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("role_name"))
}

// RollbackLdif returns a reference to field rollback_ldif of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) RollbackLdif() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("rollback_ldif"))
}

// UsernameTemplate returns a reference to field username_template of vault_ldap_secret_backend_dynamic_role.
func (vlsbdr vaultLdapSecretBackendDynamicRoleAttributes) UsernameTemplate() terra.StringValue {
	return terra.ReferenceAsString(vlsbdr.ref.Append("username_template"))
}

type vaultLdapSecretBackendDynamicRoleState struct {
	CreationLdif     string  `json:"creation_ldif"`
	DefaultTtl       float64 `json:"default_ttl"`
	DeletionLdif     string  `json:"deletion_ldif"`
	Id               string  `json:"id"`
	MaxTtl           float64 `json:"max_ttl"`
	Mount            string  `json:"mount"`
	Namespace        string  `json:"namespace"`
	RoleName         string  `json:"role_name"`
	RollbackLdif     string  `json:"rollback_ldif"`
	UsernameTemplate string  `json:"username_template"`
}
