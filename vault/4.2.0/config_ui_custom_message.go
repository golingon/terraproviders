// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	configuicustommessage "github.com/golingon/terraproviders/vault/4.2.0/configuicustommessage"
	"io"
)

// NewConfigUiCustomMessage creates a new instance of [ConfigUiCustomMessage].
func NewConfigUiCustomMessage(name string, args ConfigUiCustomMessageArgs) *ConfigUiCustomMessage {
	return &ConfigUiCustomMessage{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ConfigUiCustomMessage)(nil)

// ConfigUiCustomMessage represents the Terraform resource vault_config_ui_custom_message.
type ConfigUiCustomMessage struct {
	Name      string
	Args      ConfigUiCustomMessageArgs
	state     *configUiCustomMessageState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ConfigUiCustomMessage].
func (cucm *ConfigUiCustomMessage) Type() string {
	return "vault_config_ui_custom_message"
}

// LocalName returns the local name for [ConfigUiCustomMessage].
func (cucm *ConfigUiCustomMessage) LocalName() string {
	return cucm.Name
}

// Configuration returns the configuration (args) for [ConfigUiCustomMessage].
func (cucm *ConfigUiCustomMessage) Configuration() interface{} {
	return cucm.Args
}

// DependOn is used for other resources to depend on [ConfigUiCustomMessage].
func (cucm *ConfigUiCustomMessage) DependOn() terra.Reference {
	return terra.ReferenceResource(cucm)
}

// Dependencies returns the list of resources [ConfigUiCustomMessage] depends_on.
func (cucm *ConfigUiCustomMessage) Dependencies() terra.Dependencies {
	return cucm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ConfigUiCustomMessage].
func (cucm *ConfigUiCustomMessage) LifecycleManagement() *terra.Lifecycle {
	return cucm.Lifecycle
}

// Attributes returns the attributes for [ConfigUiCustomMessage].
func (cucm *ConfigUiCustomMessage) Attributes() configUiCustomMessageAttributes {
	return configUiCustomMessageAttributes{ref: terra.ReferenceResource(cucm)}
}

// ImportState imports the given attribute values into [ConfigUiCustomMessage]'s state.
func (cucm *ConfigUiCustomMessage) ImportState(av io.Reader) error {
	cucm.state = &configUiCustomMessageState{}
	if err := json.NewDecoder(av).Decode(cucm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cucm.Type(), cucm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ConfigUiCustomMessage] has state.
func (cucm *ConfigUiCustomMessage) State() (*configUiCustomMessageState, bool) {
	return cucm.state, cucm.state != nil
}

// StateMust returns the state for [ConfigUiCustomMessage]. Panics if the state is nil.
func (cucm *ConfigUiCustomMessage) StateMust() *configUiCustomMessageState {
	if cucm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cucm.Type(), cucm.LocalName()))
	}
	return cucm.state
}

// ConfigUiCustomMessageArgs contains the configurations for vault_config_ui_custom_message.
type ConfigUiCustomMessageArgs struct {
	// Authenticated: bool, optional
	Authenticated terra.BoolValue `hcl:"authenticated,attr"`
	// EndTime: string, optional
	EndTime terra.StringValue `hcl:"end_time,attr"`
	// MessageBase64: string, required
	MessageBase64 terra.StringValue `hcl:"message_base64,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Options: map of string, optional
	Options terra.MapValue[terra.StringValue] `hcl:"options,attr"`
	// StartTime: string, required
	StartTime terra.StringValue `hcl:"start_time,attr" validate:"required"`
	// Title: string, required
	Title terra.StringValue `hcl:"title,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Link: optional
	Link *configuicustommessage.Link `hcl:"link,block"`
}
type configUiCustomMessageAttributes struct {
	ref terra.Reference
}

// Authenticated returns a reference to field authenticated of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) Authenticated() terra.BoolValue {
	return terra.ReferenceAsBool(cucm.ref.Append("authenticated"))
}

// EndTime returns a reference to field end_time of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("end_time"))
}

// Id returns a reference to field id of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("id"))
}

// MessageBase64 returns a reference to field message_base64 of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) MessageBase64() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("message_base64"))
}

// Namespace returns a reference to field namespace of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("namespace"))
}

// Options returns a reference to field options of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) Options() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cucm.ref.Append("options"))
}

// StartTime returns a reference to field start_time of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("start_time"))
}

// Title returns a reference to field title of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("title"))
}

// Type returns a reference to field type of vault_config_ui_custom_message.
func (cucm configUiCustomMessageAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cucm.ref.Append("type"))
}

func (cucm configUiCustomMessageAttributes) Link() terra.SetValue[configuicustommessage.LinkAttributes] {
	return terra.ReferenceAsSet[configuicustommessage.LinkAttributes](cucm.ref.Append("link"))
}

type configUiCustomMessageState struct {
	Authenticated bool                              `json:"authenticated"`
	EndTime       string                            `json:"end_time"`
	Id            string                            `json:"id"`
	MessageBase64 string                            `json:"message_base64"`
	Namespace     string                            `json:"namespace"`
	Options       map[string]string                 `json:"options"`
	StartTime     string                            `json:"start_time"`
	Title         string                            `json:"title"`
	Type          string                            `json:"type"`
	Link          []configuicustommessage.LinkState `json:"link"`
}
