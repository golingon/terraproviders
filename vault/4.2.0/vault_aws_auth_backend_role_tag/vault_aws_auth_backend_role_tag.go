// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_aws_auth_backend_role_tag

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_aws_auth_backend_role_tag.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultAwsAuthBackendRoleTagState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vaabrt *Resource) Type() string {
	return "vault_aws_auth_backend_role_tag"
}

// LocalName returns the local name for [Resource].
func (vaabrt *Resource) LocalName() string {
	return vaabrt.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vaabrt *Resource) Configuration() interface{} {
	return vaabrt.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vaabrt *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vaabrt)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vaabrt *Resource) Dependencies() terra.Dependencies {
	return vaabrt.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vaabrt *Resource) LifecycleManagement() *terra.Lifecycle {
	return vaabrt.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vaabrt *Resource) Attributes() vaultAwsAuthBackendRoleTagAttributes {
	return vaultAwsAuthBackendRoleTagAttributes{ref: terra.ReferenceResource(vaabrt)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vaabrt *Resource) ImportState(state io.Reader) error {
	vaabrt.state = &vaultAwsAuthBackendRoleTagState{}
	if err := json.NewDecoder(state).Decode(vaabrt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaabrt.Type(), vaabrt.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vaabrt *Resource) State() (*vaultAwsAuthBackendRoleTagState, bool) {
	return vaabrt.state, vaabrt.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vaabrt *Resource) StateMust() *vaultAwsAuthBackendRoleTagState {
	if vaabrt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaabrt.Type(), vaabrt.LocalName()))
	}
	return vaabrt.state
}

// Args contains the configurations for vault_aws_auth_backend_role_tag.
type Args struct {
	// AllowInstanceMigration: bool, optional
	AllowInstanceMigration terra.BoolValue `hcl:"allow_instance_migration,attr"`
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// DisallowReauthentication: bool, optional
	DisallowReauthentication terra.BoolValue `hcl:"disallow_reauthentication,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, optional
	InstanceId terra.StringValue `hcl:"instance_id,attr"`
	// MaxTtl: string, optional
	MaxTtl terra.StringValue `hcl:"max_ttl,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Policies: set of string, optional
	Policies terra.SetValue[terra.StringValue] `hcl:"policies,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
}

type vaultAwsAuthBackendRoleTagAttributes struct {
	ref terra.Reference
}

// AllowInstanceMigration returns a reference to field allow_instance_migration of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) AllowInstanceMigration() terra.BoolValue {
	return terra.ReferenceAsBool(vaabrt.ref.Append("allow_instance_migration"))
}

// Backend returns a reference to field backend of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("backend"))
}

// DisallowReauthentication returns a reference to field disallow_reauthentication of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) DisallowReauthentication() terra.BoolValue {
	return terra.ReferenceAsBool(vaabrt.ref.Append("disallow_reauthentication"))
}

// Id returns a reference to field id of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("instance_id"))
}

// MaxTtl returns a reference to field max_ttl of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) MaxTtl() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("max_ttl"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("namespace"))
}

// Policies returns a reference to field policies of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) Policies() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vaabrt.ref.Append("policies"))
}

// Role returns a reference to field role of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("role"))
}

// TagKey returns a reference to field tag_key of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) TagKey() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("tag_key"))
}

// TagValue returns a reference to field tag_value of vault_aws_auth_backend_role_tag.
func (vaabrt vaultAwsAuthBackendRoleTagAttributes) TagValue() terra.StringValue {
	return terra.ReferenceAsString(vaabrt.ref.Append("tag_value"))
}

type vaultAwsAuthBackendRoleTagState struct {
	AllowInstanceMigration   bool     `json:"allow_instance_migration"`
	Backend                  string   `json:"backend"`
	DisallowReauthentication bool     `json:"disallow_reauthentication"`
	Id                       string   `json:"id"`
	InstanceId               string   `json:"instance_id"`
	MaxTtl                   string   `json:"max_ttl"`
	Namespace                string   `json:"namespace"`
	Policies                 []string `json:"policies"`
	Role                     string   `json:"role"`
	TagKey                   string   `json:"tag_key"`
	TagValue                 string   `json:"tag_value"`
}
