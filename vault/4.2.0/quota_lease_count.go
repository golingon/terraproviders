// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewQuotaLeaseCount creates a new instance of [QuotaLeaseCount].
func NewQuotaLeaseCount(name string, args QuotaLeaseCountArgs) *QuotaLeaseCount {
	return &QuotaLeaseCount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*QuotaLeaseCount)(nil)

// QuotaLeaseCount represents the Terraform resource vault_quota_lease_count.
type QuotaLeaseCount struct {
	Name      string
	Args      QuotaLeaseCountArgs
	state     *quotaLeaseCountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [QuotaLeaseCount].
func (qlc *QuotaLeaseCount) Type() string {
	return "vault_quota_lease_count"
}

// LocalName returns the local name for [QuotaLeaseCount].
func (qlc *QuotaLeaseCount) LocalName() string {
	return qlc.Name
}

// Configuration returns the configuration (args) for [QuotaLeaseCount].
func (qlc *QuotaLeaseCount) Configuration() interface{} {
	return qlc.Args
}

// DependOn is used for other resources to depend on [QuotaLeaseCount].
func (qlc *QuotaLeaseCount) DependOn() terra.Reference {
	return terra.ReferenceResource(qlc)
}

// Dependencies returns the list of resources [QuotaLeaseCount] depends_on.
func (qlc *QuotaLeaseCount) Dependencies() terra.Dependencies {
	return qlc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [QuotaLeaseCount].
func (qlc *QuotaLeaseCount) LifecycleManagement() *terra.Lifecycle {
	return qlc.Lifecycle
}

// Attributes returns the attributes for [QuotaLeaseCount].
func (qlc *QuotaLeaseCount) Attributes() quotaLeaseCountAttributes {
	return quotaLeaseCountAttributes{ref: terra.ReferenceResource(qlc)}
}

// ImportState imports the given attribute values into [QuotaLeaseCount]'s state.
func (qlc *QuotaLeaseCount) ImportState(av io.Reader) error {
	qlc.state = &quotaLeaseCountState{}
	if err := json.NewDecoder(av).Decode(qlc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", qlc.Type(), qlc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [QuotaLeaseCount] has state.
func (qlc *QuotaLeaseCount) State() (*quotaLeaseCountState, bool) {
	return qlc.state, qlc.state != nil
}

// StateMust returns the state for [QuotaLeaseCount]. Panics if the state is nil.
func (qlc *QuotaLeaseCount) StateMust() *quotaLeaseCountState {
	if qlc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", qlc.Type(), qlc.LocalName()))
	}
	return qlc.state
}

// QuotaLeaseCountArgs contains the configurations for vault_quota_lease_count.
type QuotaLeaseCountArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxLeases: number, required
	MaxLeases terra.NumberValue `hcl:"max_leases,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Role: string, optional
	Role terra.StringValue `hcl:"role,attr"`
}
type quotaLeaseCountAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of vault_quota_lease_count.
func (qlc quotaLeaseCountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(qlc.ref.Append("id"))
}

// MaxLeases returns a reference to field max_leases of vault_quota_lease_count.
func (qlc quotaLeaseCountAttributes) MaxLeases() terra.NumberValue {
	return terra.ReferenceAsNumber(qlc.ref.Append("max_leases"))
}

// Name returns a reference to field name of vault_quota_lease_count.
func (qlc quotaLeaseCountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qlc.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_quota_lease_count.
func (qlc quotaLeaseCountAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(qlc.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_quota_lease_count.
func (qlc quotaLeaseCountAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(qlc.ref.Append("path"))
}

// Role returns a reference to field role of vault_quota_lease_count.
func (qlc quotaLeaseCountAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(qlc.ref.Append("role"))
}

type quotaLeaseCountState struct {
	Id        string  `json:"id"`
	MaxLeases float64 `json:"max_leases"`
	Name      string  `json:"name"`
	Namespace string  `json:"namespace"`
	Path      string  `json:"path"`
	Role      string  `json:"role"`
}
