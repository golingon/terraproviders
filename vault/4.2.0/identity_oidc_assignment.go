// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewIdentityOidcAssignment creates a new instance of [IdentityOidcAssignment].
func NewIdentityOidcAssignment(name string, args IdentityOidcAssignmentArgs) *IdentityOidcAssignment {
	return &IdentityOidcAssignment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityOidcAssignment)(nil)

// IdentityOidcAssignment represents the Terraform resource vault_identity_oidc_assignment.
type IdentityOidcAssignment struct {
	Name      string
	Args      IdentityOidcAssignmentArgs
	state     *identityOidcAssignmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityOidcAssignment].
func (ioa *IdentityOidcAssignment) Type() string {
	return "vault_identity_oidc_assignment"
}

// LocalName returns the local name for [IdentityOidcAssignment].
func (ioa *IdentityOidcAssignment) LocalName() string {
	return ioa.Name
}

// Configuration returns the configuration (args) for [IdentityOidcAssignment].
func (ioa *IdentityOidcAssignment) Configuration() interface{} {
	return ioa.Args
}

// DependOn is used for other resources to depend on [IdentityOidcAssignment].
func (ioa *IdentityOidcAssignment) DependOn() terra.Reference {
	return terra.ReferenceResource(ioa)
}

// Dependencies returns the list of resources [IdentityOidcAssignment] depends_on.
func (ioa *IdentityOidcAssignment) Dependencies() terra.Dependencies {
	return ioa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityOidcAssignment].
func (ioa *IdentityOidcAssignment) LifecycleManagement() *terra.Lifecycle {
	return ioa.Lifecycle
}

// Attributes returns the attributes for [IdentityOidcAssignment].
func (ioa *IdentityOidcAssignment) Attributes() identityOidcAssignmentAttributes {
	return identityOidcAssignmentAttributes{ref: terra.ReferenceResource(ioa)}
}

// ImportState imports the given attribute values into [IdentityOidcAssignment]'s state.
func (ioa *IdentityOidcAssignment) ImportState(av io.Reader) error {
	ioa.state = &identityOidcAssignmentState{}
	if err := json.NewDecoder(av).Decode(ioa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ioa.Type(), ioa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityOidcAssignment] has state.
func (ioa *IdentityOidcAssignment) State() (*identityOidcAssignmentState, bool) {
	return ioa.state, ioa.state != nil
}

// StateMust returns the state for [IdentityOidcAssignment]. Panics if the state is nil.
func (ioa *IdentityOidcAssignment) StateMust() *identityOidcAssignmentState {
	if ioa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ioa.Type(), ioa.LocalName()))
	}
	return ioa.state
}

// IdentityOidcAssignmentArgs contains the configurations for vault_identity_oidc_assignment.
type IdentityOidcAssignmentArgs struct {
	// EntityIds: set of string, optional
	EntityIds terra.SetValue[terra.StringValue] `hcl:"entity_ids,attr"`
	// GroupIds: set of string, optional
	GroupIds terra.SetValue[terra.StringValue] `hcl:"group_ids,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}
type identityOidcAssignmentAttributes struct {
	ref terra.Reference
}

// EntityIds returns a reference to field entity_ids of vault_identity_oidc_assignment.
func (ioa identityOidcAssignmentAttributes) EntityIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ioa.ref.Append("entity_ids"))
}

// GroupIds returns a reference to field group_ids of vault_identity_oidc_assignment.
func (ioa identityOidcAssignmentAttributes) GroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ioa.ref.Append("group_ids"))
}

// Id returns a reference to field id of vault_identity_oidc_assignment.
func (ioa identityOidcAssignmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ioa.ref.Append("id"))
}

// Name returns a reference to field name of vault_identity_oidc_assignment.
func (ioa identityOidcAssignmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ioa.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_oidc_assignment.
func (ioa identityOidcAssignmentAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ioa.ref.Append("namespace"))
}

type identityOidcAssignmentState struct {
	EntityIds []string `json:"entity_ids"`
	GroupIds  []string `json:"group_ids"`
	Id        string   `json:"id"`
	Name      string   `json:"name"`
	Namespace string   `json:"namespace"`
}
