// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSecretsSyncAzureDestination creates a new instance of [SecretsSyncAzureDestination].
func NewSecretsSyncAzureDestination(name string, args SecretsSyncAzureDestinationArgs) *SecretsSyncAzureDestination {
	return &SecretsSyncAzureDestination{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecretsSyncAzureDestination)(nil)

// SecretsSyncAzureDestination represents the Terraform resource vault_secrets_sync_azure_destination.
type SecretsSyncAzureDestination struct {
	Name      string
	Args      SecretsSyncAzureDestinationArgs
	state     *secretsSyncAzureDestinationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecretsSyncAzureDestination].
func (ssad *SecretsSyncAzureDestination) Type() string {
	return "vault_secrets_sync_azure_destination"
}

// LocalName returns the local name for [SecretsSyncAzureDestination].
func (ssad *SecretsSyncAzureDestination) LocalName() string {
	return ssad.Name
}

// Configuration returns the configuration (args) for [SecretsSyncAzureDestination].
func (ssad *SecretsSyncAzureDestination) Configuration() interface{} {
	return ssad.Args
}

// DependOn is used for other resources to depend on [SecretsSyncAzureDestination].
func (ssad *SecretsSyncAzureDestination) DependOn() terra.Reference {
	return terra.ReferenceResource(ssad)
}

// Dependencies returns the list of resources [SecretsSyncAzureDestination] depends_on.
func (ssad *SecretsSyncAzureDestination) Dependencies() terra.Dependencies {
	return ssad.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecretsSyncAzureDestination].
func (ssad *SecretsSyncAzureDestination) LifecycleManagement() *terra.Lifecycle {
	return ssad.Lifecycle
}

// Attributes returns the attributes for [SecretsSyncAzureDestination].
func (ssad *SecretsSyncAzureDestination) Attributes() secretsSyncAzureDestinationAttributes {
	return secretsSyncAzureDestinationAttributes{ref: terra.ReferenceResource(ssad)}
}

// ImportState imports the given attribute values into [SecretsSyncAzureDestination]'s state.
func (ssad *SecretsSyncAzureDestination) ImportState(av io.Reader) error {
	ssad.state = &secretsSyncAzureDestinationState{}
	if err := json.NewDecoder(av).Decode(ssad.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssad.Type(), ssad.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecretsSyncAzureDestination] has state.
func (ssad *SecretsSyncAzureDestination) State() (*secretsSyncAzureDestinationState, bool) {
	return ssad.state, ssad.state != nil
}

// StateMust returns the state for [SecretsSyncAzureDestination]. Panics if the state is nil.
func (ssad *SecretsSyncAzureDestination) StateMust() *secretsSyncAzureDestinationState {
	if ssad.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssad.Type(), ssad.LocalName()))
	}
	return ssad.state
}

// SecretsSyncAzureDestinationArgs contains the configurations for vault_secrets_sync_azure_destination.
type SecretsSyncAzureDestinationArgs struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ClientSecret: string, optional
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// Cloud: string, optional
	Cloud terra.StringValue `hcl:"cloud,attr"`
	// CustomTags: map of string, optional
	CustomTags terra.MapValue[terra.StringValue] `hcl:"custom_tags,attr"`
	// Granularity: string, optional
	Granularity terra.StringValue `hcl:"granularity,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultUri: string, optional
	KeyVaultUri terra.StringValue `hcl:"key_vault_uri,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// SecretNameTemplate: string, optional
	SecretNameTemplate terra.StringValue `hcl:"secret_name_template,attr"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
}
type secretsSyncAzureDestinationAttributes struct {
	ref terra.Reference
}

// ClientId returns a reference to field client_id of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("client_id"))
}

// ClientSecret returns a reference to field client_secret of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("client_secret"))
}

// Cloud returns a reference to field cloud of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) Cloud() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("cloud"))
}

// CustomTags returns a reference to field custom_tags of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) CustomTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ssad.ref.Append("custom_tags"))
}

// Granularity returns a reference to field granularity of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) Granularity() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("granularity"))
}

// Id returns a reference to field id of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("id"))
}

// KeyVaultUri returns a reference to field key_vault_uri of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) KeyVaultUri() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("key_vault_uri"))
}

// Name returns a reference to field name of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("namespace"))
}

// SecretNameTemplate returns a reference to field secret_name_template of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) SecretNameTemplate() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("secret_name_template"))
}

// TenantId returns a reference to field tenant_id of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("tenant_id"))
}

// Type returns a reference to field type of vault_secrets_sync_azure_destination.
func (ssad secretsSyncAzureDestinationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ssad.ref.Append("type"))
}

type secretsSyncAzureDestinationState struct {
	ClientId           string            `json:"client_id"`
	ClientSecret       string            `json:"client_secret"`
	Cloud              string            `json:"cloud"`
	CustomTags         map[string]string `json:"custom_tags"`
	Granularity        string            `json:"granularity"`
	Id                 string            `json:"id"`
	KeyVaultUri        string            `json:"key_vault_uri"`
	Name               string            `json:"name"`
	Namespace          string            `json:"namespace"`
	SecretNameTemplate string            `json:"secret_name_template"`
	TenantId           string            `json:"tenant_id"`
	Type               string            `json:"type"`
}
