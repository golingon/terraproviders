// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewLdapAuthBackendGroup creates a new instance of [LdapAuthBackendGroup].
func NewLdapAuthBackendGroup(name string, args LdapAuthBackendGroupArgs) *LdapAuthBackendGroup {
	return &LdapAuthBackendGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LdapAuthBackendGroup)(nil)

// LdapAuthBackendGroup represents the Terraform resource vault_ldap_auth_backend_group.
type LdapAuthBackendGroup struct {
	Name      string
	Args      LdapAuthBackendGroupArgs
	state     *ldapAuthBackendGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LdapAuthBackendGroup].
func (labg *LdapAuthBackendGroup) Type() string {
	return "vault_ldap_auth_backend_group"
}

// LocalName returns the local name for [LdapAuthBackendGroup].
func (labg *LdapAuthBackendGroup) LocalName() string {
	return labg.Name
}

// Configuration returns the configuration (args) for [LdapAuthBackendGroup].
func (labg *LdapAuthBackendGroup) Configuration() interface{} {
	return labg.Args
}

// DependOn is used for other resources to depend on [LdapAuthBackendGroup].
func (labg *LdapAuthBackendGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(labg)
}

// Dependencies returns the list of resources [LdapAuthBackendGroup] depends_on.
func (labg *LdapAuthBackendGroup) Dependencies() terra.Dependencies {
	return labg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LdapAuthBackendGroup].
func (labg *LdapAuthBackendGroup) LifecycleManagement() *terra.Lifecycle {
	return labg.Lifecycle
}

// Attributes returns the attributes for [LdapAuthBackendGroup].
func (labg *LdapAuthBackendGroup) Attributes() ldapAuthBackendGroupAttributes {
	return ldapAuthBackendGroupAttributes{ref: terra.ReferenceResource(labg)}
}

// ImportState imports the given attribute values into [LdapAuthBackendGroup]'s state.
func (labg *LdapAuthBackendGroup) ImportState(av io.Reader) error {
	labg.state = &ldapAuthBackendGroupState{}
	if err := json.NewDecoder(av).Decode(labg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", labg.Type(), labg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LdapAuthBackendGroup] has state.
func (labg *LdapAuthBackendGroup) State() (*ldapAuthBackendGroupState, bool) {
	return labg.state, labg.state != nil
}

// StateMust returns the state for [LdapAuthBackendGroup]. Panics if the state is nil.
func (labg *LdapAuthBackendGroup) StateMust() *ldapAuthBackendGroupState {
	if labg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", labg.Type(), labg.LocalName()))
	}
	return labg.state
}

// LdapAuthBackendGroupArgs contains the configurations for vault_ldap_auth_backend_group.
type LdapAuthBackendGroupArgs struct {
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// Groupname: string, required
	Groupname terra.StringValue `hcl:"groupname,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Policies: set of string, optional
	Policies terra.SetValue[terra.StringValue] `hcl:"policies,attr"`
}
type ldapAuthBackendGroupAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_ldap_auth_backend_group.
func (labg ldapAuthBackendGroupAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(labg.ref.Append("backend"))
}

// Groupname returns a reference to field groupname of vault_ldap_auth_backend_group.
func (labg ldapAuthBackendGroupAttributes) Groupname() terra.StringValue {
	return terra.ReferenceAsString(labg.ref.Append("groupname"))
}

// Id returns a reference to field id of vault_ldap_auth_backend_group.
func (labg ldapAuthBackendGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(labg.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_ldap_auth_backend_group.
func (labg ldapAuthBackendGroupAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(labg.ref.Append("namespace"))
}

// Policies returns a reference to field policies of vault_ldap_auth_backend_group.
func (labg ldapAuthBackendGroupAttributes) Policies() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](labg.ref.Append("policies"))
}

type ldapAuthBackendGroupState struct {
	Backend   string   `json:"backend"`
	Groupname string   `json:"groupname"`
	Id        string   `json:"id"`
	Namespace string   `json:"namespace"`
	Policies  []string `json:"policies"`
}
