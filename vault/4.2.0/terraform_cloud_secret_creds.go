// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewTerraformCloudSecretCreds creates a new instance of [TerraformCloudSecretCreds].
func NewTerraformCloudSecretCreds(name string, args TerraformCloudSecretCredsArgs) *TerraformCloudSecretCreds {
	return &TerraformCloudSecretCreds{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*TerraformCloudSecretCreds)(nil)

// TerraformCloudSecretCreds represents the Terraform resource vault_terraform_cloud_secret_creds.
type TerraformCloudSecretCreds struct {
	Name      string
	Args      TerraformCloudSecretCredsArgs
	state     *terraformCloudSecretCredsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [TerraformCloudSecretCreds].
func (tcsc *TerraformCloudSecretCreds) Type() string {
	return "vault_terraform_cloud_secret_creds"
}

// LocalName returns the local name for [TerraformCloudSecretCreds].
func (tcsc *TerraformCloudSecretCreds) LocalName() string {
	return tcsc.Name
}

// Configuration returns the configuration (args) for [TerraformCloudSecretCreds].
func (tcsc *TerraformCloudSecretCreds) Configuration() interface{} {
	return tcsc.Args
}

// DependOn is used for other resources to depend on [TerraformCloudSecretCreds].
func (tcsc *TerraformCloudSecretCreds) DependOn() terra.Reference {
	return terra.ReferenceResource(tcsc)
}

// Dependencies returns the list of resources [TerraformCloudSecretCreds] depends_on.
func (tcsc *TerraformCloudSecretCreds) Dependencies() terra.Dependencies {
	return tcsc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [TerraformCloudSecretCreds].
func (tcsc *TerraformCloudSecretCreds) LifecycleManagement() *terra.Lifecycle {
	return tcsc.Lifecycle
}

// Attributes returns the attributes for [TerraformCloudSecretCreds].
func (tcsc *TerraformCloudSecretCreds) Attributes() terraformCloudSecretCredsAttributes {
	return terraformCloudSecretCredsAttributes{ref: terra.ReferenceResource(tcsc)}
}

// ImportState imports the given attribute values into [TerraformCloudSecretCreds]'s state.
func (tcsc *TerraformCloudSecretCreds) ImportState(av io.Reader) error {
	tcsc.state = &terraformCloudSecretCredsState{}
	if err := json.NewDecoder(av).Decode(tcsc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", tcsc.Type(), tcsc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [TerraformCloudSecretCreds] has state.
func (tcsc *TerraformCloudSecretCreds) State() (*terraformCloudSecretCredsState, bool) {
	return tcsc.state, tcsc.state != nil
}

// StateMust returns the state for [TerraformCloudSecretCreds]. Panics if the state is nil.
func (tcsc *TerraformCloudSecretCreds) StateMust() *terraformCloudSecretCredsState {
	if tcsc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", tcsc.Type(), tcsc.LocalName()))
	}
	return tcsc.state
}

// TerraformCloudSecretCredsArgs contains the configurations for vault_terraform_cloud_secret_creds.
type TerraformCloudSecretCredsArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
}
type terraformCloudSecretCredsAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("backend"))
}

// Id returns a reference to field id of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("id"))
}

// LeaseId returns a reference to field lease_id of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) LeaseId() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("lease_id"))
}

// Namespace returns a reference to field namespace of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("namespace"))
}

// Organization returns a reference to field organization of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) Organization() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("organization"))
}

// Role returns a reference to field role of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("role"))
}

// TeamId returns a reference to field team_id of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) TeamId() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("team_id"))
}

// Token returns a reference to field token of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) Token() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("token"))
}

// TokenId returns a reference to field token_id of vault_terraform_cloud_secret_creds.
func (tcsc terraformCloudSecretCredsAttributes) TokenId() terra.StringValue {
	return terra.ReferenceAsString(tcsc.ref.Append("token_id"))
}

type terraformCloudSecretCredsState struct {
	Backend      string `json:"backend"`
	Id           string `json:"id"`
	LeaseId      string `json:"lease_id"`
	Namespace    string `json:"namespace"`
	Organization string `json:"organization"`
	Role         string `json:"role"`
	TeamId       string `json:"team_id"`
	Token        string `json:"token"`
	TokenId      string `json:"token_id"`
}
