// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewAwsAuthBackendIdentityWhitelist creates a new instance of [AwsAuthBackendIdentityWhitelist].
func NewAwsAuthBackendIdentityWhitelist(name string, args AwsAuthBackendIdentityWhitelistArgs) *AwsAuthBackendIdentityWhitelist {
	return &AwsAuthBackendIdentityWhitelist{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AwsAuthBackendIdentityWhitelist)(nil)

// AwsAuthBackendIdentityWhitelist represents the Terraform resource vault_aws_auth_backend_identity_whitelist.
type AwsAuthBackendIdentityWhitelist struct {
	Name      string
	Args      AwsAuthBackendIdentityWhitelistArgs
	state     *awsAuthBackendIdentityWhitelistState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AwsAuthBackendIdentityWhitelist].
func (aabiw *AwsAuthBackendIdentityWhitelist) Type() string {
	return "vault_aws_auth_backend_identity_whitelist"
}

// LocalName returns the local name for [AwsAuthBackendIdentityWhitelist].
func (aabiw *AwsAuthBackendIdentityWhitelist) LocalName() string {
	return aabiw.Name
}

// Configuration returns the configuration (args) for [AwsAuthBackendIdentityWhitelist].
func (aabiw *AwsAuthBackendIdentityWhitelist) Configuration() interface{} {
	return aabiw.Args
}

// DependOn is used for other resources to depend on [AwsAuthBackendIdentityWhitelist].
func (aabiw *AwsAuthBackendIdentityWhitelist) DependOn() terra.Reference {
	return terra.ReferenceResource(aabiw)
}

// Dependencies returns the list of resources [AwsAuthBackendIdentityWhitelist] depends_on.
func (aabiw *AwsAuthBackendIdentityWhitelist) Dependencies() terra.Dependencies {
	return aabiw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AwsAuthBackendIdentityWhitelist].
func (aabiw *AwsAuthBackendIdentityWhitelist) LifecycleManagement() *terra.Lifecycle {
	return aabiw.Lifecycle
}

// Attributes returns the attributes for [AwsAuthBackendIdentityWhitelist].
func (aabiw *AwsAuthBackendIdentityWhitelist) Attributes() awsAuthBackendIdentityWhitelistAttributes {
	return awsAuthBackendIdentityWhitelistAttributes{ref: terra.ReferenceResource(aabiw)}
}

// ImportState imports the given attribute values into [AwsAuthBackendIdentityWhitelist]'s state.
func (aabiw *AwsAuthBackendIdentityWhitelist) ImportState(av io.Reader) error {
	aabiw.state = &awsAuthBackendIdentityWhitelistState{}
	if err := json.NewDecoder(av).Decode(aabiw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aabiw.Type(), aabiw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AwsAuthBackendIdentityWhitelist] has state.
func (aabiw *AwsAuthBackendIdentityWhitelist) State() (*awsAuthBackendIdentityWhitelistState, bool) {
	return aabiw.state, aabiw.state != nil
}

// StateMust returns the state for [AwsAuthBackendIdentityWhitelist]. Panics if the state is nil.
func (aabiw *AwsAuthBackendIdentityWhitelist) StateMust() *awsAuthBackendIdentityWhitelistState {
	if aabiw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aabiw.Type(), aabiw.LocalName()))
	}
	return aabiw.state
}

// AwsAuthBackendIdentityWhitelistArgs contains the configurations for vault_aws_auth_backend_identity_whitelist.
type AwsAuthBackendIdentityWhitelistArgs struct {
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// DisablePeriodicTidy: bool, optional
	DisablePeriodicTidy terra.BoolValue `hcl:"disable_periodic_tidy,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// SafetyBuffer: number, optional
	SafetyBuffer terra.NumberValue `hcl:"safety_buffer,attr"`
}
type awsAuthBackendIdentityWhitelistAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_aws_auth_backend_identity_whitelist.
func (aabiw awsAuthBackendIdentityWhitelistAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(aabiw.ref.Append("backend"))
}

// DisablePeriodicTidy returns a reference to field disable_periodic_tidy of vault_aws_auth_backend_identity_whitelist.
func (aabiw awsAuthBackendIdentityWhitelistAttributes) DisablePeriodicTidy() terra.BoolValue {
	return terra.ReferenceAsBool(aabiw.ref.Append("disable_periodic_tidy"))
}

// Id returns a reference to field id of vault_aws_auth_backend_identity_whitelist.
func (aabiw awsAuthBackendIdentityWhitelistAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aabiw.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_aws_auth_backend_identity_whitelist.
func (aabiw awsAuthBackendIdentityWhitelistAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(aabiw.ref.Append("namespace"))
}

// SafetyBuffer returns a reference to field safety_buffer of vault_aws_auth_backend_identity_whitelist.
func (aabiw awsAuthBackendIdentityWhitelistAttributes) SafetyBuffer() terra.NumberValue {
	return terra.ReferenceAsNumber(aabiw.ref.Append("safety_buffer"))
}

type awsAuthBackendIdentityWhitelistState struct {
	Backend             string  `json:"backend"`
	DisablePeriodicTidy bool    `json:"disable_periodic_tidy"`
	Id                  string  `json:"id"`
	Namespace           string  `json:"namespace"`
	SafetyBuffer        float64 `json:"safety_buffer"`
}
