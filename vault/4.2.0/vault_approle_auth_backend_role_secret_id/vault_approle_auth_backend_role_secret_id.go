// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_approle_auth_backend_role_secret_id

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_approle_auth_backend_role_secret_id.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultApproleAuthBackendRoleSecretIdState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vaabrsi *Resource) Type() string {
	return "vault_approle_auth_backend_role_secret_id"
}

// LocalName returns the local name for [Resource].
func (vaabrsi *Resource) LocalName() string {
	return vaabrsi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vaabrsi *Resource) Configuration() interface{} {
	return vaabrsi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vaabrsi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vaabrsi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vaabrsi *Resource) Dependencies() terra.Dependencies {
	return vaabrsi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vaabrsi *Resource) LifecycleManagement() *terra.Lifecycle {
	return vaabrsi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vaabrsi *Resource) Attributes() vaultApproleAuthBackendRoleSecretIdAttributes {
	return vaultApproleAuthBackendRoleSecretIdAttributes{ref: terra.ReferenceResource(vaabrsi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vaabrsi *Resource) ImportState(state io.Reader) error {
	vaabrsi.state = &vaultApproleAuthBackendRoleSecretIdState{}
	if err := json.NewDecoder(state).Decode(vaabrsi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaabrsi.Type(), vaabrsi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vaabrsi *Resource) State() (*vaultApproleAuthBackendRoleSecretIdState, bool) {
	return vaabrsi.state, vaabrsi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vaabrsi *Resource) StateMust() *vaultApproleAuthBackendRoleSecretIdState {
	if vaabrsi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaabrsi.Type(), vaabrsi.LocalName()))
	}
	return vaabrsi.state
}

// Args contains the configurations for vault_approle_auth_backend_role_secret_id.
type Args struct {
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// CidrList: set of string, optional
	CidrList terra.SetValue[terra.StringValue] `hcl:"cidr_list,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Metadata: string, optional
	Metadata terra.StringValue `hcl:"metadata,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RoleName: string, required
	RoleName terra.StringValue `hcl:"role_name,attr" validate:"required"`
	// SecretId: string, optional
	SecretId terra.StringValue `hcl:"secret_id,attr"`
	// WithWrappedAccessor: bool, optional
	WithWrappedAccessor terra.BoolValue `hcl:"with_wrapped_accessor,attr"`
	// WrappingTtl: string, optional
	WrappingTtl terra.StringValue `hcl:"wrapping_ttl,attr"`
}

type vaultApproleAuthBackendRoleSecretIdAttributes struct {
	ref terra.Reference
}

// Accessor returns a reference to field accessor of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) Accessor() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("accessor"))
}

// Backend returns a reference to field backend of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("backend"))
}

// CidrList returns a reference to field cidr_list of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) CidrList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vaabrsi.ref.Append("cidr_list"))
}

// Id returns a reference to field id of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("id"))
}

// Metadata returns a reference to field metadata of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) Metadata() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("metadata"))
}

// Namespace returns a reference to field namespace of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("namespace"))
}

// RoleName returns a reference to field role_name of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) RoleName() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("role_name"))
}

// SecretId returns a reference to field secret_id of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) SecretId() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("secret_id"))
}

// WithWrappedAccessor returns a reference to field with_wrapped_accessor of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) WithWrappedAccessor() terra.BoolValue {
	return terra.ReferenceAsBool(vaabrsi.ref.Append("with_wrapped_accessor"))
}

// WrappingAccessor returns a reference to field wrapping_accessor of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) WrappingAccessor() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("wrapping_accessor"))
}

// WrappingToken returns a reference to field wrapping_token of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) WrappingToken() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("wrapping_token"))
}

// WrappingTtl returns a reference to field wrapping_ttl of vault_approle_auth_backend_role_secret_id.
func (vaabrsi vaultApproleAuthBackendRoleSecretIdAttributes) WrappingTtl() terra.StringValue {
	return terra.ReferenceAsString(vaabrsi.ref.Append("wrapping_ttl"))
}

type vaultApproleAuthBackendRoleSecretIdState struct {
	Accessor            string   `json:"accessor"`
	Backend             string   `json:"backend"`
	CidrList            []string `json:"cidr_list"`
	Id                  string   `json:"id"`
	Metadata            string   `json:"metadata"`
	Namespace           string   `json:"namespace"`
	RoleName            string   `json:"role_name"`
	SecretId            string   `json:"secret_id"`
	WithWrappedAccessor bool     `json:"with_wrapped_accessor"`
	WrappingAccessor    string   `json:"wrapping_accessor"`
	WrappingToken       string   `json:"wrapping_token"`
	WrappingTtl         string   `json:"wrapping_ttl"`
}
