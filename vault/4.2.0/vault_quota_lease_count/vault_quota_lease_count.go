// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_quota_lease_count

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_quota_lease_count.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultQuotaLeaseCountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vqlc *Resource) Type() string {
	return "vault_quota_lease_count"
}

// LocalName returns the local name for [Resource].
func (vqlc *Resource) LocalName() string {
	return vqlc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vqlc *Resource) Configuration() interface{} {
	return vqlc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vqlc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vqlc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vqlc *Resource) Dependencies() terra.Dependencies {
	return vqlc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vqlc *Resource) LifecycleManagement() *terra.Lifecycle {
	return vqlc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vqlc *Resource) Attributes() vaultQuotaLeaseCountAttributes {
	return vaultQuotaLeaseCountAttributes{ref: terra.ReferenceResource(vqlc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vqlc *Resource) ImportState(state io.Reader) error {
	vqlc.state = &vaultQuotaLeaseCountState{}
	if err := json.NewDecoder(state).Decode(vqlc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vqlc.Type(), vqlc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vqlc *Resource) State() (*vaultQuotaLeaseCountState, bool) {
	return vqlc.state, vqlc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vqlc *Resource) StateMust() *vaultQuotaLeaseCountState {
	if vqlc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vqlc.Type(), vqlc.LocalName()))
	}
	return vqlc.state
}

// Args contains the configurations for vault_quota_lease_count.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxLeases: number, required
	MaxLeases terra.NumberValue `hcl:"max_leases,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Role: string, optional
	Role terra.StringValue `hcl:"role,attr"`
}

type vaultQuotaLeaseCountAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of vault_quota_lease_count.
func (vqlc vaultQuotaLeaseCountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vqlc.ref.Append("id"))
}

// MaxLeases returns a reference to field max_leases of vault_quota_lease_count.
func (vqlc vaultQuotaLeaseCountAttributes) MaxLeases() terra.NumberValue {
	return terra.ReferenceAsNumber(vqlc.ref.Append("max_leases"))
}

// Name returns a reference to field name of vault_quota_lease_count.
func (vqlc vaultQuotaLeaseCountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vqlc.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_quota_lease_count.
func (vqlc vaultQuotaLeaseCountAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vqlc.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_quota_lease_count.
func (vqlc vaultQuotaLeaseCountAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vqlc.ref.Append("path"))
}

// Role returns a reference to field role of vault_quota_lease_count.
func (vqlc vaultQuotaLeaseCountAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vqlc.ref.Append("role"))
}

type vaultQuotaLeaseCountState struct {
	Id        string  `json:"id"`
	MaxLeases float64 `json:"max_leases"`
	Name      string  `json:"name"`
	Namespace string  `json:"namespace"`
	Path      string  `json:"path"`
	Role      string  `json:"role"`
}
