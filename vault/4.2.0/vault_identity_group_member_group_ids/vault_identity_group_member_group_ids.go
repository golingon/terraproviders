// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_identity_group_member_group_ids

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_identity_group_member_group_ids.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultIdentityGroupMemberGroupIdsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vigmgi *Resource) Type() string {
	return "vault_identity_group_member_group_ids"
}

// LocalName returns the local name for [Resource].
func (vigmgi *Resource) LocalName() string {
	return vigmgi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vigmgi *Resource) Configuration() interface{} {
	return vigmgi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vigmgi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vigmgi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vigmgi *Resource) Dependencies() terra.Dependencies {
	return vigmgi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vigmgi *Resource) LifecycleManagement() *terra.Lifecycle {
	return vigmgi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vigmgi *Resource) Attributes() vaultIdentityGroupMemberGroupIdsAttributes {
	return vaultIdentityGroupMemberGroupIdsAttributes{ref: terra.ReferenceResource(vigmgi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vigmgi *Resource) ImportState(state io.Reader) error {
	vigmgi.state = &vaultIdentityGroupMemberGroupIdsState{}
	if err := json.NewDecoder(state).Decode(vigmgi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vigmgi.Type(), vigmgi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vigmgi *Resource) State() (*vaultIdentityGroupMemberGroupIdsState, bool) {
	return vigmgi.state, vigmgi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vigmgi *Resource) StateMust() *vaultIdentityGroupMemberGroupIdsState {
	if vigmgi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vigmgi.Type(), vigmgi.LocalName()))
	}
	return vigmgi.state
}

// Args contains the configurations for vault_identity_group_member_group_ids.
type Args struct {
	// Exclusive: bool, optional
	Exclusive terra.BoolValue `hcl:"exclusive,attr"`
	// GroupId: string, required
	GroupId terra.StringValue `hcl:"group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MemberGroupIds: set of string, optional
	MemberGroupIds terra.SetValue[terra.StringValue] `hcl:"member_group_ids,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}

type vaultIdentityGroupMemberGroupIdsAttributes struct {
	ref terra.Reference
}

// Exclusive returns a reference to field exclusive of vault_identity_group_member_group_ids.
func (vigmgi vaultIdentityGroupMemberGroupIdsAttributes) Exclusive() terra.BoolValue {
	return terra.ReferenceAsBool(vigmgi.ref.Append("exclusive"))
}

// GroupId returns a reference to field group_id of vault_identity_group_member_group_ids.
func (vigmgi vaultIdentityGroupMemberGroupIdsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(vigmgi.ref.Append("group_id"))
}

// Id returns a reference to field id of vault_identity_group_member_group_ids.
func (vigmgi vaultIdentityGroupMemberGroupIdsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vigmgi.ref.Append("id"))
}

// MemberGroupIds returns a reference to field member_group_ids of vault_identity_group_member_group_ids.
func (vigmgi vaultIdentityGroupMemberGroupIdsAttributes) MemberGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vigmgi.ref.Append("member_group_ids"))
}

// Namespace returns a reference to field namespace of vault_identity_group_member_group_ids.
func (vigmgi vaultIdentityGroupMemberGroupIdsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vigmgi.ref.Append("namespace"))
}

type vaultIdentityGroupMemberGroupIdsState struct {
	Exclusive      bool     `json:"exclusive"`
	GroupId        string   `json:"group_id"`
	Id             string   `json:"id"`
	MemberGroupIds []string `json:"member_group_ids"`
	Namespace      string   `json:"namespace"`
}
