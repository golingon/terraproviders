// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSshSecretBackendCa creates a new instance of [SshSecretBackendCa].
func NewSshSecretBackendCa(name string, args SshSecretBackendCaArgs) *SshSecretBackendCa {
	return &SshSecretBackendCa{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SshSecretBackendCa)(nil)

// SshSecretBackendCa represents the Terraform resource vault_ssh_secret_backend_ca.
type SshSecretBackendCa struct {
	Name      string
	Args      SshSecretBackendCaArgs
	state     *sshSecretBackendCaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SshSecretBackendCa].
func (ssbc *SshSecretBackendCa) Type() string {
	return "vault_ssh_secret_backend_ca"
}

// LocalName returns the local name for [SshSecretBackendCa].
func (ssbc *SshSecretBackendCa) LocalName() string {
	return ssbc.Name
}

// Configuration returns the configuration (args) for [SshSecretBackendCa].
func (ssbc *SshSecretBackendCa) Configuration() interface{} {
	return ssbc.Args
}

// DependOn is used for other resources to depend on [SshSecretBackendCa].
func (ssbc *SshSecretBackendCa) DependOn() terra.Reference {
	return terra.ReferenceResource(ssbc)
}

// Dependencies returns the list of resources [SshSecretBackendCa] depends_on.
func (ssbc *SshSecretBackendCa) Dependencies() terra.Dependencies {
	return ssbc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SshSecretBackendCa].
func (ssbc *SshSecretBackendCa) LifecycleManagement() *terra.Lifecycle {
	return ssbc.Lifecycle
}

// Attributes returns the attributes for [SshSecretBackendCa].
func (ssbc *SshSecretBackendCa) Attributes() sshSecretBackendCaAttributes {
	return sshSecretBackendCaAttributes{ref: terra.ReferenceResource(ssbc)}
}

// ImportState imports the given attribute values into [SshSecretBackendCa]'s state.
func (ssbc *SshSecretBackendCa) ImportState(av io.Reader) error {
	ssbc.state = &sshSecretBackendCaState{}
	if err := json.NewDecoder(av).Decode(ssbc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssbc.Type(), ssbc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SshSecretBackendCa] has state.
func (ssbc *SshSecretBackendCa) State() (*sshSecretBackendCaState, bool) {
	return ssbc.state, ssbc.state != nil
}

// StateMust returns the state for [SshSecretBackendCa]. Panics if the state is nil.
func (ssbc *SshSecretBackendCa) StateMust() *sshSecretBackendCaState {
	if ssbc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssbc.Type(), ssbc.LocalName()))
	}
	return ssbc.state
}

// SshSecretBackendCaArgs contains the configurations for vault_ssh_secret_backend_ca.
type SshSecretBackendCaArgs struct {
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// GenerateSigningKey: bool, optional
	GenerateSigningKey terra.BoolValue `hcl:"generate_signing_key,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// PrivateKey: string, optional
	PrivateKey terra.StringValue `hcl:"private_key,attr"`
	// PublicKey: string, optional
	PublicKey terra.StringValue `hcl:"public_key,attr"`
}
type sshSecretBackendCaAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_ssh_secret_backend_ca.
func (ssbc sshSecretBackendCaAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(ssbc.ref.Append("backend"))
}

// GenerateSigningKey returns a reference to field generate_signing_key of vault_ssh_secret_backend_ca.
func (ssbc sshSecretBackendCaAttributes) GenerateSigningKey() terra.BoolValue {
	return terra.ReferenceAsBool(ssbc.ref.Append("generate_signing_key"))
}

// Id returns a reference to field id of vault_ssh_secret_backend_ca.
func (ssbc sshSecretBackendCaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssbc.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_ssh_secret_backend_ca.
func (ssbc sshSecretBackendCaAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ssbc.ref.Append("namespace"))
}

// PrivateKey returns a reference to field private_key of vault_ssh_secret_backend_ca.
func (ssbc sshSecretBackendCaAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(ssbc.ref.Append("private_key"))
}

// PublicKey returns a reference to field public_key of vault_ssh_secret_backend_ca.
func (ssbc sshSecretBackendCaAttributes) PublicKey() terra.StringValue {
	return terra.ReferenceAsString(ssbc.ref.Append("public_key"))
}

type sshSecretBackendCaState struct {
	Backend            string `json:"backend"`
	GenerateSigningKey bool   `json:"generate_signing_key"`
	Id                 string `json:"id"`
	Namespace          string `json:"namespace"`
	PrivateKey         string `json:"private_key"`
	PublicKey          string `json:"public_key"`
}
