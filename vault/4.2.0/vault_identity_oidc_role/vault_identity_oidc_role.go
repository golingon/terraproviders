// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_identity_oidc_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_identity_oidc_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultIdentityOidcRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vior *Resource) Type() string {
	return "vault_identity_oidc_role"
}

// LocalName returns the local name for [Resource].
func (vior *Resource) LocalName() string {
	return vior.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vior *Resource) Configuration() interface{} {
	return vior.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vior *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vior)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vior *Resource) Dependencies() terra.Dependencies {
	return vior.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vior *Resource) LifecycleManagement() *terra.Lifecycle {
	return vior.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vior *Resource) Attributes() vaultIdentityOidcRoleAttributes {
	return vaultIdentityOidcRoleAttributes{ref: terra.ReferenceResource(vior)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vior *Resource) ImportState(state io.Reader) error {
	vior.state = &vaultIdentityOidcRoleState{}
	if err := json.NewDecoder(state).Decode(vior.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vior.Type(), vior.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vior *Resource) State() (*vaultIdentityOidcRoleState, bool) {
	return vior.state, vior.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vior *Resource) StateMust() *vaultIdentityOidcRoleState {
	if vior.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vior.Type(), vior.LocalName()))
	}
	return vior.state
}

// Args contains the configurations for vault_identity_oidc_role.
type Args struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Template: string, optional
	Template terra.StringValue `hcl:"template,attr"`
	// Ttl: number, optional
	Ttl terra.NumberValue `hcl:"ttl,attr"`
}

type vaultIdentityOidcRoleAttributes struct {
	ref terra.Reference
}

// ClientId returns a reference to field client_id of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(vior.ref.Append("client_id"))
}

// Id returns a reference to field id of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vior.ref.Append("id"))
}

// Key returns a reference to field key of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(vior.ref.Append("key"))
}

// Name returns a reference to field name of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vior.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vior.ref.Append("namespace"))
}

// Template returns a reference to field template of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) Template() terra.StringValue {
	return terra.ReferenceAsString(vior.ref.Append("template"))
}

// Ttl returns a reference to field ttl of vault_identity_oidc_role.
func (vior vaultIdentityOidcRoleAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(vior.ref.Append("ttl"))
}

type vaultIdentityOidcRoleState struct {
	ClientId  string  `json:"client_id"`
	Id        string  `json:"id"`
	Key       string  `json:"key"`
	Name      string  `json:"name"`
	Namespace string  `json:"namespace"`
	Template  string  `json:"template"`
	Ttl       float64 `json:"ttl"`
}
