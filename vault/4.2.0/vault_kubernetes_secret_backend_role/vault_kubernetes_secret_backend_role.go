// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_kubernetes_secret_backend_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_kubernetes_secret_backend_role.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultKubernetesSecretBackendRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vksbr *Resource) Type() string {
	return "vault_kubernetes_secret_backend_role"
}

// LocalName returns the local name for [Resource].
func (vksbr *Resource) LocalName() string {
	return vksbr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vksbr *Resource) Configuration() interface{} {
	return vksbr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vksbr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vksbr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vksbr *Resource) Dependencies() terra.Dependencies {
	return vksbr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vksbr *Resource) LifecycleManagement() *terra.Lifecycle {
	return vksbr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vksbr *Resource) Attributes() vaultKubernetesSecretBackendRoleAttributes {
	return vaultKubernetesSecretBackendRoleAttributes{ref: terra.ReferenceResource(vksbr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vksbr *Resource) ImportState(state io.Reader) error {
	vksbr.state = &vaultKubernetesSecretBackendRoleState{}
	if err := json.NewDecoder(state).Decode(vksbr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vksbr.Type(), vksbr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vksbr *Resource) State() (*vaultKubernetesSecretBackendRoleState, bool) {
	return vksbr.state, vksbr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vksbr *Resource) StateMust() *vaultKubernetesSecretBackendRoleState {
	if vksbr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vksbr.Type(), vksbr.LocalName()))
	}
	return vksbr.state
}

// Args contains the configurations for vault_kubernetes_secret_backend_role.
type Args struct {
	// AllowedKubernetesNamespaceSelector: string, optional
	AllowedKubernetesNamespaceSelector terra.StringValue `hcl:"allowed_kubernetes_namespace_selector,attr"`
	// AllowedKubernetesNamespaces: list of string, optional
	AllowedKubernetesNamespaces terra.ListValue[terra.StringValue] `hcl:"allowed_kubernetes_namespaces,attr"`
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// ExtraAnnotations: map of string, optional
	ExtraAnnotations terra.MapValue[terra.StringValue] `hcl:"extra_annotations,attr"`
	// ExtraLabels: map of string, optional
	ExtraLabels terra.MapValue[terra.StringValue] `hcl:"extra_labels,attr"`
	// GeneratedRoleRules: string, optional
	GeneratedRoleRules terra.StringValue `hcl:"generated_role_rules,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesRoleName: string, optional
	KubernetesRoleName terra.StringValue `hcl:"kubernetes_role_name,attr"`
	// KubernetesRoleType: string, optional
	KubernetesRoleType terra.StringValue `hcl:"kubernetes_role_type,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NameTemplate: string, optional
	NameTemplate terra.StringValue `hcl:"name_template,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// ServiceAccountName: string, optional
	ServiceAccountName terra.StringValue `hcl:"service_account_name,attr"`
	// TokenDefaultTtl: number, optional
	TokenDefaultTtl terra.NumberValue `hcl:"token_default_ttl,attr"`
	// TokenMaxTtl: number, optional
	TokenMaxTtl terra.NumberValue `hcl:"token_max_ttl,attr"`
}

type vaultKubernetesSecretBackendRoleAttributes struct {
	ref terra.Reference
}

// AllowedKubernetesNamespaceSelector returns a reference to field allowed_kubernetes_namespace_selector of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) AllowedKubernetesNamespaceSelector() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("allowed_kubernetes_namespace_selector"))
}

// AllowedKubernetesNamespaces returns a reference to field allowed_kubernetes_namespaces of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) AllowedKubernetesNamespaces() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vksbr.ref.Append("allowed_kubernetes_namespaces"))
}

// Backend returns a reference to field backend of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("backend"))
}

// ExtraAnnotations returns a reference to field extra_annotations of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) ExtraAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vksbr.ref.Append("extra_annotations"))
}

// ExtraLabels returns a reference to field extra_labels of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) ExtraLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vksbr.ref.Append("extra_labels"))
}

// GeneratedRoleRules returns a reference to field generated_role_rules of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) GeneratedRoleRules() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("generated_role_rules"))
}

// Id returns a reference to field id of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("id"))
}

// KubernetesRoleName returns a reference to field kubernetes_role_name of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) KubernetesRoleName() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("kubernetes_role_name"))
}

// KubernetesRoleType returns a reference to field kubernetes_role_type of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) KubernetesRoleType() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("kubernetes_role_type"))
}

// Name returns a reference to field name of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("name"))
}

// NameTemplate returns a reference to field name_template of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) NameTemplate() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("name_template"))
}

// Namespace returns a reference to field namespace of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("namespace"))
}

// ServiceAccountName returns a reference to field service_account_name of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) ServiceAccountName() terra.StringValue {
	return terra.ReferenceAsString(vksbr.ref.Append("service_account_name"))
}

// TokenDefaultTtl returns a reference to field token_default_ttl of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) TokenDefaultTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(vksbr.ref.Append("token_default_ttl"))
}

// TokenMaxTtl returns a reference to field token_max_ttl of vault_kubernetes_secret_backend_role.
func (vksbr vaultKubernetesSecretBackendRoleAttributes) TokenMaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(vksbr.ref.Append("token_max_ttl"))
}

type vaultKubernetesSecretBackendRoleState struct {
	AllowedKubernetesNamespaceSelector string            `json:"allowed_kubernetes_namespace_selector"`
	AllowedKubernetesNamespaces        []string          `json:"allowed_kubernetes_namespaces"`
	Backend                            string            `json:"backend"`
	ExtraAnnotations                   map[string]string `json:"extra_annotations"`
	ExtraLabels                        map[string]string `json:"extra_labels"`
	GeneratedRoleRules                 string            `json:"generated_role_rules"`
	Id                                 string            `json:"id"`
	KubernetesRoleName                 string            `json:"kubernetes_role_name"`
	KubernetesRoleType                 string            `json:"kubernetes_role_type"`
	Name                               string            `json:"name"`
	NameTemplate                       string            `json:"name_template"`
	Namespace                          string            `json:"namespace"`
	ServiceAccountName                 string            `json:"service_account_name"`
	TokenDefaultTtl                    float64           `json:"token_default_ttl"`
	TokenMaxTtl                        float64           `json:"token_max_ttl"`
}
