// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_ssh_secret_backend_ca

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_ssh_secret_backend_ca.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultSshSecretBackendCaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vssbc *Resource) Type() string {
	return "vault_ssh_secret_backend_ca"
}

// LocalName returns the local name for [Resource].
func (vssbc *Resource) LocalName() string {
	return vssbc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vssbc *Resource) Configuration() interface{} {
	return vssbc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vssbc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vssbc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vssbc *Resource) Dependencies() terra.Dependencies {
	return vssbc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vssbc *Resource) LifecycleManagement() *terra.Lifecycle {
	return vssbc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vssbc *Resource) Attributes() vaultSshSecretBackendCaAttributes {
	return vaultSshSecretBackendCaAttributes{ref: terra.ReferenceResource(vssbc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vssbc *Resource) ImportState(state io.Reader) error {
	vssbc.state = &vaultSshSecretBackendCaState{}
	if err := json.NewDecoder(state).Decode(vssbc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vssbc.Type(), vssbc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vssbc *Resource) State() (*vaultSshSecretBackendCaState, bool) {
	return vssbc.state, vssbc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vssbc *Resource) StateMust() *vaultSshSecretBackendCaState {
	if vssbc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vssbc.Type(), vssbc.LocalName()))
	}
	return vssbc.state
}

// Args contains the configurations for vault_ssh_secret_backend_ca.
type Args struct {
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// GenerateSigningKey: bool, optional
	GenerateSigningKey terra.BoolValue `hcl:"generate_signing_key,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// PrivateKey: string, optional
	PrivateKey terra.StringValue `hcl:"private_key,attr"`
	// PublicKey: string, optional
	PublicKey terra.StringValue `hcl:"public_key,attr"`
}

type vaultSshSecretBackendCaAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_ssh_secret_backend_ca.
func (vssbc vaultSshSecretBackendCaAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vssbc.ref.Append("backend"))
}

// GenerateSigningKey returns a reference to field generate_signing_key of vault_ssh_secret_backend_ca.
func (vssbc vaultSshSecretBackendCaAttributes) GenerateSigningKey() terra.BoolValue {
	return terra.ReferenceAsBool(vssbc.ref.Append("generate_signing_key"))
}

// Id returns a reference to field id of vault_ssh_secret_backend_ca.
func (vssbc vaultSshSecretBackendCaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vssbc.ref.Append("id"))
}

// Namespace returns a reference to field namespace of vault_ssh_secret_backend_ca.
func (vssbc vaultSshSecretBackendCaAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vssbc.ref.Append("namespace"))
}

// PrivateKey returns a reference to field private_key of vault_ssh_secret_backend_ca.
func (vssbc vaultSshSecretBackendCaAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(vssbc.ref.Append("private_key"))
}

// PublicKey returns a reference to field public_key of vault_ssh_secret_backend_ca.
func (vssbc vaultSshSecretBackendCaAttributes) PublicKey() terra.StringValue {
	return terra.ReferenceAsString(vssbc.ref.Append("public_key"))
}

type vaultSshSecretBackendCaState struct {
	Backend            string `json:"backend"`
	GenerateSigningKey bool   `json:"generate_signing_key"`
	Id                 string `json:"id"`
	Namespace          string `json:"namespace"`
	PrivateKey         string `json:"private_key"`
	PublicKey          string `json:"public_key"`
}
