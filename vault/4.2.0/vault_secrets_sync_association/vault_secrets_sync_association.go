// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_secrets_sync_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_secrets_sync_association.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultSecretsSyncAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vssa *Resource) Type() string {
	return "vault_secrets_sync_association"
}

// LocalName returns the local name for [Resource].
func (vssa *Resource) LocalName() string {
	return vssa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vssa *Resource) Configuration() interface{} {
	return vssa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vssa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vssa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vssa *Resource) Dependencies() terra.Dependencies {
	return vssa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vssa *Resource) LifecycleManagement() *terra.Lifecycle {
	return vssa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vssa *Resource) Attributes() vaultSecretsSyncAssociationAttributes {
	return vaultSecretsSyncAssociationAttributes{ref: terra.ReferenceResource(vssa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vssa *Resource) ImportState(state io.Reader) error {
	vssa.state = &vaultSecretsSyncAssociationState{}
	if err := json.NewDecoder(state).Decode(vssa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vssa.Type(), vssa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vssa *Resource) State() (*vaultSecretsSyncAssociationState, bool) {
	return vssa.state, vssa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vssa *Resource) StateMust() *vaultSecretsSyncAssociationState {
	if vssa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vssa.Type(), vssa.LocalName()))
	}
	return vssa.state
}

// Args contains the configurations for vault_secrets_sync_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mount: string, required
	Mount terra.StringValue `hcl:"mount,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// SecretName: string, required
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type vaultSecretsSyncAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of vault_secrets_sync_association.
func (vssa vaultSecretsSyncAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vssa.ref.Append("id"))
}

// Mount returns a reference to field mount of vault_secrets_sync_association.
func (vssa vaultSecretsSyncAssociationAttributes) Mount() terra.StringValue {
	return terra.ReferenceAsString(vssa.ref.Append("mount"))
}

// Name returns a reference to field name of vault_secrets_sync_association.
func (vssa vaultSecretsSyncAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vssa.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_secrets_sync_association.
func (vssa vaultSecretsSyncAssociationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vssa.ref.Append("namespace"))
}

// SecretName returns a reference to field secret_name of vault_secrets_sync_association.
func (vssa vaultSecretsSyncAssociationAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(vssa.ref.Append("secret_name"))
}

// Type returns a reference to field type of vault_secrets_sync_association.
func (vssa vaultSecretsSyncAssociationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(vssa.ref.Append("type"))
}

func (vssa vaultSecretsSyncAssociationAttributes) Metadata() terra.ListValue[MetadataAttributes] {
	return terra.ReferenceAsList[MetadataAttributes](vssa.ref.Append("metadata"))
}

type vaultSecretsSyncAssociationState struct {
	Id         string          `json:"id"`
	Mount      string          `json:"mount"`
	Name       string          `json:"name"`
	Namespace  string          `json:"namespace"`
	SecretName string          `json:"secret_name"`
	Type       string          `json:"type"`
	Metadata   []MetadataState `json:"metadata"`
}
