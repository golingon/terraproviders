// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_kv_secret_v2

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource vault_kv_secret_v2.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (vksv *DataSource) DataSource() string {
	return "vault_kv_secret_v2"
}

// LocalName returns the local name for [DataSource].
func (vksv *DataSource) LocalName() string {
	return vksv.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (vksv *DataSource) Configuration() interface{} {
	return vksv.Args
}

// Attributes returns the attributes for [DataSource].
func (vksv *DataSource) Attributes() dataVaultKvSecretV2Attributes {
	return dataVaultKvSecretV2Attributes{ref: terra.ReferenceDataSource(vksv)}
}

// DataArgs contains the configurations for vault_kv_secret_v2.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mount: string, required
	Mount terra.StringValue `hcl:"mount,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Version: number, optional
	Version terra.NumberValue `hcl:"version,attr"`
}

type dataVaultKvSecretV2Attributes struct {
	ref terra.Reference
}

// CreatedTime returns a reference to field created_time of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) CreatedTime() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("created_time"))
}

// CustomMetadata returns a reference to field custom_metadata of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) CustomMetadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vksv.ref.Append("custom_metadata"))
}

// Data returns a reference to field data of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Data() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vksv.ref.Append("data"))
}

// DataJson returns a reference to field data_json of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) DataJson() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("data_json"))
}

// DeletionTime returns a reference to field deletion_time of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) DeletionTime() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("deletion_time"))
}

// Destroyed returns a reference to field destroyed of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Destroyed() terra.BoolValue {
	return terra.ReferenceAsBool(vksv.ref.Append("destroyed"))
}

// Id returns a reference to field id of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("id"))
}

// Mount returns a reference to field mount of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Mount() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("mount"))
}

// Name returns a reference to field name of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("namespace"))
}

// Path returns a reference to field path of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vksv.ref.Append("path"))
}

// Version returns a reference to field version of vault_kv_secret_v2.
func (vksv dataVaultKvSecretV2Attributes) Version() terra.NumberValue {
	return terra.ReferenceAsNumber(vksv.ref.Append("version"))
}
