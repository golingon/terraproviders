// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_policy_document

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataRule struct {
	// Capabilities: list of string, required
	Capabilities terra.ListValue[terra.StringValue] `hcl:"capabilities,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// MaxWrappingTtl: string, optional
	MaxWrappingTtl terra.StringValue `hcl:"max_wrapping_ttl,attr"`
	// MinWrappingTtl: string, optional
	MinWrappingTtl terra.StringValue `hcl:"min_wrapping_ttl,attr"`
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// RequiredParameters: list of string, optional
	RequiredParameters terra.ListValue[terra.StringValue] `hcl:"required_parameters,attr"`
	// RuleAllowedParameter: min=0
	AllowedParameter []DataRuleAllowedParameter `hcl:"allowed_parameter,block" validate:"min=0"`
	// RuleDeniedParameter: min=0
	DeniedParameter []DataRuleDeniedParameter `hcl:"denied_parameter,block" validate:"min=0"`
}

type DataRuleAllowedParameter struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: list of string, required
	Value terra.ListValue[terra.StringValue] `hcl:"value,attr" validate:"required"`
}

type DataRuleDeniedParameter struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: list of string, required
	Value terra.ListValue[terra.StringValue] `hcl:"value,attr" validate:"required"`
}

type DataRuleAttributes struct {
	ref terra.Reference
}

func (r DataRuleAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataRuleAttributes) InternalWithRef(ref terra.Reference) DataRuleAttributes {
	return DataRuleAttributes{ref: ref}
}

func (r DataRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataRuleAttributes) Capabilities() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](r.ref.Append("capabilities"))
}

func (r DataRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r DataRuleAttributes) MaxWrappingTtl() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("max_wrapping_ttl"))
}

func (r DataRuleAttributes) MinWrappingTtl() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("min_wrapping_ttl"))
}

func (r DataRuleAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("path"))
}

func (r DataRuleAttributes) RequiredParameters() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](r.ref.Append("required_parameters"))
}

func (r DataRuleAttributes) AllowedParameter() terra.ListValue[DataRuleAllowedParameterAttributes] {
	return terra.ReferenceAsList[DataRuleAllowedParameterAttributes](r.ref.Append("allowed_parameter"))
}

func (r DataRuleAttributes) DeniedParameter() terra.ListValue[DataRuleDeniedParameterAttributes] {
	return terra.ReferenceAsList[DataRuleDeniedParameterAttributes](r.ref.Append("denied_parameter"))
}

type DataRuleAllowedParameterAttributes struct {
	ref terra.Reference
}

func (ap DataRuleAllowedParameterAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap DataRuleAllowedParameterAttributes) InternalWithRef(ref terra.Reference) DataRuleAllowedParameterAttributes {
	return DataRuleAllowedParameterAttributes{ref: ref}
}

func (ap DataRuleAllowedParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap DataRuleAllowedParameterAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("key"))
}

func (ap DataRuleAllowedParameterAttributes) Value() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ap.ref.Append("value"))
}

type DataRuleDeniedParameterAttributes struct {
	ref terra.Reference
}

func (dp DataRuleDeniedParameterAttributes) InternalRef() (terra.Reference, error) {
	return dp.ref, nil
}

func (dp DataRuleDeniedParameterAttributes) InternalWithRef(ref terra.Reference) DataRuleDeniedParameterAttributes {
	return DataRuleDeniedParameterAttributes{ref: ref}
}

func (dp DataRuleDeniedParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dp.ref.InternalTokens()
}

func (dp DataRuleDeniedParameterAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(dp.ref.Append("key"))
}

func (dp DataRuleDeniedParameterAttributes) Value() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dp.ref.Append("value"))
}

type DataRuleState struct {
	Capabilities       []string                        `json:"capabilities"`
	Description        string                          `json:"description"`
	MaxWrappingTtl     string                          `json:"max_wrapping_ttl"`
	MinWrappingTtl     string                          `json:"min_wrapping_ttl"`
	Path               string                          `json:"path"`
	RequiredParameters []string                        `json:"required_parameters"`
	AllowedParameter   []DataRuleAllowedParameterState `json:"allowed_parameter"`
	DeniedParameter    []DataRuleDeniedParameterState  `json:"denied_parameter"`
}

type DataRuleAllowedParameterState struct {
	Key   string   `json:"key"`
	Value []string `json:"value"`
}

type DataRuleDeniedParameterState struct {
	Key   string   `json:"key"`
	Value []string `json:"value"`
}
