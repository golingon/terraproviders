// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewAdSecretLibrary creates a new instance of [AdSecretLibrary].
func NewAdSecretLibrary(name string, args AdSecretLibraryArgs) *AdSecretLibrary {
	return &AdSecretLibrary{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AdSecretLibrary)(nil)

// AdSecretLibrary represents the Terraform resource vault_ad_secret_library.
type AdSecretLibrary struct {
	Name      string
	Args      AdSecretLibraryArgs
	state     *adSecretLibraryState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AdSecretLibrary].
func (asl *AdSecretLibrary) Type() string {
	return "vault_ad_secret_library"
}

// LocalName returns the local name for [AdSecretLibrary].
func (asl *AdSecretLibrary) LocalName() string {
	return asl.Name
}

// Configuration returns the configuration (args) for [AdSecretLibrary].
func (asl *AdSecretLibrary) Configuration() interface{} {
	return asl.Args
}

// DependOn is used for other resources to depend on [AdSecretLibrary].
func (asl *AdSecretLibrary) DependOn() terra.Reference {
	return terra.ReferenceResource(asl)
}

// Dependencies returns the list of resources [AdSecretLibrary] depends_on.
func (asl *AdSecretLibrary) Dependencies() terra.Dependencies {
	return asl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AdSecretLibrary].
func (asl *AdSecretLibrary) LifecycleManagement() *terra.Lifecycle {
	return asl.Lifecycle
}

// Attributes returns the attributes for [AdSecretLibrary].
func (asl *AdSecretLibrary) Attributes() adSecretLibraryAttributes {
	return adSecretLibraryAttributes{ref: terra.ReferenceResource(asl)}
}

// ImportState imports the given attribute values into [AdSecretLibrary]'s state.
func (asl *AdSecretLibrary) ImportState(av io.Reader) error {
	asl.state = &adSecretLibraryState{}
	if err := json.NewDecoder(av).Decode(asl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asl.Type(), asl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AdSecretLibrary] has state.
func (asl *AdSecretLibrary) State() (*adSecretLibraryState, bool) {
	return asl.state, asl.state != nil
}

// StateMust returns the state for [AdSecretLibrary]. Panics if the state is nil.
func (asl *AdSecretLibrary) StateMust() *adSecretLibraryState {
	if asl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asl.Type(), asl.LocalName()))
	}
	return asl.state
}

// AdSecretLibraryArgs contains the configurations for vault_ad_secret_library.
type AdSecretLibraryArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// DisableCheckInEnforcement: bool, optional
	DisableCheckInEnforcement terra.BoolValue `hcl:"disable_check_in_enforcement,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxTtl: number, optional
	MaxTtl terra.NumberValue `hcl:"max_ttl,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// ServiceAccountNames: list of string, required
	ServiceAccountNames terra.ListValue[terra.StringValue] `hcl:"service_account_names,attr" validate:"required"`
	// Ttl: number, optional
	Ttl terra.NumberValue `hcl:"ttl,attr"`
}
type adSecretLibraryAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(asl.ref.Append("backend"))
}

// DisableCheckInEnforcement returns a reference to field disable_check_in_enforcement of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) DisableCheckInEnforcement() terra.BoolValue {
	return terra.ReferenceAsBool(asl.ref.Append("disable_check_in_enforcement"))
}

// Id returns a reference to field id of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asl.ref.Append("id"))
}

// MaxTtl returns a reference to field max_ttl of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) MaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(asl.ref.Append("max_ttl"))
}

// Name returns a reference to field name of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asl.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(asl.ref.Append("namespace"))
}

// ServiceAccountNames returns a reference to field service_account_names of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) ServiceAccountNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asl.ref.Append("service_account_names"))
}

// Ttl returns a reference to field ttl of vault_ad_secret_library.
func (asl adSecretLibraryAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(asl.ref.Append("ttl"))
}

type adSecretLibraryState struct {
	Backend                   string   `json:"backend"`
	DisableCheckInEnforcement bool     `json:"disable_check_in_enforcement"`
	Id                        string   `json:"id"`
	MaxTtl                    float64  `json:"max_ttl"`
	Name                      string   `json:"name"`
	Namespace                 string   `json:"namespace"`
	ServiceAccountNames       []string `json:"service_account_names"`
	Ttl                       float64  `json:"ttl"`
}
