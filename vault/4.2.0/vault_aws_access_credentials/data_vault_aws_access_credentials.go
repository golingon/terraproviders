// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_aws_access_credentials

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource vault_aws_access_credentials.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (vaac *DataSource) DataSource() string {
	return "vault_aws_access_credentials"
}

// LocalName returns the local name for [DataSource].
func (vaac *DataSource) LocalName() string {
	return vaac.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (vaac *DataSource) Configuration() interface{} {
	return vaac.Args
}

// Attributes returns the attributes for [DataSource].
func (vaac *DataSource) Attributes() dataVaultAwsAccessCredentialsAttributes {
	return dataVaultAwsAccessCredentialsAttributes{ref: terra.ReferenceDataSource(vaac)}
}

// DataArgs contains the configurations for vault_aws_access_credentials.
type DataArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// Ttl: string, optional
	Ttl terra.StringValue `hcl:"ttl,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type dataVaultAwsAccessCredentialsAttributes struct {
	ref terra.Reference
}

// AccessKey returns a reference to field access_key of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) AccessKey() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("access_key"))
}

// Backend returns a reference to field backend of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("backend"))
}

// Id returns a reference to field id of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("id"))
}

// LeaseDuration returns a reference to field lease_duration of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) LeaseDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(vaac.ref.Append("lease_duration"))
}

// LeaseId returns a reference to field lease_id of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) LeaseId() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("lease_id"))
}

// LeaseRenewable returns a reference to field lease_renewable of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) LeaseRenewable() terra.BoolValue {
	return terra.ReferenceAsBool(vaac.ref.Append("lease_renewable"))
}

// LeaseStartTime returns a reference to field lease_start_time of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) LeaseStartTime() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("lease_start_time"))
}

// Namespace returns a reference to field namespace of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("namespace"))
}

// Region returns a reference to field region of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("region"))
}

// Role returns a reference to field role of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("role"))
}

// RoleArn returns a reference to field role_arn of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("role_arn"))
}

// SecretKey returns a reference to field secret_key of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) SecretKey() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("secret_key"))
}

// SecurityToken returns a reference to field security_token of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) SecurityToken() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("security_token"))
}

// Ttl returns a reference to field ttl of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Ttl() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("ttl"))
}

// Type returns a reference to field type of vault_aws_access_credentials.
func (vaac dataVaultAwsAccessCredentialsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(vaac.ref.Append("type"))
}
