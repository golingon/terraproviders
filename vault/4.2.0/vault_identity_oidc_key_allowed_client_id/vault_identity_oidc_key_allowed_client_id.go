// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_identity_oidc_key_allowed_client_id

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_identity_oidc_key_allowed_client_id.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultIdentityOidcKeyAllowedClientIdState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (viokaci *Resource) Type() string {
	return "vault_identity_oidc_key_allowed_client_id"
}

// LocalName returns the local name for [Resource].
func (viokaci *Resource) LocalName() string {
	return viokaci.Name
}

// Configuration returns the configuration (args) for [Resource].
func (viokaci *Resource) Configuration() interface{} {
	return viokaci.Args
}

// DependOn is used for other resources to depend on [Resource].
func (viokaci *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(viokaci)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (viokaci *Resource) Dependencies() terra.Dependencies {
	return viokaci.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (viokaci *Resource) LifecycleManagement() *terra.Lifecycle {
	return viokaci.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (viokaci *Resource) Attributes() vaultIdentityOidcKeyAllowedClientIdAttributes {
	return vaultIdentityOidcKeyAllowedClientIdAttributes{ref: terra.ReferenceResource(viokaci)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (viokaci *Resource) ImportState(state io.Reader) error {
	viokaci.state = &vaultIdentityOidcKeyAllowedClientIdState{}
	if err := json.NewDecoder(state).Decode(viokaci.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", viokaci.Type(), viokaci.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (viokaci *Resource) State() (*vaultIdentityOidcKeyAllowedClientIdState, bool) {
	return viokaci.state, viokaci.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (viokaci *Resource) StateMust() *vaultIdentityOidcKeyAllowedClientIdState {
	if viokaci.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", viokaci.Type(), viokaci.LocalName()))
	}
	return viokaci.state
}

// Args contains the configurations for vault_identity_oidc_key_allowed_client_id.
type Args struct {
	// AllowedClientId: string, required
	AllowedClientId terra.StringValue `hcl:"allowed_client_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyName: string, required
	KeyName terra.StringValue `hcl:"key_name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}

type vaultIdentityOidcKeyAllowedClientIdAttributes struct {
	ref terra.Reference
}

// AllowedClientId returns a reference to field allowed_client_id of vault_identity_oidc_key_allowed_client_id.
func (viokaci vaultIdentityOidcKeyAllowedClientIdAttributes) AllowedClientId() terra.StringValue {
	return terra.ReferenceAsString(viokaci.ref.Append("allowed_client_id"))
}

// Id returns a reference to field id of vault_identity_oidc_key_allowed_client_id.
func (viokaci vaultIdentityOidcKeyAllowedClientIdAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(viokaci.ref.Append("id"))
}

// KeyName returns a reference to field key_name of vault_identity_oidc_key_allowed_client_id.
func (viokaci vaultIdentityOidcKeyAllowedClientIdAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(viokaci.ref.Append("key_name"))
}

// Namespace returns a reference to field namespace of vault_identity_oidc_key_allowed_client_id.
func (viokaci vaultIdentityOidcKeyAllowedClientIdAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(viokaci.ref.Append("namespace"))
}

type vaultIdentityOidcKeyAllowedClientIdState struct {
	AllowedClientId string `json:"allowed_client_id"`
	Id              string `json:"id"`
	KeyName         string `json:"key_name"`
	Namespace       string `json:"namespace"`
}
