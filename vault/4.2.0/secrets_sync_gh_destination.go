// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSecretsSyncGhDestination creates a new instance of [SecretsSyncGhDestination].
func NewSecretsSyncGhDestination(name string, args SecretsSyncGhDestinationArgs) *SecretsSyncGhDestination {
	return &SecretsSyncGhDestination{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecretsSyncGhDestination)(nil)

// SecretsSyncGhDestination represents the Terraform resource vault_secrets_sync_gh_destination.
type SecretsSyncGhDestination struct {
	Name      string
	Args      SecretsSyncGhDestinationArgs
	state     *secretsSyncGhDestinationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecretsSyncGhDestination].
func (ssgd *SecretsSyncGhDestination) Type() string {
	return "vault_secrets_sync_gh_destination"
}

// LocalName returns the local name for [SecretsSyncGhDestination].
func (ssgd *SecretsSyncGhDestination) LocalName() string {
	return ssgd.Name
}

// Configuration returns the configuration (args) for [SecretsSyncGhDestination].
func (ssgd *SecretsSyncGhDestination) Configuration() interface{} {
	return ssgd.Args
}

// DependOn is used for other resources to depend on [SecretsSyncGhDestination].
func (ssgd *SecretsSyncGhDestination) DependOn() terra.Reference {
	return terra.ReferenceResource(ssgd)
}

// Dependencies returns the list of resources [SecretsSyncGhDestination] depends_on.
func (ssgd *SecretsSyncGhDestination) Dependencies() terra.Dependencies {
	return ssgd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecretsSyncGhDestination].
func (ssgd *SecretsSyncGhDestination) LifecycleManagement() *terra.Lifecycle {
	return ssgd.Lifecycle
}

// Attributes returns the attributes for [SecretsSyncGhDestination].
func (ssgd *SecretsSyncGhDestination) Attributes() secretsSyncGhDestinationAttributes {
	return secretsSyncGhDestinationAttributes{ref: terra.ReferenceResource(ssgd)}
}

// ImportState imports the given attribute values into [SecretsSyncGhDestination]'s state.
func (ssgd *SecretsSyncGhDestination) ImportState(av io.Reader) error {
	ssgd.state = &secretsSyncGhDestinationState{}
	if err := json.NewDecoder(av).Decode(ssgd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssgd.Type(), ssgd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecretsSyncGhDestination] has state.
func (ssgd *SecretsSyncGhDestination) State() (*secretsSyncGhDestinationState, bool) {
	return ssgd.state, ssgd.state != nil
}

// StateMust returns the state for [SecretsSyncGhDestination]. Panics if the state is nil.
func (ssgd *SecretsSyncGhDestination) StateMust() *secretsSyncGhDestinationState {
	if ssgd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssgd.Type(), ssgd.LocalName()))
	}
	return ssgd.state
}

// SecretsSyncGhDestinationArgs contains the configurations for vault_secrets_sync_gh_destination.
type SecretsSyncGhDestinationArgs struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// AppName: string, optional
	AppName terra.StringValue `hcl:"app_name,attr"`
	// Granularity: string, optional
	Granularity terra.StringValue `hcl:"granularity,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstallationId: number, optional
	InstallationId terra.NumberValue `hcl:"installation_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RepositoryName: string, optional
	RepositoryName terra.StringValue `hcl:"repository_name,attr"`
	// RepositoryOwner: string, optional
	RepositoryOwner terra.StringValue `hcl:"repository_owner,attr"`
	// SecretNameTemplate: string, optional
	SecretNameTemplate terra.StringValue `hcl:"secret_name_template,attr"`
}
type secretsSyncGhDestinationAttributes struct {
	ref terra.Reference
}

// AccessToken returns a reference to field access_token of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("access_token"))
}

// AppName returns a reference to field app_name of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) AppName() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("app_name"))
}

// Granularity returns a reference to field granularity of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) Granularity() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("granularity"))
}

// Id returns a reference to field id of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("id"))
}

// InstallationId returns a reference to field installation_id of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) InstallationId() terra.NumberValue {
	return terra.ReferenceAsNumber(ssgd.ref.Append("installation_id"))
}

// Name returns a reference to field name of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("namespace"))
}

// RepositoryName returns a reference to field repository_name of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) RepositoryName() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("repository_name"))
}

// RepositoryOwner returns a reference to field repository_owner of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) RepositoryOwner() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("repository_owner"))
}

// SecretNameTemplate returns a reference to field secret_name_template of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) SecretNameTemplate() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("secret_name_template"))
}

// Type returns a reference to field type of vault_secrets_sync_gh_destination.
func (ssgd secretsSyncGhDestinationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ssgd.ref.Append("type"))
}

type secretsSyncGhDestinationState struct {
	AccessToken        string  `json:"access_token"`
	AppName            string  `json:"app_name"`
	Granularity        string  `json:"granularity"`
	Id                 string  `json:"id"`
	InstallationId     float64 `json:"installation_id"`
	Name               string  `json:"name"`
	Namespace          string  `json:"namespace"`
	RepositoryName     string  `json:"repository_name"`
	RepositoryOwner    string  `json:"repository_owner"`
	SecretNameTemplate string  `json:"secret_name_template"`
	Type               string  `json:"type"`
}
