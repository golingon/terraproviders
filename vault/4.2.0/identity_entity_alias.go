// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewIdentityEntityAlias creates a new instance of [IdentityEntityAlias].
func NewIdentityEntityAlias(name string, args IdentityEntityAliasArgs) *IdentityEntityAlias {
	return &IdentityEntityAlias{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityEntityAlias)(nil)

// IdentityEntityAlias represents the Terraform resource vault_identity_entity_alias.
type IdentityEntityAlias struct {
	Name      string
	Args      IdentityEntityAliasArgs
	state     *identityEntityAliasState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IdentityEntityAlias].
func (iea *IdentityEntityAlias) Type() string {
	return "vault_identity_entity_alias"
}

// LocalName returns the local name for [IdentityEntityAlias].
func (iea *IdentityEntityAlias) LocalName() string {
	return iea.Name
}

// Configuration returns the configuration (args) for [IdentityEntityAlias].
func (iea *IdentityEntityAlias) Configuration() interface{} {
	return iea.Args
}

// DependOn is used for other resources to depend on [IdentityEntityAlias].
func (iea *IdentityEntityAlias) DependOn() terra.Reference {
	return terra.ReferenceResource(iea)
}

// Dependencies returns the list of resources [IdentityEntityAlias] depends_on.
func (iea *IdentityEntityAlias) Dependencies() terra.Dependencies {
	return iea.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IdentityEntityAlias].
func (iea *IdentityEntityAlias) LifecycleManagement() *terra.Lifecycle {
	return iea.Lifecycle
}

// Attributes returns the attributes for [IdentityEntityAlias].
func (iea *IdentityEntityAlias) Attributes() identityEntityAliasAttributes {
	return identityEntityAliasAttributes{ref: terra.ReferenceResource(iea)}
}

// ImportState imports the given attribute values into [IdentityEntityAlias]'s state.
func (iea *IdentityEntityAlias) ImportState(av io.Reader) error {
	iea.state = &identityEntityAliasState{}
	if err := json.NewDecoder(av).Decode(iea.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iea.Type(), iea.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IdentityEntityAlias] has state.
func (iea *IdentityEntityAlias) State() (*identityEntityAliasState, bool) {
	return iea.state, iea.state != nil
}

// StateMust returns the state for [IdentityEntityAlias]. Panics if the state is nil.
func (iea *IdentityEntityAlias) StateMust() *identityEntityAliasState {
	if iea.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iea.Type(), iea.LocalName()))
	}
	return iea.state
}

// IdentityEntityAliasArgs contains the configurations for vault_identity_entity_alias.
type IdentityEntityAliasArgs struct {
	// CanonicalId: string, required
	CanonicalId terra.StringValue `hcl:"canonical_id,attr" validate:"required"`
	// CustomMetadata: map of string, optional
	CustomMetadata terra.MapValue[terra.StringValue] `hcl:"custom_metadata,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MountAccessor: string, required
	MountAccessor terra.StringValue `hcl:"mount_accessor,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}
type identityEntityAliasAttributes struct {
	ref terra.Reference
}

// CanonicalId returns a reference to field canonical_id of vault_identity_entity_alias.
func (iea identityEntityAliasAttributes) CanonicalId() terra.StringValue {
	return terra.ReferenceAsString(iea.ref.Append("canonical_id"))
}

// CustomMetadata returns a reference to field custom_metadata of vault_identity_entity_alias.
func (iea identityEntityAliasAttributes) CustomMetadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](iea.ref.Append("custom_metadata"))
}

// Id returns a reference to field id of vault_identity_entity_alias.
func (iea identityEntityAliasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iea.ref.Append("id"))
}

// MountAccessor returns a reference to field mount_accessor of vault_identity_entity_alias.
func (iea identityEntityAliasAttributes) MountAccessor() terra.StringValue {
	return terra.ReferenceAsString(iea.ref.Append("mount_accessor"))
}

// Name returns a reference to field name of vault_identity_entity_alias.
func (iea identityEntityAliasAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(iea.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_identity_entity_alias.
func (iea identityEntityAliasAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(iea.ref.Append("namespace"))
}

type identityEntityAliasState struct {
	CanonicalId    string            `json:"canonical_id"`
	CustomMetadata map[string]string `json:"custom_metadata"`
	Id             string            `json:"id"`
	MountAccessor  string            `json:"mount_accessor"`
	Name           string            `json:"name"`
	Namespace      string            `json:"namespace"`
}
