// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_secrets_sync_gh_destination

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource vault_secrets_sync_gh_destination.
type Resource struct {
	Name      string
	Args      Args
	state     *vaultSecretsSyncGhDestinationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (vssgd *Resource) Type() string {
	return "vault_secrets_sync_gh_destination"
}

// LocalName returns the local name for [Resource].
func (vssgd *Resource) LocalName() string {
	return vssgd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (vssgd *Resource) Configuration() interface{} {
	return vssgd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (vssgd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(vssgd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (vssgd *Resource) Dependencies() terra.Dependencies {
	return vssgd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (vssgd *Resource) LifecycleManagement() *terra.Lifecycle {
	return vssgd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (vssgd *Resource) Attributes() vaultSecretsSyncGhDestinationAttributes {
	return vaultSecretsSyncGhDestinationAttributes{ref: terra.ReferenceResource(vssgd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (vssgd *Resource) ImportState(state io.Reader) error {
	vssgd.state = &vaultSecretsSyncGhDestinationState{}
	if err := json.NewDecoder(state).Decode(vssgd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vssgd.Type(), vssgd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (vssgd *Resource) State() (*vaultSecretsSyncGhDestinationState, bool) {
	return vssgd.state, vssgd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (vssgd *Resource) StateMust() *vaultSecretsSyncGhDestinationState {
	if vssgd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vssgd.Type(), vssgd.LocalName()))
	}
	return vssgd.state
}

// Args contains the configurations for vault_secrets_sync_gh_destination.
type Args struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// AppName: string, optional
	AppName terra.StringValue `hcl:"app_name,attr"`
	// Granularity: string, optional
	Granularity terra.StringValue `hcl:"granularity,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstallationId: number, optional
	InstallationId terra.NumberValue `hcl:"installation_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// RepositoryName: string, optional
	RepositoryName terra.StringValue `hcl:"repository_name,attr"`
	// RepositoryOwner: string, optional
	RepositoryOwner terra.StringValue `hcl:"repository_owner,attr"`
	// SecretNameTemplate: string, optional
	SecretNameTemplate terra.StringValue `hcl:"secret_name_template,attr"`
}

type vaultSecretsSyncGhDestinationAttributes struct {
	ref terra.Reference
}

// AccessToken returns a reference to field access_token of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("access_token"))
}

// AppName returns a reference to field app_name of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) AppName() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("app_name"))
}

// Granularity returns a reference to field granularity of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) Granularity() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("granularity"))
}

// Id returns a reference to field id of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("id"))
}

// InstallationId returns a reference to field installation_id of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) InstallationId() terra.NumberValue {
	return terra.ReferenceAsNumber(vssgd.ref.Append("installation_id"))
}

// Name returns a reference to field name of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("name"))
}

// Namespace returns a reference to field namespace of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("namespace"))
}

// RepositoryName returns a reference to field repository_name of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) RepositoryName() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("repository_name"))
}

// RepositoryOwner returns a reference to field repository_owner of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) RepositoryOwner() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("repository_owner"))
}

// SecretNameTemplate returns a reference to field secret_name_template of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) SecretNameTemplate() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("secret_name_template"))
}

// Type returns a reference to field type of vault_secrets_sync_gh_destination.
func (vssgd vaultSecretsSyncGhDestinationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(vssgd.ref.Append("type"))
}

type vaultSecretsSyncGhDestinationState struct {
	AccessToken        string  `json:"access_token"`
	AppName            string  `json:"app_name"`
	Granularity        string  `json:"granularity"`
	Id                 string  `json:"id"`
	InstallationId     float64 `json:"installation_id"`
	Name               string  `json:"name"`
	Namespace          string  `json:"namespace"`
	RepositoryName     string  `json:"repository_name"`
	RepositoryOwner    string  `json:"repository_owner"`
	SecretNameTemplate string  `json:"secret_name_template"`
	Type               string  `json:"type"`
}
