// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault_kubernetes_service_account_token

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource vault_kubernetes_service_account_token.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (vksat *DataSource) DataSource() string {
	return "vault_kubernetes_service_account_token"
}

// LocalName returns the local name for [DataSource].
func (vksat *DataSource) LocalName() string {
	return vksat.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (vksat *DataSource) Configuration() interface{} {
	return vksat.Args
}

// Attributes returns the attributes for [DataSource].
func (vksat *DataSource) Attributes() dataVaultKubernetesServiceAccountTokenAttributes {
	return dataVaultKubernetesServiceAccountTokenAttributes{ref: terra.ReferenceDataSource(vksat)}
}

// DataArgs contains the configurations for vault_kubernetes_service_account_token.
type DataArgs struct {
	// Backend: string, required
	Backend terra.StringValue `hcl:"backend,attr" validate:"required"`
	// ClusterRoleBinding: bool, optional
	ClusterRoleBinding terra.BoolValue `hcl:"cluster_role_binding,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesNamespace: string, required
	KubernetesNamespace terra.StringValue `hcl:"kubernetes_namespace,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Ttl: string, optional
	Ttl terra.StringValue `hcl:"ttl,attr"`
}

type dataVaultKubernetesServiceAccountTokenAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("backend"))
}

// ClusterRoleBinding returns a reference to field cluster_role_binding of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) ClusterRoleBinding() terra.BoolValue {
	return terra.ReferenceAsBool(vksat.ref.Append("cluster_role_binding"))
}

// Id returns a reference to field id of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("id"))
}

// KubernetesNamespace returns a reference to field kubernetes_namespace of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) KubernetesNamespace() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("kubernetes_namespace"))
}

// LeaseDuration returns a reference to field lease_duration of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) LeaseDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(vksat.ref.Append("lease_duration"))
}

// LeaseId returns a reference to field lease_id of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) LeaseId() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("lease_id"))
}

// LeaseRenewable returns a reference to field lease_renewable of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) LeaseRenewable() terra.BoolValue {
	return terra.ReferenceAsBool(vksat.ref.Append("lease_renewable"))
}

// Namespace returns a reference to field namespace of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("namespace"))
}

// Role returns a reference to field role of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("role"))
}

// ServiceAccountName returns a reference to field service_account_name of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) ServiceAccountName() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("service_account_name"))
}

// ServiceAccountNamespace returns a reference to field service_account_namespace of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) ServiceAccountNamespace() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("service_account_namespace"))
}

// ServiceAccountToken returns a reference to field service_account_token of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) ServiceAccountToken() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("service_account_token"))
}

// Ttl returns a reference to field ttl of vault_kubernetes_service_account_token.
func (vksat dataVaultKubernetesServiceAccountTokenAttributes) Ttl() terra.StringValue {
	return terra.ReferenceAsString(vksat.ref.Append("ttl"))
}
