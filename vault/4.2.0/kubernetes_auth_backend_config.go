// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewKubernetesAuthBackendConfig creates a new instance of [KubernetesAuthBackendConfig].
func NewKubernetesAuthBackendConfig(name string, args KubernetesAuthBackendConfigArgs) *KubernetesAuthBackendConfig {
	return &KubernetesAuthBackendConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KubernetesAuthBackendConfig)(nil)

// KubernetesAuthBackendConfig represents the Terraform resource vault_kubernetes_auth_backend_config.
type KubernetesAuthBackendConfig struct {
	Name      string
	Args      KubernetesAuthBackendConfigArgs
	state     *kubernetesAuthBackendConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [KubernetesAuthBackendConfig].
func (kabc *KubernetesAuthBackendConfig) Type() string {
	return "vault_kubernetes_auth_backend_config"
}

// LocalName returns the local name for [KubernetesAuthBackendConfig].
func (kabc *KubernetesAuthBackendConfig) LocalName() string {
	return kabc.Name
}

// Configuration returns the configuration (args) for [KubernetesAuthBackendConfig].
func (kabc *KubernetesAuthBackendConfig) Configuration() interface{} {
	return kabc.Args
}

// DependOn is used for other resources to depend on [KubernetesAuthBackendConfig].
func (kabc *KubernetesAuthBackendConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(kabc)
}

// Dependencies returns the list of resources [KubernetesAuthBackendConfig] depends_on.
func (kabc *KubernetesAuthBackendConfig) Dependencies() terra.Dependencies {
	return kabc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [KubernetesAuthBackendConfig].
func (kabc *KubernetesAuthBackendConfig) LifecycleManagement() *terra.Lifecycle {
	return kabc.Lifecycle
}

// Attributes returns the attributes for [KubernetesAuthBackendConfig].
func (kabc *KubernetesAuthBackendConfig) Attributes() kubernetesAuthBackendConfigAttributes {
	return kubernetesAuthBackendConfigAttributes{ref: terra.ReferenceResource(kabc)}
}

// ImportState imports the given attribute values into [KubernetesAuthBackendConfig]'s state.
func (kabc *KubernetesAuthBackendConfig) ImportState(av io.Reader) error {
	kabc.state = &kubernetesAuthBackendConfigState{}
	if err := json.NewDecoder(av).Decode(kabc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kabc.Type(), kabc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [KubernetesAuthBackendConfig] has state.
func (kabc *KubernetesAuthBackendConfig) State() (*kubernetesAuthBackendConfigState, bool) {
	return kabc.state, kabc.state != nil
}

// StateMust returns the state for [KubernetesAuthBackendConfig]. Panics if the state is nil.
func (kabc *KubernetesAuthBackendConfig) StateMust() *kubernetesAuthBackendConfigState {
	if kabc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kabc.Type(), kabc.LocalName()))
	}
	return kabc.state
}

// KubernetesAuthBackendConfigArgs contains the configurations for vault_kubernetes_auth_backend_config.
type KubernetesAuthBackendConfigArgs struct {
	// Backend: string, optional
	Backend terra.StringValue `hcl:"backend,attr"`
	// DisableIssValidation: bool, optional
	DisableIssValidation terra.BoolValue `hcl:"disable_iss_validation,attr"`
	// DisableLocalCaJwt: bool, optional
	DisableLocalCaJwt terra.BoolValue `hcl:"disable_local_ca_jwt,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Issuer: string, optional
	Issuer terra.StringValue `hcl:"issuer,attr"`
	// KubernetesCaCert: string, optional
	KubernetesCaCert terra.StringValue `hcl:"kubernetes_ca_cert,attr"`
	// KubernetesHost: string, required
	KubernetesHost terra.StringValue `hcl:"kubernetes_host,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// PemKeys: list of string, optional
	PemKeys terra.ListValue[terra.StringValue] `hcl:"pem_keys,attr"`
	// TokenReviewerJwt: string, optional
	TokenReviewerJwt terra.StringValue `hcl:"token_reviewer_jwt,attr"`
}
type kubernetesAuthBackendConfigAttributes struct {
	ref terra.Reference
}

// Backend returns a reference to field backend of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) Backend() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("backend"))
}

// DisableIssValidation returns a reference to field disable_iss_validation of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) DisableIssValidation() terra.BoolValue {
	return terra.ReferenceAsBool(kabc.ref.Append("disable_iss_validation"))
}

// DisableLocalCaJwt returns a reference to field disable_local_ca_jwt of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) DisableLocalCaJwt() terra.BoolValue {
	return terra.ReferenceAsBool(kabc.ref.Append("disable_local_ca_jwt"))
}

// Id returns a reference to field id of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("id"))
}

// Issuer returns a reference to field issuer of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("issuer"))
}

// KubernetesCaCert returns a reference to field kubernetes_ca_cert of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) KubernetesCaCert() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("kubernetes_ca_cert"))
}

// KubernetesHost returns a reference to field kubernetes_host of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) KubernetesHost() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("kubernetes_host"))
}

// Namespace returns a reference to field namespace of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("namespace"))
}

// PemKeys returns a reference to field pem_keys of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) PemKeys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](kabc.ref.Append("pem_keys"))
}

// TokenReviewerJwt returns a reference to field token_reviewer_jwt of vault_kubernetes_auth_backend_config.
func (kabc kubernetesAuthBackendConfigAttributes) TokenReviewerJwt() terra.StringValue {
	return terra.ReferenceAsString(kabc.ref.Append("token_reviewer_jwt"))
}

type kubernetesAuthBackendConfigState struct {
	Backend              string   `json:"backend"`
	DisableIssValidation bool     `json:"disable_iss_validation"`
	DisableLocalCaJwt    bool     `json:"disable_local_ca_jwt"`
	Id                   string   `json:"id"`
	Issuer               string   `json:"issuer"`
	KubernetesCaCert     string   `json:"kubernetes_ca_cert"`
	KubernetesHost       string   `json:"kubernetes_host"`
	Namespace            string   `json:"namespace"`
	PemKeys              []string `json:"pem_keys"`
	TokenReviewerJwt     string   `json:"token_reviewer_jwt"`
}
