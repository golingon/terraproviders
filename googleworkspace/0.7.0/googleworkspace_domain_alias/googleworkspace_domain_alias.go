// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googleworkspace_domain_alias

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource googleworkspace_domain_alias.
type Resource struct {
	Name      string
	Args      Args
	state     *googleworkspaceDomainAliasState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gda *Resource) Type() string {
	return "googleworkspace_domain_alias"
}

// LocalName returns the local name for [Resource].
func (gda *Resource) LocalName() string {
	return gda.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gda *Resource) Configuration() interface{} {
	return gda.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gda *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gda)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gda *Resource) Dependencies() terra.Dependencies {
	return gda.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gda *Resource) LifecycleManagement() *terra.Lifecycle {
	return gda.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gda *Resource) Attributes() googleworkspaceDomainAliasAttributes {
	return googleworkspaceDomainAliasAttributes{ref: terra.ReferenceResource(gda)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gda *Resource) ImportState(state io.Reader) error {
	gda.state = &googleworkspaceDomainAliasState{}
	if err := json.NewDecoder(state).Decode(gda.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gda.Type(), gda.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gda *Resource) State() (*googleworkspaceDomainAliasState, bool) {
	return gda.state, gda.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gda *Resource) StateMust() *googleworkspaceDomainAliasState {
	if gda.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gda.Type(), gda.LocalName()))
	}
	return gda.state
}

// Args contains the configurations for googleworkspace_domain_alias.
type Args struct {
	// DomainAliasName: string, required
	DomainAliasName terra.StringValue `hcl:"domain_alias_name,attr" validate:"required"`
	// ParentDomainName: string, optional
	ParentDomainName terra.StringValue `hcl:"parent_domain_name,attr"`
}

type googleworkspaceDomainAliasAttributes struct {
	ref terra.Reference
}

// CreationTime returns a reference to field creation_time of googleworkspace_domain_alias.
func (gda googleworkspaceDomainAliasAttributes) CreationTime() terra.NumberValue {
	return terra.ReferenceAsNumber(gda.ref.Append("creation_time"))
}

// DomainAliasName returns a reference to field domain_alias_name of googleworkspace_domain_alias.
func (gda googleworkspaceDomainAliasAttributes) DomainAliasName() terra.StringValue {
	return terra.ReferenceAsString(gda.ref.Append("domain_alias_name"))
}

// Etag returns a reference to field etag of googleworkspace_domain_alias.
func (gda googleworkspaceDomainAliasAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gda.ref.Append("etag"))
}

// Id returns a reference to field id of googleworkspace_domain_alias.
func (gda googleworkspaceDomainAliasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gda.ref.Append("id"))
}

// ParentDomainName returns a reference to field parent_domain_name of googleworkspace_domain_alias.
func (gda googleworkspaceDomainAliasAttributes) ParentDomainName() terra.StringValue {
	return terra.ReferenceAsString(gda.ref.Append("parent_domain_name"))
}

// Verified returns a reference to field verified of googleworkspace_domain_alias.
func (gda googleworkspaceDomainAliasAttributes) Verified() terra.BoolValue {
	return terra.ReferenceAsBool(gda.ref.Append("verified"))
}

type googleworkspaceDomainAliasState struct {
	CreationTime     float64 `json:"creation_time"`
	DomainAliasName  string  `json:"domain_alias_name"`
	Etag             string  `json:"etag"`
	Id               string  `json:"id"`
	ParentDomainName string  `json:"parent_domain_name"`
	Verified         bool    `json:"verified"`
}
