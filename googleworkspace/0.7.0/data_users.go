// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googleworkspace

import (
	"github.com/golingon/lingon/pkg/terra"
	datausers "github.com/golingon/terraproviders/googleworkspace/0.7.0/datausers"
)

// NewDataUsers creates a new instance of [DataUsers].
func NewDataUsers(name string, args DataUsersArgs) *DataUsers {
	return &DataUsers{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataUsers)(nil)

// DataUsers represents the Terraform data resource googleworkspace_users.
type DataUsers struct {
	Name string
	Args DataUsersArgs
}

// DataSource returns the Terraform object type for [DataUsers].
func (u *DataUsers) DataSource() string {
	return "googleworkspace_users"
}

// LocalName returns the local name for [DataUsers].
func (u *DataUsers) LocalName() string {
	return u.Name
}

// Configuration returns the configuration (args) for [DataUsers].
func (u *DataUsers) Configuration() interface{} {
	return u.Args
}

// Attributes returns the attributes for [DataUsers].
func (u *DataUsers) Attributes() dataUsersAttributes {
	return dataUsersAttributes{ref: terra.ReferenceDataResource(u)}
}

// DataUsersArgs contains the configurations for googleworkspace_users.
type DataUsersArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Users: min=0
	Users []datausers.Users `hcl:"users,block" validate:"min=0"`
}
type dataUsersAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of googleworkspace_users.
func (u dataUsersAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("id"))
}

func (u dataUsersAttributes) Users() terra.ListValue[datausers.UsersAttributes] {
	return terra.ReferenceAsList[datausers.UsersAttributes](u.ref.Append("users"))
}
