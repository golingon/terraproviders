// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googleworkspace

import (
	"github.com/golingon/lingon/pkg/terra"
	datachromepolicyschema "github.com/golingon/terraproviders/googleworkspace/0.7.0/datachromepolicyschema"
)

// NewDataChromePolicySchema creates a new instance of [DataChromePolicySchema].
func NewDataChromePolicySchema(name string, args DataChromePolicySchemaArgs) *DataChromePolicySchema {
	return &DataChromePolicySchema{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataChromePolicySchema)(nil)

// DataChromePolicySchema represents the Terraform data resource googleworkspace_chrome_policy_schema.
type DataChromePolicySchema struct {
	Name string
	Args DataChromePolicySchemaArgs
}

// DataSource returns the Terraform object type for [DataChromePolicySchema].
func (cps *DataChromePolicySchema) DataSource() string {
	return "googleworkspace_chrome_policy_schema"
}

// LocalName returns the local name for [DataChromePolicySchema].
func (cps *DataChromePolicySchema) LocalName() string {
	return cps.Name
}

// Configuration returns the configuration (args) for [DataChromePolicySchema].
func (cps *DataChromePolicySchema) Configuration() interface{} {
	return cps.Args
}

// Attributes returns the attributes for [DataChromePolicySchema].
func (cps *DataChromePolicySchema) Attributes() dataChromePolicySchemaAttributes {
	return dataChromePolicySchemaAttributes{ref: terra.ReferenceDataResource(cps)}
}

// DataChromePolicySchemaArgs contains the configurations for googleworkspace_chrome_policy_schema.
type DataChromePolicySchemaArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SchemaName: string, required
	SchemaName terra.StringValue `hcl:"schema_name,attr" validate:"required"`
	// AdditionalTargetKeyNames: min=0
	AdditionalTargetKeyNames []datachromepolicyschema.AdditionalTargetKeyNames `hcl:"additional_target_key_names,block" validate:"min=0"`
	// Definition: min=0
	Definition []datachromepolicyschema.Definition `hcl:"definition,block" validate:"min=0"`
	// Notices: min=0
	Notices []datachromepolicyschema.Notices `hcl:"notices,block" validate:"min=0"`
}
type dataChromePolicySchemaAttributes struct {
	ref terra.Reference
}

// AccessRestrictions returns a reference to field access_restrictions of googleworkspace_chrome_policy_schema.
func (cps dataChromePolicySchemaAttributes) AccessRestrictions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cps.ref.Append("access_restrictions"))
}

// FieldDescriptions returns a reference to field field_descriptions of googleworkspace_chrome_policy_schema.
func (cps dataChromePolicySchemaAttributes) FieldDescriptions() terra.StringValue {
	return terra.ReferenceAsString(cps.ref.Append("field_descriptions"))
}

// Id returns a reference to field id of googleworkspace_chrome_policy_schema.
func (cps dataChromePolicySchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cps.ref.Append("id"))
}

// PolicyDescription returns a reference to field policy_description of googleworkspace_chrome_policy_schema.
func (cps dataChromePolicySchemaAttributes) PolicyDescription() terra.StringValue {
	return terra.ReferenceAsString(cps.ref.Append("policy_description"))
}

// SchemaName returns a reference to field schema_name of googleworkspace_chrome_policy_schema.
func (cps dataChromePolicySchemaAttributes) SchemaName() terra.StringValue {
	return terra.ReferenceAsString(cps.ref.Append("schema_name"))
}

// SupportUri returns a reference to field support_uri of googleworkspace_chrome_policy_schema.
func (cps dataChromePolicySchemaAttributes) SupportUri() terra.StringValue {
	return terra.ReferenceAsString(cps.ref.Append("support_uri"))
}

func (cps dataChromePolicySchemaAttributes) AdditionalTargetKeyNames() terra.ListValue[datachromepolicyschema.AdditionalTargetKeyNamesAttributes] {
	return terra.ReferenceAsList[datachromepolicyschema.AdditionalTargetKeyNamesAttributes](cps.ref.Append("additional_target_key_names"))
}

func (cps dataChromePolicySchemaAttributes) Definition() terra.ListValue[datachromepolicyschema.DefinitionAttributes] {
	return terra.ReferenceAsList[datachromepolicyschema.DefinitionAttributes](cps.ref.Append("definition"))
}

func (cps dataChromePolicySchemaAttributes) Notices() terra.ListValue[datachromepolicyschema.NoticesAttributes] {
	return terra.ReferenceAsList[datachromepolicyschema.NoticesAttributes](cps.ref.Append("notices"))
}
