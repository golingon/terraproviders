// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googleworkspace_user

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource googleworkspace_user.
type Resource struct {
	Name      string
	Args      Args
	state     *googleworkspaceUserState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gu *Resource) Type() string {
	return "googleworkspace_user"
}

// LocalName returns the local name for [Resource].
func (gu *Resource) LocalName() string {
	return gu.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gu *Resource) Configuration() interface{} {
	return gu.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gu *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gu)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gu *Resource) Dependencies() terra.Dependencies {
	return gu.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gu *Resource) LifecycleManagement() *terra.Lifecycle {
	return gu.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gu *Resource) Attributes() googleworkspaceUserAttributes {
	return googleworkspaceUserAttributes{ref: terra.ReferenceResource(gu)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gu *Resource) ImportState(state io.Reader) error {
	gu.state = &googleworkspaceUserState{}
	if err := json.NewDecoder(state).Decode(gu.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gu.Type(), gu.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gu *Resource) State() (*googleworkspaceUserState, bool) {
	return gu.state, gu.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gu *Resource) StateMust() *googleworkspaceUserState {
	if gu.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gu.Type(), gu.LocalName()))
	}
	return gu.state
}

// Args contains the configurations for googleworkspace_user.
type Args struct {
	// Aliases: list of string, optional
	Aliases terra.ListValue[terra.StringValue] `hcl:"aliases,attr"`
	// Archived: bool, optional
	Archived terra.BoolValue `hcl:"archived,attr"`
	// ChangePasswordAtNextLogin: bool, optional
	ChangePasswordAtNextLogin terra.BoolValue `hcl:"change_password_at_next_login,attr"`
	// HashFunction: string, optional
	HashFunction terra.StringValue `hcl:"hash_function,attr"`
	// IncludeInGlobalAddressList: bool, optional
	IncludeInGlobalAddressList terra.BoolValue `hcl:"include_in_global_address_list,attr"`
	// IpAllowlist: bool, optional
	IpAllowlist terra.BoolValue `hcl:"ip_allowlist,attr"`
	// IsAdmin: bool, optional
	IsAdmin terra.BoolValue `hcl:"is_admin,attr"`
	// OrgUnitPath: string, optional
	OrgUnitPath terra.StringValue `hcl:"org_unit_path,attr"`
	// Password: string, optional
	Password terra.StringValue `hcl:"password,attr"`
	// PrimaryEmail: string, required
	PrimaryEmail terra.StringValue `hcl:"primary_email,attr" validate:"required"`
	// RecoveryEmail: string, optional
	RecoveryEmail terra.StringValue `hcl:"recovery_email,attr"`
	// RecoveryPhone: string, optional
	RecoveryPhone terra.StringValue `hcl:"recovery_phone,attr"`
	// Suspended: bool, optional
	Suspended terra.BoolValue `hcl:"suspended,attr"`
	// Addresses: min=0
	Addresses []Addresses `hcl:"addresses,block" validate:"min=0"`
	// CustomSchemas: min=0
	CustomSchemas []CustomSchemas `hcl:"custom_schemas,block" validate:"min=0"`
	// Emails: min=0
	Emails []Emails `hcl:"emails,block" validate:"min=0"`
	// ExternalIds: min=0
	ExternalIds []ExternalIds `hcl:"external_ids,block" validate:"min=0"`
	// Ims: min=0
	Ims []Ims `hcl:"ims,block" validate:"min=0"`
	// Keywords: min=0
	Keywords []Keywords `hcl:"keywords,block" validate:"min=0"`
	// Languages: min=0
	Languages []Languages `hcl:"languages,block" validate:"min=0"`
	// Locations: min=0
	Locations []Locations `hcl:"locations,block" validate:"min=0"`
	// Name: required
	Name *Name `hcl:"name,block" validate:"required"`
	// Organizations: min=0
	Organizations []Organizations `hcl:"organizations,block" validate:"min=0"`
	// Phones: min=0
	Phones []Phones `hcl:"phones,block" validate:"min=0"`
	// PosixAccounts: min=0
	PosixAccounts []PosixAccounts `hcl:"posix_accounts,block" validate:"min=0"`
	// Relations: min=0
	Relations []Relations `hcl:"relations,block" validate:"min=0"`
	// SshPublicKeys: min=0
	SshPublicKeys []SshPublicKeys `hcl:"ssh_public_keys,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// Websites: min=0
	Websites []Websites `hcl:"websites,block" validate:"min=0"`
}

type googleworkspaceUserAttributes struct {
	ref terra.Reference
}

// AgreedToTerms returns a reference to field agreed_to_terms of googleworkspace_user.
func (gu googleworkspaceUserAttributes) AgreedToTerms() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("agreed_to_terms"))
}

// Aliases returns a reference to field aliases of googleworkspace_user.
func (gu googleworkspaceUserAttributes) Aliases() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gu.ref.Append("aliases"))
}

// Archived returns a reference to field archived of googleworkspace_user.
func (gu googleworkspaceUserAttributes) Archived() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("archived"))
}

// ChangePasswordAtNextLogin returns a reference to field change_password_at_next_login of googleworkspace_user.
func (gu googleworkspaceUserAttributes) ChangePasswordAtNextLogin() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("change_password_at_next_login"))
}

// CreationTime returns a reference to field creation_time of googleworkspace_user.
func (gu googleworkspaceUserAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("creation_time"))
}

// CustomerId returns a reference to field customer_id of googleworkspace_user.
func (gu googleworkspaceUserAttributes) CustomerId() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("customer_id"))
}

// DeletionTime returns a reference to field deletion_time of googleworkspace_user.
func (gu googleworkspaceUserAttributes) DeletionTime() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("deletion_time"))
}

// Etag returns a reference to field etag of googleworkspace_user.
func (gu googleworkspaceUserAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("etag"))
}

// HashFunction returns a reference to field hash_function of googleworkspace_user.
func (gu googleworkspaceUserAttributes) HashFunction() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("hash_function"))
}

// Id returns a reference to field id of googleworkspace_user.
func (gu googleworkspaceUserAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("id"))
}

// IncludeInGlobalAddressList returns a reference to field include_in_global_address_list of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IncludeInGlobalAddressList() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("include_in_global_address_list"))
}

// IpAllowlist returns a reference to field ip_allowlist of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IpAllowlist() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("ip_allowlist"))
}

// IsAdmin returns a reference to field is_admin of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IsAdmin() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("is_admin"))
}

// IsDelegatedAdmin returns a reference to field is_delegated_admin of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IsDelegatedAdmin() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("is_delegated_admin"))
}

// IsEnforcedIn2StepVerification returns a reference to field is_enforced_in_2_step_verification of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IsEnforcedIn2StepVerification() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("is_enforced_in_2_step_verification"))
}

// IsEnrolledIn2StepVerification returns a reference to field is_enrolled_in_2_step_verification of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IsEnrolledIn2StepVerification() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("is_enrolled_in_2_step_verification"))
}

// IsMailboxSetup returns a reference to field is_mailbox_setup of googleworkspace_user.
func (gu googleworkspaceUserAttributes) IsMailboxSetup() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("is_mailbox_setup"))
}

// LastLoginTime returns a reference to field last_login_time of googleworkspace_user.
func (gu googleworkspaceUserAttributes) LastLoginTime() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("last_login_time"))
}

// NonEditableAliases returns a reference to field non_editable_aliases of googleworkspace_user.
func (gu googleworkspaceUserAttributes) NonEditableAliases() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gu.ref.Append("non_editable_aliases"))
}

// OrgUnitPath returns a reference to field org_unit_path of googleworkspace_user.
func (gu googleworkspaceUserAttributes) OrgUnitPath() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("org_unit_path"))
}

// Password returns a reference to field password of googleworkspace_user.
func (gu googleworkspaceUserAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("password"))
}

// PrimaryEmail returns a reference to field primary_email of googleworkspace_user.
func (gu googleworkspaceUserAttributes) PrimaryEmail() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("primary_email"))
}

// RecoveryEmail returns a reference to field recovery_email of googleworkspace_user.
func (gu googleworkspaceUserAttributes) RecoveryEmail() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("recovery_email"))
}

// RecoveryPhone returns a reference to field recovery_phone of googleworkspace_user.
func (gu googleworkspaceUserAttributes) RecoveryPhone() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("recovery_phone"))
}

// Suspended returns a reference to field suspended of googleworkspace_user.
func (gu googleworkspaceUserAttributes) Suspended() terra.BoolValue {
	return terra.ReferenceAsBool(gu.ref.Append("suspended"))
}

// SuspensionReason returns a reference to field suspension_reason of googleworkspace_user.
func (gu googleworkspaceUserAttributes) SuspensionReason() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("suspension_reason"))
}

// ThumbnailPhotoEtag returns a reference to field thumbnail_photo_etag of googleworkspace_user.
func (gu googleworkspaceUserAttributes) ThumbnailPhotoEtag() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("thumbnail_photo_etag"))
}

// ThumbnailPhotoUrl returns a reference to field thumbnail_photo_url of googleworkspace_user.
func (gu googleworkspaceUserAttributes) ThumbnailPhotoUrl() terra.StringValue {
	return terra.ReferenceAsString(gu.ref.Append("thumbnail_photo_url"))
}

func (gu googleworkspaceUserAttributes) Addresses() terra.ListValue[AddressesAttributes] {
	return terra.ReferenceAsList[AddressesAttributes](gu.ref.Append("addresses"))
}

func (gu googleworkspaceUserAttributes) CustomSchemas() terra.ListValue[CustomSchemasAttributes] {
	return terra.ReferenceAsList[CustomSchemasAttributes](gu.ref.Append("custom_schemas"))
}

func (gu googleworkspaceUserAttributes) Emails() terra.ListValue[EmailsAttributes] {
	return terra.ReferenceAsList[EmailsAttributes](gu.ref.Append("emails"))
}

func (gu googleworkspaceUserAttributes) ExternalIds() terra.ListValue[ExternalIdsAttributes] {
	return terra.ReferenceAsList[ExternalIdsAttributes](gu.ref.Append("external_ids"))
}

func (gu googleworkspaceUserAttributes) Ims() terra.ListValue[ImsAttributes] {
	return terra.ReferenceAsList[ImsAttributes](gu.ref.Append("ims"))
}

func (gu googleworkspaceUserAttributes) Keywords() terra.ListValue[KeywordsAttributes] {
	return terra.ReferenceAsList[KeywordsAttributes](gu.ref.Append("keywords"))
}

func (gu googleworkspaceUserAttributes) Languages() terra.ListValue[LanguagesAttributes] {
	return terra.ReferenceAsList[LanguagesAttributes](gu.ref.Append("languages"))
}

func (gu googleworkspaceUserAttributes) Locations() terra.ListValue[LocationsAttributes] {
	return terra.ReferenceAsList[LocationsAttributes](gu.ref.Append("locations"))
}

func (gu googleworkspaceUserAttributes) Name() terra.ListValue[NameAttributes] {
	return terra.ReferenceAsList[NameAttributes](gu.ref.Append("name"))
}

func (gu googleworkspaceUserAttributes) Organizations() terra.ListValue[OrganizationsAttributes] {
	return terra.ReferenceAsList[OrganizationsAttributes](gu.ref.Append("organizations"))
}

func (gu googleworkspaceUserAttributes) Phones() terra.ListValue[PhonesAttributes] {
	return terra.ReferenceAsList[PhonesAttributes](gu.ref.Append("phones"))
}

func (gu googleworkspaceUserAttributes) PosixAccounts() terra.ListValue[PosixAccountsAttributes] {
	return terra.ReferenceAsList[PosixAccountsAttributes](gu.ref.Append("posix_accounts"))
}

func (gu googleworkspaceUserAttributes) Relations() terra.ListValue[RelationsAttributes] {
	return terra.ReferenceAsList[RelationsAttributes](gu.ref.Append("relations"))
}

func (gu googleworkspaceUserAttributes) SshPublicKeys() terra.ListValue[SshPublicKeysAttributes] {
	return terra.ReferenceAsList[SshPublicKeysAttributes](gu.ref.Append("ssh_public_keys"))
}

func (gu googleworkspaceUserAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gu.ref.Append("timeouts"))
}

func (gu googleworkspaceUserAttributes) Websites() terra.ListValue[WebsitesAttributes] {
	return terra.ReferenceAsList[WebsitesAttributes](gu.ref.Append("websites"))
}

type googleworkspaceUserState struct {
	AgreedToTerms                 bool                 `json:"agreed_to_terms"`
	Aliases                       []string             `json:"aliases"`
	Archived                      bool                 `json:"archived"`
	ChangePasswordAtNextLogin     bool                 `json:"change_password_at_next_login"`
	CreationTime                  string               `json:"creation_time"`
	CustomerId                    string               `json:"customer_id"`
	DeletionTime                  string               `json:"deletion_time"`
	Etag                          string               `json:"etag"`
	HashFunction                  string               `json:"hash_function"`
	Id                            string               `json:"id"`
	IncludeInGlobalAddressList    bool                 `json:"include_in_global_address_list"`
	IpAllowlist                   bool                 `json:"ip_allowlist"`
	IsAdmin                       bool                 `json:"is_admin"`
	IsDelegatedAdmin              bool                 `json:"is_delegated_admin"`
	IsEnforcedIn2StepVerification bool                 `json:"is_enforced_in_2_step_verification"`
	IsEnrolledIn2StepVerification bool                 `json:"is_enrolled_in_2_step_verification"`
	IsMailboxSetup                bool                 `json:"is_mailbox_setup"`
	LastLoginTime                 string               `json:"last_login_time"`
	NonEditableAliases            []string             `json:"non_editable_aliases"`
	OrgUnitPath                   string               `json:"org_unit_path"`
	Password                      string               `json:"password"`
	PrimaryEmail                  string               `json:"primary_email"`
	RecoveryEmail                 string               `json:"recovery_email"`
	RecoveryPhone                 string               `json:"recovery_phone"`
	Suspended                     bool                 `json:"suspended"`
	SuspensionReason              string               `json:"suspension_reason"`
	ThumbnailPhotoEtag            string               `json:"thumbnail_photo_etag"`
	ThumbnailPhotoUrl             string               `json:"thumbnail_photo_url"`
	Addresses                     []AddressesState     `json:"addresses"`
	CustomSchemas                 []CustomSchemasState `json:"custom_schemas"`
	Emails                        []EmailsState        `json:"emails"`
	ExternalIds                   []ExternalIdsState   `json:"external_ids"`
	Ims                           []ImsState           `json:"ims"`
	Keywords                      []KeywordsState      `json:"keywords"`
	Languages                     []LanguagesState     `json:"languages"`
	Locations                     []LocationsState     `json:"locations"`
	Name                          []NameState          `json:"name"`
	Organizations                 []OrganizationsState `json:"organizations"`
	Phones                        []PhonesState        `json:"phones"`
	PosixAccounts                 []PosixAccountsState `json:"posix_accounts"`
	Relations                     []RelationsState     `json:"relations"`
	SshPublicKeys                 []SshPublicKeysState `json:"ssh_public_keys"`
	Timeouts                      *TimeoutsState       `json:"timeouts"`
	Websites                      []WebsitesState      `json:"websites"`
}
