// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googleworkspace_chrome_policy_schema

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource googleworkspace_chrome_policy_schema.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcps *DataSource) DataSource() string {
	return "googleworkspace_chrome_policy_schema"
}

// LocalName returns the local name for [DataSource].
func (gcps *DataSource) LocalName() string {
	return gcps.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcps *DataSource) Configuration() interface{} {
	return gcps.Args
}

// Attributes returns the attributes for [DataSource].
func (gcps *DataSource) Attributes() dataGoogleworkspaceChromePolicySchemaAttributes {
	return dataGoogleworkspaceChromePolicySchemaAttributes{ref: terra.ReferenceDataSource(gcps)}
}

// DataArgs contains the configurations for googleworkspace_chrome_policy_schema.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SchemaName: string, required
	SchemaName terra.StringValue `hcl:"schema_name,attr" validate:"required"`
}

type dataGoogleworkspaceChromePolicySchemaAttributes struct {
	ref terra.Reference
}

// AccessRestrictions returns a reference to field access_restrictions of googleworkspace_chrome_policy_schema.
func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) AccessRestrictions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcps.ref.Append("access_restrictions"))
}

// FieldDescriptions returns a reference to field field_descriptions of googleworkspace_chrome_policy_schema.
func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) FieldDescriptions() terra.StringValue {
	return terra.ReferenceAsString(gcps.ref.Append("field_descriptions"))
}

// Id returns a reference to field id of googleworkspace_chrome_policy_schema.
func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcps.ref.Append("id"))
}

// PolicyDescription returns a reference to field policy_description of googleworkspace_chrome_policy_schema.
func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) PolicyDescription() terra.StringValue {
	return terra.ReferenceAsString(gcps.ref.Append("policy_description"))
}

// SchemaName returns a reference to field schema_name of googleworkspace_chrome_policy_schema.
func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) SchemaName() terra.StringValue {
	return terra.ReferenceAsString(gcps.ref.Append("schema_name"))
}

// SupportUri returns a reference to field support_uri of googleworkspace_chrome_policy_schema.
func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) SupportUri() terra.StringValue {
	return terra.ReferenceAsString(gcps.ref.Append("support_uri"))
}

func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) AdditionalTargetKeyNames() terra.ListValue[DataAdditionalTargetKeyNamesAttributes] {
	return terra.ReferenceAsList[DataAdditionalTargetKeyNamesAttributes](gcps.ref.Append("additional_target_key_names"))
}

func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) Definition() terra.ListValue[DataDefinitionAttributes] {
	return terra.ReferenceAsList[DataDefinitionAttributes](gcps.ref.Append("definition"))
}

func (gcps dataGoogleworkspaceChromePolicySchemaAttributes) Notices() terra.ListValue[DataNoticesAttributes] {
	return terra.ReferenceAsList[DataNoticesAttributes](gcps.ref.Append("notices"))
}
