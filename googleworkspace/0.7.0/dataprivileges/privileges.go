// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataprivileges

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Items struct{}

type ItemsAttributes struct {
	ref terra.Reference
}

func (i ItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i ItemsAttributes) InternalWithRef(ref terra.Reference) ItemsAttributes {
	return ItemsAttributes{ref: ref}
}

func (i ItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i ItemsAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("etag"))
}

func (i ItemsAttributes) IsOrgUnitScopable() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("is_org_unit_scopable"))
}

func (i ItemsAttributes) PrivilegeName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("privilege_name"))
}

func (i ItemsAttributes) ServiceId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("service_id"))
}

func (i ItemsAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("service_name"))
}

type ItemsState struct {
	Etag              string `json:"etag"`
	IsOrgUnitScopable bool   `json:"is_org_unit_scopable"`
	PrivilegeName     string `json:"privilege_name"`
	ServiceId         string `json:"service_id"`
	ServiceName       string `json:"service_name"`
}
