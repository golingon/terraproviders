// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googleworkspace

import (
	"github.com/golingon/lingon/pkg/terra"
	dataschema "github.com/golingon/terraproviders/googleworkspace/0.7.0/dataschema"
)

// NewDataSchema creates a new instance of [DataSchema].
func NewDataSchema(name string, args DataSchemaArgs) *DataSchema {
	return &DataSchema{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSchema)(nil)

// DataSchema represents the Terraform data resource googleworkspace_schema.
type DataSchema struct {
	Name string
	Args DataSchemaArgs
}

// DataSource returns the Terraform object type for [DataSchema].
func (s *DataSchema) DataSource() string {
	return "googleworkspace_schema"
}

// LocalName returns the local name for [DataSchema].
func (s *DataSchema) LocalName() string {
	return s.Name
}

// Configuration returns the configuration (args) for [DataSchema].
func (s *DataSchema) Configuration() interface{} {
	return s.Args
}

// Attributes returns the attributes for [DataSchema].
func (s *DataSchema) Attributes() dataSchemaAttributes {
	return dataSchemaAttributes{ref: terra.ReferenceDataResource(s)}
}

// DataSchemaArgs contains the configurations for googleworkspace_schema.
type DataSchemaArgs struct {
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// SchemaName: string, optional
	SchemaName terra.StringValue `hcl:"schema_name,attr"`
	// Fields: min=0
	Fields []dataschema.Fields `hcl:"fields,block" validate:"min=0"`
}
type dataSchemaAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of googleworkspace_schema.
func (s dataSchemaAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("display_name"))
}

// Etag returns a reference to field etag of googleworkspace_schema.
func (s dataSchemaAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("etag"))
}

// Id returns a reference to field id of googleworkspace_schema.
func (s dataSchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

// SchemaId returns a reference to field schema_id of googleworkspace_schema.
func (s dataSchemaAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schema_id"))
}

// SchemaName returns a reference to field schema_name of googleworkspace_schema.
func (s dataSchemaAttributes) SchemaName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schema_name"))
}

func (s dataSchemaAttributes) Fields() terra.ListValue[dataschema.FieldsAttributes] {
	return terra.ReferenceAsList[dataschema.FieldsAttributes](s.ref.Append("fields"))
}
