// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datausers

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Users struct {
	// Addresses: min=0
	Addresses []Addresses `hcl:"addresses,block" validate:"min=0"`
	// CustomSchemas: min=0
	CustomSchemas []CustomSchemas `hcl:"custom_schemas,block" validate:"min=0"`
	// Emails: min=0
	Emails []Emails `hcl:"emails,block" validate:"min=0"`
	// ExternalIds: min=0
	ExternalIds []ExternalIds `hcl:"external_ids,block" validate:"min=0"`
	// Ims: min=0
	Ims []Ims `hcl:"ims,block" validate:"min=0"`
	// Keywords: min=0
	Keywords []Keywords `hcl:"keywords,block" validate:"min=0"`
	// Languages: min=0
	Languages []Languages `hcl:"languages,block" validate:"min=0"`
	// Locations: min=0
	Locations []Locations `hcl:"locations,block" validate:"min=0"`
	// Name: min=0
	Name []Name `hcl:"name,block" validate:"min=0"`
	// Organizations: min=0
	Organizations []Organizations `hcl:"organizations,block" validate:"min=0"`
	// Phones: min=0
	Phones []Phones `hcl:"phones,block" validate:"min=0"`
	// PosixAccounts: min=0
	PosixAccounts []PosixAccounts `hcl:"posix_accounts,block" validate:"min=0"`
	// Relations: min=0
	Relations []Relations `hcl:"relations,block" validate:"min=0"`
	// SshPublicKeys: min=0
	SshPublicKeys []SshPublicKeys `hcl:"ssh_public_keys,block" validate:"min=0"`
	// Websites: min=0
	Websites []Websites `hcl:"websites,block" validate:"min=0"`
}

type Addresses struct{}

type CustomSchemas struct{}

type Emails struct{}

type ExternalIds struct{}

type Ims struct{}

type Keywords struct{}

type Languages struct{}

type Locations struct{}

type Name struct{}

type Organizations struct{}

type Phones struct{}

type PosixAccounts struct{}

type Relations struct{}

type SshPublicKeys struct{}

type Websites struct{}

type UsersAttributes struct {
	ref terra.Reference
}

func (u UsersAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u UsersAttributes) InternalWithRef(ref terra.Reference) UsersAttributes {
	return UsersAttributes{ref: ref}
}

func (u UsersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u UsersAttributes) AgreedToTerms() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("agreed_to_terms"))
}

func (u UsersAttributes) Aliases() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](u.ref.Append("aliases"))
}

func (u UsersAttributes) Archived() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("archived"))
}

func (u UsersAttributes) ChangePasswordAtNextLogin() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("change_password_at_next_login"))
}

func (u UsersAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("creation_time"))
}

func (u UsersAttributes) CustomerId() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("customer_id"))
}

func (u UsersAttributes) DeletionTime() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("deletion_time"))
}

func (u UsersAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("etag"))
}

func (u UsersAttributes) HashFunction() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("hash_function"))
}

func (u UsersAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("id"))
}

func (u UsersAttributes) IncludeInGlobalAddressList() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("include_in_global_address_list"))
}

func (u UsersAttributes) IpAllowlist() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("ip_allowlist"))
}

func (u UsersAttributes) IsAdmin() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("is_admin"))
}

func (u UsersAttributes) IsDelegatedAdmin() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("is_delegated_admin"))
}

func (u UsersAttributes) IsEnforcedIn2StepVerification() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("is_enforced_in_2_step_verification"))
}

func (u UsersAttributes) IsEnrolledIn2StepVerification() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("is_enrolled_in_2_step_verification"))
}

func (u UsersAttributes) IsMailboxSetup() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("is_mailbox_setup"))
}

func (u UsersAttributes) LastLoginTime() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("last_login_time"))
}

func (u UsersAttributes) NonEditableAliases() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](u.ref.Append("non_editable_aliases"))
}

func (u UsersAttributes) OrgUnitPath() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("org_unit_path"))
}

func (u UsersAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("password"))
}

func (u UsersAttributes) PrimaryEmail() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("primary_email"))
}

func (u UsersAttributes) RecoveryEmail() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("recovery_email"))
}

func (u UsersAttributes) RecoveryPhone() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("recovery_phone"))
}

func (u UsersAttributes) Suspended() terra.BoolValue {
	return terra.ReferenceAsBool(u.ref.Append("suspended"))
}

func (u UsersAttributes) SuspensionReason() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("suspension_reason"))
}

func (u UsersAttributes) ThumbnailPhotoEtag() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("thumbnail_photo_etag"))
}

func (u UsersAttributes) ThumbnailPhotoUrl() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("thumbnail_photo_url"))
}

func (u UsersAttributes) Addresses() terra.ListValue[AddressesAttributes] {
	return terra.ReferenceAsList[AddressesAttributes](u.ref.Append("addresses"))
}

func (u UsersAttributes) CustomSchemas() terra.ListValue[CustomSchemasAttributes] {
	return terra.ReferenceAsList[CustomSchemasAttributes](u.ref.Append("custom_schemas"))
}

func (u UsersAttributes) Emails() terra.ListValue[EmailsAttributes] {
	return terra.ReferenceAsList[EmailsAttributes](u.ref.Append("emails"))
}

func (u UsersAttributes) ExternalIds() terra.ListValue[ExternalIdsAttributes] {
	return terra.ReferenceAsList[ExternalIdsAttributes](u.ref.Append("external_ids"))
}

func (u UsersAttributes) Ims() terra.ListValue[ImsAttributes] {
	return terra.ReferenceAsList[ImsAttributes](u.ref.Append("ims"))
}

func (u UsersAttributes) Keywords() terra.ListValue[KeywordsAttributes] {
	return terra.ReferenceAsList[KeywordsAttributes](u.ref.Append("keywords"))
}

func (u UsersAttributes) Languages() terra.ListValue[LanguagesAttributes] {
	return terra.ReferenceAsList[LanguagesAttributes](u.ref.Append("languages"))
}

func (u UsersAttributes) Locations() terra.ListValue[LocationsAttributes] {
	return terra.ReferenceAsList[LocationsAttributes](u.ref.Append("locations"))
}

func (u UsersAttributes) Name() terra.ListValue[NameAttributes] {
	return terra.ReferenceAsList[NameAttributes](u.ref.Append("name"))
}

func (u UsersAttributes) Organizations() terra.ListValue[OrganizationsAttributes] {
	return terra.ReferenceAsList[OrganizationsAttributes](u.ref.Append("organizations"))
}

func (u UsersAttributes) Phones() terra.ListValue[PhonesAttributes] {
	return terra.ReferenceAsList[PhonesAttributes](u.ref.Append("phones"))
}

func (u UsersAttributes) PosixAccounts() terra.ListValue[PosixAccountsAttributes] {
	return terra.ReferenceAsList[PosixAccountsAttributes](u.ref.Append("posix_accounts"))
}

func (u UsersAttributes) Relations() terra.ListValue[RelationsAttributes] {
	return terra.ReferenceAsList[RelationsAttributes](u.ref.Append("relations"))
}

func (u UsersAttributes) SshPublicKeys() terra.ListValue[SshPublicKeysAttributes] {
	return terra.ReferenceAsList[SshPublicKeysAttributes](u.ref.Append("ssh_public_keys"))
}

func (u UsersAttributes) Websites() terra.ListValue[WebsitesAttributes] {
	return terra.ReferenceAsList[WebsitesAttributes](u.ref.Append("websites"))
}

type AddressesAttributes struct {
	ref terra.Reference
}

func (a AddressesAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AddressesAttributes) InternalWithRef(ref terra.Reference) AddressesAttributes {
	return AddressesAttributes{ref: ref}
}

func (a AddressesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a AddressesAttributes) Country() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("country"))
}

func (a AddressesAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("country_code"))
}

func (a AddressesAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("custom_type"))
}

func (a AddressesAttributes) ExtendedAddress() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("extended_address"))
}

func (a AddressesAttributes) Formatted() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("formatted"))
}

func (a AddressesAttributes) Locality() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("locality"))
}

func (a AddressesAttributes) PoBox() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("po_box"))
}

func (a AddressesAttributes) PostalCode() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("postal_code"))
}

func (a AddressesAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("primary"))
}

func (a AddressesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("region"))
}

func (a AddressesAttributes) SourceIsStructured() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("source_is_structured"))
}

func (a AddressesAttributes) StreetAddress() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("street_address"))
}

func (a AddressesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

type CustomSchemasAttributes struct {
	ref terra.Reference
}

func (cs CustomSchemasAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs CustomSchemasAttributes) InternalWithRef(ref terra.Reference) CustomSchemasAttributes {
	return CustomSchemasAttributes{ref: ref}
}

func (cs CustomSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs CustomSchemasAttributes) SchemaName() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("schema_name"))
}

func (cs CustomSchemasAttributes) SchemaValues() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cs.ref.Append("schema_values"))
}

type EmailsAttributes struct {
	ref terra.Reference
}

func (e EmailsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e EmailsAttributes) InternalWithRef(ref terra.Reference) EmailsAttributes {
	return EmailsAttributes{ref: ref}
}

func (e EmailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e EmailsAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("address"))
}

func (e EmailsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("custom_type"))
}

func (e EmailsAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("primary"))
}

func (e EmailsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("type"))
}

type ExternalIdsAttributes struct {
	ref terra.Reference
}

func (ei ExternalIdsAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei ExternalIdsAttributes) InternalWithRef(ref terra.Reference) ExternalIdsAttributes {
	return ExternalIdsAttributes{ref: ref}
}

func (ei ExternalIdsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ei.ref.InternalTokens()
}

func (ei ExternalIdsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("custom_type"))
}

func (ei ExternalIdsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("type"))
}

func (ei ExternalIdsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("value"))
}

type ImsAttributes struct {
	ref terra.Reference
}

func (i ImsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i ImsAttributes) InternalWithRef(ref terra.Reference) ImsAttributes {
	return ImsAttributes{ref: ref}
}

func (i ImsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i ImsAttributes) CustomProtocol() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("custom_protocol"))
}

func (i ImsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("custom_type"))
}

func (i ImsAttributes) Im() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("im"))
}

func (i ImsAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("primary"))
}

func (i ImsAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("protocol"))
}

func (i ImsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type KeywordsAttributes struct {
	ref terra.Reference
}

func (k KeywordsAttributes) InternalRef() (terra.Reference, error) {
	return k.ref, nil
}

func (k KeywordsAttributes) InternalWithRef(ref terra.Reference) KeywordsAttributes {
	return KeywordsAttributes{ref: ref}
}

func (k KeywordsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return k.ref.InternalTokens()
}

func (k KeywordsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(k.ref.Append("custom_type"))
}

func (k KeywordsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(k.ref.Append("type"))
}

func (k KeywordsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(k.ref.Append("value"))
}

type LanguagesAttributes struct {
	ref terra.Reference
}

func (l LanguagesAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l LanguagesAttributes) InternalWithRef(ref terra.Reference) LanguagesAttributes {
	return LanguagesAttributes{ref: ref}
}

func (l LanguagesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l LanguagesAttributes) CustomLanguage() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("custom_language"))
}

func (l LanguagesAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("language_code"))
}

func (l LanguagesAttributes) Preference() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("preference"))
}

type LocationsAttributes struct {
	ref terra.Reference
}

func (l LocationsAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l LocationsAttributes) InternalWithRef(ref terra.Reference) LocationsAttributes {
	return LocationsAttributes{ref: ref}
}

func (l LocationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l LocationsAttributes) Area() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("area"))
}

func (l LocationsAttributes) BuildingId() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("building_id"))
}

func (l LocationsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("custom_type"))
}

func (l LocationsAttributes) DeskCode() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("desk_code"))
}

func (l LocationsAttributes) FloorName() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("floor_name"))
}

func (l LocationsAttributes) FloorSection() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("floor_section"))
}

func (l LocationsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("type"))
}

type NameAttributes struct {
	ref terra.Reference
}

func (n NameAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n NameAttributes) InternalWithRef(ref terra.Reference) NameAttributes {
	return NameAttributes{ref: ref}
}

func (n NameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n NameAttributes) FamilyName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("family_name"))
}

func (n NameAttributes) FullName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("full_name"))
}

func (n NameAttributes) GivenName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("given_name"))
}

type OrganizationsAttributes struct {
	ref terra.Reference
}

func (o OrganizationsAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o OrganizationsAttributes) InternalWithRef(ref terra.Reference) OrganizationsAttributes {
	return OrganizationsAttributes{ref: ref}
}

func (o OrganizationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o OrganizationsAttributes) CostCenter() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("cost_center"))
}

func (o OrganizationsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("custom_type"))
}

func (o OrganizationsAttributes) Department() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("department"))
}

func (o OrganizationsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("description"))
}

func (o OrganizationsAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("domain"))
}

func (o OrganizationsAttributes) FullTimeEquivalent() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("full_time_equivalent"))
}

func (o OrganizationsAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("location"))
}

func (o OrganizationsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("name"))
}

func (o OrganizationsAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(o.ref.Append("primary"))
}

func (o OrganizationsAttributes) Symbol() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("symbol"))
}

func (o OrganizationsAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("title"))
}

func (o OrganizationsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("type"))
}

type PhonesAttributes struct {
	ref terra.Reference
}

func (p PhonesAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PhonesAttributes) InternalWithRef(ref terra.Reference) PhonesAttributes {
	return PhonesAttributes{ref: ref}
}

func (p PhonesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PhonesAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("custom_type"))
}

func (p PhonesAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(p.ref.Append("primary"))
}

func (p PhonesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("type"))
}

func (p PhonesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("value"))
}

type PosixAccountsAttributes struct {
	ref terra.Reference
}

func (pa PosixAccountsAttributes) InternalRef() (terra.Reference, error) {
	return pa.ref, nil
}

func (pa PosixAccountsAttributes) InternalWithRef(ref terra.Reference) PosixAccountsAttributes {
	return PosixAccountsAttributes{ref: ref}
}

func (pa PosixAccountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pa.ref.InternalTokens()
}

func (pa PosixAccountsAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("account_id"))
}

func (pa PosixAccountsAttributes) Gecos() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("gecos"))
}

func (pa PosixAccountsAttributes) Gid() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("gid"))
}

func (pa PosixAccountsAttributes) HomeDirectory() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("home_directory"))
}

func (pa PosixAccountsAttributes) OperatingSystemType() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("operating_system_type"))
}

func (pa PosixAccountsAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(pa.ref.Append("primary"))
}

func (pa PosixAccountsAttributes) Shell() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("shell"))
}

func (pa PosixAccountsAttributes) SystemId() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("system_id"))
}

func (pa PosixAccountsAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("uid"))
}

func (pa PosixAccountsAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("username"))
}

type RelationsAttributes struct {
	ref terra.Reference
}

func (r RelationsAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RelationsAttributes) InternalWithRef(ref terra.Reference) RelationsAttributes {
	return RelationsAttributes{ref: ref}
}

func (r RelationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RelationsAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("custom_type"))
}

func (r RelationsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("type"))
}

func (r RelationsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("value"))
}

type SshPublicKeysAttributes struct {
	ref terra.Reference
}

func (spk SshPublicKeysAttributes) InternalRef() (terra.Reference, error) {
	return spk.ref, nil
}

func (spk SshPublicKeysAttributes) InternalWithRef(ref terra.Reference) SshPublicKeysAttributes {
	return SshPublicKeysAttributes{ref: ref}
}

func (spk SshPublicKeysAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spk.ref.InternalTokens()
}

func (spk SshPublicKeysAttributes) ExpirationTimeUsec() terra.StringValue {
	return terra.ReferenceAsString(spk.ref.Append("expiration_time_usec"))
}

func (spk SshPublicKeysAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(spk.ref.Append("fingerprint"))
}

func (spk SshPublicKeysAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(spk.ref.Append("key"))
}

type WebsitesAttributes struct {
	ref terra.Reference
}

func (w WebsitesAttributes) InternalRef() (terra.Reference, error) {
	return w.ref, nil
}

func (w WebsitesAttributes) InternalWithRef(ref terra.Reference) WebsitesAttributes {
	return WebsitesAttributes{ref: ref}
}

func (w WebsitesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return w.ref.InternalTokens()
}

func (w WebsitesAttributes) CustomType() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("custom_type"))
}

func (w WebsitesAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(w.ref.Append("primary"))
}

func (w WebsitesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("type"))
}

func (w WebsitesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("value"))
}

type UsersState struct {
	AgreedToTerms                 bool                 `json:"agreed_to_terms"`
	Aliases                       []string             `json:"aliases"`
	Archived                      bool                 `json:"archived"`
	ChangePasswordAtNextLogin     bool                 `json:"change_password_at_next_login"`
	CreationTime                  string               `json:"creation_time"`
	CustomerId                    string               `json:"customer_id"`
	DeletionTime                  string               `json:"deletion_time"`
	Etag                          string               `json:"etag"`
	HashFunction                  string               `json:"hash_function"`
	Id                            string               `json:"id"`
	IncludeInGlobalAddressList    bool                 `json:"include_in_global_address_list"`
	IpAllowlist                   bool                 `json:"ip_allowlist"`
	IsAdmin                       bool                 `json:"is_admin"`
	IsDelegatedAdmin              bool                 `json:"is_delegated_admin"`
	IsEnforcedIn2StepVerification bool                 `json:"is_enforced_in_2_step_verification"`
	IsEnrolledIn2StepVerification bool                 `json:"is_enrolled_in_2_step_verification"`
	IsMailboxSetup                bool                 `json:"is_mailbox_setup"`
	LastLoginTime                 string               `json:"last_login_time"`
	NonEditableAliases            []string             `json:"non_editable_aliases"`
	OrgUnitPath                   string               `json:"org_unit_path"`
	Password                      string               `json:"password"`
	PrimaryEmail                  string               `json:"primary_email"`
	RecoveryEmail                 string               `json:"recovery_email"`
	RecoveryPhone                 string               `json:"recovery_phone"`
	Suspended                     bool                 `json:"suspended"`
	SuspensionReason              string               `json:"suspension_reason"`
	ThumbnailPhotoEtag            string               `json:"thumbnail_photo_etag"`
	ThumbnailPhotoUrl             string               `json:"thumbnail_photo_url"`
	Addresses                     []AddressesState     `json:"addresses"`
	CustomSchemas                 []CustomSchemasState `json:"custom_schemas"`
	Emails                        []EmailsState        `json:"emails"`
	ExternalIds                   []ExternalIdsState   `json:"external_ids"`
	Ims                           []ImsState           `json:"ims"`
	Keywords                      []KeywordsState      `json:"keywords"`
	Languages                     []LanguagesState     `json:"languages"`
	Locations                     []LocationsState     `json:"locations"`
	Name                          []NameState          `json:"name"`
	Organizations                 []OrganizationsState `json:"organizations"`
	Phones                        []PhonesState        `json:"phones"`
	PosixAccounts                 []PosixAccountsState `json:"posix_accounts"`
	Relations                     []RelationsState     `json:"relations"`
	SshPublicKeys                 []SshPublicKeysState `json:"ssh_public_keys"`
	Websites                      []WebsitesState      `json:"websites"`
}

type AddressesState struct {
	Country            string `json:"country"`
	CountryCode        string `json:"country_code"`
	CustomType         string `json:"custom_type"`
	ExtendedAddress    string `json:"extended_address"`
	Formatted          string `json:"formatted"`
	Locality           string `json:"locality"`
	PoBox              string `json:"po_box"`
	PostalCode         string `json:"postal_code"`
	Primary            bool   `json:"primary"`
	Region             string `json:"region"`
	SourceIsStructured bool   `json:"source_is_structured"`
	StreetAddress      string `json:"street_address"`
	Type               string `json:"type"`
}

type CustomSchemasState struct {
	SchemaName   string            `json:"schema_name"`
	SchemaValues map[string]string `json:"schema_values"`
}

type EmailsState struct {
	Address    string `json:"address"`
	CustomType string `json:"custom_type"`
	Primary    bool   `json:"primary"`
	Type       string `json:"type"`
}

type ExternalIdsState struct {
	CustomType string `json:"custom_type"`
	Type       string `json:"type"`
	Value      string `json:"value"`
}

type ImsState struct {
	CustomProtocol string `json:"custom_protocol"`
	CustomType     string `json:"custom_type"`
	Im             string `json:"im"`
	Primary        bool   `json:"primary"`
	Protocol       string `json:"protocol"`
	Type           string `json:"type"`
}

type KeywordsState struct {
	CustomType string `json:"custom_type"`
	Type       string `json:"type"`
	Value      string `json:"value"`
}

type LanguagesState struct {
	CustomLanguage string `json:"custom_language"`
	LanguageCode   string `json:"language_code"`
	Preference     string `json:"preference"`
}

type LocationsState struct {
	Area         string `json:"area"`
	BuildingId   string `json:"building_id"`
	CustomType   string `json:"custom_type"`
	DeskCode     string `json:"desk_code"`
	FloorName    string `json:"floor_name"`
	FloorSection string `json:"floor_section"`
	Type         string `json:"type"`
}

type NameState struct {
	FamilyName string `json:"family_name"`
	FullName   string `json:"full_name"`
	GivenName  string `json:"given_name"`
}

type OrganizationsState struct {
	CostCenter         string  `json:"cost_center"`
	CustomType         string  `json:"custom_type"`
	Department         string  `json:"department"`
	Description        string  `json:"description"`
	Domain             string  `json:"domain"`
	FullTimeEquivalent float64 `json:"full_time_equivalent"`
	Location           string  `json:"location"`
	Name               string  `json:"name"`
	Primary            bool    `json:"primary"`
	Symbol             string  `json:"symbol"`
	Title              string  `json:"title"`
	Type               string  `json:"type"`
}

type PhonesState struct {
	CustomType string `json:"custom_type"`
	Primary    bool   `json:"primary"`
	Type       string `json:"type"`
	Value      string `json:"value"`
}

type PosixAccountsState struct {
	AccountId           string `json:"account_id"`
	Gecos               string `json:"gecos"`
	Gid                 string `json:"gid"`
	HomeDirectory       string `json:"home_directory"`
	OperatingSystemType string `json:"operating_system_type"`
	Primary             bool   `json:"primary"`
	Shell               string `json:"shell"`
	SystemId            string `json:"system_id"`
	Uid                 string `json:"uid"`
	Username            string `json:"username"`
}

type RelationsState struct {
	CustomType string `json:"custom_type"`
	Type       string `json:"type"`
	Value      string `json:"value"`
}

type SshPublicKeysState struct {
	ExpirationTimeUsec string `json:"expiration_time_usec"`
	Fingerprint        string `json:"fingerprint"`
	Key                string `json:"key"`
}

type WebsitesState struct {
	CustomType string `json:"custom_type"`
	Primary    bool   `json:"primary"`
	Type       string `json:"type"`
	Value      string `json:"value"`
}
