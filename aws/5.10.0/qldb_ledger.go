// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	qldbledger "github.com/golingon/terraproviders/aws/5.10.0/qldbledger"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewQldbLedger creates a new instance of [QldbLedger].
func NewQldbLedger(name string, args QldbLedgerArgs) *QldbLedger {
	return &QldbLedger{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*QldbLedger)(nil)

// QldbLedger represents the Terraform resource aws_qldb_ledger.
type QldbLedger struct {
	Name      string
	Args      QldbLedgerArgs
	state     *qldbLedgerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [QldbLedger].
func (ql *QldbLedger) Type() string {
	return "aws_qldb_ledger"
}

// LocalName returns the local name for [QldbLedger].
func (ql *QldbLedger) LocalName() string {
	return ql.Name
}

// Configuration returns the configuration (args) for [QldbLedger].
func (ql *QldbLedger) Configuration() interface{} {
	return ql.Args
}

// DependOn is used for other resources to depend on [QldbLedger].
func (ql *QldbLedger) DependOn() terra.Reference {
	return terra.ReferenceResource(ql)
}

// Dependencies returns the list of resources [QldbLedger] depends_on.
func (ql *QldbLedger) Dependencies() terra.Dependencies {
	return ql.DependsOn
}

// LifecycleManagement returns the lifecycle block for [QldbLedger].
func (ql *QldbLedger) LifecycleManagement() *terra.Lifecycle {
	return ql.Lifecycle
}

// Attributes returns the attributes for [QldbLedger].
func (ql *QldbLedger) Attributes() qldbLedgerAttributes {
	return qldbLedgerAttributes{ref: terra.ReferenceResource(ql)}
}

// ImportState imports the given attribute values into [QldbLedger]'s state.
func (ql *QldbLedger) ImportState(av io.Reader) error {
	ql.state = &qldbLedgerState{}
	if err := json.NewDecoder(av).Decode(ql.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ql.Type(), ql.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [QldbLedger] has state.
func (ql *QldbLedger) State() (*qldbLedgerState, bool) {
	return ql.state, ql.state != nil
}

// StateMust returns the state for [QldbLedger]. Panics if the state is nil.
func (ql *QldbLedger) StateMust() *qldbLedgerState {
	if ql.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ql.Type(), ql.LocalName()))
	}
	return ql.state
}

// QldbLedgerArgs contains the configurations for aws_qldb_ledger.
type QldbLedgerArgs struct {
	// DeletionProtection: bool, optional
	DeletionProtection terra.BoolValue `hcl:"deletion_protection,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKey: string, optional
	KmsKey terra.StringValue `hcl:"kms_key,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// PermissionsMode: string, required
	PermissionsMode terra.StringValue `hcl:"permissions_mode,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *qldbledger.Timeouts `hcl:"timeouts,block"`
}
type qldbLedgerAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_qldb_ledger.
func (ql qldbLedgerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ql.ref.Append("arn"))
}

// DeletionProtection returns a reference to field deletion_protection of aws_qldb_ledger.
func (ql qldbLedgerAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(ql.ref.Append("deletion_protection"))
}

// Id returns a reference to field id of aws_qldb_ledger.
func (ql qldbLedgerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ql.ref.Append("id"))
}

// KmsKey returns a reference to field kms_key of aws_qldb_ledger.
func (ql qldbLedgerAttributes) KmsKey() terra.StringValue {
	return terra.ReferenceAsString(ql.ref.Append("kms_key"))
}

// Name returns a reference to field name of aws_qldb_ledger.
func (ql qldbLedgerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ql.ref.Append("name"))
}

// PermissionsMode returns a reference to field permissions_mode of aws_qldb_ledger.
func (ql qldbLedgerAttributes) PermissionsMode() terra.StringValue {
	return terra.ReferenceAsString(ql.ref.Append("permissions_mode"))
}

// Tags returns a reference to field tags of aws_qldb_ledger.
func (ql qldbLedgerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ql.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_qldb_ledger.
func (ql qldbLedgerAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ql.ref.Append("tags_all"))
}

func (ql qldbLedgerAttributes) Timeouts() qldbledger.TimeoutsAttributes {
	return terra.ReferenceAsSingle[qldbledger.TimeoutsAttributes](ql.ref.Append("timeouts"))
}

type qldbLedgerState struct {
	Arn                string                    `json:"arn"`
	DeletionProtection bool                      `json:"deletion_protection"`
	Id                 string                    `json:"id"`
	KmsKey             string                    `json:"kms_key"`
	Name               string                    `json:"name"`
	PermissionsMode    string                    `json:"permissions_mode"`
	Tags               map[string]string         `json:"tags"`
	TagsAll            map[string]string         `json:"tags_all"`
	Timeouts           *qldbledger.TimeoutsState `json:"timeouts"`
}
