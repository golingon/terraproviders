// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewPinpointAdmChannel creates a new instance of [PinpointAdmChannel].
func NewPinpointAdmChannel(name string, args PinpointAdmChannelArgs) *PinpointAdmChannel {
	return &PinpointAdmChannel{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PinpointAdmChannel)(nil)

// PinpointAdmChannel represents the Terraform resource aws_pinpoint_adm_channel.
type PinpointAdmChannel struct {
	Name      string
	Args      PinpointAdmChannelArgs
	state     *pinpointAdmChannelState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PinpointAdmChannel].
func (pac *PinpointAdmChannel) Type() string {
	return "aws_pinpoint_adm_channel"
}

// LocalName returns the local name for [PinpointAdmChannel].
func (pac *PinpointAdmChannel) LocalName() string {
	return pac.Name
}

// Configuration returns the configuration (args) for [PinpointAdmChannel].
func (pac *PinpointAdmChannel) Configuration() interface{} {
	return pac.Args
}

// DependOn is used for other resources to depend on [PinpointAdmChannel].
func (pac *PinpointAdmChannel) DependOn() terra.Reference {
	return terra.ReferenceResource(pac)
}

// Dependencies returns the list of resources [PinpointAdmChannel] depends_on.
func (pac *PinpointAdmChannel) Dependencies() terra.Dependencies {
	return pac.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PinpointAdmChannel].
func (pac *PinpointAdmChannel) LifecycleManagement() *terra.Lifecycle {
	return pac.Lifecycle
}

// Attributes returns the attributes for [PinpointAdmChannel].
func (pac *PinpointAdmChannel) Attributes() pinpointAdmChannelAttributes {
	return pinpointAdmChannelAttributes{ref: terra.ReferenceResource(pac)}
}

// ImportState imports the given attribute values into [PinpointAdmChannel]'s state.
func (pac *PinpointAdmChannel) ImportState(av io.Reader) error {
	pac.state = &pinpointAdmChannelState{}
	if err := json.NewDecoder(av).Decode(pac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pac.Type(), pac.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PinpointAdmChannel] has state.
func (pac *PinpointAdmChannel) State() (*pinpointAdmChannelState, bool) {
	return pac.state, pac.state != nil
}

// StateMust returns the state for [PinpointAdmChannel]. Panics if the state is nil.
func (pac *PinpointAdmChannel) StateMust() *pinpointAdmChannelState {
	if pac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pac.Type(), pac.LocalName()))
	}
	return pac.state
}

// PinpointAdmChannelArgs contains the configurations for aws_pinpoint_adm_channel.
type PinpointAdmChannelArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}
type pinpointAdmChannelAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of aws_pinpoint_adm_channel.
func (pac pinpointAdmChannelAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(pac.ref.Append("application_id"))
}

// ClientId returns a reference to field client_id of aws_pinpoint_adm_channel.
func (pac pinpointAdmChannelAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(pac.ref.Append("client_id"))
}

// ClientSecret returns a reference to field client_secret of aws_pinpoint_adm_channel.
func (pac pinpointAdmChannelAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(pac.ref.Append("client_secret"))
}

// Enabled returns a reference to field enabled of aws_pinpoint_adm_channel.
func (pac pinpointAdmChannelAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(pac.ref.Append("enabled"))
}

// Id returns a reference to field id of aws_pinpoint_adm_channel.
func (pac pinpointAdmChannelAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pac.ref.Append("id"))
}

type pinpointAdmChannelState struct {
	ApplicationId string `json:"application_id"`
	ClientId      string `json:"client_id"`
	ClientSecret  string `json:"client_secret"`
	Enabled       bool   `json:"enabled"`
	Id            string `json:"id"`
}
