// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package appintegrationsdataintegration

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ScheduleConfig struct {
	// FirstExecutionFrom: string, required
	FirstExecutionFrom terra.StringValue `hcl:"first_execution_from,attr" validate:"required"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// ScheduleExpression: string, required
	ScheduleExpression terra.StringValue `hcl:"schedule_expression,attr" validate:"required"`
}

type ScheduleConfigAttributes struct {
	ref terra.Reference
}

func (sc ScheduleConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc ScheduleConfigAttributes) InternalWithRef(ref terra.Reference) ScheduleConfigAttributes {
	return ScheduleConfigAttributes{ref: ref}
}

func (sc ScheduleConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc ScheduleConfigAttributes) FirstExecutionFrom() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("first_execution_from"))
}

func (sc ScheduleConfigAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("object"))
}

func (sc ScheduleConfigAttributes) ScheduleExpression() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("schedule_expression"))
}

type ScheduleConfigState struct {
	FirstExecutionFrom string `json:"first_execution_from"`
	Object             string `json:"object"`
	ScheduleExpression string `json:"schedule_expression"`
}
