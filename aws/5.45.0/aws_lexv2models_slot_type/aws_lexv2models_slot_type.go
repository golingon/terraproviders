// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lexv2models_slot_type

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lexv2models_slot_type.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLexv2ModelsSlotTypeState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alst *Resource) Type() string {
	return "aws_lexv2models_slot_type"
}

// LocalName returns the local name for [Resource].
func (alst *Resource) LocalName() string {
	return alst.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alst *Resource) Configuration() interface{} {
	return alst.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alst *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alst)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alst *Resource) Dependencies() terra.Dependencies {
	return alst.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alst *Resource) LifecycleManagement() *terra.Lifecycle {
	return alst.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alst *Resource) Attributes() awsLexv2ModelsSlotTypeAttributes {
	return awsLexv2ModelsSlotTypeAttributes{ref: terra.ReferenceResource(alst)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alst *Resource) ImportState(state io.Reader) error {
	alst.state = &awsLexv2ModelsSlotTypeState{}
	if err := json.NewDecoder(state).Decode(alst.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alst.Type(), alst.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alst *Resource) State() (*awsLexv2ModelsSlotTypeState, bool) {
	return alst.state, alst.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alst *Resource) StateMust() *awsLexv2ModelsSlotTypeState {
	if alst.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alst.Type(), alst.LocalName()))
	}
	return alst.state
}

// Args contains the configurations for aws_lexv2models_slot_type.
type Args struct {
	// BotId: string, required
	BotId terra.StringValue `hcl:"bot_id,attr" validate:"required"`
	// BotVersion: string, required
	BotVersion terra.StringValue `hcl:"bot_version,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// LocaleId: string, required
	LocaleId terra.StringValue `hcl:"locale_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ParentSlotTypeSignature: string, optional
	ParentSlotTypeSignature terra.StringValue `hcl:"parent_slot_type_signature,attr"`
	// CompositeSlotTypeSetting: min=0
	CompositeSlotTypeSetting []CompositeSlotTypeSetting `hcl:"composite_slot_type_setting,block" validate:"min=0"`
	// ExternalSourceSetting: min=0
	ExternalSourceSetting []ExternalSourceSetting `hcl:"external_source_setting,block" validate:"min=0"`
	// SlotTypeValues: min=0
	SlotTypeValues []SlotTypeValues `hcl:"slot_type_values,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// ValueSelectionSetting: min=0
	ValueSelectionSetting []ValueSelectionSetting `hcl:"value_selection_setting,block" validate:"min=0"`
}

type awsLexv2ModelsSlotTypeAttributes struct {
	ref terra.Reference
}

// BotId returns a reference to field bot_id of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) BotId() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("bot_id"))
}

// BotVersion returns a reference to field bot_version of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) BotVersion() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("bot_version"))
}

// Description returns a reference to field description of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("description"))
}

// Id returns a reference to field id of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("id"))
}

// LocaleId returns a reference to field locale_id of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) LocaleId() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("locale_id"))
}

// Name returns a reference to field name of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("name"))
}

// ParentSlotTypeSignature returns a reference to field parent_slot_type_signature of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) ParentSlotTypeSignature() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("parent_slot_type_signature"))
}

// SlotTypeId returns a reference to field slot_type_id of aws_lexv2models_slot_type.
func (alst awsLexv2ModelsSlotTypeAttributes) SlotTypeId() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("slot_type_id"))
}

func (alst awsLexv2ModelsSlotTypeAttributes) CompositeSlotTypeSetting() terra.ListValue[CompositeSlotTypeSettingAttributes] {
	return terra.ReferenceAsList[CompositeSlotTypeSettingAttributes](alst.ref.Append("composite_slot_type_setting"))
}

func (alst awsLexv2ModelsSlotTypeAttributes) ExternalSourceSetting() terra.ListValue[ExternalSourceSettingAttributes] {
	return terra.ReferenceAsList[ExternalSourceSettingAttributes](alst.ref.Append("external_source_setting"))
}

func (alst awsLexv2ModelsSlotTypeAttributes) SlotTypeValues() terra.ListValue[SlotTypeValuesAttributes] {
	return terra.ReferenceAsList[SlotTypeValuesAttributes](alst.ref.Append("slot_type_values"))
}

func (alst awsLexv2ModelsSlotTypeAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alst.ref.Append("timeouts"))
}

func (alst awsLexv2ModelsSlotTypeAttributes) ValueSelectionSetting() terra.ListValue[ValueSelectionSettingAttributes] {
	return terra.ReferenceAsList[ValueSelectionSettingAttributes](alst.ref.Append("value_selection_setting"))
}

type awsLexv2ModelsSlotTypeState struct {
	BotId                    string                          `json:"bot_id"`
	BotVersion               string                          `json:"bot_version"`
	Description              string                          `json:"description"`
	Id                       string                          `json:"id"`
	LocaleId                 string                          `json:"locale_id"`
	Name                     string                          `json:"name"`
	ParentSlotTypeSignature  string                          `json:"parent_slot_type_signature"`
	SlotTypeId               string                          `json:"slot_type_id"`
	CompositeSlotTypeSetting []CompositeSlotTypeSettingState `json:"composite_slot_type_setting"`
	ExternalSourceSetting    []ExternalSourceSettingState    `json:"external_source_setting"`
	SlotTypeValues           []SlotTypeValuesState           `json:"slot_type_values"`
	Timeouts                 *TimeoutsState                  `json:"timeouts"`
	ValueSelectionSetting    []ValueSelectionSettingState    `json:"value_selection_setting"`
}
