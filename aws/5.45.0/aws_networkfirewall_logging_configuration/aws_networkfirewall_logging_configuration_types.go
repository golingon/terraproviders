// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkfirewall_logging_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LoggingConfiguration struct {
	// LoggingConfigurationLogDestinationConfig: min=1,max=2
	LogDestinationConfig []LoggingConfigurationLogDestinationConfig `hcl:"log_destination_config,block" validate:"min=1,max=2"`
}

type LoggingConfigurationLogDestinationConfig struct {
	// LogDestination: map of string, required
	LogDestination terra.MapValue[terra.StringValue] `hcl:"log_destination,attr" validate:"required"`
	// LogDestinationType: string, required
	LogDestinationType terra.StringValue `hcl:"log_destination_type,attr" validate:"required"`
	// LogType: string, required
	LogType terra.StringValue `hcl:"log_type,attr" validate:"required"`
}

type LoggingConfigurationAttributes struct {
	ref terra.Reference
}

func (lc LoggingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc LoggingConfigurationAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationAttributes {
	return LoggingConfigurationAttributes{ref: ref}
}

func (lc LoggingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc LoggingConfigurationAttributes) LogDestinationConfig() terra.SetValue[LoggingConfigurationLogDestinationConfigAttributes] {
	return terra.ReferenceAsSet[LoggingConfigurationLogDestinationConfigAttributes](lc.ref.Append("log_destination_config"))
}

type LoggingConfigurationLogDestinationConfigAttributes struct {
	ref terra.Reference
}

func (ldc LoggingConfigurationLogDestinationConfigAttributes) InternalRef() (terra.Reference, error) {
	return ldc.ref, nil
}

func (ldc LoggingConfigurationLogDestinationConfigAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationLogDestinationConfigAttributes {
	return LoggingConfigurationLogDestinationConfigAttributes{ref: ref}
}

func (ldc LoggingConfigurationLogDestinationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ldc.ref.InternalTokens()
}

func (ldc LoggingConfigurationLogDestinationConfigAttributes) LogDestination() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ldc.ref.Append("log_destination"))
}

func (ldc LoggingConfigurationLogDestinationConfigAttributes) LogDestinationType() terra.StringValue {
	return terra.ReferenceAsString(ldc.ref.Append("log_destination_type"))
}

func (ldc LoggingConfigurationLogDestinationConfigAttributes) LogType() terra.StringValue {
	return terra.ReferenceAsString(ldc.ref.Append("log_type"))
}

type LoggingConfigurationState struct {
	LogDestinationConfig []LoggingConfigurationLogDestinationConfigState `json:"log_destination_config"`
}

type LoggingConfigurationLogDestinationConfigState struct {
	LogDestination     map[string]string `json:"log_destination"`
	LogDestinationType string            `json:"log_destination_type"`
	LogType            string            `json:"log_type"`
}
