// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ecs_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataServiceConnectDefaultsAttributes struct {
	ref terra.Reference
}

func (scd DataServiceConnectDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return scd.ref, nil
}

func (scd DataServiceConnectDefaultsAttributes) InternalWithRef(ref terra.Reference) DataServiceConnectDefaultsAttributes {
	return DataServiceConnectDefaultsAttributes{ref: ref}
}

func (scd DataServiceConnectDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scd.ref.InternalTokens()
}

func (scd DataServiceConnectDefaultsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(scd.ref.Append("namespace"))
}

type DataSettingAttributes struct {
	ref terra.Reference
}

func (s DataSettingAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSettingAttributes) InternalWithRef(ref terra.Reference) DataSettingAttributes {
	return DataSettingAttributes{ref: ref}
}

func (s DataSettingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSettingAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DataSettingAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("value"))
}

type DataServiceConnectDefaultsState struct {
	Namespace string `json:"namespace"`
}

type DataSettingState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}
