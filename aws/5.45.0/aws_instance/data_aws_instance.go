// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_instance

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_instance.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ai *DataSource) DataSource() string {
	return "aws_instance"
}

// LocalName returns the local name for [DataSource].
func (ai *DataSource) LocalName() string {
	return ai.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ai *DataSource) Configuration() interface{} {
	return ai.Args
}

// Attributes returns the attributes for [DataSource].
func (ai *DataSource) Attributes() dataAwsInstanceAttributes {
	return dataAwsInstanceAttributes{ref: terra.ReferenceDataSource(ai)}
}

// DataArgs contains the configurations for aws_instance.
type DataArgs struct {
	// GetPasswordData: bool, optional
	GetPasswordData terra.BoolValue `hcl:"get_password_data,attr"`
	// GetUserData: bool, optional
	GetUserData terra.BoolValue `hcl:"get_user_data,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, optional
	InstanceId terra.StringValue `hcl:"instance_id,attr"`
	// InstanceTags: map of string, optional
	InstanceTags terra.MapValue[terra.StringValue] `hcl:"instance_tags,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsInstanceAttributes struct {
	ref terra.Reference
}

// Ami returns a reference to field ami of aws_instance.
func (ai dataAwsInstanceAttributes) Ami() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("ami"))
}

// Arn returns a reference to field arn of aws_instance.
func (ai dataAwsInstanceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("arn"))
}

// AssociatePublicIpAddress returns a reference to field associate_public_ip_address of aws_instance.
func (ai dataAwsInstanceAttributes) AssociatePublicIpAddress() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("associate_public_ip_address"))
}

// AvailabilityZone returns a reference to field availability_zone of aws_instance.
func (ai dataAwsInstanceAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("availability_zone"))
}

// DisableApiStop returns a reference to field disable_api_stop of aws_instance.
func (ai dataAwsInstanceAttributes) DisableApiStop() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("disable_api_stop"))
}

// DisableApiTermination returns a reference to field disable_api_termination of aws_instance.
func (ai dataAwsInstanceAttributes) DisableApiTermination() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("disable_api_termination"))
}

// EbsOptimized returns a reference to field ebs_optimized of aws_instance.
func (ai dataAwsInstanceAttributes) EbsOptimized() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("ebs_optimized"))
}

// GetPasswordData returns a reference to field get_password_data of aws_instance.
func (ai dataAwsInstanceAttributes) GetPasswordData() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("get_password_data"))
}

// GetUserData returns a reference to field get_user_data of aws_instance.
func (ai dataAwsInstanceAttributes) GetUserData() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("get_user_data"))
}

// HostId returns a reference to field host_id of aws_instance.
func (ai dataAwsInstanceAttributes) HostId() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("host_id"))
}

// HostResourceGroupArn returns a reference to field host_resource_group_arn of aws_instance.
func (ai dataAwsInstanceAttributes) HostResourceGroupArn() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("host_resource_group_arn"))
}

// IamInstanceProfile returns a reference to field iam_instance_profile of aws_instance.
func (ai dataAwsInstanceAttributes) IamInstanceProfile() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("iam_instance_profile"))
}

// Id returns a reference to field id of aws_instance.
func (ai dataAwsInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of aws_instance.
func (ai dataAwsInstanceAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("instance_id"))
}

// InstanceState returns a reference to field instance_state of aws_instance.
func (ai dataAwsInstanceAttributes) InstanceState() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("instance_state"))
}

// InstanceTags returns a reference to field instance_tags of aws_instance.
func (ai dataAwsInstanceAttributes) InstanceTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ai.ref.Append("instance_tags"))
}

// InstanceType returns a reference to field instance_type of aws_instance.
func (ai dataAwsInstanceAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("instance_type"))
}

// Ipv6Addresses returns a reference to field ipv6_addresses of aws_instance.
func (ai dataAwsInstanceAttributes) Ipv6Addresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ai.ref.Append("ipv6_addresses"))
}

// KeyName returns a reference to field key_name of aws_instance.
func (ai dataAwsInstanceAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("key_name"))
}

// Monitoring returns a reference to field monitoring of aws_instance.
func (ai dataAwsInstanceAttributes) Monitoring() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("monitoring"))
}

// NetworkInterfaceId returns a reference to field network_interface_id of aws_instance.
func (ai dataAwsInstanceAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("network_interface_id"))
}

// OutpostArn returns a reference to field outpost_arn of aws_instance.
func (ai dataAwsInstanceAttributes) OutpostArn() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("outpost_arn"))
}

// PasswordData returns a reference to field password_data of aws_instance.
func (ai dataAwsInstanceAttributes) PasswordData() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("password_data"))
}

// PlacementGroup returns a reference to field placement_group of aws_instance.
func (ai dataAwsInstanceAttributes) PlacementGroup() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("placement_group"))
}

// PlacementPartitionNumber returns a reference to field placement_partition_number of aws_instance.
func (ai dataAwsInstanceAttributes) PlacementPartitionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ai.ref.Append("placement_partition_number"))
}

// PrivateDns returns a reference to field private_dns of aws_instance.
func (ai dataAwsInstanceAttributes) PrivateDns() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("private_dns"))
}

// PrivateIp returns a reference to field private_ip of aws_instance.
func (ai dataAwsInstanceAttributes) PrivateIp() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("private_ip"))
}

// PublicDns returns a reference to field public_dns of aws_instance.
func (ai dataAwsInstanceAttributes) PublicDns() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("public_dns"))
}

// PublicIp returns a reference to field public_ip of aws_instance.
func (ai dataAwsInstanceAttributes) PublicIp() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("public_ip"))
}

// SecondaryPrivateIps returns a reference to field secondary_private_ips of aws_instance.
func (ai dataAwsInstanceAttributes) SecondaryPrivateIps() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ai.ref.Append("secondary_private_ips"))
}

// SecurityGroups returns a reference to field security_groups of aws_instance.
func (ai dataAwsInstanceAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ai.ref.Append("security_groups"))
}

// SourceDestCheck returns a reference to field source_dest_check of aws_instance.
func (ai dataAwsInstanceAttributes) SourceDestCheck() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("source_dest_check"))
}

// SubnetId returns a reference to field subnet_id of aws_instance.
func (ai dataAwsInstanceAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("subnet_id"))
}

// Tags returns a reference to field tags of aws_instance.
func (ai dataAwsInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ai.ref.Append("tags"))
}

// Tenancy returns a reference to field tenancy of aws_instance.
func (ai dataAwsInstanceAttributes) Tenancy() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("tenancy"))
}

// UserData returns a reference to field user_data of aws_instance.
func (ai dataAwsInstanceAttributes) UserData() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("user_data"))
}

// UserDataBase64 returns a reference to field user_data_base64 of aws_instance.
func (ai dataAwsInstanceAttributes) UserDataBase64() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("user_data_base64"))
}

// VpcSecurityGroupIds returns a reference to field vpc_security_group_ids of aws_instance.
func (ai dataAwsInstanceAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ai.ref.Append("vpc_security_group_ids"))
}

func (ai dataAwsInstanceAttributes) CreditSpecification() terra.ListValue[DataCreditSpecificationAttributes] {
	return terra.ReferenceAsList[DataCreditSpecificationAttributes](ai.ref.Append("credit_specification"))
}

func (ai dataAwsInstanceAttributes) EbsBlockDevice() terra.SetValue[DataEbsBlockDeviceAttributes] {
	return terra.ReferenceAsSet[DataEbsBlockDeviceAttributes](ai.ref.Append("ebs_block_device"))
}

func (ai dataAwsInstanceAttributes) EnclaveOptions() terra.ListValue[DataEnclaveOptionsAttributes] {
	return terra.ReferenceAsList[DataEnclaveOptionsAttributes](ai.ref.Append("enclave_options"))
}

func (ai dataAwsInstanceAttributes) EphemeralBlockDevice() terra.ListValue[DataEphemeralBlockDeviceAttributes] {
	return terra.ReferenceAsList[DataEphemeralBlockDeviceAttributes](ai.ref.Append("ephemeral_block_device"))
}

func (ai dataAwsInstanceAttributes) MaintenanceOptions() terra.ListValue[DataMaintenanceOptionsAttributes] {
	return terra.ReferenceAsList[DataMaintenanceOptionsAttributes](ai.ref.Append("maintenance_options"))
}

func (ai dataAwsInstanceAttributes) MetadataOptions() terra.ListValue[DataMetadataOptionsAttributes] {
	return terra.ReferenceAsList[DataMetadataOptionsAttributes](ai.ref.Append("metadata_options"))
}

func (ai dataAwsInstanceAttributes) PrivateDnsNameOptions() terra.ListValue[DataPrivateDnsNameOptionsAttributes] {
	return terra.ReferenceAsList[DataPrivateDnsNameOptionsAttributes](ai.ref.Append("private_dns_name_options"))
}

func (ai dataAwsInstanceAttributes) RootBlockDevice() terra.SetValue[DataRootBlockDeviceAttributes] {
	return terra.ReferenceAsSet[DataRootBlockDeviceAttributes](ai.ref.Append("root_block_device"))
}

func (ai dataAwsInstanceAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](ai.ref.Append("filter"))
}

func (ai dataAwsInstanceAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ai.ref.Append("timeouts"))
}
