// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appmesh_mesh

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataSpecAttributes struct {
	ref terra.Reference
}

func (s DataSpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSpecAttributes) InternalWithRef(ref terra.Reference) DataSpecAttributes {
	return DataSpecAttributes{ref: ref}
}

func (s DataSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSpecAttributes) EgressFilter() terra.ListValue[DataSpecEgressFilterAttributes] {
	return terra.ReferenceAsList[DataSpecEgressFilterAttributes](s.ref.Append("egress_filter"))
}

type DataSpecEgressFilterAttributes struct {
	ref terra.Reference
}

func (ef DataSpecEgressFilterAttributes) InternalRef() (terra.Reference, error) {
	return ef.ref, nil
}

func (ef DataSpecEgressFilterAttributes) InternalWithRef(ref terra.Reference) DataSpecEgressFilterAttributes {
	return DataSpecEgressFilterAttributes{ref: ref}
}

func (ef DataSpecEgressFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ef.ref.InternalTokens()
}

func (ef DataSpecEgressFilterAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ef.ref.Append("type"))
}

type DataSpecState struct {
	EgressFilter []DataSpecEgressFilterState `json:"egress_filter"`
}

type DataSpecEgressFilterState struct {
	Type string `json:"type"`
}
