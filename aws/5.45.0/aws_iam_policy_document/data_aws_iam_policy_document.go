// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iam_policy_document

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_iam_policy_document.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aipd *DataSource) DataSource() string {
	return "aws_iam_policy_document"
}

// LocalName returns the local name for [DataSource].
func (aipd *DataSource) LocalName() string {
	return aipd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aipd *DataSource) Configuration() interface{} {
	return aipd.Args
}

// Attributes returns the attributes for [DataSource].
func (aipd *DataSource) Attributes() dataAwsIamPolicyDocumentAttributes {
	return dataAwsIamPolicyDocumentAttributes{ref: terra.ReferenceDataSource(aipd)}
}

// DataArgs contains the configurations for aws_iam_policy_document.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OverrideJson: string, optional
	OverrideJson terra.StringValue `hcl:"override_json,attr"`
	// OverridePolicyDocuments: list of string, optional
	OverridePolicyDocuments terra.ListValue[terra.StringValue] `hcl:"override_policy_documents,attr"`
	// PolicyId: string, optional
	PolicyId terra.StringValue `hcl:"policy_id,attr"`
	// SourceJson: string, optional
	SourceJson terra.StringValue `hcl:"source_json,attr"`
	// SourcePolicyDocuments: list of string, optional
	SourcePolicyDocuments terra.ListValue[terra.StringValue] `hcl:"source_policy_documents,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// Statement: min=0
	Statement []DataStatement `hcl:"statement,block" validate:"min=0"`
}

type dataAwsIamPolicyDocumentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aipd.ref.Append("id"))
}

// Json returns a reference to field json of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) Json() terra.StringValue {
	return terra.ReferenceAsString(aipd.ref.Append("json"))
}

// OverrideJson returns a reference to field override_json of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) OverrideJson() terra.StringValue {
	return terra.ReferenceAsString(aipd.ref.Append("override_json"))
}

// OverridePolicyDocuments returns a reference to field override_policy_documents of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) OverridePolicyDocuments() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aipd.ref.Append("override_policy_documents"))
}

// PolicyId returns a reference to field policy_id of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(aipd.ref.Append("policy_id"))
}

// SourceJson returns a reference to field source_json of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) SourceJson() terra.StringValue {
	return terra.ReferenceAsString(aipd.ref.Append("source_json"))
}

// SourcePolicyDocuments returns a reference to field source_policy_documents of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) SourcePolicyDocuments() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aipd.ref.Append("source_policy_documents"))
}

// Version returns a reference to field version of aws_iam_policy_document.
func (aipd dataAwsIamPolicyDocumentAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(aipd.ref.Append("version"))
}

func (aipd dataAwsIamPolicyDocumentAttributes) Statement() terra.ListValue[DataStatementAttributes] {
	return terra.ReferenceAsList[DataStatementAttributes](aipd.ref.Append("statement"))
}
