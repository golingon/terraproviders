// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssoadmin_application_assignment_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ssoadmin_application_assignment_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSsoadminApplicationAssignmentConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asaac *Resource) Type() string {
	return "aws_ssoadmin_application_assignment_configuration"
}

// LocalName returns the local name for [Resource].
func (asaac *Resource) LocalName() string {
	return asaac.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asaac *Resource) Configuration() interface{} {
	return asaac.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asaac *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asaac)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asaac *Resource) Dependencies() terra.Dependencies {
	return asaac.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asaac *Resource) LifecycleManagement() *terra.Lifecycle {
	return asaac.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asaac *Resource) Attributes() awsSsoadminApplicationAssignmentConfigurationAttributes {
	return awsSsoadminApplicationAssignmentConfigurationAttributes{ref: terra.ReferenceResource(asaac)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asaac *Resource) ImportState(state io.Reader) error {
	asaac.state = &awsSsoadminApplicationAssignmentConfigurationState{}
	if err := json.NewDecoder(state).Decode(asaac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asaac.Type(), asaac.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asaac *Resource) State() (*awsSsoadminApplicationAssignmentConfigurationState, bool) {
	return asaac.state, asaac.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asaac *Resource) StateMust() *awsSsoadminApplicationAssignmentConfigurationState {
	if asaac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asaac.Type(), asaac.LocalName()))
	}
	return asaac.state
}

// Args contains the configurations for aws_ssoadmin_application_assignment_configuration.
type Args struct {
	// ApplicationArn: string, required
	ApplicationArn terra.StringValue `hcl:"application_arn,attr" validate:"required"`
	// AssignmentRequired: bool, required
	AssignmentRequired terra.BoolValue `hcl:"assignment_required,attr" validate:"required"`
}

type awsSsoadminApplicationAssignmentConfigurationAttributes struct {
	ref terra.Reference
}

// ApplicationArn returns a reference to field application_arn of aws_ssoadmin_application_assignment_configuration.
func (asaac awsSsoadminApplicationAssignmentConfigurationAttributes) ApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(asaac.ref.Append("application_arn"))
}

// AssignmentRequired returns a reference to field assignment_required of aws_ssoadmin_application_assignment_configuration.
func (asaac awsSsoadminApplicationAssignmentConfigurationAttributes) AssignmentRequired() terra.BoolValue {
	return terra.ReferenceAsBool(asaac.ref.Append("assignment_required"))
}

// Id returns a reference to field id of aws_ssoadmin_application_assignment_configuration.
func (asaac awsSsoadminApplicationAssignmentConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asaac.ref.Append("id"))
}

type awsSsoadminApplicationAssignmentConfigurationState struct {
	ApplicationArn     string `json:"application_arn"`
	AssignmentRequired bool   `json:"assignment_required"`
	Id                 string `json:"id"`
}
