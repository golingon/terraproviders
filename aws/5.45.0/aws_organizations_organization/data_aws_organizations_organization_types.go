// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_organizations_organization

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataAccountsAttributes struct {
	ref terra.Reference
}

func (a DataAccountsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAccountsAttributes) InternalWithRef(ref terra.Reference) DataAccountsAttributes {
	return DataAccountsAttributes{ref: ref}
}

func (a DataAccountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAccountsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("arn"))
}

func (a DataAccountsAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("email"))
}

func (a DataAccountsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("id"))
}

func (a DataAccountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

func (a DataAccountsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("status"))
}

type DataNonMasterAccountsAttributes struct {
	ref terra.Reference
}

func (nma DataNonMasterAccountsAttributes) InternalRef() (terra.Reference, error) {
	return nma.ref, nil
}

func (nma DataNonMasterAccountsAttributes) InternalWithRef(ref terra.Reference) DataNonMasterAccountsAttributes {
	return DataNonMasterAccountsAttributes{ref: ref}
}

func (nma DataNonMasterAccountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nma.ref.InternalTokens()
}

func (nma DataNonMasterAccountsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(nma.ref.Append("arn"))
}

func (nma DataNonMasterAccountsAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(nma.ref.Append("email"))
}

func (nma DataNonMasterAccountsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nma.ref.Append("id"))
}

func (nma DataNonMasterAccountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nma.ref.Append("name"))
}

func (nma DataNonMasterAccountsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(nma.ref.Append("status"))
}

type DataRootsAttributes struct {
	ref terra.Reference
}

func (r DataRootsAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataRootsAttributes) InternalWithRef(ref terra.Reference) DataRootsAttributes {
	return DataRootsAttributes{ref: ref}
}

func (r DataRootsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataRootsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("arn"))
}

func (r DataRootsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("id"))
}

func (r DataRootsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("name"))
}

func (r DataRootsAttributes) PolicyTypes() terra.ListValue[DataRootsPolicyTypesAttributes] {
	return terra.ReferenceAsList[DataRootsPolicyTypesAttributes](r.ref.Append("policy_types"))
}

type DataRootsPolicyTypesAttributes struct {
	ref terra.Reference
}

func (pt DataRootsPolicyTypesAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt DataRootsPolicyTypesAttributes) InternalWithRef(ref terra.Reference) DataRootsPolicyTypesAttributes {
	return DataRootsPolicyTypesAttributes{ref: ref}
}

func (pt DataRootsPolicyTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt DataRootsPolicyTypesAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("status"))
}

func (pt DataRootsPolicyTypesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("type"))
}

type DataAccountsState struct {
	Arn    string `json:"arn"`
	Email  string `json:"email"`
	Id     string `json:"id"`
	Name   string `json:"name"`
	Status string `json:"status"`
}

type DataNonMasterAccountsState struct {
	Arn    string `json:"arn"`
	Email  string `json:"email"`
	Id     string `json:"id"`
	Name   string `json:"name"`
	Status string `json:"status"`
}

type DataRootsState struct {
	Arn         string                      `json:"arn"`
	Id          string                      `json:"id"`
	Name        string                      `json:"name"`
	PolicyTypes []DataRootsPolicyTypesState `json:"policy_types"`
}

type DataRootsPolicyTypesState struct {
	Status string `json:"status"`
	Type   string `json:"type"`
}
