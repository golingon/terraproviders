// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ses_event_destination

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CloudwatchDestination struct {
	// DefaultValue: string, required
	DefaultValue terra.StringValue `hcl:"default_value,attr" validate:"required"`
	// DimensionName: string, required
	DimensionName terra.StringValue `hcl:"dimension_name,attr" validate:"required"`
	// ValueSource: string, required
	ValueSource terra.StringValue `hcl:"value_source,attr" validate:"required"`
}

type KinesisDestination struct {
	// RoleArn: string, required
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
	// StreamArn: string, required
	StreamArn terra.StringValue `hcl:"stream_arn,attr" validate:"required"`
}

type SnsDestination struct {
	// TopicArn: string, required
	TopicArn terra.StringValue `hcl:"topic_arn,attr" validate:"required"`
}

type CloudwatchDestinationAttributes struct {
	ref terra.Reference
}

func (cd CloudwatchDestinationAttributes) InternalRef() (terra.Reference, error) {
	return cd.ref, nil
}

func (cd CloudwatchDestinationAttributes) InternalWithRef(ref terra.Reference) CloudwatchDestinationAttributes {
	return CloudwatchDestinationAttributes{ref: ref}
}

func (cd CloudwatchDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cd.ref.InternalTokens()
}

func (cd CloudwatchDestinationAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("default_value"))
}

func (cd CloudwatchDestinationAttributes) DimensionName() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("dimension_name"))
}

func (cd CloudwatchDestinationAttributes) ValueSource() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("value_source"))
}

type KinesisDestinationAttributes struct {
	ref terra.Reference
}

func (kd KinesisDestinationAttributes) InternalRef() (terra.Reference, error) {
	return kd.ref, nil
}

func (kd KinesisDestinationAttributes) InternalWithRef(ref terra.Reference) KinesisDestinationAttributes {
	return KinesisDestinationAttributes{ref: ref}
}

func (kd KinesisDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kd.ref.InternalTokens()
}

func (kd KinesisDestinationAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(kd.ref.Append("role_arn"))
}

func (kd KinesisDestinationAttributes) StreamArn() terra.StringValue {
	return terra.ReferenceAsString(kd.ref.Append("stream_arn"))
}

type SnsDestinationAttributes struct {
	ref terra.Reference
}

func (sd SnsDestinationAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd SnsDestinationAttributes) InternalWithRef(ref terra.Reference) SnsDestinationAttributes {
	return SnsDestinationAttributes{ref: ref}
}

func (sd SnsDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd SnsDestinationAttributes) TopicArn() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("topic_arn"))
}

type CloudwatchDestinationState struct {
	DefaultValue  string `json:"default_value"`
	DimensionName string `json:"dimension_name"`
	ValueSource   string `json:"value_source"`
}

type KinesisDestinationState struct {
	RoleArn   string `json:"role_arn"`
	StreamArn string `json:"stream_arn"`
}

type SnsDestinationState struct {
	TopicArn string `json:"topic_arn"`
}
