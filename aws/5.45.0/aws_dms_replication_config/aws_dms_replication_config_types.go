// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dms_replication_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ComputeConfig struct {
	// AvailabilityZone: string, optional
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// DnsNameServers: string, optional
	DnsNameServers terra.StringValue `hcl:"dns_name_servers,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// MaxCapacityUnits: number, optional
	MaxCapacityUnits terra.NumberValue `hcl:"max_capacity_units,attr"`
	// MinCapacityUnits: number, optional
	MinCapacityUnits terra.NumberValue `hcl:"min_capacity_units,attr"`
	// MultiAz: bool, optional
	MultiAz terra.BoolValue `hcl:"multi_az,attr"`
	// PreferredMaintenanceWindow: string, optional
	PreferredMaintenanceWindow terra.StringValue `hcl:"preferred_maintenance_window,attr"`
	// ReplicationSubnetGroupId: string, required
	ReplicationSubnetGroupId terra.StringValue `hcl:"replication_subnet_group_id,attr" validate:"required"`
	// VpcSecurityGroupIds: set of string, optional
	VpcSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"vpc_security_group_ids,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ComputeConfigAttributes struct {
	ref terra.Reference
}

func (cc ComputeConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc ComputeConfigAttributes) InternalWithRef(ref terra.Reference) ComputeConfigAttributes {
	return ComputeConfigAttributes{ref: ref}
}

func (cc ComputeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc ComputeConfigAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("availability_zone"))
}

func (cc ComputeConfigAttributes) DnsNameServers() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("dns_name_servers"))
}

func (cc ComputeConfigAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("kms_key_id"))
}

func (cc ComputeConfigAttributes) MaxCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("max_capacity_units"))
}

func (cc ComputeConfigAttributes) MinCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("min_capacity_units"))
}

func (cc ComputeConfigAttributes) MultiAz() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("multi_az"))
}

func (cc ComputeConfigAttributes) PreferredMaintenanceWindow() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("preferred_maintenance_window"))
}

func (cc ComputeConfigAttributes) ReplicationSubnetGroupId() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("replication_subnet_group_id"))
}

func (cc ComputeConfigAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("vpc_security_group_ids"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ComputeConfigState struct {
	AvailabilityZone           string   `json:"availability_zone"`
	DnsNameServers             string   `json:"dns_name_servers"`
	KmsKeyId                   string   `json:"kms_key_id"`
	MaxCapacityUnits           float64  `json:"max_capacity_units"`
	MinCapacityUnits           float64  `json:"min_capacity_units"`
	MultiAz                    bool     `json:"multi_az"`
	PreferredMaintenanceWindow string   `json:"preferred_maintenance_window"`
	ReplicationSubnetGroupId   string   `json:"replication_subnet_group_id"`
	VpcSecurityGroupIds        []string `json:"vpc_security_group_ids"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
