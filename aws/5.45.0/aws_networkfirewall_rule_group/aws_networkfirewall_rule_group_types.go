// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkfirewall_rule_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type EncryptionConfiguration struct {
	// KeyId: string, optional
	KeyId terra.StringValue `hcl:"key_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type RuleGroup struct {
	// RuleGroupReferenceSets: optional
	ReferenceSets *RuleGroupReferenceSets `hcl:"reference_sets,block"`
	// RuleGroupRuleVariables: optional
	RuleVariables *RuleGroupRuleVariables `hcl:"rule_variables,block"`
	// RuleGroupRulesSource: required
	RulesSource *RuleGroupRulesSource `hcl:"rules_source,block" validate:"required"`
	// RuleGroupStatefulRuleOptions: optional
	StatefulRuleOptions *RuleGroupStatefulRuleOptions `hcl:"stateful_rule_options,block"`
}

type RuleGroupReferenceSets struct {
	// RuleGroupReferenceSetsIpSetReferences: min=0,max=5
	IpSetReferences []RuleGroupReferenceSetsIpSetReferences `hcl:"ip_set_references,block" validate:"min=0,max=5"`
}

type RuleGroupReferenceSetsIpSetReferences struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// RuleGroupReferenceSetsIpSetReferencesIpSetReference: min=1
	IpSetReference []RuleGroupReferenceSetsIpSetReferencesIpSetReference `hcl:"ip_set_reference,block" validate:"min=1"`
}

type RuleGroupReferenceSetsIpSetReferencesIpSetReference struct {
	// ReferenceArn: string, required
	ReferenceArn terra.StringValue `hcl:"reference_arn,attr" validate:"required"`
}

type RuleGroupRuleVariables struct {
	// RuleGroupRuleVariablesIpSets: min=0
	IpSets []RuleGroupRuleVariablesIpSets `hcl:"ip_sets,block" validate:"min=0"`
	// RuleGroupRuleVariablesPortSets: min=0
	PortSets []RuleGroupRuleVariablesPortSets `hcl:"port_sets,block" validate:"min=0"`
}

type RuleGroupRuleVariablesIpSets struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// RuleGroupRuleVariablesIpSetsIpSet: required
	IpSet *RuleGroupRuleVariablesIpSetsIpSet `hcl:"ip_set,block" validate:"required"`
}

type RuleGroupRuleVariablesIpSetsIpSet struct {
	// Definition: set of string, required
	Definition terra.SetValue[terra.StringValue] `hcl:"definition,attr" validate:"required"`
}

type RuleGroupRuleVariablesPortSets struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// RuleGroupRuleVariablesPortSetsPortSet: required
	PortSet *RuleGroupRuleVariablesPortSetsPortSet `hcl:"port_set,block" validate:"required"`
}

type RuleGroupRuleVariablesPortSetsPortSet struct {
	// Definition: set of string, required
	Definition terra.SetValue[terra.StringValue] `hcl:"definition,attr" validate:"required"`
}

type RuleGroupRulesSource struct {
	// RulesString: string, optional
	RulesString terra.StringValue `hcl:"rules_string,attr"`
	// RuleGroupRulesSourceRulesSourceList: optional
	RulesSourceList *RuleGroupRulesSourceRulesSourceList `hcl:"rules_source_list,block"`
	// RuleGroupRulesSourceStatefulRule: min=0
	StatefulRule []RuleGroupRulesSourceStatefulRule `hcl:"stateful_rule,block" validate:"min=0"`
	// RuleGroupRulesSourceStatelessRulesAndCustomActions: optional
	StatelessRulesAndCustomActions *RuleGroupRulesSourceStatelessRulesAndCustomActions `hcl:"stateless_rules_and_custom_actions,block"`
}

type RuleGroupRulesSourceRulesSourceList struct {
	// GeneratedRulesType: string, required
	GeneratedRulesType terra.StringValue `hcl:"generated_rules_type,attr" validate:"required"`
	// TargetTypes: set of string, required
	TargetTypes terra.SetValue[terra.StringValue] `hcl:"target_types,attr" validate:"required"`
	// Targets: set of string, required
	Targets terra.SetValue[terra.StringValue] `hcl:"targets,attr" validate:"required"`
}

type RuleGroupRulesSourceStatefulRule struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// RuleGroupRulesSourceStatefulRuleHeader: required
	Header *RuleGroupRulesSourceStatefulRuleHeader `hcl:"header,block" validate:"required"`
	// RuleGroupRulesSourceStatefulRuleRuleOption: min=1
	RuleOption []RuleGroupRulesSourceStatefulRuleRuleOption `hcl:"rule_option,block" validate:"min=1"`
}

type RuleGroupRulesSourceStatefulRuleHeader struct {
	// Destination: string, required
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// DestinationPort: string, required
	DestinationPort terra.StringValue `hcl:"destination_port,attr" validate:"required"`
	// Direction: string, required
	Direction terra.StringValue `hcl:"direction,attr" validate:"required"`
	// Protocol: string, required
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
	// Source: string, required
	Source terra.StringValue `hcl:"source,attr" validate:"required"`
	// SourcePort: string, required
	SourcePort terra.StringValue `hcl:"source_port,attr" validate:"required"`
}

type RuleGroupRulesSourceStatefulRuleRuleOption struct {
	// Keyword: string, required
	Keyword terra.StringValue `hcl:"keyword,attr" validate:"required"`
	// Settings: set of string, optional
	Settings terra.SetValue[terra.StringValue] `hcl:"settings,attr"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActions struct {
	// RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction: min=0
	CustomAction []RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction `hcl:"custom_action,block" validate:"min=0"`
	// RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule: min=1
	StatelessRule []RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule `hcl:"stateless_rule,block" validate:"min=1"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction struct {
	// ActionName: string, required
	ActionName terra.StringValue `hcl:"action_name,attr" validate:"required"`
	// RuleGroupRulesSourceC2200B43: required
	ActionDefinition *RuleGroupRulesSourceC2200B43 `hcl:"action_definition,block" validate:"required"`
}

type RuleGroupRulesSourceC2200B43 struct {
	// RuleGroupRulesSource74D8Efc9: required
	PublishMetricAction *RuleGroupRulesSource74D8Efc9 `hcl:"publish_metric_action,block" validate:"required"`
}

type RuleGroupRulesSource74D8Efc9 struct {
	// RuleGroupRulesSource48Bbca71: min=1
	Dimension []RuleGroupRulesSource48Bbca71 `hcl:"dimension,block" validate:"min=1"`
}

type RuleGroupRulesSource48Bbca71 struct {
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule struct {
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// RuleGroupRulesSourceD738Becd: required
	RuleDefinition *RuleGroupRulesSourceD738Becd `hcl:"rule_definition,block" validate:"required"`
}

type RuleGroupRulesSourceD738Becd struct {
	// Actions: set of string, required
	Actions terra.SetValue[terra.StringValue] `hcl:"actions,attr" validate:"required"`
	// RuleGroupRulesSource277A1Fd1: required
	MatchAttributes *RuleGroupRulesSource277A1Fd1 `hcl:"match_attributes,block" validate:"required"`
}

type RuleGroupRulesSource277A1Fd1 struct {
	// Protocols: set of number, optional
	Protocols terra.SetValue[terra.NumberValue] `hcl:"protocols,attr"`
	// RuleGroupRulesSource99659C25: min=0
	Destination []RuleGroupRulesSource99659C25 `hcl:"destination,block" validate:"min=0"`
	// RuleGroupRulesSourceEc4Ebdc4: min=0
	DestinationPort []RuleGroupRulesSourceEc4Ebdc4 `hcl:"destination_port,block" validate:"min=0"`
	// RuleGroupRulesSourceAa10E72F: min=0
	Source []RuleGroupRulesSourceAa10E72F `hcl:"source,block" validate:"min=0"`
	// RuleGroupRulesSourceF5A90E80: min=0
	SourcePort []RuleGroupRulesSourceF5A90E80 `hcl:"source_port,block" validate:"min=0"`
	// RuleGroupRulesSourceF034F184: min=0
	TcpFlag []RuleGroupRulesSourceF034F184 `hcl:"tcp_flag,block" validate:"min=0"`
}

type RuleGroupRulesSource99659C25 struct {
	// AddressDefinition: string, required
	AddressDefinition terra.StringValue `hcl:"address_definition,attr" validate:"required"`
}

type RuleGroupRulesSourceEc4Ebdc4 struct {
	// FromPort: number, required
	FromPort terra.NumberValue `hcl:"from_port,attr" validate:"required"`
	// ToPort: number, optional
	ToPort terra.NumberValue `hcl:"to_port,attr"`
}

type RuleGroupRulesSourceAa10E72F struct {
	// AddressDefinition: string, required
	AddressDefinition terra.StringValue `hcl:"address_definition,attr" validate:"required"`
}

type RuleGroupRulesSourceF5A90E80 struct {
	// FromPort: number, required
	FromPort terra.NumberValue `hcl:"from_port,attr" validate:"required"`
	// ToPort: number, optional
	ToPort terra.NumberValue `hcl:"to_port,attr"`
}

type RuleGroupRulesSourceF034F184 struct {
	// Flags: set of string, required
	Flags terra.SetValue[terra.StringValue] `hcl:"flags,attr" validate:"required"`
	// Masks: set of string, optional
	Masks terra.SetValue[terra.StringValue] `hcl:"masks,attr"`
}

type RuleGroupStatefulRuleOptions struct {
	// RuleOrder: string, required
	RuleOrder terra.StringValue `hcl:"rule_order,attr" validate:"required"`
}

type EncryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec EncryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec EncryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) EncryptionConfigurationAttributes {
	return EncryptionConfigurationAttributes{ref: ref}
}

func (ec EncryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec EncryptionConfigurationAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

func (ec EncryptionConfigurationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("type"))
}

type RuleGroupAttributes struct {
	ref terra.Reference
}

func (rg RuleGroupAttributes) InternalRef() (terra.Reference, error) {
	return rg.ref, nil
}

func (rg RuleGroupAttributes) InternalWithRef(ref terra.Reference) RuleGroupAttributes {
	return RuleGroupAttributes{ref: ref}
}

func (rg RuleGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rg.ref.InternalTokens()
}

func (rg RuleGroupAttributes) ReferenceSets() terra.ListValue[RuleGroupReferenceSetsAttributes] {
	return terra.ReferenceAsList[RuleGroupReferenceSetsAttributes](rg.ref.Append("reference_sets"))
}

func (rg RuleGroupAttributes) RuleVariables() terra.ListValue[RuleGroupRuleVariablesAttributes] {
	return terra.ReferenceAsList[RuleGroupRuleVariablesAttributes](rg.ref.Append("rule_variables"))
}

func (rg RuleGroupAttributes) RulesSource() terra.ListValue[RuleGroupRulesSourceAttributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceAttributes](rg.ref.Append("rules_source"))
}

func (rg RuleGroupAttributes) StatefulRuleOptions() terra.ListValue[RuleGroupStatefulRuleOptionsAttributes] {
	return terra.ReferenceAsList[RuleGroupStatefulRuleOptionsAttributes](rg.ref.Append("stateful_rule_options"))
}

type RuleGroupReferenceSetsAttributes struct {
	ref terra.Reference
}

func (rs RuleGroupReferenceSetsAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs RuleGroupReferenceSetsAttributes) InternalWithRef(ref terra.Reference) RuleGroupReferenceSetsAttributes {
	return RuleGroupReferenceSetsAttributes{ref: ref}
}

func (rs RuleGroupReferenceSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs RuleGroupReferenceSetsAttributes) IpSetReferences() terra.SetValue[RuleGroupReferenceSetsIpSetReferencesAttributes] {
	return terra.ReferenceAsSet[RuleGroupReferenceSetsIpSetReferencesAttributes](rs.ref.Append("ip_set_references"))
}

type RuleGroupReferenceSetsIpSetReferencesAttributes struct {
	ref terra.Reference
}

func (isr RuleGroupReferenceSetsIpSetReferencesAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr RuleGroupReferenceSetsIpSetReferencesAttributes) InternalWithRef(ref terra.Reference) RuleGroupReferenceSetsIpSetReferencesAttributes {
	return RuleGroupReferenceSetsIpSetReferencesAttributes{ref: ref}
}

func (isr RuleGroupReferenceSetsIpSetReferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr RuleGroupReferenceSetsIpSetReferencesAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("key"))
}

func (isr RuleGroupReferenceSetsIpSetReferencesAttributes) IpSetReference() terra.ListValue[RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes] {
	return terra.ReferenceAsList[RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes](isr.ref.Append("ip_set_reference"))
}

type RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes struct {
	ref terra.Reference
}

func (isr RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) InternalWithRef(ref terra.Reference) RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes {
	return RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes{ref: ref}
}

func (isr RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr RuleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) ReferenceArn() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("reference_arn"))
}

type RuleGroupRuleVariablesAttributes struct {
	ref terra.Reference
}

func (rv RuleGroupRuleVariablesAttributes) InternalRef() (terra.Reference, error) {
	return rv.ref, nil
}

func (rv RuleGroupRuleVariablesAttributes) InternalWithRef(ref terra.Reference) RuleGroupRuleVariablesAttributes {
	return RuleGroupRuleVariablesAttributes{ref: ref}
}

func (rv RuleGroupRuleVariablesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rv.ref.InternalTokens()
}

func (rv RuleGroupRuleVariablesAttributes) IpSets() terra.SetValue[RuleGroupRuleVariablesIpSetsAttributes] {
	return terra.ReferenceAsSet[RuleGroupRuleVariablesIpSetsAttributes](rv.ref.Append("ip_sets"))
}

func (rv RuleGroupRuleVariablesAttributes) PortSets() terra.SetValue[RuleGroupRuleVariablesPortSetsAttributes] {
	return terra.ReferenceAsSet[RuleGroupRuleVariablesPortSetsAttributes](rv.ref.Append("port_sets"))
}

type RuleGroupRuleVariablesIpSetsAttributes struct {
	ref terra.Reference
}

func (is RuleGroupRuleVariablesIpSetsAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is RuleGroupRuleVariablesIpSetsAttributes) InternalWithRef(ref terra.Reference) RuleGroupRuleVariablesIpSetsAttributes {
	return RuleGroupRuleVariablesIpSetsAttributes{ref: ref}
}

func (is RuleGroupRuleVariablesIpSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is RuleGroupRuleVariablesIpSetsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("key"))
}

func (is RuleGroupRuleVariablesIpSetsAttributes) IpSet() terra.ListValue[RuleGroupRuleVariablesIpSetsIpSetAttributes] {
	return terra.ReferenceAsList[RuleGroupRuleVariablesIpSetsIpSetAttributes](is.ref.Append("ip_set"))
}

type RuleGroupRuleVariablesIpSetsIpSetAttributes struct {
	ref terra.Reference
}

func (is RuleGroupRuleVariablesIpSetsIpSetAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is RuleGroupRuleVariablesIpSetsIpSetAttributes) InternalWithRef(ref terra.Reference) RuleGroupRuleVariablesIpSetsIpSetAttributes {
	return RuleGroupRuleVariablesIpSetsIpSetAttributes{ref: ref}
}

func (is RuleGroupRuleVariablesIpSetsIpSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is RuleGroupRuleVariablesIpSetsIpSetAttributes) Definition() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](is.ref.Append("definition"))
}

type RuleGroupRuleVariablesPortSetsAttributes struct {
	ref terra.Reference
}

func (ps RuleGroupRuleVariablesPortSetsAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps RuleGroupRuleVariablesPortSetsAttributes) InternalWithRef(ref terra.Reference) RuleGroupRuleVariablesPortSetsAttributes {
	return RuleGroupRuleVariablesPortSetsAttributes{ref: ref}
}

func (ps RuleGroupRuleVariablesPortSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps RuleGroupRuleVariablesPortSetsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("key"))
}

func (ps RuleGroupRuleVariablesPortSetsAttributes) PortSet() terra.ListValue[RuleGroupRuleVariablesPortSetsPortSetAttributes] {
	return terra.ReferenceAsList[RuleGroupRuleVariablesPortSetsPortSetAttributes](ps.ref.Append("port_set"))
}

type RuleGroupRuleVariablesPortSetsPortSetAttributes struct {
	ref terra.Reference
}

func (ps RuleGroupRuleVariablesPortSetsPortSetAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps RuleGroupRuleVariablesPortSetsPortSetAttributes) InternalWithRef(ref terra.Reference) RuleGroupRuleVariablesPortSetsPortSetAttributes {
	return RuleGroupRuleVariablesPortSetsPortSetAttributes{ref: ref}
}

func (ps RuleGroupRuleVariablesPortSetsPortSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps RuleGroupRuleVariablesPortSetsPortSetAttributes) Definition() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ps.ref.Append("definition"))
}

type RuleGroupRulesSourceAttributes struct {
	ref terra.Reference
}

func (rs RuleGroupRulesSourceAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs RuleGroupRulesSourceAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceAttributes {
	return RuleGroupRulesSourceAttributes{ref: ref}
}

func (rs RuleGroupRulesSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs RuleGroupRulesSourceAttributes) RulesString() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("rules_string"))
}

func (rs RuleGroupRulesSourceAttributes) RulesSourceList() terra.ListValue[RuleGroupRulesSourceRulesSourceListAttributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceRulesSourceListAttributes](rs.ref.Append("rules_source_list"))
}

func (rs RuleGroupRulesSourceAttributes) StatefulRule() terra.ListValue[RuleGroupRulesSourceStatefulRuleAttributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceStatefulRuleAttributes](rs.ref.Append("stateful_rule"))
}

func (rs RuleGroupRulesSourceAttributes) StatelessRulesAndCustomActions() terra.ListValue[RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes](rs.ref.Append("stateless_rules_and_custom_actions"))
}

type RuleGroupRulesSourceRulesSourceListAttributes struct {
	ref terra.Reference
}

func (rsl RuleGroupRulesSourceRulesSourceListAttributes) InternalRef() (terra.Reference, error) {
	return rsl.ref, nil
}

func (rsl RuleGroupRulesSourceRulesSourceListAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceRulesSourceListAttributes {
	return RuleGroupRulesSourceRulesSourceListAttributes{ref: ref}
}

func (rsl RuleGroupRulesSourceRulesSourceListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsl.ref.InternalTokens()
}

func (rsl RuleGroupRulesSourceRulesSourceListAttributes) GeneratedRulesType() terra.StringValue {
	return terra.ReferenceAsString(rsl.ref.Append("generated_rules_type"))
}

func (rsl RuleGroupRulesSourceRulesSourceListAttributes) TargetTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rsl.ref.Append("target_types"))
}

func (rsl RuleGroupRulesSourceRulesSourceListAttributes) Targets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rsl.ref.Append("targets"))
}

type RuleGroupRulesSourceStatefulRuleAttributes struct {
	ref terra.Reference
}

func (sr RuleGroupRulesSourceStatefulRuleAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr RuleGroupRulesSourceStatefulRuleAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceStatefulRuleAttributes {
	return RuleGroupRulesSourceStatefulRuleAttributes{ref: ref}
}

func (sr RuleGroupRulesSourceStatefulRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr RuleGroupRulesSourceStatefulRuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("action"))
}

func (sr RuleGroupRulesSourceStatefulRuleAttributes) Header() terra.ListValue[RuleGroupRulesSourceStatefulRuleHeaderAttributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceStatefulRuleHeaderAttributes](sr.ref.Append("header"))
}

func (sr RuleGroupRulesSourceStatefulRuleAttributes) RuleOption() terra.SetValue[RuleGroupRulesSourceStatefulRuleRuleOptionAttributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceStatefulRuleRuleOptionAttributes](sr.ref.Append("rule_option"))
}

type RuleGroupRulesSourceStatefulRuleHeaderAttributes struct {
	ref terra.Reference
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceStatefulRuleHeaderAttributes {
	return RuleGroupRulesSourceStatefulRuleHeaderAttributes{ref: ref}
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("destination"))
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) DestinationPort() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("destination_port"))
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("direction"))
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("protocol"))
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("source"))
}

func (h RuleGroupRulesSourceStatefulRuleHeaderAttributes) SourcePort() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("source_port"))
}

type RuleGroupRulesSourceStatefulRuleRuleOptionAttributes struct {
	ref terra.Reference
}

func (ro RuleGroupRulesSourceStatefulRuleRuleOptionAttributes) InternalRef() (terra.Reference, error) {
	return ro.ref, nil
}

func (ro RuleGroupRulesSourceStatefulRuleRuleOptionAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceStatefulRuleRuleOptionAttributes {
	return RuleGroupRulesSourceStatefulRuleRuleOptionAttributes{ref: ref}
}

func (ro RuleGroupRulesSourceStatefulRuleRuleOptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ro.ref.InternalTokens()
}

func (ro RuleGroupRulesSourceStatefulRuleRuleOptionAttributes) Keyword() terra.StringValue {
	return terra.ReferenceAsString(ro.ref.Append("keyword"))
}

func (ro RuleGroupRulesSourceStatefulRuleRuleOptionAttributes) Settings() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ro.ref.Append("settings"))
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes struct {
	ref terra.Reference
}

func (sraca RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) InternalRef() (terra.Reference, error) {
	return sraca.ref, nil
}

func (sraca RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes {
	return RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes{ref: ref}
}

func (sraca RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sraca.ref.InternalTokens()
}

func (sraca RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) CustomAction() terra.SetValue[RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes](sraca.ref.Append("custom_action"))
}

func (sraca RuleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) StatelessRule() terra.SetValue[RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes](sraca.ref.Append("stateless_rule"))
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes struct {
	ref terra.Reference
}

func (ca RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes {
	return RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes{ref: ref}
}

func (ca RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) ActionName() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("action_name"))
}

func (ca RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) ActionDefinition() terra.ListValue[RuleGroupRulesSourceC2200B43Attributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceC2200B43Attributes](ca.ref.Append("action_definition"))
}

type RuleGroupRulesSourceC2200B43Attributes struct {
	ref terra.Reference
}

func (ad RuleGroupRulesSourceC2200B43Attributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad RuleGroupRulesSourceC2200B43Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceC2200B43Attributes {
	return RuleGroupRulesSourceC2200B43Attributes{ref: ref}
}

func (ad RuleGroupRulesSourceC2200B43Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ad.ref.InternalTokens()
}

func (ad RuleGroupRulesSourceC2200B43Attributes) PublishMetricAction() terra.ListValue[RuleGroupRulesSource74D8Efc9Attributes] {
	return terra.ReferenceAsList[RuleGroupRulesSource74D8Efc9Attributes](ad.ref.Append("publish_metric_action"))
}

type RuleGroupRulesSource74D8Efc9Attributes struct {
	ref terra.Reference
}

func (pma RuleGroupRulesSource74D8Efc9Attributes) InternalRef() (terra.Reference, error) {
	return pma.ref, nil
}

func (pma RuleGroupRulesSource74D8Efc9Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSource74D8Efc9Attributes {
	return RuleGroupRulesSource74D8Efc9Attributes{ref: ref}
}

func (pma RuleGroupRulesSource74D8Efc9Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pma.ref.InternalTokens()
}

func (pma RuleGroupRulesSource74D8Efc9Attributes) Dimension() terra.SetValue[RuleGroupRulesSource48Bbca71Attributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSource48Bbca71Attributes](pma.ref.Append("dimension"))
}

type RuleGroupRulesSource48Bbca71Attributes struct {
	ref terra.Reference
}

func (d RuleGroupRulesSource48Bbca71Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d RuleGroupRulesSource48Bbca71Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSource48Bbca71Attributes {
	return RuleGroupRulesSource48Bbca71Attributes{ref: ref}
}

func (d RuleGroupRulesSource48Bbca71Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d RuleGroupRulesSource48Bbca71Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes struct {
	ref terra.Reference
}

func (sr RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes {
	return RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes{ref: ref}
}

func (sr RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(sr.ref.Append("priority"))
}

func (sr RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) RuleDefinition() terra.ListValue[RuleGroupRulesSourceD738BecdAttributes] {
	return terra.ReferenceAsList[RuleGroupRulesSourceD738BecdAttributes](sr.ref.Append("rule_definition"))
}

type RuleGroupRulesSourceD738BecdAttributes struct {
	ref terra.Reference
}

func (rd RuleGroupRulesSourceD738BecdAttributes) InternalRef() (terra.Reference, error) {
	return rd.ref, nil
}

func (rd RuleGroupRulesSourceD738BecdAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceD738BecdAttributes {
	return RuleGroupRulesSourceD738BecdAttributes{ref: ref}
}

func (rd RuleGroupRulesSourceD738BecdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rd.ref.InternalTokens()
}

func (rd RuleGroupRulesSourceD738BecdAttributes) Actions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rd.ref.Append("actions"))
}

func (rd RuleGroupRulesSourceD738BecdAttributes) MatchAttributes() terra.ListValue[RuleGroupRulesSource277A1Fd1Attributes] {
	return terra.ReferenceAsList[RuleGroupRulesSource277A1Fd1Attributes](rd.ref.Append("match_attributes"))
}

type RuleGroupRulesSource277A1Fd1Attributes struct {
	ref terra.Reference
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) InternalRef() (terra.Reference, error) {
	return ma.ref, nil
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSource277A1Fd1Attributes {
	return RuleGroupRulesSource277A1Fd1Attributes{ref: ref}
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ma.ref.InternalTokens()
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) Protocols() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](ma.ref.Append("protocols"))
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) Destination() terra.SetValue[RuleGroupRulesSource99659C25Attributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSource99659C25Attributes](ma.ref.Append("destination"))
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) DestinationPort() terra.SetValue[RuleGroupRulesSourceEc4Ebdc4Attributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceEc4Ebdc4Attributes](ma.ref.Append("destination_port"))
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) Source() terra.SetValue[RuleGroupRulesSourceAa10E72FAttributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceAa10E72FAttributes](ma.ref.Append("source"))
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) SourcePort() terra.SetValue[RuleGroupRulesSourceF5A90E80Attributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceF5A90E80Attributes](ma.ref.Append("source_port"))
}

func (ma RuleGroupRulesSource277A1Fd1Attributes) TcpFlag() terra.SetValue[RuleGroupRulesSourceF034F184Attributes] {
	return terra.ReferenceAsSet[RuleGroupRulesSourceF034F184Attributes](ma.ref.Append("tcp_flag"))
}

type RuleGroupRulesSource99659C25Attributes struct {
	ref terra.Reference
}

func (d RuleGroupRulesSource99659C25Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d RuleGroupRulesSource99659C25Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSource99659C25Attributes {
	return RuleGroupRulesSource99659C25Attributes{ref: ref}
}

func (d RuleGroupRulesSource99659C25Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d RuleGroupRulesSource99659C25Attributes) AddressDefinition() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("address_definition"))
}

type RuleGroupRulesSourceEc4Ebdc4Attributes struct {
	ref terra.Reference
}

func (dp RuleGroupRulesSourceEc4Ebdc4Attributes) InternalRef() (terra.Reference, error) {
	return dp.ref, nil
}

func (dp RuleGroupRulesSourceEc4Ebdc4Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceEc4Ebdc4Attributes {
	return RuleGroupRulesSourceEc4Ebdc4Attributes{ref: ref}
}

func (dp RuleGroupRulesSourceEc4Ebdc4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dp.ref.InternalTokens()
}

func (dp RuleGroupRulesSourceEc4Ebdc4Attributes) FromPort() terra.NumberValue {
	return terra.ReferenceAsNumber(dp.ref.Append("from_port"))
}

func (dp RuleGroupRulesSourceEc4Ebdc4Attributes) ToPort() terra.NumberValue {
	return terra.ReferenceAsNumber(dp.ref.Append("to_port"))
}

type RuleGroupRulesSourceAa10E72FAttributes struct {
	ref terra.Reference
}

func (s RuleGroupRulesSourceAa10E72FAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s RuleGroupRulesSourceAa10E72FAttributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceAa10E72FAttributes {
	return RuleGroupRulesSourceAa10E72FAttributes{ref: ref}
}

func (s RuleGroupRulesSourceAa10E72FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s RuleGroupRulesSourceAa10E72FAttributes) AddressDefinition() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("address_definition"))
}

type RuleGroupRulesSourceF5A90E80Attributes struct {
	ref terra.Reference
}

func (sp RuleGroupRulesSourceF5A90E80Attributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp RuleGroupRulesSourceF5A90E80Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceF5A90E80Attributes {
	return RuleGroupRulesSourceF5A90E80Attributes{ref: ref}
}

func (sp RuleGroupRulesSourceF5A90E80Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp RuleGroupRulesSourceF5A90E80Attributes) FromPort() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("from_port"))
}

func (sp RuleGroupRulesSourceF5A90E80Attributes) ToPort() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("to_port"))
}

type RuleGroupRulesSourceF034F184Attributes struct {
	ref terra.Reference
}

func (tf RuleGroupRulesSourceF034F184Attributes) InternalRef() (terra.Reference, error) {
	return tf.ref, nil
}

func (tf RuleGroupRulesSourceF034F184Attributes) InternalWithRef(ref terra.Reference) RuleGroupRulesSourceF034F184Attributes {
	return RuleGroupRulesSourceF034F184Attributes{ref: ref}
}

func (tf RuleGroupRulesSourceF034F184Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tf.ref.InternalTokens()
}

func (tf RuleGroupRulesSourceF034F184Attributes) Flags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](tf.ref.Append("flags"))
}

func (tf RuleGroupRulesSourceF034F184Attributes) Masks() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](tf.ref.Append("masks"))
}

type RuleGroupStatefulRuleOptionsAttributes struct {
	ref terra.Reference
}

func (sro RuleGroupStatefulRuleOptionsAttributes) InternalRef() (terra.Reference, error) {
	return sro.ref, nil
}

func (sro RuleGroupStatefulRuleOptionsAttributes) InternalWithRef(ref terra.Reference) RuleGroupStatefulRuleOptionsAttributes {
	return RuleGroupStatefulRuleOptionsAttributes{ref: ref}
}

func (sro RuleGroupStatefulRuleOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sro.ref.InternalTokens()
}

func (sro RuleGroupStatefulRuleOptionsAttributes) RuleOrder() terra.StringValue {
	return terra.ReferenceAsString(sro.ref.Append("rule_order"))
}

type EncryptionConfigurationState struct {
	KeyId string `json:"key_id"`
	Type  string `json:"type"`
}

type RuleGroupState struct {
	ReferenceSets       []RuleGroupReferenceSetsState       `json:"reference_sets"`
	RuleVariables       []RuleGroupRuleVariablesState       `json:"rule_variables"`
	RulesSource         []RuleGroupRulesSourceState         `json:"rules_source"`
	StatefulRuleOptions []RuleGroupStatefulRuleOptionsState `json:"stateful_rule_options"`
}

type RuleGroupReferenceSetsState struct {
	IpSetReferences []RuleGroupReferenceSetsIpSetReferencesState `json:"ip_set_references"`
}

type RuleGroupReferenceSetsIpSetReferencesState struct {
	Key            string                                                     `json:"key"`
	IpSetReference []RuleGroupReferenceSetsIpSetReferencesIpSetReferenceState `json:"ip_set_reference"`
}

type RuleGroupReferenceSetsIpSetReferencesIpSetReferenceState struct {
	ReferenceArn string `json:"reference_arn"`
}

type RuleGroupRuleVariablesState struct {
	IpSets   []RuleGroupRuleVariablesIpSetsState   `json:"ip_sets"`
	PortSets []RuleGroupRuleVariablesPortSetsState `json:"port_sets"`
}

type RuleGroupRuleVariablesIpSetsState struct {
	Key   string                                   `json:"key"`
	IpSet []RuleGroupRuleVariablesIpSetsIpSetState `json:"ip_set"`
}

type RuleGroupRuleVariablesIpSetsIpSetState struct {
	Definition []string `json:"definition"`
}

type RuleGroupRuleVariablesPortSetsState struct {
	Key     string                                       `json:"key"`
	PortSet []RuleGroupRuleVariablesPortSetsPortSetState `json:"port_set"`
}

type RuleGroupRuleVariablesPortSetsPortSetState struct {
	Definition []string `json:"definition"`
}

type RuleGroupRulesSourceState struct {
	RulesString                    string                                                    `json:"rules_string"`
	RulesSourceList                []RuleGroupRulesSourceRulesSourceListState                `json:"rules_source_list"`
	StatefulRule                   []RuleGroupRulesSourceStatefulRuleState                   `json:"stateful_rule"`
	StatelessRulesAndCustomActions []RuleGroupRulesSourceStatelessRulesAndCustomActionsState `json:"stateless_rules_and_custom_actions"`
}

type RuleGroupRulesSourceRulesSourceListState struct {
	GeneratedRulesType string   `json:"generated_rules_type"`
	TargetTypes        []string `json:"target_types"`
	Targets            []string `json:"targets"`
}

type RuleGroupRulesSourceStatefulRuleState struct {
	Action     string                                            `json:"action"`
	Header     []RuleGroupRulesSourceStatefulRuleHeaderState     `json:"header"`
	RuleOption []RuleGroupRulesSourceStatefulRuleRuleOptionState `json:"rule_option"`
}

type RuleGroupRulesSourceStatefulRuleHeaderState struct {
	Destination     string `json:"destination"`
	DestinationPort string `json:"destination_port"`
	Direction       string `json:"direction"`
	Protocol        string `json:"protocol"`
	Source          string `json:"source"`
	SourcePort      string `json:"source_port"`
}

type RuleGroupRulesSourceStatefulRuleRuleOptionState struct {
	Keyword  string   `json:"keyword"`
	Settings []string `json:"settings"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsState struct {
	CustomAction  []RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionState  `json:"custom_action"`
	StatelessRule []RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleState `json:"stateless_rule"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionState struct {
	ActionName       string                              `json:"action_name"`
	ActionDefinition []RuleGroupRulesSourceC2200B43State `json:"action_definition"`
}

type RuleGroupRulesSourceC2200B43State struct {
	PublishMetricAction []RuleGroupRulesSource74D8Efc9State `json:"publish_metric_action"`
}

type RuleGroupRulesSource74D8Efc9State struct {
	Dimension []RuleGroupRulesSource48Bbca71State `json:"dimension"`
}

type RuleGroupRulesSource48Bbca71State struct {
	Value string `json:"value"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleState struct {
	Priority       float64                             `json:"priority"`
	RuleDefinition []RuleGroupRulesSourceD738BecdState `json:"rule_definition"`
}

type RuleGroupRulesSourceD738BecdState struct {
	Actions         []string                            `json:"actions"`
	MatchAttributes []RuleGroupRulesSource277A1Fd1State `json:"match_attributes"`
}

type RuleGroupRulesSource277A1Fd1State struct {
	Protocols       []float64                           `json:"protocols"`
	Destination     []RuleGroupRulesSource99659C25State `json:"destination"`
	DestinationPort []RuleGroupRulesSourceEc4Ebdc4State `json:"destination_port"`
	Source          []RuleGroupRulesSourceAa10E72FState `json:"source"`
	SourcePort      []RuleGroupRulesSourceF5A90E80State `json:"source_port"`
	TcpFlag         []RuleGroupRulesSourceF034F184State `json:"tcp_flag"`
}

type RuleGroupRulesSource99659C25State struct {
	AddressDefinition string `json:"address_definition"`
}

type RuleGroupRulesSourceEc4Ebdc4State struct {
	FromPort float64 `json:"from_port"`
	ToPort   float64 `json:"to_port"`
}

type RuleGroupRulesSourceAa10E72FState struct {
	AddressDefinition string `json:"address_definition"`
}

type RuleGroupRulesSourceF5A90E80State struct {
	FromPort float64 `json:"from_port"`
	ToPort   float64 `json:"to_port"`
}

type RuleGroupRulesSourceF034F184State struct {
	Flags []string `json:"flags"`
	Masks []string `json:"masks"`
}

type RuleGroupStatefulRuleOptionsState struct {
	RuleOrder string `json:"rule_order"`
}
