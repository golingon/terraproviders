// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_image_pipelines

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_imagebuilder_image_pipelines.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aiip *DataSource) DataSource() string {
	return "aws_imagebuilder_image_pipelines"
}

// LocalName returns the local name for [DataSource].
func (aiip *DataSource) LocalName() string {
	return aiip.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aiip *DataSource) Configuration() interface{} {
	return aiip.Args
}

// Attributes returns the attributes for [DataSource].
func (aiip *DataSource) Attributes() dataAwsImagebuilderImagePipelinesAttributes {
	return dataAwsImagebuilderImagePipelinesAttributes{ref: terra.ReferenceDataSource(aiip)}
}

// DataArgs contains the configurations for aws_imagebuilder_image_pipelines.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
}

type dataAwsImagebuilderImagePipelinesAttributes struct {
	ref terra.Reference
}

// Arns returns a reference to field arns of aws_imagebuilder_image_pipelines.
func (aiip dataAwsImagebuilderImagePipelinesAttributes) Arns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiip.ref.Append("arns"))
}

// Id returns a reference to field id of aws_imagebuilder_image_pipelines.
func (aiip dataAwsImagebuilderImagePipelinesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("id"))
}

// Names returns a reference to field names of aws_imagebuilder_image_pipelines.
func (aiip dataAwsImagebuilderImagePipelinesAttributes) Names() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiip.ref.Append("names"))
}

func (aiip dataAwsImagebuilderImagePipelinesAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](aiip.ref.Append("filter"))
}
