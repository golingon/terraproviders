// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kendra_experience

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataConfigurationAttributes struct {
	ref terra.Reference
}

func (c DataConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataConfigurationAttributes) InternalWithRef(ref terra.Reference) DataConfigurationAttributes {
	return DataConfigurationAttributes{ref: ref}
}

func (c DataConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataConfigurationAttributes) ContentSourceConfiguration() terra.ListValue[DataConfigurationContentSourceConfigurationAttributes] {
	return terra.ReferenceAsList[DataConfigurationContentSourceConfigurationAttributes](c.ref.Append("content_source_configuration"))
}

func (c DataConfigurationAttributes) UserIdentityConfiguration() terra.ListValue[DataConfigurationUserIdentityConfigurationAttributes] {
	return terra.ReferenceAsList[DataConfigurationUserIdentityConfigurationAttributes](c.ref.Append("user_identity_configuration"))
}

type DataConfigurationContentSourceConfigurationAttributes struct {
	ref terra.Reference
}

func (csc DataConfigurationContentSourceConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return csc.ref, nil
}

func (csc DataConfigurationContentSourceConfigurationAttributes) InternalWithRef(ref terra.Reference) DataConfigurationContentSourceConfigurationAttributes {
	return DataConfigurationContentSourceConfigurationAttributes{ref: ref}
}

func (csc DataConfigurationContentSourceConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csc.ref.InternalTokens()
}

func (csc DataConfigurationContentSourceConfigurationAttributes) DataSourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](csc.ref.Append("data_source_ids"))
}

func (csc DataConfigurationContentSourceConfigurationAttributes) DirectPutContent() terra.BoolValue {
	return terra.ReferenceAsBool(csc.ref.Append("direct_put_content"))
}

func (csc DataConfigurationContentSourceConfigurationAttributes) FaqIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](csc.ref.Append("faq_ids"))
}

type DataConfigurationUserIdentityConfigurationAttributes struct {
	ref terra.Reference
}

func (uic DataConfigurationUserIdentityConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return uic.ref, nil
}

func (uic DataConfigurationUserIdentityConfigurationAttributes) InternalWithRef(ref terra.Reference) DataConfigurationUserIdentityConfigurationAttributes {
	return DataConfigurationUserIdentityConfigurationAttributes{ref: ref}
}

func (uic DataConfigurationUserIdentityConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uic.ref.InternalTokens()
}

func (uic DataConfigurationUserIdentityConfigurationAttributes) IdentityAttributeName() terra.StringValue {
	return terra.ReferenceAsString(uic.ref.Append("identity_attribute_name"))
}

type DataEndpointsAttributes struct {
	ref terra.Reference
}

func (e DataEndpointsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataEndpointsAttributes) InternalWithRef(ref terra.Reference) DataEndpointsAttributes {
	return DataEndpointsAttributes{ref: ref}
}

func (e DataEndpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataEndpointsAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("endpoint"))
}

func (e DataEndpointsAttributes) EndpointType() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("endpoint_type"))
}

type DataConfigurationState struct {
	ContentSourceConfiguration []DataConfigurationContentSourceConfigurationState `json:"content_source_configuration"`
	UserIdentityConfiguration  []DataConfigurationUserIdentityConfigurationState  `json:"user_identity_configuration"`
}

type DataConfigurationContentSourceConfigurationState struct {
	DataSourceIds    []string `json:"data_source_ids"`
	DirectPutContent bool     `json:"direct_put_content"`
	FaqIds           []string `json:"faq_ids"`
}

type DataConfigurationUserIdentityConfigurationState struct {
	IdentityAttributeName string `json:"identity_attribute_name"`
}

type DataEndpointsState struct {
	Endpoint     string `json:"endpoint"`
	EndpointType string `json:"endpoint_type"`
}
