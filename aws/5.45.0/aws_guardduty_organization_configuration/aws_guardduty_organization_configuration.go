// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_guardduty_organization_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_guardduty_organization_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsGuarddutyOrganizationConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (agoc *Resource) Type() string {
	return "aws_guardduty_organization_configuration"
}

// LocalName returns the local name for [Resource].
func (agoc *Resource) LocalName() string {
	return agoc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (agoc *Resource) Configuration() interface{} {
	return agoc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (agoc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(agoc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (agoc *Resource) Dependencies() terra.Dependencies {
	return agoc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (agoc *Resource) LifecycleManagement() *terra.Lifecycle {
	return agoc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (agoc *Resource) Attributes() awsGuarddutyOrganizationConfigurationAttributes {
	return awsGuarddutyOrganizationConfigurationAttributes{ref: terra.ReferenceResource(agoc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (agoc *Resource) ImportState(state io.Reader) error {
	agoc.state = &awsGuarddutyOrganizationConfigurationState{}
	if err := json.NewDecoder(state).Decode(agoc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agoc.Type(), agoc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (agoc *Resource) State() (*awsGuarddutyOrganizationConfigurationState, bool) {
	return agoc.state, agoc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (agoc *Resource) StateMust() *awsGuarddutyOrganizationConfigurationState {
	if agoc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agoc.Type(), agoc.LocalName()))
	}
	return agoc.state
}

// Args contains the configurations for aws_guardduty_organization_configuration.
type Args struct {
	// AutoEnable: bool, optional
	AutoEnable terra.BoolValue `hcl:"auto_enable,attr"`
	// AutoEnableOrganizationMembers: string, optional
	AutoEnableOrganizationMembers terra.StringValue `hcl:"auto_enable_organization_members,attr"`
	// DetectorId: string, required
	DetectorId terra.StringValue `hcl:"detector_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Datasources: optional
	Datasources *Datasources `hcl:"datasources,block"`
}

type awsGuarddutyOrganizationConfigurationAttributes struct {
	ref terra.Reference
}

// AutoEnable returns a reference to field auto_enable of aws_guardduty_organization_configuration.
func (agoc awsGuarddutyOrganizationConfigurationAttributes) AutoEnable() terra.BoolValue {
	return terra.ReferenceAsBool(agoc.ref.Append("auto_enable"))
}

// AutoEnableOrganizationMembers returns a reference to field auto_enable_organization_members of aws_guardduty_organization_configuration.
func (agoc awsGuarddutyOrganizationConfigurationAttributes) AutoEnableOrganizationMembers() terra.StringValue {
	return terra.ReferenceAsString(agoc.ref.Append("auto_enable_organization_members"))
}

// DetectorId returns a reference to field detector_id of aws_guardduty_organization_configuration.
func (agoc awsGuarddutyOrganizationConfigurationAttributes) DetectorId() terra.StringValue {
	return terra.ReferenceAsString(agoc.ref.Append("detector_id"))
}

// Id returns a reference to field id of aws_guardduty_organization_configuration.
func (agoc awsGuarddutyOrganizationConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(agoc.ref.Append("id"))
}

func (agoc awsGuarddutyOrganizationConfigurationAttributes) Datasources() terra.ListValue[DatasourcesAttributes] {
	return terra.ReferenceAsList[DatasourcesAttributes](agoc.ref.Append("datasources"))
}

type awsGuarddutyOrganizationConfigurationState struct {
	AutoEnable                    bool               `json:"auto_enable"`
	AutoEnableOrganizationMembers string             `json:"auto_enable_organization_members"`
	DetectorId                    string             `json:"detector_id"`
	Id                            string             `json:"id"`
	Datasources                   []DatasourcesState `json:"datasources"`
}
