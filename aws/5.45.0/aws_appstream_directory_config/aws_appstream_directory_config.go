// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appstream_directory_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appstream_directory_config.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppstreamDirectoryConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aadc *Resource) Type() string {
	return "aws_appstream_directory_config"
}

// LocalName returns the local name for [Resource].
func (aadc *Resource) LocalName() string {
	return aadc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aadc *Resource) Configuration() interface{} {
	return aadc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aadc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aadc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aadc *Resource) Dependencies() terra.Dependencies {
	return aadc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aadc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aadc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aadc *Resource) Attributes() awsAppstreamDirectoryConfigAttributes {
	return awsAppstreamDirectoryConfigAttributes{ref: terra.ReferenceResource(aadc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aadc *Resource) ImportState(state io.Reader) error {
	aadc.state = &awsAppstreamDirectoryConfigState{}
	if err := json.NewDecoder(state).Decode(aadc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aadc.Type(), aadc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aadc *Resource) State() (*awsAppstreamDirectoryConfigState, bool) {
	return aadc.state, aadc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aadc *Resource) StateMust() *awsAppstreamDirectoryConfigState {
	if aadc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aadc.Type(), aadc.LocalName()))
	}
	return aadc.state
}

// Args contains the configurations for aws_appstream_directory_config.
type Args struct {
	// DirectoryName: string, required
	DirectoryName terra.StringValue `hcl:"directory_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OrganizationalUnitDistinguishedNames: set of string, required
	OrganizationalUnitDistinguishedNames terra.SetValue[terra.StringValue] `hcl:"organizational_unit_distinguished_names,attr" validate:"required"`
	// ServiceAccountCredentials: required
	ServiceAccountCredentials *ServiceAccountCredentials `hcl:"service_account_credentials,block" validate:"required"`
}

type awsAppstreamDirectoryConfigAttributes struct {
	ref terra.Reference
}

// CreatedTime returns a reference to field created_time of aws_appstream_directory_config.
func (aadc awsAppstreamDirectoryConfigAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceAsString(aadc.ref.Append("created_time"))
}

// DirectoryName returns a reference to field directory_name of aws_appstream_directory_config.
func (aadc awsAppstreamDirectoryConfigAttributes) DirectoryName() terra.StringValue {
	return terra.ReferenceAsString(aadc.ref.Append("directory_name"))
}

// Id returns a reference to field id of aws_appstream_directory_config.
func (aadc awsAppstreamDirectoryConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aadc.ref.Append("id"))
}

// OrganizationalUnitDistinguishedNames returns a reference to field organizational_unit_distinguished_names of aws_appstream_directory_config.
func (aadc awsAppstreamDirectoryConfigAttributes) OrganizationalUnitDistinguishedNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aadc.ref.Append("organizational_unit_distinguished_names"))
}

func (aadc awsAppstreamDirectoryConfigAttributes) ServiceAccountCredentials() terra.ListValue[ServiceAccountCredentialsAttributes] {
	return terra.ReferenceAsList[ServiceAccountCredentialsAttributes](aadc.ref.Append("service_account_credentials"))
}

type awsAppstreamDirectoryConfigState struct {
	CreatedTime                          string                           `json:"created_time"`
	DirectoryName                        string                           `json:"directory_name"`
	Id                                   string                           `json:"id"`
	OrganizationalUnitDistinguishedNames []string                         `json:"organizational_unit_distinguished_names"`
	ServiceAccountCredentials            []ServiceAccountCredentialsState `json:"service_account_credentials"`
}
