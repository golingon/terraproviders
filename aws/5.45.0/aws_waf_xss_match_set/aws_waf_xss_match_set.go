// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_waf_xss_match_set

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_waf_xss_match_set.
type Resource struct {
	Name      string
	Args      Args
	state     *awsWafXssMatchSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awxms *Resource) Type() string {
	return "aws_waf_xss_match_set"
}

// LocalName returns the local name for [Resource].
func (awxms *Resource) LocalName() string {
	return awxms.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awxms *Resource) Configuration() interface{} {
	return awxms.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awxms *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awxms)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awxms *Resource) Dependencies() terra.Dependencies {
	return awxms.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awxms *Resource) LifecycleManagement() *terra.Lifecycle {
	return awxms.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awxms *Resource) Attributes() awsWafXssMatchSetAttributes {
	return awsWafXssMatchSetAttributes{ref: terra.ReferenceResource(awxms)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awxms *Resource) ImportState(state io.Reader) error {
	awxms.state = &awsWafXssMatchSetState{}
	if err := json.NewDecoder(state).Decode(awxms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awxms.Type(), awxms.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awxms *Resource) State() (*awsWafXssMatchSetState, bool) {
	return awxms.state, awxms.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awxms *Resource) StateMust() *awsWafXssMatchSetState {
	if awxms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awxms.Type(), awxms.LocalName()))
	}
	return awxms.state
}

// Args contains the configurations for aws_waf_xss_match_set.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// XssMatchTuples: min=0
	XssMatchTuples []XssMatchTuples `hcl:"xss_match_tuples,block" validate:"min=0"`
}

type awsWafXssMatchSetAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_waf_xss_match_set.
func (awxms awsWafXssMatchSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(awxms.ref.Append("arn"))
}

// Id returns a reference to field id of aws_waf_xss_match_set.
func (awxms awsWafXssMatchSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awxms.ref.Append("id"))
}

// Name returns a reference to field name of aws_waf_xss_match_set.
func (awxms awsWafXssMatchSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(awxms.ref.Append("name"))
}

func (awxms awsWafXssMatchSetAttributes) XssMatchTuples() terra.SetValue[XssMatchTuplesAttributes] {
	return terra.ReferenceAsSet[XssMatchTuplesAttributes](awxms.ref.Append("xss_match_tuples"))
}

type awsWafXssMatchSetState struct {
	Arn            string                `json:"arn"`
	Id             string                `json:"id"`
	Name           string                `json:"name"`
	XssMatchTuples []XssMatchTuplesState `json:"xss_match_tuples"`
}
