// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appconfig_configuration_profile

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appconfig_configuration_profile.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppconfigConfigurationProfileState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aacp *Resource) Type() string {
	return "aws_appconfig_configuration_profile"
}

// LocalName returns the local name for [Resource].
func (aacp *Resource) LocalName() string {
	return aacp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aacp *Resource) Configuration() interface{} {
	return aacp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aacp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aacp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aacp *Resource) Dependencies() terra.Dependencies {
	return aacp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aacp *Resource) LifecycleManagement() *terra.Lifecycle {
	return aacp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aacp *Resource) Attributes() awsAppconfigConfigurationProfileAttributes {
	return awsAppconfigConfigurationProfileAttributes{ref: terra.ReferenceResource(aacp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aacp *Resource) ImportState(state io.Reader) error {
	aacp.state = &awsAppconfigConfigurationProfileState{}
	if err := json.NewDecoder(state).Decode(aacp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aacp.Type(), aacp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aacp *Resource) State() (*awsAppconfigConfigurationProfileState, bool) {
	return aacp.state, aacp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aacp *Resource) StateMust() *awsAppconfigConfigurationProfileState {
	if aacp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aacp.Type(), aacp.LocalName()))
	}
	return aacp.state
}

// Args contains the configurations for aws_appconfig_configuration_profile.
type Args struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyIdentifier: string, optional
	KmsKeyIdentifier terra.StringValue `hcl:"kms_key_identifier,attr"`
	// LocationUri: string, required
	LocationUri terra.StringValue `hcl:"location_uri,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RetrievalRoleArn: string, optional
	RetrievalRoleArn terra.StringValue `hcl:"retrieval_role_arn,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Validator: min=0,max=2
	Validator []Validator `hcl:"validator,block" validate:"min=0,max=2"`
}

type awsAppconfigConfigurationProfileAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("application_id"))
}

// Arn returns a reference to field arn of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("arn"))
}

// ConfigurationProfileId returns a reference to field configuration_profile_id of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) ConfigurationProfileId() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("configuration_profile_id"))
}

// Description returns a reference to field description of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("description"))
}

// Id returns a reference to field id of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("id"))
}

// KmsKeyIdentifier returns a reference to field kms_key_identifier of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) KmsKeyIdentifier() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("kms_key_identifier"))
}

// LocationUri returns a reference to field location_uri of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) LocationUri() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("location_uri"))
}

// Name returns a reference to field name of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("name"))
}

// RetrievalRoleArn returns a reference to field retrieval_role_arn of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) RetrievalRoleArn() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("retrieval_role_arn"))
}

// Tags returns a reference to field tags of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aacp.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aacp.ref.Append("tags_all"))
}

// Type returns a reference to field type of aws_appconfig_configuration_profile.
func (aacp awsAppconfigConfigurationProfileAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aacp.ref.Append("type"))
}

func (aacp awsAppconfigConfigurationProfileAttributes) Validator() terra.SetValue[ValidatorAttributes] {
	return terra.ReferenceAsSet[ValidatorAttributes](aacp.ref.Append("validator"))
}

type awsAppconfigConfigurationProfileState struct {
	ApplicationId          string            `json:"application_id"`
	Arn                    string            `json:"arn"`
	ConfigurationProfileId string            `json:"configuration_profile_id"`
	Description            string            `json:"description"`
	Id                     string            `json:"id"`
	KmsKeyIdentifier       string            `json:"kms_key_identifier"`
	LocationUri            string            `json:"location_uri"`
	Name                   string            `json:"name"`
	RetrievalRoleArn       string            `json:"retrieval_role_arn"`
	Tags                   map[string]string `json:"tags"`
	TagsAll                map[string]string `json:"tags_all"`
	Type                   string            `json:"type"`
	Validator              []ValidatorState  `json:"validator"`
}
