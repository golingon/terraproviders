// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ebs_volume

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ebs_volume.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aev *DataSource) DataSource() string {
	return "aws_ebs_volume"
}

// LocalName returns the local name for [DataSource].
func (aev *DataSource) LocalName() string {
	return aev.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aev *DataSource) Configuration() interface{} {
	return aev.Args
}

// Attributes returns the attributes for [DataSource].
func (aev *DataSource) Attributes() dataAwsEbsVolumeAttributes {
	return dataAwsEbsVolumeAttributes{ref: terra.ReferenceDataSource(aev)}
}

// DataArgs contains the configurations for aws_ebs_volume.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MostRecent: bool, optional
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEbsVolumeAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("arn"))
}

// AvailabilityZone returns a reference to field availability_zone of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("availability_zone"))
}

// Encrypted returns a reference to field encrypted of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(aev.ref.Append("encrypted"))
}

// Id returns a reference to field id of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("id"))
}

// Iops returns a reference to field iops of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(aev.ref.Append("iops"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("kms_key_id"))
}

// MostRecent returns a reference to field most_recent of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceAsBool(aev.ref.Append("most_recent"))
}

// MultiAttachEnabled returns a reference to field multi_attach_enabled of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) MultiAttachEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aev.ref.Append("multi_attach_enabled"))
}

// OutpostArn returns a reference to field outpost_arn of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) OutpostArn() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("outpost_arn"))
}

// Size returns a reference to field size of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(aev.ref.Append("size"))
}

// SnapshotId returns a reference to field snapshot_id of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("snapshot_id"))
}

// Tags returns a reference to field tags of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aev.ref.Append("tags"))
}

// Throughput returns a reference to field throughput of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(aev.ref.Append("throughput"))
}

// VolumeId returns a reference to field volume_id of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) VolumeId() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("volume_id"))
}

// VolumeType returns a reference to field volume_type of aws_ebs_volume.
func (aev dataAwsEbsVolumeAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(aev.ref.Append("volume_type"))
}

func (aev dataAwsEbsVolumeAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](aev.ref.Append("filter"))
}

func (aev dataAwsEbsVolumeAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aev.ref.Append("timeouts"))
}
