// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_rds_certificate

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_rds_certificate.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arc *DataSource) DataSource() string {
	return "aws_rds_certificate"
}

// LocalName returns the local name for [DataSource].
func (arc *DataSource) LocalName() string {
	return arc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arc *DataSource) Configuration() interface{} {
	return arc.Args
}

// Attributes returns the attributes for [DataSource].
func (arc *DataSource) Attributes() dataAwsRdsCertificateAttributes {
	return dataAwsRdsCertificateAttributes{ref: terra.ReferenceDataSource(arc)}
}

// DataArgs contains the configurations for aws_rds_certificate.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LatestValidTill: bool, optional
	LatestValidTill terra.BoolValue `hcl:"latest_valid_till,attr"`
}

type dataAwsRdsCertificateAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("arn"))
}

// CertificateType returns a reference to field certificate_type of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) CertificateType() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("certificate_type"))
}

// CustomerOverride returns a reference to field customer_override of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) CustomerOverride() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("customer_override"))
}

// CustomerOverrideValidTill returns a reference to field customer_override_valid_till of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) CustomerOverrideValidTill() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("customer_override_valid_till"))
}

// Id returns a reference to field id of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("id"))
}

// LatestValidTill returns a reference to field latest_valid_till of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) LatestValidTill() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("latest_valid_till"))
}

// Thumbprint returns a reference to field thumbprint of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("thumbprint"))
}

// ValidFrom returns a reference to field valid_from of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) ValidFrom() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("valid_from"))
}

// ValidTill returns a reference to field valid_till of aws_rds_certificate.
func (arc dataAwsRdsCertificateAttributes) ValidTill() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("valid_till"))
}
