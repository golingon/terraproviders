// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appconfig_hosted_configuration_version

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appconfig_hosted_configuration_version.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppconfigHostedConfigurationVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aahcv *Resource) Type() string {
	return "aws_appconfig_hosted_configuration_version"
}

// LocalName returns the local name for [Resource].
func (aahcv *Resource) LocalName() string {
	return aahcv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aahcv *Resource) Configuration() interface{} {
	return aahcv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aahcv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aahcv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aahcv *Resource) Dependencies() terra.Dependencies {
	return aahcv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aahcv *Resource) LifecycleManagement() *terra.Lifecycle {
	return aahcv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aahcv *Resource) Attributes() awsAppconfigHostedConfigurationVersionAttributes {
	return awsAppconfigHostedConfigurationVersionAttributes{ref: terra.ReferenceResource(aahcv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aahcv *Resource) ImportState(state io.Reader) error {
	aahcv.state = &awsAppconfigHostedConfigurationVersionState{}
	if err := json.NewDecoder(state).Decode(aahcv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aahcv.Type(), aahcv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aahcv *Resource) State() (*awsAppconfigHostedConfigurationVersionState, bool) {
	return aahcv.state, aahcv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aahcv *Resource) StateMust() *awsAppconfigHostedConfigurationVersionState {
	if aahcv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aahcv.Type(), aahcv.LocalName()))
	}
	return aahcv.state
}

// Args contains the configurations for aws_appconfig_hosted_configuration_version.
type Args struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// ConfigurationProfileId: string, required
	ConfigurationProfileId terra.StringValue `hcl:"configuration_profile_id,attr" validate:"required"`
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsAppconfigHostedConfigurationVersionAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("application_id"))
}

// Arn returns a reference to field arn of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("arn"))
}

// ConfigurationProfileId returns a reference to field configuration_profile_id of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) ConfigurationProfileId() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("configuration_profile_id"))
}

// Content returns a reference to field content of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("content"))
}

// ContentType returns a reference to field content_type of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("content_type"))
}

// Description returns a reference to field description of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("description"))
}

// Id returns a reference to field id of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aahcv.ref.Append("id"))
}

// VersionNumber returns a reference to field version_number of aws_appconfig_hosted_configuration_version.
func (aahcv awsAppconfigHostedConfigurationVersionAttributes) VersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(aahcv.ref.Append("version_number"))
}

type awsAppconfigHostedConfigurationVersionState struct {
	ApplicationId          string  `json:"application_id"`
	Arn                    string  `json:"arn"`
	ConfigurationProfileId string  `json:"configuration_profile_id"`
	Content                string  `json:"content"`
	ContentType            string  `json:"content_type"`
	Description            string  `json:"description"`
	Id                     string  `json:"id"`
	VersionNumber          float64 `json:"version_number"`
}
