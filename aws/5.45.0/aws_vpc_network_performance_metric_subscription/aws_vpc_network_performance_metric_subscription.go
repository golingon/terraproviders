// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_network_performance_metric_subscription

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_vpc_network_performance_metric_subscription.
type Resource struct {
	Name      string
	Args      Args
	state     *awsVpcNetworkPerformanceMetricSubscriptionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avnpms *Resource) Type() string {
	return "aws_vpc_network_performance_metric_subscription"
}

// LocalName returns the local name for [Resource].
func (avnpms *Resource) LocalName() string {
	return avnpms.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avnpms *Resource) Configuration() interface{} {
	return avnpms.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avnpms *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avnpms)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avnpms *Resource) Dependencies() terra.Dependencies {
	return avnpms.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avnpms *Resource) LifecycleManagement() *terra.Lifecycle {
	return avnpms.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avnpms *Resource) Attributes() awsVpcNetworkPerformanceMetricSubscriptionAttributes {
	return awsVpcNetworkPerformanceMetricSubscriptionAttributes{ref: terra.ReferenceResource(avnpms)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avnpms *Resource) ImportState(state io.Reader) error {
	avnpms.state = &awsVpcNetworkPerformanceMetricSubscriptionState{}
	if err := json.NewDecoder(state).Decode(avnpms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avnpms.Type(), avnpms.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avnpms *Resource) State() (*awsVpcNetworkPerformanceMetricSubscriptionState, bool) {
	return avnpms.state, avnpms.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avnpms *Resource) StateMust() *awsVpcNetworkPerformanceMetricSubscriptionState {
	if avnpms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avnpms.Type(), avnpms.LocalName()))
	}
	return avnpms.state
}

// Args contains the configurations for aws_vpc_network_performance_metric_subscription.
type Args struct {
	// Destination: string, required
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Metric: string, optional
	Metric terra.StringValue `hcl:"metric,attr"`
	// Source: string, required
	Source terra.StringValue `hcl:"source,attr" validate:"required"`
	// Statistic: string, optional
	Statistic terra.StringValue `hcl:"statistic,attr"`
}

type awsVpcNetworkPerformanceMetricSubscriptionAttributes struct {
	ref terra.Reference
}

// Destination returns a reference to field destination of aws_vpc_network_performance_metric_subscription.
func (avnpms awsVpcNetworkPerformanceMetricSubscriptionAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(avnpms.ref.Append("destination"))
}

// Id returns a reference to field id of aws_vpc_network_performance_metric_subscription.
func (avnpms awsVpcNetworkPerformanceMetricSubscriptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avnpms.ref.Append("id"))
}

// Metric returns a reference to field metric of aws_vpc_network_performance_metric_subscription.
func (avnpms awsVpcNetworkPerformanceMetricSubscriptionAttributes) Metric() terra.StringValue {
	return terra.ReferenceAsString(avnpms.ref.Append("metric"))
}

// Period returns a reference to field period of aws_vpc_network_performance_metric_subscription.
func (avnpms awsVpcNetworkPerformanceMetricSubscriptionAttributes) Period() terra.StringValue {
	return terra.ReferenceAsString(avnpms.ref.Append("period"))
}

// Source returns a reference to field source of aws_vpc_network_performance_metric_subscription.
func (avnpms awsVpcNetworkPerformanceMetricSubscriptionAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(avnpms.ref.Append("source"))
}

// Statistic returns a reference to field statistic of aws_vpc_network_performance_metric_subscription.
func (avnpms awsVpcNetworkPerformanceMetricSubscriptionAttributes) Statistic() terra.StringValue {
	return terra.ReferenceAsString(avnpms.ref.Append("statistic"))
}

type awsVpcNetworkPerformanceMetricSubscriptionState struct {
	Destination string `json:"destination"`
	Id          string `json:"id"`
	Metric      string `json:"metric"`
	Period      string `json:"period"`
	Source      string `json:"source"`
	Statistic   string `json:"statistic"`
}
