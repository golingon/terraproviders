// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_signer_signing_profile

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_signer_signing_profile.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (assp *DataSource) DataSource() string {
	return "aws_signer_signing_profile"
}

// LocalName returns the local name for [DataSource].
func (assp *DataSource) LocalName() string {
	return assp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (assp *DataSource) Configuration() interface{} {
	return assp.Args
}

// Attributes returns the attributes for [DataSource].
func (assp *DataSource) Attributes() dataAwsSignerSigningProfileAttributes {
	return dataAwsSignerSigningProfileAttributes{ref: terra.ReferenceDataSource(assp)}
}

// DataArgs contains the configurations for aws_signer_signing_profile.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsSignerSigningProfileAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("arn"))
}

// Id returns a reference to field id of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("id"))
}

// Name returns a reference to field name of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("name"))
}

// PlatformDisplayName returns a reference to field platform_display_name of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) PlatformDisplayName() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("platform_display_name"))
}

// PlatformId returns a reference to field platform_id of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) PlatformId() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("platform_id"))
}

// Status returns a reference to field status of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](assp.ref.Append("tags"))
}

// Version returns a reference to field version of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("version"))
}

// VersionArn returns a reference to field version_arn of aws_signer_signing_profile.
func (assp dataAwsSignerSigningProfileAttributes) VersionArn() terra.StringValue {
	return terra.ReferenceAsString(assp.ref.Append("version_arn"))
}

func (assp dataAwsSignerSigningProfileAttributes) RevocationRecord() terra.ListValue[DataRevocationRecordAttributes] {
	return terra.ReferenceAsList[DataRevocationRecordAttributes](assp.ref.Append("revocation_record"))
}

func (assp dataAwsSignerSigningProfileAttributes) SignatureValidityPeriod() terra.ListValue[DataSignatureValidityPeriodAttributes] {
	return terra.ReferenceAsList[DataSignatureValidityPeriodAttributes](assp.ref.Append("signature_validity_period"))
}
