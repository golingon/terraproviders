// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appmesh_route

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataSpecAttributes struct {
	ref terra.Reference
}

func (s DataSpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSpecAttributes) InternalWithRef(ref terra.Reference) DataSpecAttributes {
	return DataSpecAttributes{ref: ref}
}

func (s DataSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSpecAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("priority"))
}

func (s DataSpecAttributes) GrpcRoute() terra.ListValue[DataSpecGrpcRouteAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteAttributes](s.ref.Append("grpc_route"))
}

func (s DataSpecAttributes) Http2Route() terra.ListValue[DataSpecHttp2RouteAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteAttributes](s.ref.Append("http2_route"))
}

func (s DataSpecAttributes) HttpRoute() terra.ListValue[DataSpecHttpRouteAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteAttributes](s.ref.Append("http_route"))
}

func (s DataSpecAttributes) TcpRoute() terra.ListValue[DataSpecTcpRouteAttributes] {
	return terra.ReferenceAsList[DataSpecTcpRouteAttributes](s.ref.Append("tcp_route"))
}

type DataSpecGrpcRouteAttributes struct {
	ref terra.Reference
}

func (gr DataSpecGrpcRouteAttributes) InternalRef() (terra.Reference, error) {
	return gr.ref, nil
}

func (gr DataSpecGrpcRouteAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteAttributes {
	return DataSpecGrpcRouteAttributes{ref: ref}
}

func (gr DataSpecGrpcRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gr.ref.InternalTokens()
}

func (gr DataSpecGrpcRouteAttributes) Action() terra.ListValue[DataSpecGrpcRouteActionAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteActionAttributes](gr.ref.Append("action"))
}

func (gr DataSpecGrpcRouteAttributes) Match() terra.ListValue[DataSpecGrpcRouteMatchAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteMatchAttributes](gr.ref.Append("match"))
}

func (gr DataSpecGrpcRouteAttributes) RetryPolicy() terra.ListValue[DataSpecGrpcRouteRetryPolicyAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteRetryPolicyAttributes](gr.ref.Append("retry_policy"))
}

func (gr DataSpecGrpcRouteAttributes) Timeout() terra.ListValue[DataSpecGrpcRouteTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteTimeoutAttributes](gr.ref.Append("timeout"))
}

type DataSpecGrpcRouteActionAttributes struct {
	ref terra.Reference
}

func (a DataSpecGrpcRouteActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataSpecGrpcRouteActionAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteActionAttributes {
	return DataSpecGrpcRouteActionAttributes{ref: ref}
}

func (a DataSpecGrpcRouteActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataSpecGrpcRouteActionAttributes) WeightedTarget() terra.SetValue[DataSpecGrpcRouteActionWeightedTargetAttributes] {
	return terra.ReferenceAsSet[DataSpecGrpcRouteActionWeightedTargetAttributes](a.ref.Append("weighted_target"))
}

type DataSpecGrpcRouteActionWeightedTargetAttributes struct {
	ref terra.Reference
}

func (wt DataSpecGrpcRouteActionWeightedTargetAttributes) InternalRef() (terra.Reference, error) {
	return wt.ref, nil
}

func (wt DataSpecGrpcRouteActionWeightedTargetAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteActionWeightedTargetAttributes {
	return DataSpecGrpcRouteActionWeightedTargetAttributes{ref: ref}
}

func (wt DataSpecGrpcRouteActionWeightedTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wt.ref.InternalTokens()
}

func (wt DataSpecGrpcRouteActionWeightedTargetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("port"))
}

func (wt DataSpecGrpcRouteActionWeightedTargetAttributes) VirtualNode() terra.StringValue {
	return terra.ReferenceAsString(wt.ref.Append("virtual_node"))
}

func (wt DataSpecGrpcRouteActionWeightedTargetAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("weight"))
}

type DataSpecGrpcRouteMatchAttributes struct {
	ref terra.Reference
}

func (m DataSpecGrpcRouteMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecGrpcRouteMatchAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteMatchAttributes {
	return DataSpecGrpcRouteMatchAttributes{ref: ref}
}

func (m DataSpecGrpcRouteMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecGrpcRouteMatchAttributes) MethodName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("method_name"))
}

func (m DataSpecGrpcRouteMatchAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("port"))
}

func (m DataSpecGrpcRouteMatchAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("prefix"))
}

func (m DataSpecGrpcRouteMatchAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("service_name"))
}

func (m DataSpecGrpcRouteMatchAttributes) Metadata() terra.SetValue[DataSpecGrpcRouteMatchMetadataAttributes] {
	return terra.ReferenceAsSet[DataSpecGrpcRouteMatchMetadataAttributes](m.ref.Append("metadata"))
}

type DataSpecGrpcRouteMatchMetadataAttributes struct {
	ref terra.Reference
}

func (m DataSpecGrpcRouteMatchMetadataAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecGrpcRouteMatchMetadataAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteMatchMetadataAttributes {
	return DataSpecGrpcRouteMatchMetadataAttributes{ref: ref}
}

func (m DataSpecGrpcRouteMatchMetadataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecGrpcRouteMatchMetadataAttributes) Invert() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("invert"))
}

func (m DataSpecGrpcRouteMatchMetadataAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("name"))
}

func (m DataSpecGrpcRouteMatchMetadataAttributes) Match() terra.ListValue[DataSpecGrpcRouteD86B2967Attributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteD86B2967Attributes](m.ref.Append("match"))
}

type DataSpecGrpcRouteD86B2967Attributes struct {
	ref terra.Reference
}

func (m DataSpecGrpcRouteD86B2967Attributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecGrpcRouteD86B2967Attributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteD86B2967Attributes {
	return DataSpecGrpcRouteD86B2967Attributes{ref: ref}
}

func (m DataSpecGrpcRouteD86B2967Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecGrpcRouteD86B2967Attributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("exact"))
}

func (m DataSpecGrpcRouteD86B2967Attributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("prefix"))
}

func (m DataSpecGrpcRouteD86B2967Attributes) Regex() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("regex"))
}

func (m DataSpecGrpcRouteD86B2967Attributes) Suffix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("suffix"))
}

func (m DataSpecGrpcRouteD86B2967Attributes) Range() terra.ListValue[DataSpecGrpcRoute8B0C9706Attributes] {
	return terra.ReferenceAsList[DataSpecGrpcRoute8B0C9706Attributes](m.ref.Append("range"))
}

type DataSpecGrpcRoute8B0C9706Attributes struct {
	ref terra.Reference
}

func (r DataSpecGrpcRoute8B0C9706Attributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataSpecGrpcRoute8B0C9706Attributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRoute8B0C9706Attributes {
	return DataSpecGrpcRoute8B0C9706Attributes{ref: ref}
}

func (r DataSpecGrpcRoute8B0C9706Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataSpecGrpcRoute8B0C9706Attributes) End() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("end"))
}

func (r DataSpecGrpcRoute8B0C9706Attributes) Start() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("start"))
}

type DataSpecGrpcRouteRetryPolicyAttributes struct {
	ref terra.Reference
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteRetryPolicyAttributes {
	return DataSpecGrpcRouteRetryPolicyAttributes{ref: ref}
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) GrpcRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("grpc_retry_events"))
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) HttpRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("http_retry_events"))
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) MaxRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("max_retries"))
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) TcpRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("tcp_retry_events"))
}

func (rp DataSpecGrpcRouteRetryPolicyAttributes) PerRetryTimeout() terra.ListValue[DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes](rp.ref.Append("per_retry_timeout"))
}

type DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes struct {
	ref terra.Reference
}

func (prt DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return prt.ref, nil
}

func (prt DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes {
	return DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes{ref: ref}
}

func (prt DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return prt.ref.InternalTokens()
}

func (prt DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(prt.ref.Append("unit"))
}

func (prt DataSpecGrpcRouteRetryPolicyPerRetryTimeoutAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(prt.ref.Append("value"))
}

type DataSpecGrpcRouteTimeoutAttributes struct {
	ref terra.Reference
}

func (t DataSpecGrpcRouteTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataSpecGrpcRouteTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteTimeoutAttributes {
	return DataSpecGrpcRouteTimeoutAttributes{ref: ref}
}

func (t DataSpecGrpcRouteTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataSpecGrpcRouteTimeoutAttributes) Idle() terra.ListValue[DataSpecGrpcRouteTimeoutIdleAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteTimeoutIdleAttributes](t.ref.Append("idle"))
}

func (t DataSpecGrpcRouteTimeoutAttributes) PerRequest() terra.ListValue[DataSpecGrpcRouteTimeoutPerRequestAttributes] {
	return terra.ReferenceAsList[DataSpecGrpcRouteTimeoutPerRequestAttributes](t.ref.Append("per_request"))
}

type DataSpecGrpcRouteTimeoutIdleAttributes struct {
	ref terra.Reference
}

func (i DataSpecGrpcRouteTimeoutIdleAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataSpecGrpcRouteTimeoutIdleAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteTimeoutIdleAttributes {
	return DataSpecGrpcRouteTimeoutIdleAttributes{ref: ref}
}

func (i DataSpecGrpcRouteTimeoutIdleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataSpecGrpcRouteTimeoutIdleAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("unit"))
}

func (i DataSpecGrpcRouteTimeoutIdleAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("value"))
}

type DataSpecGrpcRouteTimeoutPerRequestAttributes struct {
	ref terra.Reference
}

func (pr DataSpecGrpcRouteTimeoutPerRequestAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr DataSpecGrpcRouteTimeoutPerRequestAttributes) InternalWithRef(ref terra.Reference) DataSpecGrpcRouteTimeoutPerRequestAttributes {
	return DataSpecGrpcRouteTimeoutPerRequestAttributes{ref: ref}
}

func (pr DataSpecGrpcRouteTimeoutPerRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr DataSpecGrpcRouteTimeoutPerRequestAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(pr.ref.Append("unit"))
}

func (pr DataSpecGrpcRouteTimeoutPerRequestAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("value"))
}

type DataSpecHttp2RouteAttributes struct {
	ref terra.Reference
}

func (hr DataSpecHttp2RouteAttributes) InternalRef() (terra.Reference, error) {
	return hr.ref, nil
}

func (hr DataSpecHttp2RouteAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteAttributes {
	return DataSpecHttp2RouteAttributes{ref: ref}
}

func (hr DataSpecHttp2RouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hr.ref.InternalTokens()
}

func (hr DataSpecHttp2RouteAttributes) Action() terra.ListValue[DataSpecHttp2RouteActionAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteActionAttributes](hr.ref.Append("action"))
}

func (hr DataSpecHttp2RouteAttributes) Match() terra.ListValue[DataSpecHttp2RouteMatchAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteMatchAttributes](hr.ref.Append("match"))
}

func (hr DataSpecHttp2RouteAttributes) RetryPolicy() terra.ListValue[DataSpecHttp2RouteRetryPolicyAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteRetryPolicyAttributes](hr.ref.Append("retry_policy"))
}

func (hr DataSpecHttp2RouteAttributes) Timeout() terra.ListValue[DataSpecHttp2RouteTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteTimeoutAttributes](hr.ref.Append("timeout"))
}

type DataSpecHttp2RouteActionAttributes struct {
	ref terra.Reference
}

func (a DataSpecHttp2RouteActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataSpecHttp2RouteActionAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteActionAttributes {
	return DataSpecHttp2RouteActionAttributes{ref: ref}
}

func (a DataSpecHttp2RouteActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataSpecHttp2RouteActionAttributes) WeightedTarget() terra.SetValue[DataSpecHttp2RouteActionWeightedTargetAttributes] {
	return terra.ReferenceAsSet[DataSpecHttp2RouteActionWeightedTargetAttributes](a.ref.Append("weighted_target"))
}

type DataSpecHttp2RouteActionWeightedTargetAttributes struct {
	ref terra.Reference
}

func (wt DataSpecHttp2RouteActionWeightedTargetAttributes) InternalRef() (terra.Reference, error) {
	return wt.ref, nil
}

func (wt DataSpecHttp2RouteActionWeightedTargetAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteActionWeightedTargetAttributes {
	return DataSpecHttp2RouteActionWeightedTargetAttributes{ref: ref}
}

func (wt DataSpecHttp2RouteActionWeightedTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wt.ref.InternalTokens()
}

func (wt DataSpecHttp2RouteActionWeightedTargetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("port"))
}

func (wt DataSpecHttp2RouteActionWeightedTargetAttributes) VirtualNode() terra.StringValue {
	return terra.ReferenceAsString(wt.ref.Append("virtual_node"))
}

func (wt DataSpecHttp2RouteActionWeightedTargetAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("weight"))
}

type DataSpecHttp2RouteMatchAttributes struct {
	ref terra.Reference
}

func (m DataSpecHttp2RouteMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecHttp2RouteMatchAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteMatchAttributes {
	return DataSpecHttp2RouteMatchAttributes{ref: ref}
}

func (m DataSpecHttp2RouteMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecHttp2RouteMatchAttributes) Method() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("method"))
}

func (m DataSpecHttp2RouteMatchAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("port"))
}

func (m DataSpecHttp2RouteMatchAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("prefix"))
}

func (m DataSpecHttp2RouteMatchAttributes) Scheme() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("scheme"))
}

func (m DataSpecHttp2RouteMatchAttributes) Header() terra.SetValue[DataSpecHttp2RouteMatchHeaderAttributes] {
	return terra.ReferenceAsSet[DataSpecHttp2RouteMatchHeaderAttributes](m.ref.Append("header"))
}

func (m DataSpecHttp2RouteMatchAttributes) Path() terra.ListValue[DataSpecHttp2RouteMatchPathAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteMatchPathAttributes](m.ref.Append("path"))
}

func (m DataSpecHttp2RouteMatchAttributes) QueryParameter() terra.SetValue[DataSpecHttp2RouteMatchQueryParameterAttributes] {
	return terra.ReferenceAsSet[DataSpecHttp2RouteMatchQueryParameterAttributes](m.ref.Append("query_parameter"))
}

type DataSpecHttp2RouteMatchHeaderAttributes struct {
	ref terra.Reference
}

func (h DataSpecHttp2RouteMatchHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataSpecHttp2RouteMatchHeaderAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteMatchHeaderAttributes {
	return DataSpecHttp2RouteMatchHeaderAttributes{ref: ref}
}

func (h DataSpecHttp2RouteMatchHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataSpecHttp2RouteMatchHeaderAttributes) Invert() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("invert"))
}

func (h DataSpecHttp2RouteMatchHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h DataSpecHttp2RouteMatchHeaderAttributes) Match() terra.ListValue[DataSpecHttp2Route30Dd3523Attributes] {
	return terra.ReferenceAsList[DataSpecHttp2Route30Dd3523Attributes](h.ref.Append("match"))
}

type DataSpecHttp2Route30Dd3523Attributes struct {
	ref terra.Reference
}

func (m DataSpecHttp2Route30Dd3523Attributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecHttp2Route30Dd3523Attributes) InternalWithRef(ref terra.Reference) DataSpecHttp2Route30Dd3523Attributes {
	return DataSpecHttp2Route30Dd3523Attributes{ref: ref}
}

func (m DataSpecHttp2Route30Dd3523Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecHttp2Route30Dd3523Attributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("exact"))
}

func (m DataSpecHttp2Route30Dd3523Attributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("prefix"))
}

func (m DataSpecHttp2Route30Dd3523Attributes) Regex() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("regex"))
}

func (m DataSpecHttp2Route30Dd3523Attributes) Suffix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("suffix"))
}

func (m DataSpecHttp2Route30Dd3523Attributes) Range() terra.ListValue[DataSpecHttp2Route31605981Attributes] {
	return terra.ReferenceAsList[DataSpecHttp2Route31605981Attributes](m.ref.Append("range"))
}

type DataSpecHttp2Route31605981Attributes struct {
	ref terra.Reference
}

func (r DataSpecHttp2Route31605981Attributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataSpecHttp2Route31605981Attributes) InternalWithRef(ref terra.Reference) DataSpecHttp2Route31605981Attributes {
	return DataSpecHttp2Route31605981Attributes{ref: ref}
}

func (r DataSpecHttp2Route31605981Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataSpecHttp2Route31605981Attributes) End() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("end"))
}

func (r DataSpecHttp2Route31605981Attributes) Start() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("start"))
}

type DataSpecHttp2RouteMatchPathAttributes struct {
	ref terra.Reference
}

func (p DataSpecHttp2RouteMatchPathAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataSpecHttp2RouteMatchPathAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteMatchPathAttributes {
	return DataSpecHttp2RouteMatchPathAttributes{ref: ref}
}

func (p DataSpecHttp2RouteMatchPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataSpecHttp2RouteMatchPathAttributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("exact"))
}

func (p DataSpecHttp2RouteMatchPathAttributes) Regex() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("regex"))
}

type DataSpecHttp2RouteMatchQueryParameterAttributes struct {
	ref terra.Reference
}

func (qp DataSpecHttp2RouteMatchQueryParameterAttributes) InternalRef() (terra.Reference, error) {
	return qp.ref, nil
}

func (qp DataSpecHttp2RouteMatchQueryParameterAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteMatchQueryParameterAttributes {
	return DataSpecHttp2RouteMatchQueryParameterAttributes{ref: ref}
}

func (qp DataSpecHttp2RouteMatchQueryParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qp.ref.InternalTokens()
}

func (qp DataSpecHttp2RouteMatchQueryParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("name"))
}

func (qp DataSpecHttp2RouteMatchQueryParameterAttributes) Match() terra.ListValue[DataSpecHttp2RouteD36Dd47DAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteD36Dd47DAttributes](qp.ref.Append("match"))
}

type DataSpecHttp2RouteD36Dd47DAttributes struct {
	ref terra.Reference
}

func (m DataSpecHttp2RouteD36Dd47DAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecHttp2RouteD36Dd47DAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteD36Dd47DAttributes {
	return DataSpecHttp2RouteD36Dd47DAttributes{ref: ref}
}

func (m DataSpecHttp2RouteD36Dd47DAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecHttp2RouteD36Dd47DAttributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("exact"))
}

type DataSpecHttp2RouteRetryPolicyAttributes struct {
	ref terra.Reference
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteRetryPolicyAttributes {
	return DataSpecHttp2RouteRetryPolicyAttributes{ref: ref}
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) HttpRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("http_retry_events"))
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) MaxRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("max_retries"))
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) TcpRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("tcp_retry_events"))
}

func (rp DataSpecHttp2RouteRetryPolicyAttributes) PerRetryTimeout() terra.ListValue[DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes](rp.ref.Append("per_retry_timeout"))
}

type DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes struct {
	ref terra.Reference
}

func (prt DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return prt.ref, nil
}

func (prt DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes {
	return DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes{ref: ref}
}

func (prt DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return prt.ref.InternalTokens()
}

func (prt DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(prt.ref.Append("unit"))
}

func (prt DataSpecHttp2RouteRetryPolicyPerRetryTimeoutAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(prt.ref.Append("value"))
}

type DataSpecHttp2RouteTimeoutAttributes struct {
	ref terra.Reference
}

func (t DataSpecHttp2RouteTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataSpecHttp2RouteTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteTimeoutAttributes {
	return DataSpecHttp2RouteTimeoutAttributes{ref: ref}
}

func (t DataSpecHttp2RouteTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataSpecHttp2RouteTimeoutAttributes) Idle() terra.ListValue[DataSpecHttp2RouteTimeoutIdleAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteTimeoutIdleAttributes](t.ref.Append("idle"))
}

func (t DataSpecHttp2RouteTimeoutAttributes) PerRequest() terra.ListValue[DataSpecHttp2RouteTimeoutPerRequestAttributes] {
	return terra.ReferenceAsList[DataSpecHttp2RouteTimeoutPerRequestAttributes](t.ref.Append("per_request"))
}

type DataSpecHttp2RouteTimeoutIdleAttributes struct {
	ref terra.Reference
}

func (i DataSpecHttp2RouteTimeoutIdleAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataSpecHttp2RouteTimeoutIdleAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteTimeoutIdleAttributes {
	return DataSpecHttp2RouteTimeoutIdleAttributes{ref: ref}
}

func (i DataSpecHttp2RouteTimeoutIdleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataSpecHttp2RouteTimeoutIdleAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("unit"))
}

func (i DataSpecHttp2RouteTimeoutIdleAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("value"))
}

type DataSpecHttp2RouteTimeoutPerRequestAttributes struct {
	ref terra.Reference
}

func (pr DataSpecHttp2RouteTimeoutPerRequestAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr DataSpecHttp2RouteTimeoutPerRequestAttributes) InternalWithRef(ref terra.Reference) DataSpecHttp2RouteTimeoutPerRequestAttributes {
	return DataSpecHttp2RouteTimeoutPerRequestAttributes{ref: ref}
}

func (pr DataSpecHttp2RouteTimeoutPerRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr DataSpecHttp2RouteTimeoutPerRequestAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(pr.ref.Append("unit"))
}

func (pr DataSpecHttp2RouteTimeoutPerRequestAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("value"))
}

type DataSpecHttpRouteAttributes struct {
	ref terra.Reference
}

func (hr DataSpecHttpRouteAttributes) InternalRef() (terra.Reference, error) {
	return hr.ref, nil
}

func (hr DataSpecHttpRouteAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteAttributes {
	return DataSpecHttpRouteAttributes{ref: ref}
}

func (hr DataSpecHttpRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hr.ref.InternalTokens()
}

func (hr DataSpecHttpRouteAttributes) Action() terra.ListValue[DataSpecHttpRouteActionAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteActionAttributes](hr.ref.Append("action"))
}

func (hr DataSpecHttpRouteAttributes) Match() terra.ListValue[DataSpecHttpRouteMatchAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteMatchAttributes](hr.ref.Append("match"))
}

func (hr DataSpecHttpRouteAttributes) RetryPolicy() terra.ListValue[DataSpecHttpRouteRetryPolicyAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteRetryPolicyAttributes](hr.ref.Append("retry_policy"))
}

func (hr DataSpecHttpRouteAttributes) Timeout() terra.ListValue[DataSpecHttpRouteTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteTimeoutAttributes](hr.ref.Append("timeout"))
}

type DataSpecHttpRouteActionAttributes struct {
	ref terra.Reference
}

func (a DataSpecHttpRouteActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataSpecHttpRouteActionAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteActionAttributes {
	return DataSpecHttpRouteActionAttributes{ref: ref}
}

func (a DataSpecHttpRouteActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataSpecHttpRouteActionAttributes) WeightedTarget() terra.SetValue[DataSpecHttpRouteActionWeightedTargetAttributes] {
	return terra.ReferenceAsSet[DataSpecHttpRouteActionWeightedTargetAttributes](a.ref.Append("weighted_target"))
}

type DataSpecHttpRouteActionWeightedTargetAttributes struct {
	ref terra.Reference
}

func (wt DataSpecHttpRouteActionWeightedTargetAttributes) InternalRef() (terra.Reference, error) {
	return wt.ref, nil
}

func (wt DataSpecHttpRouteActionWeightedTargetAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteActionWeightedTargetAttributes {
	return DataSpecHttpRouteActionWeightedTargetAttributes{ref: ref}
}

func (wt DataSpecHttpRouteActionWeightedTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wt.ref.InternalTokens()
}

func (wt DataSpecHttpRouteActionWeightedTargetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("port"))
}

func (wt DataSpecHttpRouteActionWeightedTargetAttributes) VirtualNode() terra.StringValue {
	return terra.ReferenceAsString(wt.ref.Append("virtual_node"))
}

func (wt DataSpecHttpRouteActionWeightedTargetAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("weight"))
}

type DataSpecHttpRouteMatchAttributes struct {
	ref terra.Reference
}

func (m DataSpecHttpRouteMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecHttpRouteMatchAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteMatchAttributes {
	return DataSpecHttpRouteMatchAttributes{ref: ref}
}

func (m DataSpecHttpRouteMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecHttpRouteMatchAttributes) Method() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("method"))
}

func (m DataSpecHttpRouteMatchAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("port"))
}

func (m DataSpecHttpRouteMatchAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("prefix"))
}

func (m DataSpecHttpRouteMatchAttributes) Scheme() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("scheme"))
}

func (m DataSpecHttpRouteMatchAttributes) Header() terra.SetValue[DataSpecHttpRouteMatchHeaderAttributes] {
	return terra.ReferenceAsSet[DataSpecHttpRouteMatchHeaderAttributes](m.ref.Append("header"))
}

func (m DataSpecHttpRouteMatchAttributes) Path() terra.ListValue[DataSpecHttpRouteMatchPathAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteMatchPathAttributes](m.ref.Append("path"))
}

func (m DataSpecHttpRouteMatchAttributes) QueryParameter() terra.SetValue[DataSpecHttpRouteMatchQueryParameterAttributes] {
	return terra.ReferenceAsSet[DataSpecHttpRouteMatchQueryParameterAttributes](m.ref.Append("query_parameter"))
}

type DataSpecHttpRouteMatchHeaderAttributes struct {
	ref terra.Reference
}

func (h DataSpecHttpRouteMatchHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataSpecHttpRouteMatchHeaderAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteMatchHeaderAttributes {
	return DataSpecHttpRouteMatchHeaderAttributes{ref: ref}
}

func (h DataSpecHttpRouteMatchHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataSpecHttpRouteMatchHeaderAttributes) Invert() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("invert"))
}

func (h DataSpecHttpRouteMatchHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h DataSpecHttpRouteMatchHeaderAttributes) Match() terra.ListValue[DataSpecHttpRoute30Dd3523Attributes] {
	return terra.ReferenceAsList[DataSpecHttpRoute30Dd3523Attributes](h.ref.Append("match"))
}

type DataSpecHttpRoute30Dd3523Attributes struct {
	ref terra.Reference
}

func (m DataSpecHttpRoute30Dd3523Attributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecHttpRoute30Dd3523Attributes) InternalWithRef(ref terra.Reference) DataSpecHttpRoute30Dd3523Attributes {
	return DataSpecHttpRoute30Dd3523Attributes{ref: ref}
}

func (m DataSpecHttpRoute30Dd3523Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecHttpRoute30Dd3523Attributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("exact"))
}

func (m DataSpecHttpRoute30Dd3523Attributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("prefix"))
}

func (m DataSpecHttpRoute30Dd3523Attributes) Regex() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("regex"))
}

func (m DataSpecHttpRoute30Dd3523Attributes) Suffix() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("suffix"))
}

func (m DataSpecHttpRoute30Dd3523Attributes) Range() terra.ListValue[DataSpecHttpRoute31605981Attributes] {
	return terra.ReferenceAsList[DataSpecHttpRoute31605981Attributes](m.ref.Append("range"))
}

type DataSpecHttpRoute31605981Attributes struct {
	ref terra.Reference
}

func (r DataSpecHttpRoute31605981Attributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataSpecHttpRoute31605981Attributes) InternalWithRef(ref terra.Reference) DataSpecHttpRoute31605981Attributes {
	return DataSpecHttpRoute31605981Attributes{ref: ref}
}

func (r DataSpecHttpRoute31605981Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataSpecHttpRoute31605981Attributes) End() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("end"))
}

func (r DataSpecHttpRoute31605981Attributes) Start() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("start"))
}

type DataSpecHttpRouteMatchPathAttributes struct {
	ref terra.Reference
}

func (p DataSpecHttpRouteMatchPathAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataSpecHttpRouteMatchPathAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteMatchPathAttributes {
	return DataSpecHttpRouteMatchPathAttributes{ref: ref}
}

func (p DataSpecHttpRouteMatchPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataSpecHttpRouteMatchPathAttributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("exact"))
}

func (p DataSpecHttpRouteMatchPathAttributes) Regex() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("regex"))
}

type DataSpecHttpRouteMatchQueryParameterAttributes struct {
	ref terra.Reference
}

func (qp DataSpecHttpRouteMatchQueryParameterAttributes) InternalRef() (terra.Reference, error) {
	return qp.ref, nil
}

func (qp DataSpecHttpRouteMatchQueryParameterAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteMatchQueryParameterAttributes {
	return DataSpecHttpRouteMatchQueryParameterAttributes{ref: ref}
}

func (qp DataSpecHttpRouteMatchQueryParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qp.ref.InternalTokens()
}

func (qp DataSpecHttpRouteMatchQueryParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("name"))
}

func (qp DataSpecHttpRouteMatchQueryParameterAttributes) Match() terra.ListValue[DataSpecHttpRouteD36Dd47DAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteD36Dd47DAttributes](qp.ref.Append("match"))
}

type DataSpecHttpRouteD36Dd47DAttributes struct {
	ref terra.Reference
}

func (m DataSpecHttpRouteD36Dd47DAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecHttpRouteD36Dd47DAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteD36Dd47DAttributes {
	return DataSpecHttpRouteD36Dd47DAttributes{ref: ref}
}

func (m DataSpecHttpRouteD36Dd47DAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecHttpRouteD36Dd47DAttributes) Exact() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("exact"))
}

type DataSpecHttpRouteRetryPolicyAttributes struct {
	ref terra.Reference
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteRetryPolicyAttributes {
	return DataSpecHttpRouteRetryPolicyAttributes{ref: ref}
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) HttpRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("http_retry_events"))
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) MaxRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("max_retries"))
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) TcpRetryEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rp.ref.Append("tcp_retry_events"))
}

func (rp DataSpecHttpRouteRetryPolicyAttributes) PerRetryTimeout() terra.ListValue[DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes](rp.ref.Append("per_retry_timeout"))
}

type DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes struct {
	ref terra.Reference
}

func (prt DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return prt.ref, nil
}

func (prt DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes {
	return DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes{ref: ref}
}

func (prt DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return prt.ref.InternalTokens()
}

func (prt DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(prt.ref.Append("unit"))
}

func (prt DataSpecHttpRouteRetryPolicyPerRetryTimeoutAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(prt.ref.Append("value"))
}

type DataSpecHttpRouteTimeoutAttributes struct {
	ref terra.Reference
}

func (t DataSpecHttpRouteTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataSpecHttpRouteTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteTimeoutAttributes {
	return DataSpecHttpRouteTimeoutAttributes{ref: ref}
}

func (t DataSpecHttpRouteTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataSpecHttpRouteTimeoutAttributes) Idle() terra.ListValue[DataSpecHttpRouteTimeoutIdleAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteTimeoutIdleAttributes](t.ref.Append("idle"))
}

func (t DataSpecHttpRouteTimeoutAttributes) PerRequest() terra.ListValue[DataSpecHttpRouteTimeoutPerRequestAttributes] {
	return terra.ReferenceAsList[DataSpecHttpRouteTimeoutPerRequestAttributes](t.ref.Append("per_request"))
}

type DataSpecHttpRouteTimeoutIdleAttributes struct {
	ref terra.Reference
}

func (i DataSpecHttpRouteTimeoutIdleAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataSpecHttpRouteTimeoutIdleAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteTimeoutIdleAttributes {
	return DataSpecHttpRouteTimeoutIdleAttributes{ref: ref}
}

func (i DataSpecHttpRouteTimeoutIdleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataSpecHttpRouteTimeoutIdleAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("unit"))
}

func (i DataSpecHttpRouteTimeoutIdleAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("value"))
}

type DataSpecHttpRouteTimeoutPerRequestAttributes struct {
	ref terra.Reference
}

func (pr DataSpecHttpRouteTimeoutPerRequestAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr DataSpecHttpRouteTimeoutPerRequestAttributes) InternalWithRef(ref terra.Reference) DataSpecHttpRouteTimeoutPerRequestAttributes {
	return DataSpecHttpRouteTimeoutPerRequestAttributes{ref: ref}
}

func (pr DataSpecHttpRouteTimeoutPerRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr DataSpecHttpRouteTimeoutPerRequestAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(pr.ref.Append("unit"))
}

func (pr DataSpecHttpRouteTimeoutPerRequestAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("value"))
}

type DataSpecTcpRouteAttributes struct {
	ref terra.Reference
}

func (tr DataSpecTcpRouteAttributes) InternalRef() (terra.Reference, error) {
	return tr.ref, nil
}

func (tr DataSpecTcpRouteAttributes) InternalWithRef(ref terra.Reference) DataSpecTcpRouteAttributes {
	return DataSpecTcpRouteAttributes{ref: ref}
}

func (tr DataSpecTcpRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tr.ref.InternalTokens()
}

func (tr DataSpecTcpRouteAttributes) Action() terra.ListValue[DataSpecTcpRouteActionAttributes] {
	return terra.ReferenceAsList[DataSpecTcpRouteActionAttributes](tr.ref.Append("action"))
}

func (tr DataSpecTcpRouteAttributes) Match() terra.ListValue[DataSpecTcpRouteMatchAttributes] {
	return terra.ReferenceAsList[DataSpecTcpRouteMatchAttributes](tr.ref.Append("match"))
}

func (tr DataSpecTcpRouteAttributes) Timeout() terra.ListValue[DataSpecTcpRouteTimeoutAttributes] {
	return terra.ReferenceAsList[DataSpecTcpRouteTimeoutAttributes](tr.ref.Append("timeout"))
}

type DataSpecTcpRouteActionAttributes struct {
	ref terra.Reference
}

func (a DataSpecTcpRouteActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataSpecTcpRouteActionAttributes) InternalWithRef(ref terra.Reference) DataSpecTcpRouteActionAttributes {
	return DataSpecTcpRouteActionAttributes{ref: ref}
}

func (a DataSpecTcpRouteActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataSpecTcpRouteActionAttributes) WeightedTarget() terra.SetValue[DataSpecTcpRouteActionWeightedTargetAttributes] {
	return terra.ReferenceAsSet[DataSpecTcpRouteActionWeightedTargetAttributes](a.ref.Append("weighted_target"))
}

type DataSpecTcpRouteActionWeightedTargetAttributes struct {
	ref terra.Reference
}

func (wt DataSpecTcpRouteActionWeightedTargetAttributes) InternalRef() (terra.Reference, error) {
	return wt.ref, nil
}

func (wt DataSpecTcpRouteActionWeightedTargetAttributes) InternalWithRef(ref terra.Reference) DataSpecTcpRouteActionWeightedTargetAttributes {
	return DataSpecTcpRouteActionWeightedTargetAttributes{ref: ref}
}

func (wt DataSpecTcpRouteActionWeightedTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wt.ref.InternalTokens()
}

func (wt DataSpecTcpRouteActionWeightedTargetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("port"))
}

func (wt DataSpecTcpRouteActionWeightedTargetAttributes) VirtualNode() terra.StringValue {
	return terra.ReferenceAsString(wt.ref.Append("virtual_node"))
}

func (wt DataSpecTcpRouteActionWeightedTargetAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(wt.ref.Append("weight"))
}

type DataSpecTcpRouteMatchAttributes struct {
	ref terra.Reference
}

func (m DataSpecTcpRouteMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataSpecTcpRouteMatchAttributes) InternalWithRef(ref terra.Reference) DataSpecTcpRouteMatchAttributes {
	return DataSpecTcpRouteMatchAttributes{ref: ref}
}

func (m DataSpecTcpRouteMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataSpecTcpRouteMatchAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("port"))
}

type DataSpecTcpRouteTimeoutAttributes struct {
	ref terra.Reference
}

func (t DataSpecTcpRouteTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataSpecTcpRouteTimeoutAttributes) InternalWithRef(ref terra.Reference) DataSpecTcpRouteTimeoutAttributes {
	return DataSpecTcpRouteTimeoutAttributes{ref: ref}
}

func (t DataSpecTcpRouteTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataSpecTcpRouteTimeoutAttributes) Idle() terra.ListValue[DataSpecTcpRouteTimeoutIdleAttributes] {
	return terra.ReferenceAsList[DataSpecTcpRouteTimeoutIdleAttributes](t.ref.Append("idle"))
}

type DataSpecTcpRouteTimeoutIdleAttributes struct {
	ref terra.Reference
}

func (i DataSpecTcpRouteTimeoutIdleAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataSpecTcpRouteTimeoutIdleAttributes) InternalWithRef(ref terra.Reference) DataSpecTcpRouteTimeoutIdleAttributes {
	return DataSpecTcpRouteTimeoutIdleAttributes{ref: ref}
}

func (i DataSpecTcpRouteTimeoutIdleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataSpecTcpRouteTimeoutIdleAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("unit"))
}

func (i DataSpecTcpRouteTimeoutIdleAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("value"))
}

type DataSpecState struct {
	Priority   float64                   `json:"priority"`
	GrpcRoute  []DataSpecGrpcRouteState  `json:"grpc_route"`
	Http2Route []DataSpecHttp2RouteState `json:"http2_route"`
	HttpRoute  []DataSpecHttpRouteState  `json:"http_route"`
	TcpRoute   []DataSpecTcpRouteState   `json:"tcp_route"`
}

type DataSpecGrpcRouteState struct {
	Action      []DataSpecGrpcRouteActionState      `json:"action"`
	Match       []DataSpecGrpcRouteMatchState       `json:"match"`
	RetryPolicy []DataSpecGrpcRouteRetryPolicyState `json:"retry_policy"`
	Timeout     []DataSpecGrpcRouteTimeoutState     `json:"timeout"`
}

type DataSpecGrpcRouteActionState struct {
	WeightedTarget []DataSpecGrpcRouteActionWeightedTargetState `json:"weighted_target"`
}

type DataSpecGrpcRouteActionWeightedTargetState struct {
	Port        float64 `json:"port"`
	VirtualNode string  `json:"virtual_node"`
	Weight      float64 `json:"weight"`
}

type DataSpecGrpcRouteMatchState struct {
	MethodName  string                                `json:"method_name"`
	Port        float64                               `json:"port"`
	Prefix      string                                `json:"prefix"`
	ServiceName string                                `json:"service_name"`
	Metadata    []DataSpecGrpcRouteMatchMetadataState `json:"metadata"`
}

type DataSpecGrpcRouteMatchMetadataState struct {
	Invert bool                             `json:"invert"`
	Name   string                           `json:"name"`
	Match  []DataSpecGrpcRouteD86B2967State `json:"match"`
}

type DataSpecGrpcRouteD86B2967State struct {
	Exact  string                           `json:"exact"`
	Prefix string                           `json:"prefix"`
	Regex  string                           `json:"regex"`
	Suffix string                           `json:"suffix"`
	Range  []DataSpecGrpcRoute8B0C9706State `json:"range"`
}

type DataSpecGrpcRoute8B0C9706State struct {
	End   float64 `json:"end"`
	Start float64 `json:"start"`
}

type DataSpecGrpcRouteRetryPolicyState struct {
	GrpcRetryEvents []string                                           `json:"grpc_retry_events"`
	HttpRetryEvents []string                                           `json:"http_retry_events"`
	MaxRetries      float64                                            `json:"max_retries"`
	TcpRetryEvents  []string                                           `json:"tcp_retry_events"`
	PerRetryTimeout []DataSpecGrpcRouteRetryPolicyPerRetryTimeoutState `json:"per_retry_timeout"`
}

type DataSpecGrpcRouteRetryPolicyPerRetryTimeoutState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecGrpcRouteTimeoutState struct {
	Idle       []DataSpecGrpcRouteTimeoutIdleState       `json:"idle"`
	PerRequest []DataSpecGrpcRouteTimeoutPerRequestState `json:"per_request"`
}

type DataSpecGrpcRouteTimeoutIdleState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecGrpcRouteTimeoutPerRequestState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecHttp2RouteState struct {
	Action      []DataSpecHttp2RouteActionState      `json:"action"`
	Match       []DataSpecHttp2RouteMatchState       `json:"match"`
	RetryPolicy []DataSpecHttp2RouteRetryPolicyState `json:"retry_policy"`
	Timeout     []DataSpecHttp2RouteTimeoutState     `json:"timeout"`
}

type DataSpecHttp2RouteActionState struct {
	WeightedTarget []DataSpecHttp2RouteActionWeightedTargetState `json:"weighted_target"`
}

type DataSpecHttp2RouteActionWeightedTargetState struct {
	Port        float64 `json:"port"`
	VirtualNode string  `json:"virtual_node"`
	Weight      float64 `json:"weight"`
}

type DataSpecHttp2RouteMatchState struct {
	Method         string                                       `json:"method"`
	Port           float64                                      `json:"port"`
	Prefix         string                                       `json:"prefix"`
	Scheme         string                                       `json:"scheme"`
	Header         []DataSpecHttp2RouteMatchHeaderState         `json:"header"`
	Path           []DataSpecHttp2RouteMatchPathState           `json:"path"`
	QueryParameter []DataSpecHttp2RouteMatchQueryParameterState `json:"query_parameter"`
}

type DataSpecHttp2RouteMatchHeaderState struct {
	Invert bool                              `json:"invert"`
	Name   string                            `json:"name"`
	Match  []DataSpecHttp2Route30Dd3523State `json:"match"`
}

type DataSpecHttp2Route30Dd3523State struct {
	Exact  string                            `json:"exact"`
	Prefix string                            `json:"prefix"`
	Regex  string                            `json:"regex"`
	Suffix string                            `json:"suffix"`
	Range  []DataSpecHttp2Route31605981State `json:"range"`
}

type DataSpecHttp2Route31605981State struct {
	End   float64 `json:"end"`
	Start float64 `json:"start"`
}

type DataSpecHttp2RouteMatchPathState struct {
	Exact string `json:"exact"`
	Regex string `json:"regex"`
}

type DataSpecHttp2RouteMatchQueryParameterState struct {
	Name  string                            `json:"name"`
	Match []DataSpecHttp2RouteD36Dd47DState `json:"match"`
}

type DataSpecHttp2RouteD36Dd47DState struct {
	Exact string `json:"exact"`
}

type DataSpecHttp2RouteRetryPolicyState struct {
	HttpRetryEvents []string                                            `json:"http_retry_events"`
	MaxRetries      float64                                             `json:"max_retries"`
	TcpRetryEvents  []string                                            `json:"tcp_retry_events"`
	PerRetryTimeout []DataSpecHttp2RouteRetryPolicyPerRetryTimeoutState `json:"per_retry_timeout"`
}

type DataSpecHttp2RouteRetryPolicyPerRetryTimeoutState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecHttp2RouteTimeoutState struct {
	Idle       []DataSpecHttp2RouteTimeoutIdleState       `json:"idle"`
	PerRequest []DataSpecHttp2RouteTimeoutPerRequestState `json:"per_request"`
}

type DataSpecHttp2RouteTimeoutIdleState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecHttp2RouteTimeoutPerRequestState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecHttpRouteState struct {
	Action      []DataSpecHttpRouteActionState      `json:"action"`
	Match       []DataSpecHttpRouteMatchState       `json:"match"`
	RetryPolicy []DataSpecHttpRouteRetryPolicyState `json:"retry_policy"`
	Timeout     []DataSpecHttpRouteTimeoutState     `json:"timeout"`
}

type DataSpecHttpRouteActionState struct {
	WeightedTarget []DataSpecHttpRouteActionWeightedTargetState `json:"weighted_target"`
}

type DataSpecHttpRouteActionWeightedTargetState struct {
	Port        float64 `json:"port"`
	VirtualNode string  `json:"virtual_node"`
	Weight      float64 `json:"weight"`
}

type DataSpecHttpRouteMatchState struct {
	Method         string                                      `json:"method"`
	Port           float64                                     `json:"port"`
	Prefix         string                                      `json:"prefix"`
	Scheme         string                                      `json:"scheme"`
	Header         []DataSpecHttpRouteMatchHeaderState         `json:"header"`
	Path           []DataSpecHttpRouteMatchPathState           `json:"path"`
	QueryParameter []DataSpecHttpRouteMatchQueryParameterState `json:"query_parameter"`
}

type DataSpecHttpRouteMatchHeaderState struct {
	Invert bool                             `json:"invert"`
	Name   string                           `json:"name"`
	Match  []DataSpecHttpRoute30Dd3523State `json:"match"`
}

type DataSpecHttpRoute30Dd3523State struct {
	Exact  string                           `json:"exact"`
	Prefix string                           `json:"prefix"`
	Regex  string                           `json:"regex"`
	Suffix string                           `json:"suffix"`
	Range  []DataSpecHttpRoute31605981State `json:"range"`
}

type DataSpecHttpRoute31605981State struct {
	End   float64 `json:"end"`
	Start float64 `json:"start"`
}

type DataSpecHttpRouteMatchPathState struct {
	Exact string `json:"exact"`
	Regex string `json:"regex"`
}

type DataSpecHttpRouteMatchQueryParameterState struct {
	Name  string                           `json:"name"`
	Match []DataSpecHttpRouteD36Dd47DState `json:"match"`
}

type DataSpecHttpRouteD36Dd47DState struct {
	Exact string `json:"exact"`
}

type DataSpecHttpRouteRetryPolicyState struct {
	HttpRetryEvents []string                                           `json:"http_retry_events"`
	MaxRetries      float64                                            `json:"max_retries"`
	TcpRetryEvents  []string                                           `json:"tcp_retry_events"`
	PerRetryTimeout []DataSpecHttpRouteRetryPolicyPerRetryTimeoutState `json:"per_retry_timeout"`
}

type DataSpecHttpRouteRetryPolicyPerRetryTimeoutState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecHttpRouteTimeoutState struct {
	Idle       []DataSpecHttpRouteTimeoutIdleState       `json:"idle"`
	PerRequest []DataSpecHttpRouteTimeoutPerRequestState `json:"per_request"`
}

type DataSpecHttpRouteTimeoutIdleState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecHttpRouteTimeoutPerRequestState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataSpecTcpRouteState struct {
	Action  []DataSpecTcpRouteActionState  `json:"action"`
	Match   []DataSpecTcpRouteMatchState   `json:"match"`
	Timeout []DataSpecTcpRouteTimeoutState `json:"timeout"`
}

type DataSpecTcpRouteActionState struct {
	WeightedTarget []DataSpecTcpRouteActionWeightedTargetState `json:"weighted_target"`
}

type DataSpecTcpRouteActionWeightedTargetState struct {
	Port        float64 `json:"port"`
	VirtualNode string  `json:"virtual_node"`
	Weight      float64 `json:"weight"`
}

type DataSpecTcpRouteMatchState struct {
	Port float64 `json:"port"`
}

type DataSpecTcpRouteTimeoutState struct {
	Idle []DataSpecTcpRouteTimeoutIdleState `json:"idle"`
}

type DataSpecTcpRouteTimeoutIdleState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}
