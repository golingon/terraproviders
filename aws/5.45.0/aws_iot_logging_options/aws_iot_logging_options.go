// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iot_logging_options

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_iot_logging_options.
type Resource struct {
	Name      string
	Args      Args
	state     *awsIotLoggingOptionsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ailo *Resource) Type() string {
	return "aws_iot_logging_options"
}

// LocalName returns the local name for [Resource].
func (ailo *Resource) LocalName() string {
	return ailo.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ailo *Resource) Configuration() interface{} {
	return ailo.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ailo *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ailo)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ailo *Resource) Dependencies() terra.Dependencies {
	return ailo.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ailo *Resource) LifecycleManagement() *terra.Lifecycle {
	return ailo.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ailo *Resource) Attributes() awsIotLoggingOptionsAttributes {
	return awsIotLoggingOptionsAttributes{ref: terra.ReferenceResource(ailo)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ailo *Resource) ImportState(state io.Reader) error {
	ailo.state = &awsIotLoggingOptionsState{}
	if err := json.NewDecoder(state).Decode(ailo.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ailo.Type(), ailo.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ailo *Resource) State() (*awsIotLoggingOptionsState, bool) {
	return ailo.state, ailo.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ailo *Resource) StateMust() *awsIotLoggingOptionsState {
	if ailo.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ailo.Type(), ailo.LocalName()))
	}
	return ailo.state
}

// Args contains the configurations for aws_iot_logging_options.
type Args struct {
	// DefaultLogLevel: string, required
	DefaultLogLevel terra.StringValue `hcl:"default_log_level,attr" validate:"required"`
	// DisableAllLogs: bool, optional
	DisableAllLogs terra.BoolValue `hcl:"disable_all_logs,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RoleArn: string, required
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
}

type awsIotLoggingOptionsAttributes struct {
	ref terra.Reference
}

// DefaultLogLevel returns a reference to field default_log_level of aws_iot_logging_options.
func (ailo awsIotLoggingOptionsAttributes) DefaultLogLevel() terra.StringValue {
	return terra.ReferenceAsString(ailo.ref.Append("default_log_level"))
}

// DisableAllLogs returns a reference to field disable_all_logs of aws_iot_logging_options.
func (ailo awsIotLoggingOptionsAttributes) DisableAllLogs() terra.BoolValue {
	return terra.ReferenceAsBool(ailo.ref.Append("disable_all_logs"))
}

// Id returns a reference to field id of aws_iot_logging_options.
func (ailo awsIotLoggingOptionsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ailo.ref.Append("id"))
}

// RoleArn returns a reference to field role_arn of aws_iot_logging_options.
func (ailo awsIotLoggingOptionsAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ailo.ref.Append("role_arn"))
}

type awsIotLoggingOptionsState struct {
	DefaultLogLevel string `json:"default_log_level"`
	DisableAllLogs  bool   `json:"disable_all_logs"`
	Id              string `json:"id"`
	RoleArn         string `json:"role_arn"`
}
