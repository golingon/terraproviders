// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sns_platform_application

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sns_platform_application.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSnsPlatformApplicationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aspa *Resource) Type() string {
	return "aws_sns_platform_application"
}

// LocalName returns the local name for [Resource].
func (aspa *Resource) LocalName() string {
	return aspa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aspa *Resource) Configuration() interface{} {
	return aspa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aspa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aspa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aspa *Resource) Dependencies() terra.Dependencies {
	return aspa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aspa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aspa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aspa *Resource) Attributes() awsSnsPlatformApplicationAttributes {
	return awsSnsPlatformApplicationAttributes{ref: terra.ReferenceResource(aspa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aspa *Resource) ImportState(state io.Reader) error {
	aspa.state = &awsSnsPlatformApplicationState{}
	if err := json.NewDecoder(state).Decode(aspa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aspa.Type(), aspa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aspa *Resource) State() (*awsSnsPlatformApplicationState, bool) {
	return aspa.state, aspa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aspa *Resource) StateMust() *awsSnsPlatformApplicationState {
	if aspa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aspa.Type(), aspa.LocalName()))
	}
	return aspa.state
}

// Args contains the configurations for aws_sns_platform_application.
type Args struct {
	// ApplePlatformBundleId: string, optional
	ApplePlatformBundleId terra.StringValue `hcl:"apple_platform_bundle_id,attr"`
	// ApplePlatformTeamId: string, optional
	ApplePlatformTeamId terra.StringValue `hcl:"apple_platform_team_id,attr"`
	// EventDeliveryFailureTopicArn: string, optional
	EventDeliveryFailureTopicArn terra.StringValue `hcl:"event_delivery_failure_topic_arn,attr"`
	// EventEndpointCreatedTopicArn: string, optional
	EventEndpointCreatedTopicArn terra.StringValue `hcl:"event_endpoint_created_topic_arn,attr"`
	// EventEndpointDeletedTopicArn: string, optional
	EventEndpointDeletedTopicArn terra.StringValue `hcl:"event_endpoint_deleted_topic_arn,attr"`
	// EventEndpointUpdatedTopicArn: string, optional
	EventEndpointUpdatedTopicArn terra.StringValue `hcl:"event_endpoint_updated_topic_arn,attr"`
	// FailureFeedbackRoleArn: string, optional
	FailureFeedbackRoleArn terra.StringValue `hcl:"failure_feedback_role_arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Platform: string, required
	Platform terra.StringValue `hcl:"platform,attr" validate:"required"`
	// PlatformCredential: string, required
	PlatformCredential terra.StringValue `hcl:"platform_credential,attr" validate:"required"`
	// PlatformPrincipal: string, optional
	PlatformPrincipal terra.StringValue `hcl:"platform_principal,attr"`
	// SuccessFeedbackRoleArn: string, optional
	SuccessFeedbackRoleArn terra.StringValue `hcl:"success_feedback_role_arn,attr"`
	// SuccessFeedbackSampleRate: string, optional
	SuccessFeedbackSampleRate terra.StringValue `hcl:"success_feedback_sample_rate,attr"`
}

type awsSnsPlatformApplicationAttributes struct {
	ref terra.Reference
}

// ApplePlatformBundleId returns a reference to field apple_platform_bundle_id of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) ApplePlatformBundleId() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("apple_platform_bundle_id"))
}

// ApplePlatformTeamId returns a reference to field apple_platform_team_id of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) ApplePlatformTeamId() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("apple_platform_team_id"))
}

// Arn returns a reference to field arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("arn"))
}

// EventDeliveryFailureTopicArn returns a reference to field event_delivery_failure_topic_arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) EventDeliveryFailureTopicArn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("event_delivery_failure_topic_arn"))
}

// EventEndpointCreatedTopicArn returns a reference to field event_endpoint_created_topic_arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) EventEndpointCreatedTopicArn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("event_endpoint_created_topic_arn"))
}

// EventEndpointDeletedTopicArn returns a reference to field event_endpoint_deleted_topic_arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) EventEndpointDeletedTopicArn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("event_endpoint_deleted_topic_arn"))
}

// EventEndpointUpdatedTopicArn returns a reference to field event_endpoint_updated_topic_arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) EventEndpointUpdatedTopicArn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("event_endpoint_updated_topic_arn"))
}

// FailureFeedbackRoleArn returns a reference to field failure_feedback_role_arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) FailureFeedbackRoleArn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("failure_feedback_role_arn"))
}

// Id returns a reference to field id of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("id"))
}

// Name returns a reference to field name of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("name"))
}

// Platform returns a reference to field platform of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) Platform() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("platform"))
}

// PlatformCredential returns a reference to field platform_credential of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) PlatformCredential() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("platform_credential"))
}

// PlatformPrincipal returns a reference to field platform_principal of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) PlatformPrincipal() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("platform_principal"))
}

// SuccessFeedbackRoleArn returns a reference to field success_feedback_role_arn of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) SuccessFeedbackRoleArn() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("success_feedback_role_arn"))
}

// SuccessFeedbackSampleRate returns a reference to field success_feedback_sample_rate of aws_sns_platform_application.
func (aspa awsSnsPlatformApplicationAttributes) SuccessFeedbackSampleRate() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("success_feedback_sample_rate"))
}

type awsSnsPlatformApplicationState struct {
	ApplePlatformBundleId        string `json:"apple_platform_bundle_id"`
	ApplePlatformTeamId          string `json:"apple_platform_team_id"`
	Arn                          string `json:"arn"`
	EventDeliveryFailureTopicArn string `json:"event_delivery_failure_topic_arn"`
	EventEndpointCreatedTopicArn string `json:"event_endpoint_created_topic_arn"`
	EventEndpointDeletedTopicArn string `json:"event_endpoint_deleted_topic_arn"`
	EventEndpointUpdatedTopicArn string `json:"event_endpoint_updated_topic_arn"`
	FailureFeedbackRoleArn       string `json:"failure_feedback_role_arn"`
	Id                           string `json:"id"`
	Name                         string `json:"name"`
	Platform                     string `json:"platform"`
	PlatformCredential           string `json:"platform_credential"`
	PlatformPrincipal            string `json:"platform_principal"`
	SuccessFeedbackRoleArn       string `json:"success_feedback_role_arn"`
	SuccessFeedbackSampleRate    string `json:"success_feedback_sample_rate"`
}
