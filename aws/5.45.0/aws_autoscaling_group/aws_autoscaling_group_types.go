// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_autoscaling_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type InitialLifecycleHook struct {
	// DefaultResult: string, optional
	DefaultResult terra.StringValue `hcl:"default_result,attr"`
	// HeartbeatTimeout: number, optional
	HeartbeatTimeout terra.NumberValue `hcl:"heartbeat_timeout,attr"`
	// LifecycleTransition: string, required
	LifecycleTransition terra.StringValue `hcl:"lifecycle_transition,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NotificationMetadata: string, optional
	NotificationMetadata terra.StringValue `hcl:"notification_metadata,attr"`
	// NotificationTargetArn: string, optional
	NotificationTargetArn terra.StringValue `hcl:"notification_target_arn,attr"`
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
}

type InstanceMaintenancePolicy struct {
	// MaxHealthyPercentage: number, required
	MaxHealthyPercentage terra.NumberValue `hcl:"max_healthy_percentage,attr" validate:"required"`
	// MinHealthyPercentage: number, required
	MinHealthyPercentage terra.NumberValue `hcl:"min_healthy_percentage,attr" validate:"required"`
}

type InstanceRefresh struct {
	// Strategy: string, required
	Strategy terra.StringValue `hcl:"strategy,attr" validate:"required"`
	// Triggers: set of string, optional
	Triggers terra.SetValue[terra.StringValue] `hcl:"triggers,attr"`
	// InstanceRefreshPreferences: optional
	Preferences *InstanceRefreshPreferences `hcl:"preferences,block"`
}

type InstanceRefreshPreferences struct {
	// AutoRollback: bool, optional
	AutoRollback terra.BoolValue `hcl:"auto_rollback,attr"`
	// CheckpointDelay: string, optional
	CheckpointDelay terra.StringValue `hcl:"checkpoint_delay,attr"`
	// CheckpointPercentages: list of number, optional
	CheckpointPercentages terra.ListValue[terra.NumberValue] `hcl:"checkpoint_percentages,attr"`
	// InstanceWarmup: string, optional
	InstanceWarmup terra.StringValue `hcl:"instance_warmup,attr"`
	// MaxHealthyPercentage: number, optional
	MaxHealthyPercentage terra.NumberValue `hcl:"max_healthy_percentage,attr"`
	// MinHealthyPercentage: number, optional
	MinHealthyPercentage terra.NumberValue `hcl:"min_healthy_percentage,attr"`
	// ScaleInProtectedInstances: string, optional
	ScaleInProtectedInstances terra.StringValue `hcl:"scale_in_protected_instances,attr"`
	// SkipMatching: bool, optional
	SkipMatching terra.BoolValue `hcl:"skip_matching,attr"`
	// StandbyInstances: string, optional
	StandbyInstances terra.StringValue `hcl:"standby_instances,attr"`
}

type LaunchTemplate struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type MixedInstancesPolicy struct {
	// MixedInstancesPolicyInstancesDistribution: optional
	InstancesDistribution *MixedInstancesPolicyInstancesDistribution `hcl:"instances_distribution,block"`
	// MixedInstancesPolicyLaunchTemplate: required
	LaunchTemplate *MixedInstancesPolicyLaunchTemplate `hcl:"launch_template,block" validate:"required"`
}

type MixedInstancesPolicyInstancesDistribution struct {
	// OnDemandAllocationStrategy: string, optional
	OnDemandAllocationStrategy terra.StringValue `hcl:"on_demand_allocation_strategy,attr"`
	// OnDemandBaseCapacity: number, optional
	OnDemandBaseCapacity terra.NumberValue `hcl:"on_demand_base_capacity,attr"`
	// OnDemandPercentageAboveBaseCapacity: number, optional
	OnDemandPercentageAboveBaseCapacity terra.NumberValue `hcl:"on_demand_percentage_above_base_capacity,attr"`
	// SpotAllocationStrategy: string, optional
	SpotAllocationStrategy terra.StringValue `hcl:"spot_allocation_strategy,attr"`
	// SpotInstancePools: number, optional
	SpotInstancePools terra.NumberValue `hcl:"spot_instance_pools,attr"`
	// SpotMaxPrice: string, optional
	SpotMaxPrice terra.StringValue `hcl:"spot_max_price,attr"`
}

type MixedInstancesPolicyLaunchTemplate struct {
	// MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification: required
	LaunchTemplateSpecification *MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification `hcl:"launch_template_specification,block" validate:"required"`
	// MixedInstancesPolicyLaunchTemplateOverride: min=0
	Override []MixedInstancesPolicyLaunchTemplateOverride `hcl:"override,block" validate:"min=0"`
}

type MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification struct {
	// LaunchTemplateId: string, optional
	LaunchTemplateId terra.StringValue `hcl:"launch_template_id,attr"`
	// LaunchTemplateName: string, optional
	LaunchTemplateName terra.StringValue `hcl:"launch_template_name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type MixedInstancesPolicyLaunchTemplateOverride struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// WeightedCapacity: string, optional
	WeightedCapacity terra.StringValue `hcl:"weighted_capacity,attr"`
	// MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirements: optional
	InstanceRequirements *MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirements `hcl:"instance_requirements,block"`
	// MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecification: optional
	LaunchTemplateSpecification *MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecification `hcl:"launch_template_specification,block"`
}

type MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirements struct {
	// AcceleratorManufacturers: set of string, optional
	AcceleratorManufacturers terra.SetValue[terra.StringValue] `hcl:"accelerator_manufacturers,attr"`
	// AcceleratorNames: set of string, optional
	AcceleratorNames terra.SetValue[terra.StringValue] `hcl:"accelerator_names,attr"`
	// AcceleratorTypes: set of string, optional
	AcceleratorTypes terra.SetValue[terra.StringValue] `hcl:"accelerator_types,attr"`
	// AllowedInstanceTypes: set of string, optional
	AllowedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"allowed_instance_types,attr"`
	// BareMetal: string, optional
	BareMetal terra.StringValue `hcl:"bare_metal,attr"`
	// BurstablePerformance: string, optional
	BurstablePerformance terra.StringValue `hcl:"burstable_performance,attr"`
	// CpuManufacturers: set of string, optional
	CpuManufacturers terra.SetValue[terra.StringValue] `hcl:"cpu_manufacturers,attr"`
	// ExcludedInstanceTypes: set of string, optional
	ExcludedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"excluded_instance_types,attr"`
	// InstanceGenerations: set of string, optional
	InstanceGenerations terra.SetValue[terra.StringValue] `hcl:"instance_generations,attr"`
	// LocalStorage: string, optional
	LocalStorage terra.StringValue `hcl:"local_storage,attr"`
	// LocalStorageTypes: set of string, optional
	LocalStorageTypes terra.SetValue[terra.StringValue] `hcl:"local_storage_types,attr"`
	// OnDemandMaxPricePercentageOverLowestPrice: number, optional
	OnDemandMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"on_demand_max_price_percentage_over_lowest_price,attr"`
	// RequireHibernateSupport: bool, optional
	RequireHibernateSupport terra.BoolValue `hcl:"require_hibernate_support,attr"`
	// SpotMaxPricePercentageOverLowestPrice: number, optional
	SpotMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"spot_max_price_percentage_over_lowest_price,attr"`
	// MixedInstancesPolicyLaunchTemplateC3678D5F: optional
	AcceleratorCount *MixedInstancesPolicyLaunchTemplateC3678D5F `hcl:"accelerator_count,block"`
	// MixedInstancesPolicyLaunchTemplate6C0Fca9B: optional
	AcceleratorTotalMemoryMib *MixedInstancesPolicyLaunchTemplate6C0Fca9B `hcl:"accelerator_total_memory_mib,block"`
	// MixedInstancesPolicyLaunchTemplate4Fae6914: optional
	BaselineEbsBandwidthMbps *MixedInstancesPolicyLaunchTemplate4Fae6914 `hcl:"baseline_ebs_bandwidth_mbps,block"`
	// MixedInstancesPolicyLaunchTemplate350Ca5Ee: optional
	MemoryGibPerVcpu *MixedInstancesPolicyLaunchTemplate350Ca5Ee `hcl:"memory_gib_per_vcpu,block"`
	// MixedInstancesPolicyLaunchTemplate63E5E570: optional
	MemoryMib *MixedInstancesPolicyLaunchTemplate63E5E570 `hcl:"memory_mib,block"`
	// MixedInstancesPolicyLaunchTemplate8C621E58: optional
	NetworkBandwidthGbps *MixedInstancesPolicyLaunchTemplate8C621E58 `hcl:"network_bandwidth_gbps,block"`
	// MixedInstancesPolicyLaunchTemplateA5F576Dc: optional
	NetworkInterfaceCount *MixedInstancesPolicyLaunchTemplateA5F576Dc `hcl:"network_interface_count,block"`
	// MixedInstancesPolicyLaunchTemplate3345B281: optional
	TotalLocalStorageGb *MixedInstancesPolicyLaunchTemplate3345B281 `hcl:"total_local_storage_gb,block"`
	// MixedInstancesPolicyLaunchTemplate106Aadb5: optional
	VcpuCount *MixedInstancesPolicyLaunchTemplate106Aadb5 `hcl:"vcpu_count,block"`
}

type MixedInstancesPolicyLaunchTemplateC3678D5F struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate6C0Fca9B struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate4Fae6914 struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate350Ca5Ee struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate63E5E570 struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate8C621E58 struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplateA5F576Dc struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate3345B281 struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate106Aadb5 struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecification struct {
	// LaunchTemplateId: string, optional
	LaunchTemplateId terra.StringValue `hcl:"launch_template_id,attr"`
	// LaunchTemplateName: string, optional
	LaunchTemplateName terra.StringValue `hcl:"launch_template_name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type Tag struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// PropagateAtLaunch: bool, required
	PropagateAtLaunch terra.BoolValue `hcl:"propagate_at_launch,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Timeouts struct {
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type TrafficSource struct {
	// Identifier: string, required
	Identifier terra.StringValue `hcl:"identifier,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type WarmPool struct {
	// MaxGroupPreparedCapacity: number, optional
	MaxGroupPreparedCapacity terra.NumberValue `hcl:"max_group_prepared_capacity,attr"`
	// MinSize: number, optional
	MinSize terra.NumberValue `hcl:"min_size,attr"`
	// PoolState: string, optional
	PoolState terra.StringValue `hcl:"pool_state,attr"`
	// WarmPoolInstanceReusePolicy: optional
	InstanceReusePolicy *WarmPoolInstanceReusePolicy `hcl:"instance_reuse_policy,block"`
}

type WarmPoolInstanceReusePolicy struct {
	// ReuseOnScaleIn: bool, optional
	ReuseOnScaleIn terra.BoolValue `hcl:"reuse_on_scale_in,attr"`
}

type InitialLifecycleHookAttributes struct {
	ref terra.Reference
}

func (ilh InitialLifecycleHookAttributes) InternalRef() (terra.Reference, error) {
	return ilh.ref, nil
}

func (ilh InitialLifecycleHookAttributes) InternalWithRef(ref terra.Reference) InitialLifecycleHookAttributes {
	return InitialLifecycleHookAttributes{ref: ref}
}

func (ilh InitialLifecycleHookAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ilh.ref.InternalTokens()
}

func (ilh InitialLifecycleHookAttributes) DefaultResult() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("default_result"))
}

func (ilh InitialLifecycleHookAttributes) HeartbeatTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(ilh.ref.Append("heartbeat_timeout"))
}

func (ilh InitialLifecycleHookAttributes) LifecycleTransition() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("lifecycle_transition"))
}

func (ilh InitialLifecycleHookAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("name"))
}

func (ilh InitialLifecycleHookAttributes) NotificationMetadata() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("notification_metadata"))
}

func (ilh InitialLifecycleHookAttributes) NotificationTargetArn() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("notification_target_arn"))
}

func (ilh InitialLifecycleHookAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("role_arn"))
}

type InstanceMaintenancePolicyAttributes struct {
	ref terra.Reference
}

func (imp InstanceMaintenancePolicyAttributes) InternalRef() (terra.Reference, error) {
	return imp.ref, nil
}

func (imp InstanceMaintenancePolicyAttributes) InternalWithRef(ref terra.Reference) InstanceMaintenancePolicyAttributes {
	return InstanceMaintenancePolicyAttributes{ref: ref}
}

func (imp InstanceMaintenancePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return imp.ref.InternalTokens()
}

func (imp InstanceMaintenancePolicyAttributes) MaxHealthyPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(imp.ref.Append("max_healthy_percentage"))
}

func (imp InstanceMaintenancePolicyAttributes) MinHealthyPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(imp.ref.Append("min_healthy_percentage"))
}

type InstanceRefreshAttributes struct {
	ref terra.Reference
}

func (ir InstanceRefreshAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir InstanceRefreshAttributes) InternalWithRef(ref terra.Reference) InstanceRefreshAttributes {
	return InstanceRefreshAttributes{ref: ref}
}

func (ir InstanceRefreshAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir InstanceRefreshAttributes) Strategy() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("strategy"))
}

func (ir InstanceRefreshAttributes) Triggers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("triggers"))
}

func (ir InstanceRefreshAttributes) Preferences() terra.ListValue[InstanceRefreshPreferencesAttributes] {
	return terra.ReferenceAsList[InstanceRefreshPreferencesAttributes](ir.ref.Append("preferences"))
}

type InstanceRefreshPreferencesAttributes struct {
	ref terra.Reference
}

func (p InstanceRefreshPreferencesAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p InstanceRefreshPreferencesAttributes) InternalWithRef(ref terra.Reference) InstanceRefreshPreferencesAttributes {
	return InstanceRefreshPreferencesAttributes{ref: ref}
}

func (p InstanceRefreshPreferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p InstanceRefreshPreferencesAttributes) AutoRollback() terra.BoolValue {
	return terra.ReferenceAsBool(p.ref.Append("auto_rollback"))
}

func (p InstanceRefreshPreferencesAttributes) CheckpointDelay() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("checkpoint_delay"))
}

func (p InstanceRefreshPreferencesAttributes) CheckpointPercentages() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](p.ref.Append("checkpoint_percentages"))
}

func (p InstanceRefreshPreferencesAttributes) InstanceWarmup() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("instance_warmup"))
}

func (p InstanceRefreshPreferencesAttributes) MaxHealthyPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("max_healthy_percentage"))
}

func (p InstanceRefreshPreferencesAttributes) MinHealthyPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("min_healthy_percentage"))
}

func (p InstanceRefreshPreferencesAttributes) ScaleInProtectedInstances() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("scale_in_protected_instances"))
}

func (p InstanceRefreshPreferencesAttributes) SkipMatching() terra.BoolValue {
	return terra.ReferenceAsBool(p.ref.Append("skip_matching"))
}

func (p InstanceRefreshPreferencesAttributes) StandbyInstances() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("standby_instances"))
}

type LaunchTemplateAttributes struct {
	ref terra.Reference
}

func (lt LaunchTemplateAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt LaunchTemplateAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateAttributes {
	return LaunchTemplateAttributes{ref: ref}
}

func (lt LaunchTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt LaunchTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt LaunchTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

func (lt LaunchTemplateAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("version"))
}

type MixedInstancesPolicyAttributes struct {
	ref terra.Reference
}

func (mip MixedInstancesPolicyAttributes) InternalRef() (terra.Reference, error) {
	return mip.ref, nil
}

func (mip MixedInstancesPolicyAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyAttributes {
	return MixedInstancesPolicyAttributes{ref: ref}
}

func (mip MixedInstancesPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mip.ref.InternalTokens()
}

func (mip MixedInstancesPolicyAttributes) InstancesDistribution() terra.ListValue[MixedInstancesPolicyInstancesDistributionAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyInstancesDistributionAttributes](mip.ref.Append("instances_distribution"))
}

func (mip MixedInstancesPolicyAttributes) LaunchTemplate() terra.ListValue[MixedInstancesPolicyLaunchTemplateAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateAttributes](mip.ref.Append("launch_template"))
}

type MixedInstancesPolicyInstancesDistributionAttributes struct {
	ref terra.Reference
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) InternalRef() (terra.Reference, error) {
	return id.ref, nil
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyInstancesDistributionAttributes {
	return MixedInstancesPolicyInstancesDistributionAttributes{ref: ref}
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return id.ref.InternalTokens()
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) OnDemandAllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("on_demand_allocation_strategy"))
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) OnDemandBaseCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("on_demand_base_capacity"))
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) OnDemandPercentageAboveBaseCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("on_demand_percentage_above_base_capacity"))
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) SpotAllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("spot_allocation_strategy"))
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) SpotInstancePools() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("spot_instance_pools"))
}

func (id MixedInstancesPolicyInstancesDistributionAttributes) SpotMaxPrice() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("spot_max_price"))
}

type MixedInstancesPolicyLaunchTemplateAttributes struct {
	ref terra.Reference
}

func (lt MixedInstancesPolicyLaunchTemplateAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt MixedInstancesPolicyLaunchTemplateAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateAttributes {
	return MixedInstancesPolicyLaunchTemplateAttributes{ref: ref}
}

func (lt MixedInstancesPolicyLaunchTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt MixedInstancesPolicyLaunchTemplateAttributes) LaunchTemplateSpecification() terra.ListValue[MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes](lt.ref.Append("launch_template_specification"))
}

func (lt MixedInstancesPolicyLaunchTemplateAttributes) Override() terra.ListValue[MixedInstancesPolicyLaunchTemplateOverrideAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateOverrideAttributes](lt.ref.Append("override"))
}

type MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes {
	return MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) LaunchTemplateId() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_id"))
}

func (lts MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) LaunchTemplateName() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_name"))
}

func (lts MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type MixedInstancesPolicyLaunchTemplateOverrideAttributes struct {
	ref terra.Reference
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateOverrideAttributes {
	return MixedInstancesPolicyLaunchTemplateOverrideAttributes{ref: ref}
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("instance_type"))
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) WeightedCapacity() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("weighted_capacity"))
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) InstanceRequirements() terra.ListValue[MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes](o.ref.Append("instance_requirements"))
}

func (o MixedInstancesPolicyLaunchTemplateOverrideAttributes) LaunchTemplateSpecification() terra.ListValue[MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes](o.ref.Append("launch_template_specification"))
}

type MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes {
	return MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes{ref: ref}
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[MixedInstancesPolicyLaunchTemplateC3678D5FAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateC3678D5FAttributes](ir.ref.Append("accelerator_count"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[MixedInstancesPolicyLaunchTemplate4Fae6914Attributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate4Fae6914Attributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) MemoryMib() terra.ListValue[MixedInstancesPolicyLaunchTemplate63E5E570Attributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate63E5E570Attributes](ir.ref.Append("memory_mib"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[MixedInstancesPolicyLaunchTemplate8C621E58Attributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate8C621E58Attributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[MixedInstancesPolicyLaunchTemplateA5F576DcAttributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplateA5F576DcAttributes](ir.ref.Append("network_interface_count"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[MixedInstancesPolicyLaunchTemplate3345B281Attributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate3345B281Attributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) VcpuCount() terra.ListValue[MixedInstancesPolicyLaunchTemplate106Aadb5Attributes] {
	return terra.ReferenceAsList[MixedInstancesPolicyLaunchTemplate106Aadb5Attributes](ir.ref.Append("vcpu_count"))
}

type MixedInstancesPolicyLaunchTemplateC3678D5FAttributes struct {
	ref terra.Reference
}

func (ac MixedInstancesPolicyLaunchTemplateC3678D5FAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac MixedInstancesPolicyLaunchTemplateC3678D5FAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateC3678D5FAttributes {
	return MixedInstancesPolicyLaunchTemplateC3678D5FAttributes{ref: ref}
}

func (ac MixedInstancesPolicyLaunchTemplateC3678D5FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac MixedInstancesPolicyLaunchTemplateC3678D5FAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac MixedInstancesPolicyLaunchTemplateC3678D5FAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes struct {
	ref terra.Reference
}

func (atmm MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes {
	return MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes{ref: ref}
}

func (atmm MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm MixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate4Fae6914Attributes struct {
	ref terra.Reference
}

func (bebm MixedInstancesPolicyLaunchTemplate4Fae6914Attributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm MixedInstancesPolicyLaunchTemplate4Fae6914Attributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate4Fae6914Attributes {
	return MixedInstancesPolicyLaunchTemplate4Fae6914Attributes{ref: ref}
}

func (bebm MixedInstancesPolicyLaunchTemplate4Fae6914Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm MixedInstancesPolicyLaunchTemplate4Fae6914Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm MixedInstancesPolicyLaunchTemplate4Fae6914Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes struct {
	ref terra.Reference
}

func (mgpv MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes {
	return MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes{ref: ref}
}

func (mgpv MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv MixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate63E5E570Attributes struct {
	ref terra.Reference
}

func (mm MixedInstancesPolicyLaunchTemplate63E5E570Attributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm MixedInstancesPolicyLaunchTemplate63E5E570Attributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate63E5E570Attributes {
	return MixedInstancesPolicyLaunchTemplate63E5E570Attributes{ref: ref}
}

func (mm MixedInstancesPolicyLaunchTemplate63E5E570Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm MixedInstancesPolicyLaunchTemplate63E5E570Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm MixedInstancesPolicyLaunchTemplate63E5E570Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate8C621E58Attributes struct {
	ref terra.Reference
}

func (nbg MixedInstancesPolicyLaunchTemplate8C621E58Attributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg MixedInstancesPolicyLaunchTemplate8C621E58Attributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate8C621E58Attributes {
	return MixedInstancesPolicyLaunchTemplate8C621E58Attributes{ref: ref}
}

func (nbg MixedInstancesPolicyLaunchTemplate8C621E58Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg MixedInstancesPolicyLaunchTemplate8C621E58Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg MixedInstancesPolicyLaunchTemplate8C621E58Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplateA5F576DcAttributes struct {
	ref terra.Reference
}

func (nic MixedInstancesPolicyLaunchTemplateA5F576DcAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic MixedInstancesPolicyLaunchTemplateA5F576DcAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateA5F576DcAttributes {
	return MixedInstancesPolicyLaunchTemplateA5F576DcAttributes{ref: ref}
}

func (nic MixedInstancesPolicyLaunchTemplateA5F576DcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic MixedInstancesPolicyLaunchTemplateA5F576DcAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic MixedInstancesPolicyLaunchTemplateA5F576DcAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate3345B281Attributes struct {
	ref terra.Reference
}

func (tlsg MixedInstancesPolicyLaunchTemplate3345B281Attributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg MixedInstancesPolicyLaunchTemplate3345B281Attributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate3345B281Attributes {
	return MixedInstancesPolicyLaunchTemplate3345B281Attributes{ref: ref}
}

func (tlsg MixedInstancesPolicyLaunchTemplate3345B281Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg MixedInstancesPolicyLaunchTemplate3345B281Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg MixedInstancesPolicyLaunchTemplate3345B281Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplate106Aadb5Attributes struct {
	ref terra.Reference
}

func (vc MixedInstancesPolicyLaunchTemplate106Aadb5Attributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc MixedInstancesPolicyLaunchTemplate106Aadb5Attributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplate106Aadb5Attributes {
	return MixedInstancesPolicyLaunchTemplate106Aadb5Attributes{ref: ref}
}

func (vc MixedInstancesPolicyLaunchTemplate106Aadb5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc MixedInstancesPolicyLaunchTemplate106Aadb5Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc MixedInstancesPolicyLaunchTemplate106Aadb5Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes {
	return MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) LaunchTemplateId() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_id"))
}

func (lts MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) LaunchTemplateName() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_name"))
}

func (lts MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type TagAttributes struct {
	ref terra.Reference
}

func (t TagAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TagAttributes) InternalWithRef(ref terra.Reference) TagAttributes {
	return TagAttributes{ref: ref}
}

func (t TagAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TagAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t TagAttributes) PropagateAtLaunch() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("propagate_at_launch"))
}

func (t TagAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TrafficSourceAttributes struct {
	ref terra.Reference
}

func (ts TrafficSourceAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts TrafficSourceAttributes) InternalWithRef(ref terra.Reference) TrafficSourceAttributes {
	return TrafficSourceAttributes{ref: ref}
}

func (ts TrafficSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts TrafficSourceAttributes) Identifier() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("identifier"))
}

func (ts TrafficSourceAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("type"))
}

type WarmPoolAttributes struct {
	ref terra.Reference
}

func (wp WarmPoolAttributes) InternalRef() (terra.Reference, error) {
	return wp.ref, nil
}

func (wp WarmPoolAttributes) InternalWithRef(ref terra.Reference) WarmPoolAttributes {
	return WarmPoolAttributes{ref: ref}
}

func (wp WarmPoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wp.ref.InternalTokens()
}

func (wp WarmPoolAttributes) MaxGroupPreparedCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("max_group_prepared_capacity"))
}

func (wp WarmPoolAttributes) MinSize() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("min_size"))
}

func (wp WarmPoolAttributes) PoolState() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("pool_state"))
}

func (wp WarmPoolAttributes) InstanceReusePolicy() terra.ListValue[WarmPoolInstanceReusePolicyAttributes] {
	return terra.ReferenceAsList[WarmPoolInstanceReusePolicyAttributes](wp.ref.Append("instance_reuse_policy"))
}

type WarmPoolInstanceReusePolicyAttributes struct {
	ref terra.Reference
}

func (irp WarmPoolInstanceReusePolicyAttributes) InternalRef() (terra.Reference, error) {
	return irp.ref, nil
}

func (irp WarmPoolInstanceReusePolicyAttributes) InternalWithRef(ref terra.Reference) WarmPoolInstanceReusePolicyAttributes {
	return WarmPoolInstanceReusePolicyAttributes{ref: ref}
}

func (irp WarmPoolInstanceReusePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return irp.ref.InternalTokens()
}

func (irp WarmPoolInstanceReusePolicyAttributes) ReuseOnScaleIn() terra.BoolValue {
	return terra.ReferenceAsBool(irp.ref.Append("reuse_on_scale_in"))
}

type InitialLifecycleHookState struct {
	DefaultResult         string  `json:"default_result"`
	HeartbeatTimeout      float64 `json:"heartbeat_timeout"`
	LifecycleTransition   string  `json:"lifecycle_transition"`
	Name                  string  `json:"name"`
	NotificationMetadata  string  `json:"notification_metadata"`
	NotificationTargetArn string  `json:"notification_target_arn"`
	RoleArn               string  `json:"role_arn"`
}

type InstanceMaintenancePolicyState struct {
	MaxHealthyPercentage float64 `json:"max_healthy_percentage"`
	MinHealthyPercentage float64 `json:"min_healthy_percentage"`
}

type InstanceRefreshState struct {
	Strategy    string                            `json:"strategy"`
	Triggers    []string                          `json:"triggers"`
	Preferences []InstanceRefreshPreferencesState `json:"preferences"`
}

type InstanceRefreshPreferencesState struct {
	AutoRollback              bool      `json:"auto_rollback"`
	CheckpointDelay           string    `json:"checkpoint_delay"`
	CheckpointPercentages     []float64 `json:"checkpoint_percentages"`
	InstanceWarmup            string    `json:"instance_warmup"`
	MaxHealthyPercentage      float64   `json:"max_healthy_percentage"`
	MinHealthyPercentage      float64   `json:"min_healthy_percentage"`
	ScaleInProtectedInstances string    `json:"scale_in_protected_instances"`
	SkipMatching              bool      `json:"skip_matching"`
	StandbyInstances          string    `json:"standby_instances"`
}

type LaunchTemplateState struct {
	Id      string `json:"id"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type MixedInstancesPolicyState struct {
	InstancesDistribution []MixedInstancesPolicyInstancesDistributionState `json:"instances_distribution"`
	LaunchTemplate        []MixedInstancesPolicyLaunchTemplateState        `json:"launch_template"`
}

type MixedInstancesPolicyInstancesDistributionState struct {
	OnDemandAllocationStrategy          string  `json:"on_demand_allocation_strategy"`
	OnDemandBaseCapacity                float64 `json:"on_demand_base_capacity"`
	OnDemandPercentageAboveBaseCapacity float64 `json:"on_demand_percentage_above_base_capacity"`
	SpotAllocationStrategy              string  `json:"spot_allocation_strategy"`
	SpotInstancePools                   float64 `json:"spot_instance_pools"`
	SpotMaxPrice                        string  `json:"spot_max_price"`
}

type MixedInstancesPolicyLaunchTemplateState struct {
	LaunchTemplateSpecification []MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationState `json:"launch_template_specification"`
	Override                    []MixedInstancesPolicyLaunchTemplateOverrideState                    `json:"override"`
}

type MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationState struct {
	LaunchTemplateId   string `json:"launch_template_id"`
	LaunchTemplateName string `json:"launch_template_name"`
	Version            string `json:"version"`
}

type MixedInstancesPolicyLaunchTemplateOverrideState struct {
	InstanceType                string                                                                       `json:"instance_type"`
	WeightedCapacity            string                                                                       `json:"weighted_capacity"`
	InstanceRequirements        []MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsState        `json:"instance_requirements"`
	LaunchTemplateSpecification []MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationState `json:"launch_template_specification"`
}

type MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                          `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                          `json:"accelerator_names"`
	AcceleratorTypes                          []string                                          `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                          `json:"allowed_instance_types"`
	BareMetal                                 string                                            `json:"bare_metal"`
	BurstablePerformance                      string                                            `json:"burstable_performance"`
	CpuManufacturers                          []string                                          `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                          `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                          `json:"instance_generations"`
	LocalStorage                              string                                            `json:"local_storage"`
	LocalStorageTypes                         []string                                          `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                           `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                              `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                           `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []MixedInstancesPolicyLaunchTemplateC3678D5FState `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []MixedInstancesPolicyLaunchTemplate6C0Fca9BState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []MixedInstancesPolicyLaunchTemplate4Fae6914State `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []MixedInstancesPolicyLaunchTemplate350Ca5EeState `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []MixedInstancesPolicyLaunchTemplate63E5E570State `json:"memory_mib"`
	NetworkBandwidthGbps                      []MixedInstancesPolicyLaunchTemplate8C621E58State `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []MixedInstancesPolicyLaunchTemplateA5F576DcState `json:"network_interface_count"`
	TotalLocalStorageGb                       []MixedInstancesPolicyLaunchTemplate3345B281State `json:"total_local_storage_gb"`
	VcpuCount                                 []MixedInstancesPolicyLaunchTemplate106Aadb5State `json:"vcpu_count"`
}

type MixedInstancesPolicyLaunchTemplateC3678D5FState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate6C0Fca9BState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate4Fae6914State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate350Ca5EeState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate63E5E570State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate8C621E58State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplateA5F576DcState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate3345B281State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate106Aadb5State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationState struct {
	LaunchTemplateId   string `json:"launch_template_id"`
	LaunchTemplateName string `json:"launch_template_name"`
	Version            string `json:"version"`
}

type TagState struct {
	Key               string `json:"key"`
	PropagateAtLaunch bool   `json:"propagate_at_launch"`
	Value             string `json:"value"`
}

type TimeoutsState struct {
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type TrafficSourceState struct {
	Identifier string `json:"identifier"`
	Type       string `json:"type"`
}

type WarmPoolState struct {
	MaxGroupPreparedCapacity float64                            `json:"max_group_prepared_capacity"`
	MinSize                  float64                            `json:"min_size"`
	PoolState                string                             `json:"pool_state"`
	InstanceReusePolicy      []WarmPoolInstanceReusePolicyState `json:"instance_reuse_policy"`
}

type WarmPoolInstanceReusePolicyState struct {
	ReuseOnScaleIn bool `json:"reuse_on_scale_in"`
}
