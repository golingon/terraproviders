// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_devopsguru_service_integration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_devopsguru_service_integration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsDevopsguruServiceIntegrationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adsi *Resource) Type() string {
	return "aws_devopsguru_service_integration"
}

// LocalName returns the local name for [Resource].
func (adsi *Resource) LocalName() string {
	return adsi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adsi *Resource) Configuration() interface{} {
	return adsi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adsi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adsi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adsi *Resource) Dependencies() terra.Dependencies {
	return adsi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adsi *Resource) LifecycleManagement() *terra.Lifecycle {
	return adsi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adsi *Resource) Attributes() awsDevopsguruServiceIntegrationAttributes {
	return awsDevopsguruServiceIntegrationAttributes{ref: terra.ReferenceResource(adsi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adsi *Resource) ImportState(state io.Reader) error {
	adsi.state = &awsDevopsguruServiceIntegrationState{}
	if err := json.NewDecoder(state).Decode(adsi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adsi.Type(), adsi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adsi *Resource) State() (*awsDevopsguruServiceIntegrationState, bool) {
	return adsi.state, adsi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adsi *Resource) StateMust() *awsDevopsguruServiceIntegrationState {
	if adsi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adsi.Type(), adsi.LocalName()))
	}
	return adsi.state
}

// Args contains the configurations for aws_devopsguru_service_integration.
type Args struct {
	// KmsServerSideEncryption: min=0
	KmsServerSideEncryption []KmsServerSideEncryption `hcl:"kms_server_side_encryption,block" validate:"min=0"`
	// LogsAnomalyDetection: min=0
	LogsAnomalyDetection []LogsAnomalyDetection `hcl:"logs_anomaly_detection,block" validate:"min=0"`
	// OpsCenter: min=0
	OpsCenter []OpsCenter `hcl:"ops_center,block" validate:"min=0"`
}

type awsDevopsguruServiceIntegrationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_devopsguru_service_integration.
func (adsi awsDevopsguruServiceIntegrationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adsi.ref.Append("id"))
}

func (adsi awsDevopsguruServiceIntegrationAttributes) KmsServerSideEncryption() terra.ListValue[KmsServerSideEncryptionAttributes] {
	return terra.ReferenceAsList[KmsServerSideEncryptionAttributes](adsi.ref.Append("kms_server_side_encryption"))
}

func (adsi awsDevopsguruServiceIntegrationAttributes) LogsAnomalyDetection() terra.ListValue[LogsAnomalyDetectionAttributes] {
	return terra.ReferenceAsList[LogsAnomalyDetectionAttributes](adsi.ref.Append("logs_anomaly_detection"))
}

func (adsi awsDevopsguruServiceIntegrationAttributes) OpsCenter() terra.ListValue[OpsCenterAttributes] {
	return terra.ReferenceAsList[OpsCenterAttributes](adsi.ref.Append("ops_center"))
}

type awsDevopsguruServiceIntegrationState struct {
	Id                      string                         `json:"id"`
	KmsServerSideEncryption []KmsServerSideEncryptionState `json:"kms_server_side_encryption"`
	LogsAnomalyDetection    []LogsAnomalyDetectionState    `json:"logs_anomaly_detection"`
	OpsCenter               []OpsCenterState               `json:"ops_center"`
}
