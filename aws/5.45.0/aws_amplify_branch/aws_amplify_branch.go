// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_amplify_branch

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_amplify_branch.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAmplifyBranchState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aab *Resource) Type() string {
	return "aws_amplify_branch"
}

// LocalName returns the local name for [Resource].
func (aab *Resource) LocalName() string {
	return aab.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aab *Resource) Configuration() interface{} {
	return aab.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aab *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aab)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aab *Resource) Dependencies() terra.Dependencies {
	return aab.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aab *Resource) LifecycleManagement() *terra.Lifecycle {
	return aab.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aab *Resource) Attributes() awsAmplifyBranchAttributes {
	return awsAmplifyBranchAttributes{ref: terra.ReferenceResource(aab)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aab *Resource) ImportState(state io.Reader) error {
	aab.state = &awsAmplifyBranchState{}
	if err := json.NewDecoder(state).Decode(aab.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aab.Type(), aab.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aab *Resource) State() (*awsAmplifyBranchState, bool) {
	return aab.state, aab.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aab *Resource) StateMust() *awsAmplifyBranchState {
	if aab.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aab.Type(), aab.LocalName()))
	}
	return aab.state
}

// Args contains the configurations for aws_amplify_branch.
type Args struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// BackendEnvironmentArn: string, optional
	BackendEnvironmentArn terra.StringValue `hcl:"backend_environment_arn,attr"`
	// BasicAuthCredentials: string, optional
	BasicAuthCredentials terra.StringValue `hcl:"basic_auth_credentials,attr"`
	// BranchName: string, required
	BranchName terra.StringValue `hcl:"branch_name,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// EnableAutoBuild: bool, optional
	EnableAutoBuild terra.BoolValue `hcl:"enable_auto_build,attr"`
	// EnableBasicAuth: bool, optional
	EnableBasicAuth terra.BoolValue `hcl:"enable_basic_auth,attr"`
	// EnableNotification: bool, optional
	EnableNotification terra.BoolValue `hcl:"enable_notification,attr"`
	// EnablePerformanceMode: bool, optional
	EnablePerformanceMode terra.BoolValue `hcl:"enable_performance_mode,attr"`
	// EnablePullRequestPreview: bool, optional
	EnablePullRequestPreview terra.BoolValue `hcl:"enable_pull_request_preview,attr"`
	// EnvironmentVariables: map of string, optional
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// Framework: string, optional
	Framework terra.StringValue `hcl:"framework,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PullRequestEnvironmentName: string, optional
	PullRequestEnvironmentName terra.StringValue `hcl:"pull_request_environment_name,attr"`
	// Stage: string, optional
	Stage terra.StringValue `hcl:"stage,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Ttl: string, optional
	Ttl terra.StringValue `hcl:"ttl,attr"`
}

type awsAmplifyBranchAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("app_id"))
}

// Arn returns a reference to field arn of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("arn"))
}

// AssociatedResources returns a reference to field associated_resources of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) AssociatedResources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aab.ref.Append("associated_resources"))
}

// BackendEnvironmentArn returns a reference to field backend_environment_arn of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) BackendEnvironmentArn() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("backend_environment_arn"))
}

// BasicAuthCredentials returns a reference to field basic_auth_credentials of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) BasicAuthCredentials() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("basic_auth_credentials"))
}

// BranchName returns a reference to field branch_name of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) BranchName() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("branch_name"))
}

// CustomDomains returns a reference to field custom_domains of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) CustomDomains() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aab.ref.Append("custom_domains"))
}

// Description returns a reference to field description of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("description"))
}

// DestinationBranch returns a reference to field destination_branch of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) DestinationBranch() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("destination_branch"))
}

// DisplayName returns a reference to field display_name of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("display_name"))
}

// EnableAutoBuild returns a reference to field enable_auto_build of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) EnableAutoBuild() terra.BoolValue {
	return terra.ReferenceAsBool(aab.ref.Append("enable_auto_build"))
}

// EnableBasicAuth returns a reference to field enable_basic_auth of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) EnableBasicAuth() terra.BoolValue {
	return terra.ReferenceAsBool(aab.ref.Append("enable_basic_auth"))
}

// EnableNotification returns a reference to field enable_notification of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) EnableNotification() terra.BoolValue {
	return terra.ReferenceAsBool(aab.ref.Append("enable_notification"))
}

// EnablePerformanceMode returns a reference to field enable_performance_mode of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) EnablePerformanceMode() terra.BoolValue {
	return terra.ReferenceAsBool(aab.ref.Append("enable_performance_mode"))
}

// EnablePullRequestPreview returns a reference to field enable_pull_request_preview of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) EnablePullRequestPreview() terra.BoolValue {
	return terra.ReferenceAsBool(aab.ref.Append("enable_pull_request_preview"))
}

// EnvironmentVariables returns a reference to field environment_variables of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aab.ref.Append("environment_variables"))
}

// Framework returns a reference to field framework of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Framework() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("framework"))
}

// Id returns a reference to field id of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("id"))
}

// PullRequestEnvironmentName returns a reference to field pull_request_environment_name of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) PullRequestEnvironmentName() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("pull_request_environment_name"))
}

// SourceBranch returns a reference to field source_branch of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) SourceBranch() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("source_branch"))
}

// Stage returns a reference to field stage of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Stage() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("stage"))
}

// Tags returns a reference to field tags of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aab.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aab.ref.Append("tags_all"))
}

// Ttl returns a reference to field ttl of aws_amplify_branch.
func (aab awsAmplifyBranchAttributes) Ttl() terra.StringValue {
	return terra.ReferenceAsString(aab.ref.Append("ttl"))
}

type awsAmplifyBranchState struct {
	AppId                      string            `json:"app_id"`
	Arn                        string            `json:"arn"`
	AssociatedResources        []string          `json:"associated_resources"`
	BackendEnvironmentArn      string            `json:"backend_environment_arn"`
	BasicAuthCredentials       string            `json:"basic_auth_credentials"`
	BranchName                 string            `json:"branch_name"`
	CustomDomains              []string          `json:"custom_domains"`
	Description                string            `json:"description"`
	DestinationBranch          string            `json:"destination_branch"`
	DisplayName                string            `json:"display_name"`
	EnableAutoBuild            bool              `json:"enable_auto_build"`
	EnableBasicAuth            bool              `json:"enable_basic_auth"`
	EnableNotification         bool              `json:"enable_notification"`
	EnablePerformanceMode      bool              `json:"enable_performance_mode"`
	EnablePullRequestPreview   bool              `json:"enable_pull_request_preview"`
	EnvironmentVariables       map[string]string `json:"environment_variables"`
	Framework                  string            `json:"framework"`
	Id                         string            `json:"id"`
	PullRequestEnvironmentName string            `json:"pull_request_environment_name"`
	SourceBranch               string            `json:"source_branch"`
	Stage                      string            `json:"stage"`
	Tags                       map[string]string `json:"tags"`
	TagsAll                    map[string]string `json:"tags_all"`
	Ttl                        string            `json:"ttl"`
}
