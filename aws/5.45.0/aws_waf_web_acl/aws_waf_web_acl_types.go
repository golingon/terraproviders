// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_waf_web_acl

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DefaultAction struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type LoggingConfiguration struct {
	// LogDestination: string, required
	LogDestination terra.StringValue `hcl:"log_destination,attr" validate:"required"`
	// LoggingConfigurationRedactedFields: optional
	RedactedFields *LoggingConfigurationRedactedFields `hcl:"redacted_fields,block"`
}

type LoggingConfigurationRedactedFields struct {
	// LoggingConfigurationRedactedFieldsFieldToMatch: min=1
	FieldToMatch []LoggingConfigurationRedactedFieldsFieldToMatch `hcl:"field_to_match,block" validate:"min=1"`
}

type LoggingConfigurationRedactedFieldsFieldToMatch struct {
	// Data: string, optional
	Data terra.StringValue `hcl:"data,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Rules struct {
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// RuleId: string, required
	RuleId terra.StringValue `hcl:"rule_id,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// RulesAction: optional
	Action *RulesAction `hcl:"action,block"`
	// RulesOverrideAction: optional
	OverrideAction *RulesOverrideAction `hcl:"override_action,block"`
}

type RulesAction struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type RulesOverrideAction struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type DefaultActionAttributes struct {
	ref terra.Reference
}

func (da DefaultActionAttributes) InternalRef() (terra.Reference, error) {
	return da.ref, nil
}

func (da DefaultActionAttributes) InternalWithRef(ref terra.Reference) DefaultActionAttributes {
	return DefaultActionAttributes{ref: ref}
}

func (da DefaultActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return da.ref.InternalTokens()
}

func (da DefaultActionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(da.ref.Append("type"))
}

type LoggingConfigurationAttributes struct {
	ref terra.Reference
}

func (lc LoggingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc LoggingConfigurationAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationAttributes {
	return LoggingConfigurationAttributes{ref: ref}
}

func (lc LoggingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc LoggingConfigurationAttributes) LogDestination() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("log_destination"))
}

func (lc LoggingConfigurationAttributes) RedactedFields() terra.ListValue[LoggingConfigurationRedactedFieldsAttributes] {
	return terra.ReferenceAsList[LoggingConfigurationRedactedFieldsAttributes](lc.ref.Append("redacted_fields"))
}

type LoggingConfigurationRedactedFieldsAttributes struct {
	ref terra.Reference
}

func (rf LoggingConfigurationRedactedFieldsAttributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf LoggingConfigurationRedactedFieldsAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationRedactedFieldsAttributes {
	return LoggingConfigurationRedactedFieldsAttributes{ref: ref}
}

func (rf LoggingConfigurationRedactedFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf LoggingConfigurationRedactedFieldsAttributes) FieldToMatch() terra.SetValue[LoggingConfigurationRedactedFieldsFieldToMatchAttributes] {
	return terra.ReferenceAsSet[LoggingConfigurationRedactedFieldsFieldToMatchAttributes](rf.ref.Append("field_to_match"))
}

type LoggingConfigurationRedactedFieldsFieldToMatchAttributes struct {
	ref terra.Reference
}

func (ftm LoggingConfigurationRedactedFieldsFieldToMatchAttributes) InternalRef() (terra.Reference, error) {
	return ftm.ref, nil
}

func (ftm LoggingConfigurationRedactedFieldsFieldToMatchAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationRedactedFieldsFieldToMatchAttributes {
	return LoggingConfigurationRedactedFieldsFieldToMatchAttributes{ref: ref}
}

func (ftm LoggingConfigurationRedactedFieldsFieldToMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ftm.ref.InternalTokens()
}

func (ftm LoggingConfigurationRedactedFieldsFieldToMatchAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("data"))
}

func (ftm LoggingConfigurationRedactedFieldsFieldToMatchAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("type"))
}

type RulesAttributes struct {
	ref terra.Reference
}

func (r RulesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RulesAttributes) InternalWithRef(ref terra.Reference) RulesAttributes {
	return RulesAttributes{ref: ref}
}

func (r RulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RulesAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("priority"))
}

func (r RulesAttributes) RuleId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("rule_id"))
}

func (r RulesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("type"))
}

func (r RulesAttributes) Action() terra.ListValue[RulesActionAttributes] {
	return terra.ReferenceAsList[RulesActionAttributes](r.ref.Append("action"))
}

func (r RulesAttributes) OverrideAction() terra.ListValue[RulesOverrideActionAttributes] {
	return terra.ReferenceAsList[RulesOverrideActionAttributes](r.ref.Append("override_action"))
}

type RulesActionAttributes struct {
	ref terra.Reference
}

func (a RulesActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a RulesActionAttributes) InternalWithRef(ref terra.Reference) RulesActionAttributes {
	return RulesActionAttributes{ref: ref}
}

func (a RulesActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a RulesActionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

type RulesOverrideActionAttributes struct {
	ref terra.Reference
}

func (oa RulesOverrideActionAttributes) InternalRef() (terra.Reference, error) {
	return oa.ref, nil
}

func (oa RulesOverrideActionAttributes) InternalWithRef(ref terra.Reference) RulesOverrideActionAttributes {
	return RulesOverrideActionAttributes{ref: ref}
}

func (oa RulesOverrideActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oa.ref.InternalTokens()
}

func (oa RulesOverrideActionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("type"))
}

type DefaultActionState struct {
	Type string `json:"type"`
}

type LoggingConfigurationState struct {
	LogDestination string                                    `json:"log_destination"`
	RedactedFields []LoggingConfigurationRedactedFieldsState `json:"redacted_fields"`
}

type LoggingConfigurationRedactedFieldsState struct {
	FieldToMatch []LoggingConfigurationRedactedFieldsFieldToMatchState `json:"field_to_match"`
}

type LoggingConfigurationRedactedFieldsFieldToMatchState struct {
	Data string `json:"data"`
	Type string `json:"type"`
}

type RulesState struct {
	Priority       float64                    `json:"priority"`
	RuleId         string                     `json:"rule_id"`
	Type           string                     `json:"type"`
	Action         []RulesActionState         `json:"action"`
	OverrideAction []RulesOverrideActionState `json:"override_action"`
}

type RulesActionState struct {
	Type string `json:"type"`
}

type RulesOverrideActionState struct {
	Type string `json:"type"`
}
