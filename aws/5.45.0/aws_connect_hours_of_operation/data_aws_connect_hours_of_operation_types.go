// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_hours_of_operation

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataConfigAttributes struct {
	ref terra.Reference
}

func (c DataConfigAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataConfigAttributes) InternalWithRef(ref terra.Reference) DataConfigAttributes {
	return DataConfigAttributes{ref: ref}
}

func (c DataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataConfigAttributes) Day() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("day"))
}

func (c DataConfigAttributes) EndTime() terra.ListValue[DataConfigEndTimeAttributes] {
	return terra.ReferenceAsList[DataConfigEndTimeAttributes](c.ref.Append("end_time"))
}

func (c DataConfigAttributes) StartTime() terra.ListValue[DataConfigStartTimeAttributes] {
	return terra.ReferenceAsList[DataConfigStartTimeAttributes](c.ref.Append("start_time"))
}

type DataConfigEndTimeAttributes struct {
	ref terra.Reference
}

func (et DataConfigEndTimeAttributes) InternalRef() (terra.Reference, error) {
	return et.ref, nil
}

func (et DataConfigEndTimeAttributes) InternalWithRef(ref terra.Reference) DataConfigEndTimeAttributes {
	return DataConfigEndTimeAttributes{ref: ref}
}

func (et DataConfigEndTimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return et.ref.InternalTokens()
}

func (et DataConfigEndTimeAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(et.ref.Append("hours"))
}

func (et DataConfigEndTimeAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(et.ref.Append("minutes"))
}

type DataConfigStartTimeAttributes struct {
	ref terra.Reference
}

func (st DataConfigStartTimeAttributes) InternalRef() (terra.Reference, error) {
	return st.ref, nil
}

func (st DataConfigStartTimeAttributes) InternalWithRef(ref terra.Reference) DataConfigStartTimeAttributes {
	return DataConfigStartTimeAttributes{ref: ref}
}

func (st DataConfigStartTimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return st.ref.InternalTokens()
}

func (st DataConfigStartTimeAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(st.ref.Append("hours"))
}

func (st DataConfigStartTimeAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(st.ref.Append("minutes"))
}

type DataConfigState struct {
	Day       string                     `json:"day"`
	EndTime   []DataConfigEndTimeState   `json:"end_time"`
	StartTime []DataConfigStartTimeState `json:"start_time"`
}

type DataConfigEndTimeState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
}

type DataConfigStartTimeState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
}
