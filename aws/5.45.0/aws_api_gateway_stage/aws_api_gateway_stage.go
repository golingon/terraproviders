// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_stage

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_api_gateway_stage.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApiGatewayStageState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aags *Resource) Type() string {
	return "aws_api_gateway_stage"
}

// LocalName returns the local name for [Resource].
func (aags *Resource) LocalName() string {
	return aags.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aags *Resource) Configuration() interface{} {
	return aags.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aags *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aags)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aags *Resource) Dependencies() terra.Dependencies {
	return aags.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aags *Resource) LifecycleManagement() *terra.Lifecycle {
	return aags.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aags *Resource) Attributes() awsApiGatewayStageAttributes {
	return awsApiGatewayStageAttributes{ref: terra.ReferenceResource(aags)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aags *Resource) ImportState(state io.Reader) error {
	aags.state = &awsApiGatewayStageState{}
	if err := json.NewDecoder(state).Decode(aags.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aags.Type(), aags.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aags *Resource) State() (*awsApiGatewayStageState, bool) {
	return aags.state, aags.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aags *Resource) StateMust() *awsApiGatewayStageState {
	if aags.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aags.Type(), aags.LocalName()))
	}
	return aags.state
}

// Args contains the configurations for aws_api_gateway_stage.
type Args struct {
	// CacheClusterEnabled: bool, optional
	CacheClusterEnabled terra.BoolValue `hcl:"cache_cluster_enabled,attr"`
	// CacheClusterSize: string, optional
	CacheClusterSize terra.StringValue `hcl:"cache_cluster_size,attr"`
	// ClientCertificateId: string, optional
	ClientCertificateId terra.StringValue `hcl:"client_certificate_id,attr"`
	// DeploymentId: string, required
	DeploymentId terra.StringValue `hcl:"deployment_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DocumentationVersion: string, optional
	DocumentationVersion terra.StringValue `hcl:"documentation_version,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// StageName: string, required
	StageName terra.StringValue `hcl:"stage_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Variables: map of string, optional
	Variables terra.MapValue[terra.StringValue] `hcl:"variables,attr"`
	// XrayTracingEnabled: bool, optional
	XrayTracingEnabled terra.BoolValue `hcl:"xray_tracing_enabled,attr"`
	// AccessLogSettings: optional
	AccessLogSettings *AccessLogSettings `hcl:"access_log_settings,block"`
	// CanarySettings: optional
	CanarySettings *CanarySettings `hcl:"canary_settings,block"`
}

type awsApiGatewayStageAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("arn"))
}

// CacheClusterEnabled returns a reference to field cache_cluster_enabled of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) CacheClusterEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aags.ref.Append("cache_cluster_enabled"))
}

// CacheClusterSize returns a reference to field cache_cluster_size of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) CacheClusterSize() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("cache_cluster_size"))
}

// ClientCertificateId returns a reference to field client_certificate_id of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) ClientCertificateId() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("client_certificate_id"))
}

// DeploymentId returns a reference to field deployment_id of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) DeploymentId() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("deployment_id"))
}

// Description returns a reference to field description of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("description"))
}

// DocumentationVersion returns a reference to field documentation_version of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) DocumentationVersion() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("documentation_version"))
}

// ExecutionArn returns a reference to field execution_arn of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) ExecutionArn() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("execution_arn"))
}

// Id returns a reference to field id of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("id"))
}

// InvokeUrl returns a reference to field invoke_url of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) InvokeUrl() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("invoke_url"))
}

// RestApiId returns a reference to field rest_api_id of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("rest_api_id"))
}

// StageName returns a reference to field stage_name of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) StageName() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("stage_name"))
}

// Tags returns a reference to field tags of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aags.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aags.ref.Append("tags_all"))
}

// Variables returns a reference to field variables of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) Variables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aags.ref.Append("variables"))
}

// WebAclArn returns a reference to field web_acl_arn of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) WebAclArn() terra.StringValue {
	return terra.ReferenceAsString(aags.ref.Append("web_acl_arn"))
}

// XrayTracingEnabled returns a reference to field xray_tracing_enabled of aws_api_gateway_stage.
func (aags awsApiGatewayStageAttributes) XrayTracingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aags.ref.Append("xray_tracing_enabled"))
}

func (aags awsApiGatewayStageAttributes) AccessLogSettings() terra.ListValue[AccessLogSettingsAttributes] {
	return terra.ReferenceAsList[AccessLogSettingsAttributes](aags.ref.Append("access_log_settings"))
}

func (aags awsApiGatewayStageAttributes) CanarySettings() terra.ListValue[CanarySettingsAttributes] {
	return terra.ReferenceAsList[CanarySettingsAttributes](aags.ref.Append("canary_settings"))
}

type awsApiGatewayStageState struct {
	Arn                  string                   `json:"arn"`
	CacheClusterEnabled  bool                     `json:"cache_cluster_enabled"`
	CacheClusterSize     string                   `json:"cache_cluster_size"`
	ClientCertificateId  string                   `json:"client_certificate_id"`
	DeploymentId         string                   `json:"deployment_id"`
	Description          string                   `json:"description"`
	DocumentationVersion string                   `json:"documentation_version"`
	ExecutionArn         string                   `json:"execution_arn"`
	Id                   string                   `json:"id"`
	InvokeUrl            string                   `json:"invoke_url"`
	RestApiId            string                   `json:"rest_api_id"`
	StageName            string                   `json:"stage_name"`
	Tags                 map[string]string        `json:"tags"`
	TagsAll              map[string]string        `json:"tags_all"`
	Variables            map[string]string        `json:"variables"`
	WebAclArn            string                   `json:"web_acl_arn"`
	XrayTracingEnabled   bool                     `json:"xray_tracing_enabled"`
	AccessLogSettings    []AccessLogSettingsState `json:"access_log_settings"`
	CanarySettings       []CanarySettingsState    `json:"canary_settings"`
}
