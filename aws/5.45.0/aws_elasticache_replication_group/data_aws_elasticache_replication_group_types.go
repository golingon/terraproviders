// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_elasticache_replication_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataLogDeliveryConfigurationAttributes struct {
	ref terra.Reference
}

func (ldc DataLogDeliveryConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ldc.ref, nil
}

func (ldc DataLogDeliveryConfigurationAttributes) InternalWithRef(ref terra.Reference) DataLogDeliveryConfigurationAttributes {
	return DataLogDeliveryConfigurationAttributes{ref: ref}
}

func (ldc DataLogDeliveryConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ldc.ref.InternalTokens()
}

func (ldc DataLogDeliveryConfigurationAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(ldc.ref.Append("destination"))
}

func (ldc DataLogDeliveryConfigurationAttributes) DestinationType() terra.StringValue {
	return terra.ReferenceAsString(ldc.ref.Append("destination_type"))
}

func (ldc DataLogDeliveryConfigurationAttributes) LogFormat() terra.StringValue {
	return terra.ReferenceAsString(ldc.ref.Append("log_format"))
}

func (ldc DataLogDeliveryConfigurationAttributes) LogType() terra.StringValue {
	return terra.ReferenceAsString(ldc.ref.Append("log_type"))
}

type DataLogDeliveryConfigurationState struct {
	Destination     string `json:"destination"`
	DestinationType string `json:"destination_type"`
	LogFormat       string `json:"log_format"`
	LogType         string `json:"log_type"`
}
