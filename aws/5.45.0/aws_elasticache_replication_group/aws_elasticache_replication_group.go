// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_elasticache_replication_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_elasticache_replication_group.
type Resource struct {
	Name      string
	Args      Args
	state     *awsElasticacheReplicationGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aerg *Resource) Type() string {
	return "aws_elasticache_replication_group"
}

// LocalName returns the local name for [Resource].
func (aerg *Resource) LocalName() string {
	return aerg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aerg *Resource) Configuration() interface{} {
	return aerg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aerg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aerg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aerg *Resource) Dependencies() terra.Dependencies {
	return aerg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aerg *Resource) LifecycleManagement() *terra.Lifecycle {
	return aerg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aerg *Resource) Attributes() awsElasticacheReplicationGroupAttributes {
	return awsElasticacheReplicationGroupAttributes{ref: terra.ReferenceResource(aerg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aerg *Resource) ImportState(state io.Reader) error {
	aerg.state = &awsElasticacheReplicationGroupState{}
	if err := json.NewDecoder(state).Decode(aerg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aerg.Type(), aerg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aerg *Resource) State() (*awsElasticacheReplicationGroupState, bool) {
	return aerg.state, aerg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aerg *Resource) StateMust() *awsElasticacheReplicationGroupState {
	if aerg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aerg.Type(), aerg.LocalName()))
	}
	return aerg.state
}

// Args contains the configurations for aws_elasticache_replication_group.
type Args struct {
	// ApplyImmediately: bool, optional
	ApplyImmediately terra.BoolValue `hcl:"apply_immediately,attr"`
	// AtRestEncryptionEnabled: bool, optional
	AtRestEncryptionEnabled terra.BoolValue `hcl:"at_rest_encryption_enabled,attr"`
	// AuthToken: string, optional
	AuthToken terra.StringValue `hcl:"auth_token,attr"`
	// AuthTokenUpdateStrategy: string, optional
	AuthTokenUpdateStrategy terra.StringValue `hcl:"auth_token_update_strategy,attr"`
	// AutoMinorVersionUpgrade: string, optional
	AutoMinorVersionUpgrade terra.StringValue `hcl:"auto_minor_version_upgrade,attr"`
	// AutomaticFailoverEnabled: bool, optional
	AutomaticFailoverEnabled terra.BoolValue `hcl:"automatic_failover_enabled,attr"`
	// DataTieringEnabled: bool, optional
	DataTieringEnabled terra.BoolValue `hcl:"data_tiering_enabled,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Engine: string, optional
	Engine terra.StringValue `hcl:"engine,attr"`
	// EngineVersion: string, optional
	EngineVersion terra.StringValue `hcl:"engine_version,attr"`
	// FinalSnapshotIdentifier: string, optional
	FinalSnapshotIdentifier terra.StringValue `hcl:"final_snapshot_identifier,attr"`
	// GlobalReplicationGroupId: string, optional
	GlobalReplicationGroupId terra.StringValue `hcl:"global_replication_group_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpDiscovery: string, optional
	IpDiscovery terra.StringValue `hcl:"ip_discovery,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// MaintenanceWindow: string, optional
	MaintenanceWindow terra.StringValue `hcl:"maintenance_window,attr"`
	// MultiAzEnabled: bool, optional
	MultiAzEnabled terra.BoolValue `hcl:"multi_az_enabled,attr"`
	// NetworkType: string, optional
	NetworkType terra.StringValue `hcl:"network_type,attr"`
	// NodeType: string, optional
	NodeType terra.StringValue `hcl:"node_type,attr"`
	// NotificationTopicArn: string, optional
	NotificationTopicArn terra.StringValue `hcl:"notification_topic_arn,attr"`
	// NumCacheClusters: number, optional
	NumCacheClusters terra.NumberValue `hcl:"num_cache_clusters,attr"`
	// NumNodeGroups: number, optional
	NumNodeGroups terra.NumberValue `hcl:"num_node_groups,attr"`
	// ParameterGroupName: string, optional
	ParameterGroupName terra.StringValue `hcl:"parameter_group_name,attr"`
	// Port: number, optional
	Port terra.NumberValue `hcl:"port,attr"`
	// PreferredCacheClusterAzs: list of string, optional
	PreferredCacheClusterAzs terra.ListValue[terra.StringValue] `hcl:"preferred_cache_cluster_azs,attr"`
	// ReplicasPerNodeGroup: number, optional
	ReplicasPerNodeGroup terra.NumberValue `hcl:"replicas_per_node_group,attr"`
	// ReplicationGroupId: string, required
	ReplicationGroupId terra.StringValue `hcl:"replication_group_id,attr" validate:"required"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// SecurityGroupNames: set of string, optional
	SecurityGroupNames terra.SetValue[terra.StringValue] `hcl:"security_group_names,attr"`
	// SnapshotArns: set of string, optional
	SnapshotArns terra.SetValue[terra.StringValue] `hcl:"snapshot_arns,attr"`
	// SnapshotName: string, optional
	SnapshotName terra.StringValue `hcl:"snapshot_name,attr"`
	// SnapshotRetentionLimit: number, optional
	SnapshotRetentionLimit terra.NumberValue `hcl:"snapshot_retention_limit,attr"`
	// SnapshotWindow: string, optional
	SnapshotWindow terra.StringValue `hcl:"snapshot_window,attr"`
	// SubnetGroupName: string, optional
	SubnetGroupName terra.StringValue `hcl:"subnet_group_name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// TransitEncryptionEnabled: bool, optional
	TransitEncryptionEnabled terra.BoolValue `hcl:"transit_encryption_enabled,attr"`
	// UserGroupIds: set of string, optional
	UserGroupIds terra.SetValue[terra.StringValue] `hcl:"user_group_ids,attr"`
	// LogDeliveryConfiguration: min=0,max=2
	LogDeliveryConfiguration []LogDeliveryConfiguration `hcl:"log_delivery_configuration,block" validate:"min=0,max=2"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsElasticacheReplicationGroupAttributes struct {
	ref terra.Reference
}

// ApplyImmediately returns a reference to field apply_immediately of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ApplyImmediately() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("apply_immediately"))
}

// Arn returns a reference to field arn of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("arn"))
}

// AtRestEncryptionEnabled returns a reference to field at_rest_encryption_enabled of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) AtRestEncryptionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("at_rest_encryption_enabled"))
}

// AuthToken returns a reference to field auth_token of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) AuthToken() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("auth_token"))
}

// AuthTokenUpdateStrategy returns a reference to field auth_token_update_strategy of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) AuthTokenUpdateStrategy() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("auth_token_update_strategy"))
}

// AutoMinorVersionUpgrade returns a reference to field auto_minor_version_upgrade of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) AutoMinorVersionUpgrade() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("auto_minor_version_upgrade"))
}

// AutomaticFailoverEnabled returns a reference to field automatic_failover_enabled of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) AutomaticFailoverEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("automatic_failover_enabled"))
}

// ClusterEnabled returns a reference to field cluster_enabled of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ClusterEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("cluster_enabled"))
}

// ConfigurationEndpointAddress returns a reference to field configuration_endpoint_address of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ConfigurationEndpointAddress() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("configuration_endpoint_address"))
}

// DataTieringEnabled returns a reference to field data_tiering_enabled of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) DataTieringEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("data_tiering_enabled"))
}

// Description returns a reference to field description of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("description"))
}

// Engine returns a reference to field engine of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) Engine() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("engine"))
}

// EngineVersion returns a reference to field engine_version of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("engine_version"))
}

// EngineVersionActual returns a reference to field engine_version_actual of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) EngineVersionActual() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("engine_version_actual"))
}

// FinalSnapshotIdentifier returns a reference to field final_snapshot_identifier of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) FinalSnapshotIdentifier() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("final_snapshot_identifier"))
}

// GlobalReplicationGroupId returns a reference to field global_replication_group_id of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) GlobalReplicationGroupId() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("global_replication_group_id"))
}

// Id returns a reference to field id of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("id"))
}

// IpDiscovery returns a reference to field ip_discovery of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) IpDiscovery() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("ip_discovery"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("kms_key_id"))
}

// MaintenanceWindow returns a reference to field maintenance_window of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) MaintenanceWindow() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("maintenance_window"))
}

// MemberClusters returns a reference to field member_clusters of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) MemberClusters() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aerg.ref.Append("member_clusters"))
}

// MultiAzEnabled returns a reference to field multi_az_enabled of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) MultiAzEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("multi_az_enabled"))
}

// NetworkType returns a reference to field network_type of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) NetworkType() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("network_type"))
}

// NodeType returns a reference to field node_type of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) NodeType() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("node_type"))
}

// NotificationTopicArn returns a reference to field notification_topic_arn of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) NotificationTopicArn() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("notification_topic_arn"))
}

// NumCacheClusters returns a reference to field num_cache_clusters of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) NumCacheClusters() terra.NumberValue {
	return terra.ReferenceAsNumber(aerg.ref.Append("num_cache_clusters"))
}

// NumNodeGroups returns a reference to field num_node_groups of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) NumNodeGroups() terra.NumberValue {
	return terra.ReferenceAsNumber(aerg.ref.Append("num_node_groups"))
}

// ParameterGroupName returns a reference to field parameter_group_name of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ParameterGroupName() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("parameter_group_name"))
}

// Port returns a reference to field port of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(aerg.ref.Append("port"))
}

// PreferredCacheClusterAzs returns a reference to field preferred_cache_cluster_azs of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) PreferredCacheClusterAzs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aerg.ref.Append("preferred_cache_cluster_azs"))
}

// PrimaryEndpointAddress returns a reference to field primary_endpoint_address of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) PrimaryEndpointAddress() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("primary_endpoint_address"))
}

// ReaderEndpointAddress returns a reference to field reader_endpoint_address of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ReaderEndpointAddress() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("reader_endpoint_address"))
}

// ReplicasPerNodeGroup returns a reference to field replicas_per_node_group of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ReplicasPerNodeGroup() terra.NumberValue {
	return terra.ReferenceAsNumber(aerg.ref.Append("replicas_per_node_group"))
}

// ReplicationGroupId returns a reference to field replication_group_id of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) ReplicationGroupId() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("replication_group_id"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aerg.ref.Append("security_group_ids"))
}

// SecurityGroupNames returns a reference to field security_group_names of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SecurityGroupNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aerg.ref.Append("security_group_names"))
}

// SnapshotArns returns a reference to field snapshot_arns of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SnapshotArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aerg.ref.Append("snapshot_arns"))
}

// SnapshotName returns a reference to field snapshot_name of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SnapshotName() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("snapshot_name"))
}

// SnapshotRetentionLimit returns a reference to field snapshot_retention_limit of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SnapshotRetentionLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(aerg.ref.Append("snapshot_retention_limit"))
}

// SnapshotWindow returns a reference to field snapshot_window of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SnapshotWindow() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("snapshot_window"))
}

// SubnetGroupName returns a reference to field subnet_group_name of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) SubnetGroupName() terra.StringValue {
	return terra.ReferenceAsString(aerg.ref.Append("subnet_group_name"))
}

// Tags returns a reference to field tags of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aerg.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aerg.ref.Append("tags_all"))
}

// TransitEncryptionEnabled returns a reference to field transit_encryption_enabled of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) TransitEncryptionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aerg.ref.Append("transit_encryption_enabled"))
}

// UserGroupIds returns a reference to field user_group_ids of aws_elasticache_replication_group.
func (aerg awsElasticacheReplicationGroupAttributes) UserGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aerg.ref.Append("user_group_ids"))
}

func (aerg awsElasticacheReplicationGroupAttributes) LogDeliveryConfiguration() terra.SetValue[LogDeliveryConfigurationAttributes] {
	return terra.ReferenceAsSet[LogDeliveryConfigurationAttributes](aerg.ref.Append("log_delivery_configuration"))
}

func (aerg awsElasticacheReplicationGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aerg.ref.Append("timeouts"))
}

type awsElasticacheReplicationGroupState struct {
	ApplyImmediately             bool                            `json:"apply_immediately"`
	Arn                          string                          `json:"arn"`
	AtRestEncryptionEnabled      bool                            `json:"at_rest_encryption_enabled"`
	AuthToken                    string                          `json:"auth_token"`
	AuthTokenUpdateStrategy      string                          `json:"auth_token_update_strategy"`
	AutoMinorVersionUpgrade      string                          `json:"auto_minor_version_upgrade"`
	AutomaticFailoverEnabled     bool                            `json:"automatic_failover_enabled"`
	ClusterEnabled               bool                            `json:"cluster_enabled"`
	ConfigurationEndpointAddress string                          `json:"configuration_endpoint_address"`
	DataTieringEnabled           bool                            `json:"data_tiering_enabled"`
	Description                  string                          `json:"description"`
	Engine                       string                          `json:"engine"`
	EngineVersion                string                          `json:"engine_version"`
	EngineVersionActual          string                          `json:"engine_version_actual"`
	FinalSnapshotIdentifier      string                          `json:"final_snapshot_identifier"`
	GlobalReplicationGroupId     string                          `json:"global_replication_group_id"`
	Id                           string                          `json:"id"`
	IpDiscovery                  string                          `json:"ip_discovery"`
	KmsKeyId                     string                          `json:"kms_key_id"`
	MaintenanceWindow            string                          `json:"maintenance_window"`
	MemberClusters               []string                        `json:"member_clusters"`
	MultiAzEnabled               bool                            `json:"multi_az_enabled"`
	NetworkType                  string                          `json:"network_type"`
	NodeType                     string                          `json:"node_type"`
	NotificationTopicArn         string                          `json:"notification_topic_arn"`
	NumCacheClusters             float64                         `json:"num_cache_clusters"`
	NumNodeGroups                float64                         `json:"num_node_groups"`
	ParameterGroupName           string                          `json:"parameter_group_name"`
	Port                         float64                         `json:"port"`
	PreferredCacheClusterAzs     []string                        `json:"preferred_cache_cluster_azs"`
	PrimaryEndpointAddress       string                          `json:"primary_endpoint_address"`
	ReaderEndpointAddress        string                          `json:"reader_endpoint_address"`
	ReplicasPerNodeGroup         float64                         `json:"replicas_per_node_group"`
	ReplicationGroupId           string                          `json:"replication_group_id"`
	SecurityGroupIds             []string                        `json:"security_group_ids"`
	SecurityGroupNames           []string                        `json:"security_group_names"`
	SnapshotArns                 []string                        `json:"snapshot_arns"`
	SnapshotName                 string                          `json:"snapshot_name"`
	SnapshotRetentionLimit       float64                         `json:"snapshot_retention_limit"`
	SnapshotWindow               string                          `json:"snapshot_window"`
	SubnetGroupName              string                          `json:"subnet_group_name"`
	Tags                         map[string]string               `json:"tags"`
	TagsAll                      map[string]string               `json:"tags_all"`
	TransitEncryptionEnabled     bool                            `json:"transit_encryption_enabled"`
	UserGroupIds                 []string                        `json:"user_group_ids"`
	LogDeliveryConfiguration     []LogDeliveryConfigurationState `json:"log_delivery_configuration"`
	Timeouts                     *TimeoutsState                  `json:"timeouts"`
}
