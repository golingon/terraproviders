// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssmcontacts_plan

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Stage struct {
	// DurationInMinutes: number, required
	DurationInMinutes terra.NumberValue `hcl:"duration_in_minutes,attr" validate:"required"`
	// StageTarget: min=0
	Target []StageTarget `hcl:"target,block" validate:"min=0"`
}

type StageTarget struct {
	// StageTargetChannelTargetInfo: optional
	ChannelTargetInfo *StageTargetChannelTargetInfo `hcl:"channel_target_info,block"`
	// StageTargetContactTargetInfo: optional
	ContactTargetInfo *StageTargetContactTargetInfo `hcl:"contact_target_info,block"`
}

type StageTargetChannelTargetInfo struct {
	// ContactChannelId: string, required
	ContactChannelId terra.StringValue `hcl:"contact_channel_id,attr" validate:"required"`
	// RetryIntervalInMinutes: number, optional
	RetryIntervalInMinutes terra.NumberValue `hcl:"retry_interval_in_minutes,attr"`
}

type StageTargetContactTargetInfo struct {
	// ContactId: string, optional
	ContactId terra.StringValue `hcl:"contact_id,attr"`
	// IsEssential: bool, required
	IsEssential terra.BoolValue `hcl:"is_essential,attr" validate:"required"`
}

type StageAttributes struct {
	ref terra.Reference
}

func (s StageAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s StageAttributes) InternalWithRef(ref terra.Reference) StageAttributes {
	return StageAttributes{ref: ref}
}

func (s StageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s StageAttributes) DurationInMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("duration_in_minutes"))
}

func (s StageAttributes) Target() terra.ListValue[StageTargetAttributes] {
	return terra.ReferenceAsList[StageTargetAttributes](s.ref.Append("target"))
}

type StageTargetAttributes struct {
	ref terra.Reference
}

func (t StageTargetAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t StageTargetAttributes) InternalWithRef(ref terra.Reference) StageTargetAttributes {
	return StageTargetAttributes{ref: ref}
}

func (t StageTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t StageTargetAttributes) ChannelTargetInfo() terra.ListValue[StageTargetChannelTargetInfoAttributes] {
	return terra.ReferenceAsList[StageTargetChannelTargetInfoAttributes](t.ref.Append("channel_target_info"))
}

func (t StageTargetAttributes) ContactTargetInfo() terra.ListValue[StageTargetContactTargetInfoAttributes] {
	return terra.ReferenceAsList[StageTargetContactTargetInfoAttributes](t.ref.Append("contact_target_info"))
}

type StageTargetChannelTargetInfoAttributes struct {
	ref terra.Reference
}

func (cti StageTargetChannelTargetInfoAttributes) InternalRef() (terra.Reference, error) {
	return cti.ref, nil
}

func (cti StageTargetChannelTargetInfoAttributes) InternalWithRef(ref terra.Reference) StageTargetChannelTargetInfoAttributes {
	return StageTargetChannelTargetInfoAttributes{ref: ref}
}

func (cti StageTargetChannelTargetInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cti.ref.InternalTokens()
}

func (cti StageTargetChannelTargetInfoAttributes) ContactChannelId() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("contact_channel_id"))
}

func (cti StageTargetChannelTargetInfoAttributes) RetryIntervalInMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(cti.ref.Append("retry_interval_in_minutes"))
}

type StageTargetContactTargetInfoAttributes struct {
	ref terra.Reference
}

func (cti StageTargetContactTargetInfoAttributes) InternalRef() (terra.Reference, error) {
	return cti.ref, nil
}

func (cti StageTargetContactTargetInfoAttributes) InternalWithRef(ref terra.Reference) StageTargetContactTargetInfoAttributes {
	return StageTargetContactTargetInfoAttributes{ref: ref}
}

func (cti StageTargetContactTargetInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cti.ref.InternalTokens()
}

func (cti StageTargetContactTargetInfoAttributes) ContactId() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("contact_id"))
}

func (cti StageTargetContactTargetInfoAttributes) IsEssential() terra.BoolValue {
	return terra.ReferenceAsBool(cti.ref.Append("is_essential"))
}

type StageState struct {
	DurationInMinutes float64            `json:"duration_in_minutes"`
	Target            []StageTargetState `json:"target"`
}

type StageTargetState struct {
	ChannelTargetInfo []StageTargetChannelTargetInfoState `json:"channel_target_info"`
	ContactTargetInfo []StageTargetContactTargetInfoState `json:"contact_target_info"`
}

type StageTargetChannelTargetInfoState struct {
	ContactChannelId       string  `json:"contact_channel_id"`
	RetryIntervalInMinutes float64 `json:"retry_interval_in_minutes"`
}

type StageTargetContactTargetInfoState struct {
	ContactId   string `json:"contact_id"`
	IsEssential bool   `json:"is_essential"`
}
