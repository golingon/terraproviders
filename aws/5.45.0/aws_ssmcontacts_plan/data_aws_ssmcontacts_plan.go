// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssmcontacts_plan

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ssmcontacts_plan.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asp *DataSource) DataSource() string {
	return "aws_ssmcontacts_plan"
}

// LocalName returns the local name for [DataSource].
func (asp *DataSource) LocalName() string {
	return asp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asp *DataSource) Configuration() interface{} {
	return asp.Args
}

// Attributes returns the attributes for [DataSource].
func (asp *DataSource) Attributes() dataAwsSsmcontactsPlanAttributes {
	return dataAwsSsmcontactsPlanAttributes{ref: terra.ReferenceDataSource(asp)}
}

// DataArgs contains the configurations for aws_ssmcontacts_plan.
type DataArgs struct {
	// ContactId: string, required
	ContactId terra.StringValue `hcl:"contact_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsSsmcontactsPlanAttributes struct {
	ref terra.Reference
}

// ContactId returns a reference to field contact_id of aws_ssmcontacts_plan.
func (asp dataAwsSsmcontactsPlanAttributes) ContactId() terra.StringValue {
	return terra.ReferenceAsString(asp.ref.Append("contact_id"))
}

// Id returns a reference to field id of aws_ssmcontacts_plan.
func (asp dataAwsSsmcontactsPlanAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asp.ref.Append("id"))
}

func (asp dataAwsSsmcontactsPlanAttributes) Stage() terra.ListValue[DataStageAttributes] {
	return terra.ReferenceAsList[DataStageAttributes](asp.ref.Append("stage"))
}
