// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_phone_number

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_connect_phone_number.
type Resource struct {
	Name      string
	Args      Args
	state     *awsConnectPhoneNumberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acpn *Resource) Type() string {
	return "aws_connect_phone_number"
}

// LocalName returns the local name for [Resource].
func (acpn *Resource) LocalName() string {
	return acpn.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acpn *Resource) Configuration() interface{} {
	return acpn.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acpn *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acpn)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acpn *Resource) Dependencies() terra.Dependencies {
	return acpn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acpn *Resource) LifecycleManagement() *terra.Lifecycle {
	return acpn.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acpn *Resource) Attributes() awsConnectPhoneNumberAttributes {
	return awsConnectPhoneNumberAttributes{ref: terra.ReferenceResource(acpn)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acpn *Resource) ImportState(state io.Reader) error {
	acpn.state = &awsConnectPhoneNumberState{}
	if err := json.NewDecoder(state).Decode(acpn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acpn.Type(), acpn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acpn *Resource) State() (*awsConnectPhoneNumberState, bool) {
	return acpn.state, acpn.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acpn *Resource) StateMust() *awsConnectPhoneNumberState {
	if acpn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acpn.Type(), acpn.LocalName()))
	}
	return acpn.state
}

// Args contains the configurations for aws_connect_phone_number.
type Args struct {
	// CountryCode: string, required
	CountryCode terra.StringValue `hcl:"country_code,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Prefix: string, optional
	Prefix terra.StringValue `hcl:"prefix,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// TargetArn: string, required
	TargetArn terra.StringValue `hcl:"target_arn,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsConnectPhoneNumberAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("arn"))
}

// CountryCode returns a reference to field country_code of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("country_code"))
}

// Description returns a reference to field description of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("description"))
}

// Id returns a reference to field id of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("id"))
}

// PhoneNumber returns a reference to field phone_number of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("phone_number"))
}

// Prefix returns a reference to field prefix of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("prefix"))
}

// Tags returns a reference to field tags of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acpn.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acpn.ref.Append("tags_all"))
}

// TargetArn returns a reference to field target_arn of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) TargetArn() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("target_arn"))
}

// Type returns a reference to field type of aws_connect_phone_number.
func (acpn awsConnectPhoneNumberAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(acpn.ref.Append("type"))
}

func (acpn awsConnectPhoneNumberAttributes) Status() terra.ListValue[StatusAttributes] {
	return terra.ReferenceAsList[StatusAttributes](acpn.ref.Append("status"))
}

func (acpn awsConnectPhoneNumberAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acpn.ref.Append("timeouts"))
}

type awsConnectPhoneNumberState struct {
	Arn         string            `json:"arn"`
	CountryCode string            `json:"country_code"`
	Description string            `json:"description"`
	Id          string            `json:"id"`
	PhoneNumber string            `json:"phone_number"`
	Prefix      string            `json:"prefix"`
	Tags        map[string]string `json:"tags"`
	TagsAll     map[string]string `json:"tags_all"`
	TargetArn   string            `json:"target_arn"`
	Type        string            `json:"type"`
	Status      []StatusState     `json:"status"`
	Timeouts    *TimeoutsState    `json:"timeouts"`
}
