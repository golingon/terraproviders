// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lakeformation_data_lake_settings

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_lakeformation_data_lake_settings.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aldls *DataSource) DataSource() string {
	return "aws_lakeformation_data_lake_settings"
}

// LocalName returns the local name for [DataSource].
func (aldls *DataSource) LocalName() string {
	return aldls.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aldls *DataSource) Configuration() interface{} {
	return aldls.Args
}

// Attributes returns the attributes for [DataSource].
func (aldls *DataSource) Attributes() dataAwsLakeformationDataLakeSettingsAttributes {
	return dataAwsLakeformationDataLakeSettingsAttributes{ref: terra.ReferenceDataSource(aldls)}
}

// DataArgs contains the configurations for aws_lakeformation_data_lake_settings.
type DataArgs struct {
	// CatalogId: string, optional
	CatalogId terra.StringValue `hcl:"catalog_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsLakeformationDataLakeSettingsAttributes struct {
	ref terra.Reference
}

// Admins returns a reference to field admins of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) Admins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aldls.ref.Append("admins"))
}

// AllowExternalDataFiltering returns a reference to field allow_external_data_filtering of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) AllowExternalDataFiltering() terra.BoolValue {
	return terra.ReferenceAsBool(aldls.ref.Append("allow_external_data_filtering"))
}

// AuthorizedSessionTagValueList returns a reference to field authorized_session_tag_value_list of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) AuthorizedSessionTagValueList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aldls.ref.Append("authorized_session_tag_value_list"))
}

// CatalogId returns a reference to field catalog_id of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) CatalogId() terra.StringValue {
	return terra.ReferenceAsString(aldls.ref.Append("catalog_id"))
}

// ExternalDataFilteringAllowList returns a reference to field external_data_filtering_allow_list of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) ExternalDataFilteringAllowList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aldls.ref.Append("external_data_filtering_allow_list"))
}

// Id returns a reference to field id of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aldls.ref.Append("id"))
}

// ReadOnlyAdmins returns a reference to field read_only_admins of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) ReadOnlyAdmins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aldls.ref.Append("read_only_admins"))
}

// TrustedResourceOwners returns a reference to field trusted_resource_owners of aws_lakeformation_data_lake_settings.
func (aldls dataAwsLakeformationDataLakeSettingsAttributes) TrustedResourceOwners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aldls.ref.Append("trusted_resource_owners"))
}

func (aldls dataAwsLakeformationDataLakeSettingsAttributes) CreateDatabaseDefaultPermissions() terra.ListValue[DataCreateDatabaseDefaultPermissionsAttributes] {
	return terra.ReferenceAsList[DataCreateDatabaseDefaultPermissionsAttributes](aldls.ref.Append("create_database_default_permissions"))
}

func (aldls dataAwsLakeformationDataLakeSettingsAttributes) CreateTableDefaultPermissions() terra.ListValue[DataCreateTableDefaultPermissionsAttributes] {
	return terra.ReferenceAsList[DataCreateTableDefaultPermissionsAttributes](aldls.ref.Append("create_table_default_permissions"))
}
