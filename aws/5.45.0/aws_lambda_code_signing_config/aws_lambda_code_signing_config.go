// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lambda_code_signing_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lambda_code_signing_config.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLambdaCodeSigningConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alcsc *Resource) Type() string {
	return "aws_lambda_code_signing_config"
}

// LocalName returns the local name for [Resource].
func (alcsc *Resource) LocalName() string {
	return alcsc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alcsc *Resource) Configuration() interface{} {
	return alcsc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alcsc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alcsc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alcsc *Resource) Dependencies() terra.Dependencies {
	return alcsc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alcsc *Resource) LifecycleManagement() *terra.Lifecycle {
	return alcsc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alcsc *Resource) Attributes() awsLambdaCodeSigningConfigAttributes {
	return awsLambdaCodeSigningConfigAttributes{ref: terra.ReferenceResource(alcsc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alcsc *Resource) ImportState(state io.Reader) error {
	alcsc.state = &awsLambdaCodeSigningConfigState{}
	if err := json.NewDecoder(state).Decode(alcsc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alcsc.Type(), alcsc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alcsc *Resource) State() (*awsLambdaCodeSigningConfigState, bool) {
	return alcsc.state, alcsc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alcsc *Resource) StateMust() *awsLambdaCodeSigningConfigState {
	if alcsc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alcsc.Type(), alcsc.LocalName()))
	}
	return alcsc.state
}

// Args contains the configurations for aws_lambda_code_signing_config.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// AllowedPublishers: required
	AllowedPublishers *AllowedPublishers `hcl:"allowed_publishers,block" validate:"required"`
	// Policies: optional
	Policies *Policies `hcl:"policies,block"`
}

type awsLambdaCodeSigningConfigAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_lambda_code_signing_config.
func (alcsc awsLambdaCodeSigningConfigAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(alcsc.ref.Append("arn"))
}

// ConfigId returns a reference to field config_id of aws_lambda_code_signing_config.
func (alcsc awsLambdaCodeSigningConfigAttributes) ConfigId() terra.StringValue {
	return terra.ReferenceAsString(alcsc.ref.Append("config_id"))
}

// Description returns a reference to field description of aws_lambda_code_signing_config.
func (alcsc awsLambdaCodeSigningConfigAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(alcsc.ref.Append("description"))
}

// Id returns a reference to field id of aws_lambda_code_signing_config.
func (alcsc awsLambdaCodeSigningConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alcsc.ref.Append("id"))
}

// LastModified returns a reference to field last_modified of aws_lambda_code_signing_config.
func (alcsc awsLambdaCodeSigningConfigAttributes) LastModified() terra.StringValue {
	return terra.ReferenceAsString(alcsc.ref.Append("last_modified"))
}

func (alcsc awsLambdaCodeSigningConfigAttributes) AllowedPublishers() terra.ListValue[AllowedPublishersAttributes] {
	return terra.ReferenceAsList[AllowedPublishersAttributes](alcsc.ref.Append("allowed_publishers"))
}

func (alcsc awsLambdaCodeSigningConfigAttributes) Policies() terra.ListValue[PoliciesAttributes] {
	return terra.ReferenceAsList[PoliciesAttributes](alcsc.ref.Append("policies"))
}

type awsLambdaCodeSigningConfigState struct {
	Arn               string                   `json:"arn"`
	ConfigId          string                   `json:"config_id"`
	Description       string                   `json:"description"`
	Id                string                   `json:"id"`
	LastModified      string                   `json:"last_modified"`
	AllowedPublishers []AllowedPublishersState `json:"allowed_publishers"`
	Policies          []PoliciesState          `json:"policies"`
}
