// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicequotas_templates

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTemplates struct{}

type DataTemplatesAttributes struct {
	ref terra.Reference
}

func (t DataTemplatesAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTemplatesAttributes) InternalWithRef(ref terra.Reference) DataTemplatesAttributes {
	return DataTemplatesAttributes{ref: ref}
}

func (t DataTemplatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTemplatesAttributes) GlobalQuota() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("global_quota"))
}

func (t DataTemplatesAttributes) QuotaCode() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("quota_code"))
}

func (t DataTemplatesAttributes) QuotaName() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("quota_name"))
}

func (t DataTemplatesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("region"))
}

func (t DataTemplatesAttributes) ServiceCode() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("service_code"))
}

func (t DataTemplatesAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("service_name"))
}

func (t DataTemplatesAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("unit"))
}

func (t DataTemplatesAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("value"))
}

type DataTemplatesState struct {
	GlobalQuota bool    `json:"global_quota"`
	QuotaCode   string  `json:"quota_code"`
	QuotaName   string  `json:"quota_name"`
	Region      string  `json:"region"`
	ServiceCode string  `json:"service_code"`
	ServiceName string  `json:"service_name"`
	Unit        string  `json:"unit"`
	Value       float64 `json:"value"`
}
