// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_backup_vault_notifications

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_backup_vault_notifications.
type Resource struct {
	Name      string
	Args      Args
	state     *awsBackupVaultNotificationsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (abvn *Resource) Type() string {
	return "aws_backup_vault_notifications"
}

// LocalName returns the local name for [Resource].
func (abvn *Resource) LocalName() string {
	return abvn.Name
}

// Configuration returns the configuration (args) for [Resource].
func (abvn *Resource) Configuration() interface{} {
	return abvn.Args
}

// DependOn is used for other resources to depend on [Resource].
func (abvn *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(abvn)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (abvn *Resource) Dependencies() terra.Dependencies {
	return abvn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (abvn *Resource) LifecycleManagement() *terra.Lifecycle {
	return abvn.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (abvn *Resource) Attributes() awsBackupVaultNotificationsAttributes {
	return awsBackupVaultNotificationsAttributes{ref: terra.ReferenceResource(abvn)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (abvn *Resource) ImportState(state io.Reader) error {
	abvn.state = &awsBackupVaultNotificationsState{}
	if err := json.NewDecoder(state).Decode(abvn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", abvn.Type(), abvn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (abvn *Resource) State() (*awsBackupVaultNotificationsState, bool) {
	return abvn.state, abvn.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (abvn *Resource) StateMust() *awsBackupVaultNotificationsState {
	if abvn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", abvn.Type(), abvn.LocalName()))
	}
	return abvn.state
}

// Args contains the configurations for aws_backup_vault_notifications.
type Args struct {
	// BackupVaultEvents: set of string, required
	BackupVaultEvents terra.SetValue[terra.StringValue] `hcl:"backup_vault_events,attr" validate:"required"`
	// BackupVaultName: string, required
	BackupVaultName terra.StringValue `hcl:"backup_vault_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SnsTopicArn: string, required
	SnsTopicArn terra.StringValue `hcl:"sns_topic_arn,attr" validate:"required"`
}

type awsBackupVaultNotificationsAttributes struct {
	ref terra.Reference
}

// BackupVaultArn returns a reference to field backup_vault_arn of aws_backup_vault_notifications.
func (abvn awsBackupVaultNotificationsAttributes) BackupVaultArn() terra.StringValue {
	return terra.ReferenceAsString(abvn.ref.Append("backup_vault_arn"))
}

// BackupVaultEvents returns a reference to field backup_vault_events of aws_backup_vault_notifications.
func (abvn awsBackupVaultNotificationsAttributes) BackupVaultEvents() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](abvn.ref.Append("backup_vault_events"))
}

// BackupVaultName returns a reference to field backup_vault_name of aws_backup_vault_notifications.
func (abvn awsBackupVaultNotificationsAttributes) BackupVaultName() terra.StringValue {
	return terra.ReferenceAsString(abvn.ref.Append("backup_vault_name"))
}

// Id returns a reference to field id of aws_backup_vault_notifications.
func (abvn awsBackupVaultNotificationsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abvn.ref.Append("id"))
}

// SnsTopicArn returns a reference to field sns_topic_arn of aws_backup_vault_notifications.
func (abvn awsBackupVaultNotificationsAttributes) SnsTopicArn() terra.StringValue {
	return terra.ReferenceAsString(abvn.ref.Append("sns_topic_arn"))
}

type awsBackupVaultNotificationsState struct {
	BackupVaultArn    string   `json:"backup_vault_arn"`
	BackupVaultEvents []string `json:"backup_vault_events"`
	BackupVaultName   string   `json:"backup_vault_name"`
	Id                string   `json:"id"`
	SnsTopicArn       string   `json:"sns_topic_arn"`
}
