// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_email_identity_feedback_attributes

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sesv2_email_identity_feedback_attributes.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesv2EmailIdentityFeedbackAttributesState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aseifa *Resource) Type() string {
	return "aws_sesv2_email_identity_feedback_attributes"
}

// LocalName returns the local name for [Resource].
func (aseifa *Resource) LocalName() string {
	return aseifa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aseifa *Resource) Configuration() interface{} {
	return aseifa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aseifa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aseifa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aseifa *Resource) Dependencies() terra.Dependencies {
	return aseifa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aseifa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aseifa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aseifa *Resource) Attributes() awsSesv2EmailIdentityFeedbackAttributesAttributes {
	return awsSesv2EmailIdentityFeedbackAttributesAttributes{ref: terra.ReferenceResource(aseifa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aseifa *Resource) ImportState(state io.Reader) error {
	aseifa.state = &awsSesv2EmailIdentityFeedbackAttributesState{}
	if err := json.NewDecoder(state).Decode(aseifa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aseifa.Type(), aseifa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aseifa *Resource) State() (*awsSesv2EmailIdentityFeedbackAttributesState, bool) {
	return aseifa.state, aseifa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aseifa *Resource) StateMust() *awsSesv2EmailIdentityFeedbackAttributesState {
	if aseifa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aseifa.Type(), aseifa.LocalName()))
	}
	return aseifa.state
}

// Args contains the configurations for aws_sesv2_email_identity_feedback_attributes.
type Args struct {
	// EmailForwardingEnabled: bool, optional
	EmailForwardingEnabled terra.BoolValue `hcl:"email_forwarding_enabled,attr"`
	// EmailIdentity: string, required
	EmailIdentity terra.StringValue `hcl:"email_identity,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsSesv2EmailIdentityFeedbackAttributesAttributes struct {
	ref terra.Reference
}

// EmailForwardingEnabled returns a reference to field email_forwarding_enabled of aws_sesv2_email_identity_feedback_attributes.
func (aseifa awsSesv2EmailIdentityFeedbackAttributesAttributes) EmailForwardingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aseifa.ref.Append("email_forwarding_enabled"))
}

// EmailIdentity returns a reference to field email_identity of aws_sesv2_email_identity_feedback_attributes.
func (aseifa awsSesv2EmailIdentityFeedbackAttributesAttributes) EmailIdentity() terra.StringValue {
	return terra.ReferenceAsString(aseifa.ref.Append("email_identity"))
}

// Id returns a reference to field id of aws_sesv2_email_identity_feedback_attributes.
func (aseifa awsSesv2EmailIdentityFeedbackAttributesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aseifa.ref.Append("id"))
}

type awsSesv2EmailIdentityFeedbackAttributesState struct {
	EmailForwardingEnabled bool   `json:"email_forwarding_enabled"`
	EmailIdentity          string `json:"email_identity"`
	Id                     string `json:"id"`
}
