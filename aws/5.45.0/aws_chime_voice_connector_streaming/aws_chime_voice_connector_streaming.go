// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_chime_voice_connector_streaming

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_chime_voice_connector_streaming.
type Resource struct {
	Name      string
	Args      Args
	state     *awsChimeVoiceConnectorStreamingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acvcs *Resource) Type() string {
	return "aws_chime_voice_connector_streaming"
}

// LocalName returns the local name for [Resource].
func (acvcs *Resource) LocalName() string {
	return acvcs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acvcs *Resource) Configuration() interface{} {
	return acvcs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acvcs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acvcs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acvcs *Resource) Dependencies() terra.Dependencies {
	return acvcs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acvcs *Resource) LifecycleManagement() *terra.Lifecycle {
	return acvcs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acvcs *Resource) Attributes() awsChimeVoiceConnectorStreamingAttributes {
	return awsChimeVoiceConnectorStreamingAttributes{ref: terra.ReferenceResource(acvcs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acvcs *Resource) ImportState(state io.Reader) error {
	acvcs.state = &awsChimeVoiceConnectorStreamingState{}
	if err := json.NewDecoder(state).Decode(acvcs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acvcs.Type(), acvcs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acvcs *Resource) State() (*awsChimeVoiceConnectorStreamingState, bool) {
	return acvcs.state, acvcs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acvcs *Resource) StateMust() *awsChimeVoiceConnectorStreamingState {
	if acvcs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acvcs.Type(), acvcs.LocalName()))
	}
	return acvcs.state
}

// Args contains the configurations for aws_chime_voice_connector_streaming.
type Args struct {
	// DataRetention: number, required
	DataRetention terra.NumberValue `hcl:"data_retention,attr" validate:"required"`
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// StreamingNotificationTargets: set of string, optional
	StreamingNotificationTargets terra.SetValue[terra.StringValue] `hcl:"streaming_notification_targets,attr"`
	// VoiceConnectorId: string, required
	VoiceConnectorId terra.StringValue `hcl:"voice_connector_id,attr" validate:"required"`
	// MediaInsightsConfiguration: optional
	MediaInsightsConfiguration *MediaInsightsConfiguration `hcl:"media_insights_configuration,block"`
}

type awsChimeVoiceConnectorStreamingAttributes struct {
	ref terra.Reference
}

// DataRetention returns a reference to field data_retention of aws_chime_voice_connector_streaming.
func (acvcs awsChimeVoiceConnectorStreamingAttributes) DataRetention() terra.NumberValue {
	return terra.ReferenceAsNumber(acvcs.ref.Append("data_retention"))
}

// Disabled returns a reference to field disabled of aws_chime_voice_connector_streaming.
func (acvcs awsChimeVoiceConnectorStreamingAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(acvcs.ref.Append("disabled"))
}

// Id returns a reference to field id of aws_chime_voice_connector_streaming.
func (acvcs awsChimeVoiceConnectorStreamingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acvcs.ref.Append("id"))
}

// StreamingNotificationTargets returns a reference to field streaming_notification_targets of aws_chime_voice_connector_streaming.
func (acvcs awsChimeVoiceConnectorStreamingAttributes) StreamingNotificationTargets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acvcs.ref.Append("streaming_notification_targets"))
}

// VoiceConnectorId returns a reference to field voice_connector_id of aws_chime_voice_connector_streaming.
func (acvcs awsChimeVoiceConnectorStreamingAttributes) VoiceConnectorId() terra.StringValue {
	return terra.ReferenceAsString(acvcs.ref.Append("voice_connector_id"))
}

func (acvcs awsChimeVoiceConnectorStreamingAttributes) MediaInsightsConfiguration() terra.ListValue[MediaInsightsConfigurationAttributes] {
	return terra.ReferenceAsList[MediaInsightsConfigurationAttributes](acvcs.ref.Append("media_insights_configuration"))
}

type awsChimeVoiceConnectorStreamingState struct {
	DataRetention                float64                           `json:"data_retention"`
	Disabled                     bool                              `json:"disabled"`
	Id                           string                            `json:"id"`
	StreamingNotificationTargets []string                          `json:"streaming_notification_targets"`
	VoiceConnectorId             string                            `json:"voice_connector_id"`
	MediaInsightsConfiguration   []MediaInsightsConfigurationState `json:"media_insights_configuration"`
}
