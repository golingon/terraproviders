// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_elb

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_elb.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ae *DataSource) DataSource() string {
	return "aws_elb"
}

// LocalName returns the local name for [DataSource].
func (ae *DataSource) LocalName() string {
	return ae.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ae *DataSource) Configuration() interface{} {
	return ae.Args
}

// Attributes returns the attributes for [DataSource].
func (ae *DataSource) Attributes() dataAwsElbAttributes {
	return dataAwsElbAttributes{ref: terra.ReferenceDataSource(ae)}
}

// DataArgs contains the configurations for aws_elb.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsElbAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_elb.
func (ae dataAwsElbAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("arn"))
}

// AvailabilityZones returns a reference to field availability_zones of aws_elb.
func (ae dataAwsElbAttributes) AvailabilityZones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ae.ref.Append("availability_zones"))
}

// ConnectionDraining returns a reference to field connection_draining of aws_elb.
func (ae dataAwsElbAttributes) ConnectionDraining() terra.BoolValue {
	return terra.ReferenceAsBool(ae.ref.Append("connection_draining"))
}

// ConnectionDrainingTimeout returns a reference to field connection_draining_timeout of aws_elb.
func (ae dataAwsElbAttributes) ConnectionDrainingTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(ae.ref.Append("connection_draining_timeout"))
}

// CrossZoneLoadBalancing returns a reference to field cross_zone_load_balancing of aws_elb.
func (ae dataAwsElbAttributes) CrossZoneLoadBalancing() terra.BoolValue {
	return terra.ReferenceAsBool(ae.ref.Append("cross_zone_load_balancing"))
}

// DesyncMitigationMode returns a reference to field desync_mitigation_mode of aws_elb.
func (ae dataAwsElbAttributes) DesyncMitigationMode() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("desync_mitigation_mode"))
}

// DnsName returns a reference to field dns_name of aws_elb.
func (ae dataAwsElbAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("dns_name"))
}

// Id returns a reference to field id of aws_elb.
func (ae dataAwsElbAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("id"))
}

// IdleTimeout returns a reference to field idle_timeout of aws_elb.
func (ae dataAwsElbAttributes) IdleTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(ae.ref.Append("idle_timeout"))
}

// Instances returns a reference to field instances of aws_elb.
func (ae dataAwsElbAttributes) Instances() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ae.ref.Append("instances"))
}

// Internal returns a reference to field internal of aws_elb.
func (ae dataAwsElbAttributes) Internal() terra.BoolValue {
	return terra.ReferenceAsBool(ae.ref.Append("internal"))
}

// Name returns a reference to field name of aws_elb.
func (ae dataAwsElbAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("name"))
}

// SecurityGroups returns a reference to field security_groups of aws_elb.
func (ae dataAwsElbAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ae.ref.Append("security_groups"))
}

// SourceSecurityGroup returns a reference to field source_security_group of aws_elb.
func (ae dataAwsElbAttributes) SourceSecurityGroup() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("source_security_group"))
}

// SourceSecurityGroupId returns a reference to field source_security_group_id of aws_elb.
func (ae dataAwsElbAttributes) SourceSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("source_security_group_id"))
}

// Subnets returns a reference to field subnets of aws_elb.
func (ae dataAwsElbAttributes) Subnets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ae.ref.Append("subnets"))
}

// Tags returns a reference to field tags of aws_elb.
func (ae dataAwsElbAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ae.ref.Append("tags"))
}

// ZoneId returns a reference to field zone_id of aws_elb.
func (ae dataAwsElbAttributes) ZoneId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("zone_id"))
}

func (ae dataAwsElbAttributes) AccessLogs() terra.ListValue[DataAccessLogsAttributes] {
	return terra.ReferenceAsList[DataAccessLogsAttributes](ae.ref.Append("access_logs"))
}

func (ae dataAwsElbAttributes) HealthCheck() terra.ListValue[DataHealthCheckAttributes] {
	return terra.ReferenceAsList[DataHealthCheckAttributes](ae.ref.Append("health_check"))
}

func (ae dataAwsElbAttributes) Listener() terra.SetValue[DataListenerAttributes] {
	return terra.ReferenceAsSet[DataListenerAttributes](ae.ref.Append("listener"))
}
