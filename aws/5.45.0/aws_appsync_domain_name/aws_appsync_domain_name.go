// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appsync_domain_name

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appsync_domain_name.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppsyncDomainNameState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aadn *Resource) Type() string {
	return "aws_appsync_domain_name"
}

// LocalName returns the local name for [Resource].
func (aadn *Resource) LocalName() string {
	return aadn.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aadn *Resource) Configuration() interface{} {
	return aadn.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aadn *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aadn)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aadn *Resource) Dependencies() terra.Dependencies {
	return aadn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aadn *Resource) LifecycleManagement() *terra.Lifecycle {
	return aadn.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aadn *Resource) Attributes() awsAppsyncDomainNameAttributes {
	return awsAppsyncDomainNameAttributes{ref: terra.ReferenceResource(aadn)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aadn *Resource) ImportState(state io.Reader) error {
	aadn.state = &awsAppsyncDomainNameState{}
	if err := json.NewDecoder(state).Decode(aadn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aadn.Type(), aadn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aadn *Resource) State() (*awsAppsyncDomainNameState, bool) {
	return aadn.state, aadn.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aadn *Resource) StateMust() *awsAppsyncDomainNameState {
	if aadn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aadn.Type(), aadn.LocalName()))
	}
	return aadn.state
}

// Args contains the configurations for aws_appsync_domain_name.
type Args struct {
	// CertificateArn: string, required
	CertificateArn terra.StringValue `hcl:"certificate_arn,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsAppsyncDomainNameAttributes struct {
	ref terra.Reference
}

// AppsyncDomainName returns a reference to field appsync_domain_name of aws_appsync_domain_name.
func (aadn awsAppsyncDomainNameAttributes) AppsyncDomainName() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("appsync_domain_name"))
}

// CertificateArn returns a reference to field certificate_arn of aws_appsync_domain_name.
func (aadn awsAppsyncDomainNameAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("certificate_arn"))
}

// Description returns a reference to field description of aws_appsync_domain_name.
func (aadn awsAppsyncDomainNameAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("description"))
}

// DomainName returns a reference to field domain_name of aws_appsync_domain_name.
func (aadn awsAppsyncDomainNameAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("domain_name"))
}

// HostedZoneId returns a reference to field hosted_zone_id of aws_appsync_domain_name.
func (aadn awsAppsyncDomainNameAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("hosted_zone_id"))
}

// Id returns a reference to field id of aws_appsync_domain_name.
func (aadn awsAppsyncDomainNameAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("id"))
}

type awsAppsyncDomainNameState struct {
	AppsyncDomainName string `json:"appsync_domain_name"`
	CertificateArn    string `json:"certificate_arn"`
	Description       string `json:"description"`
	DomainName        string `json:"domain_name"`
	HostedZoneId      string `json:"hosted_zone_id"`
	Id                string `json:"id"`
}
