// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dx_macsec_key_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_dx_macsec_key_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsDxMacsecKeyAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (admka *Resource) Type() string {
	return "aws_dx_macsec_key_association"
}

// LocalName returns the local name for [Resource].
func (admka *Resource) LocalName() string {
	return admka.Name
}

// Configuration returns the configuration (args) for [Resource].
func (admka *Resource) Configuration() interface{} {
	return admka.Args
}

// DependOn is used for other resources to depend on [Resource].
func (admka *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(admka)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (admka *Resource) Dependencies() terra.Dependencies {
	return admka.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (admka *Resource) LifecycleManagement() *terra.Lifecycle {
	return admka.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (admka *Resource) Attributes() awsDxMacsecKeyAssociationAttributes {
	return awsDxMacsecKeyAssociationAttributes{ref: terra.ReferenceResource(admka)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (admka *Resource) ImportState(state io.Reader) error {
	admka.state = &awsDxMacsecKeyAssociationState{}
	if err := json.NewDecoder(state).Decode(admka.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", admka.Type(), admka.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (admka *Resource) State() (*awsDxMacsecKeyAssociationState, bool) {
	return admka.state, admka.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (admka *Resource) StateMust() *awsDxMacsecKeyAssociationState {
	if admka.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", admka.Type(), admka.LocalName()))
	}
	return admka.state
}

// Args contains the configurations for aws_dx_macsec_key_association.
type Args struct {
	// Cak: string, optional
	Cak terra.StringValue `hcl:"cak,attr"`
	// Ckn: string, optional
	Ckn terra.StringValue `hcl:"ckn,attr"`
	// ConnectionId: string, required
	ConnectionId terra.StringValue `hcl:"connection_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SecretArn: string, optional
	SecretArn terra.StringValue `hcl:"secret_arn,attr"`
}

type awsDxMacsecKeyAssociationAttributes struct {
	ref terra.Reference
}

// Cak returns a reference to field cak of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) Cak() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("cak"))
}

// Ckn returns a reference to field ckn of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) Ckn() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("ckn"))
}

// ConnectionId returns a reference to field connection_id of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) ConnectionId() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("connection_id"))
}

// Id returns a reference to field id of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("id"))
}

// SecretArn returns a reference to field secret_arn of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) SecretArn() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("secret_arn"))
}

// StartOn returns a reference to field start_on of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) StartOn() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("start_on"))
}

// State returns a reference to field state of aws_dx_macsec_key_association.
func (admka awsDxMacsecKeyAssociationAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(admka.ref.Append("state"))
}

type awsDxMacsecKeyAssociationState struct {
	Cak          string `json:"cak"`
	Ckn          string `json:"ckn"`
	ConnectionId string `json:"connection_id"`
	Id           string `json:"id"`
	SecretArn    string `json:"secret_arn"`
	StartOn      string `json:"start_on"`
	State        string `json:"state"`
}
