// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_quicksight_theme

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_quicksight_theme.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aqt *DataSource) DataSource() string {
	return "aws_quicksight_theme"
}

// LocalName returns the local name for [DataSource].
func (aqt *DataSource) LocalName() string {
	return aqt.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aqt *DataSource) Configuration() interface{} {
	return aqt.Args
}

// Attributes returns the attributes for [DataSource].
func (aqt *DataSource) Attributes() dataAwsQuicksightThemeAttributes {
	return dataAwsQuicksightThemeAttributes{ref: terra.ReferenceDataSource(aqt)}
}

// DataArgs contains the configurations for aws_quicksight_theme.
type DataArgs struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ThemeId: string, required
	ThemeId terra.StringValue `hcl:"theme_id,attr" validate:"required"`
}

type dataAwsQuicksightThemeAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("arn"))
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("aws_account_id"))
}

// BaseThemeId returns a reference to field base_theme_id of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) BaseThemeId() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("base_theme_id"))
}

// CreatedTime returns a reference to field created_time of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("created_time"))
}

// Id returns a reference to field id of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("id"))
}

// LastUpdatedTime returns a reference to field last_updated_time of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) LastUpdatedTime() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("last_updated_time"))
}

// Name returns a reference to field name of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("name"))
}

// Status returns a reference to field status of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aqt.ref.Append("tags"))
}

// ThemeId returns a reference to field theme_id of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) ThemeId() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("theme_id"))
}

// VersionDescription returns a reference to field version_description of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) VersionDescription() terra.StringValue {
	return terra.ReferenceAsString(aqt.ref.Append("version_description"))
}

// VersionNumber returns a reference to field version_number of aws_quicksight_theme.
func (aqt dataAwsQuicksightThemeAttributes) VersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(aqt.ref.Append("version_number"))
}

func (aqt dataAwsQuicksightThemeAttributes) Configuration() terra.ListValue[DataConfigurationAttributes] {
	return terra.ReferenceAsList[DataConfigurationAttributes](aqt.ref.Append("configuration"))
}

func (aqt dataAwsQuicksightThemeAttributes) Permissions() terra.ListValue[DataPermissionsAttributes] {
	return terra.ReferenceAsList[DataPermissionsAttributes](aqt.ref.Append("permissions"))
}
