// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_domain

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DefaultSpaceSettings struct {
	// ExecutionRole: string, required
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups: set of string, optional
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// DefaultSpaceSettingsJupyterServerAppSettings: optional
	JupyterServerAppSettings *DefaultSpaceSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// DefaultSpaceSettingsKernelGatewayAppSettings: optional
	KernelGatewayAppSettings *DefaultSpaceSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
}

type DefaultSpaceSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository: min=0,max=10
	CodeRepository []DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultSpaceSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage: min=0,max=200
	CustomImage []DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettings struct {
	// DefaultLandingUri: string, optional
	DefaultLandingUri terra.StringValue `hcl:"default_landing_uri,attr"`
	// ExecutionRole: string, required
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups: set of string, optional
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// StudioWebPortal: string, optional
	StudioWebPortal terra.StringValue `hcl:"studio_web_portal,attr"`
	// DefaultUserSettingsCanvasAppSettings: optional
	CanvasAppSettings *DefaultUserSettingsCanvasAppSettings `hcl:"canvas_app_settings,block"`
	// DefaultUserSettingsCodeEditorAppSettings: optional
	CodeEditorAppSettings *DefaultUserSettingsCodeEditorAppSettings `hcl:"code_editor_app_settings,block"`
	// DefaultUserSettingsCustomFileSystemConfig: min=0
	CustomFileSystemConfig []DefaultUserSettingsCustomFileSystemConfig `hcl:"custom_file_system_config,block" validate:"min=0"`
	// DefaultUserSettingsCustomPosixUserConfig: optional
	CustomPosixUserConfig *DefaultUserSettingsCustomPosixUserConfig `hcl:"custom_posix_user_config,block"`
	// DefaultUserSettingsJupyterLabAppSettings: optional
	JupyterLabAppSettings *DefaultUserSettingsJupyterLabAppSettings `hcl:"jupyter_lab_app_settings,block"`
	// DefaultUserSettingsJupyterServerAppSettings: optional
	JupyterServerAppSettings *DefaultUserSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// DefaultUserSettingsKernelGatewayAppSettings: optional
	KernelGatewayAppSettings *DefaultUserSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
	// DefaultUserSettingsRSessionAppSettings: optional
	RSessionAppSettings *DefaultUserSettingsRSessionAppSettings `hcl:"r_session_app_settings,block"`
	// DefaultUserSettingsRStudioServerProAppSettings: optional
	RStudioServerProAppSettings *DefaultUserSettingsRStudioServerProAppSettings `hcl:"r_studio_server_pro_app_settings,block"`
	// DefaultUserSettingsSharingSettings: optional
	SharingSettings *DefaultUserSettingsSharingSettings `hcl:"sharing_settings,block"`
	// DefaultUserSettingsSpaceStorageSettings: optional
	SpaceStorageSettings *DefaultUserSettingsSpaceStorageSettings `hcl:"space_storage_settings,block"`
	// DefaultUserSettingsTensorBoardAppSettings: optional
	TensorBoardAppSettings *DefaultUserSettingsTensorBoardAppSettings `hcl:"tensor_board_app_settings,block"`
}

type DefaultUserSettingsCanvasAppSettings struct {
	// DefaultUserSettingsCanvasAppSettingsDirectDeploySettings: optional
	DirectDeploySettings *DefaultUserSettingsCanvasAppSettingsDirectDeploySettings `hcl:"direct_deploy_settings,block"`
	// DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettings: min=0,max=20
	IdentityProviderOauthSettings []DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettings `hcl:"identity_provider_oauth_settings,block" validate:"min=0,max=20"`
	// DefaultUserSettingsCanvasAppSettingsKendraSettings: optional
	KendraSettings *DefaultUserSettingsCanvasAppSettingsKendraSettings `hcl:"kendra_settings,block"`
	// DefaultUserSettingsCanvasAppSettingsModelRegisterSettings: optional
	ModelRegisterSettings *DefaultUserSettingsCanvasAppSettingsModelRegisterSettings `hcl:"model_register_settings,block"`
	// DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings: optional
	TimeSeriesForecastingSettings *DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings `hcl:"time_series_forecasting_settings,block"`
	// DefaultUserSettingsCanvasAppSettingsWorkspaceSettings: optional
	WorkspaceSettings *DefaultUserSettingsCanvasAppSettingsWorkspaceSettings `hcl:"workspace_settings,block"`
}

type DefaultUserSettingsCanvasAppSettingsDirectDeploySettings struct {
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettings struct {
	// DataSourceName: string, optional
	DataSourceName terra.StringValue `hcl:"data_source_name,attr"`
	// SecretArn: string, required
	SecretArn terra.StringValue `hcl:"secret_arn,attr" validate:"required"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsCanvasAppSettingsKendraSettings struct {
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsCanvasAppSettingsModelRegisterSettings struct {
	// CrossAccountModelRegisterRoleArn: string, optional
	CrossAccountModelRegisterRoleArn terra.StringValue `hcl:"cross_account_model_register_role_arn,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings struct {
	// AmazonForecastRoleArn: string, optional
	AmazonForecastRoleArn terra.StringValue `hcl:"amazon_forecast_role_arn,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsCanvasAppSettingsWorkspaceSettings struct {
	// S3ArtifactPath: string, optional
	S3ArtifactPath terra.StringValue `hcl:"s3_artifact_path,attr"`
	// S3KmsKeyId: string, optional
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
}

type DefaultUserSettingsCodeEditorAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsCustomFileSystemConfig struct {
	// DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfig: optional
	EfsFileSystemConfig *DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfig `hcl:"efs_file_system_config,block"`
}

type DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfig struct {
	// FileSystemId: string, required
	FileSystemId terra.StringValue `hcl:"file_system_id,attr" validate:"required"`
	// FileSystemPath: string, required
	FileSystemPath terra.StringValue `hcl:"file_system_path,attr" validate:"required"`
}

type DefaultUserSettingsCustomPosixUserConfig struct {
	// Gid: number, required
	Gid terra.NumberValue `hcl:"gid,attr" validate:"required"`
	// Uid: number, required
	Uid terra.NumberValue `hcl:"uid,attr" validate:"required"`
}

type DefaultUserSettingsJupyterLabAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsJupyterLabAppSettingsCodeRepository: min=0,max=10
	CodeRepository []DefaultUserSettingsJupyterLabAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultUserSettingsJupyterLabAppSettingsCustomImage: min=0,max=200
	CustomImage []DefaultUserSettingsJupyterLabAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsJupyterLabAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultUserSettingsJupyterLabAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsJupyterServerAppSettingsCodeRepository: min=0,max=10
	CodeRepository []DefaultUserSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsKernelGatewayAppSettingsCustomImage: min=0,max=200
	CustomImage []DefaultUserSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsRSessionAppSettings struct {
	// DefaultUserSettingsRSessionAppSettingsCustomImage: min=0,max=200
	CustomImage []DefaultUserSettingsRSessionAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// DefaultUserSettingsRSessionAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsRSessionAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsRSessionAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultUserSettingsRSessionAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsRStudioServerProAppSettings struct {
	// AccessStatus: string, optional
	AccessStatus terra.StringValue `hcl:"access_status,attr"`
	// UserGroup: string, optional
	UserGroup terra.StringValue `hcl:"user_group,attr"`
}

type DefaultUserSettingsSharingSettings struct {
	// NotebookOutputOption: string, optional
	NotebookOutputOption terra.StringValue `hcl:"notebook_output_option,attr"`
	// S3KmsKeyId: string, optional
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
	// S3OutputPath: string, optional
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr"`
}

type DefaultUserSettingsSpaceStorageSettings struct {
	// DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettings: optional
	DefaultEbsStorageSettings *DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettings `hcl:"default_ebs_storage_settings,block"`
}

type DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettings struct {
	// DefaultEbsVolumeSizeInGb: number, required
	DefaultEbsVolumeSizeInGb terra.NumberValue `hcl:"default_ebs_volume_size_in_gb,attr" validate:"required"`
	// MaximumEbsVolumeSizeInGb: number, required
	MaximumEbsVolumeSizeInGb terra.NumberValue `hcl:"maximum_ebs_volume_size_in_gb,attr" validate:"required"`
}

type DefaultUserSettingsTensorBoardAppSettings struct {
	// DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DomainSettings struct {
	// ExecutionRoleIdentityConfig: string, optional
	ExecutionRoleIdentityConfig terra.StringValue `hcl:"execution_role_identity_config,attr"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// DomainSettingsRStudioServerProDomainSettings: optional
	RStudioServerProDomainSettings *DomainSettingsRStudioServerProDomainSettings `hcl:"r_studio_server_pro_domain_settings,block"`
}

type DomainSettingsRStudioServerProDomainSettings struct {
	// DomainExecutionRoleArn: string, required
	DomainExecutionRoleArn terra.StringValue `hcl:"domain_execution_role_arn,attr" validate:"required"`
	// RStudioConnectUrl: string, optional
	RStudioConnectUrl terra.StringValue `hcl:"r_studio_connect_url,attr"`
	// RStudioPackageManagerUrl: string, optional
	RStudioPackageManagerUrl terra.StringValue `hcl:"r_studio_package_manager_url,attr"`
	// DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type RetentionPolicy struct {
	// HomeEfsFileSystem: string, optional
	HomeEfsFileSystem terra.StringValue `hcl:"home_efs_file_system,attr"`
}

type DefaultSpaceSettingsAttributes struct {
	ref terra.Reference
}

func (dss DefaultSpaceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dss.ref, nil
}

func (dss DefaultSpaceSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsAttributes {
	return DefaultSpaceSettingsAttributes{ref: ref}
}

func (dss DefaultSpaceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dss.ref.InternalTokens()
}

func (dss DefaultSpaceSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("execution_role"))
}

func (dss DefaultSpaceSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dss.ref.Append("security_groups"))
}

func (dss DefaultSpaceSettingsAttributes) JupyterServerAppSettings() terra.ListValue[DefaultSpaceSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsJupyterServerAppSettingsAttributes](dss.ref.Append("jupyter_server_app_settings"))
}

func (dss DefaultSpaceSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[DefaultSpaceSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsKernelGatewayAppSettingsAttributes](dss.ref.Append("kernel_gateway_app_settings"))
}

type DefaultSpaceSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsJupyterServerAppSettingsAttributes {
	return DefaultSpaceSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultSpaceSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsKernelGatewayAppSettingsAttributes {
	return DefaultSpaceSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsAttributes struct {
	ref terra.Reference
}

func (dus DefaultUserSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dus.ref, nil
}

func (dus DefaultUserSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsAttributes {
	return DefaultUserSettingsAttributes{ref: ref}
}

func (dus DefaultUserSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dus.ref.InternalTokens()
}

func (dus DefaultUserSettingsAttributes) DefaultLandingUri() terra.StringValue {
	return terra.ReferenceAsString(dus.ref.Append("default_landing_uri"))
}

func (dus DefaultUserSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(dus.ref.Append("execution_role"))
}

func (dus DefaultUserSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dus.ref.Append("security_groups"))
}

func (dus DefaultUserSettingsAttributes) StudioWebPortal() terra.StringValue {
	return terra.ReferenceAsString(dus.ref.Append("studio_web_portal"))
}

func (dus DefaultUserSettingsAttributes) CanvasAppSettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsAttributes](dus.ref.Append("canvas_app_settings"))
}

func (dus DefaultUserSettingsAttributes) CodeEditorAppSettings() terra.ListValue[DefaultUserSettingsCodeEditorAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCodeEditorAppSettingsAttributes](dus.ref.Append("code_editor_app_settings"))
}

func (dus DefaultUserSettingsAttributes) CustomFileSystemConfig() terra.ListValue[DefaultUserSettingsCustomFileSystemConfigAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCustomFileSystemConfigAttributes](dus.ref.Append("custom_file_system_config"))
}

func (dus DefaultUserSettingsAttributes) CustomPosixUserConfig() terra.ListValue[DefaultUserSettingsCustomPosixUserConfigAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCustomPosixUserConfigAttributes](dus.ref.Append("custom_posix_user_config"))
}

func (dus DefaultUserSettingsAttributes) JupyterLabAppSettings() terra.ListValue[DefaultUserSettingsJupyterLabAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterLabAppSettingsAttributes](dus.ref.Append("jupyter_lab_app_settings"))
}

func (dus DefaultUserSettingsAttributes) JupyterServerAppSettings() terra.ListValue[DefaultUserSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterServerAppSettingsAttributes](dus.ref.Append("jupyter_server_app_settings"))
}

func (dus DefaultUserSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[DefaultUserSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsKernelGatewayAppSettingsAttributes](dus.ref.Append("kernel_gateway_app_settings"))
}

func (dus DefaultUserSettingsAttributes) RSessionAppSettings() terra.ListValue[DefaultUserSettingsRSessionAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsRSessionAppSettingsAttributes](dus.ref.Append("r_session_app_settings"))
}

func (dus DefaultUserSettingsAttributes) RStudioServerProAppSettings() terra.ListValue[DefaultUserSettingsRStudioServerProAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsRStudioServerProAppSettingsAttributes](dus.ref.Append("r_studio_server_pro_app_settings"))
}

func (dus DefaultUserSettingsAttributes) SharingSettings() terra.ListValue[DefaultUserSettingsSharingSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsSharingSettingsAttributes](dus.ref.Append("sharing_settings"))
}

func (dus DefaultUserSettingsAttributes) SpaceStorageSettings() terra.ListValue[DefaultUserSettingsSpaceStorageSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsSpaceStorageSettingsAttributes](dus.ref.Append("space_storage_settings"))
}

func (dus DefaultUserSettingsAttributes) TensorBoardAppSettings() terra.ListValue[DefaultUserSettingsTensorBoardAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsTensorBoardAppSettingsAttributes](dus.ref.Append("tensor_board_app_settings"))
}

type DefaultUserSettingsCanvasAppSettingsAttributes struct {
	ref terra.Reference
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cas.ref, nil
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsAttributes{ref: ref}
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cas.ref.InternalTokens()
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) DirectDeploySettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes](cas.ref.Append("direct_deploy_settings"))
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) IdentityProviderOauthSettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes](cas.ref.Append("identity_provider_oauth_settings"))
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) KendraSettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes](cas.ref.Append("kendra_settings"))
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) ModelRegisterSettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes](cas.ref.Append("model_register_settings"))
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) TimeSeriesForecastingSettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes](cas.ref.Append("time_series_forecasting_settings"))
}

func (cas DefaultUserSettingsCanvasAppSettingsAttributes) WorkspaceSettings() terra.ListValue[DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes](cas.ref.Append("workspace_settings"))
}

type DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes struct {
	ref terra.Reference
}

func (dds DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) InternalRef() (terra.Reference, error) {
	return dds.ref, nil
}

func (dds DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes{ref: ref}
}

func (dds DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dds.ref.InternalTokens()
}

func (dds DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(dds.ref.Append("status"))
}

type DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes struct {
	ref terra.Reference
}

func (ipos DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ipos.ref, nil
}

func (ipos DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes{ref: ref}
}

func (ipos DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ipos.ref.InternalTokens()
}

func (ipos DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) DataSourceName() terra.StringValue {
	return terra.ReferenceAsString(ipos.ref.Append("data_source_name"))
}

func (ipos DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) SecretArn() terra.StringValue {
	return terra.ReferenceAsString(ipos.ref.Append("secret_arn"))
}

func (ipos DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ipos.ref.Append("status"))
}

type DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes struct {
	ref terra.Reference
}

func (ks DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ks.ref, nil
}

func (ks DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes{ref: ref}
}

func (ks DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ks.ref.InternalTokens()
}

func (ks DefaultUserSettingsCanvasAppSettingsKendraSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ks.ref.Append("status"))
}

type DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes struct {
	ref terra.Reference
}

func (mrs DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mrs.ref, nil
}

func (mrs DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes{ref: ref}
}

func (mrs DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrs.ref.InternalTokens()
}

func (mrs DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) CrossAccountModelRegisterRoleArn() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("cross_account_model_register_role_arn"))
}

func (mrs DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("status"))
}

type DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes struct {
	ref terra.Reference
}

func (tsfs DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tsfs.ref, nil
}

func (tsfs DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes{ref: ref}
}

func (tsfs DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsfs.ref.InternalTokens()
}

func (tsfs DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) AmazonForecastRoleArn() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("amazon_forecast_role_arn"))
}

func (tsfs DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("status"))
}

type DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes struct {
	ref terra.Reference
}

func (ws DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ws.ref, nil
}

func (ws DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes {
	return DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes{ref: ref}
}

func (ws DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ws.ref.InternalTokens()
}

func (ws DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) S3ArtifactPath() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("s3_artifact_path"))
}

func (ws DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("s3_kms_key_id"))
}

type DefaultUserSettingsCodeEditorAppSettingsAttributes struct {
	ref terra.Reference
}

func (ceas DefaultUserSettingsCodeEditorAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ceas.ref, nil
}

func (ceas DefaultUserSettingsCodeEditorAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCodeEditorAppSettingsAttributes {
	return DefaultUserSettingsCodeEditorAppSettingsAttributes{ref: ref}
}

func (ceas DefaultUserSettingsCodeEditorAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ceas.ref.InternalTokens()
}

func (ceas DefaultUserSettingsCodeEditorAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ceas.ref.Append("lifecycle_config_arns"))
}

func (ceas DefaultUserSettingsCodeEditorAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes](ceas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsCustomFileSystemConfigAttributes struct {
	ref terra.Reference
}

func (cfsc DefaultUserSettingsCustomFileSystemConfigAttributes) InternalRef() (terra.Reference, error) {
	return cfsc.ref, nil
}

func (cfsc DefaultUserSettingsCustomFileSystemConfigAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCustomFileSystemConfigAttributes {
	return DefaultUserSettingsCustomFileSystemConfigAttributes{ref: ref}
}

func (cfsc DefaultUserSettingsCustomFileSystemConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cfsc.ref.InternalTokens()
}

func (cfsc DefaultUserSettingsCustomFileSystemConfigAttributes) EfsFileSystemConfig() terra.ListValue[DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes](cfsc.ref.Append("efs_file_system_config"))
}

type DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes struct {
	ref terra.Reference
}

func (efsc DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) InternalRef() (terra.Reference, error) {
	return efsc.ref, nil
}

func (efsc DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes {
	return DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes{ref: ref}
}

func (efsc DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efsc.ref.InternalTokens()
}

func (efsc DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efsc.ref.Append("file_system_id"))
}

func (efsc DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) FileSystemPath() terra.StringValue {
	return terra.ReferenceAsString(efsc.ref.Append("file_system_path"))
}

type DefaultUserSettingsCustomPosixUserConfigAttributes struct {
	ref terra.Reference
}

func (cpuc DefaultUserSettingsCustomPosixUserConfigAttributes) InternalRef() (terra.Reference, error) {
	return cpuc.ref, nil
}

func (cpuc DefaultUserSettingsCustomPosixUserConfigAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsCustomPosixUserConfigAttributes {
	return DefaultUserSettingsCustomPosixUserConfigAttributes{ref: ref}
}

func (cpuc DefaultUserSettingsCustomPosixUserConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpuc.ref.InternalTokens()
}

func (cpuc DefaultUserSettingsCustomPosixUserConfigAttributes) Gid() terra.NumberValue {
	return terra.ReferenceAsNumber(cpuc.ref.Append("gid"))
}

func (cpuc DefaultUserSettingsCustomPosixUserConfigAttributes) Uid() terra.NumberValue {
	return terra.ReferenceAsNumber(cpuc.ref.Append("uid"))
}

type DefaultUserSettingsJupyterLabAppSettingsAttributes struct {
	ref terra.Reference
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jlas.ref, nil
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterLabAppSettingsAttributes {
	return DefaultUserSettingsJupyterLabAppSettingsAttributes{ref: ref}
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jlas.ref.InternalTokens()
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jlas.ref.Append("lifecycle_config_arns"))
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) CodeRepository() terra.SetValue[DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes](jlas.ref.Append("code_repository"))
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) CustomImage() terra.ListValue[DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes](jlas.ref.Append("custom_image"))
}

func (jlas DefaultUserSettingsJupyterLabAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes](jlas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes {
	return DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes {
	return DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes{ref: ref}
}

func (ci DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci DefaultUserSettingsJupyterLabAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterServerAppSettingsAttributes {
	return DefaultUserSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsKernelGatewayAppSettingsAttributes {
	return DefaultUserSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsRSessionAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsas DefaultUserSettingsRSessionAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsas.ref, nil
}

func (rsas DefaultUserSettingsRSessionAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsRSessionAppSettingsAttributes {
	return DefaultUserSettingsRSessionAppSettingsAttributes{ref: ref}
}

func (rsas DefaultUserSettingsRSessionAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsas.ref.InternalTokens()
}

func (rsas DefaultUserSettingsRSessionAppSettingsAttributes) CustomImage() terra.ListValue[DefaultUserSettingsRSessionAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsRSessionAppSettingsCustomImageAttributes](rsas.ref.Append("custom_image"))
}

func (rsas DefaultUserSettingsRSessionAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes](rsas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsRSessionAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci DefaultUserSettingsRSessionAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DefaultUserSettingsRSessionAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsRSessionAppSettingsCustomImageAttributes {
	return DefaultUserSettingsRSessionAppSettingsCustomImageAttributes{ref: ref}
}

func (ci DefaultUserSettingsRSessionAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DefaultUserSettingsRSessionAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci DefaultUserSettingsRSessionAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci DefaultUserSettingsRSessionAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsRStudioServerProAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsspas DefaultUserSettingsRStudioServerProAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspas.ref, nil
}

func (rsspas DefaultUserSettingsRStudioServerProAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsRStudioServerProAppSettingsAttributes {
	return DefaultUserSettingsRStudioServerProAppSettingsAttributes{ref: ref}
}

func (rsspas DefaultUserSettingsRStudioServerProAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspas.ref.InternalTokens()
}

func (rsspas DefaultUserSettingsRStudioServerProAppSettingsAttributes) AccessStatus() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("access_status"))
}

func (rsspas DefaultUserSettingsRStudioServerProAppSettingsAttributes) UserGroup() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("user_group"))
}

type DefaultUserSettingsSharingSettingsAttributes struct {
	ref terra.Reference
}

func (ss DefaultUserSettingsSharingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DefaultUserSettingsSharingSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsSharingSettingsAttributes {
	return DefaultUserSettingsSharingSettingsAttributes{ref: ref}
}

func (ss DefaultUserSettingsSharingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DefaultUserSettingsSharingSettingsAttributes) NotebookOutputOption() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("notebook_output_option"))
}

func (ss DefaultUserSettingsSharingSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_kms_key_id"))
}

func (ss DefaultUserSettingsSharingSettingsAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_output_path"))
}

type DefaultUserSettingsSpaceStorageSettingsAttributes struct {
	ref terra.Reference
}

func (sss DefaultUserSettingsSpaceStorageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return sss.ref, nil
}

func (sss DefaultUserSettingsSpaceStorageSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsSpaceStorageSettingsAttributes {
	return DefaultUserSettingsSpaceStorageSettingsAttributes{ref: ref}
}

func (sss DefaultUserSettingsSpaceStorageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sss.ref.InternalTokens()
}

func (sss DefaultUserSettingsSpaceStorageSettingsAttributes) DefaultEbsStorageSettings() terra.ListValue[DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes](sss.ref.Append("default_ebs_storage_settings"))
}

type DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes struct {
	ref terra.Reference
}

func (dess DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dess.ref, nil
}

func (dess DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes {
	return DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes{ref: ref}
}

func (dess DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dess.ref.InternalTokens()
}

func (dess DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) DefaultEbsVolumeSizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(dess.ref.Append("default_ebs_volume_size_in_gb"))
}

func (dess DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) MaximumEbsVolumeSizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(dess.ref.Append("maximum_ebs_volume_size_in_gb"))
}

type DefaultUserSettingsTensorBoardAppSettingsAttributes struct {
	ref terra.Reference
}

func (tbas DefaultUserSettingsTensorBoardAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tbas.ref, nil
}

func (tbas DefaultUserSettingsTensorBoardAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsTensorBoardAppSettingsAttributes {
	return DefaultUserSettingsTensorBoardAppSettingsAttributes{ref: ref}
}

func (tbas DefaultUserSettingsTensorBoardAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbas.ref.InternalTokens()
}

func (tbas DefaultUserSettingsTensorBoardAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes](tbas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DomainSettingsAttributes struct {
	ref terra.Reference
}

func (ds DomainSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds DomainSettingsAttributes) InternalWithRef(ref terra.Reference) DomainSettingsAttributes {
	return DomainSettingsAttributes{ref: ref}
}

func (ds DomainSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds DomainSettingsAttributes) ExecutionRoleIdentityConfig() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("execution_role_identity_config"))
}

func (ds DomainSettingsAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ds.ref.Append("security_group_ids"))
}

func (ds DomainSettingsAttributes) RStudioServerProDomainSettings() terra.ListValue[DomainSettingsRStudioServerProDomainSettingsAttributes] {
	return terra.ReferenceAsList[DomainSettingsRStudioServerProDomainSettingsAttributes](ds.ref.Append("r_studio_server_pro_domain_settings"))
}

type DomainSettingsRStudioServerProDomainSettingsAttributes struct {
	ref terra.Reference
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspds.ref, nil
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) InternalWithRef(ref terra.Reference) DomainSettingsRStudioServerProDomainSettingsAttributes {
	return DomainSettingsRStudioServerProDomainSettingsAttributes{ref: ref}
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspds.ref.InternalTokens()
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) DomainExecutionRoleArn() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("domain_execution_role_arn"))
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) RStudioConnectUrl() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("r_studio_connect_url"))
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) RStudioPackageManagerUrl() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("r_studio_package_manager_url"))
}

func (rsspds DomainSettingsRStudioServerProDomainSettingsAttributes) DefaultResourceSpec() terra.ListValue[DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes](rsspds.ref.Append("default_resource_spec"))
}

type DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes {
	return DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type RetentionPolicyAttributes struct {
	ref terra.Reference
}

func (rp RetentionPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp RetentionPolicyAttributes) InternalWithRef(ref terra.Reference) RetentionPolicyAttributes {
	return RetentionPolicyAttributes{ref: ref}
}

func (rp RetentionPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp RetentionPolicyAttributes) HomeEfsFileSystem() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("home_efs_file_system"))
}

type DefaultSpaceSettingsState struct {
	ExecutionRole            string                                              `json:"execution_role"`
	SecurityGroups           []string                                            `json:"security_groups"`
	JupyterServerAppSettings []DefaultSpaceSettingsJupyterServerAppSettingsState `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings []DefaultSpaceSettingsKernelGatewayAppSettingsState `json:"kernel_gateway_app_settings"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                               `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                               `json:"lifecycle_config_arns"`
	CustomImage         []DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsState struct {
	DefaultLandingUri           string                                                `json:"default_landing_uri"`
	ExecutionRole               string                                                `json:"execution_role"`
	SecurityGroups              []string                                              `json:"security_groups"`
	StudioWebPortal             string                                                `json:"studio_web_portal"`
	CanvasAppSettings           []DefaultUserSettingsCanvasAppSettingsState           `json:"canvas_app_settings"`
	CodeEditorAppSettings       []DefaultUserSettingsCodeEditorAppSettingsState       `json:"code_editor_app_settings"`
	CustomFileSystemConfig      []DefaultUserSettingsCustomFileSystemConfigState      `json:"custom_file_system_config"`
	CustomPosixUserConfig       []DefaultUserSettingsCustomPosixUserConfigState       `json:"custom_posix_user_config"`
	JupyterLabAppSettings       []DefaultUserSettingsJupyterLabAppSettingsState       `json:"jupyter_lab_app_settings"`
	JupyterServerAppSettings    []DefaultUserSettingsJupyterServerAppSettingsState    `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings    []DefaultUserSettingsKernelGatewayAppSettingsState    `json:"kernel_gateway_app_settings"`
	RSessionAppSettings         []DefaultUserSettingsRSessionAppSettingsState         `json:"r_session_app_settings"`
	RStudioServerProAppSettings []DefaultUserSettingsRStudioServerProAppSettingsState `json:"r_studio_server_pro_app_settings"`
	SharingSettings             []DefaultUserSettingsSharingSettingsState             `json:"sharing_settings"`
	SpaceStorageSettings        []DefaultUserSettingsSpaceStorageSettingsState        `json:"space_storage_settings"`
	TensorBoardAppSettings      []DefaultUserSettingsTensorBoardAppSettingsState      `json:"tensor_board_app_settings"`
}

type DefaultUserSettingsCanvasAppSettingsState struct {
	DirectDeploySettings          []DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsState          `json:"direct_deploy_settings"`
	IdentityProviderOauthSettings []DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsState `json:"identity_provider_oauth_settings"`
	KendraSettings                []DefaultUserSettingsCanvasAppSettingsKendraSettingsState                `json:"kendra_settings"`
	ModelRegisterSettings         []DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsState         `json:"model_register_settings"`
	TimeSeriesForecastingSettings []DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState `json:"time_series_forecasting_settings"`
	WorkspaceSettings             []DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsState             `json:"workspace_settings"`
}

type DefaultUserSettingsCanvasAppSettingsDirectDeploySettingsState struct {
	Status string `json:"status"`
}

type DefaultUserSettingsCanvasAppSettingsIdentityProviderOauthSettingsState struct {
	DataSourceName string `json:"data_source_name"`
	SecretArn      string `json:"secret_arn"`
	Status         string `json:"status"`
}

type DefaultUserSettingsCanvasAppSettingsKendraSettingsState struct {
	Status string `json:"status"`
}

type DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsState struct {
	CrossAccountModelRegisterRoleArn string `json:"cross_account_model_register_role_arn"`
	Status                           string `json:"status"`
}

type DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState struct {
	AmazonForecastRoleArn string `json:"amazon_forecast_role_arn"`
	Status                string `json:"status"`
}

type DefaultUserSettingsCanvasAppSettingsWorkspaceSettingsState struct {
	S3ArtifactPath string `json:"s3_artifact_path"`
	S3KmsKeyId     string `json:"s3_kms_key_id"`
}

type DefaultUserSettingsCodeEditorAppSettingsState struct {
	LifecycleConfigArns []string                                                           `json:"lifecycle_config_arns"`
	DefaultResourceSpec []DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsCustomFileSystemConfigState struct {
	EfsFileSystemConfig []DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigState `json:"efs_file_system_config"`
}

type DefaultUserSettingsCustomFileSystemConfigEfsFileSystemConfigState struct {
	FileSystemId   string `json:"file_system_id"`
	FileSystemPath string `json:"file_system_path"`
}

type DefaultUserSettingsCustomPosixUserConfigState struct {
	Gid float64 `json:"gid"`
	Uid float64 `json:"uid"`
}

type DefaultUserSettingsJupyterLabAppSettingsState struct {
	LifecycleConfigArns []string                                                           `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryState      `json:"code_repository"`
	CustomImage         []DefaultUserSettingsJupyterLabAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsJupyterLabAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultUserSettingsJupyterLabAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                              `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                              `json:"lifecycle_config_arns"`
	CustomImage         []DefaultUserSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsRSessionAppSettingsState struct {
	CustomImage         []DefaultUserSettingsRSessionAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsRSessionAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsRStudioServerProAppSettingsState struct {
	AccessStatus string `json:"access_status"`
	UserGroup    string `json:"user_group"`
}

type DefaultUserSettingsSharingSettingsState struct {
	NotebookOutputOption string `json:"notebook_output_option"`
	S3KmsKeyId           string `json:"s3_kms_key_id"`
	S3OutputPath         string `json:"s3_output_path"`
}

type DefaultUserSettingsSpaceStorageSettingsState struct {
	DefaultEbsStorageSettings []DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsState `json:"default_ebs_storage_settings"`
}

type DefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsState struct {
	DefaultEbsVolumeSizeInGb float64 `json:"default_ebs_volume_size_in_gb"`
	MaximumEbsVolumeSizeInGb float64 `json:"maximum_ebs_volume_size_in_gb"`
}

type DefaultUserSettingsTensorBoardAppSettingsState struct {
	DefaultResourceSpec []DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type DomainSettingsState struct {
	ExecutionRoleIdentityConfig    string                                              `json:"execution_role_identity_config"`
	SecurityGroupIds               []string                                            `json:"security_group_ids"`
	RStudioServerProDomainSettings []DomainSettingsRStudioServerProDomainSettingsState `json:"r_studio_server_pro_domain_settings"`
}

type DomainSettingsRStudioServerProDomainSettingsState struct {
	DomainExecutionRoleArn   string                                                                 `json:"domain_execution_role_arn"`
	RStudioConnectUrl        string                                                                 `json:"r_studio_connect_url"`
	RStudioPackageManagerUrl string                                                                 `json:"r_studio_package_manager_url"`
	DefaultResourceSpec      []DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type RetentionPolicyState struct {
	HomeEfsFileSystem string `json:"home_efs_file_system"`
}
