// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssm_maintenance_window_target

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ssm_maintenance_window_target.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSsmMaintenanceWindowTargetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asmwt *Resource) Type() string {
	return "aws_ssm_maintenance_window_target"
}

// LocalName returns the local name for [Resource].
func (asmwt *Resource) LocalName() string {
	return asmwt.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asmwt *Resource) Configuration() interface{} {
	return asmwt.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asmwt *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asmwt)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asmwt *Resource) Dependencies() terra.Dependencies {
	return asmwt.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asmwt *Resource) LifecycleManagement() *terra.Lifecycle {
	return asmwt.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asmwt *Resource) Attributes() awsSsmMaintenanceWindowTargetAttributes {
	return awsSsmMaintenanceWindowTargetAttributes{ref: terra.ReferenceResource(asmwt)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asmwt *Resource) ImportState(state io.Reader) error {
	asmwt.state = &awsSsmMaintenanceWindowTargetState{}
	if err := json.NewDecoder(state).Decode(asmwt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asmwt.Type(), asmwt.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asmwt *Resource) State() (*awsSsmMaintenanceWindowTargetState, bool) {
	return asmwt.state, asmwt.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asmwt *Resource) StateMust() *awsSsmMaintenanceWindowTargetState {
	if asmwt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asmwt.Type(), asmwt.LocalName()))
	}
	return asmwt.state
}

// Args contains the configurations for aws_ssm_maintenance_window_target.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// OwnerInformation: string, optional
	OwnerInformation terra.StringValue `hcl:"owner_information,attr"`
	// ResourceType: string, required
	ResourceType terra.StringValue `hcl:"resource_type,attr" validate:"required"`
	// WindowId: string, required
	WindowId terra.StringValue `hcl:"window_id,attr" validate:"required"`
	// Targets: min=1,max=5
	Targets []Targets `hcl:"targets,block" validate:"min=1,max=5"`
}

type awsSsmMaintenanceWindowTargetAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of aws_ssm_maintenance_window_target.
func (asmwt awsSsmMaintenanceWindowTargetAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asmwt.ref.Append("description"))
}

// Id returns a reference to field id of aws_ssm_maintenance_window_target.
func (asmwt awsSsmMaintenanceWindowTargetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asmwt.ref.Append("id"))
}

// Name returns a reference to field name of aws_ssm_maintenance_window_target.
func (asmwt awsSsmMaintenanceWindowTargetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asmwt.ref.Append("name"))
}

// OwnerInformation returns a reference to field owner_information of aws_ssm_maintenance_window_target.
func (asmwt awsSsmMaintenanceWindowTargetAttributes) OwnerInformation() terra.StringValue {
	return terra.ReferenceAsString(asmwt.ref.Append("owner_information"))
}

// ResourceType returns a reference to field resource_type of aws_ssm_maintenance_window_target.
func (asmwt awsSsmMaintenanceWindowTargetAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(asmwt.ref.Append("resource_type"))
}

// WindowId returns a reference to field window_id of aws_ssm_maintenance_window_target.
func (asmwt awsSsmMaintenanceWindowTargetAttributes) WindowId() terra.StringValue {
	return terra.ReferenceAsString(asmwt.ref.Append("window_id"))
}

func (asmwt awsSsmMaintenanceWindowTargetAttributes) Targets() terra.ListValue[TargetsAttributes] {
	return terra.ReferenceAsList[TargetsAttributes](asmwt.ref.Append("targets"))
}

type awsSsmMaintenanceWindowTargetState struct {
	Description      string         `json:"description"`
	Id               string         `json:"id"`
	Name             string         `json:"name"`
	OwnerInformation string         `json:"owner_information"`
	ResourceType     string         `json:"resource_type"`
	WindowId         string         `json:"window_id"`
	Targets          []TargetsState `json:"targets"`
}
