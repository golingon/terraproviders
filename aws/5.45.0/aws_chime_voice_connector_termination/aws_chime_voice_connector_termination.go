// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_chime_voice_connector_termination

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_chime_voice_connector_termination.
type Resource struct {
	Name      string
	Args      Args
	state     *awsChimeVoiceConnectorTerminationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acvct *Resource) Type() string {
	return "aws_chime_voice_connector_termination"
}

// LocalName returns the local name for [Resource].
func (acvct *Resource) LocalName() string {
	return acvct.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acvct *Resource) Configuration() interface{} {
	return acvct.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acvct *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acvct)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acvct *Resource) Dependencies() terra.Dependencies {
	return acvct.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acvct *Resource) LifecycleManagement() *terra.Lifecycle {
	return acvct.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acvct *Resource) Attributes() awsChimeVoiceConnectorTerminationAttributes {
	return awsChimeVoiceConnectorTerminationAttributes{ref: terra.ReferenceResource(acvct)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acvct *Resource) ImportState(state io.Reader) error {
	acvct.state = &awsChimeVoiceConnectorTerminationState{}
	if err := json.NewDecoder(state).Decode(acvct.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acvct.Type(), acvct.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acvct *Resource) State() (*awsChimeVoiceConnectorTerminationState, bool) {
	return acvct.state, acvct.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acvct *Resource) StateMust() *awsChimeVoiceConnectorTerminationState {
	if acvct.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acvct.Type(), acvct.LocalName()))
	}
	return acvct.state
}

// Args contains the configurations for aws_chime_voice_connector_termination.
type Args struct {
	// CallingRegions: set of string, required
	CallingRegions terra.SetValue[terra.StringValue] `hcl:"calling_regions,attr" validate:"required"`
	// CidrAllowList: set of string, required
	CidrAllowList terra.SetValue[terra.StringValue] `hcl:"cidr_allow_list,attr" validate:"required"`
	// CpsLimit: number, optional
	CpsLimit terra.NumberValue `hcl:"cps_limit,attr"`
	// DefaultPhoneNumber: string, optional
	DefaultPhoneNumber terra.StringValue `hcl:"default_phone_number,attr"`
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VoiceConnectorId: string, required
	VoiceConnectorId terra.StringValue `hcl:"voice_connector_id,attr" validate:"required"`
}

type awsChimeVoiceConnectorTerminationAttributes struct {
	ref terra.Reference
}

// CallingRegions returns a reference to field calling_regions of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) CallingRegions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acvct.ref.Append("calling_regions"))
}

// CidrAllowList returns a reference to field cidr_allow_list of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) CidrAllowList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acvct.ref.Append("cidr_allow_list"))
}

// CpsLimit returns a reference to field cps_limit of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) CpsLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(acvct.ref.Append("cps_limit"))
}

// DefaultPhoneNumber returns a reference to field default_phone_number of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) DefaultPhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(acvct.ref.Append("default_phone_number"))
}

// Disabled returns a reference to field disabled of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(acvct.ref.Append("disabled"))
}

// Id returns a reference to field id of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acvct.ref.Append("id"))
}

// VoiceConnectorId returns a reference to field voice_connector_id of aws_chime_voice_connector_termination.
func (acvct awsChimeVoiceConnectorTerminationAttributes) VoiceConnectorId() terra.StringValue {
	return terra.ReferenceAsString(acvct.ref.Append("voice_connector_id"))
}

type awsChimeVoiceConnectorTerminationState struct {
	CallingRegions     []string `json:"calling_regions"`
	CidrAllowList      []string `json:"cidr_allow_list"`
	CpsLimit           float64  `json:"cps_limit"`
	DefaultPhoneNumber string   `json:"default_phone_number"`
	Disabled           bool     `json:"disabled"`
	Id                 string   `json:"id"`
	VoiceConnectorId   string   `json:"voice_connector_id"`
}
