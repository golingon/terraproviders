// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_public_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudfront_public_key.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudfrontPublicKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acpk *Resource) Type() string {
	return "aws_cloudfront_public_key"
}

// LocalName returns the local name for [Resource].
func (acpk *Resource) LocalName() string {
	return acpk.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acpk *Resource) Configuration() interface{} {
	return acpk.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acpk *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acpk)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acpk *Resource) Dependencies() terra.Dependencies {
	return acpk.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acpk *Resource) LifecycleManagement() *terra.Lifecycle {
	return acpk.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acpk *Resource) Attributes() awsCloudfrontPublicKeyAttributes {
	return awsCloudfrontPublicKeyAttributes{ref: terra.ReferenceResource(acpk)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acpk *Resource) ImportState(state io.Reader) error {
	acpk.state = &awsCloudfrontPublicKeyState{}
	if err := json.NewDecoder(state).Decode(acpk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acpk.Type(), acpk.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acpk *Resource) State() (*awsCloudfrontPublicKeyState, bool) {
	return acpk.state, acpk.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acpk *Resource) StateMust() *awsCloudfrontPublicKeyState {
	if acpk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acpk.Type(), acpk.LocalName()))
	}
	return acpk.state
}

// Args contains the configurations for aws_cloudfront_public_key.
type Args struct {
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// EncodedKey: string, required
	EncodedKey terra.StringValue `hcl:"encoded_key,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
}

type awsCloudfrontPublicKeyAttributes struct {
	ref terra.Reference
}

// CallerReference returns a reference to field caller_reference of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) CallerReference() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("caller_reference"))
}

// Comment returns a reference to field comment of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) Comment() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("comment"))
}

// EncodedKey returns a reference to field encoded_key of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) EncodedKey() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("encoded_key"))
}

// Etag returns a reference to field etag of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("etag"))
}

// Id returns a reference to field id of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("id"))
}

// Name returns a reference to field name of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("name"))
}

// NamePrefix returns a reference to field name_prefix of aws_cloudfront_public_key.
func (acpk awsCloudfrontPublicKeyAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(acpk.ref.Append("name_prefix"))
}

type awsCloudfrontPublicKeyState struct {
	CallerReference string `json:"caller_reference"`
	Comment         string `json:"comment"`
	EncodedKey      string `json:"encoded_key"`
	Etag            string `json:"etag"`
	Id              string `json:"id"`
	Name            string `json:"name"`
	NamePrefix      string `json:"name_prefix"`
}
