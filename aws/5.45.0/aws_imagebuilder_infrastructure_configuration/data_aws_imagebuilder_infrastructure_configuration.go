// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_infrastructure_configuration

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_imagebuilder_infrastructure_configuration.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aiic *DataSource) DataSource() string {
	return "aws_imagebuilder_infrastructure_configuration"
}

// LocalName returns the local name for [DataSource].
func (aiic *DataSource) LocalName() string {
	return aiic.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aiic *DataSource) Configuration() interface{} {
	return aiic.Args
}

// Attributes returns the attributes for [DataSource].
func (aiic *DataSource) Attributes() dataAwsImagebuilderInfrastructureConfigurationAttributes {
	return dataAwsImagebuilderInfrastructureConfigurationAttributes{ref: terra.ReferenceDataSource(aiic)}
}

// DataArgs contains the configurations for aws_imagebuilder_infrastructure_configuration.
type DataArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceTags: map of string, optional
	ResourceTags terra.MapValue[terra.StringValue] `hcl:"resource_tags,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsImagebuilderInfrastructureConfigurationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("arn"))
}

// DateCreated returns a reference to field date_created of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) DateCreated() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("date_created"))
}

// DateUpdated returns a reference to field date_updated of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) DateUpdated() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("date_updated"))
}

// Description returns a reference to field description of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("description"))
}

// Id returns a reference to field id of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("id"))
}

// InstanceProfileName returns a reference to field instance_profile_name of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) InstanceProfileName() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("instance_profile_name"))
}

// InstanceTypes returns a reference to field instance_types of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) InstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiic.ref.Append("instance_types"))
}

// KeyPair returns a reference to field key_pair of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) KeyPair() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("key_pair"))
}

// Name returns a reference to field name of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("name"))
}

// ResourceTags returns a reference to field resource_tags of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) ResourceTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aiic.ref.Append("resource_tags"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiic.ref.Append("security_group_ids"))
}

// SnsTopicArn returns a reference to field sns_topic_arn of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) SnsTopicArn() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("sns_topic_arn"))
}

// SubnetId returns a reference to field subnet_id of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("subnet_id"))
}

// Tags returns a reference to field tags of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aiic.ref.Append("tags"))
}

// TerminateInstanceOnFailure returns a reference to field terminate_instance_on_failure of aws_imagebuilder_infrastructure_configuration.
func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) TerminateInstanceOnFailure() terra.BoolValue {
	return terra.ReferenceAsBool(aiic.ref.Append("terminate_instance_on_failure"))
}

func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) InstanceMetadataOptions() terra.ListValue[DataInstanceMetadataOptionsAttributes] {
	return terra.ReferenceAsList[DataInstanceMetadataOptionsAttributes](aiic.ref.Append("instance_metadata_options"))
}

func (aiic dataAwsImagebuilderInfrastructureConfigurationAttributes) Logging() terra.ListValue[DataLoggingAttributes] {
	return terra.ReferenceAsList[DataLoggingAttributes](aiic.ref.Append("logging"))
}
