// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_user_hierarchy_group

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_connect_user_hierarchy_group.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acuhg *DataSource) DataSource() string {
	return "aws_connect_user_hierarchy_group"
}

// LocalName returns the local name for [DataSource].
func (acuhg *DataSource) LocalName() string {
	return acuhg.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acuhg *DataSource) Configuration() interface{} {
	return acuhg.Args
}

// Attributes returns the attributes for [DataSource].
func (acuhg *DataSource) Attributes() dataAwsConnectUserHierarchyGroupAttributes {
	return dataAwsConnectUserHierarchyGroupAttributes{ref: terra.ReferenceDataSource(acuhg)}
}

// DataArgs contains the configurations for aws_connect_user_hierarchy_group.
type DataArgs struct {
	// HierarchyGroupId: string, optional
	HierarchyGroupId terra.StringValue `hcl:"hierarchy_group_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsConnectUserHierarchyGroupAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acuhg.ref.Append("arn"))
}

// HierarchyGroupId returns a reference to field hierarchy_group_id of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) HierarchyGroupId() terra.StringValue {
	return terra.ReferenceAsString(acuhg.ref.Append("hierarchy_group_id"))
}

// Id returns a reference to field id of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acuhg.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(acuhg.ref.Append("instance_id"))
}

// LevelId returns a reference to field level_id of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) LevelId() terra.StringValue {
	return terra.ReferenceAsString(acuhg.ref.Append("level_id"))
}

// Name returns a reference to field name of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acuhg.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_connect_user_hierarchy_group.
func (acuhg dataAwsConnectUserHierarchyGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acuhg.ref.Append("tags"))
}

func (acuhg dataAwsConnectUserHierarchyGroupAttributes) HierarchyPath() terra.ListValue[DataHierarchyPathAttributes] {
	return terra.ReferenceAsList[DataHierarchyPathAttributes](acuhg.ref.Append("hierarchy_path"))
}
