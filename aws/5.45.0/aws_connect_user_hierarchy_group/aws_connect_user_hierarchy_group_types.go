// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_user_hierarchy_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type HierarchyPathAttributes struct {
	ref terra.Reference
}

func (hp HierarchyPathAttributes) InternalRef() (terra.Reference, error) {
	return hp.ref, nil
}

func (hp HierarchyPathAttributes) InternalWithRef(ref terra.Reference) HierarchyPathAttributes {
	return HierarchyPathAttributes{ref: ref}
}

func (hp HierarchyPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hp.ref.InternalTokens()
}

func (hp HierarchyPathAttributes) LevelFive() terra.ListValue[HierarchyPathLevelFiveAttributes] {
	return terra.ReferenceAsList[HierarchyPathLevelFiveAttributes](hp.ref.Append("level_five"))
}

func (hp HierarchyPathAttributes) LevelFour() terra.ListValue[HierarchyPathLevelFourAttributes] {
	return terra.ReferenceAsList[HierarchyPathLevelFourAttributes](hp.ref.Append("level_four"))
}

func (hp HierarchyPathAttributes) LevelOne() terra.ListValue[HierarchyPathLevelOneAttributes] {
	return terra.ReferenceAsList[HierarchyPathLevelOneAttributes](hp.ref.Append("level_one"))
}

func (hp HierarchyPathAttributes) LevelThree() terra.ListValue[HierarchyPathLevelThreeAttributes] {
	return terra.ReferenceAsList[HierarchyPathLevelThreeAttributes](hp.ref.Append("level_three"))
}

func (hp HierarchyPathAttributes) LevelTwo() terra.ListValue[HierarchyPathLevelTwoAttributes] {
	return terra.ReferenceAsList[HierarchyPathLevelTwoAttributes](hp.ref.Append("level_two"))
}

type HierarchyPathLevelFiveAttributes struct {
	ref terra.Reference
}

func (lf HierarchyPathLevelFiveAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf HierarchyPathLevelFiveAttributes) InternalWithRef(ref terra.Reference) HierarchyPathLevelFiveAttributes {
	return HierarchyPathLevelFiveAttributes{ref: ref}
}

func (lf HierarchyPathLevelFiveAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf HierarchyPathLevelFiveAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf HierarchyPathLevelFiveAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf HierarchyPathLevelFiveAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type HierarchyPathLevelFourAttributes struct {
	ref terra.Reference
}

func (lf HierarchyPathLevelFourAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf HierarchyPathLevelFourAttributes) InternalWithRef(ref terra.Reference) HierarchyPathLevelFourAttributes {
	return HierarchyPathLevelFourAttributes{ref: ref}
}

func (lf HierarchyPathLevelFourAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf HierarchyPathLevelFourAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf HierarchyPathLevelFourAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf HierarchyPathLevelFourAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type HierarchyPathLevelOneAttributes struct {
	ref terra.Reference
}

func (lo HierarchyPathLevelOneAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo HierarchyPathLevelOneAttributes) InternalWithRef(ref terra.Reference) HierarchyPathLevelOneAttributes {
	return HierarchyPathLevelOneAttributes{ref: ref}
}

func (lo HierarchyPathLevelOneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo HierarchyPathLevelOneAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("arn"))
}

func (lo HierarchyPathLevelOneAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("id"))
}

func (lo HierarchyPathLevelOneAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("name"))
}

type HierarchyPathLevelThreeAttributes struct {
	ref terra.Reference
}

func (lt HierarchyPathLevelThreeAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt HierarchyPathLevelThreeAttributes) InternalWithRef(ref terra.Reference) HierarchyPathLevelThreeAttributes {
	return HierarchyPathLevelThreeAttributes{ref: ref}
}

func (lt HierarchyPathLevelThreeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt HierarchyPathLevelThreeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt HierarchyPathLevelThreeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt HierarchyPathLevelThreeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type HierarchyPathLevelTwoAttributes struct {
	ref terra.Reference
}

func (lt HierarchyPathLevelTwoAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt HierarchyPathLevelTwoAttributes) InternalWithRef(ref terra.Reference) HierarchyPathLevelTwoAttributes {
	return HierarchyPathLevelTwoAttributes{ref: ref}
}

func (lt HierarchyPathLevelTwoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt HierarchyPathLevelTwoAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt HierarchyPathLevelTwoAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt HierarchyPathLevelTwoAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type HierarchyPathState struct {
	LevelFive  []HierarchyPathLevelFiveState  `json:"level_five"`
	LevelFour  []HierarchyPathLevelFourState  `json:"level_four"`
	LevelOne   []HierarchyPathLevelOneState   `json:"level_one"`
	LevelThree []HierarchyPathLevelThreeState `json:"level_three"`
	LevelTwo   []HierarchyPathLevelTwoState   `json:"level_two"`
}

type HierarchyPathLevelFiveState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelFourState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelOneState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelThreeState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelTwoState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
