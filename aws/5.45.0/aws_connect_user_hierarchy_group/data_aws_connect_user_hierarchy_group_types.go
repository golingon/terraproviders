// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_user_hierarchy_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataHierarchyPathAttributes struct {
	ref terra.Reference
}

func (hp DataHierarchyPathAttributes) InternalRef() (terra.Reference, error) {
	return hp.ref, nil
}

func (hp DataHierarchyPathAttributes) InternalWithRef(ref terra.Reference) DataHierarchyPathAttributes {
	return DataHierarchyPathAttributes{ref: ref}
}

func (hp DataHierarchyPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hp.ref.InternalTokens()
}

func (hp DataHierarchyPathAttributes) LevelFive() terra.ListValue[DataHierarchyPathLevelFiveAttributes] {
	return terra.ReferenceAsList[DataHierarchyPathLevelFiveAttributes](hp.ref.Append("level_five"))
}

func (hp DataHierarchyPathAttributes) LevelFour() terra.ListValue[DataHierarchyPathLevelFourAttributes] {
	return terra.ReferenceAsList[DataHierarchyPathLevelFourAttributes](hp.ref.Append("level_four"))
}

func (hp DataHierarchyPathAttributes) LevelOne() terra.ListValue[DataHierarchyPathLevelOneAttributes] {
	return terra.ReferenceAsList[DataHierarchyPathLevelOneAttributes](hp.ref.Append("level_one"))
}

func (hp DataHierarchyPathAttributes) LevelThree() terra.ListValue[DataHierarchyPathLevelThreeAttributes] {
	return terra.ReferenceAsList[DataHierarchyPathLevelThreeAttributes](hp.ref.Append("level_three"))
}

func (hp DataHierarchyPathAttributes) LevelTwo() terra.ListValue[DataHierarchyPathLevelTwoAttributes] {
	return terra.ReferenceAsList[DataHierarchyPathLevelTwoAttributes](hp.ref.Append("level_two"))
}

type DataHierarchyPathLevelFiveAttributes struct {
	ref terra.Reference
}

func (lf DataHierarchyPathLevelFiveAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DataHierarchyPathLevelFiveAttributes) InternalWithRef(ref terra.Reference) DataHierarchyPathLevelFiveAttributes {
	return DataHierarchyPathLevelFiveAttributes{ref: ref}
}

func (lf DataHierarchyPathLevelFiveAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DataHierarchyPathLevelFiveAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf DataHierarchyPathLevelFiveAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf DataHierarchyPathLevelFiveAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type DataHierarchyPathLevelFourAttributes struct {
	ref terra.Reference
}

func (lf DataHierarchyPathLevelFourAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DataHierarchyPathLevelFourAttributes) InternalWithRef(ref terra.Reference) DataHierarchyPathLevelFourAttributes {
	return DataHierarchyPathLevelFourAttributes{ref: ref}
}

func (lf DataHierarchyPathLevelFourAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DataHierarchyPathLevelFourAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf DataHierarchyPathLevelFourAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf DataHierarchyPathLevelFourAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type DataHierarchyPathLevelOneAttributes struct {
	ref terra.Reference
}

func (lo DataHierarchyPathLevelOneAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo DataHierarchyPathLevelOneAttributes) InternalWithRef(ref terra.Reference) DataHierarchyPathLevelOneAttributes {
	return DataHierarchyPathLevelOneAttributes{ref: ref}
}

func (lo DataHierarchyPathLevelOneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo DataHierarchyPathLevelOneAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("arn"))
}

func (lo DataHierarchyPathLevelOneAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("id"))
}

func (lo DataHierarchyPathLevelOneAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("name"))
}

type DataHierarchyPathLevelThreeAttributes struct {
	ref terra.Reference
}

func (lt DataHierarchyPathLevelThreeAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DataHierarchyPathLevelThreeAttributes) InternalWithRef(ref terra.Reference) DataHierarchyPathLevelThreeAttributes {
	return DataHierarchyPathLevelThreeAttributes{ref: ref}
}

func (lt DataHierarchyPathLevelThreeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DataHierarchyPathLevelThreeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt DataHierarchyPathLevelThreeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DataHierarchyPathLevelThreeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type DataHierarchyPathLevelTwoAttributes struct {
	ref terra.Reference
}

func (lt DataHierarchyPathLevelTwoAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DataHierarchyPathLevelTwoAttributes) InternalWithRef(ref terra.Reference) DataHierarchyPathLevelTwoAttributes {
	return DataHierarchyPathLevelTwoAttributes{ref: ref}
}

func (lt DataHierarchyPathLevelTwoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DataHierarchyPathLevelTwoAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt DataHierarchyPathLevelTwoAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DataHierarchyPathLevelTwoAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type DataHierarchyPathState struct {
	LevelFive  []DataHierarchyPathLevelFiveState  `json:"level_five"`
	LevelFour  []DataHierarchyPathLevelFourState  `json:"level_four"`
	LevelOne   []DataHierarchyPathLevelOneState   `json:"level_one"`
	LevelThree []DataHierarchyPathLevelThreeState `json:"level_three"`
	LevelTwo   []DataHierarchyPathLevelTwoState   `json:"level_two"`
}

type DataHierarchyPathLevelFiveState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyPathLevelFourState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyPathLevelOneState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyPathLevelThreeState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyPathLevelTwoState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
