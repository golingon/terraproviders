// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkmanager_attachment_accepter

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_networkmanager_attachment_accepter.
type Resource struct {
	Name      string
	Args      Args
	state     *awsNetworkmanagerAttachmentAccepterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (anaa *Resource) Type() string {
	return "aws_networkmanager_attachment_accepter"
}

// LocalName returns the local name for [Resource].
func (anaa *Resource) LocalName() string {
	return anaa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (anaa *Resource) Configuration() interface{} {
	return anaa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (anaa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(anaa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (anaa *Resource) Dependencies() terra.Dependencies {
	return anaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (anaa *Resource) LifecycleManagement() *terra.Lifecycle {
	return anaa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (anaa *Resource) Attributes() awsNetworkmanagerAttachmentAccepterAttributes {
	return awsNetworkmanagerAttachmentAccepterAttributes{ref: terra.ReferenceResource(anaa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (anaa *Resource) ImportState(state io.Reader) error {
	anaa.state = &awsNetworkmanagerAttachmentAccepterState{}
	if err := json.NewDecoder(state).Decode(anaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", anaa.Type(), anaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (anaa *Resource) State() (*awsNetworkmanagerAttachmentAccepterState, bool) {
	return anaa.state, anaa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (anaa *Resource) StateMust() *awsNetworkmanagerAttachmentAccepterState {
	if anaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", anaa.Type(), anaa.LocalName()))
	}
	return anaa.state
}

// Args contains the configurations for aws_networkmanager_attachment_accepter.
type Args struct {
	// AttachmentId: string, required
	AttachmentId terra.StringValue `hcl:"attachment_id,attr" validate:"required"`
	// AttachmentType: string, required
	AttachmentType terra.StringValue `hcl:"attachment_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsNetworkmanagerAttachmentAccepterAttributes struct {
	ref terra.Reference
}

// AttachmentId returns a reference to field attachment_id of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("attachment_id"))
}

// AttachmentPolicyRuleNumber returns a reference to field attachment_policy_rule_number of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) AttachmentPolicyRuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(anaa.ref.Append("attachment_policy_rule_number"))
}

// AttachmentType returns a reference to field attachment_type of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) AttachmentType() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("attachment_type"))
}

// CoreNetworkArn returns a reference to field core_network_arn of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) CoreNetworkArn() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("core_network_arn"))
}

// CoreNetworkId returns a reference to field core_network_id of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) CoreNetworkId() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("core_network_id"))
}

// EdgeLocation returns a reference to field edge_location of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) EdgeLocation() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("edge_location"))
}

// Id returns a reference to field id of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("id"))
}

// OwnerAccountId returns a reference to field owner_account_id of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) OwnerAccountId() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("owner_account_id"))
}

// ResourceArn returns a reference to field resource_arn of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("resource_arn"))
}

// SegmentName returns a reference to field segment_name of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) SegmentName() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("segment_name"))
}

// State returns a reference to field state of aws_networkmanager_attachment_accepter.
func (anaa awsNetworkmanagerAttachmentAccepterAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(anaa.ref.Append("state"))
}

func (anaa awsNetworkmanagerAttachmentAccepterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](anaa.ref.Append("timeouts"))
}

type awsNetworkmanagerAttachmentAccepterState struct {
	AttachmentId               string         `json:"attachment_id"`
	AttachmentPolicyRuleNumber float64        `json:"attachment_policy_rule_number"`
	AttachmentType             string         `json:"attachment_type"`
	CoreNetworkArn             string         `json:"core_network_arn"`
	CoreNetworkId              string         `json:"core_network_id"`
	EdgeLocation               string         `json:"edge_location"`
	Id                         string         `json:"id"`
	OwnerAccountId             string         `json:"owner_account_id"`
	ResourceArn                string         `json:"resource_arn"`
	SegmentName                string         `json:"segment_name"`
	State                      string         `json:"state"`
	Timeouts                   *TimeoutsState `json:"timeouts"`
}
