// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_service_discovery_http_namespace

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_service_discovery_http_namespace.
type Resource struct {
	Name      string
	Args      Args
	state     *awsServiceDiscoveryHttpNamespaceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asdhn *Resource) Type() string {
	return "aws_service_discovery_http_namespace"
}

// LocalName returns the local name for [Resource].
func (asdhn *Resource) LocalName() string {
	return asdhn.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asdhn *Resource) Configuration() interface{} {
	return asdhn.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asdhn *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asdhn)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asdhn *Resource) Dependencies() terra.Dependencies {
	return asdhn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asdhn *Resource) LifecycleManagement() *terra.Lifecycle {
	return asdhn.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asdhn *Resource) Attributes() awsServiceDiscoveryHttpNamespaceAttributes {
	return awsServiceDiscoveryHttpNamespaceAttributes{ref: terra.ReferenceResource(asdhn)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asdhn *Resource) ImportState(state io.Reader) error {
	asdhn.state = &awsServiceDiscoveryHttpNamespaceState{}
	if err := json.NewDecoder(state).Decode(asdhn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asdhn.Type(), asdhn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asdhn *Resource) State() (*awsServiceDiscoveryHttpNamespaceState, bool) {
	return asdhn.state, asdhn.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asdhn *Resource) StateMust() *awsServiceDiscoveryHttpNamespaceState {
	if asdhn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asdhn.Type(), asdhn.LocalName()))
	}
	return asdhn.state
}

// Args contains the configurations for aws_service_discovery_http_namespace.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}

type awsServiceDiscoveryHttpNamespaceAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asdhn.ref.Append("arn"))
}

// Description returns a reference to field description of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asdhn.ref.Append("description"))
}

// HttpName returns a reference to field http_name of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) HttpName() terra.StringValue {
	return terra.ReferenceAsString(asdhn.ref.Append("http_name"))
}

// Id returns a reference to field id of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asdhn.ref.Append("id"))
}

// Name returns a reference to field name of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asdhn.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asdhn.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_service_discovery_http_namespace.
func (asdhn awsServiceDiscoveryHttpNamespaceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asdhn.ref.Append("tags_all"))
}

type awsServiceDiscoveryHttpNamespaceState struct {
	Arn         string            `json:"arn"`
	Description string            `json:"description"`
	HttpName    string            `json:"http_name"`
	Id          string            `json:"id"`
	Name        string            `json:"name"`
	Tags        map[string]string `json:"tags"`
	TagsAll     map[string]string `json:"tags_all"`
}
