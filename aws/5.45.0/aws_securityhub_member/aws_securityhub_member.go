// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_securityhub_member

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_securityhub_member.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSecurityhubMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asm *Resource) Type() string {
	return "aws_securityhub_member"
}

// LocalName returns the local name for [Resource].
func (asm *Resource) LocalName() string {
	return asm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asm *Resource) Configuration() interface{} {
	return asm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asm *Resource) Dependencies() terra.Dependencies {
	return asm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asm *Resource) LifecycleManagement() *terra.Lifecycle {
	return asm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asm *Resource) Attributes() awsSecurityhubMemberAttributes {
	return awsSecurityhubMemberAttributes{ref: terra.ReferenceResource(asm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asm *Resource) ImportState(state io.Reader) error {
	asm.state = &awsSecurityhubMemberState{}
	if err := json.NewDecoder(state).Decode(asm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asm.Type(), asm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asm *Resource) State() (*awsSecurityhubMemberState, bool) {
	return asm.state, asm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asm *Resource) StateMust() *awsSecurityhubMemberState {
	if asm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asm.Type(), asm.LocalName()))
	}
	return asm.state
}

// Args contains the configurations for aws_securityhub_member.
type Args struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Email: string, optional
	Email terra.StringValue `hcl:"email,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Invite: bool, optional
	Invite terra.BoolValue `hcl:"invite,attr"`
}

type awsSecurityhubMemberAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_securityhub_member.
func (asm awsSecurityhubMemberAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(asm.ref.Append("account_id"))
}

// Email returns a reference to field email of aws_securityhub_member.
func (asm awsSecurityhubMemberAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(asm.ref.Append("email"))
}

// Id returns a reference to field id of aws_securityhub_member.
func (asm awsSecurityhubMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asm.ref.Append("id"))
}

// Invite returns a reference to field invite of aws_securityhub_member.
func (asm awsSecurityhubMemberAttributes) Invite() terra.BoolValue {
	return terra.ReferenceAsBool(asm.ref.Append("invite"))
}

// MasterId returns a reference to field master_id of aws_securityhub_member.
func (asm awsSecurityhubMemberAttributes) MasterId() terra.StringValue {
	return terra.ReferenceAsString(asm.ref.Append("master_id"))
}

// MemberStatus returns a reference to field member_status of aws_securityhub_member.
func (asm awsSecurityhubMemberAttributes) MemberStatus() terra.StringValue {
	return terra.ReferenceAsString(asm.ref.Append("member_status"))
}

type awsSecurityhubMemberState struct {
	AccountId    string `json:"account_id"`
	Email        string `json:"email"`
	Id           string `json:"id"`
	Invite       bool   `json:"invite"`
	MasterId     string `json:"master_id"`
	MemberStatus string `json:"member_status"`
}
