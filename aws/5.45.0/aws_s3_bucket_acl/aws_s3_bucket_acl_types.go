// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3_bucket_acl

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccessControlPolicy struct {
	// AccessControlPolicyGrant: min=0
	Grant []AccessControlPolicyGrant `hcl:"grant,block" validate:"min=0"`
	// AccessControlPolicyOwner: required
	Owner *AccessControlPolicyOwner `hcl:"owner,block" validate:"required"`
}

type AccessControlPolicyGrant struct {
	// Permission: string, required
	Permission terra.StringValue `hcl:"permission,attr" validate:"required"`
	// AccessControlPolicyGrantGrantee: optional
	Grantee *AccessControlPolicyGrantGrantee `hcl:"grantee,block"`
}

type AccessControlPolicyGrantGrantee struct {
	// EmailAddress: string, optional
	EmailAddress terra.StringValue `hcl:"email_address,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Uri: string, optional
	Uri terra.StringValue `hcl:"uri,attr"`
}

type AccessControlPolicyOwner struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
}

type AccessControlPolicyAttributes struct {
	ref terra.Reference
}

func (acp AccessControlPolicyAttributes) InternalRef() (terra.Reference, error) {
	return acp.ref, nil
}

func (acp AccessControlPolicyAttributes) InternalWithRef(ref terra.Reference) AccessControlPolicyAttributes {
	return AccessControlPolicyAttributes{ref: ref}
}

func (acp AccessControlPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acp.ref.InternalTokens()
}

func (acp AccessControlPolicyAttributes) Grant() terra.SetValue[AccessControlPolicyGrantAttributes] {
	return terra.ReferenceAsSet[AccessControlPolicyGrantAttributes](acp.ref.Append("grant"))
}

func (acp AccessControlPolicyAttributes) Owner() terra.ListValue[AccessControlPolicyOwnerAttributes] {
	return terra.ReferenceAsList[AccessControlPolicyOwnerAttributes](acp.ref.Append("owner"))
}

type AccessControlPolicyGrantAttributes struct {
	ref terra.Reference
}

func (g AccessControlPolicyGrantAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g AccessControlPolicyGrantAttributes) InternalWithRef(ref terra.Reference) AccessControlPolicyGrantAttributes {
	return AccessControlPolicyGrantAttributes{ref: ref}
}

func (g AccessControlPolicyGrantAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g AccessControlPolicyGrantAttributes) Permission() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("permission"))
}

func (g AccessControlPolicyGrantAttributes) Grantee() terra.ListValue[AccessControlPolicyGrantGranteeAttributes] {
	return terra.ReferenceAsList[AccessControlPolicyGrantGranteeAttributes](g.ref.Append("grantee"))
}

type AccessControlPolicyGrantGranteeAttributes struct {
	ref terra.Reference
}

func (g AccessControlPolicyGrantGranteeAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g AccessControlPolicyGrantGranteeAttributes) InternalWithRef(ref terra.Reference) AccessControlPolicyGrantGranteeAttributes {
	return AccessControlPolicyGrantGranteeAttributes{ref: ref}
}

func (g AccessControlPolicyGrantGranteeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g AccessControlPolicyGrantGranteeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("display_name"))
}

func (g AccessControlPolicyGrantGranteeAttributes) EmailAddress() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("email_address"))
}

func (g AccessControlPolicyGrantGranteeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("id"))
}

func (g AccessControlPolicyGrantGranteeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("type"))
}

func (g AccessControlPolicyGrantGranteeAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("uri"))
}

type AccessControlPolicyOwnerAttributes struct {
	ref terra.Reference
}

func (o AccessControlPolicyOwnerAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o AccessControlPolicyOwnerAttributes) InternalWithRef(ref terra.Reference) AccessControlPolicyOwnerAttributes {
	return AccessControlPolicyOwnerAttributes{ref: ref}
}

func (o AccessControlPolicyOwnerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o AccessControlPolicyOwnerAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("display_name"))
}

func (o AccessControlPolicyOwnerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("id"))
}

type AccessControlPolicyState struct {
	Grant []AccessControlPolicyGrantState `json:"grant"`
	Owner []AccessControlPolicyOwnerState `json:"owner"`
}

type AccessControlPolicyGrantState struct {
	Permission string                                 `json:"permission"`
	Grantee    []AccessControlPolicyGrantGranteeState `json:"grantee"`
}

type AccessControlPolicyGrantGranteeState struct {
	DisplayName  string `json:"display_name"`
	EmailAddress string `json:"email_address"`
	Id           string `json:"id"`
	Type         string `json:"type"`
	Uri          string `json:"uri"`
}

type AccessControlPolicyOwnerState struct {
	DisplayName string `json:"display_name"`
	Id          string `json:"id"`
}
