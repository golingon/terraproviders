// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ip_ranges

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ip_ranges.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (air *DataSource) DataSource() string {
	return "aws_ip_ranges"
}

// LocalName returns the local name for [DataSource].
func (air *DataSource) LocalName() string {
	return air.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (air *DataSource) Configuration() interface{} {
	return air.Args
}

// Attributes returns the attributes for [DataSource].
func (air *DataSource) Attributes() dataAwsIpRangesAttributes {
	return dataAwsIpRangesAttributes{ref: terra.ReferenceDataSource(air)}
}

// DataArgs contains the configurations for aws_ip_ranges.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Regions: set of string, optional
	Regions terra.SetValue[terra.StringValue] `hcl:"regions,attr"`
	// Services: set of string, required
	Services terra.SetValue[terra.StringValue] `hcl:"services,attr" validate:"required"`
	// Url: string, optional
	Url terra.StringValue `hcl:"url,attr"`
}

type dataAwsIpRangesAttributes struct {
	ref terra.Reference
}

// CidrBlocks returns a reference to field cidr_blocks of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) CidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](air.ref.Append("cidr_blocks"))
}

// CreateDate returns a reference to field create_date of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) CreateDate() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("create_date"))
}

// Id returns a reference to field id of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("id"))
}

// Ipv6CidrBlocks returns a reference to field ipv6_cidr_blocks of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) Ipv6CidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](air.ref.Append("ipv6_cidr_blocks"))
}

// Regions returns a reference to field regions of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) Regions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](air.ref.Append("regions"))
}

// Services returns a reference to field services of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) Services() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](air.ref.Append("services"))
}

// SyncToken returns a reference to field sync_token of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) SyncToken() terra.NumberValue {
	return terra.ReferenceAsNumber(air.ref.Append("sync_token"))
}

// Url returns a reference to field url of aws_ip_ranges.
func (air dataAwsIpRangesAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("url"))
}
