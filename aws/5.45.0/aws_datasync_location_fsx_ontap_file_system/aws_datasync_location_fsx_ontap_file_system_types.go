// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_datasync_location_fsx_ontap_file_system

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Protocol struct {
	// ProtocolNfs: optional
	Nfs *ProtocolNfs `hcl:"nfs,block"`
	// ProtocolSmb: optional
	Smb *ProtocolSmb `hcl:"smb,block"`
}

type ProtocolNfs struct {
	// ProtocolNfsMountOptions: required
	MountOptions *ProtocolNfsMountOptions `hcl:"mount_options,block" validate:"required"`
}

type ProtocolNfsMountOptions struct {
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type ProtocolSmb struct {
	// Domain: string, optional
	Domain terra.StringValue `hcl:"domain,attr"`
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// User: string, required
	User terra.StringValue `hcl:"user,attr" validate:"required"`
	// ProtocolSmbMountOptions: required
	MountOptions *ProtocolSmbMountOptions `hcl:"mount_options,block" validate:"required"`
}

type ProtocolSmbMountOptions struct {
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type ProtocolAttributes struct {
	ref terra.Reference
}

func (p ProtocolAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p ProtocolAttributes) InternalWithRef(ref terra.Reference) ProtocolAttributes {
	return ProtocolAttributes{ref: ref}
}

func (p ProtocolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p ProtocolAttributes) Nfs() terra.ListValue[ProtocolNfsAttributes] {
	return terra.ReferenceAsList[ProtocolNfsAttributes](p.ref.Append("nfs"))
}

func (p ProtocolAttributes) Smb() terra.ListValue[ProtocolSmbAttributes] {
	return terra.ReferenceAsList[ProtocolSmbAttributes](p.ref.Append("smb"))
}

type ProtocolNfsAttributes struct {
	ref terra.Reference
}

func (n ProtocolNfsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n ProtocolNfsAttributes) InternalWithRef(ref terra.Reference) ProtocolNfsAttributes {
	return ProtocolNfsAttributes{ref: ref}
}

func (n ProtocolNfsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n ProtocolNfsAttributes) MountOptions() terra.ListValue[ProtocolNfsMountOptionsAttributes] {
	return terra.ReferenceAsList[ProtocolNfsMountOptionsAttributes](n.ref.Append("mount_options"))
}

type ProtocolNfsMountOptionsAttributes struct {
	ref terra.Reference
}

func (mo ProtocolNfsMountOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo ProtocolNfsMountOptionsAttributes) InternalWithRef(ref terra.Reference) ProtocolNfsMountOptionsAttributes {
	return ProtocolNfsMountOptionsAttributes{ref: ref}
}

func (mo ProtocolNfsMountOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo ProtocolNfsMountOptionsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("version"))
}

type ProtocolSmbAttributes struct {
	ref terra.Reference
}

func (s ProtocolSmbAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ProtocolSmbAttributes) InternalWithRef(ref terra.Reference) ProtocolSmbAttributes {
	return ProtocolSmbAttributes{ref: ref}
}

func (s ProtocolSmbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ProtocolSmbAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("domain"))
}

func (s ProtocolSmbAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("password"))
}

func (s ProtocolSmbAttributes) User() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("user"))
}

func (s ProtocolSmbAttributes) MountOptions() terra.ListValue[ProtocolSmbMountOptionsAttributes] {
	return terra.ReferenceAsList[ProtocolSmbMountOptionsAttributes](s.ref.Append("mount_options"))
}

type ProtocolSmbMountOptionsAttributes struct {
	ref terra.Reference
}

func (mo ProtocolSmbMountOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo ProtocolSmbMountOptionsAttributes) InternalWithRef(ref terra.Reference) ProtocolSmbMountOptionsAttributes {
	return ProtocolSmbMountOptionsAttributes{ref: ref}
}

func (mo ProtocolSmbMountOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo ProtocolSmbMountOptionsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("version"))
}

type ProtocolState struct {
	Nfs []ProtocolNfsState `json:"nfs"`
	Smb []ProtocolSmbState `json:"smb"`
}

type ProtocolNfsState struct {
	MountOptions []ProtocolNfsMountOptionsState `json:"mount_options"`
}

type ProtocolNfsMountOptionsState struct {
	Version string `json:"version"`
}

type ProtocolSmbState struct {
	Domain       string                         `json:"domain"`
	Password     string                         `json:"password"`
	User         string                         `json:"user"`
	MountOptions []ProtocolSmbMountOptionsState `json:"mount_options"`
}

type ProtocolSmbMountOptionsState struct {
	Version string `json:"version"`
}
