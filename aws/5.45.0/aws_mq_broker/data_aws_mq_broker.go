// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_mq_broker

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_mq_broker.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (amb *DataSource) DataSource() string {
	return "aws_mq_broker"
}

// LocalName returns the local name for [DataSource].
func (amb *DataSource) LocalName() string {
	return amb.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (amb *DataSource) Configuration() interface{} {
	return amb.Args
}

// Attributes returns the attributes for [DataSource].
func (amb *DataSource) Attributes() dataAwsMqBrokerAttributes {
	return dataAwsMqBrokerAttributes{ref: terra.ReferenceDataSource(amb)}
}

// DataArgs contains the configurations for aws_mq_broker.
type DataArgs struct {
	// BrokerId: string, optional
	BrokerId terra.StringValue `hcl:"broker_id,attr"`
	// BrokerName: string, optional
	BrokerName terra.StringValue `hcl:"broker_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsMqBrokerAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("arn"))
}

// AuthenticationStrategy returns a reference to field authentication_strategy of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) AuthenticationStrategy() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("authentication_strategy"))
}

// AutoMinorVersionUpgrade returns a reference to field auto_minor_version_upgrade of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) AutoMinorVersionUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(amb.ref.Append("auto_minor_version_upgrade"))
}

// BrokerId returns a reference to field broker_id of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) BrokerId() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("broker_id"))
}

// BrokerName returns a reference to field broker_name of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) BrokerName() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("broker_name"))
}

// DeploymentMode returns a reference to field deployment_mode of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) DeploymentMode() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("deployment_mode"))
}

// EngineType returns a reference to field engine_type of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) EngineType() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("engine_type"))
}

// EngineVersion returns a reference to field engine_version of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("engine_version"))
}

// HostInstanceType returns a reference to field host_instance_type of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) HostInstanceType() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("host_instance_type"))
}

// Id returns a reference to field id of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("id"))
}

// PubliclyAccessible returns a reference to field publicly_accessible of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) PubliclyAccessible() terra.BoolValue {
	return terra.ReferenceAsBool(amb.ref.Append("publicly_accessible"))
}

// SecurityGroups returns a reference to field security_groups of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amb.ref.Append("security_groups"))
}

// StorageType returns a reference to field storage_type of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(amb.ref.Append("storage_type"))
}

// SubnetIds returns a reference to field subnet_ids of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amb.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of aws_mq_broker.
func (amb dataAwsMqBrokerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amb.ref.Append("tags"))
}

func (amb dataAwsMqBrokerAttributes) Configuration() terra.ListValue[DataConfigurationAttributes] {
	return terra.ReferenceAsList[DataConfigurationAttributes](amb.ref.Append("configuration"))
}

func (amb dataAwsMqBrokerAttributes) EncryptionOptions() terra.ListValue[DataEncryptionOptionsAttributes] {
	return terra.ReferenceAsList[DataEncryptionOptionsAttributes](amb.ref.Append("encryption_options"))
}

func (amb dataAwsMqBrokerAttributes) Instances() terra.ListValue[DataInstancesAttributes] {
	return terra.ReferenceAsList[DataInstancesAttributes](amb.ref.Append("instances"))
}

func (amb dataAwsMqBrokerAttributes) LdapServerMetadata() terra.ListValue[DataLdapServerMetadataAttributes] {
	return terra.ReferenceAsList[DataLdapServerMetadataAttributes](amb.ref.Append("ldap_server_metadata"))
}

func (amb dataAwsMqBrokerAttributes) Logs() terra.ListValue[DataLogsAttributes] {
	return terra.ReferenceAsList[DataLogsAttributes](amb.ref.Append("logs"))
}

func (amb dataAwsMqBrokerAttributes) MaintenanceWindowStartTime() terra.ListValue[DataMaintenanceWindowStartTimeAttributes] {
	return terra.ReferenceAsList[DataMaintenanceWindowStartTimeAttributes](amb.ref.Append("maintenance_window_start_time"))
}

func (amb dataAwsMqBrokerAttributes) User() terra.SetValue[DataUserAttributes] {
	return terra.ReferenceAsSet[DataUserAttributes](amb.ref.Append("user"))
}
