// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_redshift_cluster

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_redshift_cluster.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arc *DataSource) DataSource() string {
	return "aws_redshift_cluster"
}

// LocalName returns the local name for [DataSource].
func (arc *DataSource) LocalName() string {
	return arc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arc *DataSource) Configuration() interface{} {
	return arc.Args
}

// Attributes returns the attributes for [DataSource].
func (arc *DataSource) Attributes() dataAwsRedshiftClusterAttributes {
	return dataAwsRedshiftClusterAttributes{ref: terra.ReferenceDataSource(arc)}
}

// DataArgs contains the configurations for aws_redshift_cluster.
type DataArgs struct {
	// ClusterIdentifier: string, required
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsRedshiftClusterAttributes struct {
	ref terra.Reference
}

// AllowVersionUpgrade returns a reference to field allow_version_upgrade of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) AllowVersionUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("allow_version_upgrade"))
}

// AquaConfigurationStatus returns a reference to field aqua_configuration_status of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) AquaConfigurationStatus() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("aqua_configuration_status"))
}

// Arn returns a reference to field arn of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("arn"))
}

// AutomatedSnapshotRetentionPeriod returns a reference to field automated_snapshot_retention_period of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) AutomatedSnapshotRetentionPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(arc.ref.Append("automated_snapshot_retention_period"))
}

// AvailabilityZone returns a reference to field availability_zone of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("availability_zone"))
}

// AvailabilityZoneRelocationEnabled returns a reference to field availability_zone_relocation_enabled of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) AvailabilityZoneRelocationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("availability_zone_relocation_enabled"))
}

// BucketName returns a reference to field bucket_name of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("bucket_name"))
}

// ClusterIdentifier returns a reference to field cluster_identifier of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_identifier"))
}

// ClusterNamespaceArn returns a reference to field cluster_namespace_arn of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterNamespaceArn() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_namespace_arn"))
}

// ClusterParameterGroupName returns a reference to field cluster_parameter_group_name of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterParameterGroupName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_parameter_group_name"))
}

// ClusterPublicKey returns a reference to field cluster_public_key of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterPublicKey() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_public_key"))
}

// ClusterRevisionNumber returns a reference to field cluster_revision_number of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterRevisionNumber() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_revision_number"))
}

// ClusterSubnetGroupName returns a reference to field cluster_subnet_group_name of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterSubnetGroupName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_subnet_group_name"))
}

// ClusterType returns a reference to field cluster_type of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterType() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_type"))
}

// ClusterVersion returns a reference to field cluster_version of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ClusterVersion() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("cluster_version"))
}

// DatabaseName returns a reference to field database_name of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("database_name"))
}

// DefaultIamRoleArn returns a reference to field default_iam_role_arn of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) DefaultIamRoleArn() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("default_iam_role_arn"))
}

// ElasticIp returns a reference to field elastic_ip of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ElasticIp() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("elastic_ip"))
}

// EnableLogging returns a reference to field enable_logging of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) EnableLogging() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("enable_logging"))
}

// Encrypted returns a reference to field encrypted of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("encrypted"))
}

// Endpoint returns a reference to field endpoint of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("endpoint"))
}

// EnhancedVpcRouting returns a reference to field enhanced_vpc_routing of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) EnhancedVpcRouting() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("enhanced_vpc_routing"))
}

// IamRoles returns a reference to field iam_roles of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) IamRoles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](arc.ref.Append("iam_roles"))
}

// Id returns a reference to field id of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("id"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("kms_key_id"))
}

// LogDestinationType returns a reference to field log_destination_type of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) LogDestinationType() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("log_destination_type"))
}

// LogExports returns a reference to field log_exports of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) LogExports() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arc.ref.Append("log_exports"))
}

// MaintenanceTrackName returns a reference to field maintenance_track_name of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) MaintenanceTrackName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("maintenance_track_name"))
}

// ManualSnapshotRetentionPeriod returns a reference to field manual_snapshot_retention_period of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) ManualSnapshotRetentionPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(arc.ref.Append("manual_snapshot_retention_period"))
}

// MasterUsername returns a reference to field master_username of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) MasterUsername() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("master_username"))
}

// MultiAz returns a reference to field multi_az of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) MultiAz() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("multi_az"))
}

// NodeType returns a reference to field node_type of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) NodeType() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("node_type"))
}

// NumberOfNodes returns a reference to field number_of_nodes of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) NumberOfNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(arc.ref.Append("number_of_nodes"))
}

// Port returns a reference to field port of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(arc.ref.Append("port"))
}

// PreferredMaintenanceWindow returns a reference to field preferred_maintenance_window of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) PreferredMaintenanceWindow() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("preferred_maintenance_window"))
}

// PubliclyAccessible returns a reference to field publicly_accessible of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) PubliclyAccessible() terra.BoolValue {
	return terra.ReferenceAsBool(arc.ref.Append("publicly_accessible"))
}

// S3KeyPrefix returns a reference to field s3_key_prefix of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) S3KeyPrefix() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("s3_key_prefix"))
}

// Tags returns a reference to field tags of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](arc.ref.Append("tags"))
}

// VpcId returns a reference to field vpc_id of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("vpc_id"))
}

// VpcSecurityGroupIds returns a reference to field vpc_security_group_ids of aws_redshift_cluster.
func (arc dataAwsRedshiftClusterAttributes) VpcSecurityGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](arc.ref.Append("vpc_security_group_ids"))
}

func (arc dataAwsRedshiftClusterAttributes) ClusterNodes() terra.ListValue[DataClusterNodesAttributes] {
	return terra.ReferenceAsList[DataClusterNodesAttributes](arc.ref.Append("cluster_nodes"))
}
