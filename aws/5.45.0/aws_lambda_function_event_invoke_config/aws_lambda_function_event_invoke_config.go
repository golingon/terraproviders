// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lambda_function_event_invoke_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lambda_function_event_invoke_config.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLambdaFunctionEventInvokeConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alfeic *Resource) Type() string {
	return "aws_lambda_function_event_invoke_config"
}

// LocalName returns the local name for [Resource].
func (alfeic *Resource) LocalName() string {
	return alfeic.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alfeic *Resource) Configuration() interface{} {
	return alfeic.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alfeic *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alfeic)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alfeic *Resource) Dependencies() terra.Dependencies {
	return alfeic.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alfeic *Resource) LifecycleManagement() *terra.Lifecycle {
	return alfeic.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alfeic *Resource) Attributes() awsLambdaFunctionEventInvokeConfigAttributes {
	return awsLambdaFunctionEventInvokeConfigAttributes{ref: terra.ReferenceResource(alfeic)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alfeic *Resource) ImportState(state io.Reader) error {
	alfeic.state = &awsLambdaFunctionEventInvokeConfigState{}
	if err := json.NewDecoder(state).Decode(alfeic.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alfeic.Type(), alfeic.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alfeic *Resource) State() (*awsLambdaFunctionEventInvokeConfigState, bool) {
	return alfeic.state, alfeic.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alfeic *Resource) StateMust() *awsLambdaFunctionEventInvokeConfigState {
	if alfeic.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alfeic.Type(), alfeic.LocalName()))
	}
	return alfeic.state
}

// Args contains the configurations for aws_lambda_function_event_invoke_config.
type Args struct {
	// FunctionName: string, required
	FunctionName terra.StringValue `hcl:"function_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaximumEventAgeInSeconds: number, optional
	MaximumEventAgeInSeconds terra.NumberValue `hcl:"maximum_event_age_in_seconds,attr"`
	// MaximumRetryAttempts: number, optional
	MaximumRetryAttempts terra.NumberValue `hcl:"maximum_retry_attempts,attr"`
	// Qualifier: string, optional
	Qualifier terra.StringValue `hcl:"qualifier,attr"`
	// DestinationConfig: optional
	DestinationConfig *DestinationConfig `hcl:"destination_config,block"`
}

type awsLambdaFunctionEventInvokeConfigAttributes struct {
	ref terra.Reference
}

// FunctionName returns a reference to field function_name of aws_lambda_function_event_invoke_config.
func (alfeic awsLambdaFunctionEventInvokeConfigAttributes) FunctionName() terra.StringValue {
	return terra.ReferenceAsString(alfeic.ref.Append("function_name"))
}

// Id returns a reference to field id of aws_lambda_function_event_invoke_config.
func (alfeic awsLambdaFunctionEventInvokeConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alfeic.ref.Append("id"))
}

// MaximumEventAgeInSeconds returns a reference to field maximum_event_age_in_seconds of aws_lambda_function_event_invoke_config.
func (alfeic awsLambdaFunctionEventInvokeConfigAttributes) MaximumEventAgeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(alfeic.ref.Append("maximum_event_age_in_seconds"))
}

// MaximumRetryAttempts returns a reference to field maximum_retry_attempts of aws_lambda_function_event_invoke_config.
func (alfeic awsLambdaFunctionEventInvokeConfigAttributes) MaximumRetryAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(alfeic.ref.Append("maximum_retry_attempts"))
}

// Qualifier returns a reference to field qualifier of aws_lambda_function_event_invoke_config.
func (alfeic awsLambdaFunctionEventInvokeConfigAttributes) Qualifier() terra.StringValue {
	return terra.ReferenceAsString(alfeic.ref.Append("qualifier"))
}

func (alfeic awsLambdaFunctionEventInvokeConfigAttributes) DestinationConfig() terra.ListValue[DestinationConfigAttributes] {
	return terra.ReferenceAsList[DestinationConfigAttributes](alfeic.ref.Append("destination_config"))
}

type awsLambdaFunctionEventInvokeConfigState struct {
	FunctionName             string                   `json:"function_name"`
	Id                       string                   `json:"id"`
	MaximumEventAgeInSeconds float64                  `json:"maximum_event_age_in_seconds"`
	MaximumRetryAttempts     float64                  `json:"maximum_retry_attempts"`
	Qualifier                string                   `json:"qualifier"`
	DestinationConfig        []DestinationConfigState `json:"destination_config"`
}
