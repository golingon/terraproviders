// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_redshift_orderable_cluster

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_redshift_orderable_cluster.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aroc *DataSource) DataSource() string {
	return "aws_redshift_orderable_cluster"
}

// LocalName returns the local name for [DataSource].
func (aroc *DataSource) LocalName() string {
	return aroc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aroc *DataSource) Configuration() interface{} {
	return aroc.Args
}

// Attributes returns the attributes for [DataSource].
func (aroc *DataSource) Attributes() dataAwsRedshiftOrderableClusterAttributes {
	return dataAwsRedshiftOrderableClusterAttributes{ref: terra.ReferenceDataSource(aroc)}
}

// DataArgs contains the configurations for aws_redshift_orderable_cluster.
type DataArgs struct {
	// ClusterType: string, optional
	ClusterType terra.StringValue `hcl:"cluster_type,attr"`
	// ClusterVersion: string, optional
	ClusterVersion terra.StringValue `hcl:"cluster_version,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NodeType: string, optional
	NodeType terra.StringValue `hcl:"node_type,attr"`
	// PreferredNodeTypes: list of string, optional
	PreferredNodeTypes terra.ListValue[terra.StringValue] `hcl:"preferred_node_types,attr"`
}

type dataAwsRedshiftOrderableClusterAttributes struct {
	ref terra.Reference
}

// AvailabilityZones returns a reference to field availability_zones of aws_redshift_orderable_cluster.
func (aroc dataAwsRedshiftOrderableClusterAttributes) AvailabilityZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aroc.ref.Append("availability_zones"))
}

// ClusterType returns a reference to field cluster_type of aws_redshift_orderable_cluster.
func (aroc dataAwsRedshiftOrderableClusterAttributes) ClusterType() terra.StringValue {
	return terra.ReferenceAsString(aroc.ref.Append("cluster_type"))
}

// ClusterVersion returns a reference to field cluster_version of aws_redshift_orderable_cluster.
func (aroc dataAwsRedshiftOrderableClusterAttributes) ClusterVersion() terra.StringValue {
	return terra.ReferenceAsString(aroc.ref.Append("cluster_version"))
}

// Id returns a reference to field id of aws_redshift_orderable_cluster.
func (aroc dataAwsRedshiftOrderableClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aroc.ref.Append("id"))
}

// NodeType returns a reference to field node_type of aws_redshift_orderable_cluster.
func (aroc dataAwsRedshiftOrderableClusterAttributes) NodeType() terra.StringValue {
	return terra.ReferenceAsString(aroc.ref.Append("node_type"))
}

// PreferredNodeTypes returns a reference to field preferred_node_types of aws_redshift_orderable_cluster.
func (aroc dataAwsRedshiftOrderableClusterAttributes) PreferredNodeTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aroc.ref.Append("preferred_node_types"))
}
