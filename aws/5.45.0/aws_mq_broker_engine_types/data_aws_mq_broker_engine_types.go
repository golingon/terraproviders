// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_mq_broker_engine_types

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_mq_broker_engine_types.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ambet *DataSource) DataSource() string {
	return "aws_mq_broker_engine_types"
}

// LocalName returns the local name for [DataSource].
func (ambet *DataSource) LocalName() string {
	return ambet.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ambet *DataSource) Configuration() interface{} {
	return ambet.Args
}

// Attributes returns the attributes for [DataSource].
func (ambet *DataSource) Attributes() dataAwsMqBrokerEngineTypesAttributes {
	return dataAwsMqBrokerEngineTypesAttributes{ref: terra.ReferenceDataSource(ambet)}
}

// DataArgs contains the configurations for aws_mq_broker_engine_types.
type DataArgs struct {
	// EngineType: string, optional
	EngineType terra.StringValue `hcl:"engine_type,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsMqBrokerEngineTypesAttributes struct {
	ref terra.Reference
}

// EngineType returns a reference to field engine_type of aws_mq_broker_engine_types.
func (ambet dataAwsMqBrokerEngineTypesAttributes) EngineType() terra.StringValue {
	return terra.ReferenceAsString(ambet.ref.Append("engine_type"))
}

// Id returns a reference to field id of aws_mq_broker_engine_types.
func (ambet dataAwsMqBrokerEngineTypesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ambet.ref.Append("id"))
}

func (ambet dataAwsMqBrokerEngineTypesAttributes) BrokerEngineTypes() terra.ListValue[DataBrokerEngineTypesAttributes] {
	return terra.ReferenceAsList[DataBrokerEngineTypesAttributes](ambet.ref.Append("broker_engine_types"))
}
