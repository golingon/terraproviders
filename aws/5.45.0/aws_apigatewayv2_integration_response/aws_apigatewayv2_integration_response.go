// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_apigatewayv2_integration_response

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_apigatewayv2_integration_response.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApigatewayv2IntegrationResponseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aair *Resource) Type() string {
	return "aws_apigatewayv2_integration_response"
}

// LocalName returns the local name for [Resource].
func (aair *Resource) LocalName() string {
	return aair.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aair *Resource) Configuration() interface{} {
	return aair.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aair *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aair)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aair *Resource) Dependencies() terra.Dependencies {
	return aair.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aair *Resource) LifecycleManagement() *terra.Lifecycle {
	return aair.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aair *Resource) Attributes() awsApigatewayv2IntegrationResponseAttributes {
	return awsApigatewayv2IntegrationResponseAttributes{ref: terra.ReferenceResource(aair)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aair *Resource) ImportState(state io.Reader) error {
	aair.state = &awsApigatewayv2IntegrationResponseState{}
	if err := json.NewDecoder(state).Decode(aair.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aair.Type(), aair.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aair *Resource) State() (*awsApigatewayv2IntegrationResponseState, bool) {
	return aair.state, aair.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aair *Resource) StateMust() *awsApigatewayv2IntegrationResponseState {
	if aair.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aair.Type(), aair.LocalName()))
	}
	return aair.state
}

// Args contains the configurations for aws_apigatewayv2_integration_response.
type Args struct {
	// ApiId: string, required
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// ContentHandlingStrategy: string, optional
	ContentHandlingStrategy terra.StringValue `hcl:"content_handling_strategy,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationId: string, required
	IntegrationId terra.StringValue `hcl:"integration_id,attr" validate:"required"`
	// IntegrationResponseKey: string, required
	IntegrationResponseKey terra.StringValue `hcl:"integration_response_key,attr" validate:"required"`
	// ResponseTemplates: map of string, optional
	ResponseTemplates terra.MapValue[terra.StringValue] `hcl:"response_templates,attr"`
	// TemplateSelectionExpression: string, optional
	TemplateSelectionExpression terra.StringValue `hcl:"template_selection_expression,attr"`
}

type awsApigatewayv2IntegrationResponseAttributes struct {
	ref terra.Reference
}

// ApiId returns a reference to field api_id of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(aair.ref.Append("api_id"))
}

// ContentHandlingStrategy returns a reference to field content_handling_strategy of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) ContentHandlingStrategy() terra.StringValue {
	return terra.ReferenceAsString(aair.ref.Append("content_handling_strategy"))
}

// Id returns a reference to field id of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aair.ref.Append("id"))
}

// IntegrationId returns a reference to field integration_id of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) IntegrationId() terra.StringValue {
	return terra.ReferenceAsString(aair.ref.Append("integration_id"))
}

// IntegrationResponseKey returns a reference to field integration_response_key of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) IntegrationResponseKey() terra.StringValue {
	return terra.ReferenceAsString(aair.ref.Append("integration_response_key"))
}

// ResponseTemplates returns a reference to field response_templates of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) ResponseTemplates() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aair.ref.Append("response_templates"))
}

// TemplateSelectionExpression returns a reference to field template_selection_expression of aws_apigatewayv2_integration_response.
func (aair awsApigatewayv2IntegrationResponseAttributes) TemplateSelectionExpression() terra.StringValue {
	return terra.ReferenceAsString(aair.ref.Append("template_selection_expression"))
}

type awsApigatewayv2IntegrationResponseState struct {
	ApiId                       string            `json:"api_id"`
	ContentHandlingStrategy     string            `json:"content_handling_strategy"`
	Id                          string            `json:"id"`
	IntegrationId               string            `json:"integration_id"`
	IntegrationResponseKey      string            `json:"integration_response_key"`
	ResponseTemplates           map[string]string `json:"response_templates"`
	TemplateSelectionExpression string            `json:"template_selection_expression"`
}
