// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_documentation_part

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_api_gateway_documentation_part.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApiGatewayDocumentationPartState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aagdp *Resource) Type() string {
	return "aws_api_gateway_documentation_part"
}

// LocalName returns the local name for [Resource].
func (aagdp *Resource) LocalName() string {
	return aagdp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aagdp *Resource) Configuration() interface{} {
	return aagdp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aagdp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aagdp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aagdp *Resource) Dependencies() terra.Dependencies {
	return aagdp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aagdp *Resource) LifecycleManagement() *terra.Lifecycle {
	return aagdp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aagdp *Resource) Attributes() awsApiGatewayDocumentationPartAttributes {
	return awsApiGatewayDocumentationPartAttributes{ref: terra.ReferenceResource(aagdp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aagdp *Resource) ImportState(state io.Reader) error {
	aagdp.state = &awsApiGatewayDocumentationPartState{}
	if err := json.NewDecoder(state).Decode(aagdp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aagdp.Type(), aagdp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aagdp *Resource) State() (*awsApiGatewayDocumentationPartState, bool) {
	return aagdp.state, aagdp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aagdp *Resource) StateMust() *awsApiGatewayDocumentationPartState {
	if aagdp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aagdp.Type(), aagdp.LocalName()))
	}
	return aagdp.state
}

// Args contains the configurations for aws_api_gateway_documentation_part.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Properties: string, required
	Properties terra.StringValue `hcl:"properties,attr" validate:"required"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// Location: required
	Location *Location `hcl:"location,block" validate:"required"`
}

type awsApiGatewayDocumentationPartAttributes struct {
	ref terra.Reference
}

// DocumentationPartId returns a reference to field documentation_part_id of aws_api_gateway_documentation_part.
func (aagdp awsApiGatewayDocumentationPartAttributes) DocumentationPartId() terra.StringValue {
	return terra.ReferenceAsString(aagdp.ref.Append("documentation_part_id"))
}

// Id returns a reference to field id of aws_api_gateway_documentation_part.
func (aagdp awsApiGatewayDocumentationPartAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aagdp.ref.Append("id"))
}

// Properties returns a reference to field properties of aws_api_gateway_documentation_part.
func (aagdp awsApiGatewayDocumentationPartAttributes) Properties() terra.StringValue {
	return terra.ReferenceAsString(aagdp.ref.Append("properties"))
}

// RestApiId returns a reference to field rest_api_id of aws_api_gateway_documentation_part.
func (aagdp awsApiGatewayDocumentationPartAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceAsString(aagdp.ref.Append("rest_api_id"))
}

func (aagdp awsApiGatewayDocumentationPartAttributes) Location() terra.ListValue[LocationAttributes] {
	return terra.ReferenceAsList[LocationAttributes](aagdp.ref.Append("location"))
}

type awsApiGatewayDocumentationPartState struct {
	DocumentationPartId string          `json:"documentation_part_id"`
	Id                  string          `json:"id"`
	Properties          string          `json:"properties"`
	RestApiId           string          `json:"rest_api_id"`
	Location            []LocationState `json:"location"`
}
