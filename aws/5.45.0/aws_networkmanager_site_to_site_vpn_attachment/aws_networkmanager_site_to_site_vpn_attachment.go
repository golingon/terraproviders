// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkmanager_site_to_site_vpn_attachment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_networkmanager_site_to_site_vpn_attachment.
type Resource struct {
	Name      string
	Args      Args
	state     *awsNetworkmanagerSiteToSiteVpnAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (anstsva *Resource) Type() string {
	return "aws_networkmanager_site_to_site_vpn_attachment"
}

// LocalName returns the local name for [Resource].
func (anstsva *Resource) LocalName() string {
	return anstsva.Name
}

// Configuration returns the configuration (args) for [Resource].
func (anstsva *Resource) Configuration() interface{} {
	return anstsva.Args
}

// DependOn is used for other resources to depend on [Resource].
func (anstsva *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(anstsva)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (anstsva *Resource) Dependencies() terra.Dependencies {
	return anstsva.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (anstsva *Resource) LifecycleManagement() *terra.Lifecycle {
	return anstsva.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (anstsva *Resource) Attributes() awsNetworkmanagerSiteToSiteVpnAttachmentAttributes {
	return awsNetworkmanagerSiteToSiteVpnAttachmentAttributes{ref: terra.ReferenceResource(anstsva)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (anstsva *Resource) ImportState(state io.Reader) error {
	anstsva.state = &awsNetworkmanagerSiteToSiteVpnAttachmentState{}
	if err := json.NewDecoder(state).Decode(anstsva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", anstsva.Type(), anstsva.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (anstsva *Resource) State() (*awsNetworkmanagerSiteToSiteVpnAttachmentState, bool) {
	return anstsva.state, anstsva.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (anstsva *Resource) StateMust() *awsNetworkmanagerSiteToSiteVpnAttachmentState {
	if anstsva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", anstsva.Type(), anstsva.LocalName()))
	}
	return anstsva.state
}

// Args contains the configurations for aws_networkmanager_site_to_site_vpn_attachment.
type Args struct {
	// CoreNetworkId: string, required
	CoreNetworkId terra.StringValue `hcl:"core_network_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpnConnectionArn: string, required
	VpnConnectionArn terra.StringValue `hcl:"vpn_connection_arn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsNetworkmanagerSiteToSiteVpnAttachmentAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("arn"))
}

// AttachmentPolicyRuleNumber returns a reference to field attachment_policy_rule_number of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) AttachmentPolicyRuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(anstsva.ref.Append("attachment_policy_rule_number"))
}

// AttachmentType returns a reference to field attachment_type of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) AttachmentType() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("attachment_type"))
}

// CoreNetworkArn returns a reference to field core_network_arn of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) CoreNetworkArn() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("core_network_arn"))
}

// CoreNetworkId returns a reference to field core_network_id of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) CoreNetworkId() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("core_network_id"))
}

// EdgeLocation returns a reference to field edge_location of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) EdgeLocation() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("edge_location"))
}

// Id returns a reference to field id of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("id"))
}

// OwnerAccountId returns a reference to field owner_account_id of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) OwnerAccountId() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("owner_account_id"))
}

// ResourceArn returns a reference to field resource_arn of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("resource_arn"))
}

// SegmentName returns a reference to field segment_name of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) SegmentName() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("segment_name"))
}

// State returns a reference to field state of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("state"))
}

// Tags returns a reference to field tags of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](anstsva.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](anstsva.ref.Append("tags_all"))
}

// VpnConnectionArn returns a reference to field vpn_connection_arn of aws_networkmanager_site_to_site_vpn_attachment.
func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) VpnConnectionArn() terra.StringValue {
	return terra.ReferenceAsString(anstsva.ref.Append("vpn_connection_arn"))
}

func (anstsva awsNetworkmanagerSiteToSiteVpnAttachmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](anstsva.ref.Append("timeouts"))
}

type awsNetworkmanagerSiteToSiteVpnAttachmentState struct {
	Arn                        string            `json:"arn"`
	AttachmentPolicyRuleNumber float64           `json:"attachment_policy_rule_number"`
	AttachmentType             string            `json:"attachment_type"`
	CoreNetworkArn             string            `json:"core_network_arn"`
	CoreNetworkId              string            `json:"core_network_id"`
	EdgeLocation               string            `json:"edge_location"`
	Id                         string            `json:"id"`
	OwnerAccountId             string            `json:"owner_account_id"`
	ResourceArn                string            `json:"resource_arn"`
	SegmentName                string            `json:"segment_name"`
	State                      string            `json:"state"`
	Tags                       map[string]string `json:"tags"`
	TagsAll                    map[string]string `json:"tags_all"`
	VpnConnectionArn           string            `json:"vpn_connection_arn"`
	Timeouts                   *TimeoutsState    `json:"timeouts"`
}
