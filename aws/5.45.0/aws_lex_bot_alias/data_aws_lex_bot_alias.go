// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lex_bot_alias

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_lex_bot_alias.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alba *DataSource) DataSource() string {
	return "aws_lex_bot_alias"
}

// LocalName returns the local name for [DataSource].
func (alba *DataSource) LocalName() string {
	return alba.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alba *DataSource) Configuration() interface{} {
	return alba.Args
}

// Attributes returns the attributes for [DataSource].
func (alba *DataSource) Attributes() dataAwsLexBotAliasAttributes {
	return dataAwsLexBotAliasAttributes{ref: terra.ReferenceDataSource(alba)}
}

// DataArgs contains the configurations for aws_lex_bot_alias.
type DataArgs struct {
	// BotName: string, required
	BotName terra.StringValue `hcl:"bot_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type dataAwsLexBotAliasAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("arn"))
}

// BotName returns a reference to field bot_name of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) BotName() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("bot_name"))
}

// BotVersion returns a reference to field bot_version of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) BotVersion() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("bot_version"))
}

// Checksum returns a reference to field checksum of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) Checksum() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("checksum"))
}

// CreatedDate returns a reference to field created_date of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("created_date"))
}

// Description returns a reference to field description of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("description"))
}

// Id returns a reference to field id of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("id"))
}

// LastUpdatedDate returns a reference to field last_updated_date of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) LastUpdatedDate() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("last_updated_date"))
}

// Name returns a reference to field name of aws_lex_bot_alias.
func (alba dataAwsLexBotAliasAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alba.ref.Append("name"))
}
