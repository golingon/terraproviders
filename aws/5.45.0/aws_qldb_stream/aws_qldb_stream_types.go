// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_qldb_stream

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type KinesisConfiguration struct {
	// AggregationEnabled: bool, optional
	AggregationEnabled terra.BoolValue `hcl:"aggregation_enabled,attr"`
	// StreamArn: string, required
	StreamArn terra.StringValue `hcl:"stream_arn,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type KinesisConfigurationAttributes struct {
	ref terra.Reference
}

func (kc KinesisConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return kc.ref, nil
}

func (kc KinesisConfigurationAttributes) InternalWithRef(ref terra.Reference) KinesisConfigurationAttributes {
	return KinesisConfigurationAttributes{ref: ref}
}

func (kc KinesisConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kc.ref.InternalTokens()
}

func (kc KinesisConfigurationAttributes) AggregationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(kc.ref.Append("aggregation_enabled"))
}

func (kc KinesisConfigurationAttributes) StreamArn() terra.StringValue {
	return terra.ReferenceAsString(kc.ref.Append("stream_arn"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type KinesisConfigurationState struct {
	AggregationEnabled bool   `json:"aggregation_enabled"`
	StreamArn          string `json:"stream_arn"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
