// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_outposts_sites

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_outposts_sites.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aos *DataSource) DataSource() string {
	return "aws_outposts_sites"
}

// LocalName returns the local name for [DataSource].
func (aos *DataSource) LocalName() string {
	return aos.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aos *DataSource) Configuration() interface{} {
	return aos.Args
}

// Attributes returns the attributes for [DataSource].
func (aos *DataSource) Attributes() dataAwsOutpostsSitesAttributes {
	return dataAwsOutpostsSitesAttributes{ref: terra.ReferenceDataSource(aos)}
}

// DataArgs contains the configurations for aws_outposts_sites.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsOutpostsSitesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_outposts_sites.
func (aos dataAwsOutpostsSitesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aos.ref.Append("id"))
}

// Ids returns a reference to field ids of aws_outposts_sites.
func (aos dataAwsOutpostsSitesAttributes) Ids() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aos.ref.Append("ids"))
}
