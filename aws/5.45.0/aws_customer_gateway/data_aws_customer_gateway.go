// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_customer_gateway

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_customer_gateway.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acg *DataSource) DataSource() string {
	return "aws_customer_gateway"
}

// LocalName returns the local name for [DataSource].
func (acg *DataSource) LocalName() string {
	return acg.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acg *DataSource) Configuration() interface{} {
	return acg.Args
}

// Attributes returns the attributes for [DataSource].
func (acg *DataSource) Attributes() dataAwsCustomerGatewayAttributes {
	return dataAwsCustomerGatewayAttributes{ref: terra.ReferenceDataSource(acg)}
}

// DataArgs contains the configurations for aws_customer_gateway.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsCustomerGatewayAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("arn"))
}

// BgpAsn returns a reference to field bgp_asn of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) BgpAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(acg.ref.Append("bgp_asn"))
}

// CertificateArn returns a reference to field certificate_arn of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("certificate_arn"))
}

// DeviceName returns a reference to field device_name of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("device_name"))
}

// Id returns a reference to field id of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("id"))
}

// IpAddress returns a reference to field ip_address of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("ip_address"))
}

// Tags returns a reference to field tags of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acg.ref.Append("tags"))
}

// Type returns a reference to field type of aws_customer_gateway.
func (acg dataAwsCustomerGatewayAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("type"))
}

func (acg dataAwsCustomerGatewayAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](acg.ref.Append("filter"))
}

func (acg dataAwsCustomerGatewayAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](acg.ref.Append("timeouts"))
}
