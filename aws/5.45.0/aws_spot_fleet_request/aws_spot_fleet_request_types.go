// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_spot_fleet_request

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LaunchSpecification struct {
	// Ami: string, required
	Ami terra.StringValue `hcl:"ami,attr" validate:"required"`
	// AssociatePublicIpAddress: bool, optional
	AssociatePublicIpAddress terra.BoolValue `hcl:"associate_public_ip_address,attr"`
	// AvailabilityZone: string, optional
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// EbsOptimized: bool, optional
	EbsOptimized terra.BoolValue `hcl:"ebs_optimized,attr"`
	// IamInstanceProfile: string, optional
	IamInstanceProfile terra.StringValue `hcl:"iam_instance_profile,attr"`
	// IamInstanceProfileArn: string, optional
	IamInstanceProfileArn terra.StringValue `hcl:"iam_instance_profile_arn,attr"`
	// InstanceType: string, required
	InstanceType terra.StringValue `hcl:"instance_type,attr" validate:"required"`
	// KeyName: string, optional
	KeyName terra.StringValue `hcl:"key_name,attr"`
	// Monitoring: bool, optional
	Monitoring terra.BoolValue `hcl:"monitoring,attr"`
	// PlacementGroup: string, optional
	PlacementGroup terra.StringValue `hcl:"placement_group,attr"`
	// PlacementTenancy: string, optional
	PlacementTenancy terra.StringValue `hcl:"placement_tenancy,attr"`
	// SpotPrice: string, optional
	SpotPrice terra.StringValue `hcl:"spot_price,attr"`
	// SubnetId: string, optional
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// UserData: string, optional
	UserData terra.StringValue `hcl:"user_data,attr"`
	// VpcSecurityGroupIds: set of string, optional
	VpcSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"vpc_security_group_ids,attr"`
	// WeightedCapacity: string, optional
	WeightedCapacity terra.StringValue `hcl:"weighted_capacity,attr"`
	// LaunchSpecificationEbsBlockDevice: min=0
	EbsBlockDevice []LaunchSpecificationEbsBlockDevice `hcl:"ebs_block_device,block" validate:"min=0"`
	// LaunchSpecificationEphemeralBlockDevice: min=0
	EphemeralBlockDevice []LaunchSpecificationEphemeralBlockDevice `hcl:"ephemeral_block_device,block" validate:"min=0"`
	// LaunchSpecificationRootBlockDevice: min=0
	RootBlockDevice []LaunchSpecificationRootBlockDevice `hcl:"root_block_device,block" validate:"min=0"`
}

type LaunchSpecificationEbsBlockDevice struct {
	// DeleteOnTermination: bool, optional
	DeleteOnTermination terra.BoolValue `hcl:"delete_on_termination,attr"`
	// DeviceName: string, required
	DeviceName terra.StringValue `hcl:"device_name,attr" validate:"required"`
	// Encrypted: bool, optional
	Encrypted terra.BoolValue `hcl:"encrypted,attr"`
	// Iops: number, optional
	Iops terra.NumberValue `hcl:"iops,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// SnapshotId: string, optional
	SnapshotId terra.StringValue `hcl:"snapshot_id,attr"`
	// Throughput: number, optional
	Throughput terra.NumberValue `hcl:"throughput,attr"`
	// VolumeSize: number, optional
	VolumeSize terra.NumberValue `hcl:"volume_size,attr"`
	// VolumeType: string, optional
	VolumeType terra.StringValue `hcl:"volume_type,attr"`
}

type LaunchSpecificationEphemeralBlockDevice struct {
	// DeviceName: string, required
	DeviceName terra.StringValue `hcl:"device_name,attr" validate:"required"`
	// VirtualName: string, required
	VirtualName terra.StringValue `hcl:"virtual_name,attr" validate:"required"`
}

type LaunchSpecificationRootBlockDevice struct {
	// DeleteOnTermination: bool, optional
	DeleteOnTermination terra.BoolValue `hcl:"delete_on_termination,attr"`
	// Encrypted: bool, optional
	Encrypted terra.BoolValue `hcl:"encrypted,attr"`
	// Iops: number, optional
	Iops terra.NumberValue `hcl:"iops,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// Throughput: number, optional
	Throughput terra.NumberValue `hcl:"throughput,attr"`
	// VolumeSize: number, optional
	VolumeSize terra.NumberValue `hcl:"volume_size,attr"`
	// VolumeType: string, optional
	VolumeType terra.StringValue `hcl:"volume_type,attr"`
}

type LaunchTemplateConfig struct {
	// LaunchTemplateConfigLaunchTemplateSpecification: required
	LaunchTemplateSpecification *LaunchTemplateConfigLaunchTemplateSpecification `hcl:"launch_template_specification,block" validate:"required"`
	// LaunchTemplateConfigOverrides: min=0
	Overrides []LaunchTemplateConfigOverrides `hcl:"overrides,block" validate:"min=0"`
}

type LaunchTemplateConfigLaunchTemplateSpecification struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type LaunchTemplateConfigOverrides struct {
	// AvailabilityZone: string, optional
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// SpotPrice: string, optional
	SpotPrice terra.StringValue `hcl:"spot_price,attr"`
	// SubnetId: string, optional
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// WeightedCapacity: number, optional
	WeightedCapacity terra.NumberValue `hcl:"weighted_capacity,attr"`
	// LaunchTemplateConfigOverridesInstanceRequirements: optional
	InstanceRequirements *LaunchTemplateConfigOverridesInstanceRequirements `hcl:"instance_requirements,block"`
}

type LaunchTemplateConfigOverridesInstanceRequirements struct {
	// AcceleratorManufacturers: set of string, optional
	AcceleratorManufacturers terra.SetValue[terra.StringValue] `hcl:"accelerator_manufacturers,attr"`
	// AcceleratorNames: set of string, optional
	AcceleratorNames terra.SetValue[terra.StringValue] `hcl:"accelerator_names,attr"`
	// AcceleratorTypes: set of string, optional
	AcceleratorTypes terra.SetValue[terra.StringValue] `hcl:"accelerator_types,attr"`
	// AllowedInstanceTypes: set of string, optional
	AllowedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"allowed_instance_types,attr"`
	// BareMetal: string, optional
	BareMetal terra.StringValue `hcl:"bare_metal,attr"`
	// BurstablePerformance: string, optional
	BurstablePerformance terra.StringValue `hcl:"burstable_performance,attr"`
	// CpuManufacturers: set of string, optional
	CpuManufacturers terra.SetValue[terra.StringValue] `hcl:"cpu_manufacturers,attr"`
	// ExcludedInstanceTypes: set of string, optional
	ExcludedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"excluded_instance_types,attr"`
	// InstanceGenerations: set of string, optional
	InstanceGenerations terra.SetValue[terra.StringValue] `hcl:"instance_generations,attr"`
	// LocalStorage: string, optional
	LocalStorage terra.StringValue `hcl:"local_storage,attr"`
	// LocalStorageTypes: set of string, optional
	LocalStorageTypes terra.SetValue[terra.StringValue] `hcl:"local_storage_types,attr"`
	// OnDemandMaxPricePercentageOverLowestPrice: number, optional
	OnDemandMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"on_demand_max_price_percentage_over_lowest_price,attr"`
	// RequireHibernateSupport: bool, optional
	RequireHibernateSupport terra.BoolValue `hcl:"require_hibernate_support,attr"`
	// SpotMaxPricePercentageOverLowestPrice: number, optional
	SpotMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"spot_max_price_percentage_over_lowest_price,attr"`
	// LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCount: optional
	AcceleratorCount *LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCount `hcl:"accelerator_count,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMib: optional
	AcceleratorTotalMemoryMib *LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMib `hcl:"accelerator_total_memory_mib,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbps: optional
	BaselineEbsBandwidthMbps *LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbps `hcl:"baseline_ebs_bandwidth_mbps,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpu: optional
	MemoryGibPerVcpu *LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpu `hcl:"memory_gib_per_vcpu,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsMemoryMib: optional
	MemoryMib *LaunchTemplateConfigOverridesInstanceRequirementsMemoryMib `hcl:"memory_mib,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbps: optional
	NetworkBandwidthGbps *LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbps `hcl:"network_bandwidth_gbps,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCount: optional
	NetworkInterfaceCount *LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCount `hcl:"network_interface_count,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGb: optional
	TotalLocalStorageGb *LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGb `hcl:"total_local_storage_gb,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsVcpuCount: optional
	VcpuCount *LaunchTemplateConfigOverridesInstanceRequirementsVcpuCount `hcl:"vcpu_count,block"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCount struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpu struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryMib struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbps struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCount struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGb struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsVcpuCount struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type SpotMaintenanceStrategies struct {
	// SpotMaintenanceStrategiesCapacityRebalance: optional
	CapacityRebalance *SpotMaintenanceStrategiesCapacityRebalance `hcl:"capacity_rebalance,block"`
}

type SpotMaintenanceStrategiesCapacityRebalance struct {
	// ReplacementStrategy: string, optional
	ReplacementStrategy terra.StringValue `hcl:"replacement_strategy,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LaunchSpecificationAttributes struct {
	ref terra.Reference
}

func (ls LaunchSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return ls.ref, nil
}

func (ls LaunchSpecificationAttributes) InternalWithRef(ref terra.Reference) LaunchSpecificationAttributes {
	return LaunchSpecificationAttributes{ref: ref}
}

func (ls LaunchSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ls.ref.InternalTokens()
}

func (ls LaunchSpecificationAttributes) Ami() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("ami"))
}

func (ls LaunchSpecificationAttributes) AssociatePublicIpAddress() terra.BoolValue {
	return terra.ReferenceAsBool(ls.ref.Append("associate_public_ip_address"))
}

func (ls LaunchSpecificationAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("availability_zone"))
}

func (ls LaunchSpecificationAttributes) EbsOptimized() terra.BoolValue {
	return terra.ReferenceAsBool(ls.ref.Append("ebs_optimized"))
}

func (ls LaunchSpecificationAttributes) IamInstanceProfile() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("iam_instance_profile"))
}

func (ls LaunchSpecificationAttributes) IamInstanceProfileArn() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("iam_instance_profile_arn"))
}

func (ls LaunchSpecificationAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("instance_type"))
}

func (ls LaunchSpecificationAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("key_name"))
}

func (ls LaunchSpecificationAttributes) Monitoring() terra.BoolValue {
	return terra.ReferenceAsBool(ls.ref.Append("monitoring"))
}

func (ls LaunchSpecificationAttributes) PlacementGroup() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("placement_group"))
}

func (ls LaunchSpecificationAttributes) PlacementTenancy() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("placement_tenancy"))
}

func (ls LaunchSpecificationAttributes) SpotPrice() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("spot_price"))
}

func (ls LaunchSpecificationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("subnet_id"))
}

func (ls LaunchSpecificationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ls.ref.Append("tags"))
}

func (ls LaunchSpecificationAttributes) UserData() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("user_data"))
}

func (ls LaunchSpecificationAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ls.ref.Append("vpc_security_group_ids"))
}

func (ls LaunchSpecificationAttributes) WeightedCapacity() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("weighted_capacity"))
}

func (ls LaunchSpecificationAttributes) EbsBlockDevice() terra.SetValue[LaunchSpecificationEbsBlockDeviceAttributes] {
	return terra.ReferenceAsSet[LaunchSpecificationEbsBlockDeviceAttributes](ls.ref.Append("ebs_block_device"))
}

func (ls LaunchSpecificationAttributes) EphemeralBlockDevice() terra.SetValue[LaunchSpecificationEphemeralBlockDeviceAttributes] {
	return terra.ReferenceAsSet[LaunchSpecificationEphemeralBlockDeviceAttributes](ls.ref.Append("ephemeral_block_device"))
}

func (ls LaunchSpecificationAttributes) RootBlockDevice() terra.SetValue[LaunchSpecificationRootBlockDeviceAttributes] {
	return terra.ReferenceAsSet[LaunchSpecificationRootBlockDeviceAttributes](ls.ref.Append("root_block_device"))
}

type LaunchSpecificationEbsBlockDeviceAttributes struct {
	ref terra.Reference
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) InternalRef() (terra.Reference, error) {
	return ebd.ref, nil
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) InternalWithRef(ref terra.Reference) LaunchSpecificationEbsBlockDeviceAttributes {
	return LaunchSpecificationEbsBlockDeviceAttributes{ref: ref}
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ebd.ref.InternalTokens()
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) DeleteOnTermination() terra.BoolValue {
	return terra.ReferenceAsBool(ebd.ref.Append("delete_on_termination"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("device_name"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(ebd.ref.Append("encrypted"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(ebd.ref.Append("iops"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("kms_key_id"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("snapshot_id"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(ebd.ref.Append("throughput"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(ebd.ref.Append("volume_size"))
}

func (ebd LaunchSpecificationEbsBlockDeviceAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("volume_type"))
}

type LaunchSpecificationEphemeralBlockDeviceAttributes struct {
	ref terra.Reference
}

func (ebd LaunchSpecificationEphemeralBlockDeviceAttributes) InternalRef() (terra.Reference, error) {
	return ebd.ref, nil
}

func (ebd LaunchSpecificationEphemeralBlockDeviceAttributes) InternalWithRef(ref terra.Reference) LaunchSpecificationEphemeralBlockDeviceAttributes {
	return LaunchSpecificationEphemeralBlockDeviceAttributes{ref: ref}
}

func (ebd LaunchSpecificationEphemeralBlockDeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ebd.ref.InternalTokens()
}

func (ebd LaunchSpecificationEphemeralBlockDeviceAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("device_name"))
}

func (ebd LaunchSpecificationEphemeralBlockDeviceAttributes) VirtualName() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("virtual_name"))
}

type LaunchSpecificationRootBlockDeviceAttributes struct {
	ref terra.Reference
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) InternalRef() (terra.Reference, error) {
	return rbd.ref, nil
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) InternalWithRef(ref terra.Reference) LaunchSpecificationRootBlockDeviceAttributes {
	return LaunchSpecificationRootBlockDeviceAttributes{ref: ref}
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rbd.ref.InternalTokens()
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) DeleteOnTermination() terra.BoolValue {
	return terra.ReferenceAsBool(rbd.ref.Append("delete_on_termination"))
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(rbd.ref.Append("encrypted"))
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(rbd.ref.Append("iops"))
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(rbd.ref.Append("kms_key_id"))
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(rbd.ref.Append("throughput"))
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(rbd.ref.Append("volume_size"))
}

func (rbd LaunchSpecificationRootBlockDeviceAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(rbd.ref.Append("volume_type"))
}

type LaunchTemplateConfigAttributes struct {
	ref terra.Reference
}

func (ltc LaunchTemplateConfigAttributes) InternalRef() (terra.Reference, error) {
	return ltc.ref, nil
}

func (ltc LaunchTemplateConfigAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigAttributes {
	return LaunchTemplateConfigAttributes{ref: ref}
}

func (ltc LaunchTemplateConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ltc.ref.InternalTokens()
}

func (ltc LaunchTemplateConfigAttributes) LaunchTemplateSpecification() terra.ListValue[LaunchTemplateConfigLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigLaunchTemplateSpecificationAttributes](ltc.ref.Append("launch_template_specification"))
}

func (ltc LaunchTemplateConfigAttributes) Overrides() terra.SetValue[LaunchTemplateConfigOverridesAttributes] {
	return terra.ReferenceAsSet[LaunchTemplateConfigOverridesAttributes](ltc.ref.Append("overrides"))
}

type LaunchTemplateConfigLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigLaunchTemplateSpecificationAttributes {
	return LaunchTemplateConfigLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("id"))
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("name"))
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type LaunchTemplateConfigOverridesAttributes struct {
	ref terra.Reference
}

func (o LaunchTemplateConfigOverridesAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o LaunchTemplateConfigOverridesAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesAttributes {
	return LaunchTemplateConfigOverridesAttributes{ref: ref}
}

func (o LaunchTemplateConfigOverridesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o LaunchTemplateConfigOverridesAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("availability_zone"))
}

func (o LaunchTemplateConfigOverridesAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("instance_type"))
}

func (o LaunchTemplateConfigOverridesAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("priority"))
}

func (o LaunchTemplateConfigOverridesAttributes) SpotPrice() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("spot_price"))
}

func (o LaunchTemplateConfigOverridesAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("subnet_id"))
}

func (o LaunchTemplateConfigOverridesAttributes) WeightedCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("weighted_capacity"))
}

func (o LaunchTemplateConfigOverridesAttributes) InstanceRequirements() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsAttributes](o.ref.Append("instance_requirements"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsAttributes{ref: ref}
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes](ir.ref.Append("accelerator_count"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) MemoryMib() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes](ir.ref.Append("memory_mib"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes](ir.ref.Append("network_interface_count"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir LaunchTemplateConfigOverridesInstanceRequirementsAttributes) VcpuCount() terra.ListValue[LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes](ir.ref.Append("vcpu_count"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes struct {
	ref terra.Reference
}

func (ac LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes{ref: ref}
}

func (ac LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes struct {
	ref terra.Reference
}

func (atmm LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes{ref: ref}
}

func (atmm LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes struct {
	ref terra.Reference
}

func (bebm LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes{ref: ref}
}

func (bebm LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes struct {
	ref terra.Reference
}

func (mgpv LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes{ref: ref}
}

func (mgpv LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes struct {
	ref terra.Reference
}

func (mm LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes{ref: ref}
}

func (mm LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes struct {
	ref terra.Reference
}

func (nbg LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes{ref: ref}
}

func (nbg LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes struct {
	ref terra.Reference
}

func (nic LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes{ref: ref}
}

func (nic LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes struct {
	ref terra.Reference
}

func (tlsg LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes{ref: ref}
}

func (tlsg LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes struct {
	ref terra.Reference
}

func (vc LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes {
	return LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes{ref: ref}
}

func (vc LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type SpotMaintenanceStrategiesAttributes struct {
	ref terra.Reference
}

func (sms SpotMaintenanceStrategiesAttributes) InternalRef() (terra.Reference, error) {
	return sms.ref, nil
}

func (sms SpotMaintenanceStrategiesAttributes) InternalWithRef(ref terra.Reference) SpotMaintenanceStrategiesAttributes {
	return SpotMaintenanceStrategiesAttributes{ref: ref}
}

func (sms SpotMaintenanceStrategiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sms.ref.InternalTokens()
}

func (sms SpotMaintenanceStrategiesAttributes) CapacityRebalance() terra.ListValue[SpotMaintenanceStrategiesCapacityRebalanceAttributes] {
	return terra.ReferenceAsList[SpotMaintenanceStrategiesCapacityRebalanceAttributes](sms.ref.Append("capacity_rebalance"))
}

type SpotMaintenanceStrategiesCapacityRebalanceAttributes struct {
	ref terra.Reference
}

func (cr SpotMaintenanceStrategiesCapacityRebalanceAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr SpotMaintenanceStrategiesCapacityRebalanceAttributes) InternalWithRef(ref terra.Reference) SpotMaintenanceStrategiesCapacityRebalanceAttributes {
	return SpotMaintenanceStrategiesCapacityRebalanceAttributes{ref: ref}
}

func (cr SpotMaintenanceStrategiesCapacityRebalanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr SpotMaintenanceStrategiesCapacityRebalanceAttributes) ReplacementStrategy() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("replacement_strategy"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LaunchSpecificationState struct {
	Ami                      string                                         `json:"ami"`
	AssociatePublicIpAddress bool                                           `json:"associate_public_ip_address"`
	AvailabilityZone         string                                         `json:"availability_zone"`
	EbsOptimized             bool                                           `json:"ebs_optimized"`
	IamInstanceProfile       string                                         `json:"iam_instance_profile"`
	IamInstanceProfileArn    string                                         `json:"iam_instance_profile_arn"`
	InstanceType             string                                         `json:"instance_type"`
	KeyName                  string                                         `json:"key_name"`
	Monitoring               bool                                           `json:"monitoring"`
	PlacementGroup           string                                         `json:"placement_group"`
	PlacementTenancy         string                                         `json:"placement_tenancy"`
	SpotPrice                string                                         `json:"spot_price"`
	SubnetId                 string                                         `json:"subnet_id"`
	Tags                     map[string]string                              `json:"tags"`
	UserData                 string                                         `json:"user_data"`
	VpcSecurityGroupIds      []string                                       `json:"vpc_security_group_ids"`
	WeightedCapacity         string                                         `json:"weighted_capacity"`
	EbsBlockDevice           []LaunchSpecificationEbsBlockDeviceState       `json:"ebs_block_device"`
	EphemeralBlockDevice     []LaunchSpecificationEphemeralBlockDeviceState `json:"ephemeral_block_device"`
	RootBlockDevice          []LaunchSpecificationRootBlockDeviceState      `json:"root_block_device"`
}

type LaunchSpecificationEbsBlockDeviceState struct {
	DeleteOnTermination bool    `json:"delete_on_termination"`
	DeviceName          string  `json:"device_name"`
	Encrypted           bool    `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	SnapshotId          string  `json:"snapshot_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type LaunchSpecificationEphemeralBlockDeviceState struct {
	DeviceName  string `json:"device_name"`
	VirtualName string `json:"virtual_name"`
}

type LaunchSpecificationRootBlockDeviceState struct {
	DeleteOnTermination bool    `json:"delete_on_termination"`
	Encrypted           bool    `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type LaunchTemplateConfigState struct {
	LaunchTemplateSpecification []LaunchTemplateConfigLaunchTemplateSpecificationState `json:"launch_template_specification"`
	Overrides                   []LaunchTemplateConfigOverridesState                   `json:"overrides"`
}

type LaunchTemplateConfigLaunchTemplateSpecificationState struct {
	Id      string `json:"id"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type LaunchTemplateConfigOverridesState struct {
	AvailabilityZone     string                                                   `json:"availability_zone"`
	InstanceType         string                                                   `json:"instance_type"`
	Priority             float64                                                  `json:"priority"`
	SpotPrice            string                                                   `json:"spot_price"`
	SubnetId             string                                                   `json:"subnet_id"`
	WeightedCapacity     float64                                                  `json:"weighted_capacity"`
	InstanceRequirements []LaunchTemplateConfigOverridesInstanceRequirementsState `json:"instance_requirements"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                                                          `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                                                          `json:"accelerator_names"`
	AcceleratorTypes                          []string                                                                          `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                                                          `json:"allowed_instance_types"`
	BareMetal                                 string                                                                            `json:"bare_metal"`
	BurstablePerformance                      string                                                                            `json:"burstable_performance"`
	CpuManufacturers                          []string                                                                          `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                                                          `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                                                          `json:"instance_generations"`
	LocalStorage                              string                                                                            `json:"local_storage"`
	LocalStorageTypes                         []string                                                                          `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                                                           `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                                                              `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                                                           `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountState          `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsState  `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuState          `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibState                 `json:"memory_mib"`
	NetworkBandwidthGbps                      []LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsState      `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountState     `json:"network_interface_count"`
	TotalLocalStorageGb                       []LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbState       `json:"total_local_storage_gb"`
	VcpuCount                                 []LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountState                 `json:"vcpu_count"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type SpotMaintenanceStrategiesState struct {
	CapacityRebalance []SpotMaintenanceStrategiesCapacityRebalanceState `json:"capacity_rebalance"`
}

type SpotMaintenanceStrategiesCapacityRebalanceState struct {
	ReplacementStrategy string `json:"replacement_strategy"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
