// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_wafv2_web_acl_logging_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_wafv2_web_acl_logging_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsWafv2WebAclLoggingConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awwalc *Resource) Type() string {
	return "aws_wafv2_web_acl_logging_configuration"
}

// LocalName returns the local name for [Resource].
func (awwalc *Resource) LocalName() string {
	return awwalc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awwalc *Resource) Configuration() interface{} {
	return awwalc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awwalc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awwalc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awwalc *Resource) Dependencies() terra.Dependencies {
	return awwalc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awwalc *Resource) LifecycleManagement() *terra.Lifecycle {
	return awwalc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awwalc *Resource) Attributes() awsWafv2WebAclLoggingConfigurationAttributes {
	return awsWafv2WebAclLoggingConfigurationAttributes{ref: terra.ReferenceResource(awwalc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awwalc *Resource) ImportState(state io.Reader) error {
	awwalc.state = &awsWafv2WebAclLoggingConfigurationState{}
	if err := json.NewDecoder(state).Decode(awwalc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awwalc.Type(), awwalc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awwalc *Resource) State() (*awsWafv2WebAclLoggingConfigurationState, bool) {
	return awwalc.state, awwalc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awwalc *Resource) StateMust() *awsWafv2WebAclLoggingConfigurationState {
	if awwalc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awwalc.Type(), awwalc.LocalName()))
	}
	return awwalc.state
}

// Args contains the configurations for aws_wafv2_web_acl_logging_configuration.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogDestinationConfigs: set of string, required
	LogDestinationConfigs terra.SetValue[terra.StringValue] `hcl:"log_destination_configs,attr" validate:"required"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
	// LoggingFilter: optional
	LoggingFilter *LoggingFilter `hcl:"logging_filter,block"`
	// RedactedFields: min=0,max=100
	RedactedFields []RedactedFields `hcl:"redacted_fields,block" validate:"min=0,max=100"`
}

type awsWafv2WebAclLoggingConfigurationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_wafv2_web_acl_logging_configuration.
func (awwalc awsWafv2WebAclLoggingConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awwalc.ref.Append("id"))
}

// LogDestinationConfigs returns a reference to field log_destination_configs of aws_wafv2_web_acl_logging_configuration.
func (awwalc awsWafv2WebAclLoggingConfigurationAttributes) LogDestinationConfigs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](awwalc.ref.Append("log_destination_configs"))
}

// ResourceArn returns a reference to field resource_arn of aws_wafv2_web_acl_logging_configuration.
func (awwalc awsWafv2WebAclLoggingConfigurationAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(awwalc.ref.Append("resource_arn"))
}

func (awwalc awsWafv2WebAclLoggingConfigurationAttributes) LoggingFilter() terra.ListValue[LoggingFilterAttributes] {
	return terra.ReferenceAsList[LoggingFilterAttributes](awwalc.ref.Append("logging_filter"))
}

func (awwalc awsWafv2WebAclLoggingConfigurationAttributes) RedactedFields() terra.ListValue[RedactedFieldsAttributes] {
	return terra.ReferenceAsList[RedactedFieldsAttributes](awwalc.ref.Append("redacted_fields"))
}

type awsWafv2WebAclLoggingConfigurationState struct {
	Id                    string                `json:"id"`
	LogDestinationConfigs []string              `json:"log_destination_configs"`
	ResourceArn           string                `json:"resource_arn"`
	LoggingFilter         []LoggingFilterState  `json:"logging_filter"`
	RedactedFields        []RedactedFieldsState `json:"redacted_fields"`
}
