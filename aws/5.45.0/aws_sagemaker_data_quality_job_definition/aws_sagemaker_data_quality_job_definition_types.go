// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_data_quality_job_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataQualityAppSpecification struct {
	// Environment: map of string, optional
	Environment terra.MapValue[terra.StringValue] `hcl:"environment,attr"`
	// ImageUri: string, required
	ImageUri terra.StringValue `hcl:"image_uri,attr" validate:"required"`
	// PostAnalyticsProcessorSourceUri: string, optional
	PostAnalyticsProcessorSourceUri terra.StringValue `hcl:"post_analytics_processor_source_uri,attr"`
	// RecordPreprocessorSourceUri: string, optional
	RecordPreprocessorSourceUri terra.StringValue `hcl:"record_preprocessor_source_uri,attr"`
}

type DataQualityBaselineConfig struct {
	// DataQualityBaselineConfigConstraintsResource: optional
	ConstraintsResource *DataQualityBaselineConfigConstraintsResource `hcl:"constraints_resource,block"`
	// DataQualityBaselineConfigStatisticsResource: optional
	StatisticsResource *DataQualityBaselineConfigStatisticsResource `hcl:"statistics_resource,block"`
}

type DataQualityBaselineConfigConstraintsResource struct {
	// S3Uri: string, optional
	S3Uri terra.StringValue `hcl:"s3_uri,attr"`
}

type DataQualityBaselineConfigStatisticsResource struct {
	// S3Uri: string, optional
	S3Uri terra.StringValue `hcl:"s3_uri,attr"`
}

type DataQualityJobInput struct {
	// DataQualityJobInputBatchTransformInput: optional
	BatchTransformInput *DataQualityJobInputBatchTransformInput `hcl:"batch_transform_input,block"`
	// DataQualityJobInputEndpointInput: optional
	EndpointInput *DataQualityJobInputEndpointInput `hcl:"endpoint_input,block"`
}

type DataQualityJobInputBatchTransformInput struct {
	// DataCapturedDestinationS3Uri: string, required
	DataCapturedDestinationS3Uri terra.StringValue `hcl:"data_captured_destination_s3_uri,attr" validate:"required"`
	// LocalPath: string, optional
	LocalPath terra.StringValue `hcl:"local_path,attr"`
	// S3DataDistributionType: string, optional
	S3DataDistributionType terra.StringValue `hcl:"s3_data_distribution_type,attr"`
	// S3InputMode: string, optional
	S3InputMode terra.StringValue `hcl:"s3_input_mode,attr"`
	// DataQualityJobInputBatchTransformInputDatasetFormat: required
	DatasetFormat *DataQualityJobInputBatchTransformInputDatasetFormat `hcl:"dataset_format,block" validate:"required"`
}

type DataQualityJobInputBatchTransformInputDatasetFormat struct {
	// DataQualityJobInputBatchTransformInputDatasetFormatCsv: optional
	Csv *DataQualityJobInputBatchTransformInputDatasetFormatCsv `hcl:"csv,block"`
	// DataQualityJobInputBatchTransformInputDatasetFormatJson: optional
	Json *DataQualityJobInputBatchTransformInputDatasetFormatJson `hcl:"json,block"`
}

type DataQualityJobInputBatchTransformInputDatasetFormatCsv struct {
	// Header: bool, optional
	Header terra.BoolValue `hcl:"header,attr"`
}

type DataQualityJobInputBatchTransformInputDatasetFormatJson struct {
	// Line: bool, optional
	Line terra.BoolValue `hcl:"line,attr"`
}

type DataQualityJobInputEndpointInput struct {
	// EndpointName: string, required
	EndpointName terra.StringValue `hcl:"endpoint_name,attr" validate:"required"`
	// LocalPath: string, optional
	LocalPath terra.StringValue `hcl:"local_path,attr"`
	// S3DataDistributionType: string, optional
	S3DataDistributionType terra.StringValue `hcl:"s3_data_distribution_type,attr"`
	// S3InputMode: string, optional
	S3InputMode terra.StringValue `hcl:"s3_input_mode,attr"`
}

type DataQualityJobOutputConfig struct {
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// DataQualityJobOutputConfigMonitoringOutputs: required
	MonitoringOutputs *DataQualityJobOutputConfigMonitoringOutputs `hcl:"monitoring_outputs,block" validate:"required"`
}

type DataQualityJobOutputConfigMonitoringOutputs struct {
	// DataQualityJobOutputConfigMonitoringOutputsS3Output: required
	S3Output *DataQualityJobOutputConfigMonitoringOutputsS3Output `hcl:"s3_output,block" validate:"required"`
}

type DataQualityJobOutputConfigMonitoringOutputsS3Output struct {
	// LocalPath: string, optional
	LocalPath terra.StringValue `hcl:"local_path,attr"`
	// S3UploadMode: string, optional
	S3UploadMode terra.StringValue `hcl:"s3_upload_mode,attr"`
	// S3Uri: string, required
	S3Uri terra.StringValue `hcl:"s3_uri,attr" validate:"required"`
}

type JobResources struct {
	// JobResourcesClusterConfig: required
	ClusterConfig *JobResourcesClusterConfig `hcl:"cluster_config,block" validate:"required"`
}

type JobResourcesClusterConfig struct {
	// InstanceCount: number, required
	InstanceCount terra.NumberValue `hcl:"instance_count,attr" validate:"required"`
	// InstanceType: string, required
	InstanceType terra.StringValue `hcl:"instance_type,attr" validate:"required"`
	// VolumeKmsKeyId: string, optional
	VolumeKmsKeyId terra.StringValue `hcl:"volume_kms_key_id,attr"`
	// VolumeSizeInGb: number, required
	VolumeSizeInGb terra.NumberValue `hcl:"volume_size_in_gb,attr" validate:"required"`
}

type NetworkConfig struct {
	// EnableInterContainerTrafficEncryption: bool, optional
	EnableInterContainerTrafficEncryption terra.BoolValue `hcl:"enable_inter_container_traffic_encryption,attr"`
	// EnableNetworkIsolation: bool, optional
	EnableNetworkIsolation terra.BoolValue `hcl:"enable_network_isolation,attr"`
	// NetworkConfigVpcConfig: optional
	VpcConfig *NetworkConfigVpcConfig `hcl:"vpc_config,block"`
}

type NetworkConfigVpcConfig struct {
	// SecurityGroupIds: set of string, required
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// Subnets: set of string, required
	Subnets terra.SetValue[terra.StringValue] `hcl:"subnets,attr" validate:"required"`
}

type StoppingCondition struct {
	// MaxRuntimeInSeconds: number, optional
	MaxRuntimeInSeconds terra.NumberValue `hcl:"max_runtime_in_seconds,attr"`
}

type DataQualityAppSpecificationAttributes struct {
	ref terra.Reference
}

func (dqas DataQualityAppSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return dqas.ref, nil
}

func (dqas DataQualityAppSpecificationAttributes) InternalWithRef(ref terra.Reference) DataQualityAppSpecificationAttributes {
	return DataQualityAppSpecificationAttributes{ref: ref}
}

func (dqas DataQualityAppSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dqas.ref.InternalTokens()
}

func (dqas DataQualityAppSpecificationAttributes) Environment() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dqas.ref.Append("environment"))
}

func (dqas DataQualityAppSpecificationAttributes) ImageUri() terra.StringValue {
	return terra.ReferenceAsString(dqas.ref.Append("image_uri"))
}

func (dqas DataQualityAppSpecificationAttributes) PostAnalyticsProcessorSourceUri() terra.StringValue {
	return terra.ReferenceAsString(dqas.ref.Append("post_analytics_processor_source_uri"))
}

func (dqas DataQualityAppSpecificationAttributes) RecordPreprocessorSourceUri() terra.StringValue {
	return terra.ReferenceAsString(dqas.ref.Append("record_preprocessor_source_uri"))
}

type DataQualityBaselineConfigAttributes struct {
	ref terra.Reference
}

func (dqbc DataQualityBaselineConfigAttributes) InternalRef() (terra.Reference, error) {
	return dqbc.ref, nil
}

func (dqbc DataQualityBaselineConfigAttributes) InternalWithRef(ref terra.Reference) DataQualityBaselineConfigAttributes {
	return DataQualityBaselineConfigAttributes{ref: ref}
}

func (dqbc DataQualityBaselineConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dqbc.ref.InternalTokens()
}

func (dqbc DataQualityBaselineConfigAttributes) ConstraintsResource() terra.ListValue[DataQualityBaselineConfigConstraintsResourceAttributes] {
	return terra.ReferenceAsList[DataQualityBaselineConfigConstraintsResourceAttributes](dqbc.ref.Append("constraints_resource"))
}

func (dqbc DataQualityBaselineConfigAttributes) StatisticsResource() terra.ListValue[DataQualityBaselineConfigStatisticsResourceAttributes] {
	return terra.ReferenceAsList[DataQualityBaselineConfigStatisticsResourceAttributes](dqbc.ref.Append("statistics_resource"))
}

type DataQualityBaselineConfigConstraintsResourceAttributes struct {
	ref terra.Reference
}

func (cr DataQualityBaselineConfigConstraintsResourceAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DataQualityBaselineConfigConstraintsResourceAttributes) InternalWithRef(ref terra.Reference) DataQualityBaselineConfigConstraintsResourceAttributes {
	return DataQualityBaselineConfigConstraintsResourceAttributes{ref: ref}
}

func (cr DataQualityBaselineConfigConstraintsResourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DataQualityBaselineConfigConstraintsResourceAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("s3_uri"))
}

type DataQualityBaselineConfigStatisticsResourceAttributes struct {
	ref terra.Reference
}

func (sr DataQualityBaselineConfigStatisticsResourceAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr DataQualityBaselineConfigStatisticsResourceAttributes) InternalWithRef(ref terra.Reference) DataQualityBaselineConfigStatisticsResourceAttributes {
	return DataQualityBaselineConfigStatisticsResourceAttributes{ref: ref}
}

func (sr DataQualityBaselineConfigStatisticsResourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr DataQualityBaselineConfigStatisticsResourceAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("s3_uri"))
}

type DataQualityJobInputAttributes struct {
	ref terra.Reference
}

func (dqji DataQualityJobInputAttributes) InternalRef() (terra.Reference, error) {
	return dqji.ref, nil
}

func (dqji DataQualityJobInputAttributes) InternalWithRef(ref terra.Reference) DataQualityJobInputAttributes {
	return DataQualityJobInputAttributes{ref: ref}
}

func (dqji DataQualityJobInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dqji.ref.InternalTokens()
}

func (dqji DataQualityJobInputAttributes) BatchTransformInput() terra.ListValue[DataQualityJobInputBatchTransformInputAttributes] {
	return terra.ReferenceAsList[DataQualityJobInputBatchTransformInputAttributes](dqji.ref.Append("batch_transform_input"))
}

func (dqji DataQualityJobInputAttributes) EndpointInput() terra.ListValue[DataQualityJobInputEndpointInputAttributes] {
	return terra.ReferenceAsList[DataQualityJobInputEndpointInputAttributes](dqji.ref.Append("endpoint_input"))
}

type DataQualityJobInputBatchTransformInputAttributes struct {
	ref terra.Reference
}

func (bti DataQualityJobInputBatchTransformInputAttributes) InternalRef() (terra.Reference, error) {
	return bti.ref, nil
}

func (bti DataQualityJobInputBatchTransformInputAttributes) InternalWithRef(ref terra.Reference) DataQualityJobInputBatchTransformInputAttributes {
	return DataQualityJobInputBatchTransformInputAttributes{ref: ref}
}

func (bti DataQualityJobInputBatchTransformInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bti.ref.InternalTokens()
}

func (bti DataQualityJobInputBatchTransformInputAttributes) DataCapturedDestinationS3Uri() terra.StringValue {
	return terra.ReferenceAsString(bti.ref.Append("data_captured_destination_s3_uri"))
}

func (bti DataQualityJobInputBatchTransformInputAttributes) LocalPath() terra.StringValue {
	return terra.ReferenceAsString(bti.ref.Append("local_path"))
}

func (bti DataQualityJobInputBatchTransformInputAttributes) S3DataDistributionType() terra.StringValue {
	return terra.ReferenceAsString(bti.ref.Append("s3_data_distribution_type"))
}

func (bti DataQualityJobInputBatchTransformInputAttributes) S3InputMode() terra.StringValue {
	return terra.ReferenceAsString(bti.ref.Append("s3_input_mode"))
}

func (bti DataQualityJobInputBatchTransformInputAttributes) DatasetFormat() terra.ListValue[DataQualityJobInputBatchTransformInputDatasetFormatAttributes] {
	return terra.ReferenceAsList[DataQualityJobInputBatchTransformInputDatasetFormatAttributes](bti.ref.Append("dataset_format"))
}

type DataQualityJobInputBatchTransformInputDatasetFormatAttributes struct {
	ref terra.Reference
}

func (df DataQualityJobInputBatchTransformInputDatasetFormatAttributes) InternalRef() (terra.Reference, error) {
	return df.ref, nil
}

func (df DataQualityJobInputBatchTransformInputDatasetFormatAttributes) InternalWithRef(ref terra.Reference) DataQualityJobInputBatchTransformInputDatasetFormatAttributes {
	return DataQualityJobInputBatchTransformInputDatasetFormatAttributes{ref: ref}
}

func (df DataQualityJobInputBatchTransformInputDatasetFormatAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return df.ref.InternalTokens()
}

func (df DataQualityJobInputBatchTransformInputDatasetFormatAttributes) Csv() terra.ListValue[DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes] {
	return terra.ReferenceAsList[DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes](df.ref.Append("csv"))
}

func (df DataQualityJobInputBatchTransformInputDatasetFormatAttributes) Json() terra.ListValue[DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes] {
	return terra.ReferenceAsList[DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes](df.ref.Append("json"))
}

type DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes struct {
	ref terra.Reference
}

func (c DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes) InternalWithRef(ref terra.Reference) DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes {
	return DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes{ref: ref}
}

func (c DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataQualityJobInputBatchTransformInputDatasetFormatCsvAttributes) Header() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("header"))
}

type DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes struct {
	ref terra.Reference
}

func (j DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes) InternalRef() (terra.Reference, error) {
	return j.ref, nil
}

func (j DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes) InternalWithRef(ref terra.Reference) DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes {
	return DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes{ref: ref}
}

func (j DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return j.ref.InternalTokens()
}

func (j DataQualityJobInputBatchTransformInputDatasetFormatJsonAttributes) Line() terra.BoolValue {
	return terra.ReferenceAsBool(j.ref.Append("line"))
}

type DataQualityJobInputEndpointInputAttributes struct {
	ref terra.Reference
}

func (ei DataQualityJobInputEndpointInputAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei DataQualityJobInputEndpointInputAttributes) InternalWithRef(ref terra.Reference) DataQualityJobInputEndpointInputAttributes {
	return DataQualityJobInputEndpointInputAttributes{ref: ref}
}

func (ei DataQualityJobInputEndpointInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ei.ref.InternalTokens()
}

func (ei DataQualityJobInputEndpointInputAttributes) EndpointName() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("endpoint_name"))
}

func (ei DataQualityJobInputEndpointInputAttributes) LocalPath() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("local_path"))
}

func (ei DataQualityJobInputEndpointInputAttributes) S3DataDistributionType() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("s3_data_distribution_type"))
}

func (ei DataQualityJobInputEndpointInputAttributes) S3InputMode() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("s3_input_mode"))
}

type DataQualityJobOutputConfigAttributes struct {
	ref terra.Reference
}

func (dqjoc DataQualityJobOutputConfigAttributes) InternalRef() (terra.Reference, error) {
	return dqjoc.ref, nil
}

func (dqjoc DataQualityJobOutputConfigAttributes) InternalWithRef(ref terra.Reference) DataQualityJobOutputConfigAttributes {
	return DataQualityJobOutputConfigAttributes{ref: ref}
}

func (dqjoc DataQualityJobOutputConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dqjoc.ref.InternalTokens()
}

func (dqjoc DataQualityJobOutputConfigAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(dqjoc.ref.Append("kms_key_id"))
}

func (dqjoc DataQualityJobOutputConfigAttributes) MonitoringOutputs() terra.ListValue[DataQualityJobOutputConfigMonitoringOutputsAttributes] {
	return terra.ReferenceAsList[DataQualityJobOutputConfigMonitoringOutputsAttributes](dqjoc.ref.Append("monitoring_outputs"))
}

type DataQualityJobOutputConfigMonitoringOutputsAttributes struct {
	ref terra.Reference
}

func (mo DataQualityJobOutputConfigMonitoringOutputsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo DataQualityJobOutputConfigMonitoringOutputsAttributes) InternalWithRef(ref terra.Reference) DataQualityJobOutputConfigMonitoringOutputsAttributes {
	return DataQualityJobOutputConfigMonitoringOutputsAttributes{ref: ref}
}

func (mo DataQualityJobOutputConfigMonitoringOutputsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo DataQualityJobOutputConfigMonitoringOutputsAttributes) S3Output() terra.ListValue[DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes] {
	return terra.ReferenceAsList[DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes](mo.ref.Append("s3_output"))
}

type DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes struct {
	ref terra.Reference
}

func (so DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes) InternalWithRef(ref terra.Reference) DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes {
	return DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes{ref: ref}
}

func (so DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes) LocalPath() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("local_path"))
}

func (so DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes) S3UploadMode() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("s3_upload_mode"))
}

func (so DataQualityJobOutputConfigMonitoringOutputsS3OutputAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("s3_uri"))
}

type JobResourcesAttributes struct {
	ref terra.Reference
}

func (jr JobResourcesAttributes) InternalRef() (terra.Reference, error) {
	return jr.ref, nil
}

func (jr JobResourcesAttributes) InternalWithRef(ref terra.Reference) JobResourcesAttributes {
	return JobResourcesAttributes{ref: ref}
}

func (jr JobResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jr.ref.InternalTokens()
}

func (jr JobResourcesAttributes) ClusterConfig() terra.ListValue[JobResourcesClusterConfigAttributes] {
	return terra.ReferenceAsList[JobResourcesClusterConfigAttributes](jr.ref.Append("cluster_config"))
}

type JobResourcesClusterConfigAttributes struct {
	ref terra.Reference
}

func (cc JobResourcesClusterConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc JobResourcesClusterConfigAttributes) InternalWithRef(ref terra.Reference) JobResourcesClusterConfigAttributes {
	return JobResourcesClusterConfigAttributes{ref: ref}
}

func (cc JobResourcesClusterConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc JobResourcesClusterConfigAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("instance_count"))
}

func (cc JobResourcesClusterConfigAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("instance_type"))
}

func (cc JobResourcesClusterConfigAttributes) VolumeKmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("volume_kms_key_id"))
}

func (cc JobResourcesClusterConfigAttributes) VolumeSizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("volume_size_in_gb"))
}

type NetworkConfigAttributes struct {
	ref terra.Reference
}

func (nc NetworkConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc NetworkConfigAttributes) InternalWithRef(ref terra.Reference) NetworkConfigAttributes {
	return NetworkConfigAttributes{ref: ref}
}

func (nc NetworkConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc NetworkConfigAttributes) EnableInterContainerTrafficEncryption() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("enable_inter_container_traffic_encryption"))
}

func (nc NetworkConfigAttributes) EnableNetworkIsolation() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("enable_network_isolation"))
}

func (nc NetworkConfigAttributes) VpcConfig() terra.ListValue[NetworkConfigVpcConfigAttributes] {
	return terra.ReferenceAsList[NetworkConfigVpcConfigAttributes](nc.ref.Append("vpc_config"))
}

type NetworkConfigVpcConfigAttributes struct {
	ref terra.Reference
}

func (vc NetworkConfigVpcConfigAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc NetworkConfigVpcConfigAttributes) InternalWithRef(ref terra.Reference) NetworkConfigVpcConfigAttributes {
	return NetworkConfigVpcConfigAttributes{ref: ref}
}

func (vc NetworkConfigVpcConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc NetworkConfigVpcConfigAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc NetworkConfigVpcConfigAttributes) Subnets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnets"))
}

type StoppingConditionAttributes struct {
	ref terra.Reference
}

func (sc StoppingConditionAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc StoppingConditionAttributes) InternalWithRef(ref terra.Reference) StoppingConditionAttributes {
	return StoppingConditionAttributes{ref: ref}
}

func (sc StoppingConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc StoppingConditionAttributes) MaxRuntimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("max_runtime_in_seconds"))
}

type DataQualityAppSpecificationState struct {
	Environment                     map[string]string `json:"environment"`
	ImageUri                        string            `json:"image_uri"`
	PostAnalyticsProcessorSourceUri string            `json:"post_analytics_processor_source_uri"`
	RecordPreprocessorSourceUri     string            `json:"record_preprocessor_source_uri"`
}

type DataQualityBaselineConfigState struct {
	ConstraintsResource []DataQualityBaselineConfigConstraintsResourceState `json:"constraints_resource"`
	StatisticsResource  []DataQualityBaselineConfigStatisticsResourceState  `json:"statistics_resource"`
}

type DataQualityBaselineConfigConstraintsResourceState struct {
	S3Uri string `json:"s3_uri"`
}

type DataQualityBaselineConfigStatisticsResourceState struct {
	S3Uri string `json:"s3_uri"`
}

type DataQualityJobInputState struct {
	BatchTransformInput []DataQualityJobInputBatchTransformInputState `json:"batch_transform_input"`
	EndpointInput       []DataQualityJobInputEndpointInputState       `json:"endpoint_input"`
}

type DataQualityJobInputBatchTransformInputState struct {
	DataCapturedDestinationS3Uri string                                                     `json:"data_captured_destination_s3_uri"`
	LocalPath                    string                                                     `json:"local_path"`
	S3DataDistributionType       string                                                     `json:"s3_data_distribution_type"`
	S3InputMode                  string                                                     `json:"s3_input_mode"`
	DatasetFormat                []DataQualityJobInputBatchTransformInputDatasetFormatState `json:"dataset_format"`
}

type DataQualityJobInputBatchTransformInputDatasetFormatState struct {
	Csv  []DataQualityJobInputBatchTransformInputDatasetFormatCsvState  `json:"csv"`
	Json []DataQualityJobInputBatchTransformInputDatasetFormatJsonState `json:"json"`
}

type DataQualityJobInputBatchTransformInputDatasetFormatCsvState struct {
	Header bool `json:"header"`
}

type DataQualityJobInputBatchTransformInputDatasetFormatJsonState struct {
	Line bool `json:"line"`
}

type DataQualityJobInputEndpointInputState struct {
	EndpointName           string `json:"endpoint_name"`
	LocalPath              string `json:"local_path"`
	S3DataDistributionType string `json:"s3_data_distribution_type"`
	S3InputMode            string `json:"s3_input_mode"`
}

type DataQualityJobOutputConfigState struct {
	KmsKeyId          string                                             `json:"kms_key_id"`
	MonitoringOutputs []DataQualityJobOutputConfigMonitoringOutputsState `json:"monitoring_outputs"`
}

type DataQualityJobOutputConfigMonitoringOutputsState struct {
	S3Output []DataQualityJobOutputConfigMonitoringOutputsS3OutputState `json:"s3_output"`
}

type DataQualityJobOutputConfigMonitoringOutputsS3OutputState struct {
	LocalPath    string `json:"local_path"`
	S3UploadMode string `json:"s3_upload_mode"`
	S3Uri        string `json:"s3_uri"`
}

type JobResourcesState struct {
	ClusterConfig []JobResourcesClusterConfigState `json:"cluster_config"`
}

type JobResourcesClusterConfigState struct {
	InstanceCount  float64 `json:"instance_count"`
	InstanceType   string  `json:"instance_type"`
	VolumeKmsKeyId string  `json:"volume_kms_key_id"`
	VolumeSizeInGb float64 `json:"volume_size_in_gb"`
}

type NetworkConfigState struct {
	EnableInterContainerTrafficEncryption bool                          `json:"enable_inter_container_traffic_encryption"`
	EnableNetworkIsolation                bool                          `json:"enable_network_isolation"`
	VpcConfig                             []NetworkConfigVpcConfigState `json:"vpc_config"`
}

type NetworkConfigVpcConfigState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	Subnets          []string `json:"subnets"`
}

type StoppingConditionState struct {
	MaxRuntimeInSeconds float64 `json:"max_runtime_in_seconds"`
}
