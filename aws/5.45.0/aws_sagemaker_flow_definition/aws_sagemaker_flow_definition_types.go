// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_flow_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type HumanLoopActivationConfig struct {
	// HumanLoopActivationConfigHumanLoopActivationConditionsConfig: optional
	HumanLoopActivationConditionsConfig *HumanLoopActivationConfigHumanLoopActivationConditionsConfig `hcl:"human_loop_activation_conditions_config,block"`
}

type HumanLoopActivationConfigHumanLoopActivationConditionsConfig struct {
	// HumanLoopActivationConditions: string, required
	HumanLoopActivationConditions terra.StringValue `hcl:"human_loop_activation_conditions,attr" validate:"required"`
}

type HumanLoopConfig struct {
	// HumanTaskUiArn: string, required
	HumanTaskUiArn terra.StringValue `hcl:"human_task_ui_arn,attr" validate:"required"`
	// TaskAvailabilityLifetimeInSeconds: number, optional
	TaskAvailabilityLifetimeInSeconds terra.NumberValue `hcl:"task_availability_lifetime_in_seconds,attr"`
	// TaskCount: number, required
	TaskCount terra.NumberValue `hcl:"task_count,attr" validate:"required"`
	// TaskDescription: string, required
	TaskDescription terra.StringValue `hcl:"task_description,attr" validate:"required"`
	// TaskKeywords: set of string, optional
	TaskKeywords terra.SetValue[terra.StringValue] `hcl:"task_keywords,attr"`
	// TaskTimeLimitInSeconds: number, optional
	TaskTimeLimitInSeconds terra.NumberValue `hcl:"task_time_limit_in_seconds,attr"`
	// TaskTitle: string, required
	TaskTitle terra.StringValue `hcl:"task_title,attr" validate:"required"`
	// WorkteamArn: string, required
	WorkteamArn terra.StringValue `hcl:"workteam_arn,attr" validate:"required"`
	// HumanLoopConfigPublicWorkforceTaskPrice: optional
	PublicWorkforceTaskPrice *HumanLoopConfigPublicWorkforceTaskPrice `hcl:"public_workforce_task_price,block"`
}

type HumanLoopConfigPublicWorkforceTaskPrice struct {
	// HumanLoopConfigPublicWorkforceTaskPriceAmountInUsd: optional
	AmountInUsd *HumanLoopConfigPublicWorkforceTaskPriceAmountInUsd `hcl:"amount_in_usd,block"`
}

type HumanLoopConfigPublicWorkforceTaskPriceAmountInUsd struct {
	// Cents: number, optional
	Cents terra.NumberValue `hcl:"cents,attr"`
	// Dollars: number, optional
	Dollars terra.NumberValue `hcl:"dollars,attr"`
	// TenthFractionsOfACent: number, optional
	TenthFractionsOfACent terra.NumberValue `hcl:"tenth_fractions_of_a_cent,attr"`
}

type HumanLoopRequestSource struct {
	// AwsManagedHumanLoopRequestSource: string, required
	AwsManagedHumanLoopRequestSource terra.StringValue `hcl:"aws_managed_human_loop_request_source,attr" validate:"required"`
}

type OutputConfig struct {
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// S3OutputPath: string, required
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr" validate:"required"`
}

type HumanLoopActivationConfigAttributes struct {
	ref terra.Reference
}

func (hlac HumanLoopActivationConfigAttributes) InternalRef() (terra.Reference, error) {
	return hlac.ref, nil
}

func (hlac HumanLoopActivationConfigAttributes) InternalWithRef(ref terra.Reference) HumanLoopActivationConfigAttributes {
	return HumanLoopActivationConfigAttributes{ref: ref}
}

func (hlac HumanLoopActivationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlac.ref.InternalTokens()
}

func (hlac HumanLoopActivationConfigAttributes) HumanLoopActivationConditionsConfig() terra.ListValue[HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes] {
	return terra.ReferenceAsList[HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes](hlac.ref.Append("human_loop_activation_conditions_config"))
}

type HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes struct {
	ref terra.Reference
}

func (hlacc HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) InternalRef() (terra.Reference, error) {
	return hlacc.ref, nil
}

func (hlacc HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) InternalWithRef(ref terra.Reference) HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes {
	return HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes{ref: ref}
}

func (hlacc HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlacc.ref.InternalTokens()
}

func (hlacc HumanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) HumanLoopActivationConditions() terra.StringValue {
	return terra.ReferenceAsString(hlacc.ref.Append("human_loop_activation_conditions"))
}

type HumanLoopConfigAttributes struct {
	ref terra.Reference
}

func (hlc HumanLoopConfigAttributes) InternalRef() (terra.Reference, error) {
	return hlc.ref, nil
}

func (hlc HumanLoopConfigAttributes) InternalWithRef(ref terra.Reference) HumanLoopConfigAttributes {
	return HumanLoopConfigAttributes{ref: ref}
}

func (hlc HumanLoopConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlc.ref.InternalTokens()
}

func (hlc HumanLoopConfigAttributes) HumanTaskUiArn() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("human_task_ui_arn"))
}

func (hlc HumanLoopConfigAttributes) TaskAvailabilityLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hlc.ref.Append("task_availability_lifetime_in_seconds"))
}

func (hlc HumanLoopConfigAttributes) TaskCount() terra.NumberValue {
	return terra.ReferenceAsNumber(hlc.ref.Append("task_count"))
}

func (hlc HumanLoopConfigAttributes) TaskDescription() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("task_description"))
}

func (hlc HumanLoopConfigAttributes) TaskKeywords() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](hlc.ref.Append("task_keywords"))
}

func (hlc HumanLoopConfigAttributes) TaskTimeLimitInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hlc.ref.Append("task_time_limit_in_seconds"))
}

func (hlc HumanLoopConfigAttributes) TaskTitle() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("task_title"))
}

func (hlc HumanLoopConfigAttributes) WorkteamArn() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("workteam_arn"))
}

func (hlc HumanLoopConfigAttributes) PublicWorkforceTaskPrice() terra.ListValue[HumanLoopConfigPublicWorkforceTaskPriceAttributes] {
	return terra.ReferenceAsList[HumanLoopConfigPublicWorkforceTaskPriceAttributes](hlc.ref.Append("public_workforce_task_price"))
}

type HumanLoopConfigPublicWorkforceTaskPriceAttributes struct {
	ref terra.Reference
}

func (pwtp HumanLoopConfigPublicWorkforceTaskPriceAttributes) InternalRef() (terra.Reference, error) {
	return pwtp.ref, nil
}

func (pwtp HumanLoopConfigPublicWorkforceTaskPriceAttributes) InternalWithRef(ref terra.Reference) HumanLoopConfigPublicWorkforceTaskPriceAttributes {
	return HumanLoopConfigPublicWorkforceTaskPriceAttributes{ref: ref}
}

func (pwtp HumanLoopConfigPublicWorkforceTaskPriceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pwtp.ref.InternalTokens()
}

func (pwtp HumanLoopConfigPublicWorkforceTaskPriceAttributes) AmountInUsd() terra.ListValue[HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes] {
	return terra.ReferenceAsList[HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes](pwtp.ref.Append("amount_in_usd"))
}

type HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes struct {
	ref terra.Reference
}

func (aiu HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) InternalRef() (terra.Reference, error) {
	return aiu.ref, nil
}

func (aiu HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) InternalWithRef(ref terra.Reference) HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes {
	return HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes{ref: ref}
}

func (aiu HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aiu.ref.InternalTokens()
}

func (aiu HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) Cents() terra.NumberValue {
	return terra.ReferenceAsNumber(aiu.ref.Append("cents"))
}

func (aiu HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) Dollars() terra.NumberValue {
	return terra.ReferenceAsNumber(aiu.ref.Append("dollars"))
}

func (aiu HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) TenthFractionsOfACent() terra.NumberValue {
	return terra.ReferenceAsNumber(aiu.ref.Append("tenth_fractions_of_a_cent"))
}

type HumanLoopRequestSourceAttributes struct {
	ref terra.Reference
}

func (hlrs HumanLoopRequestSourceAttributes) InternalRef() (terra.Reference, error) {
	return hlrs.ref, nil
}

func (hlrs HumanLoopRequestSourceAttributes) InternalWithRef(ref terra.Reference) HumanLoopRequestSourceAttributes {
	return HumanLoopRequestSourceAttributes{ref: ref}
}

func (hlrs HumanLoopRequestSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlrs.ref.InternalTokens()
}

func (hlrs HumanLoopRequestSourceAttributes) AwsManagedHumanLoopRequestSource() terra.StringValue {
	return terra.ReferenceAsString(hlrs.ref.Append("aws_managed_human_loop_request_source"))
}

type OutputConfigAttributes struct {
	ref terra.Reference
}

func (oc OutputConfigAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc OutputConfigAttributes) InternalWithRef(ref terra.Reference) OutputConfigAttributes {
	return OutputConfigAttributes{ref: ref}
}

func (oc OutputConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc OutputConfigAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("kms_key_id"))
}

func (oc OutputConfigAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("s3_output_path"))
}

type HumanLoopActivationConfigState struct {
	HumanLoopActivationConditionsConfig []HumanLoopActivationConfigHumanLoopActivationConditionsConfigState `json:"human_loop_activation_conditions_config"`
}

type HumanLoopActivationConfigHumanLoopActivationConditionsConfigState struct {
	HumanLoopActivationConditions string `json:"human_loop_activation_conditions"`
}

type HumanLoopConfigState struct {
	HumanTaskUiArn                    string                                         `json:"human_task_ui_arn"`
	TaskAvailabilityLifetimeInSeconds float64                                        `json:"task_availability_lifetime_in_seconds"`
	TaskCount                         float64                                        `json:"task_count"`
	TaskDescription                   string                                         `json:"task_description"`
	TaskKeywords                      []string                                       `json:"task_keywords"`
	TaskTimeLimitInSeconds            float64                                        `json:"task_time_limit_in_seconds"`
	TaskTitle                         string                                         `json:"task_title"`
	WorkteamArn                       string                                         `json:"workteam_arn"`
	PublicWorkforceTaskPrice          []HumanLoopConfigPublicWorkforceTaskPriceState `json:"public_workforce_task_price"`
}

type HumanLoopConfigPublicWorkforceTaskPriceState struct {
	AmountInUsd []HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdState `json:"amount_in_usd"`
}

type HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdState struct {
	Cents                 float64 `json:"cents"`
	Dollars               float64 `json:"dollars"`
	TenthFractionsOfACent float64 `json:"tenth_fractions_of_a_cent"`
}

type HumanLoopRequestSourceState struct {
	AwsManagedHumanLoopRequestSource string `json:"aws_managed_human_loop_request_source"`
}

type OutputConfigState struct {
	KmsKeyId     string `json:"kms_key_id"`
	S3OutputPath string `json:"s3_output_path"`
}
