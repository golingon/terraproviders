// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appmesh_virtual_router

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataSpecAttributes struct {
	ref terra.Reference
}

func (s DataSpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSpecAttributes) InternalWithRef(ref terra.Reference) DataSpecAttributes {
	return DataSpecAttributes{ref: ref}
}

func (s DataSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSpecAttributes) Listener() terra.ListValue[DataSpecListenerAttributes] {
	return terra.ReferenceAsList[DataSpecListenerAttributes](s.ref.Append("listener"))
}

type DataSpecListenerAttributes struct {
	ref terra.Reference
}

func (l DataSpecListenerAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l DataSpecListenerAttributes) InternalWithRef(ref terra.Reference) DataSpecListenerAttributes {
	return DataSpecListenerAttributes{ref: ref}
}

func (l DataSpecListenerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l DataSpecListenerAttributes) PortMapping() terra.ListValue[DataSpecListenerPortMappingAttributes] {
	return terra.ReferenceAsList[DataSpecListenerPortMappingAttributes](l.ref.Append("port_mapping"))
}

type DataSpecListenerPortMappingAttributes struct {
	ref terra.Reference
}

func (pm DataSpecListenerPortMappingAttributes) InternalRef() (terra.Reference, error) {
	return pm.ref, nil
}

func (pm DataSpecListenerPortMappingAttributes) InternalWithRef(ref terra.Reference) DataSpecListenerPortMappingAttributes {
	return DataSpecListenerPortMappingAttributes{ref: ref}
}

func (pm DataSpecListenerPortMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pm.ref.InternalTokens()
}

func (pm DataSpecListenerPortMappingAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(pm.ref.Append("port"))
}

func (pm DataSpecListenerPortMappingAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(pm.ref.Append("protocol"))
}

type DataSpecState struct {
	Listener []DataSpecListenerState `json:"listener"`
}

type DataSpecListenerState struct {
	PortMapping []DataSpecListenerPortMappingState `json:"port_mapping"`
}

type DataSpecListenerPortMappingState struct {
	Port     float64 `json:"port"`
	Protocol string  `json:"protocol"`
}
