// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudwatch_event_connection

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AuthParameters struct {
	// AuthParametersApiKey: optional
	ApiKey *AuthParametersApiKey `hcl:"api_key,block"`
	// AuthParametersBasic: optional
	Basic *AuthParametersBasic `hcl:"basic,block"`
	// AuthParametersInvocationHttpParameters: optional
	InvocationHttpParameters *AuthParametersInvocationHttpParameters `hcl:"invocation_http_parameters,block"`
	// AuthParametersOauth: optional
	Oauth *AuthParametersOauth `hcl:"oauth,block"`
}

type AuthParametersApiKey struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type AuthParametersBasic struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type AuthParametersInvocationHttpParameters struct {
	// AuthParametersInvocationHttpParametersBody: min=0
	Body []AuthParametersInvocationHttpParametersBody `hcl:"body,block" validate:"min=0"`
	// AuthParametersInvocationHttpParametersHeader: min=0
	Header []AuthParametersInvocationHttpParametersHeader `hcl:"header,block" validate:"min=0"`
	// AuthParametersInvocationHttpParametersQueryString: min=0
	QueryString []AuthParametersInvocationHttpParametersQueryString `hcl:"query_string,block" validate:"min=0"`
}

type AuthParametersInvocationHttpParametersBody struct {
	// IsValueSecret: bool, optional
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersInvocationHttpParametersHeader struct {
	// IsValueSecret: bool, optional
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersInvocationHttpParametersQueryString struct {
	// IsValueSecret: bool, optional
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersOauth struct {
	// AuthorizationEndpoint: string, required
	AuthorizationEndpoint terra.StringValue `hcl:"authorization_endpoint,attr" validate:"required"`
	// HttpMethod: string, required
	HttpMethod terra.StringValue `hcl:"http_method,attr" validate:"required"`
	// AuthParametersOauthClientParameters: optional
	ClientParameters *AuthParametersOauthClientParameters `hcl:"client_parameters,block"`
	// AuthParametersOauthOauthHttpParameters: required
	OauthHttpParameters *AuthParametersOauthOauthHttpParameters `hcl:"oauth_http_parameters,block" validate:"required"`
}

type AuthParametersOauthClientParameters struct {
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
}

type AuthParametersOauthOauthHttpParameters struct {
	// AuthParametersOauthOauthHttpParametersBody: min=0
	Body []AuthParametersOauthOauthHttpParametersBody `hcl:"body,block" validate:"min=0"`
	// AuthParametersOauthOauthHttpParametersHeader: min=0
	Header []AuthParametersOauthOauthHttpParametersHeader `hcl:"header,block" validate:"min=0"`
	// AuthParametersOauthOauthHttpParametersQueryString: min=0
	QueryString []AuthParametersOauthOauthHttpParametersQueryString `hcl:"query_string,block" validate:"min=0"`
}

type AuthParametersOauthOauthHttpParametersBody struct {
	// IsValueSecret: bool, optional
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersOauthOauthHttpParametersHeader struct {
	// IsValueSecret: bool, optional
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersOauthOauthHttpParametersQueryString struct {
	// IsValueSecret: bool, optional
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersAttributes struct {
	ref terra.Reference
}

func (ap AuthParametersAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap AuthParametersAttributes) InternalWithRef(ref terra.Reference) AuthParametersAttributes {
	return AuthParametersAttributes{ref: ref}
}

func (ap AuthParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap AuthParametersAttributes) ApiKey() terra.ListValue[AuthParametersApiKeyAttributes] {
	return terra.ReferenceAsList[AuthParametersApiKeyAttributes](ap.ref.Append("api_key"))
}

func (ap AuthParametersAttributes) Basic() terra.ListValue[AuthParametersBasicAttributes] {
	return terra.ReferenceAsList[AuthParametersBasicAttributes](ap.ref.Append("basic"))
}

func (ap AuthParametersAttributes) InvocationHttpParameters() terra.ListValue[AuthParametersInvocationHttpParametersAttributes] {
	return terra.ReferenceAsList[AuthParametersInvocationHttpParametersAttributes](ap.ref.Append("invocation_http_parameters"))
}

func (ap AuthParametersAttributes) Oauth() terra.ListValue[AuthParametersOauthAttributes] {
	return terra.ReferenceAsList[AuthParametersOauthAttributes](ap.ref.Append("oauth"))
}

type AuthParametersApiKeyAttributes struct {
	ref terra.Reference
}

func (ak AuthParametersApiKeyAttributes) InternalRef() (terra.Reference, error) {
	return ak.ref, nil
}

func (ak AuthParametersApiKeyAttributes) InternalWithRef(ref terra.Reference) AuthParametersApiKeyAttributes {
	return AuthParametersApiKeyAttributes{ref: ref}
}

func (ak AuthParametersApiKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ak.ref.InternalTokens()
}

func (ak AuthParametersApiKeyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("key"))
}

func (ak AuthParametersApiKeyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("value"))
}

type AuthParametersBasicAttributes struct {
	ref terra.Reference
}

func (b AuthParametersBasicAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b AuthParametersBasicAttributes) InternalWithRef(ref terra.Reference) AuthParametersBasicAttributes {
	return AuthParametersBasicAttributes{ref: ref}
}

func (b AuthParametersBasicAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b AuthParametersBasicAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("password"))
}

func (b AuthParametersBasicAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("username"))
}

type AuthParametersInvocationHttpParametersAttributes struct {
	ref terra.Reference
}

func (ihp AuthParametersInvocationHttpParametersAttributes) InternalRef() (terra.Reference, error) {
	return ihp.ref, nil
}

func (ihp AuthParametersInvocationHttpParametersAttributes) InternalWithRef(ref terra.Reference) AuthParametersInvocationHttpParametersAttributes {
	return AuthParametersInvocationHttpParametersAttributes{ref: ref}
}

func (ihp AuthParametersInvocationHttpParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ihp.ref.InternalTokens()
}

func (ihp AuthParametersInvocationHttpParametersAttributes) Body() terra.ListValue[AuthParametersInvocationHttpParametersBodyAttributes] {
	return terra.ReferenceAsList[AuthParametersInvocationHttpParametersBodyAttributes](ihp.ref.Append("body"))
}

func (ihp AuthParametersInvocationHttpParametersAttributes) Header() terra.ListValue[AuthParametersInvocationHttpParametersHeaderAttributes] {
	return terra.ReferenceAsList[AuthParametersInvocationHttpParametersHeaderAttributes](ihp.ref.Append("header"))
}

func (ihp AuthParametersInvocationHttpParametersAttributes) QueryString() terra.ListValue[AuthParametersInvocationHttpParametersQueryStringAttributes] {
	return terra.ReferenceAsList[AuthParametersInvocationHttpParametersQueryStringAttributes](ihp.ref.Append("query_string"))
}

type AuthParametersInvocationHttpParametersBodyAttributes struct {
	ref terra.Reference
}

func (b AuthParametersInvocationHttpParametersBodyAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b AuthParametersInvocationHttpParametersBodyAttributes) InternalWithRef(ref terra.Reference) AuthParametersInvocationHttpParametersBodyAttributes {
	return AuthParametersInvocationHttpParametersBodyAttributes{ref: ref}
}

func (b AuthParametersInvocationHttpParametersBodyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b AuthParametersInvocationHttpParametersBodyAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("is_value_secret"))
}

func (b AuthParametersInvocationHttpParametersBodyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("key"))
}

func (b AuthParametersInvocationHttpParametersBodyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("value"))
}

type AuthParametersInvocationHttpParametersHeaderAttributes struct {
	ref terra.Reference
}

func (h AuthParametersInvocationHttpParametersHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h AuthParametersInvocationHttpParametersHeaderAttributes) InternalWithRef(ref terra.Reference) AuthParametersInvocationHttpParametersHeaderAttributes {
	return AuthParametersInvocationHttpParametersHeaderAttributes{ref: ref}
}

func (h AuthParametersInvocationHttpParametersHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h AuthParametersInvocationHttpParametersHeaderAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("is_value_secret"))
}

func (h AuthParametersInvocationHttpParametersHeaderAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("key"))
}

func (h AuthParametersInvocationHttpParametersHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type AuthParametersInvocationHttpParametersQueryStringAttributes struct {
	ref terra.Reference
}

func (qs AuthParametersInvocationHttpParametersQueryStringAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs AuthParametersInvocationHttpParametersQueryStringAttributes) InternalWithRef(ref terra.Reference) AuthParametersInvocationHttpParametersQueryStringAttributes {
	return AuthParametersInvocationHttpParametersQueryStringAttributes{ref: ref}
}

func (qs AuthParametersInvocationHttpParametersQueryStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs AuthParametersInvocationHttpParametersQueryStringAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(qs.ref.Append("is_value_secret"))
}

func (qs AuthParametersInvocationHttpParametersQueryStringAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("key"))
}

func (qs AuthParametersInvocationHttpParametersQueryStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("value"))
}

type AuthParametersOauthAttributes struct {
	ref terra.Reference
}

func (o AuthParametersOauthAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o AuthParametersOauthAttributes) InternalWithRef(ref terra.Reference) AuthParametersOauthAttributes {
	return AuthParametersOauthAttributes{ref: ref}
}

func (o AuthParametersOauthAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o AuthParametersOauthAttributes) AuthorizationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("authorization_endpoint"))
}

func (o AuthParametersOauthAttributes) HttpMethod() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("http_method"))
}

func (o AuthParametersOauthAttributes) ClientParameters() terra.ListValue[AuthParametersOauthClientParametersAttributes] {
	return terra.ReferenceAsList[AuthParametersOauthClientParametersAttributes](o.ref.Append("client_parameters"))
}

func (o AuthParametersOauthAttributes) OauthHttpParameters() terra.ListValue[AuthParametersOauthOauthHttpParametersAttributes] {
	return terra.ReferenceAsList[AuthParametersOauthOauthHttpParametersAttributes](o.ref.Append("oauth_http_parameters"))
}

type AuthParametersOauthClientParametersAttributes struct {
	ref terra.Reference
}

func (cp AuthParametersOauthClientParametersAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp AuthParametersOauthClientParametersAttributes) InternalWithRef(ref terra.Reference) AuthParametersOauthClientParametersAttributes {
	return AuthParametersOauthClientParametersAttributes{ref: ref}
}

func (cp AuthParametersOauthClientParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp AuthParametersOauthClientParametersAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("client_id"))
}

func (cp AuthParametersOauthClientParametersAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("client_secret"))
}

type AuthParametersOauthOauthHttpParametersAttributes struct {
	ref terra.Reference
}

func (ohp AuthParametersOauthOauthHttpParametersAttributes) InternalRef() (terra.Reference, error) {
	return ohp.ref, nil
}

func (ohp AuthParametersOauthOauthHttpParametersAttributes) InternalWithRef(ref terra.Reference) AuthParametersOauthOauthHttpParametersAttributes {
	return AuthParametersOauthOauthHttpParametersAttributes{ref: ref}
}

func (ohp AuthParametersOauthOauthHttpParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ohp.ref.InternalTokens()
}

func (ohp AuthParametersOauthOauthHttpParametersAttributes) Body() terra.ListValue[AuthParametersOauthOauthHttpParametersBodyAttributes] {
	return terra.ReferenceAsList[AuthParametersOauthOauthHttpParametersBodyAttributes](ohp.ref.Append("body"))
}

func (ohp AuthParametersOauthOauthHttpParametersAttributes) Header() terra.ListValue[AuthParametersOauthOauthHttpParametersHeaderAttributes] {
	return terra.ReferenceAsList[AuthParametersOauthOauthHttpParametersHeaderAttributes](ohp.ref.Append("header"))
}

func (ohp AuthParametersOauthOauthHttpParametersAttributes) QueryString() terra.ListValue[AuthParametersOauthOauthHttpParametersQueryStringAttributes] {
	return terra.ReferenceAsList[AuthParametersOauthOauthHttpParametersQueryStringAttributes](ohp.ref.Append("query_string"))
}

type AuthParametersOauthOauthHttpParametersBodyAttributes struct {
	ref terra.Reference
}

func (b AuthParametersOauthOauthHttpParametersBodyAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b AuthParametersOauthOauthHttpParametersBodyAttributes) InternalWithRef(ref terra.Reference) AuthParametersOauthOauthHttpParametersBodyAttributes {
	return AuthParametersOauthOauthHttpParametersBodyAttributes{ref: ref}
}

func (b AuthParametersOauthOauthHttpParametersBodyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b AuthParametersOauthOauthHttpParametersBodyAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("is_value_secret"))
}

func (b AuthParametersOauthOauthHttpParametersBodyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("key"))
}

func (b AuthParametersOauthOauthHttpParametersBodyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("value"))
}

type AuthParametersOauthOauthHttpParametersHeaderAttributes struct {
	ref terra.Reference
}

func (h AuthParametersOauthOauthHttpParametersHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h AuthParametersOauthOauthHttpParametersHeaderAttributes) InternalWithRef(ref terra.Reference) AuthParametersOauthOauthHttpParametersHeaderAttributes {
	return AuthParametersOauthOauthHttpParametersHeaderAttributes{ref: ref}
}

func (h AuthParametersOauthOauthHttpParametersHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h AuthParametersOauthOauthHttpParametersHeaderAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("is_value_secret"))
}

func (h AuthParametersOauthOauthHttpParametersHeaderAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("key"))
}

func (h AuthParametersOauthOauthHttpParametersHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type AuthParametersOauthOauthHttpParametersQueryStringAttributes struct {
	ref terra.Reference
}

func (qs AuthParametersOauthOauthHttpParametersQueryStringAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs AuthParametersOauthOauthHttpParametersQueryStringAttributes) InternalWithRef(ref terra.Reference) AuthParametersOauthOauthHttpParametersQueryStringAttributes {
	return AuthParametersOauthOauthHttpParametersQueryStringAttributes{ref: ref}
}

func (qs AuthParametersOauthOauthHttpParametersQueryStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs AuthParametersOauthOauthHttpParametersQueryStringAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(qs.ref.Append("is_value_secret"))
}

func (qs AuthParametersOauthOauthHttpParametersQueryStringAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("key"))
}

func (qs AuthParametersOauthOauthHttpParametersQueryStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("value"))
}

type AuthParametersState struct {
	ApiKey                   []AuthParametersApiKeyState                   `json:"api_key"`
	Basic                    []AuthParametersBasicState                    `json:"basic"`
	InvocationHttpParameters []AuthParametersInvocationHttpParametersState `json:"invocation_http_parameters"`
	Oauth                    []AuthParametersOauthState                    `json:"oauth"`
}

type AuthParametersApiKeyState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type AuthParametersBasicState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type AuthParametersInvocationHttpParametersState struct {
	Body        []AuthParametersInvocationHttpParametersBodyState        `json:"body"`
	Header      []AuthParametersInvocationHttpParametersHeaderState      `json:"header"`
	QueryString []AuthParametersInvocationHttpParametersQueryStringState `json:"query_string"`
}

type AuthParametersInvocationHttpParametersBodyState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersInvocationHttpParametersHeaderState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersInvocationHttpParametersQueryStringState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersOauthState struct {
	AuthorizationEndpoint string                                        `json:"authorization_endpoint"`
	HttpMethod            string                                        `json:"http_method"`
	ClientParameters      []AuthParametersOauthClientParametersState    `json:"client_parameters"`
	OauthHttpParameters   []AuthParametersOauthOauthHttpParametersState `json:"oauth_http_parameters"`
}

type AuthParametersOauthClientParametersState struct {
	ClientId     string `json:"client_id"`
	ClientSecret string `json:"client_secret"`
}

type AuthParametersOauthOauthHttpParametersState struct {
	Body        []AuthParametersOauthOauthHttpParametersBodyState        `json:"body"`
	Header      []AuthParametersOauthOauthHttpParametersHeaderState      `json:"header"`
	QueryString []AuthParametersOauthOauthHttpParametersQueryStringState `json:"query_string"`
}

type AuthParametersOauthOauthHttpParametersBodyState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersOauthOauthHttpParametersHeaderState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersOauthOauthHttpParametersQueryStringState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}
