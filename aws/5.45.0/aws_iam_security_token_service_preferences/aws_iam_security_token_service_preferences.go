// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iam_security_token_service_preferences

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_iam_security_token_service_preferences.
type Resource struct {
	Name      string
	Args      Args
	state     *awsIamSecurityTokenServicePreferencesState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aistsp *Resource) Type() string {
	return "aws_iam_security_token_service_preferences"
}

// LocalName returns the local name for [Resource].
func (aistsp *Resource) LocalName() string {
	return aistsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aistsp *Resource) Configuration() interface{} {
	return aistsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aistsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aistsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aistsp *Resource) Dependencies() terra.Dependencies {
	return aistsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aistsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return aistsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aistsp *Resource) Attributes() awsIamSecurityTokenServicePreferencesAttributes {
	return awsIamSecurityTokenServicePreferencesAttributes{ref: terra.ReferenceResource(aistsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aistsp *Resource) ImportState(state io.Reader) error {
	aistsp.state = &awsIamSecurityTokenServicePreferencesState{}
	if err := json.NewDecoder(state).Decode(aistsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aistsp.Type(), aistsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aistsp *Resource) State() (*awsIamSecurityTokenServicePreferencesState, bool) {
	return aistsp.state, aistsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aistsp *Resource) StateMust() *awsIamSecurityTokenServicePreferencesState {
	if aistsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aistsp.Type(), aistsp.LocalName()))
	}
	return aistsp.state
}

// Args contains the configurations for aws_iam_security_token_service_preferences.
type Args struct {
	// GlobalEndpointTokenVersion: string, required
	GlobalEndpointTokenVersion terra.StringValue `hcl:"global_endpoint_token_version,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsIamSecurityTokenServicePreferencesAttributes struct {
	ref terra.Reference
}

// GlobalEndpointTokenVersion returns a reference to field global_endpoint_token_version of aws_iam_security_token_service_preferences.
func (aistsp awsIamSecurityTokenServicePreferencesAttributes) GlobalEndpointTokenVersion() terra.StringValue {
	return terra.ReferenceAsString(aistsp.ref.Append("global_endpoint_token_version"))
}

// Id returns a reference to field id of aws_iam_security_token_service_preferences.
func (aistsp awsIamSecurityTokenServicePreferencesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aistsp.ref.Append("id"))
}

type awsIamSecurityTokenServicePreferencesState struct {
	GlobalEndpointTokenVersion string `json:"global_endpoint_token_version"`
	Id                         string `json:"id"`
}
