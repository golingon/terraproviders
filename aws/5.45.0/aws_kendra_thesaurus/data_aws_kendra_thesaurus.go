// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kendra_thesaurus

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_kendra_thesaurus.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (akt *DataSource) DataSource() string {
	return "aws_kendra_thesaurus"
}

// LocalName returns the local name for [DataSource].
func (akt *DataSource) LocalName() string {
	return akt.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (akt *DataSource) Configuration() interface{} {
	return akt.Args
}

// Attributes returns the attributes for [DataSource].
func (akt *DataSource) Attributes() dataAwsKendraThesaurusAttributes {
	return dataAwsKendraThesaurusAttributes{ref: terra.ReferenceDataSource(akt)}
}

// DataArgs contains the configurations for aws_kendra_thesaurus.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IndexId: string, required
	IndexId terra.StringValue `hcl:"index_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ThesaurusId: string, required
	ThesaurusId terra.StringValue `hcl:"thesaurus_id,attr" validate:"required"`
}

type dataAwsKendraThesaurusAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("arn"))
}

// CreatedAt returns a reference to field created_at of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("created_at"))
}

// Description returns a reference to field description of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("description"))
}

// ErrorMessage returns a reference to field error_message of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("error_message"))
}

// FileSizeBytes returns a reference to field file_size_bytes of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) FileSizeBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(akt.ref.Append("file_size_bytes"))
}

// Id returns a reference to field id of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("id"))
}

// IndexId returns a reference to field index_id of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) IndexId() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("index_id"))
}

// Name returns a reference to field name of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("name"))
}

// RoleArn returns a reference to field role_arn of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("role_arn"))
}

// Status returns a reference to field status of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("status"))
}

// SynonymRuleCount returns a reference to field synonym_rule_count of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) SynonymRuleCount() terra.NumberValue {
	return terra.ReferenceAsNumber(akt.ref.Append("synonym_rule_count"))
}

// Tags returns a reference to field tags of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](akt.ref.Append("tags"))
}

// TermCount returns a reference to field term_count of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) TermCount() terra.NumberValue {
	return terra.ReferenceAsNumber(akt.ref.Append("term_count"))
}

// ThesaurusId returns a reference to field thesaurus_id of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) ThesaurusId() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("thesaurus_id"))
}

// UpdatedAt returns a reference to field updated_at of aws_kendra_thesaurus.
func (akt dataAwsKendraThesaurusAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceAsString(akt.ref.Append("updated_at"))
}

func (akt dataAwsKendraThesaurusAttributes) SourceS3Path() terra.ListValue[DataSourceS3PathAttributes] {
	return terra.ReferenceAsList[DataSourceS3PathAttributes](akt.ref.Append("source_s3_path"))
}
