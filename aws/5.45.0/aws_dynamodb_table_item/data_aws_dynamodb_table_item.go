// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dynamodb_table_item

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_dynamodb_table_item.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (adti *DataSource) DataSource() string {
	return "aws_dynamodb_table_item"
}

// LocalName returns the local name for [DataSource].
func (adti *DataSource) LocalName() string {
	return adti.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (adti *DataSource) Configuration() interface{} {
	return adti.Args
}

// Attributes returns the attributes for [DataSource].
func (adti *DataSource) Attributes() dataAwsDynamodbTableItemAttributes {
	return dataAwsDynamodbTableItemAttributes{ref: terra.ReferenceDataSource(adti)}
}

// DataArgs contains the configurations for aws_dynamodb_table_item.
type DataArgs struct {
	// ExpressionAttributeNames: map of string, optional
	ExpressionAttributeNames terra.MapValue[terra.StringValue] `hcl:"expression_attribute_names,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// ProjectionExpression: string, optional
	ProjectionExpression terra.StringValue `hcl:"projection_expression,attr"`
	// TableName: string, required
	TableName terra.StringValue `hcl:"table_name,attr" validate:"required"`
}

type dataAwsDynamodbTableItemAttributes struct {
	ref terra.Reference
}

// ExpressionAttributeNames returns a reference to field expression_attribute_names of aws_dynamodb_table_item.
func (adti dataAwsDynamodbTableItemAttributes) ExpressionAttributeNames() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adti.ref.Append("expression_attribute_names"))
}

// Id returns a reference to field id of aws_dynamodb_table_item.
func (adti dataAwsDynamodbTableItemAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adti.ref.Append("id"))
}

// Item returns a reference to field item of aws_dynamodb_table_item.
func (adti dataAwsDynamodbTableItemAttributes) Item() terra.StringValue {
	return terra.ReferenceAsString(adti.ref.Append("item"))
}

// Key returns a reference to field key of aws_dynamodb_table_item.
func (adti dataAwsDynamodbTableItemAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(adti.ref.Append("key"))
}

// ProjectionExpression returns a reference to field projection_expression of aws_dynamodb_table_item.
func (adti dataAwsDynamodbTableItemAttributes) ProjectionExpression() terra.StringValue {
	return terra.ReferenceAsString(adti.ref.Append("projection_expression"))
}

// TableName returns a reference to field table_name of aws_dynamodb_table_item.
func (adti dataAwsDynamodbTableItemAttributes) TableName() terra.StringValue {
	return terra.ReferenceAsString(adti.ref.Append("table_name"))
}
