// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpclattice_service_network_vpc_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_vpclattice_service_network_vpc_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsVpclatticeServiceNetworkVpcAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avsnva *Resource) Type() string {
	return "aws_vpclattice_service_network_vpc_association"
}

// LocalName returns the local name for [Resource].
func (avsnva *Resource) LocalName() string {
	return avsnva.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avsnva *Resource) Configuration() interface{} {
	return avsnva.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avsnva *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avsnva)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avsnva *Resource) Dependencies() terra.Dependencies {
	return avsnva.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avsnva *Resource) LifecycleManagement() *terra.Lifecycle {
	return avsnva.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avsnva *Resource) Attributes() awsVpclatticeServiceNetworkVpcAssociationAttributes {
	return awsVpclatticeServiceNetworkVpcAssociationAttributes{ref: terra.ReferenceResource(avsnva)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avsnva *Resource) ImportState(state io.Reader) error {
	avsnva.state = &awsVpclatticeServiceNetworkVpcAssociationState{}
	if err := json.NewDecoder(state).Decode(avsnva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avsnva.Type(), avsnva.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avsnva *Resource) State() (*awsVpclatticeServiceNetworkVpcAssociationState, bool) {
	return avsnva.state, avsnva.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avsnva *Resource) StateMust() *awsVpclatticeServiceNetworkVpcAssociationState {
	if avsnva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avsnva.Type(), avsnva.LocalName()))
	}
	return avsnva.state
}

// Args contains the configurations for aws_vpclattice_service_network_vpc_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SecurityGroupIds: list of string, optional
	SecurityGroupIds terra.ListValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// ServiceNetworkIdentifier: string, required
	ServiceNetworkIdentifier terra.StringValue `hcl:"service_network_identifier,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpcIdentifier: string, required
	VpcIdentifier terra.StringValue `hcl:"vpc_identifier,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsVpclatticeServiceNetworkVpcAssociationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(avsnva.ref.Append("arn"))
}

// CreatedBy returns a reference to field created_by of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) CreatedBy() terra.StringValue {
	return terra.ReferenceAsString(avsnva.ref.Append("created_by"))
}

// Id returns a reference to field id of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avsnva.ref.Append("id"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) SecurityGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](avsnva.ref.Append("security_group_ids"))
}

// ServiceNetworkIdentifier returns a reference to field service_network_identifier of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) ServiceNetworkIdentifier() terra.StringValue {
	return terra.ReferenceAsString(avsnva.ref.Append("service_network_identifier"))
}

// Status returns a reference to field status of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(avsnva.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](avsnva.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](avsnva.ref.Append("tags_all"))
}

// VpcIdentifier returns a reference to field vpc_identifier of aws_vpclattice_service_network_vpc_association.
func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) VpcIdentifier() terra.StringValue {
	return terra.ReferenceAsString(avsnva.ref.Append("vpc_identifier"))
}

func (avsnva awsVpclatticeServiceNetworkVpcAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avsnva.ref.Append("timeouts"))
}

type awsVpclatticeServiceNetworkVpcAssociationState struct {
	Arn                      string            `json:"arn"`
	CreatedBy                string            `json:"created_by"`
	Id                       string            `json:"id"`
	SecurityGroupIds         []string          `json:"security_group_ids"`
	ServiceNetworkIdentifier string            `json:"service_network_identifier"`
	Status                   string            `json:"status"`
	Tags                     map[string]string `json:"tags"`
	TagsAll                  map[string]string `json:"tags_all"`
	VpcIdentifier            string            `json:"vpc_identifier"`
	Timeouts                 *TimeoutsState    `json:"timeouts"`
}
