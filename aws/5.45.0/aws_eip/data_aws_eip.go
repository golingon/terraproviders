// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_eip

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_eip.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ae *DataSource) DataSource() string {
	return "aws_eip"
}

// LocalName returns the local name for [DataSource].
func (ae *DataSource) LocalName() string {
	return ae.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ae *DataSource) Configuration() interface{} {
	return ae.Args
}

// Attributes returns the attributes for [DataSource].
func (ae *DataSource) Attributes() dataAwsEipAttributes {
	return dataAwsEipAttributes{ref: terra.ReferenceDataSource(ae)}
}

// DataArgs contains the configurations for aws_eip.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PublicIp: string, optional
	PublicIp terra.StringValue `hcl:"public_ip,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEipAttributes struct {
	ref terra.Reference
}

// AssociationId returns a reference to field association_id of aws_eip.
func (ae dataAwsEipAttributes) AssociationId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("association_id"))
}

// CarrierIp returns a reference to field carrier_ip of aws_eip.
func (ae dataAwsEipAttributes) CarrierIp() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("carrier_ip"))
}

// CustomerOwnedIp returns a reference to field customer_owned_ip of aws_eip.
func (ae dataAwsEipAttributes) CustomerOwnedIp() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("customer_owned_ip"))
}

// CustomerOwnedIpv4Pool returns a reference to field customer_owned_ipv4_pool of aws_eip.
func (ae dataAwsEipAttributes) CustomerOwnedIpv4Pool() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("customer_owned_ipv4_pool"))
}

// Domain returns a reference to field domain of aws_eip.
func (ae dataAwsEipAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("domain"))
}

// Id returns a reference to field id of aws_eip.
func (ae dataAwsEipAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of aws_eip.
func (ae dataAwsEipAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("instance_id"))
}

// NetworkInterfaceId returns a reference to field network_interface_id of aws_eip.
func (ae dataAwsEipAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("network_interface_id"))
}

// NetworkInterfaceOwnerId returns a reference to field network_interface_owner_id of aws_eip.
func (ae dataAwsEipAttributes) NetworkInterfaceOwnerId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("network_interface_owner_id"))
}

// PrivateDns returns a reference to field private_dns of aws_eip.
func (ae dataAwsEipAttributes) PrivateDns() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("private_dns"))
}

// PrivateIp returns a reference to field private_ip of aws_eip.
func (ae dataAwsEipAttributes) PrivateIp() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("private_ip"))
}

// PublicDns returns a reference to field public_dns of aws_eip.
func (ae dataAwsEipAttributes) PublicDns() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("public_dns"))
}

// PublicIp returns a reference to field public_ip of aws_eip.
func (ae dataAwsEipAttributes) PublicIp() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("public_ip"))
}

// PublicIpv4Pool returns a reference to field public_ipv4_pool of aws_eip.
func (ae dataAwsEipAttributes) PublicIpv4Pool() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("public_ipv4_pool"))
}

// Tags returns a reference to field tags of aws_eip.
func (ae dataAwsEipAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ae.ref.Append("tags"))
}

func (ae dataAwsEipAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](ae.ref.Append("filter"))
}

func (ae dataAwsEipAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ae.ref.Append("timeouts"))
}
