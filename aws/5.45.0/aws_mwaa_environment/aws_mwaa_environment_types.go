// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_mwaa_environment

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LoggingConfiguration struct {
	// LoggingConfigurationDagProcessingLogs: optional
	DagProcessingLogs *LoggingConfigurationDagProcessingLogs `hcl:"dag_processing_logs,block"`
	// LoggingConfigurationSchedulerLogs: optional
	SchedulerLogs *LoggingConfigurationSchedulerLogs `hcl:"scheduler_logs,block"`
	// LoggingConfigurationTaskLogs: optional
	TaskLogs *LoggingConfigurationTaskLogs `hcl:"task_logs,block"`
	// LoggingConfigurationWebserverLogs: optional
	WebserverLogs *LoggingConfigurationWebserverLogs `hcl:"webserver_logs,block"`
	// LoggingConfigurationWorkerLogs: optional
	WorkerLogs *LoggingConfigurationWorkerLogs `hcl:"worker_logs,block"`
}

type LoggingConfigurationDagProcessingLogs struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationSchedulerLogs struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationTaskLogs struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationWebserverLogs struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationWorkerLogs struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type NetworkConfiguration struct {
	// SecurityGroupIds: set of string, required
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LastUpdatedAttributes struct {
	ref terra.Reference
}

func (lu LastUpdatedAttributes) InternalRef() (terra.Reference, error) {
	return lu.ref, nil
}

func (lu LastUpdatedAttributes) InternalWithRef(ref terra.Reference) LastUpdatedAttributes {
	return LastUpdatedAttributes{ref: ref}
}

func (lu LastUpdatedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lu.ref.InternalTokens()
}

func (lu LastUpdatedAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(lu.ref.Append("created_at"))
}

func (lu LastUpdatedAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(lu.ref.Append("status"))
}

func (lu LastUpdatedAttributes) Error() terra.ListValue[LastUpdatedErrorAttributes] {
	return terra.ReferenceAsList[LastUpdatedErrorAttributes](lu.ref.Append("error"))
}

type LastUpdatedErrorAttributes struct {
	ref terra.Reference
}

func (e LastUpdatedErrorAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e LastUpdatedErrorAttributes) InternalWithRef(ref terra.Reference) LastUpdatedErrorAttributes {
	return LastUpdatedErrorAttributes{ref: ref}
}

func (e LastUpdatedErrorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e LastUpdatedErrorAttributes) ErrorCode() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("error_code"))
}

func (e LastUpdatedErrorAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("error_message"))
}

type LoggingConfigurationAttributes struct {
	ref terra.Reference
}

func (lc LoggingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc LoggingConfigurationAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationAttributes {
	return LoggingConfigurationAttributes{ref: ref}
}

func (lc LoggingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc LoggingConfigurationAttributes) DagProcessingLogs() terra.ListValue[LoggingConfigurationDagProcessingLogsAttributes] {
	return terra.ReferenceAsList[LoggingConfigurationDagProcessingLogsAttributes](lc.ref.Append("dag_processing_logs"))
}

func (lc LoggingConfigurationAttributes) SchedulerLogs() terra.ListValue[LoggingConfigurationSchedulerLogsAttributes] {
	return terra.ReferenceAsList[LoggingConfigurationSchedulerLogsAttributes](lc.ref.Append("scheduler_logs"))
}

func (lc LoggingConfigurationAttributes) TaskLogs() terra.ListValue[LoggingConfigurationTaskLogsAttributes] {
	return terra.ReferenceAsList[LoggingConfigurationTaskLogsAttributes](lc.ref.Append("task_logs"))
}

func (lc LoggingConfigurationAttributes) WebserverLogs() terra.ListValue[LoggingConfigurationWebserverLogsAttributes] {
	return terra.ReferenceAsList[LoggingConfigurationWebserverLogsAttributes](lc.ref.Append("webserver_logs"))
}

func (lc LoggingConfigurationAttributes) WorkerLogs() terra.ListValue[LoggingConfigurationWorkerLogsAttributes] {
	return terra.ReferenceAsList[LoggingConfigurationWorkerLogsAttributes](lc.ref.Append("worker_logs"))
}

type LoggingConfigurationDagProcessingLogsAttributes struct {
	ref terra.Reference
}

func (dpl LoggingConfigurationDagProcessingLogsAttributes) InternalRef() (terra.Reference, error) {
	return dpl.ref, nil
}

func (dpl LoggingConfigurationDagProcessingLogsAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationDagProcessingLogsAttributes {
	return LoggingConfigurationDagProcessingLogsAttributes{ref: ref}
}

func (dpl LoggingConfigurationDagProcessingLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpl.ref.InternalTokens()
}

func (dpl LoggingConfigurationDagProcessingLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(dpl.ref.Append("cloud_watch_log_group_arn"))
}

func (dpl LoggingConfigurationDagProcessingLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(dpl.ref.Append("enabled"))
}

func (dpl LoggingConfigurationDagProcessingLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(dpl.ref.Append("log_level"))
}

type LoggingConfigurationSchedulerLogsAttributes struct {
	ref terra.Reference
}

func (sl LoggingConfigurationSchedulerLogsAttributes) InternalRef() (terra.Reference, error) {
	return sl.ref, nil
}

func (sl LoggingConfigurationSchedulerLogsAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationSchedulerLogsAttributes {
	return LoggingConfigurationSchedulerLogsAttributes{ref: ref}
}

func (sl LoggingConfigurationSchedulerLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sl.ref.InternalTokens()
}

func (sl LoggingConfigurationSchedulerLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("cloud_watch_log_group_arn"))
}

func (sl LoggingConfigurationSchedulerLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sl.ref.Append("enabled"))
}

func (sl LoggingConfigurationSchedulerLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("log_level"))
}

type LoggingConfigurationTaskLogsAttributes struct {
	ref terra.Reference
}

func (tl LoggingConfigurationTaskLogsAttributes) InternalRef() (terra.Reference, error) {
	return tl.ref, nil
}

func (tl LoggingConfigurationTaskLogsAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationTaskLogsAttributes {
	return LoggingConfigurationTaskLogsAttributes{ref: ref}
}

func (tl LoggingConfigurationTaskLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tl.ref.InternalTokens()
}

func (tl LoggingConfigurationTaskLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(tl.ref.Append("cloud_watch_log_group_arn"))
}

func (tl LoggingConfigurationTaskLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(tl.ref.Append("enabled"))
}

func (tl LoggingConfigurationTaskLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(tl.ref.Append("log_level"))
}

type LoggingConfigurationWebserverLogsAttributes struct {
	ref terra.Reference
}

func (wl LoggingConfigurationWebserverLogsAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl LoggingConfigurationWebserverLogsAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationWebserverLogsAttributes {
	return LoggingConfigurationWebserverLogsAttributes{ref: ref}
}

func (wl LoggingConfigurationWebserverLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl LoggingConfigurationWebserverLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("cloud_watch_log_group_arn"))
}

func (wl LoggingConfigurationWebserverLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(wl.ref.Append("enabled"))
}

func (wl LoggingConfigurationWebserverLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("log_level"))
}

type LoggingConfigurationWorkerLogsAttributes struct {
	ref terra.Reference
}

func (wl LoggingConfigurationWorkerLogsAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl LoggingConfigurationWorkerLogsAttributes) InternalWithRef(ref terra.Reference) LoggingConfigurationWorkerLogsAttributes {
	return LoggingConfigurationWorkerLogsAttributes{ref: ref}
}

func (wl LoggingConfigurationWorkerLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl LoggingConfigurationWorkerLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("cloud_watch_log_group_arn"))
}

func (wl LoggingConfigurationWorkerLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(wl.ref.Append("enabled"))
}

func (wl LoggingConfigurationWorkerLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("log_level"))
}

type NetworkConfigurationAttributes struct {
	ref terra.Reference
}

func (nc NetworkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc NetworkConfigurationAttributes) InternalWithRef(ref terra.Reference) NetworkConfigurationAttributes {
	return NetworkConfigurationAttributes{ref: ref}
}

func (nc NetworkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc NetworkConfigurationAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nc.ref.Append("security_group_ids"))
}

func (nc NetworkConfigurationAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nc.ref.Append("subnet_ids"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LastUpdatedState struct {
	CreatedAt string                  `json:"created_at"`
	Status    string                  `json:"status"`
	Error     []LastUpdatedErrorState `json:"error"`
}

type LastUpdatedErrorState struct {
	ErrorCode    string `json:"error_code"`
	ErrorMessage string `json:"error_message"`
}

type LoggingConfigurationState struct {
	DagProcessingLogs []LoggingConfigurationDagProcessingLogsState `json:"dag_processing_logs"`
	SchedulerLogs     []LoggingConfigurationSchedulerLogsState     `json:"scheduler_logs"`
	TaskLogs          []LoggingConfigurationTaskLogsState          `json:"task_logs"`
	WebserverLogs     []LoggingConfigurationWebserverLogsState     `json:"webserver_logs"`
	WorkerLogs        []LoggingConfigurationWorkerLogsState        `json:"worker_logs"`
}

type LoggingConfigurationDagProcessingLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationSchedulerLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationTaskLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationWebserverLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationWorkerLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type NetworkConfigurationState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
