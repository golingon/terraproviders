// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_apigatewayv2_route_response

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_apigatewayv2_route_response.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApigatewayv2RouteResponseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aarr *Resource) Type() string {
	return "aws_apigatewayv2_route_response"
}

// LocalName returns the local name for [Resource].
func (aarr *Resource) LocalName() string {
	return aarr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aarr *Resource) Configuration() interface{} {
	return aarr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aarr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aarr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aarr *Resource) Dependencies() terra.Dependencies {
	return aarr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aarr *Resource) LifecycleManagement() *terra.Lifecycle {
	return aarr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aarr *Resource) Attributes() awsApigatewayv2RouteResponseAttributes {
	return awsApigatewayv2RouteResponseAttributes{ref: terra.ReferenceResource(aarr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aarr *Resource) ImportState(state io.Reader) error {
	aarr.state = &awsApigatewayv2RouteResponseState{}
	if err := json.NewDecoder(state).Decode(aarr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aarr.Type(), aarr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aarr *Resource) State() (*awsApigatewayv2RouteResponseState, bool) {
	return aarr.state, aarr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aarr *Resource) StateMust() *awsApigatewayv2RouteResponseState {
	if aarr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aarr.Type(), aarr.LocalName()))
	}
	return aarr.state
}

// Args contains the configurations for aws_apigatewayv2_route_response.
type Args struct {
	// ApiId: string, required
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ModelSelectionExpression: string, optional
	ModelSelectionExpression terra.StringValue `hcl:"model_selection_expression,attr"`
	// ResponseModels: map of string, optional
	ResponseModels terra.MapValue[terra.StringValue] `hcl:"response_models,attr"`
	// RouteId: string, required
	RouteId terra.StringValue `hcl:"route_id,attr" validate:"required"`
	// RouteResponseKey: string, required
	RouteResponseKey terra.StringValue `hcl:"route_response_key,attr" validate:"required"`
}

type awsApigatewayv2RouteResponseAttributes struct {
	ref terra.Reference
}

// ApiId returns a reference to field api_id of aws_apigatewayv2_route_response.
func (aarr awsApigatewayv2RouteResponseAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(aarr.ref.Append("api_id"))
}

// Id returns a reference to field id of aws_apigatewayv2_route_response.
func (aarr awsApigatewayv2RouteResponseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aarr.ref.Append("id"))
}

// ModelSelectionExpression returns a reference to field model_selection_expression of aws_apigatewayv2_route_response.
func (aarr awsApigatewayv2RouteResponseAttributes) ModelSelectionExpression() terra.StringValue {
	return terra.ReferenceAsString(aarr.ref.Append("model_selection_expression"))
}

// ResponseModels returns a reference to field response_models of aws_apigatewayv2_route_response.
func (aarr awsApigatewayv2RouteResponseAttributes) ResponseModels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aarr.ref.Append("response_models"))
}

// RouteId returns a reference to field route_id of aws_apigatewayv2_route_response.
func (aarr awsApigatewayv2RouteResponseAttributes) RouteId() terra.StringValue {
	return terra.ReferenceAsString(aarr.ref.Append("route_id"))
}

// RouteResponseKey returns a reference to field route_response_key of aws_apigatewayv2_route_response.
func (aarr awsApigatewayv2RouteResponseAttributes) RouteResponseKey() terra.StringValue {
	return terra.ReferenceAsString(aarr.ref.Append("route_response_key"))
}

type awsApigatewayv2RouteResponseState struct {
	ApiId                    string            `json:"api_id"`
	Id                       string            `json:"id"`
	ModelSelectionExpression string            `json:"model_selection_expression"`
	ResponseModels           map[string]string `json:"response_models"`
	RouteId                  string            `json:"route_id"`
	RouteResponseKey         string            `json:"route_response_key"`
}
