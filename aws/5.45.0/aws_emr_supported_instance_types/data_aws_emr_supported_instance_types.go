// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emr_supported_instance_types

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_emr_supported_instance_types.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aesit *DataSource) DataSource() string {
	return "aws_emr_supported_instance_types"
}

// LocalName returns the local name for [DataSource].
func (aesit *DataSource) LocalName() string {
	return aesit.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aesit *DataSource) Configuration() interface{} {
	return aesit.Args
}

// Attributes returns the attributes for [DataSource].
func (aesit *DataSource) Attributes() dataAwsEmrSupportedInstanceTypesAttributes {
	return dataAwsEmrSupportedInstanceTypesAttributes{ref: terra.ReferenceDataSource(aesit)}
}

// DataArgs contains the configurations for aws_emr_supported_instance_types.
type DataArgs struct {
	// ReleaseLabel: string, required
	ReleaseLabel terra.StringValue `hcl:"release_label,attr" validate:"required"`
	// SupportedInstanceTypes: min=0
	SupportedInstanceTypes []DataSupportedInstanceTypes `hcl:"supported_instance_types,block" validate:"min=0"`
}

type dataAwsEmrSupportedInstanceTypesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_emr_supported_instance_types.
func (aesit dataAwsEmrSupportedInstanceTypesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aesit.ref.Append("id"))
}

// ReleaseLabel returns a reference to field release_label of aws_emr_supported_instance_types.
func (aesit dataAwsEmrSupportedInstanceTypesAttributes) ReleaseLabel() terra.StringValue {
	return terra.ReferenceAsString(aesit.ref.Append("release_label"))
}

func (aesit dataAwsEmrSupportedInstanceTypesAttributes) SupportedInstanceTypes() terra.ListValue[DataSupportedInstanceTypesAttributes] {
	return terra.ReferenceAsList[DataSupportedInstanceTypesAttributes](aesit.ref.Append("supported_instance_types"))
}
