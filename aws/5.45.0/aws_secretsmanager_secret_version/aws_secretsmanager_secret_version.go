// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_secretsmanager_secret_version

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_secretsmanager_secret_version.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSecretsmanagerSecretVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (assv *Resource) Type() string {
	return "aws_secretsmanager_secret_version"
}

// LocalName returns the local name for [Resource].
func (assv *Resource) LocalName() string {
	return assv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (assv *Resource) Configuration() interface{} {
	return assv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (assv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(assv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (assv *Resource) Dependencies() terra.Dependencies {
	return assv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (assv *Resource) LifecycleManagement() *terra.Lifecycle {
	return assv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (assv *Resource) Attributes() awsSecretsmanagerSecretVersionAttributes {
	return awsSecretsmanagerSecretVersionAttributes{ref: terra.ReferenceResource(assv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (assv *Resource) ImportState(state io.Reader) error {
	assv.state = &awsSecretsmanagerSecretVersionState{}
	if err := json.NewDecoder(state).Decode(assv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", assv.Type(), assv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (assv *Resource) State() (*awsSecretsmanagerSecretVersionState, bool) {
	return assv.state, assv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (assv *Resource) StateMust() *awsSecretsmanagerSecretVersionState {
	if assv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", assv.Type(), assv.LocalName()))
	}
	return assv.state
}

// Args contains the configurations for aws_secretsmanager_secret_version.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SecretBinary: string, optional
	SecretBinary terra.StringValue `hcl:"secret_binary,attr"`
	// SecretId: string, required
	SecretId terra.StringValue `hcl:"secret_id,attr" validate:"required"`
	// SecretString: string, optional
	SecretString terra.StringValue `hcl:"secret_string,attr"`
	// VersionStages: set of string, optional
	VersionStages terra.SetValue[terra.StringValue] `hcl:"version_stages,attr"`
}

type awsSecretsmanagerSecretVersionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(assv.ref.Append("arn"))
}

// Id returns a reference to field id of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assv.ref.Append("id"))
}

// SecretBinary returns a reference to field secret_binary of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) SecretBinary() terra.StringValue {
	return terra.ReferenceAsString(assv.ref.Append("secret_binary"))
}

// SecretId returns a reference to field secret_id of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) SecretId() terra.StringValue {
	return terra.ReferenceAsString(assv.ref.Append("secret_id"))
}

// SecretString returns a reference to field secret_string of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) SecretString() terra.StringValue {
	return terra.ReferenceAsString(assv.ref.Append("secret_string"))
}

// VersionId returns a reference to field version_id of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) VersionId() terra.StringValue {
	return terra.ReferenceAsString(assv.ref.Append("version_id"))
}

// VersionStages returns a reference to field version_stages of aws_secretsmanager_secret_version.
func (assv awsSecretsmanagerSecretVersionAttributes) VersionStages() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](assv.ref.Append("version_stages"))
}

type awsSecretsmanagerSecretVersionState struct {
	Arn           string   `json:"arn"`
	Id            string   `json:"id"`
	SecretBinary  string   `json:"secret_binary"`
	SecretId      string   `json:"secret_id"`
	SecretString  string   `json:"secret_string"`
	VersionId     string   `json:"version_id"`
	VersionStages []string `json:"version_stages"`
}
