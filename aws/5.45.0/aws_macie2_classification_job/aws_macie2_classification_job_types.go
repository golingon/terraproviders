// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_macie2_classification_job

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type S3JobDefinition struct {
	// S3JobDefinitionBucketCriteria: optional
	BucketCriteria *S3JobDefinitionBucketCriteria `hcl:"bucket_criteria,block"`
	// S3JobDefinitionBucketDefinitions: min=0
	BucketDefinitions []S3JobDefinitionBucketDefinitions `hcl:"bucket_definitions,block" validate:"min=0"`
	// S3JobDefinitionScoping: optional
	Scoping *S3JobDefinitionScoping `hcl:"scoping,block"`
}

type S3JobDefinitionBucketCriteria struct {
	// S3JobDefinitionBucketCriteriaExcludes: optional
	Excludes *S3JobDefinitionBucketCriteriaExcludes `hcl:"excludes,block"`
	// S3JobDefinitionBucketCriteriaIncludes: optional
	Includes *S3JobDefinitionBucketCriteriaIncludes `hcl:"includes,block"`
}

type S3JobDefinitionBucketCriteriaExcludes struct {
	// S3JobDefinitionBucketCriteriaExcludesAnd: min=0
	And []S3JobDefinitionBucketCriteriaExcludesAnd `hcl:"and,block" validate:"min=0"`
}

type S3JobDefinitionBucketCriteriaExcludesAnd struct {
	// S3JobDefinitionBucketCriteria6029Afd4: optional
	SimpleCriterion *S3JobDefinitionBucketCriteria6029Afd4 `hcl:"simple_criterion,block"`
	// S3JobDefinitionBucketCriteria38A49Eea: optional
	TagCriterion *S3JobDefinitionBucketCriteria38A49Eea `hcl:"tag_criterion,block"`
}

type S3JobDefinitionBucketCriteria6029Afd4 struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Values: list of string, optional
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr"`
}

type S3JobDefinitionBucketCriteria38A49Eea struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// S3JobDefinitionBucketCriteria68821Fae: min=0
	TagValues []S3JobDefinitionBucketCriteria68821Fae `hcl:"tag_values,block" validate:"min=0"`
}

type S3JobDefinitionBucketCriteria68821Fae struct {
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type S3JobDefinitionBucketCriteriaIncludes struct {
	// S3JobDefinitionBucketCriteriaIncludesAnd: min=0
	And []S3JobDefinitionBucketCriteriaIncludesAnd `hcl:"and,block" validate:"min=0"`
}

type S3JobDefinitionBucketCriteriaIncludesAnd struct {
	// S3JobDefinitionBucketCriteria3F0B2637: optional
	SimpleCriterion *S3JobDefinitionBucketCriteria3F0B2637 `hcl:"simple_criterion,block"`
	// S3JobDefinitionBucketCriteria921D28Ef: optional
	TagCriterion *S3JobDefinitionBucketCriteria921D28Ef `hcl:"tag_criterion,block"`
}

type S3JobDefinitionBucketCriteria3F0B2637 struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Values: list of string, optional
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr"`
}

type S3JobDefinitionBucketCriteria921D28Ef struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// S3JobDefinitionBucketCriteria02B0E3F7: min=0
	TagValues []S3JobDefinitionBucketCriteria02B0E3F7 `hcl:"tag_values,block" validate:"min=0"`
}

type S3JobDefinitionBucketCriteria02B0E3F7 struct {
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type S3JobDefinitionBucketDefinitions struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Buckets: list of string, required
	Buckets terra.ListValue[terra.StringValue] `hcl:"buckets,attr" validate:"required"`
}

type S3JobDefinitionScoping struct {
	// S3JobDefinitionScopingExcludes: optional
	Excludes *S3JobDefinitionScopingExcludes `hcl:"excludes,block"`
	// S3JobDefinitionScopingIncludes: optional
	Includes *S3JobDefinitionScopingIncludes `hcl:"includes,block"`
}

type S3JobDefinitionScopingExcludes struct {
	// S3JobDefinitionScopingExcludesAnd: min=0
	And []S3JobDefinitionScopingExcludesAnd `hcl:"and,block" validate:"min=0"`
}

type S3JobDefinitionScopingExcludesAnd struct {
	// S3JobDefinitionScoping123393A2: optional
	SimpleScopeTerm *S3JobDefinitionScoping123393A2 `hcl:"simple_scope_term,block"`
	// S3JobDefinitionScoping12440808: optional
	TagScopeTerm *S3JobDefinitionScoping12440808 `hcl:"tag_scope_term,block"`
}

type S3JobDefinitionScoping123393A2 struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Values: list of string, optional
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr"`
}

type S3JobDefinitionScoping12440808 struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Target: string, optional
	Target terra.StringValue `hcl:"target,attr"`
	// S3JobDefinitionScopingE636478F: min=0
	TagValues []S3JobDefinitionScopingE636478F `hcl:"tag_values,block" validate:"min=0"`
}

type S3JobDefinitionScopingE636478F struct {
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type S3JobDefinitionScopingIncludes struct {
	// S3JobDefinitionScopingIncludesAnd: min=0
	And []S3JobDefinitionScopingIncludesAnd `hcl:"and,block" validate:"min=0"`
}

type S3JobDefinitionScopingIncludesAnd struct {
	// S3JobDefinitionScopingBab5C365: optional
	SimpleScopeTerm *S3JobDefinitionScopingBab5C365 `hcl:"simple_scope_term,block"`
	// S3JobDefinitionScopingD3De6Ecb: optional
	TagScopeTerm *S3JobDefinitionScopingD3De6Ecb `hcl:"tag_scope_term,block"`
}

type S3JobDefinitionScopingBab5C365 struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Values: list of string, optional
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr"`
}

type S3JobDefinitionScopingD3De6Ecb struct {
	// Comparator: string, optional
	Comparator terra.StringValue `hcl:"comparator,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Target: string, optional
	Target terra.StringValue `hcl:"target,attr"`
	// S3JobDefinitionScoping6348633B: min=0
	TagValues []S3JobDefinitionScoping6348633B `hcl:"tag_values,block" validate:"min=0"`
}

type S3JobDefinitionScoping6348633B struct {
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type ScheduleFrequency struct {
	// DailySchedule: bool, optional
	DailySchedule terra.BoolValue `hcl:"daily_schedule,attr"`
	// MonthlySchedule: number, optional
	MonthlySchedule terra.NumberValue `hcl:"monthly_schedule,attr"`
	// WeeklySchedule: string, optional
	WeeklySchedule terra.StringValue `hcl:"weekly_schedule,attr"`
}

type UserPausedDetailsAttributes struct {
	ref terra.Reference
}

func (upd UserPausedDetailsAttributes) InternalRef() (terra.Reference, error) {
	return upd.ref, nil
}

func (upd UserPausedDetailsAttributes) InternalWithRef(ref terra.Reference) UserPausedDetailsAttributes {
	return UserPausedDetailsAttributes{ref: ref}
}

func (upd UserPausedDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return upd.ref.InternalTokens()
}

func (upd UserPausedDetailsAttributes) JobExpiresAt() terra.StringValue {
	return terra.ReferenceAsString(upd.ref.Append("job_expires_at"))
}

func (upd UserPausedDetailsAttributes) JobImminentExpirationHealthEventArn() terra.StringValue {
	return terra.ReferenceAsString(upd.ref.Append("job_imminent_expiration_health_event_arn"))
}

func (upd UserPausedDetailsAttributes) JobPausedAt() terra.StringValue {
	return terra.ReferenceAsString(upd.ref.Append("job_paused_at"))
}

type S3JobDefinitionAttributes struct {
	ref terra.Reference
}

func (sjd S3JobDefinitionAttributes) InternalRef() (terra.Reference, error) {
	return sjd.ref, nil
}

func (sjd S3JobDefinitionAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionAttributes {
	return S3JobDefinitionAttributes{ref: ref}
}

func (sjd S3JobDefinitionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sjd.ref.InternalTokens()
}

func (sjd S3JobDefinitionAttributes) BucketCriteria() terra.ListValue[S3JobDefinitionBucketCriteriaAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteriaAttributes](sjd.ref.Append("bucket_criteria"))
}

func (sjd S3JobDefinitionAttributes) BucketDefinitions() terra.ListValue[S3JobDefinitionBucketDefinitionsAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketDefinitionsAttributes](sjd.ref.Append("bucket_definitions"))
}

func (sjd S3JobDefinitionAttributes) Scoping() terra.ListValue[S3JobDefinitionScopingAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingAttributes](sjd.ref.Append("scoping"))
}

type S3JobDefinitionBucketCriteriaAttributes struct {
	ref terra.Reference
}

func (bc S3JobDefinitionBucketCriteriaAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc S3JobDefinitionBucketCriteriaAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteriaAttributes {
	return S3JobDefinitionBucketCriteriaAttributes{ref: ref}
}

func (bc S3JobDefinitionBucketCriteriaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc S3JobDefinitionBucketCriteriaAttributes) Excludes() terra.ListValue[S3JobDefinitionBucketCriteriaExcludesAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteriaExcludesAttributes](bc.ref.Append("excludes"))
}

func (bc S3JobDefinitionBucketCriteriaAttributes) Includes() terra.ListValue[S3JobDefinitionBucketCriteriaIncludesAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteriaIncludesAttributes](bc.ref.Append("includes"))
}

type S3JobDefinitionBucketCriteriaExcludesAttributes struct {
	ref terra.Reference
}

func (e S3JobDefinitionBucketCriteriaExcludesAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e S3JobDefinitionBucketCriteriaExcludesAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteriaExcludesAttributes {
	return S3JobDefinitionBucketCriteriaExcludesAttributes{ref: ref}
}

func (e S3JobDefinitionBucketCriteriaExcludesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e S3JobDefinitionBucketCriteriaExcludesAttributes) And() terra.ListValue[S3JobDefinitionBucketCriteriaExcludesAndAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteriaExcludesAndAttributes](e.ref.Append("and"))
}

type S3JobDefinitionBucketCriteriaExcludesAndAttributes struct {
	ref terra.Reference
}

func (a S3JobDefinitionBucketCriteriaExcludesAndAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a S3JobDefinitionBucketCriteriaExcludesAndAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteriaExcludesAndAttributes {
	return S3JobDefinitionBucketCriteriaExcludesAndAttributes{ref: ref}
}

func (a S3JobDefinitionBucketCriteriaExcludesAndAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a S3JobDefinitionBucketCriteriaExcludesAndAttributes) SimpleCriterion() terra.ListValue[S3JobDefinitionBucketCriteria6029Afd4Attributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteria6029Afd4Attributes](a.ref.Append("simple_criterion"))
}

func (a S3JobDefinitionBucketCriteriaExcludesAndAttributes) TagCriterion() terra.ListValue[S3JobDefinitionBucketCriteria38A49EeaAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteria38A49EeaAttributes](a.ref.Append("tag_criterion"))
}

type S3JobDefinitionBucketCriteria6029Afd4Attributes struct {
	ref terra.Reference
}

func (sc S3JobDefinitionBucketCriteria6029Afd4Attributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc S3JobDefinitionBucketCriteria6029Afd4Attributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteria6029Afd4Attributes {
	return S3JobDefinitionBucketCriteria6029Afd4Attributes{ref: ref}
}

func (sc S3JobDefinitionBucketCriteria6029Afd4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc S3JobDefinitionBucketCriteria6029Afd4Attributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("comparator"))
}

func (sc S3JobDefinitionBucketCriteria6029Afd4Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("key"))
}

func (sc S3JobDefinitionBucketCriteria6029Afd4Attributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sc.ref.Append("values"))
}

type S3JobDefinitionBucketCriteria38A49EeaAttributes struct {
	ref terra.Reference
}

func (tc S3JobDefinitionBucketCriteria38A49EeaAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc S3JobDefinitionBucketCriteria38A49EeaAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteria38A49EeaAttributes {
	return S3JobDefinitionBucketCriteria38A49EeaAttributes{ref: ref}
}

func (tc S3JobDefinitionBucketCriteria38A49EeaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc S3JobDefinitionBucketCriteria38A49EeaAttributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("comparator"))
}

func (tc S3JobDefinitionBucketCriteria38A49EeaAttributes) TagValues() terra.ListValue[S3JobDefinitionBucketCriteria68821FaeAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteria68821FaeAttributes](tc.ref.Append("tag_values"))
}

type S3JobDefinitionBucketCriteria68821FaeAttributes struct {
	ref terra.Reference
}

func (tv S3JobDefinitionBucketCriteria68821FaeAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv S3JobDefinitionBucketCriteria68821FaeAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteria68821FaeAttributes {
	return S3JobDefinitionBucketCriteria68821FaeAttributes{ref: ref}
}

func (tv S3JobDefinitionBucketCriteria68821FaeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv S3JobDefinitionBucketCriteria68821FaeAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("key"))
}

func (tv S3JobDefinitionBucketCriteria68821FaeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("value"))
}

type S3JobDefinitionBucketCriteriaIncludesAttributes struct {
	ref terra.Reference
}

func (i S3JobDefinitionBucketCriteriaIncludesAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i S3JobDefinitionBucketCriteriaIncludesAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteriaIncludesAttributes {
	return S3JobDefinitionBucketCriteriaIncludesAttributes{ref: ref}
}

func (i S3JobDefinitionBucketCriteriaIncludesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i S3JobDefinitionBucketCriteriaIncludesAttributes) And() terra.ListValue[S3JobDefinitionBucketCriteriaIncludesAndAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteriaIncludesAndAttributes](i.ref.Append("and"))
}

type S3JobDefinitionBucketCriteriaIncludesAndAttributes struct {
	ref terra.Reference
}

func (a S3JobDefinitionBucketCriteriaIncludesAndAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a S3JobDefinitionBucketCriteriaIncludesAndAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteriaIncludesAndAttributes {
	return S3JobDefinitionBucketCriteriaIncludesAndAttributes{ref: ref}
}

func (a S3JobDefinitionBucketCriteriaIncludesAndAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a S3JobDefinitionBucketCriteriaIncludesAndAttributes) SimpleCriterion() terra.ListValue[S3JobDefinitionBucketCriteria3F0B2637Attributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteria3F0B2637Attributes](a.ref.Append("simple_criterion"))
}

func (a S3JobDefinitionBucketCriteriaIncludesAndAttributes) TagCriterion() terra.ListValue[S3JobDefinitionBucketCriteria921D28EfAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteria921D28EfAttributes](a.ref.Append("tag_criterion"))
}

type S3JobDefinitionBucketCriteria3F0B2637Attributes struct {
	ref terra.Reference
}

func (sc S3JobDefinitionBucketCriteria3F0B2637Attributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc S3JobDefinitionBucketCriteria3F0B2637Attributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteria3F0B2637Attributes {
	return S3JobDefinitionBucketCriteria3F0B2637Attributes{ref: ref}
}

func (sc S3JobDefinitionBucketCriteria3F0B2637Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc S3JobDefinitionBucketCriteria3F0B2637Attributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("comparator"))
}

func (sc S3JobDefinitionBucketCriteria3F0B2637Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("key"))
}

func (sc S3JobDefinitionBucketCriteria3F0B2637Attributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sc.ref.Append("values"))
}

type S3JobDefinitionBucketCriteria921D28EfAttributes struct {
	ref terra.Reference
}

func (tc S3JobDefinitionBucketCriteria921D28EfAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc S3JobDefinitionBucketCriteria921D28EfAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteria921D28EfAttributes {
	return S3JobDefinitionBucketCriteria921D28EfAttributes{ref: ref}
}

func (tc S3JobDefinitionBucketCriteria921D28EfAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc S3JobDefinitionBucketCriteria921D28EfAttributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("comparator"))
}

func (tc S3JobDefinitionBucketCriteria921D28EfAttributes) TagValues() terra.ListValue[S3JobDefinitionBucketCriteria02B0E3F7Attributes] {
	return terra.ReferenceAsList[S3JobDefinitionBucketCriteria02B0E3F7Attributes](tc.ref.Append("tag_values"))
}

type S3JobDefinitionBucketCriteria02B0E3F7Attributes struct {
	ref terra.Reference
}

func (tv S3JobDefinitionBucketCriteria02B0E3F7Attributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv S3JobDefinitionBucketCriteria02B0E3F7Attributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketCriteria02B0E3F7Attributes {
	return S3JobDefinitionBucketCriteria02B0E3F7Attributes{ref: ref}
}

func (tv S3JobDefinitionBucketCriteria02B0E3F7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv S3JobDefinitionBucketCriteria02B0E3F7Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("key"))
}

func (tv S3JobDefinitionBucketCriteria02B0E3F7Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("value"))
}

type S3JobDefinitionBucketDefinitionsAttributes struct {
	ref terra.Reference
}

func (bd S3JobDefinitionBucketDefinitionsAttributes) InternalRef() (terra.Reference, error) {
	return bd.ref, nil
}

func (bd S3JobDefinitionBucketDefinitionsAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionBucketDefinitionsAttributes {
	return S3JobDefinitionBucketDefinitionsAttributes{ref: ref}
}

func (bd S3JobDefinitionBucketDefinitionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bd.ref.InternalTokens()
}

func (bd S3JobDefinitionBucketDefinitionsAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(bd.ref.Append("account_id"))
}

func (bd S3JobDefinitionBucketDefinitionsAttributes) Buckets() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](bd.ref.Append("buckets"))
}

type S3JobDefinitionScopingAttributes struct {
	ref terra.Reference
}

func (s S3JobDefinitionScopingAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s S3JobDefinitionScopingAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingAttributes {
	return S3JobDefinitionScopingAttributes{ref: ref}
}

func (s S3JobDefinitionScopingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s S3JobDefinitionScopingAttributes) Excludes() terra.ListValue[S3JobDefinitionScopingExcludesAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingExcludesAttributes](s.ref.Append("excludes"))
}

func (s S3JobDefinitionScopingAttributes) Includes() terra.ListValue[S3JobDefinitionScopingIncludesAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingIncludesAttributes](s.ref.Append("includes"))
}

type S3JobDefinitionScopingExcludesAttributes struct {
	ref terra.Reference
}

func (e S3JobDefinitionScopingExcludesAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e S3JobDefinitionScopingExcludesAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingExcludesAttributes {
	return S3JobDefinitionScopingExcludesAttributes{ref: ref}
}

func (e S3JobDefinitionScopingExcludesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e S3JobDefinitionScopingExcludesAttributes) And() terra.ListValue[S3JobDefinitionScopingExcludesAndAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingExcludesAndAttributes](e.ref.Append("and"))
}

type S3JobDefinitionScopingExcludesAndAttributes struct {
	ref terra.Reference
}

func (a S3JobDefinitionScopingExcludesAndAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a S3JobDefinitionScopingExcludesAndAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingExcludesAndAttributes {
	return S3JobDefinitionScopingExcludesAndAttributes{ref: ref}
}

func (a S3JobDefinitionScopingExcludesAndAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a S3JobDefinitionScopingExcludesAndAttributes) SimpleScopeTerm() terra.ListValue[S3JobDefinitionScoping123393A2Attributes] {
	return terra.ReferenceAsList[S3JobDefinitionScoping123393A2Attributes](a.ref.Append("simple_scope_term"))
}

func (a S3JobDefinitionScopingExcludesAndAttributes) TagScopeTerm() terra.ListValue[S3JobDefinitionScoping12440808Attributes] {
	return terra.ReferenceAsList[S3JobDefinitionScoping12440808Attributes](a.ref.Append("tag_scope_term"))
}

type S3JobDefinitionScoping123393A2Attributes struct {
	ref terra.Reference
}

func (sst S3JobDefinitionScoping123393A2Attributes) InternalRef() (terra.Reference, error) {
	return sst.ref, nil
}

func (sst S3JobDefinitionScoping123393A2Attributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScoping123393A2Attributes {
	return S3JobDefinitionScoping123393A2Attributes{ref: ref}
}

func (sst S3JobDefinitionScoping123393A2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sst.ref.InternalTokens()
}

func (sst S3JobDefinitionScoping123393A2Attributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(sst.ref.Append("comparator"))
}

func (sst S3JobDefinitionScoping123393A2Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sst.ref.Append("key"))
}

func (sst S3JobDefinitionScoping123393A2Attributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sst.ref.Append("values"))
}

type S3JobDefinitionScoping12440808Attributes struct {
	ref terra.Reference
}

func (tst S3JobDefinitionScoping12440808Attributes) InternalRef() (terra.Reference, error) {
	return tst.ref, nil
}

func (tst S3JobDefinitionScoping12440808Attributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScoping12440808Attributes {
	return S3JobDefinitionScoping12440808Attributes{ref: ref}
}

func (tst S3JobDefinitionScoping12440808Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tst.ref.InternalTokens()
}

func (tst S3JobDefinitionScoping12440808Attributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(tst.ref.Append("comparator"))
}

func (tst S3JobDefinitionScoping12440808Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tst.ref.Append("key"))
}

func (tst S3JobDefinitionScoping12440808Attributes) Target() terra.StringValue {
	return terra.ReferenceAsString(tst.ref.Append("target"))
}

func (tst S3JobDefinitionScoping12440808Attributes) TagValues() terra.ListValue[S3JobDefinitionScopingE636478FAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingE636478FAttributes](tst.ref.Append("tag_values"))
}

type S3JobDefinitionScopingE636478FAttributes struct {
	ref terra.Reference
}

func (tv S3JobDefinitionScopingE636478FAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv S3JobDefinitionScopingE636478FAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingE636478FAttributes {
	return S3JobDefinitionScopingE636478FAttributes{ref: ref}
}

func (tv S3JobDefinitionScopingE636478FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv S3JobDefinitionScopingE636478FAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("key"))
}

func (tv S3JobDefinitionScopingE636478FAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("value"))
}

type S3JobDefinitionScopingIncludesAttributes struct {
	ref terra.Reference
}

func (i S3JobDefinitionScopingIncludesAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i S3JobDefinitionScopingIncludesAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingIncludesAttributes {
	return S3JobDefinitionScopingIncludesAttributes{ref: ref}
}

func (i S3JobDefinitionScopingIncludesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i S3JobDefinitionScopingIncludesAttributes) And() terra.ListValue[S3JobDefinitionScopingIncludesAndAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingIncludesAndAttributes](i.ref.Append("and"))
}

type S3JobDefinitionScopingIncludesAndAttributes struct {
	ref terra.Reference
}

func (a S3JobDefinitionScopingIncludesAndAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a S3JobDefinitionScopingIncludesAndAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingIncludesAndAttributes {
	return S3JobDefinitionScopingIncludesAndAttributes{ref: ref}
}

func (a S3JobDefinitionScopingIncludesAndAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a S3JobDefinitionScopingIncludesAndAttributes) SimpleScopeTerm() terra.ListValue[S3JobDefinitionScopingBab5C365Attributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingBab5C365Attributes](a.ref.Append("simple_scope_term"))
}

func (a S3JobDefinitionScopingIncludesAndAttributes) TagScopeTerm() terra.ListValue[S3JobDefinitionScopingD3De6EcbAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScopingD3De6EcbAttributes](a.ref.Append("tag_scope_term"))
}

type S3JobDefinitionScopingBab5C365Attributes struct {
	ref terra.Reference
}

func (sst S3JobDefinitionScopingBab5C365Attributes) InternalRef() (terra.Reference, error) {
	return sst.ref, nil
}

func (sst S3JobDefinitionScopingBab5C365Attributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingBab5C365Attributes {
	return S3JobDefinitionScopingBab5C365Attributes{ref: ref}
}

func (sst S3JobDefinitionScopingBab5C365Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sst.ref.InternalTokens()
}

func (sst S3JobDefinitionScopingBab5C365Attributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(sst.ref.Append("comparator"))
}

func (sst S3JobDefinitionScopingBab5C365Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sst.ref.Append("key"))
}

func (sst S3JobDefinitionScopingBab5C365Attributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sst.ref.Append("values"))
}

type S3JobDefinitionScopingD3De6EcbAttributes struct {
	ref terra.Reference
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) InternalRef() (terra.Reference, error) {
	return tst.ref, nil
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScopingD3De6EcbAttributes {
	return S3JobDefinitionScopingD3De6EcbAttributes{ref: ref}
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tst.ref.InternalTokens()
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) Comparator() terra.StringValue {
	return terra.ReferenceAsString(tst.ref.Append("comparator"))
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tst.ref.Append("key"))
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(tst.ref.Append("target"))
}

func (tst S3JobDefinitionScopingD3De6EcbAttributes) TagValues() terra.ListValue[S3JobDefinitionScoping6348633BAttributes] {
	return terra.ReferenceAsList[S3JobDefinitionScoping6348633BAttributes](tst.ref.Append("tag_values"))
}

type S3JobDefinitionScoping6348633BAttributes struct {
	ref terra.Reference
}

func (tv S3JobDefinitionScoping6348633BAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv S3JobDefinitionScoping6348633BAttributes) InternalWithRef(ref terra.Reference) S3JobDefinitionScoping6348633BAttributes {
	return S3JobDefinitionScoping6348633BAttributes{ref: ref}
}

func (tv S3JobDefinitionScoping6348633BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv S3JobDefinitionScoping6348633BAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("key"))
}

func (tv S3JobDefinitionScoping6348633BAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("value"))
}

type ScheduleFrequencyAttributes struct {
	ref terra.Reference
}

func (sf ScheduleFrequencyAttributes) InternalRef() (terra.Reference, error) {
	return sf.ref, nil
}

func (sf ScheduleFrequencyAttributes) InternalWithRef(ref terra.Reference) ScheduleFrequencyAttributes {
	return ScheduleFrequencyAttributes{ref: ref}
}

func (sf ScheduleFrequencyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sf.ref.InternalTokens()
}

func (sf ScheduleFrequencyAttributes) DailySchedule() terra.BoolValue {
	return terra.ReferenceAsBool(sf.ref.Append("daily_schedule"))
}

func (sf ScheduleFrequencyAttributes) MonthlySchedule() terra.NumberValue {
	return terra.ReferenceAsNumber(sf.ref.Append("monthly_schedule"))
}

func (sf ScheduleFrequencyAttributes) WeeklySchedule() terra.StringValue {
	return terra.ReferenceAsString(sf.ref.Append("weekly_schedule"))
}

type UserPausedDetailsState struct {
	JobExpiresAt                        string `json:"job_expires_at"`
	JobImminentExpirationHealthEventArn string `json:"job_imminent_expiration_health_event_arn"`
	JobPausedAt                         string `json:"job_paused_at"`
}

type S3JobDefinitionState struct {
	BucketCriteria    []S3JobDefinitionBucketCriteriaState    `json:"bucket_criteria"`
	BucketDefinitions []S3JobDefinitionBucketDefinitionsState `json:"bucket_definitions"`
	Scoping           []S3JobDefinitionScopingState           `json:"scoping"`
}

type S3JobDefinitionBucketCriteriaState struct {
	Excludes []S3JobDefinitionBucketCriteriaExcludesState `json:"excludes"`
	Includes []S3JobDefinitionBucketCriteriaIncludesState `json:"includes"`
}

type S3JobDefinitionBucketCriteriaExcludesState struct {
	And []S3JobDefinitionBucketCriteriaExcludesAndState `json:"and"`
}

type S3JobDefinitionBucketCriteriaExcludesAndState struct {
	SimpleCriterion []S3JobDefinitionBucketCriteria6029Afd4State `json:"simple_criterion"`
	TagCriterion    []S3JobDefinitionBucketCriteria38A49EeaState `json:"tag_criterion"`
}

type S3JobDefinitionBucketCriteria6029Afd4State struct {
	Comparator string   `json:"comparator"`
	Key        string   `json:"key"`
	Values     []string `json:"values"`
}

type S3JobDefinitionBucketCriteria38A49EeaState struct {
	Comparator string                                       `json:"comparator"`
	TagValues  []S3JobDefinitionBucketCriteria68821FaeState `json:"tag_values"`
}

type S3JobDefinitionBucketCriteria68821FaeState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type S3JobDefinitionBucketCriteriaIncludesState struct {
	And []S3JobDefinitionBucketCriteriaIncludesAndState `json:"and"`
}

type S3JobDefinitionBucketCriteriaIncludesAndState struct {
	SimpleCriterion []S3JobDefinitionBucketCriteria3F0B2637State `json:"simple_criterion"`
	TagCriterion    []S3JobDefinitionBucketCriteria921D28EfState `json:"tag_criterion"`
}

type S3JobDefinitionBucketCriteria3F0B2637State struct {
	Comparator string   `json:"comparator"`
	Key        string   `json:"key"`
	Values     []string `json:"values"`
}

type S3JobDefinitionBucketCriteria921D28EfState struct {
	Comparator string                                       `json:"comparator"`
	TagValues  []S3JobDefinitionBucketCriteria02B0E3F7State `json:"tag_values"`
}

type S3JobDefinitionBucketCriteria02B0E3F7State struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type S3JobDefinitionBucketDefinitionsState struct {
	AccountId string   `json:"account_id"`
	Buckets   []string `json:"buckets"`
}

type S3JobDefinitionScopingState struct {
	Excludes []S3JobDefinitionScopingExcludesState `json:"excludes"`
	Includes []S3JobDefinitionScopingIncludesState `json:"includes"`
}

type S3JobDefinitionScopingExcludesState struct {
	And []S3JobDefinitionScopingExcludesAndState `json:"and"`
}

type S3JobDefinitionScopingExcludesAndState struct {
	SimpleScopeTerm []S3JobDefinitionScoping123393A2State `json:"simple_scope_term"`
	TagScopeTerm    []S3JobDefinitionScoping12440808State `json:"tag_scope_term"`
}

type S3JobDefinitionScoping123393A2State struct {
	Comparator string   `json:"comparator"`
	Key        string   `json:"key"`
	Values     []string `json:"values"`
}

type S3JobDefinitionScoping12440808State struct {
	Comparator string                                `json:"comparator"`
	Key        string                                `json:"key"`
	Target     string                                `json:"target"`
	TagValues  []S3JobDefinitionScopingE636478FState `json:"tag_values"`
}

type S3JobDefinitionScopingE636478FState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type S3JobDefinitionScopingIncludesState struct {
	And []S3JobDefinitionScopingIncludesAndState `json:"and"`
}

type S3JobDefinitionScopingIncludesAndState struct {
	SimpleScopeTerm []S3JobDefinitionScopingBab5C365State `json:"simple_scope_term"`
	TagScopeTerm    []S3JobDefinitionScopingD3De6EcbState `json:"tag_scope_term"`
}

type S3JobDefinitionScopingBab5C365State struct {
	Comparator string   `json:"comparator"`
	Key        string   `json:"key"`
	Values     []string `json:"values"`
}

type S3JobDefinitionScopingD3De6EcbState struct {
	Comparator string                                `json:"comparator"`
	Key        string                                `json:"key"`
	Target     string                                `json:"target"`
	TagValues  []S3JobDefinitionScoping6348633BState `json:"tag_values"`
}

type S3JobDefinitionScoping6348633BState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type ScheduleFrequencyState struct {
	DailySchedule   bool    `json:"daily_schedule"`
	MonthlySchedule float64 `json:"monthly_schedule"`
	WeeklySchedule  string  `json:"weekly_schedule"`
}
