// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_grafana_workspace_api_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_grafana_workspace_api_key.
type Resource struct {
	Name      string
	Args      Args
	state     *awsGrafanaWorkspaceApiKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (agwak *Resource) Type() string {
	return "aws_grafana_workspace_api_key"
}

// LocalName returns the local name for [Resource].
func (agwak *Resource) LocalName() string {
	return agwak.Name
}

// Configuration returns the configuration (args) for [Resource].
func (agwak *Resource) Configuration() interface{} {
	return agwak.Args
}

// DependOn is used for other resources to depend on [Resource].
func (agwak *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(agwak)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (agwak *Resource) Dependencies() terra.Dependencies {
	return agwak.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (agwak *Resource) LifecycleManagement() *terra.Lifecycle {
	return agwak.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (agwak *Resource) Attributes() awsGrafanaWorkspaceApiKeyAttributes {
	return awsGrafanaWorkspaceApiKeyAttributes{ref: terra.ReferenceResource(agwak)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (agwak *Resource) ImportState(state io.Reader) error {
	agwak.state = &awsGrafanaWorkspaceApiKeyState{}
	if err := json.NewDecoder(state).Decode(agwak.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agwak.Type(), agwak.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (agwak *Resource) State() (*awsGrafanaWorkspaceApiKeyState, bool) {
	return agwak.state, agwak.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (agwak *Resource) StateMust() *awsGrafanaWorkspaceApiKeyState {
	if agwak.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agwak.Type(), agwak.LocalName()))
	}
	return agwak.state
}

// Args contains the configurations for aws_grafana_workspace_api_key.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyName: string, required
	KeyName terra.StringValue `hcl:"key_name,attr" validate:"required"`
	// KeyRole: string, required
	KeyRole terra.StringValue `hcl:"key_role,attr" validate:"required"`
	// SecondsToLive: number, required
	SecondsToLive terra.NumberValue `hcl:"seconds_to_live,attr" validate:"required"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
}

type awsGrafanaWorkspaceApiKeyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_grafana_workspace_api_key.
func (agwak awsGrafanaWorkspaceApiKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(agwak.ref.Append("id"))
}

// Key returns a reference to field key of aws_grafana_workspace_api_key.
func (agwak awsGrafanaWorkspaceApiKeyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(agwak.ref.Append("key"))
}

// KeyName returns a reference to field key_name of aws_grafana_workspace_api_key.
func (agwak awsGrafanaWorkspaceApiKeyAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(agwak.ref.Append("key_name"))
}

// KeyRole returns a reference to field key_role of aws_grafana_workspace_api_key.
func (agwak awsGrafanaWorkspaceApiKeyAttributes) KeyRole() terra.StringValue {
	return terra.ReferenceAsString(agwak.ref.Append("key_role"))
}

// SecondsToLive returns a reference to field seconds_to_live of aws_grafana_workspace_api_key.
func (agwak awsGrafanaWorkspaceApiKeyAttributes) SecondsToLive() terra.NumberValue {
	return terra.ReferenceAsNumber(agwak.ref.Append("seconds_to_live"))
}

// WorkspaceId returns a reference to field workspace_id of aws_grafana_workspace_api_key.
func (agwak awsGrafanaWorkspaceApiKeyAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(agwak.ref.Append("workspace_id"))
}

type awsGrafanaWorkspaceApiKeyState struct {
	Id            string  `json:"id"`
	Key           string  `json:"key"`
	KeyName       string  `json:"key_name"`
	KeyRole       string  `json:"key_role"`
	SecondsToLive float64 `json:"seconds_to_live"`
	WorkspaceId   string  `json:"workspace_id"`
}
