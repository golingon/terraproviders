// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_user_hierarchy_structure

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataHierarchyStructureAttributes struct {
	ref terra.Reference
}

func (hs DataHierarchyStructureAttributes) InternalRef() (terra.Reference, error) {
	return hs.ref, nil
}

func (hs DataHierarchyStructureAttributes) InternalWithRef(ref terra.Reference) DataHierarchyStructureAttributes {
	return DataHierarchyStructureAttributes{ref: ref}
}

func (hs DataHierarchyStructureAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hs.ref.InternalTokens()
}

func (hs DataHierarchyStructureAttributes) LevelFive() terra.ListValue[DataHierarchyStructureLevelFiveAttributes] {
	return terra.ReferenceAsList[DataHierarchyStructureLevelFiveAttributes](hs.ref.Append("level_five"))
}

func (hs DataHierarchyStructureAttributes) LevelFour() terra.ListValue[DataHierarchyStructureLevelFourAttributes] {
	return terra.ReferenceAsList[DataHierarchyStructureLevelFourAttributes](hs.ref.Append("level_four"))
}

func (hs DataHierarchyStructureAttributes) LevelOne() terra.ListValue[DataHierarchyStructureLevelOneAttributes] {
	return terra.ReferenceAsList[DataHierarchyStructureLevelOneAttributes](hs.ref.Append("level_one"))
}

func (hs DataHierarchyStructureAttributes) LevelThree() terra.ListValue[DataHierarchyStructureLevelThreeAttributes] {
	return terra.ReferenceAsList[DataHierarchyStructureLevelThreeAttributes](hs.ref.Append("level_three"))
}

func (hs DataHierarchyStructureAttributes) LevelTwo() terra.ListValue[DataHierarchyStructureLevelTwoAttributes] {
	return terra.ReferenceAsList[DataHierarchyStructureLevelTwoAttributes](hs.ref.Append("level_two"))
}

type DataHierarchyStructureLevelFiveAttributes struct {
	ref terra.Reference
}

func (lf DataHierarchyStructureLevelFiveAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DataHierarchyStructureLevelFiveAttributes) InternalWithRef(ref terra.Reference) DataHierarchyStructureLevelFiveAttributes {
	return DataHierarchyStructureLevelFiveAttributes{ref: ref}
}

func (lf DataHierarchyStructureLevelFiveAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DataHierarchyStructureLevelFiveAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf DataHierarchyStructureLevelFiveAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf DataHierarchyStructureLevelFiveAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type DataHierarchyStructureLevelFourAttributes struct {
	ref terra.Reference
}

func (lf DataHierarchyStructureLevelFourAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DataHierarchyStructureLevelFourAttributes) InternalWithRef(ref terra.Reference) DataHierarchyStructureLevelFourAttributes {
	return DataHierarchyStructureLevelFourAttributes{ref: ref}
}

func (lf DataHierarchyStructureLevelFourAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DataHierarchyStructureLevelFourAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf DataHierarchyStructureLevelFourAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf DataHierarchyStructureLevelFourAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type DataHierarchyStructureLevelOneAttributes struct {
	ref terra.Reference
}

func (lo DataHierarchyStructureLevelOneAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo DataHierarchyStructureLevelOneAttributes) InternalWithRef(ref terra.Reference) DataHierarchyStructureLevelOneAttributes {
	return DataHierarchyStructureLevelOneAttributes{ref: ref}
}

func (lo DataHierarchyStructureLevelOneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo DataHierarchyStructureLevelOneAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("arn"))
}

func (lo DataHierarchyStructureLevelOneAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("id"))
}

func (lo DataHierarchyStructureLevelOneAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("name"))
}

type DataHierarchyStructureLevelThreeAttributes struct {
	ref terra.Reference
}

func (lt DataHierarchyStructureLevelThreeAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DataHierarchyStructureLevelThreeAttributes) InternalWithRef(ref terra.Reference) DataHierarchyStructureLevelThreeAttributes {
	return DataHierarchyStructureLevelThreeAttributes{ref: ref}
}

func (lt DataHierarchyStructureLevelThreeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DataHierarchyStructureLevelThreeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt DataHierarchyStructureLevelThreeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DataHierarchyStructureLevelThreeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type DataHierarchyStructureLevelTwoAttributes struct {
	ref terra.Reference
}

func (lt DataHierarchyStructureLevelTwoAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DataHierarchyStructureLevelTwoAttributes) InternalWithRef(ref terra.Reference) DataHierarchyStructureLevelTwoAttributes {
	return DataHierarchyStructureLevelTwoAttributes{ref: ref}
}

func (lt DataHierarchyStructureLevelTwoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DataHierarchyStructureLevelTwoAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt DataHierarchyStructureLevelTwoAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DataHierarchyStructureLevelTwoAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type DataHierarchyStructureState struct {
	LevelFive  []DataHierarchyStructureLevelFiveState  `json:"level_five"`
	LevelFour  []DataHierarchyStructureLevelFourState  `json:"level_four"`
	LevelOne   []DataHierarchyStructureLevelOneState   `json:"level_one"`
	LevelThree []DataHierarchyStructureLevelThreeState `json:"level_three"`
	LevelTwo   []DataHierarchyStructureLevelTwoState   `json:"level_two"`
}

type DataHierarchyStructureLevelFiveState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelFourState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelOneState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelThreeState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelTwoState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
