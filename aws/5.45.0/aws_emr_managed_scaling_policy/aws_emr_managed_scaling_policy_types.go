// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emr_managed_scaling_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ComputeLimits struct {
	// MaximumCapacityUnits: number, required
	MaximumCapacityUnits terra.NumberValue `hcl:"maximum_capacity_units,attr" validate:"required"`
	// MaximumCoreCapacityUnits: number, optional
	MaximumCoreCapacityUnits terra.NumberValue `hcl:"maximum_core_capacity_units,attr"`
	// MaximumOndemandCapacityUnits: number, optional
	MaximumOndemandCapacityUnits terra.NumberValue `hcl:"maximum_ondemand_capacity_units,attr"`
	// MinimumCapacityUnits: number, required
	MinimumCapacityUnits terra.NumberValue `hcl:"minimum_capacity_units,attr" validate:"required"`
	// UnitType: string, required
	UnitType terra.StringValue `hcl:"unit_type,attr" validate:"required"`
}

type ComputeLimitsAttributes struct {
	ref terra.Reference
}

func (cl ComputeLimitsAttributes) InternalRef() (terra.Reference, error) {
	return cl.ref, nil
}

func (cl ComputeLimitsAttributes) InternalWithRef(ref terra.Reference) ComputeLimitsAttributes {
	return ComputeLimitsAttributes{ref: ref}
}

func (cl ComputeLimitsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cl.ref.InternalTokens()
}

func (cl ComputeLimitsAttributes) MaximumCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cl.ref.Append("maximum_capacity_units"))
}

func (cl ComputeLimitsAttributes) MaximumCoreCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cl.ref.Append("maximum_core_capacity_units"))
}

func (cl ComputeLimitsAttributes) MaximumOndemandCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cl.ref.Append("maximum_ondemand_capacity_units"))
}

func (cl ComputeLimitsAttributes) MinimumCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cl.ref.Append("minimum_capacity_units"))
}

func (cl ComputeLimitsAttributes) UnitType() terra.StringValue {
	return terra.ReferenceAsString(cl.ref.Append("unit_type"))
}

type ComputeLimitsState struct {
	MaximumCapacityUnits         float64 `json:"maximum_capacity_units"`
	MaximumCoreCapacityUnits     float64 `json:"maximum_core_capacity_units"`
	MaximumOndemandCapacityUnits float64 `json:"maximum_ondemand_capacity_units"`
	MinimumCapacityUnits         float64 `json:"minimum_capacity_units"`
	UnitType                     string  `json:"unit_type"`
}
