// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_serverlessapplicationrepository_application

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_serverlessapplicationrepository_application.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asa *DataSource) DataSource() string {
	return "aws_serverlessapplicationrepository_application"
}

// LocalName returns the local name for [DataSource].
func (asa *DataSource) LocalName() string {
	return asa.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asa *DataSource) Configuration() interface{} {
	return asa.Args
}

// Attributes returns the attributes for [DataSource].
func (asa *DataSource) Attributes() dataAwsServerlessapplicationrepositoryApplicationAttributes {
	return dataAwsServerlessapplicationrepositoryApplicationAttributes{ref: terra.ReferenceDataSource(asa)}
}

// DataArgs contains the configurations for aws_serverlessapplicationrepository_application.
type DataArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SemanticVersion: string, optional
	SemanticVersion terra.StringValue `hcl:"semantic_version,attr"`
}

type dataAwsServerlessapplicationrepositoryApplicationAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("application_id"))
}

// Id returns a reference to field id of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("id"))
}

// Name returns a reference to field name of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("name"))
}

// RequiredCapabilities returns a reference to field required_capabilities of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) RequiredCapabilities() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asa.ref.Append("required_capabilities"))
}

// SemanticVersion returns a reference to field semantic_version of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) SemanticVersion() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("semantic_version"))
}

// SourceCodeUrl returns a reference to field source_code_url of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) SourceCodeUrl() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("source_code_url"))
}

// TemplateUrl returns a reference to field template_url of aws_serverlessapplicationrepository_application.
func (asa dataAwsServerlessapplicationrepositoryApplicationAttributes) TemplateUrl() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("template_url"))
}
