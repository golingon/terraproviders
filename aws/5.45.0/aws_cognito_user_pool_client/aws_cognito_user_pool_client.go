// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_user_pool_client

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cognito_user_pool_client.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCognitoUserPoolClientState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acupc *Resource) Type() string {
	return "aws_cognito_user_pool_client"
}

// LocalName returns the local name for [Resource].
func (acupc *Resource) LocalName() string {
	return acupc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acupc *Resource) Configuration() interface{} {
	return acupc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acupc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acupc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acupc *Resource) Dependencies() terra.Dependencies {
	return acupc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acupc *Resource) LifecycleManagement() *terra.Lifecycle {
	return acupc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acupc *Resource) Attributes() awsCognitoUserPoolClientAttributes {
	return awsCognitoUserPoolClientAttributes{ref: terra.ReferenceResource(acupc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acupc *Resource) ImportState(state io.Reader) error {
	acupc.state = &awsCognitoUserPoolClientState{}
	if err := json.NewDecoder(state).Decode(acupc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acupc.Type(), acupc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acupc *Resource) State() (*awsCognitoUserPoolClientState, bool) {
	return acupc.state, acupc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acupc *Resource) StateMust() *awsCognitoUserPoolClientState {
	if acupc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acupc.Type(), acupc.LocalName()))
	}
	return acupc.state
}

// Args contains the configurations for aws_cognito_user_pool_client.
type Args struct {
	// AccessTokenValidity: number, optional
	AccessTokenValidity terra.NumberValue `hcl:"access_token_validity,attr"`
	// AllowedOauthFlows: set of string, optional
	AllowedOauthFlows terra.SetValue[terra.StringValue] `hcl:"allowed_oauth_flows,attr"`
	// AllowedOauthFlowsUserPoolClient: bool, optional
	AllowedOauthFlowsUserPoolClient terra.BoolValue `hcl:"allowed_oauth_flows_user_pool_client,attr"`
	// AllowedOauthScopes: set of string, optional
	AllowedOauthScopes terra.SetValue[terra.StringValue] `hcl:"allowed_oauth_scopes,attr"`
	// AuthSessionValidity: number, optional
	AuthSessionValidity terra.NumberValue `hcl:"auth_session_validity,attr"`
	// CallbackUrls: set of string, optional
	CallbackUrls terra.SetValue[terra.StringValue] `hcl:"callback_urls,attr"`
	// DefaultRedirectUri: string, optional
	DefaultRedirectUri terra.StringValue `hcl:"default_redirect_uri,attr"`
	// EnablePropagateAdditionalUserContextData: bool, optional
	EnablePropagateAdditionalUserContextData terra.BoolValue `hcl:"enable_propagate_additional_user_context_data,attr"`
	// EnableTokenRevocation: bool, optional
	EnableTokenRevocation terra.BoolValue `hcl:"enable_token_revocation,attr"`
	// ExplicitAuthFlows: set of string, optional
	ExplicitAuthFlows terra.SetValue[terra.StringValue] `hcl:"explicit_auth_flows,attr"`
	// GenerateSecret: bool, optional
	GenerateSecret terra.BoolValue `hcl:"generate_secret,attr"`
	// IdTokenValidity: number, optional
	IdTokenValidity terra.NumberValue `hcl:"id_token_validity,attr"`
	// LogoutUrls: set of string, optional
	LogoutUrls terra.SetValue[terra.StringValue] `hcl:"logout_urls,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PreventUserExistenceErrors: string, optional
	PreventUserExistenceErrors terra.StringValue `hcl:"prevent_user_existence_errors,attr"`
	// ReadAttributes: set of string, optional
	ReadAttributes terra.SetValue[terra.StringValue] `hcl:"read_attributes,attr"`
	// RefreshTokenValidity: number, optional
	RefreshTokenValidity terra.NumberValue `hcl:"refresh_token_validity,attr"`
	// SupportedIdentityProviders: set of string, optional
	SupportedIdentityProviders terra.SetValue[terra.StringValue] `hcl:"supported_identity_providers,attr"`
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
	// WriteAttributes: set of string, optional
	WriteAttributes terra.SetValue[terra.StringValue] `hcl:"write_attributes,attr"`
	// AnalyticsConfiguration: min=0
	AnalyticsConfiguration []AnalyticsConfiguration `hcl:"analytics_configuration,block" validate:"min=0"`
	// TokenValidityUnits: min=0
	TokenValidityUnits []TokenValidityUnits `hcl:"token_validity_units,block" validate:"min=0"`
}

type awsCognitoUserPoolClientAttributes struct {
	ref terra.Reference
}

// AccessTokenValidity returns a reference to field access_token_validity of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) AccessTokenValidity() terra.NumberValue {
	return terra.ReferenceAsNumber(acupc.ref.Append("access_token_validity"))
}

// AllowedOauthFlows returns a reference to field allowed_oauth_flows of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) AllowedOauthFlows() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("allowed_oauth_flows"))
}

// AllowedOauthFlowsUserPoolClient returns a reference to field allowed_oauth_flows_user_pool_client of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) AllowedOauthFlowsUserPoolClient() terra.BoolValue {
	return terra.ReferenceAsBool(acupc.ref.Append("allowed_oauth_flows_user_pool_client"))
}

// AllowedOauthScopes returns a reference to field allowed_oauth_scopes of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) AllowedOauthScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("allowed_oauth_scopes"))
}

// AuthSessionValidity returns a reference to field auth_session_validity of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) AuthSessionValidity() terra.NumberValue {
	return terra.ReferenceAsNumber(acupc.ref.Append("auth_session_validity"))
}

// CallbackUrls returns a reference to field callback_urls of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) CallbackUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("callback_urls"))
}

// ClientSecret returns a reference to field client_secret of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(acupc.ref.Append("client_secret"))
}

// DefaultRedirectUri returns a reference to field default_redirect_uri of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) DefaultRedirectUri() terra.StringValue {
	return terra.ReferenceAsString(acupc.ref.Append("default_redirect_uri"))
}

// EnablePropagateAdditionalUserContextData returns a reference to field enable_propagate_additional_user_context_data of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) EnablePropagateAdditionalUserContextData() terra.BoolValue {
	return terra.ReferenceAsBool(acupc.ref.Append("enable_propagate_additional_user_context_data"))
}

// EnableTokenRevocation returns a reference to field enable_token_revocation of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) EnableTokenRevocation() terra.BoolValue {
	return terra.ReferenceAsBool(acupc.ref.Append("enable_token_revocation"))
}

// ExplicitAuthFlows returns a reference to field explicit_auth_flows of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) ExplicitAuthFlows() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("explicit_auth_flows"))
}

// GenerateSecret returns a reference to field generate_secret of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) GenerateSecret() terra.BoolValue {
	return terra.ReferenceAsBool(acupc.ref.Append("generate_secret"))
}

// Id returns a reference to field id of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acupc.ref.Append("id"))
}

// IdTokenValidity returns a reference to field id_token_validity of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) IdTokenValidity() terra.NumberValue {
	return terra.ReferenceAsNumber(acupc.ref.Append("id_token_validity"))
}

// LogoutUrls returns a reference to field logout_urls of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) LogoutUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("logout_urls"))
}

// Name returns a reference to field name of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acupc.ref.Append("name"))
}

// PreventUserExistenceErrors returns a reference to field prevent_user_existence_errors of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) PreventUserExistenceErrors() terra.StringValue {
	return terra.ReferenceAsString(acupc.ref.Append("prevent_user_existence_errors"))
}

// ReadAttributes returns a reference to field read_attributes of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) ReadAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("read_attributes"))
}

// RefreshTokenValidity returns a reference to field refresh_token_validity of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) RefreshTokenValidity() terra.NumberValue {
	return terra.ReferenceAsNumber(acupc.ref.Append("refresh_token_validity"))
}

// SupportedIdentityProviders returns a reference to field supported_identity_providers of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) SupportedIdentityProviders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("supported_identity_providers"))
}

// UserPoolId returns a reference to field user_pool_id of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceAsString(acupc.ref.Append("user_pool_id"))
}

// WriteAttributes returns a reference to field write_attributes of aws_cognito_user_pool_client.
func (acupc awsCognitoUserPoolClientAttributes) WriteAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acupc.ref.Append("write_attributes"))
}

func (acupc awsCognitoUserPoolClientAttributes) AnalyticsConfiguration() terra.ListValue[AnalyticsConfigurationAttributes] {
	return terra.ReferenceAsList[AnalyticsConfigurationAttributes](acupc.ref.Append("analytics_configuration"))
}

func (acupc awsCognitoUserPoolClientAttributes) TokenValidityUnits() terra.ListValue[TokenValidityUnitsAttributes] {
	return terra.ReferenceAsList[TokenValidityUnitsAttributes](acupc.ref.Append("token_validity_units"))
}

type awsCognitoUserPoolClientState struct {
	AccessTokenValidity                      float64                       `json:"access_token_validity"`
	AllowedOauthFlows                        []string                      `json:"allowed_oauth_flows"`
	AllowedOauthFlowsUserPoolClient          bool                          `json:"allowed_oauth_flows_user_pool_client"`
	AllowedOauthScopes                       []string                      `json:"allowed_oauth_scopes"`
	AuthSessionValidity                      float64                       `json:"auth_session_validity"`
	CallbackUrls                             []string                      `json:"callback_urls"`
	ClientSecret                             string                        `json:"client_secret"`
	DefaultRedirectUri                       string                        `json:"default_redirect_uri"`
	EnablePropagateAdditionalUserContextData bool                          `json:"enable_propagate_additional_user_context_data"`
	EnableTokenRevocation                    bool                          `json:"enable_token_revocation"`
	ExplicitAuthFlows                        []string                      `json:"explicit_auth_flows"`
	GenerateSecret                           bool                          `json:"generate_secret"`
	Id                                       string                        `json:"id"`
	IdTokenValidity                          float64                       `json:"id_token_validity"`
	LogoutUrls                               []string                      `json:"logout_urls"`
	Name                                     string                        `json:"name"`
	PreventUserExistenceErrors               string                        `json:"prevent_user_existence_errors"`
	ReadAttributes                           []string                      `json:"read_attributes"`
	RefreshTokenValidity                     float64                       `json:"refresh_token_validity"`
	SupportedIdentityProviders               []string                      `json:"supported_identity_providers"`
	UserPoolId                               string                        `json:"user_pool_id"`
	WriteAttributes                          []string                      `json:"write_attributes"`
	AnalyticsConfiguration                   []AnalyticsConfigurationState `json:"analytics_configuration"`
	TokenValidityUnits                       []TokenValidityUnitsState     `json:"token_validity_units"`
}
