// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iam_server_certificate

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_iam_server_certificate.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aisc *DataSource) DataSource() string {
	return "aws_iam_server_certificate"
}

// LocalName returns the local name for [DataSource].
func (aisc *DataSource) LocalName() string {
	return aisc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aisc *DataSource) Configuration() interface{} {
	return aisc.Args
}

// Attributes returns the attributes for [DataSource].
func (aisc *DataSource) Attributes() dataAwsIamServerCertificateAttributes {
	return dataAwsIamServerCertificateAttributes{ref: terra.ReferenceDataSource(aisc)}
}

// DataArgs contains the configurations for aws_iam_server_certificate.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Latest: bool, optional
	Latest terra.BoolValue `hcl:"latest,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// PathPrefix: string, optional
	PathPrefix terra.StringValue `hcl:"path_prefix,attr"`
}

type dataAwsIamServerCertificateAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("arn"))
}

// CertificateBody returns a reference to field certificate_body of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) CertificateBody() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("certificate_body"))
}

// CertificateChain returns a reference to field certificate_chain of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("certificate_chain"))
}

// ExpirationDate returns a reference to field expiration_date of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) ExpirationDate() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("expiration_date"))
}

// Id returns a reference to field id of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("id"))
}

// Latest returns a reference to field latest of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) Latest() terra.BoolValue {
	return terra.ReferenceAsBool(aisc.ref.Append("latest"))
}

// Name returns a reference to field name of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("name"))
}

// NamePrefix returns a reference to field name_prefix of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("name_prefix"))
}

// Path returns a reference to field path of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("path"))
}

// PathPrefix returns a reference to field path_prefix of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) PathPrefix() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("path_prefix"))
}

// UploadDate returns a reference to field upload_date of aws_iam_server_certificate.
func (aisc dataAwsIamServerCertificateAttributes) UploadDate() terra.StringValue {
	return terra.ReferenceAsString(aisc.ref.Append("upload_date"))
}
