// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3control_object_lambda_access_point_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_s3control_object_lambda_access_point_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *awsS3ControlObjectLambdaAccessPointPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asolapp *Resource) Type() string {
	return "aws_s3control_object_lambda_access_point_policy"
}

// LocalName returns the local name for [Resource].
func (asolapp *Resource) LocalName() string {
	return asolapp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asolapp *Resource) Configuration() interface{} {
	return asolapp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asolapp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asolapp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asolapp *Resource) Dependencies() terra.Dependencies {
	return asolapp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asolapp *Resource) LifecycleManagement() *terra.Lifecycle {
	return asolapp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asolapp *Resource) Attributes() awsS3ControlObjectLambdaAccessPointPolicyAttributes {
	return awsS3ControlObjectLambdaAccessPointPolicyAttributes{ref: terra.ReferenceResource(asolapp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asolapp *Resource) ImportState(state io.Reader) error {
	asolapp.state = &awsS3ControlObjectLambdaAccessPointPolicyState{}
	if err := json.NewDecoder(state).Decode(asolapp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asolapp.Type(), asolapp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asolapp *Resource) State() (*awsS3ControlObjectLambdaAccessPointPolicyState, bool) {
	return asolapp.state, asolapp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asolapp *Resource) StateMust() *awsS3ControlObjectLambdaAccessPointPolicyState {
	if asolapp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asolapp.Type(), asolapp.LocalName()))
	}
	return asolapp.state
}

// Args contains the configurations for aws_s3control_object_lambda_access_point_policy.
type Args struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
}

type awsS3ControlObjectLambdaAccessPointPolicyAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_s3control_object_lambda_access_point_policy.
func (asolapp awsS3ControlObjectLambdaAccessPointPolicyAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(asolapp.ref.Append("account_id"))
}

// HasPublicAccessPolicy returns a reference to field has_public_access_policy of aws_s3control_object_lambda_access_point_policy.
func (asolapp awsS3ControlObjectLambdaAccessPointPolicyAttributes) HasPublicAccessPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(asolapp.ref.Append("has_public_access_policy"))
}

// Id returns a reference to field id of aws_s3control_object_lambda_access_point_policy.
func (asolapp awsS3ControlObjectLambdaAccessPointPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asolapp.ref.Append("id"))
}

// Name returns a reference to field name of aws_s3control_object_lambda_access_point_policy.
func (asolapp awsS3ControlObjectLambdaAccessPointPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asolapp.ref.Append("name"))
}

// Policy returns a reference to field policy of aws_s3control_object_lambda_access_point_policy.
func (asolapp awsS3ControlObjectLambdaAccessPointPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(asolapp.ref.Append("policy"))
}

type awsS3ControlObjectLambdaAccessPointPolicyState struct {
	AccountId             string `json:"account_id"`
	HasPublicAccessPolicy bool   `json:"has_public_access_policy"`
	Id                    string `json:"id"`
	Name                  string `json:"name"`
	Policy                string `json:"policy"`
}
