// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ebs_snapshot

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ebs_snapshot.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aes *DataSource) DataSource() string {
	return "aws_ebs_snapshot"
}

// LocalName returns the local name for [DataSource].
func (aes *DataSource) LocalName() string {
	return aes.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aes *DataSource) Configuration() interface{} {
	return aes.Args
}

// Attributes returns the attributes for [DataSource].
func (aes *DataSource) Attributes() dataAwsEbsSnapshotAttributes {
	return dataAwsEbsSnapshotAttributes{ref: terra.ReferenceDataSource(aes)}
}

// DataArgs contains the configurations for aws_ebs_snapshot.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MostRecent: bool, optional
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Owners: list of string, optional
	Owners terra.ListValue[terra.StringValue] `hcl:"owners,attr"`
	// RestorableByUserIds: list of string, optional
	RestorableByUserIds terra.ListValue[terra.StringValue] `hcl:"restorable_by_user_ids,attr"`
	// SnapshotIds: list of string, optional
	SnapshotIds terra.ListValue[terra.StringValue] `hcl:"snapshot_ids,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEbsSnapshotAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("arn"))
}

// DataEncryptionKeyId returns a reference to field data_encryption_key_id of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) DataEncryptionKeyId() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("data_encryption_key_id"))
}

// Description returns a reference to field description of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("description"))
}

// Encrypted returns a reference to field encrypted of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(aes.ref.Append("encrypted"))
}

// Id returns a reference to field id of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("id"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("kms_key_id"))
}

// MostRecent returns a reference to field most_recent of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceAsBool(aes.ref.Append("most_recent"))
}

// OutpostArn returns a reference to field outpost_arn of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) OutpostArn() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("outpost_arn"))
}

// OwnerAlias returns a reference to field owner_alias of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) OwnerAlias() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("owner_alias"))
}

// OwnerId returns a reference to field owner_id of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("owner_id"))
}

// Owners returns a reference to field owners of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) Owners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aes.ref.Append("owners"))
}

// RestorableByUserIds returns a reference to field restorable_by_user_ids of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) RestorableByUserIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aes.ref.Append("restorable_by_user_ids"))
}

// SnapshotId returns a reference to field snapshot_id of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("snapshot_id"))
}

// SnapshotIds returns a reference to field snapshot_ids of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) SnapshotIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aes.ref.Append("snapshot_ids"))
}

// State returns a reference to field state of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("state"))
}

// StorageTier returns a reference to field storage_tier of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) StorageTier() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("storage_tier"))
}

// Tags returns a reference to field tags of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aes.ref.Append("tags"))
}

// VolumeId returns a reference to field volume_id of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) VolumeId() terra.StringValue {
	return terra.ReferenceAsString(aes.ref.Append("volume_id"))
}

// VolumeSize returns a reference to field volume_size of aws_ebs_snapshot.
func (aes dataAwsEbsSnapshotAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(aes.ref.Append("volume_size"))
}

func (aes dataAwsEbsSnapshotAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](aes.ref.Append("filter"))
}

func (aes dataAwsEbsSnapshotAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aes.ref.Append("timeouts"))
}
