// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_model

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_api_gateway_model.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApiGatewayModelState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aagm *Resource) Type() string {
	return "aws_api_gateway_model"
}

// LocalName returns the local name for [Resource].
func (aagm *Resource) LocalName() string {
	return aagm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aagm *Resource) Configuration() interface{} {
	return aagm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aagm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aagm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aagm *Resource) Dependencies() terra.Dependencies {
	return aagm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aagm *Resource) LifecycleManagement() *terra.Lifecycle {
	return aagm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aagm *Resource) Attributes() awsApiGatewayModelAttributes {
	return awsApiGatewayModelAttributes{ref: terra.ReferenceResource(aagm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aagm *Resource) ImportState(state io.Reader) error {
	aagm.state = &awsApiGatewayModelState{}
	if err := json.NewDecoder(state).Decode(aagm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aagm.Type(), aagm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aagm *Resource) State() (*awsApiGatewayModelState, bool) {
	return aagm.state, aagm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aagm *Resource) StateMust() *awsApiGatewayModelState {
	if aagm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aagm.Type(), aagm.LocalName()))
	}
	return aagm.state
}

// Args contains the configurations for aws_api_gateway_model.
type Args struct {
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// Schema: string, optional
	Schema terra.StringValue `hcl:"schema,attr"`
}

type awsApiGatewayModelAttributes struct {
	ref terra.Reference
}

// ContentType returns a reference to field content_type of aws_api_gateway_model.
func (aagm awsApiGatewayModelAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(aagm.ref.Append("content_type"))
}

// Description returns a reference to field description of aws_api_gateway_model.
func (aagm awsApiGatewayModelAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aagm.ref.Append("description"))
}

// Id returns a reference to field id of aws_api_gateway_model.
func (aagm awsApiGatewayModelAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aagm.ref.Append("id"))
}

// Name returns a reference to field name of aws_api_gateway_model.
func (aagm awsApiGatewayModelAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aagm.ref.Append("name"))
}

// RestApiId returns a reference to field rest_api_id of aws_api_gateway_model.
func (aagm awsApiGatewayModelAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceAsString(aagm.ref.Append("rest_api_id"))
}

// Schema returns a reference to field schema of aws_api_gateway_model.
func (aagm awsApiGatewayModelAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(aagm.ref.Append("schema"))
}

type awsApiGatewayModelState struct {
	ContentType string `json:"content_type"`
	Description string `json:"description"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	RestApiId   string `json:"rest_api_id"`
	Schema      string `json:"schema"`
}
