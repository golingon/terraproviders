// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_local_gateway_route_table_vpc_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ec2_local_gateway_route_table_vpc_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEc2LocalGatewayRouteTableVpcAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aelgrtva *Resource) Type() string {
	return "aws_ec2_local_gateway_route_table_vpc_association"
}

// LocalName returns the local name for [Resource].
func (aelgrtva *Resource) LocalName() string {
	return aelgrtva.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aelgrtva *Resource) Configuration() interface{} {
	return aelgrtva.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aelgrtva *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aelgrtva)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aelgrtva *Resource) Dependencies() terra.Dependencies {
	return aelgrtva.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aelgrtva *Resource) LifecycleManagement() *terra.Lifecycle {
	return aelgrtva.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aelgrtva *Resource) Attributes() awsEc2LocalGatewayRouteTableVpcAssociationAttributes {
	return awsEc2LocalGatewayRouteTableVpcAssociationAttributes{ref: terra.ReferenceResource(aelgrtva)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aelgrtva *Resource) ImportState(state io.Reader) error {
	aelgrtva.state = &awsEc2LocalGatewayRouteTableVpcAssociationState{}
	if err := json.NewDecoder(state).Decode(aelgrtva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aelgrtva.Type(), aelgrtva.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aelgrtva *Resource) State() (*awsEc2LocalGatewayRouteTableVpcAssociationState, bool) {
	return aelgrtva.state, aelgrtva.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aelgrtva *Resource) StateMust() *awsEc2LocalGatewayRouteTableVpcAssociationState {
	if aelgrtva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aelgrtva.Type(), aelgrtva.LocalName()))
	}
	return aelgrtva.state
}

// Args contains the configurations for aws_ec2_local_gateway_route_table_vpc_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalGatewayRouteTableId: string, required
	LocalGatewayRouteTableId terra.StringValue `hcl:"local_gateway_route_table_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
}

type awsEc2LocalGatewayRouteTableVpcAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ec2_local_gateway_route_table_vpc_association.
func (aelgrtva awsEc2LocalGatewayRouteTableVpcAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aelgrtva.ref.Append("id"))
}

// LocalGatewayId returns a reference to field local_gateway_id of aws_ec2_local_gateway_route_table_vpc_association.
func (aelgrtva awsEc2LocalGatewayRouteTableVpcAssociationAttributes) LocalGatewayId() terra.StringValue {
	return terra.ReferenceAsString(aelgrtva.ref.Append("local_gateway_id"))
}

// LocalGatewayRouteTableId returns a reference to field local_gateway_route_table_id of aws_ec2_local_gateway_route_table_vpc_association.
func (aelgrtva awsEc2LocalGatewayRouteTableVpcAssociationAttributes) LocalGatewayRouteTableId() terra.StringValue {
	return terra.ReferenceAsString(aelgrtva.ref.Append("local_gateway_route_table_id"))
}

// Tags returns a reference to field tags of aws_ec2_local_gateway_route_table_vpc_association.
func (aelgrtva awsEc2LocalGatewayRouteTableVpcAssociationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aelgrtva.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_ec2_local_gateway_route_table_vpc_association.
func (aelgrtva awsEc2LocalGatewayRouteTableVpcAssociationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aelgrtva.ref.Append("tags_all"))
}

// VpcId returns a reference to field vpc_id of aws_ec2_local_gateway_route_table_vpc_association.
func (aelgrtva awsEc2LocalGatewayRouteTableVpcAssociationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(aelgrtva.ref.Append("vpc_id"))
}

type awsEc2LocalGatewayRouteTableVpcAssociationState struct {
	Id                       string            `json:"id"`
	LocalGatewayId           string            `json:"local_gateway_id"`
	LocalGatewayRouteTableId string            `json:"local_gateway_route_table_id"`
	Tags                     map[string]string `json:"tags"`
	TagsAll                  map[string]string `json:"tags_all"`
	VpcId                    string            `json:"vpc_id"`
}
