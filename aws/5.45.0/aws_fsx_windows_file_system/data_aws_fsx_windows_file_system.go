// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_windows_file_system

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_fsx_windows_file_system.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (afwfs *DataSource) DataSource() string {
	return "aws_fsx_windows_file_system"
}

// LocalName returns the local name for [DataSource].
func (afwfs *DataSource) LocalName() string {
	return afwfs.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (afwfs *DataSource) Configuration() interface{} {
	return afwfs.Args
}

// Attributes returns the attributes for [DataSource].
func (afwfs *DataSource) Attributes() dataAwsFsxWindowsFileSystemAttributes {
	return dataAwsFsxWindowsFileSystemAttributes{ref: terra.ReferenceDataSource(afwfs)}
}

// DataArgs contains the configurations for aws_fsx_windows_file_system.
type DataArgs struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsFsxWindowsFileSystemAttributes struct {
	ref terra.Reference
}

// ActiveDirectoryId returns a reference to field active_directory_id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) ActiveDirectoryId() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("active_directory_id"))
}

// Aliases returns a reference to field aliases of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) Aliases() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](afwfs.ref.Append("aliases"))
}

// Arn returns a reference to field arn of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("arn"))
}

// AutomaticBackupRetentionDays returns a reference to field automatic_backup_retention_days of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) AutomaticBackupRetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(afwfs.ref.Append("automatic_backup_retention_days"))
}

// BackupId returns a reference to field backup_id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) BackupId() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("backup_id"))
}

// CopyTagsToBackups returns a reference to field copy_tags_to_backups of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) CopyTagsToBackups() terra.BoolValue {
	return terra.ReferenceAsBool(afwfs.ref.Append("copy_tags_to_backups"))
}

// DailyAutomaticBackupStartTime returns a reference to field daily_automatic_backup_start_time of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) DailyAutomaticBackupStartTime() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("daily_automatic_backup_start_time"))
}

// DeploymentType returns a reference to field deployment_type of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) DeploymentType() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("deployment_type"))
}

// DnsName returns a reference to field dns_name of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("dns_name"))
}

// Id returns a reference to field id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("id"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("kms_key_id"))
}

// NetworkInterfaceIds returns a reference to field network_interface_ids of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) NetworkInterfaceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](afwfs.ref.Append("network_interface_ids"))
}

// OwnerId returns a reference to field owner_id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("owner_id"))
}

// PreferredFileServerIp returns a reference to field preferred_file_server_ip of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) PreferredFileServerIp() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("preferred_file_server_ip"))
}

// PreferredSubnetId returns a reference to field preferred_subnet_id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) PreferredSubnetId() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("preferred_subnet_id"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](afwfs.ref.Append("security_group_ids"))
}

// SkipFinalBackup returns a reference to field skip_final_backup of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) SkipFinalBackup() terra.BoolValue {
	return terra.ReferenceAsBool(afwfs.ref.Append("skip_final_backup"))
}

// StorageCapacity returns a reference to field storage_capacity of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) StorageCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(afwfs.ref.Append("storage_capacity"))
}

// StorageType returns a reference to field storage_type of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("storage_type"))
}

// SubnetIds returns a reference to field subnet_ids of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](afwfs.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](afwfs.ref.Append("tags"))
}

// ThroughputCapacity returns a reference to field throughput_capacity of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) ThroughputCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(afwfs.ref.Append("throughput_capacity"))
}

// VpcId returns a reference to field vpc_id of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("vpc_id"))
}

// WeeklyMaintenanceStartTime returns a reference to field weekly_maintenance_start_time of aws_fsx_windows_file_system.
func (afwfs dataAwsFsxWindowsFileSystemAttributes) WeeklyMaintenanceStartTime() terra.StringValue {
	return terra.ReferenceAsString(afwfs.ref.Append("weekly_maintenance_start_time"))
}

func (afwfs dataAwsFsxWindowsFileSystemAttributes) AuditLogConfiguration() terra.ListValue[DataAuditLogConfigurationAttributes] {
	return terra.ReferenceAsList[DataAuditLogConfigurationAttributes](afwfs.ref.Append("audit_log_configuration"))
}

func (afwfs dataAwsFsxWindowsFileSystemAttributes) DiskIopsConfiguration() terra.ListValue[DataDiskIopsConfigurationAttributes] {
	return terra.ReferenceAsList[DataDiskIopsConfigurationAttributes](afwfs.ref.Append("disk_iops_configuration"))
}
