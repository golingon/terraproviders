// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_identity_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CognitoIdentityProviders struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// ServerSideTokenCheck: bool, optional
	ServerSideTokenCheck terra.BoolValue `hcl:"server_side_token_check,attr"`
}

type CognitoIdentityProvidersAttributes struct {
	ref terra.Reference
}

func (cip CognitoIdentityProvidersAttributes) InternalRef() (terra.Reference, error) {
	return cip.ref, nil
}

func (cip CognitoIdentityProvidersAttributes) InternalWithRef(ref terra.Reference) CognitoIdentityProvidersAttributes {
	return CognitoIdentityProvidersAttributes{ref: ref}
}

func (cip CognitoIdentityProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cip.ref.InternalTokens()
}

func (cip CognitoIdentityProvidersAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(cip.ref.Append("client_id"))
}

func (cip CognitoIdentityProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(cip.ref.Append("provider_name"))
}

func (cip CognitoIdentityProvidersAttributes) ServerSideTokenCheck() terra.BoolValue {
	return terra.ReferenceAsBool(cip.ref.Append("server_side_token_check"))
}

type CognitoIdentityProvidersState struct {
	ClientId             string `json:"client_id"`
	ProviderName         string `json:"provider_name"`
	ServerSideTokenCheck bool   `json:"server_side_token_check"`
}
