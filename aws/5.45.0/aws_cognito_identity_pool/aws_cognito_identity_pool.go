// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_identity_pool

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cognito_identity_pool.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCognitoIdentityPoolState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acip *Resource) Type() string {
	return "aws_cognito_identity_pool"
}

// LocalName returns the local name for [Resource].
func (acip *Resource) LocalName() string {
	return acip.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acip *Resource) Configuration() interface{} {
	return acip.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acip *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acip)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acip *Resource) Dependencies() terra.Dependencies {
	return acip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acip *Resource) LifecycleManagement() *terra.Lifecycle {
	return acip.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acip *Resource) Attributes() awsCognitoIdentityPoolAttributes {
	return awsCognitoIdentityPoolAttributes{ref: terra.ReferenceResource(acip)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acip *Resource) ImportState(state io.Reader) error {
	acip.state = &awsCognitoIdentityPoolState{}
	if err := json.NewDecoder(state).Decode(acip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acip.Type(), acip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acip *Resource) State() (*awsCognitoIdentityPoolState, bool) {
	return acip.state, acip.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acip *Resource) StateMust() *awsCognitoIdentityPoolState {
	if acip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acip.Type(), acip.LocalName()))
	}
	return acip.state
}

// Args contains the configurations for aws_cognito_identity_pool.
type Args struct {
	// AllowClassicFlow: bool, optional
	AllowClassicFlow terra.BoolValue `hcl:"allow_classic_flow,attr"`
	// AllowUnauthenticatedIdentities: bool, optional
	AllowUnauthenticatedIdentities terra.BoolValue `hcl:"allow_unauthenticated_identities,attr"`
	// DeveloperProviderName: string, optional
	DeveloperProviderName terra.StringValue `hcl:"developer_provider_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityPoolName: string, required
	IdentityPoolName terra.StringValue `hcl:"identity_pool_name,attr" validate:"required"`
	// OpenidConnectProviderArns: set of string, optional
	OpenidConnectProviderArns terra.SetValue[terra.StringValue] `hcl:"openid_connect_provider_arns,attr"`
	// SamlProviderArns: list of string, optional
	SamlProviderArns terra.ListValue[terra.StringValue] `hcl:"saml_provider_arns,attr"`
	// SupportedLoginProviders: map of string, optional
	SupportedLoginProviders terra.MapValue[terra.StringValue] `hcl:"supported_login_providers,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// CognitoIdentityProviders: min=0
	CognitoIdentityProviders []CognitoIdentityProviders `hcl:"cognito_identity_providers,block" validate:"min=0"`
}

type awsCognitoIdentityPoolAttributes struct {
	ref terra.Reference
}

// AllowClassicFlow returns a reference to field allow_classic_flow of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) AllowClassicFlow() terra.BoolValue {
	return terra.ReferenceAsBool(acip.ref.Append("allow_classic_flow"))
}

// AllowUnauthenticatedIdentities returns a reference to field allow_unauthenticated_identities of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) AllowUnauthenticatedIdentities() terra.BoolValue {
	return terra.ReferenceAsBool(acip.ref.Append("allow_unauthenticated_identities"))
}

// Arn returns a reference to field arn of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acip.ref.Append("arn"))
}

// DeveloperProviderName returns a reference to field developer_provider_name of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) DeveloperProviderName() terra.StringValue {
	return terra.ReferenceAsString(acip.ref.Append("developer_provider_name"))
}

// Id returns a reference to field id of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acip.ref.Append("id"))
}

// IdentityPoolName returns a reference to field identity_pool_name of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) IdentityPoolName() terra.StringValue {
	return terra.ReferenceAsString(acip.ref.Append("identity_pool_name"))
}

// OpenidConnectProviderArns returns a reference to field openid_connect_provider_arns of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) OpenidConnectProviderArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acip.ref.Append("openid_connect_provider_arns"))
}

// SamlProviderArns returns a reference to field saml_provider_arns of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) SamlProviderArns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acip.ref.Append("saml_provider_arns"))
}

// SupportedLoginProviders returns a reference to field supported_login_providers of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) SupportedLoginProviders() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acip.ref.Append("supported_login_providers"))
}

// Tags returns a reference to field tags of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acip.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_cognito_identity_pool.
func (acip awsCognitoIdentityPoolAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acip.ref.Append("tags_all"))
}

func (acip awsCognitoIdentityPoolAttributes) CognitoIdentityProviders() terra.SetValue[CognitoIdentityProvidersAttributes] {
	return terra.ReferenceAsSet[CognitoIdentityProvidersAttributes](acip.ref.Append("cognito_identity_providers"))
}

type awsCognitoIdentityPoolState struct {
	AllowClassicFlow               bool                            `json:"allow_classic_flow"`
	AllowUnauthenticatedIdentities bool                            `json:"allow_unauthenticated_identities"`
	Arn                            string                          `json:"arn"`
	DeveloperProviderName          string                          `json:"developer_provider_name"`
	Id                             string                          `json:"id"`
	IdentityPoolName               string                          `json:"identity_pool_name"`
	OpenidConnectProviderArns      []string                        `json:"openid_connect_provider_arns"`
	SamlProviderArns               []string                        `json:"saml_provider_arns"`
	SupportedLoginProviders        map[string]string               `json:"supported_login_providers"`
	Tags                           map[string]string               `json:"tags"`
	TagsAll                        map[string]string               `json:"tags_all"`
	CognitoIdentityProviders       []CognitoIdentityProvidersState `json:"cognito_identity_providers"`
}
