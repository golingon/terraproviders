// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appmesh_virtual_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataSpecAttributes struct {
	ref terra.Reference
}

func (s DataSpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSpecAttributes) InternalWithRef(ref terra.Reference) DataSpecAttributes {
	return DataSpecAttributes{ref: ref}
}

func (s DataSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSpecAttributes) Provider() terra.ListValue[DataSpecProviderAttributes] {
	return terra.ReferenceAsList[DataSpecProviderAttributes](s.ref.Append("provider"))
}

type DataSpecProviderAttributes struct {
	ref terra.Reference
}

func (p DataSpecProviderAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataSpecProviderAttributes) InternalWithRef(ref terra.Reference) DataSpecProviderAttributes {
	return DataSpecProviderAttributes{ref: ref}
}

func (p DataSpecProviderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataSpecProviderAttributes) VirtualNode() terra.ListValue[DataSpecProviderVirtualNodeAttributes] {
	return terra.ReferenceAsList[DataSpecProviderVirtualNodeAttributes](p.ref.Append("virtual_node"))
}

func (p DataSpecProviderAttributes) VirtualRouter() terra.ListValue[DataSpecProviderVirtualRouterAttributes] {
	return terra.ReferenceAsList[DataSpecProviderVirtualRouterAttributes](p.ref.Append("virtual_router"))
}

type DataSpecProviderVirtualNodeAttributes struct {
	ref terra.Reference
}

func (vn DataSpecProviderVirtualNodeAttributes) InternalRef() (terra.Reference, error) {
	return vn.ref, nil
}

func (vn DataSpecProviderVirtualNodeAttributes) InternalWithRef(ref terra.Reference) DataSpecProviderVirtualNodeAttributes {
	return DataSpecProviderVirtualNodeAttributes{ref: ref}
}

func (vn DataSpecProviderVirtualNodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vn.ref.InternalTokens()
}

func (vn DataSpecProviderVirtualNodeAttributes) VirtualNodeName() terra.StringValue {
	return terra.ReferenceAsString(vn.ref.Append("virtual_node_name"))
}

type DataSpecProviderVirtualRouterAttributes struct {
	ref terra.Reference
}

func (vr DataSpecProviderVirtualRouterAttributes) InternalRef() (terra.Reference, error) {
	return vr.ref, nil
}

func (vr DataSpecProviderVirtualRouterAttributes) InternalWithRef(ref terra.Reference) DataSpecProviderVirtualRouterAttributes {
	return DataSpecProviderVirtualRouterAttributes{ref: ref}
}

func (vr DataSpecProviderVirtualRouterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vr.ref.InternalTokens()
}

func (vr DataSpecProviderVirtualRouterAttributes) VirtualRouterName() terra.StringValue {
	return terra.ReferenceAsString(vr.ref.Append("virtual_router_name"))
}

type DataSpecState struct {
	Provider []DataSpecProviderState `json:"provider"`
}

type DataSpecProviderState struct {
	VirtualNode   []DataSpecProviderVirtualNodeState   `json:"virtual_node"`
	VirtualRouter []DataSpecProviderVirtualRouterState `json:"virtual_router"`
}

type DataSpecProviderVirtualNodeState struct {
	VirtualNodeName string `json:"virtual_node_name"`
}

type DataSpecProviderVirtualRouterState struct {
	VirtualRouterName string `json:"virtual_router_name"`
}
