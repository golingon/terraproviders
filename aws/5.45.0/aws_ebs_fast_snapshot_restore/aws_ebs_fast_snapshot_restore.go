// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ebs_fast_snapshot_restore

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ebs_fast_snapshot_restore.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEbsFastSnapshotRestoreState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aefsr *Resource) Type() string {
	return "aws_ebs_fast_snapshot_restore"
}

// LocalName returns the local name for [Resource].
func (aefsr *Resource) LocalName() string {
	return aefsr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aefsr *Resource) Configuration() interface{} {
	return aefsr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aefsr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aefsr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aefsr *Resource) Dependencies() terra.Dependencies {
	return aefsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aefsr *Resource) LifecycleManagement() *terra.Lifecycle {
	return aefsr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aefsr *Resource) Attributes() awsEbsFastSnapshotRestoreAttributes {
	return awsEbsFastSnapshotRestoreAttributes{ref: terra.ReferenceResource(aefsr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aefsr *Resource) ImportState(state io.Reader) error {
	aefsr.state = &awsEbsFastSnapshotRestoreState{}
	if err := json.NewDecoder(state).Decode(aefsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aefsr.Type(), aefsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aefsr *Resource) State() (*awsEbsFastSnapshotRestoreState, bool) {
	return aefsr.state, aefsr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aefsr *Resource) StateMust() *awsEbsFastSnapshotRestoreState {
	if aefsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aefsr.Type(), aefsr.LocalName()))
	}
	return aefsr.state
}

// Args contains the configurations for aws_ebs_fast_snapshot_restore.
type Args struct {
	// AvailabilityZone: string, required
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr" validate:"required"`
	// SnapshotId: string, required
	SnapshotId terra.StringValue `hcl:"snapshot_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsEbsFastSnapshotRestoreAttributes struct {
	ref terra.Reference
}

// AvailabilityZone returns a reference to field availability_zone of aws_ebs_fast_snapshot_restore.
func (aefsr awsEbsFastSnapshotRestoreAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(aefsr.ref.Append("availability_zone"))
}

// Id returns a reference to field id of aws_ebs_fast_snapshot_restore.
func (aefsr awsEbsFastSnapshotRestoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aefsr.ref.Append("id"))
}

// SnapshotId returns a reference to field snapshot_id of aws_ebs_fast_snapshot_restore.
func (aefsr awsEbsFastSnapshotRestoreAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(aefsr.ref.Append("snapshot_id"))
}

// State returns a reference to field state of aws_ebs_fast_snapshot_restore.
func (aefsr awsEbsFastSnapshotRestoreAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aefsr.ref.Append("state"))
}

func (aefsr awsEbsFastSnapshotRestoreAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aefsr.ref.Append("timeouts"))
}

type awsEbsFastSnapshotRestoreState struct {
	AvailabilityZone string         `json:"availability_zone"`
	Id               string         `json:"id"`
	SnapshotId       string         `json:"snapshot_id"`
	State            string         `json:"state"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
