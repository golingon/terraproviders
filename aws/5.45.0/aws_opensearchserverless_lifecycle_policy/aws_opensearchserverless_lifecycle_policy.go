// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_opensearchserverless_lifecycle_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_opensearchserverless_lifecycle_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *awsOpensearchserverlessLifecyclePolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aolp *Resource) Type() string {
	return "aws_opensearchserverless_lifecycle_policy"
}

// LocalName returns the local name for [Resource].
func (aolp *Resource) LocalName() string {
	return aolp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aolp *Resource) Configuration() interface{} {
	return aolp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aolp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aolp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aolp *Resource) Dependencies() terra.Dependencies {
	return aolp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aolp *Resource) LifecycleManagement() *terra.Lifecycle {
	return aolp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aolp *Resource) Attributes() awsOpensearchserverlessLifecyclePolicyAttributes {
	return awsOpensearchserverlessLifecyclePolicyAttributes{ref: terra.ReferenceResource(aolp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aolp *Resource) ImportState(state io.Reader) error {
	aolp.state = &awsOpensearchserverlessLifecyclePolicyState{}
	if err := json.NewDecoder(state).Decode(aolp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aolp.Type(), aolp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aolp *Resource) State() (*awsOpensearchserverlessLifecyclePolicyState, bool) {
	return aolp.state, aolp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aolp *Resource) StateMust() *awsOpensearchserverlessLifecyclePolicyState {
	if aolp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aolp.Type(), aolp.LocalName()))
	}
	return aolp.state
}

// Args contains the configurations for aws_opensearchserverless_lifecycle_policy.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type awsOpensearchserverlessLifecyclePolicyAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of aws_opensearchserverless_lifecycle_policy.
func (aolp awsOpensearchserverlessLifecyclePolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aolp.ref.Append("description"))
}

// Id returns a reference to field id of aws_opensearchserverless_lifecycle_policy.
func (aolp awsOpensearchserverlessLifecyclePolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aolp.ref.Append("id"))
}

// Name returns a reference to field name of aws_opensearchserverless_lifecycle_policy.
func (aolp awsOpensearchserverlessLifecyclePolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aolp.ref.Append("name"))
}

// Policy returns a reference to field policy of aws_opensearchserverless_lifecycle_policy.
func (aolp awsOpensearchserverlessLifecyclePolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(aolp.ref.Append("policy"))
}

// PolicyVersion returns a reference to field policy_version of aws_opensearchserverless_lifecycle_policy.
func (aolp awsOpensearchserverlessLifecyclePolicyAttributes) PolicyVersion() terra.StringValue {
	return terra.ReferenceAsString(aolp.ref.Append("policy_version"))
}

// Type returns a reference to field type of aws_opensearchserverless_lifecycle_policy.
func (aolp awsOpensearchserverlessLifecyclePolicyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aolp.ref.Append("type"))
}

type awsOpensearchserverlessLifecyclePolicyState struct {
	Description   string `json:"description"`
	Id            string `json:"id"`
	Name          string `json:"name"`
	Policy        string `json:"policy"`
	PolicyVersion string `json:"policy_version"`
	Type          string `json:"type"`
}
