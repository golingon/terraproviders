// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_configuration_set

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sesv2_configuration_set.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesv2ConfigurationSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascs *Resource) Type() string {
	return "aws_sesv2_configuration_set"
}

// LocalName returns the local name for [Resource].
func (ascs *Resource) LocalName() string {
	return ascs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascs *Resource) Configuration() interface{} {
	return ascs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascs *Resource) Dependencies() terra.Dependencies {
	return ascs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascs *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascs *Resource) Attributes() awsSesv2ConfigurationSetAttributes {
	return awsSesv2ConfigurationSetAttributes{ref: terra.ReferenceResource(ascs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascs *Resource) ImportState(state io.Reader) error {
	ascs.state = &awsSesv2ConfigurationSetState{}
	if err := json.NewDecoder(state).Decode(ascs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascs.Type(), ascs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascs *Resource) State() (*awsSesv2ConfigurationSetState, bool) {
	return ascs.state, ascs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascs *Resource) StateMust() *awsSesv2ConfigurationSetState {
	if ascs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascs.Type(), ascs.LocalName()))
	}
	return ascs.state
}

// Args contains the configurations for aws_sesv2_configuration_set.
type Args struct {
	// ConfigurationSetName: string, required
	ConfigurationSetName terra.StringValue `hcl:"configuration_set_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// DeliveryOptions: optional
	DeliveryOptions *DeliveryOptions `hcl:"delivery_options,block"`
	// ReputationOptions: optional
	ReputationOptions *ReputationOptions `hcl:"reputation_options,block"`
	// SendingOptions: optional
	SendingOptions *SendingOptions `hcl:"sending_options,block"`
	// SuppressionOptions: optional
	SuppressionOptions *SuppressionOptions `hcl:"suppression_options,block"`
	// TrackingOptions: optional
	TrackingOptions *TrackingOptions `hcl:"tracking_options,block"`
	// VdmOptions: optional
	VdmOptions *VdmOptions `hcl:"vdm_options,block"`
}

type awsSesv2ConfigurationSetAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sesv2_configuration_set.
func (ascs awsSesv2ConfigurationSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("arn"))
}

// ConfigurationSetName returns a reference to field configuration_set_name of aws_sesv2_configuration_set.
func (ascs awsSesv2ConfigurationSetAttributes) ConfigurationSetName() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("configuration_set_name"))
}

// Id returns a reference to field id of aws_sesv2_configuration_set.
func (ascs awsSesv2ConfigurationSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("id"))
}

// Tags returns a reference to field tags of aws_sesv2_configuration_set.
func (ascs awsSesv2ConfigurationSetAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascs.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_sesv2_configuration_set.
func (ascs awsSesv2ConfigurationSetAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascs.ref.Append("tags_all"))
}

func (ascs awsSesv2ConfigurationSetAttributes) DeliveryOptions() terra.ListValue[DeliveryOptionsAttributes] {
	return terra.ReferenceAsList[DeliveryOptionsAttributes](ascs.ref.Append("delivery_options"))
}

func (ascs awsSesv2ConfigurationSetAttributes) ReputationOptions() terra.ListValue[ReputationOptionsAttributes] {
	return terra.ReferenceAsList[ReputationOptionsAttributes](ascs.ref.Append("reputation_options"))
}

func (ascs awsSesv2ConfigurationSetAttributes) SendingOptions() terra.ListValue[SendingOptionsAttributes] {
	return terra.ReferenceAsList[SendingOptionsAttributes](ascs.ref.Append("sending_options"))
}

func (ascs awsSesv2ConfigurationSetAttributes) SuppressionOptions() terra.ListValue[SuppressionOptionsAttributes] {
	return terra.ReferenceAsList[SuppressionOptionsAttributes](ascs.ref.Append("suppression_options"))
}

func (ascs awsSesv2ConfigurationSetAttributes) TrackingOptions() terra.ListValue[TrackingOptionsAttributes] {
	return terra.ReferenceAsList[TrackingOptionsAttributes](ascs.ref.Append("tracking_options"))
}

func (ascs awsSesv2ConfigurationSetAttributes) VdmOptions() terra.ListValue[VdmOptionsAttributes] {
	return terra.ReferenceAsList[VdmOptionsAttributes](ascs.ref.Append("vdm_options"))
}

type awsSesv2ConfigurationSetState struct {
	Arn                  string                    `json:"arn"`
	ConfigurationSetName string                    `json:"configuration_set_name"`
	Id                   string                    `json:"id"`
	Tags                 map[string]string         `json:"tags"`
	TagsAll              map[string]string         `json:"tags_all"`
	DeliveryOptions      []DeliveryOptionsState    `json:"delivery_options"`
	ReputationOptions    []ReputationOptionsState  `json:"reputation_options"`
	SendingOptions       []SendingOptionsState     `json:"sending_options"`
	SuppressionOptions   []SuppressionOptionsState `json:"suppression_options"`
	TrackingOptions      []TrackingOptionsState    `json:"tracking_options"`
	VdmOptions           []VdmOptionsState         `json:"vdm_options"`
}
