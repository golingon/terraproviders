// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_model_package_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sagemaker_model_package_group.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSagemakerModelPackageGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asmpg *Resource) Type() string {
	return "aws_sagemaker_model_package_group"
}

// LocalName returns the local name for [Resource].
func (asmpg *Resource) LocalName() string {
	return asmpg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asmpg *Resource) Configuration() interface{} {
	return asmpg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asmpg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asmpg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asmpg *Resource) Dependencies() terra.Dependencies {
	return asmpg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asmpg *Resource) LifecycleManagement() *terra.Lifecycle {
	return asmpg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asmpg *Resource) Attributes() awsSagemakerModelPackageGroupAttributes {
	return awsSagemakerModelPackageGroupAttributes{ref: terra.ReferenceResource(asmpg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asmpg *Resource) ImportState(state io.Reader) error {
	asmpg.state = &awsSagemakerModelPackageGroupState{}
	if err := json.NewDecoder(state).Decode(asmpg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asmpg.Type(), asmpg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asmpg *Resource) State() (*awsSagemakerModelPackageGroupState, bool) {
	return asmpg.state, asmpg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asmpg *Resource) StateMust() *awsSagemakerModelPackageGroupState {
	if asmpg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asmpg.Type(), asmpg.LocalName()))
	}
	return asmpg.state
}

// Args contains the configurations for aws_sagemaker_model_package_group.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ModelPackageGroupDescription: string, optional
	ModelPackageGroupDescription terra.StringValue `hcl:"model_package_group_description,attr"`
	// ModelPackageGroupName: string, required
	ModelPackageGroupName terra.StringValue `hcl:"model_package_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}

type awsSagemakerModelPackageGroupAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sagemaker_model_package_group.
func (asmpg awsSagemakerModelPackageGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asmpg.ref.Append("arn"))
}

// Id returns a reference to field id of aws_sagemaker_model_package_group.
func (asmpg awsSagemakerModelPackageGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asmpg.ref.Append("id"))
}

// ModelPackageGroupDescription returns a reference to field model_package_group_description of aws_sagemaker_model_package_group.
func (asmpg awsSagemakerModelPackageGroupAttributes) ModelPackageGroupDescription() terra.StringValue {
	return terra.ReferenceAsString(asmpg.ref.Append("model_package_group_description"))
}

// ModelPackageGroupName returns a reference to field model_package_group_name of aws_sagemaker_model_package_group.
func (asmpg awsSagemakerModelPackageGroupAttributes) ModelPackageGroupName() terra.StringValue {
	return terra.ReferenceAsString(asmpg.ref.Append("model_package_group_name"))
}

// Tags returns a reference to field tags of aws_sagemaker_model_package_group.
func (asmpg awsSagemakerModelPackageGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asmpg.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_sagemaker_model_package_group.
func (asmpg awsSagemakerModelPackageGroupAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asmpg.ref.Append("tags_all"))
}

type awsSagemakerModelPackageGroupState struct {
	Arn                          string            `json:"arn"`
	Id                           string            `json:"id"`
	ModelPackageGroupDescription string            `json:"model_package_group_description"`
	ModelPackageGroupName        string            `json:"model_package_group_name"`
	Tags                         map[string]string `json:"tags"`
	TagsAll                      map[string]string `json:"tags_all"`
}
