// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53_resolver_firewall_domain_list

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_route53_resolver_firewall_domain_list.
type Resource struct {
	Name      string
	Args      Args
	state     *awsRoute53ResolverFirewallDomainListState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arrfdl *Resource) Type() string {
	return "aws_route53_resolver_firewall_domain_list"
}

// LocalName returns the local name for [Resource].
func (arrfdl *Resource) LocalName() string {
	return arrfdl.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arrfdl *Resource) Configuration() interface{} {
	return arrfdl.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arrfdl *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arrfdl)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arrfdl *Resource) Dependencies() terra.Dependencies {
	return arrfdl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arrfdl *Resource) LifecycleManagement() *terra.Lifecycle {
	return arrfdl.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arrfdl *Resource) Attributes() awsRoute53ResolverFirewallDomainListAttributes {
	return awsRoute53ResolverFirewallDomainListAttributes{ref: terra.ReferenceResource(arrfdl)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arrfdl *Resource) ImportState(state io.Reader) error {
	arrfdl.state = &awsRoute53ResolverFirewallDomainListState{}
	if err := json.NewDecoder(state).Decode(arrfdl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arrfdl.Type(), arrfdl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arrfdl *Resource) State() (*awsRoute53ResolverFirewallDomainListState, bool) {
	return arrfdl.state, arrfdl.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arrfdl *Resource) StateMust() *awsRoute53ResolverFirewallDomainListState {
	if arrfdl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arrfdl.Type(), arrfdl.LocalName()))
	}
	return arrfdl.state
}

// Args contains the configurations for aws_route53_resolver_firewall_domain_list.
type Args struct {
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}

type awsRoute53ResolverFirewallDomainListAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_route53_resolver_firewall_domain_list.
func (arrfdl awsRoute53ResolverFirewallDomainListAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arrfdl.ref.Append("arn"))
}

// Domains returns a reference to field domains of aws_route53_resolver_firewall_domain_list.
func (arrfdl awsRoute53ResolverFirewallDomainListAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arrfdl.ref.Append("domains"))
}

// Id returns a reference to field id of aws_route53_resolver_firewall_domain_list.
func (arrfdl awsRoute53ResolverFirewallDomainListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arrfdl.ref.Append("id"))
}

// Name returns a reference to field name of aws_route53_resolver_firewall_domain_list.
func (arrfdl awsRoute53ResolverFirewallDomainListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arrfdl.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_route53_resolver_firewall_domain_list.
func (arrfdl awsRoute53ResolverFirewallDomainListAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](arrfdl.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_route53_resolver_firewall_domain_list.
func (arrfdl awsRoute53ResolverFirewallDomainListAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](arrfdl.ref.Append("tags_all"))
}

type awsRoute53ResolverFirewallDomainListState struct {
	Arn     string            `json:"arn"`
	Domains []string          `json:"domains"`
	Id      string            `json:"id"`
	Name    string            `json:"name"`
	Tags    map[string]string `json:"tags"`
	TagsAll map[string]string `json:"tags_all"`
}
