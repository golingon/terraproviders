// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicequotas_template

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_servicequotas_template.
type Resource struct {
	Name      string
	Args      Args
	state     *awsServicequotasTemplateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ast *Resource) Type() string {
	return "aws_servicequotas_template"
}

// LocalName returns the local name for [Resource].
func (ast *Resource) LocalName() string {
	return ast.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ast *Resource) Configuration() interface{} {
	return ast.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ast *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ast)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ast *Resource) Dependencies() terra.Dependencies {
	return ast.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ast *Resource) LifecycleManagement() *terra.Lifecycle {
	return ast.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ast *Resource) Attributes() awsServicequotasTemplateAttributes {
	return awsServicequotasTemplateAttributes{ref: terra.ReferenceResource(ast)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ast *Resource) ImportState(state io.Reader) error {
	ast.state = &awsServicequotasTemplateState{}
	if err := json.NewDecoder(state).Decode(ast.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ast.Type(), ast.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ast *Resource) State() (*awsServicequotasTemplateState, bool) {
	return ast.state, ast.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ast *Resource) StateMust() *awsServicequotasTemplateState {
	if ast.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ast.Type(), ast.LocalName()))
	}
	return ast.state
}

// Args contains the configurations for aws_servicequotas_template.
type Args struct {
	// QuotaCode: string, required
	QuotaCode terra.StringValue `hcl:"quota_code,attr" validate:"required"`
	// Region: string, required
	Region terra.StringValue `hcl:"region,attr" validate:"required"`
	// ServiceCode: string, required
	ServiceCode terra.StringValue `hcl:"service_code,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type awsServicequotasTemplateAttributes struct {
	ref terra.Reference
}

// GlobalQuota returns a reference to field global_quota of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) GlobalQuota() terra.BoolValue {
	return terra.ReferenceAsBool(ast.ref.Append("global_quota"))
}

// Id returns a reference to field id of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("id"))
}

// QuotaCode returns a reference to field quota_code of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) QuotaCode() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("quota_code"))
}

// QuotaName returns a reference to field quota_name of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) QuotaName() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("quota_name"))
}

// Region returns a reference to field region of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("region"))
}

// ServiceCode returns a reference to field service_code of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) ServiceCode() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("service_code"))
}

// ServiceName returns a reference to field service_name of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("service_name"))
}

// Unit returns a reference to field unit of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(ast.ref.Append("unit"))
}

// Value returns a reference to field value of aws_servicequotas_template.
func (ast awsServicequotasTemplateAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(ast.ref.Append("value"))
}

type awsServicequotasTemplateState struct {
	GlobalQuota bool    `json:"global_quota"`
	Id          string  `json:"id"`
	QuotaCode   string  `json:"quota_code"`
	QuotaName   string  `json:"quota_name"`
	Region      string  `json:"region"`
	ServiceCode string  `json:"service_code"`
	ServiceName string  `json:"service_name"`
	Unit        string  `json:"unit"`
	Value       float64 `json:"value"`
}
