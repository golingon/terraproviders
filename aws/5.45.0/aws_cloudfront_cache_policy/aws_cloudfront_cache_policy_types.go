// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_cache_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ParametersInCacheKeyAndForwardedToOrigin struct {
	// EnableAcceptEncodingBrotli: bool, optional
	EnableAcceptEncodingBrotli terra.BoolValue `hcl:"enable_accept_encoding_brotli,attr"`
	// EnableAcceptEncodingGzip: bool, optional
	EnableAcceptEncodingGzip terra.BoolValue `hcl:"enable_accept_encoding_gzip,attr"`
	// ParametersInCacheKeyAndForwardedToOriginCookiesConfig: required
	CookiesConfig *ParametersInCacheKeyAndForwardedToOriginCookiesConfig `hcl:"cookies_config,block" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginHeadersConfig: required
	HeadersConfig *ParametersInCacheKeyAndForwardedToOriginHeadersConfig `hcl:"headers_config,block" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginQueryStringsConfig: required
	QueryStringsConfig *ParametersInCacheKeyAndForwardedToOriginQueryStringsConfig `hcl:"query_strings_config,block" validate:"required"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfig struct {
	// CookieBehavior: string, required
	CookieBehavior terra.StringValue `hcl:"cookie_behavior,attr" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies: optional
	Cookies *ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies `hcl:"cookies,block"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfig struct {
	// HeaderBehavior: string, optional
	HeaderBehavior terra.StringValue `hcl:"header_behavior,attr"`
	// ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders: optional
	Headers *ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders `hcl:"headers,block"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfig struct {
	// QueryStringBehavior: string, required
	QueryStringBehavior terra.StringValue `hcl:"query_string_behavior,attr" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings: optional
	QueryStrings *ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings `hcl:"query_strings,block"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type ParametersInCacheKeyAndForwardedToOriginAttributes struct {
	ref terra.Reference
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) InternalRef() (terra.Reference, error) {
	return pickafto.ref, nil
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginAttributes {
	return ParametersInCacheKeyAndForwardedToOriginAttributes{ref: ref}
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pickafto.ref.InternalTokens()
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingBrotli() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_brotli"))
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingGzip() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_gzip"))
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) CookiesConfig() terra.ListValue[ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes] {
	return terra.ReferenceAsList[ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes](pickafto.ref.Append("cookies_config"))
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) HeadersConfig() terra.ListValue[ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes] {
	return terra.ReferenceAsList[ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes](pickafto.ref.Append("headers_config"))
}

func (pickafto ParametersInCacheKeyAndForwardedToOriginAttributes) QueryStringsConfig() terra.ListValue[ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes] {
	return terra.ReferenceAsList[ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes](pickafto.ref.Append("query_strings_config"))
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes struct {
	ref terra.Reference
}

func (cc ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes {
	return ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes{ref: ref}
}

func (cc ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) CookieBehavior() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("cookie_behavior"))
}

func (cc ParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) Cookies() terra.ListValue[ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes] {
	return terra.ReferenceAsList[ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes](cc.ref.Append("cookies"))
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes struct {
	ref terra.Reference
}

func (c ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes {
	return ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes{ref: ref}
}

func (c ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("items"))
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes struct {
	ref terra.Reference
}

func (hc ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes {
	return ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes{ref: ref}
}

func (hc ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) HeaderBehavior() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("header_behavior"))
}

func (hc ParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) Headers() terra.ListValue[ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes] {
	return terra.ReferenceAsList[ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes](hc.ref.Append("headers"))
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes struct {
	ref terra.Reference
}

func (h ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes {
	return ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes{ref: ref}
}

func (h ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("items"))
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes struct {
	ref terra.Reference
}

func (qsc ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalRef() (terra.Reference, error) {
	return qsc.ref, nil
}

func (qsc ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes {
	return ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes{ref: ref}
}

func (qsc ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qsc.ref.InternalTokens()
}

func (qsc ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStringBehavior() terra.StringValue {
	return terra.ReferenceAsString(qsc.ref.Append("query_string_behavior"))
}

func (qsc ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStrings() terra.ListValue[ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes] {
	return terra.ReferenceAsList[ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes](qsc.ref.Append("query_strings"))
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes struct {
	ref terra.Reference
}

func (qs ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalWithRef(ref terra.Reference) ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes {
	return ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes{ref: ref}
}

func (qs ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qs.ref.Append("items"))
}

type ParametersInCacheKeyAndForwardedToOriginState struct {
	EnableAcceptEncodingBrotli bool                                                              `json:"enable_accept_encoding_brotli"`
	EnableAcceptEncodingGzip   bool                                                              `json:"enable_accept_encoding_gzip"`
	CookiesConfig              []ParametersInCacheKeyAndForwardedToOriginCookiesConfigState      `json:"cookies_config"`
	HeadersConfig              []ParametersInCacheKeyAndForwardedToOriginHeadersConfigState      `json:"headers_config"`
	QueryStringsConfig         []ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState `json:"query_strings_config"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigState struct {
	CookieBehavior string                                                              `json:"cookie_behavior"`
	Cookies        []ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState `json:"cookies"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState struct {
	Items []string `json:"items"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigState struct {
	HeaderBehavior string                                                              `json:"header_behavior"`
	Headers        []ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState `json:"headers"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState struct {
	Items []string `json:"items"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState struct {
	QueryStringBehavior string                                                                        `json:"query_string_behavior"`
	QueryStrings        []ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState `json:"query_strings"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState struct {
	Items []string `json:"items"`
}
