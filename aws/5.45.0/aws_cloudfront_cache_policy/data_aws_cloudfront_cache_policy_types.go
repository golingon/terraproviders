// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_cache_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataParametersInCacheKeyAndForwardedToOriginAttributes struct {
	ref terra.Reference
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) InternalRef() (terra.Reference, error) {
	return pickafto.ref, nil
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginAttributes{ref: ref}
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pickafto.ref.InternalTokens()
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingBrotli() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_brotli"))
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingGzip() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_gzip"))
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) CookiesConfig() terra.ListValue[DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes] {
	return terra.ReferenceAsList[DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes](pickafto.ref.Append("cookies_config"))
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) HeadersConfig() terra.ListValue[DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes] {
	return terra.ReferenceAsList[DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes](pickafto.ref.Append("headers_config"))
}

func (pickafto DataParametersInCacheKeyAndForwardedToOriginAttributes) QueryStringsConfig() terra.ListValue[DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes] {
	return terra.ReferenceAsList[DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes](pickafto.ref.Append("query_strings_config"))
}

type DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes struct {
	ref terra.Reference
}

func (cc DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes{ref: ref}
}

func (cc DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) CookieBehavior() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("cookie_behavior"))
}

func (cc DataParametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) Cookies() terra.ListValue[DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes] {
	return terra.ReferenceAsList[DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes](cc.ref.Append("cookies"))
}

type DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes struct {
	ref terra.Reference
}

func (c DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes{ref: ref}
}

func (c DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("items"))
}

type DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes struct {
	ref terra.Reference
}

func (hc DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes{ref: ref}
}

func (hc DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) HeaderBehavior() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("header_behavior"))
}

func (hc DataParametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) Headers() terra.ListValue[DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes] {
	return terra.ReferenceAsList[DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes](hc.ref.Append("headers"))
}

type DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes struct {
	ref terra.Reference
}

func (h DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes{ref: ref}
}

func (h DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("items"))
}

type DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes struct {
	ref terra.Reference
}

func (qsc DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalRef() (terra.Reference, error) {
	return qsc.ref, nil
}

func (qsc DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes{ref: ref}
}

func (qsc DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qsc.ref.InternalTokens()
}

func (qsc DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStringBehavior() terra.StringValue {
	return terra.ReferenceAsString(qsc.ref.Append("query_string_behavior"))
}

func (qsc DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStrings() terra.ListValue[DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes] {
	return terra.ReferenceAsList[DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes](qsc.ref.Append("query_strings"))
}

type DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes struct {
	ref terra.Reference
}

func (qs DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalWithRef(ref terra.Reference) DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes {
	return DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes{ref: ref}
}

func (qs DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qs.ref.Append("items"))
}

type DataParametersInCacheKeyAndForwardedToOriginState struct {
	EnableAcceptEncodingBrotli bool                                                                  `json:"enable_accept_encoding_brotli"`
	EnableAcceptEncodingGzip   bool                                                                  `json:"enable_accept_encoding_gzip"`
	CookiesConfig              []DataParametersInCacheKeyAndForwardedToOriginCookiesConfigState      `json:"cookies_config"`
	HeadersConfig              []DataParametersInCacheKeyAndForwardedToOriginHeadersConfigState      `json:"headers_config"`
	QueryStringsConfig         []DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState `json:"query_strings_config"`
}

type DataParametersInCacheKeyAndForwardedToOriginCookiesConfigState struct {
	CookieBehavior string                                                                  `json:"cookie_behavior"`
	Cookies        []DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState `json:"cookies"`
}

type DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState struct {
	Items []string `json:"items"`
}

type DataParametersInCacheKeyAndForwardedToOriginHeadersConfigState struct {
	HeaderBehavior string                                                                  `json:"header_behavior"`
	Headers        []DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState `json:"headers"`
}

type DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState struct {
	Items []string `json:"items"`
}

type DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState struct {
	QueryStringBehavior string                                                                            `json:"query_string_behavior"`
	QueryStrings        []DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState `json:"query_strings"`
}

type DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState struct {
	Items []string `json:"items"`
}
