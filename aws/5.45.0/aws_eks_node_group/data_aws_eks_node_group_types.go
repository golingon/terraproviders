// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_eks_node_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataLaunchTemplateAttributes struct {
	ref terra.Reference
}

func (lt DataLaunchTemplateAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DataLaunchTemplateAttributes) InternalWithRef(ref terra.Reference) DataLaunchTemplateAttributes {
	return DataLaunchTemplateAttributes{ref: ref}
}

func (lt DataLaunchTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DataLaunchTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DataLaunchTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

func (lt DataLaunchTemplateAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("version"))
}

type DataRemoteAccessAttributes struct {
	ref terra.Reference
}

func (ra DataRemoteAccessAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra DataRemoteAccessAttributes) InternalWithRef(ref terra.Reference) DataRemoteAccessAttributes {
	return DataRemoteAccessAttributes{ref: ref}
}

func (ra DataRemoteAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra DataRemoteAccessAttributes) Ec2SshKey() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("ec2_ssh_key"))
}

func (ra DataRemoteAccessAttributes) SourceSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ra.ref.Append("source_security_group_ids"))
}

type DataResourcesAttributes struct {
	ref terra.Reference
}

func (r DataResourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataResourcesAttributes) InternalWithRef(ref terra.Reference) DataResourcesAttributes {
	return DataResourcesAttributes{ref: ref}
}

func (r DataResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataResourcesAttributes) RemoteAccessSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("remote_access_security_group_id"))
}

func (r DataResourcesAttributes) AutoscalingGroups() terra.ListValue[DataResourcesAutoscalingGroupsAttributes] {
	return terra.ReferenceAsList[DataResourcesAutoscalingGroupsAttributes](r.ref.Append("autoscaling_groups"))
}

type DataResourcesAutoscalingGroupsAttributes struct {
	ref terra.Reference
}

func (ag DataResourcesAutoscalingGroupsAttributes) InternalRef() (terra.Reference, error) {
	return ag.ref, nil
}

func (ag DataResourcesAutoscalingGroupsAttributes) InternalWithRef(ref terra.Reference) DataResourcesAutoscalingGroupsAttributes {
	return DataResourcesAutoscalingGroupsAttributes{ref: ref}
}

func (ag DataResourcesAutoscalingGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ag.ref.InternalTokens()
}

func (ag DataResourcesAutoscalingGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ag.ref.Append("name"))
}

type DataScalingConfigAttributes struct {
	ref terra.Reference
}

func (sc DataScalingConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataScalingConfigAttributes) InternalWithRef(ref terra.Reference) DataScalingConfigAttributes {
	return DataScalingConfigAttributes{ref: ref}
}

func (sc DataScalingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataScalingConfigAttributes) DesiredSize() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("desired_size"))
}

func (sc DataScalingConfigAttributes) MaxSize() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("max_size"))
}

func (sc DataScalingConfigAttributes) MinSize() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("min_size"))
}

type DataTaintsAttributes struct {
	ref terra.Reference
}

func (t DataTaintsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTaintsAttributes) InternalWithRef(ref terra.Reference) DataTaintsAttributes {
	return DataTaintsAttributes{ref: ref}
}

func (t DataTaintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTaintsAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t DataTaintsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t DataTaintsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type DataLaunchTemplateState struct {
	Id      string `json:"id"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type DataRemoteAccessState struct {
	Ec2SshKey              string   `json:"ec2_ssh_key"`
	SourceSecurityGroupIds []string `json:"source_security_group_ids"`
}

type DataResourcesState struct {
	RemoteAccessSecurityGroupId string                                `json:"remote_access_security_group_id"`
	AutoscalingGroups           []DataResourcesAutoscalingGroupsState `json:"autoscaling_groups"`
}

type DataResourcesAutoscalingGroupsState struct {
	Name string `json:"name"`
}

type DataScalingConfigState struct {
	DesiredSize float64 `json:"desired_size"`
	MaxSize     float64 `json:"max_size"`
	MinSize     float64 `json:"min_size"`
}

type DataTaintsState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}
