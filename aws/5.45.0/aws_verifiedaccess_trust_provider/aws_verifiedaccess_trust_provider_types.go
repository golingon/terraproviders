// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_verifiedaccess_trust_provider

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DeviceOptions struct {
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
}

type OidcOptions struct {
	// AuthorizationEndpoint: string, optional
	AuthorizationEndpoint terra.StringValue `hcl:"authorization_endpoint,attr"`
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Issuer: string, optional
	Issuer terra.StringValue `hcl:"issuer,attr"`
	// Scope: string, optional
	Scope terra.StringValue `hcl:"scope,attr"`
	// TokenEndpoint: string, optional
	TokenEndpoint terra.StringValue `hcl:"token_endpoint,attr"`
	// UserInfoEndpoint: string, optional
	UserInfoEndpoint terra.StringValue `hcl:"user_info_endpoint,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type DeviceOptionsAttributes struct {
	ref terra.Reference
}

func (do DeviceOptionsAttributes) InternalRef() (terra.Reference, error) {
	return do.ref, nil
}

func (do DeviceOptionsAttributes) InternalWithRef(ref terra.Reference) DeviceOptionsAttributes {
	return DeviceOptionsAttributes{ref: ref}
}

func (do DeviceOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return do.ref.InternalTokens()
}

func (do DeviceOptionsAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(do.ref.Append("tenant_id"))
}

type OidcOptionsAttributes struct {
	ref terra.Reference
}

func (oo OidcOptionsAttributes) InternalRef() (terra.Reference, error) {
	return oo.ref, nil
}

func (oo OidcOptionsAttributes) InternalWithRef(ref terra.Reference) OidcOptionsAttributes {
	return OidcOptionsAttributes{ref: ref}
}

func (oo OidcOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oo.ref.InternalTokens()
}

func (oo OidcOptionsAttributes) AuthorizationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("authorization_endpoint"))
}

func (oo OidcOptionsAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("client_id"))
}

func (oo OidcOptionsAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("client_secret"))
}

func (oo OidcOptionsAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("issuer"))
}

func (oo OidcOptionsAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("scope"))
}

func (oo OidcOptionsAttributes) TokenEndpoint() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("token_endpoint"))
}

func (oo OidcOptionsAttributes) UserInfoEndpoint() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("user_info_endpoint"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DeviceOptionsState struct {
	TenantId string `json:"tenant_id"`
}

type OidcOptionsState struct {
	AuthorizationEndpoint string `json:"authorization_endpoint"`
	ClientId              string `json:"client_id"`
	ClientSecret          string `json:"client_secret"`
	Issuer                string `json:"issuer"`
	Scope                 string `json:"scope"`
	TokenEndpoint         string `json:"token_endpoint"`
	UserInfoEndpoint      string `json:"user_info_endpoint"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
