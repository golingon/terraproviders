// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_workspaces_workspace

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataWorkspacePropertiesAttributes struct {
	ref terra.Reference
}

func (wp DataWorkspacePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return wp.ref, nil
}

func (wp DataWorkspacePropertiesAttributes) InternalWithRef(ref terra.Reference) DataWorkspacePropertiesAttributes {
	return DataWorkspacePropertiesAttributes{ref: ref}
}

func (wp DataWorkspacePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wp.ref.InternalTokens()
}

func (wp DataWorkspacePropertiesAttributes) ComputeTypeName() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("compute_type_name"))
}

func (wp DataWorkspacePropertiesAttributes) RootVolumeSizeGib() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("root_volume_size_gib"))
}

func (wp DataWorkspacePropertiesAttributes) RunningMode() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("running_mode"))
}

func (wp DataWorkspacePropertiesAttributes) RunningModeAutoStopTimeoutInMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("running_mode_auto_stop_timeout_in_minutes"))
}

func (wp DataWorkspacePropertiesAttributes) UserVolumeSizeGib() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("user_volume_size_gib"))
}

type DataWorkspacePropertiesState struct {
	ComputeTypeName                     string  `json:"compute_type_name"`
	RootVolumeSizeGib                   float64 `json:"root_volume_size_gib"`
	RunningMode                         string  `json:"running_mode"`
	RunningModeAutoStopTimeoutInMinutes float64 `json:"running_mode_auto_stop_timeout_in_minutes"`
	UserVolumeSizeGib                   float64 `json:"user_volume_size_gib"`
}
