// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_account_primary_contact

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_account_primary_contact.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAccountPrimaryContactState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aapc *Resource) Type() string {
	return "aws_account_primary_contact"
}

// LocalName returns the local name for [Resource].
func (aapc *Resource) LocalName() string {
	return aapc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aapc *Resource) Configuration() interface{} {
	return aapc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aapc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aapc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aapc *Resource) Dependencies() terra.Dependencies {
	return aapc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aapc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aapc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aapc *Resource) Attributes() awsAccountPrimaryContactAttributes {
	return awsAccountPrimaryContactAttributes{ref: terra.ReferenceResource(aapc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aapc *Resource) ImportState(state io.Reader) error {
	aapc.state = &awsAccountPrimaryContactState{}
	if err := json.NewDecoder(state).Decode(aapc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aapc.Type(), aapc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aapc *Resource) State() (*awsAccountPrimaryContactState, bool) {
	return aapc.state, aapc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aapc *Resource) StateMust() *awsAccountPrimaryContactState {
	if aapc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aapc.Type(), aapc.LocalName()))
	}
	return aapc.state
}

// Args contains the configurations for aws_account_primary_contact.
type Args struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// AddressLine1: string, required
	AddressLine1 terra.StringValue `hcl:"address_line_1,attr" validate:"required"`
	// AddressLine2: string, optional
	AddressLine2 terra.StringValue `hcl:"address_line_2,attr"`
	// AddressLine3: string, optional
	AddressLine3 terra.StringValue `hcl:"address_line_3,attr"`
	// City: string, required
	City terra.StringValue `hcl:"city,attr" validate:"required"`
	// CompanyName: string, optional
	CompanyName terra.StringValue `hcl:"company_name,attr"`
	// CountryCode: string, required
	CountryCode terra.StringValue `hcl:"country_code,attr" validate:"required"`
	// DistrictOrCounty: string, optional
	DistrictOrCounty terra.StringValue `hcl:"district_or_county,attr"`
	// FullName: string, required
	FullName terra.StringValue `hcl:"full_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PhoneNumber: string, required
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
	// PostalCode: string, required
	PostalCode terra.StringValue `hcl:"postal_code,attr" validate:"required"`
	// StateOrRegion: string, optional
	StateOrRegion terra.StringValue `hcl:"state_or_region,attr"`
	// WebsiteUrl: string, optional
	WebsiteUrl terra.StringValue `hcl:"website_url,attr"`
}

type awsAccountPrimaryContactAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("account_id"))
}

// AddressLine1 returns a reference to field address_line_1 of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) AddressLine1() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("address_line_1"))
}

// AddressLine2 returns a reference to field address_line_2 of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) AddressLine2() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("address_line_2"))
}

// AddressLine3 returns a reference to field address_line_3 of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) AddressLine3() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("address_line_3"))
}

// City returns a reference to field city of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("city"))
}

// CompanyName returns a reference to field company_name of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) CompanyName() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("company_name"))
}

// CountryCode returns a reference to field country_code of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("country_code"))
}

// DistrictOrCounty returns a reference to field district_or_county of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) DistrictOrCounty() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("district_or_county"))
}

// FullName returns a reference to field full_name of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) FullName() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("full_name"))
}

// Id returns a reference to field id of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("id"))
}

// PhoneNumber returns a reference to field phone_number of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("phone_number"))
}

// PostalCode returns a reference to field postal_code of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) PostalCode() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("postal_code"))
}

// StateOrRegion returns a reference to field state_or_region of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) StateOrRegion() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("state_or_region"))
}

// WebsiteUrl returns a reference to field website_url of aws_account_primary_contact.
func (aapc awsAccountPrimaryContactAttributes) WebsiteUrl() terra.StringValue {
	return terra.ReferenceAsString(aapc.ref.Append("website_url"))
}

type awsAccountPrimaryContactState struct {
	AccountId        string `json:"account_id"`
	AddressLine1     string `json:"address_line_1"`
	AddressLine2     string `json:"address_line_2"`
	AddressLine3     string `json:"address_line_3"`
	City             string `json:"city"`
	CompanyName      string `json:"company_name"`
	CountryCode      string `json:"country_code"`
	DistrictOrCounty string `json:"district_or_county"`
	FullName         string `json:"full_name"`
	Id               string `json:"id"`
	PhoneNumber      string `json:"phone_number"`
	PostalCode       string `json:"postal_code"`
	StateOrRegion    string `json:"state_or_region"`
	WebsiteUrl       string `json:"website_url"`
}
