// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudhsm_v2_cluster

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudhsm_v2_cluster.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudhsmV2ClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acvc *Resource) Type() string {
	return "aws_cloudhsm_v2_cluster"
}

// LocalName returns the local name for [Resource].
func (acvc *Resource) LocalName() string {
	return acvc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acvc *Resource) Configuration() interface{} {
	return acvc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acvc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acvc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acvc *Resource) Dependencies() terra.Dependencies {
	return acvc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acvc *Resource) LifecycleManagement() *terra.Lifecycle {
	return acvc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acvc *Resource) Attributes() awsCloudhsmV2ClusterAttributes {
	return awsCloudhsmV2ClusterAttributes{ref: terra.ReferenceResource(acvc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acvc *Resource) ImportState(state io.Reader) error {
	acvc.state = &awsCloudhsmV2ClusterState{}
	if err := json.NewDecoder(state).Decode(acvc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acvc.Type(), acvc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acvc *Resource) State() (*awsCloudhsmV2ClusterState, bool) {
	return acvc.state, acvc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acvc *Resource) StateMust() *awsCloudhsmV2ClusterState {
	if acvc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acvc.Type(), acvc.LocalName()))
	}
	return acvc.state
}

// Args contains the configurations for aws_cloudhsm_v2_cluster.
type Args struct {
	// HsmType: string, required
	HsmType terra.StringValue `hcl:"hsm_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SourceBackupIdentifier: string, optional
	SourceBackupIdentifier terra.StringValue `hcl:"source_backup_identifier,attr"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsCloudhsmV2ClusterAttributes struct {
	ref terra.Reference
}

// ClusterId returns a reference to field cluster_id of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) ClusterId() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("cluster_id"))
}

// ClusterState returns a reference to field cluster_state of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) ClusterState() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("cluster_state"))
}

// HsmType returns a reference to field hsm_type of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) HsmType() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("hsm_type"))
}

// Id returns a reference to field id of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("id"))
}

// SecurityGroupId returns a reference to field security_group_id of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("security_group_id"))
}

// SourceBackupIdentifier returns a reference to field source_backup_identifier of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) SourceBackupIdentifier() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("source_backup_identifier"))
}

// SubnetIds returns a reference to field subnet_ids of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acvc.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acvc.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acvc.ref.Append("tags_all"))
}

// VpcId returns a reference to field vpc_id of aws_cloudhsm_v2_cluster.
func (acvc awsCloudhsmV2ClusterAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("vpc_id"))
}

func (acvc awsCloudhsmV2ClusterAttributes) ClusterCertificates() terra.ListValue[ClusterCertificatesAttributes] {
	return terra.ReferenceAsList[ClusterCertificatesAttributes](acvc.ref.Append("cluster_certificates"))
}

func (acvc awsCloudhsmV2ClusterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acvc.ref.Append("timeouts"))
}

type awsCloudhsmV2ClusterState struct {
	ClusterId              string                     `json:"cluster_id"`
	ClusterState           string                     `json:"cluster_state"`
	HsmType                string                     `json:"hsm_type"`
	Id                     string                     `json:"id"`
	SecurityGroupId        string                     `json:"security_group_id"`
	SourceBackupIdentifier string                     `json:"source_backup_identifier"`
	SubnetIds              []string                   `json:"subnet_ids"`
	Tags                   map[string]string          `json:"tags"`
	TagsAll                map[string]string          `json:"tags_all"`
	VpcId                  string                     `json:"vpc_id"`
	ClusterCertificates    []ClusterCertificatesState `json:"cluster_certificates"`
	Timeouts               *TimeoutsState             `json:"timeouts"`
}
