// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_dedicated_ip_pool

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sesv2_dedicated_ip_pool.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesv2DedicatedIpPoolState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asdip *Resource) Type() string {
	return "aws_sesv2_dedicated_ip_pool"
}

// LocalName returns the local name for [Resource].
func (asdip *Resource) LocalName() string {
	return asdip.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asdip *Resource) Configuration() interface{} {
	return asdip.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asdip *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asdip)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asdip *Resource) Dependencies() terra.Dependencies {
	return asdip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asdip *Resource) LifecycleManagement() *terra.Lifecycle {
	return asdip.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asdip *Resource) Attributes() awsSesv2DedicatedIpPoolAttributes {
	return awsSesv2DedicatedIpPoolAttributes{ref: terra.ReferenceResource(asdip)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asdip *Resource) ImportState(state io.Reader) error {
	asdip.state = &awsSesv2DedicatedIpPoolState{}
	if err := json.NewDecoder(state).Decode(asdip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asdip.Type(), asdip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asdip *Resource) State() (*awsSesv2DedicatedIpPoolState, bool) {
	return asdip.state, asdip.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asdip *Resource) StateMust() *awsSesv2DedicatedIpPoolState {
	if asdip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asdip.Type(), asdip.LocalName()))
	}
	return asdip.state
}

// Args contains the configurations for aws_sesv2_dedicated_ip_pool.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PoolName: string, required
	PoolName terra.StringValue `hcl:"pool_name,attr" validate:"required"`
	// ScalingMode: string, optional
	ScalingMode terra.StringValue `hcl:"scaling_mode,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsSesv2DedicatedIpPoolAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sesv2_dedicated_ip_pool.
func (asdip awsSesv2DedicatedIpPoolAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asdip.ref.Append("arn"))
}

// Id returns a reference to field id of aws_sesv2_dedicated_ip_pool.
func (asdip awsSesv2DedicatedIpPoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asdip.ref.Append("id"))
}

// PoolName returns a reference to field pool_name of aws_sesv2_dedicated_ip_pool.
func (asdip awsSesv2DedicatedIpPoolAttributes) PoolName() terra.StringValue {
	return terra.ReferenceAsString(asdip.ref.Append("pool_name"))
}

// ScalingMode returns a reference to field scaling_mode of aws_sesv2_dedicated_ip_pool.
func (asdip awsSesv2DedicatedIpPoolAttributes) ScalingMode() terra.StringValue {
	return terra.ReferenceAsString(asdip.ref.Append("scaling_mode"))
}

// Tags returns a reference to field tags of aws_sesv2_dedicated_ip_pool.
func (asdip awsSesv2DedicatedIpPoolAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asdip.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_sesv2_dedicated_ip_pool.
func (asdip awsSesv2DedicatedIpPoolAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asdip.ref.Append("tags_all"))
}

func (asdip awsSesv2DedicatedIpPoolAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asdip.ref.Append("timeouts"))
}

type awsSesv2DedicatedIpPoolState struct {
	Arn         string            `json:"arn"`
	Id          string            `json:"id"`
	PoolName    string            `json:"pool_name"`
	ScalingMode string            `json:"scaling_mode"`
	Tags        map[string]string `json:"tags"`
	TagsAll     map[string]string `json:"tags_all"`
	Timeouts    *TimeoutsState    `json:"timeouts"`
}
