// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_backup_framework

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataControlAttributes struct {
	ref terra.Reference
}

func (c DataControlAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataControlAttributes) InternalWithRef(ref terra.Reference) DataControlAttributes {
	return DataControlAttributes{ref: ref}
}

func (c DataControlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataControlAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DataControlAttributes) InputParameter() terra.SetValue[DataControlInputParameterAttributes] {
	return terra.ReferenceAsSet[DataControlInputParameterAttributes](c.ref.Append("input_parameter"))
}

func (c DataControlAttributes) Scope() terra.ListValue[DataControlScopeAttributes] {
	return terra.ReferenceAsList[DataControlScopeAttributes](c.ref.Append("scope"))
}

type DataControlInputParameterAttributes struct {
	ref terra.Reference
}

func (ip DataControlInputParameterAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip DataControlInputParameterAttributes) InternalWithRef(ref terra.Reference) DataControlInputParameterAttributes {
	return DataControlInputParameterAttributes{ref: ref}
}

func (ip DataControlInputParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip DataControlInputParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("name"))
}

func (ip DataControlInputParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("value"))
}

type DataControlScopeAttributes struct {
	ref terra.Reference
}

func (s DataControlScopeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataControlScopeAttributes) InternalWithRef(ref terra.Reference) DataControlScopeAttributes {
	return DataControlScopeAttributes{ref: ref}
}

func (s DataControlScopeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataControlScopeAttributes) ComplianceResourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("compliance_resource_ids"))
}

func (s DataControlScopeAttributes) ComplianceResourceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("compliance_resource_types"))
}

func (s DataControlScopeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](s.ref.Append("tags"))
}

type DataControlState struct {
	Name           string                           `json:"name"`
	InputParameter []DataControlInputParameterState `json:"input_parameter"`
	Scope          []DataControlScopeState          `json:"scope"`
}

type DataControlInputParameterState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataControlScopeState struct {
	ComplianceResourceIds   []string          `json:"compliance_resource_ids"`
	ComplianceResourceTypes []string          `json:"compliance_resource_types"`
	Tags                    map[string]string `json:"tags"`
}
