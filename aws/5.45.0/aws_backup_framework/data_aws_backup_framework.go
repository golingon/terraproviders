// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_backup_framework

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_backup_framework.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (abf *DataSource) DataSource() string {
	return "aws_backup_framework"
}

// LocalName returns the local name for [DataSource].
func (abf *DataSource) LocalName() string {
	return abf.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (abf *DataSource) Configuration() interface{} {
	return abf.Args
}

// Attributes returns the attributes for [DataSource].
func (abf *DataSource) Attributes() dataAwsBackupFrameworkAttributes {
	return dataAwsBackupFrameworkAttributes{ref: terra.ReferenceDataSource(abf)}
}

// DataArgs contains the configurations for aws_backup_framework.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsBackupFrameworkAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("arn"))
}

// CreationTime returns a reference to field creation_time of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("creation_time"))
}

// DeploymentStatus returns a reference to field deployment_status of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) DeploymentStatus() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("deployment_status"))
}

// Description returns a reference to field description of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("description"))
}

// Id returns a reference to field id of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("id"))
}

// Name returns a reference to field name of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("name"))
}

// Status returns a reference to field status of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(abf.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_backup_framework.
func (abf dataAwsBackupFrameworkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](abf.ref.Append("tags"))
}

func (abf dataAwsBackupFrameworkAttributes) Control() terra.SetValue[DataControlAttributes] {
	return terra.ReferenceAsSet[DataControlAttributes](abf.ref.Append("control"))
}
