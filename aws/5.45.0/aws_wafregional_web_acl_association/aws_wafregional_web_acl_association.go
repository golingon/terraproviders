// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_wafregional_web_acl_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_wafregional_web_acl_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsWafregionalWebAclAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awwaa *Resource) Type() string {
	return "aws_wafregional_web_acl_association"
}

// LocalName returns the local name for [Resource].
func (awwaa *Resource) LocalName() string {
	return awwaa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awwaa *Resource) Configuration() interface{} {
	return awwaa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awwaa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awwaa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awwaa *Resource) Dependencies() terra.Dependencies {
	return awwaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awwaa *Resource) LifecycleManagement() *terra.Lifecycle {
	return awwaa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awwaa *Resource) Attributes() awsWafregionalWebAclAssociationAttributes {
	return awsWafregionalWebAclAssociationAttributes{ref: terra.ReferenceResource(awwaa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awwaa *Resource) ImportState(state io.Reader) error {
	awwaa.state = &awsWafregionalWebAclAssociationState{}
	if err := json.NewDecoder(state).Decode(awwaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awwaa.Type(), awwaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awwaa *Resource) State() (*awsWafregionalWebAclAssociationState, bool) {
	return awwaa.state, awwaa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awwaa *Resource) StateMust() *awsWafregionalWebAclAssociationState {
	if awwaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awwaa.Type(), awwaa.LocalName()))
	}
	return awwaa.state
}

// Args contains the configurations for aws_wafregional_web_acl_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
	// WebAclId: string, required
	WebAclId terra.StringValue `hcl:"web_acl_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsWafregionalWebAclAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_wafregional_web_acl_association.
func (awwaa awsWafregionalWebAclAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awwaa.ref.Append("id"))
}

// ResourceArn returns a reference to field resource_arn of aws_wafregional_web_acl_association.
func (awwaa awsWafregionalWebAclAssociationAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(awwaa.ref.Append("resource_arn"))
}

// WebAclId returns a reference to field web_acl_id of aws_wafregional_web_acl_association.
func (awwaa awsWafregionalWebAclAssociationAttributes) WebAclId() terra.StringValue {
	return terra.ReferenceAsString(awwaa.ref.Append("web_acl_id"))
}

func (awwaa awsWafregionalWebAclAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](awwaa.ref.Append("timeouts"))
}

type awsWafregionalWebAclAssociationState struct {
	Id          string         `json:"id"`
	ResourceArn string         `json:"resource_arn"`
	WebAclId    string         `json:"web_acl_id"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
