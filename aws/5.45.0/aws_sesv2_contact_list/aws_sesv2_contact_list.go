// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_contact_list

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sesv2_contact_list.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesv2ContactListState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascl *Resource) Type() string {
	return "aws_sesv2_contact_list"
}

// LocalName returns the local name for [Resource].
func (ascl *Resource) LocalName() string {
	return ascl.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascl *Resource) Configuration() interface{} {
	return ascl.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascl *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascl)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascl *Resource) Dependencies() terra.Dependencies {
	return ascl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascl *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascl.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascl *Resource) Attributes() awsSesv2ContactListAttributes {
	return awsSesv2ContactListAttributes{ref: terra.ReferenceResource(ascl)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascl *Resource) ImportState(state io.Reader) error {
	ascl.state = &awsSesv2ContactListState{}
	if err := json.NewDecoder(state).Decode(ascl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascl.Type(), ascl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascl *Resource) State() (*awsSesv2ContactListState, bool) {
	return ascl.state, ascl.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascl *Resource) StateMust() *awsSesv2ContactListState {
	if ascl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascl.Type(), ascl.LocalName()))
	}
	return ascl.state
}

// Args contains the configurations for aws_sesv2_contact_list.
type Args struct {
	// ContactListName: string, required
	ContactListName terra.StringValue `hcl:"contact_list_name,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Topic: min=0
	Topic []Topic `hcl:"topic,block" validate:"min=0"`
}

type awsSesv2ContactListAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ascl.ref.Append("arn"))
}

// ContactListName returns a reference to field contact_list_name of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) ContactListName() terra.StringValue {
	return terra.ReferenceAsString(ascl.ref.Append("contact_list_name"))
}

// CreatedTimestamp returns a reference to field created_timestamp of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) CreatedTimestamp() terra.StringValue {
	return terra.ReferenceAsString(ascl.ref.Append("created_timestamp"))
}

// Description returns a reference to field description of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ascl.ref.Append("description"))
}

// Id returns a reference to field id of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascl.ref.Append("id"))
}

// LastUpdatedTimestamp returns a reference to field last_updated_timestamp of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) LastUpdatedTimestamp() terra.StringValue {
	return terra.ReferenceAsString(ascl.ref.Append("last_updated_timestamp"))
}

// Tags returns a reference to field tags of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascl.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_sesv2_contact_list.
func (ascl awsSesv2ContactListAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascl.ref.Append("tags_all"))
}

func (ascl awsSesv2ContactListAttributes) Topic() terra.SetValue[TopicAttributes] {
	return terra.ReferenceAsSet[TopicAttributes](ascl.ref.Append("topic"))
}

type awsSesv2ContactListState struct {
	Arn                  string            `json:"arn"`
	ContactListName      string            `json:"contact_list_name"`
	CreatedTimestamp     string            `json:"created_timestamp"`
	Description          string            `json:"description"`
	Id                   string            `json:"id"`
	LastUpdatedTimestamp string            `json:"last_updated_timestamp"`
	Tags                 map[string]string `json:"tags"`
	TagsAll              map[string]string `json:"tags_all"`
	Topic                []TopicState      `json:"topic"`
}
