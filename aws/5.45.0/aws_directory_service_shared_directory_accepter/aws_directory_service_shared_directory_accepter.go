// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_directory_service_shared_directory_accepter

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_directory_service_shared_directory_accepter.
type Resource struct {
	Name      string
	Args      Args
	state     *awsDirectoryServiceSharedDirectoryAccepterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adssda *Resource) Type() string {
	return "aws_directory_service_shared_directory_accepter"
}

// LocalName returns the local name for [Resource].
func (adssda *Resource) LocalName() string {
	return adssda.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adssda *Resource) Configuration() interface{} {
	return adssda.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adssda *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adssda)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adssda *Resource) Dependencies() terra.Dependencies {
	return adssda.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adssda *Resource) LifecycleManagement() *terra.Lifecycle {
	return adssda.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adssda *Resource) Attributes() awsDirectoryServiceSharedDirectoryAccepterAttributes {
	return awsDirectoryServiceSharedDirectoryAccepterAttributes{ref: terra.ReferenceResource(adssda)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adssda *Resource) ImportState(state io.Reader) error {
	adssda.state = &awsDirectoryServiceSharedDirectoryAccepterState{}
	if err := json.NewDecoder(state).Decode(adssda.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adssda.Type(), adssda.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adssda *Resource) State() (*awsDirectoryServiceSharedDirectoryAccepterState, bool) {
	return adssda.state, adssda.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adssda *Resource) StateMust() *awsDirectoryServiceSharedDirectoryAccepterState {
	if adssda.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adssda.Type(), adssda.LocalName()))
	}
	return adssda.state
}

// Args contains the configurations for aws_directory_service_shared_directory_accepter.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SharedDirectoryId: string, required
	SharedDirectoryId terra.StringValue `hcl:"shared_directory_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsDirectoryServiceSharedDirectoryAccepterAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_directory_service_shared_directory_accepter.
func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adssda.ref.Append("id"))
}

// Method returns a reference to field method of aws_directory_service_shared_directory_accepter.
func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) Method() terra.StringValue {
	return terra.ReferenceAsString(adssda.ref.Append("method"))
}

// Notes returns a reference to field notes of aws_directory_service_shared_directory_accepter.
func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(adssda.ref.Append("notes"))
}

// OwnerAccountId returns a reference to field owner_account_id of aws_directory_service_shared_directory_accepter.
func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) OwnerAccountId() terra.StringValue {
	return terra.ReferenceAsString(adssda.ref.Append("owner_account_id"))
}

// OwnerDirectoryId returns a reference to field owner_directory_id of aws_directory_service_shared_directory_accepter.
func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) OwnerDirectoryId() terra.StringValue {
	return terra.ReferenceAsString(adssda.ref.Append("owner_directory_id"))
}

// SharedDirectoryId returns a reference to field shared_directory_id of aws_directory_service_shared_directory_accepter.
func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) SharedDirectoryId() terra.StringValue {
	return terra.ReferenceAsString(adssda.ref.Append("shared_directory_id"))
}

func (adssda awsDirectoryServiceSharedDirectoryAccepterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adssda.ref.Append("timeouts"))
}

type awsDirectoryServiceSharedDirectoryAccepterState struct {
	Id                string         `json:"id"`
	Method            string         `json:"method"`
	Notes             string         `json:"notes"`
	OwnerAccountId    string         `json:"owner_account_id"`
	OwnerDirectoryId  string         `json:"owner_directory_id"`
	SharedDirectoryId string         `json:"shared_directory_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
