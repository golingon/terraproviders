// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_configuration_set_event_destination

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sesv2_configuration_set_event_destination.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesv2ConfigurationSetEventDestinationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascsed *Resource) Type() string {
	return "aws_sesv2_configuration_set_event_destination"
}

// LocalName returns the local name for [Resource].
func (ascsed *Resource) LocalName() string {
	return ascsed.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascsed *Resource) Configuration() interface{} {
	return ascsed.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascsed *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascsed)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascsed *Resource) Dependencies() terra.Dependencies {
	return ascsed.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascsed *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascsed.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascsed *Resource) Attributes() awsSesv2ConfigurationSetEventDestinationAttributes {
	return awsSesv2ConfigurationSetEventDestinationAttributes{ref: terra.ReferenceResource(ascsed)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascsed *Resource) ImportState(state io.Reader) error {
	ascsed.state = &awsSesv2ConfigurationSetEventDestinationState{}
	if err := json.NewDecoder(state).Decode(ascsed.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascsed.Type(), ascsed.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascsed *Resource) State() (*awsSesv2ConfigurationSetEventDestinationState, bool) {
	return ascsed.state, ascsed.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascsed *Resource) StateMust() *awsSesv2ConfigurationSetEventDestinationState {
	if ascsed.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascsed.Type(), ascsed.LocalName()))
	}
	return ascsed.state
}

// Args contains the configurations for aws_sesv2_configuration_set_event_destination.
type Args struct {
	// ConfigurationSetName: string, required
	ConfigurationSetName terra.StringValue `hcl:"configuration_set_name,attr" validate:"required"`
	// EventDestinationName: string, required
	EventDestinationName terra.StringValue `hcl:"event_destination_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// EventDestination: required
	EventDestination *EventDestination `hcl:"event_destination,block" validate:"required"`
}

type awsSesv2ConfigurationSetEventDestinationAttributes struct {
	ref terra.Reference
}

// ConfigurationSetName returns a reference to field configuration_set_name of aws_sesv2_configuration_set_event_destination.
func (ascsed awsSesv2ConfigurationSetEventDestinationAttributes) ConfigurationSetName() terra.StringValue {
	return terra.ReferenceAsString(ascsed.ref.Append("configuration_set_name"))
}

// EventDestinationName returns a reference to field event_destination_name of aws_sesv2_configuration_set_event_destination.
func (ascsed awsSesv2ConfigurationSetEventDestinationAttributes) EventDestinationName() terra.StringValue {
	return terra.ReferenceAsString(ascsed.ref.Append("event_destination_name"))
}

// Id returns a reference to field id of aws_sesv2_configuration_set_event_destination.
func (ascsed awsSesv2ConfigurationSetEventDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascsed.ref.Append("id"))
}

func (ascsed awsSesv2ConfigurationSetEventDestinationAttributes) EventDestination() terra.ListValue[EventDestinationAttributes] {
	return terra.ReferenceAsList[EventDestinationAttributes](ascsed.ref.Append("event_destination"))
}

type awsSesv2ConfigurationSetEventDestinationState struct {
	ConfigurationSetName string                  `json:"configuration_set_name"`
	EventDestinationName string                  `json:"event_destination_name"`
	Id                   string                  `json:"id"`
	EventDestination     []EventDestinationState `json:"event_destination"`
}
