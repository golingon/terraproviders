// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_user_groups

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_cognito_user_groups.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acug *DataSource) DataSource() string {
	return "aws_cognito_user_groups"
}

// LocalName returns the local name for [DataSource].
func (acug *DataSource) LocalName() string {
	return acug.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acug *DataSource) Configuration() interface{} {
	return acug.Args
}

// Attributes returns the attributes for [DataSource].
func (acug *DataSource) Attributes() dataAwsCognitoUserGroupsAttributes {
	return dataAwsCognitoUserGroupsAttributes{ref: terra.ReferenceDataSource(acug)}
}

// DataArgs contains the configurations for aws_cognito_user_groups.
type DataArgs struct {
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
	// Groups: min=0
	Groups []DataGroups `hcl:"groups,block" validate:"min=0"`
}

type dataAwsCognitoUserGroupsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_cognito_user_groups.
func (acug dataAwsCognitoUserGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acug.ref.Append("id"))
}

// UserPoolId returns a reference to field user_pool_id of aws_cognito_user_groups.
func (acug dataAwsCognitoUserGroupsAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceAsString(acug.ref.Append("user_pool_id"))
}

func (acug dataAwsCognitoUserGroupsAttributes) Groups() terra.ListValue[DataGroupsAttributes] {
	return terra.ReferenceAsList[DataGroupsAttributes](acug.ref.Append("groups"))
}
