// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_apprunner_default_auto_scaling_configuration_version

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_apprunner_default_auto_scaling_configuration_version.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApprunnerDefaultAutoScalingConfigurationVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aadascv *Resource) Type() string {
	return "aws_apprunner_default_auto_scaling_configuration_version"
}

// LocalName returns the local name for [Resource].
func (aadascv *Resource) LocalName() string {
	return aadascv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aadascv *Resource) Configuration() interface{} {
	return aadascv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aadascv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aadascv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aadascv *Resource) Dependencies() terra.Dependencies {
	return aadascv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aadascv *Resource) LifecycleManagement() *terra.Lifecycle {
	return aadascv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aadascv *Resource) Attributes() awsApprunnerDefaultAutoScalingConfigurationVersionAttributes {
	return awsApprunnerDefaultAutoScalingConfigurationVersionAttributes{ref: terra.ReferenceResource(aadascv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aadascv *Resource) ImportState(state io.Reader) error {
	aadascv.state = &awsApprunnerDefaultAutoScalingConfigurationVersionState{}
	if err := json.NewDecoder(state).Decode(aadascv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aadascv.Type(), aadascv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aadascv *Resource) State() (*awsApprunnerDefaultAutoScalingConfigurationVersionState, bool) {
	return aadascv.state, aadascv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aadascv *Resource) StateMust() *awsApprunnerDefaultAutoScalingConfigurationVersionState {
	if aadascv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aadascv.Type(), aadascv.LocalName()))
	}
	return aadascv.state
}

// Args contains the configurations for aws_apprunner_default_auto_scaling_configuration_version.
type Args struct {
	// AutoScalingConfigurationArn: string, required
	AutoScalingConfigurationArn terra.StringValue `hcl:"auto_scaling_configuration_arn,attr" validate:"required"`
}

type awsApprunnerDefaultAutoScalingConfigurationVersionAttributes struct {
	ref terra.Reference
}

// AutoScalingConfigurationArn returns a reference to field auto_scaling_configuration_arn of aws_apprunner_default_auto_scaling_configuration_version.
func (aadascv awsApprunnerDefaultAutoScalingConfigurationVersionAttributes) AutoScalingConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(aadascv.ref.Append("auto_scaling_configuration_arn"))
}

// Id returns a reference to field id of aws_apprunner_default_auto_scaling_configuration_version.
func (aadascv awsApprunnerDefaultAutoScalingConfigurationVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aadascv.ref.Append("id"))
}

type awsApprunnerDefaultAutoScalingConfigurationVersionState struct {
	AutoScalingConfigurationArn string `json:"auto_scaling_configuration_arn"`
	Id                          string `json:"id"`
}
