// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appflow_flow

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DestinationFlowConfig struct {
	// ApiVersion: string, optional
	ApiVersion terra.StringValue `hcl:"api_version,attr"`
	// ConnectorProfileName: string, optional
	ConnectorProfileName terra.StringValue `hcl:"connector_profile_name,attr"`
	// ConnectorType: string, required
	ConnectorType terra.StringValue `hcl:"connector_type,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorProperties: required
	DestinationConnectorProperties *DestinationFlowConfigDestinationConnectorProperties `hcl:"destination_connector_properties,block" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorProperties struct {
	// DestinationFlowConfigDestinationConnectorPropertiesCustomConnector: optional
	CustomConnector *DestinationFlowConfigDestinationConnectorPropertiesCustomConnector `hcl:"custom_connector,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles: optional
	CustomerProfiles *DestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles `hcl:"customer_profiles,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesEventBridge: optional
	EventBridge *DestinationFlowConfigDestinationConnectorPropertiesEventBridge `hcl:"event_bridge,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesHoneycode: optional
	Honeycode *DestinationFlowConfigDestinationConnectorPropertiesHoneycode `hcl:"honeycode,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics: optional
	LookoutMetrics *DestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics `hcl:"lookout_metrics,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesMarketo: optional
	Marketo *DestinationFlowConfigDestinationConnectorPropertiesMarketo `hcl:"marketo,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesRedshift: optional
	Redshift *DestinationFlowConfigDestinationConnectorPropertiesRedshift `hcl:"redshift,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesS3: optional
	S3 *DestinationFlowConfigDestinationConnectorPropertiesS3 `hcl:"s3,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSalesforce: optional
	Salesforce *DestinationFlowConfigDestinationConnectorPropertiesSalesforce `hcl:"salesforce,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSapoData: optional
	SapoData *DestinationFlowConfigDestinationConnectorPropertiesSapoData `hcl:"sapo_data,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSnowflake: optional
	Snowflake *DestinationFlowConfigDestinationConnectorPropertiesSnowflake `hcl:"snowflake,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesUpsolver: optional
	Upsolver *DestinationFlowConfigDestinationConnectorPropertiesUpsolver `hcl:"upsolver,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesZendesk: optional
	Zendesk *DestinationFlowConfigDestinationConnectorPropertiesZendesk `hcl:"zendesk,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnector struct {
	// CustomProperties: map of string, optional
	CustomProperties terra.MapValue[terra.StringValue] `hcl:"custom_properties,attr"`
	// EntityName: string, required
	EntityName terra.StringValue `hcl:"entity_name,attr" validate:"required"`
	// IdFieldNames: list of string, optional
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// WriteOperationType: string, optional
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles struct {
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// ObjectTypeName: string, optional
	ObjectTypeName terra.StringValue `hcl:"object_type_name,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridge struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycode struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics struct{}

type DestinationFlowConfigDestinationConnectorPropertiesMarketo struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshift struct {
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// IntermediateBucketName: string, required
	IntermediateBucketName terra.StringValue `hcl:"intermediate_bucket_name,attr" validate:"required"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3 struct {
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig: optional
	S3OutputFormatConfig *DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig `hcl:"s3_output_format_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig struct {
	// FileType: string, optional
	FileType terra.StringValue `hcl:"file_type,attr"`
	// PreserveSourceDataTyping: bool, optional
	PreserveSourceDataTyping terra.BoolValue `hcl:"preserve_source_data_typing,attr"`
	// DestinationFlowConfigDestinationConnectorProperties9A1Db91B: optional
	AggregationConfig *DestinationFlowConfigDestinationConnectorProperties9A1Db91B `hcl:"aggregation_config,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4: optional
	PrefixConfig *DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4 `hcl:"prefix_config,block"`
}

type DestinationFlowConfigDestinationConnectorProperties9A1Db91B struct {
	// AggregationType: string, optional
	AggregationType terra.StringValue `hcl:"aggregation_type,attr"`
	// TargetFileSize: number, optional
	TargetFileSize terra.NumberValue `hcl:"target_file_size,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4 struct {
	// PrefixFormat: string, optional
	PrefixFormat terra.StringValue `hcl:"prefix_format,attr"`
	// PrefixType: string, optional
	PrefixType terra.StringValue `hcl:"prefix_type,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforce struct {
	// IdFieldNames: list of string, optional
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// WriteOperationType: string, optional
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoData struct {
	// IdFieldNames: list of string, optional
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// ObjectPath: string, required
	ObjectPath terra.StringValue `hcl:"object_path,attr" validate:"required"`
	// WriteOperationType: string, optional
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig `hcl:"error_handling_config,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig: optional
	SuccessResponseHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig `hcl:"success_response_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflake struct {
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// IntermediateBucketName: string, required
	IntermediateBucketName terra.StringValue `hcl:"intermediate_bucket_name,attr" validate:"required"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolver struct {
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig: required
	S3OutputFormatConfig *DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig `hcl:"s3_output_format_config,block" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig struct {
	// FileType: string, optional
	FileType terra.StringValue `hcl:"file_type,attr"`
	// DestinationFlowConfigDestinationConnectorProperties8122C4C1: optional
	AggregationConfig *DestinationFlowConfigDestinationConnectorProperties8122C4C1 `hcl:"aggregation_config,block"`
	// DestinationFlowConfigDestinationConnectorProperties2Eb41171: required
	PrefixConfig *DestinationFlowConfigDestinationConnectorProperties2Eb41171 `hcl:"prefix_config,block" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorProperties8122C4C1 struct {
	// AggregationType: string, optional
	AggregationType terra.StringValue `hcl:"aggregation_type,attr"`
}

type DestinationFlowConfigDestinationConnectorProperties2Eb41171 struct {
	// PrefixFormat: string, optional
	PrefixFormat terra.StringValue `hcl:"prefix_format,attr"`
	// PrefixType: string, required
	PrefixType terra.StringValue `hcl:"prefix_type,attr" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendesk struct {
	// IdFieldNames: list of string, optional
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// WriteOperationType: string, optional
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig: optional
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError: bool, optional
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type SourceFlowConfig struct {
	// ApiVersion: string, optional
	ApiVersion terra.StringValue `hcl:"api_version,attr"`
	// ConnectorProfileName: string, optional
	ConnectorProfileName terra.StringValue `hcl:"connector_profile_name,attr"`
	// ConnectorType: string, required
	ConnectorType terra.StringValue `hcl:"connector_type,attr" validate:"required"`
	// SourceFlowConfigIncrementalPullConfig: optional
	IncrementalPullConfig *SourceFlowConfigIncrementalPullConfig `hcl:"incremental_pull_config,block"`
	// SourceFlowConfigSourceConnectorProperties: required
	SourceConnectorProperties *SourceFlowConfigSourceConnectorProperties `hcl:"source_connector_properties,block" validate:"required"`
}

type SourceFlowConfigIncrementalPullConfig struct {
	// DatetimeTypeFieldName: string, optional
	DatetimeTypeFieldName terra.StringValue `hcl:"datetime_type_field_name,attr"`
}

type SourceFlowConfigSourceConnectorProperties struct {
	// SourceFlowConfigSourceConnectorPropertiesAmplitude: optional
	Amplitude *SourceFlowConfigSourceConnectorPropertiesAmplitude `hcl:"amplitude,block"`
	// SourceFlowConfigSourceConnectorPropertiesCustomConnector: optional
	CustomConnector *SourceFlowConfigSourceConnectorPropertiesCustomConnector `hcl:"custom_connector,block"`
	// SourceFlowConfigSourceConnectorPropertiesDatadog: optional
	Datadog *SourceFlowConfigSourceConnectorPropertiesDatadog `hcl:"datadog,block"`
	// SourceFlowConfigSourceConnectorPropertiesDynatrace: optional
	Dynatrace *SourceFlowConfigSourceConnectorPropertiesDynatrace `hcl:"dynatrace,block"`
	// SourceFlowConfigSourceConnectorPropertiesGoogleAnalytics: optional
	GoogleAnalytics *SourceFlowConfigSourceConnectorPropertiesGoogleAnalytics `hcl:"google_analytics,block"`
	// SourceFlowConfigSourceConnectorPropertiesInforNexus: optional
	InforNexus *SourceFlowConfigSourceConnectorPropertiesInforNexus `hcl:"infor_nexus,block"`
	// SourceFlowConfigSourceConnectorPropertiesMarketo: optional
	Marketo *SourceFlowConfigSourceConnectorPropertiesMarketo `hcl:"marketo,block"`
	// SourceFlowConfigSourceConnectorPropertiesS3: optional
	S3 *SourceFlowConfigSourceConnectorPropertiesS3 `hcl:"s3,block"`
	// SourceFlowConfigSourceConnectorPropertiesSalesforce: optional
	Salesforce *SourceFlowConfigSourceConnectorPropertiesSalesforce `hcl:"salesforce,block"`
	// SourceFlowConfigSourceConnectorPropertiesSapoData: optional
	SapoData *SourceFlowConfigSourceConnectorPropertiesSapoData `hcl:"sapo_data,block"`
	// SourceFlowConfigSourceConnectorPropertiesServiceNow: optional
	ServiceNow *SourceFlowConfigSourceConnectorPropertiesServiceNow `hcl:"service_now,block"`
	// SourceFlowConfigSourceConnectorPropertiesSingular: optional
	Singular *SourceFlowConfigSourceConnectorPropertiesSingular `hcl:"singular,block"`
	// SourceFlowConfigSourceConnectorPropertiesSlack: optional
	Slack *SourceFlowConfigSourceConnectorPropertiesSlack `hcl:"slack,block"`
	// SourceFlowConfigSourceConnectorPropertiesTrendmicro: optional
	Trendmicro *SourceFlowConfigSourceConnectorPropertiesTrendmicro `hcl:"trendmicro,block"`
	// SourceFlowConfigSourceConnectorPropertiesVeeva: optional
	Veeva *SourceFlowConfigSourceConnectorPropertiesVeeva `hcl:"veeva,block"`
	// SourceFlowConfigSourceConnectorPropertiesZendesk: optional
	Zendesk *SourceFlowConfigSourceConnectorPropertiesZendesk `hcl:"zendesk,block"`
}

type SourceFlowConfigSourceConnectorPropertiesAmplitude struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesCustomConnector struct {
	// CustomProperties: map of string, optional
	CustomProperties terra.MapValue[terra.StringValue] `hcl:"custom_properties,attr"`
	// EntityName: string, required
	EntityName terra.StringValue `hcl:"entity_name,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesDatadog struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesDynatrace struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesGoogleAnalytics struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesInforNexus struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesMarketo struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesS3 struct {
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix: string, required
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr" validate:"required"`
	// SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig: optional
	S3InputFormatConfig *SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig `hcl:"s3_input_format_config,block"`
}

type SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig struct {
	// S3InputFileType: string, optional
	S3InputFileType terra.StringValue `hcl:"s3_input_file_type,attr"`
}

type SourceFlowConfigSourceConnectorPropertiesSalesforce struct {
	// EnableDynamicFieldUpdate: bool, optional
	EnableDynamicFieldUpdate terra.BoolValue `hcl:"enable_dynamic_field_update,attr"`
	// IncludeDeletedRecords: bool, optional
	IncludeDeletedRecords terra.BoolValue `hcl:"include_deleted_records,attr"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesSapoData struct {
	// ObjectPath: string, required
	ObjectPath terra.StringValue `hcl:"object_path,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesServiceNow struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesSingular struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesSlack struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesTrendmicro struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesVeeva struct {
	// DocumentType: string, optional
	DocumentType terra.StringValue `hcl:"document_type,attr"`
	// IncludeAllVersions: bool, optional
	IncludeAllVersions terra.BoolValue `hcl:"include_all_versions,attr"`
	// IncludeRenditions: bool, optional
	IncludeRenditions terra.BoolValue `hcl:"include_renditions,attr"`
	// IncludeSourceFiles: bool, optional
	IncludeSourceFiles terra.BoolValue `hcl:"include_source_files,attr"`
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesZendesk struct {
	// Object: string, required
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type Task struct {
	// DestinationField: string, optional
	DestinationField terra.StringValue `hcl:"destination_field,attr"`
	// SourceFields: list of string, optional
	SourceFields terra.ListValue[terra.StringValue] `hcl:"source_fields,attr"`
	// TaskProperties: map of string, optional
	TaskProperties terra.MapValue[terra.StringValue] `hcl:"task_properties,attr"`
	// TaskType: string, required
	TaskType terra.StringValue `hcl:"task_type,attr" validate:"required"`
	// TaskConnectorOperator: min=0
	ConnectorOperator []TaskConnectorOperator `hcl:"connector_operator,block" validate:"min=0"`
}

type TaskConnectorOperator struct {
	// Amplitude: string, optional
	Amplitude terra.StringValue `hcl:"amplitude,attr"`
	// CustomConnector: string, optional
	CustomConnector terra.StringValue `hcl:"custom_connector,attr"`
	// Datadog: string, optional
	Datadog terra.StringValue `hcl:"datadog,attr"`
	// Dynatrace: string, optional
	Dynatrace terra.StringValue `hcl:"dynatrace,attr"`
	// GoogleAnalytics: string, optional
	GoogleAnalytics terra.StringValue `hcl:"google_analytics,attr"`
	// InforNexus: string, optional
	InforNexus terra.StringValue `hcl:"infor_nexus,attr"`
	// Marketo: string, optional
	Marketo terra.StringValue `hcl:"marketo,attr"`
	// S3: string, optional
	S3 terra.StringValue `hcl:"s3,attr"`
	// Salesforce: string, optional
	Salesforce terra.StringValue `hcl:"salesforce,attr"`
	// SapoData: string, optional
	SapoData terra.StringValue `hcl:"sapo_data,attr"`
	// ServiceNow: string, optional
	ServiceNow terra.StringValue `hcl:"service_now,attr"`
	// Singular: string, optional
	Singular terra.StringValue `hcl:"singular,attr"`
	// Slack: string, optional
	Slack terra.StringValue `hcl:"slack,attr"`
	// Trendmicro: string, optional
	Trendmicro terra.StringValue `hcl:"trendmicro,attr"`
	// Veeva: string, optional
	Veeva terra.StringValue `hcl:"veeva,attr"`
	// Zendesk: string, optional
	Zendesk terra.StringValue `hcl:"zendesk,attr"`
}

type TriggerConfig struct {
	// TriggerType: string, required
	TriggerType terra.StringValue `hcl:"trigger_type,attr" validate:"required"`
	// TriggerConfigTriggerProperties: optional
	TriggerProperties *TriggerConfigTriggerProperties `hcl:"trigger_properties,block"`
}

type TriggerConfigTriggerProperties struct {
	// TriggerConfigTriggerPropertiesScheduled: optional
	Scheduled *TriggerConfigTriggerPropertiesScheduled `hcl:"scheduled,block"`
}

type TriggerConfigTriggerPropertiesScheduled struct {
	// DataPullMode: string, optional
	DataPullMode terra.StringValue `hcl:"data_pull_mode,attr"`
	// FirstExecutionFrom: string, optional
	FirstExecutionFrom terra.StringValue `hcl:"first_execution_from,attr"`
	// ScheduleEndTime: string, optional
	ScheduleEndTime terra.StringValue `hcl:"schedule_end_time,attr"`
	// ScheduleExpression: string, required
	ScheduleExpression terra.StringValue `hcl:"schedule_expression,attr" validate:"required"`
	// ScheduleOffset: number, optional
	ScheduleOffset terra.NumberValue `hcl:"schedule_offset,attr"`
	// ScheduleStartTime: string, optional
	ScheduleStartTime terra.StringValue `hcl:"schedule_start_time,attr"`
	// Timezone: string, optional
	Timezone terra.StringValue `hcl:"timezone,attr"`
}

type DestinationFlowConfigAttributes struct {
	ref terra.Reference
}

func (dfc DestinationFlowConfigAttributes) InternalRef() (terra.Reference, error) {
	return dfc.ref, nil
}

func (dfc DestinationFlowConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigAttributes {
	return DestinationFlowConfigAttributes{ref: ref}
}

func (dfc DestinationFlowConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dfc.ref.InternalTokens()
}

func (dfc DestinationFlowConfigAttributes) ApiVersion() terra.StringValue {
	return terra.ReferenceAsString(dfc.ref.Append("api_version"))
}

func (dfc DestinationFlowConfigAttributes) ConnectorProfileName() terra.StringValue {
	return terra.ReferenceAsString(dfc.ref.Append("connector_profile_name"))
}

func (dfc DestinationFlowConfigAttributes) ConnectorType() terra.StringValue {
	return terra.ReferenceAsString(dfc.ref.Append("connector_type"))
}

func (dfc DestinationFlowConfigAttributes) DestinationConnectorProperties() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesAttributes](dfc.ref.Append("destination_connector_properties"))
}

type DestinationFlowConfigDestinationConnectorPropertiesAttributes struct {
	ref terra.Reference
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return dcp.ref, nil
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesAttributes{ref: ref}
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dcp.ref.InternalTokens()
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) CustomConnector() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes](dcp.ref.Append("custom_connector"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) CustomerProfiles() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes](dcp.ref.Append("customer_profiles"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) EventBridge() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes](dcp.ref.Append("event_bridge"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Honeycode() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes](dcp.ref.Append("honeycode"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) LookoutMetrics() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes](dcp.ref.Append("lookout_metrics"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Marketo() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes](dcp.ref.Append("marketo"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Redshift() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes](dcp.ref.Append("redshift"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) S3() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesS3Attributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesS3Attributes](dcp.ref.Append("s3"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Salesforce() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes](dcp.ref.Append("salesforce"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) SapoData() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes](dcp.ref.Append("sapo_data"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Snowflake() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes](dcp.ref.Append("snowflake"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Upsolver() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes](dcp.ref.Append("upsolver"))
}

func (dcp DestinationFlowConfigDestinationConnectorPropertiesAttributes) Zendesk() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes](dcp.ref.Append("zendesk"))
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes{ref: ref}
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) CustomProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cc.ref.Append("custom_properties"))
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) EntityName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("entity_name"))
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cc.ref.Append("id_field_names"))
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("write_operation_type"))
}

func (cc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes](cc.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes struct {
	ref terra.Reference
}

func (cp DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes{ref: ref}
}

func (cp DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("domain_name"))
}

func (cp DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) ObjectTypeName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("object_type_name"))
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes struct {
	ref terra.Reference
}

func (eb DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) InternalRef() (terra.Reference, error) {
	return eb.ref, nil
}

func (eb DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes{ref: ref}
}

func (eb DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eb.ref.InternalTokens()
}

func (eb DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(eb.ref.Append("object"))
}

func (eb DestinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes](eb.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes struct {
	ref terra.Reference
}

func (h DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes{ref: ref}
}

func (h DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("object"))
}

func (h DestinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes](h.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes struct {
	ref terra.Reference
}

func (lm DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes) InternalRef() (terra.Reference, error) {
	return lm.ref, nil
}

func (lm DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes{ref: ref}
}

func (lm DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lm.ref.InternalTokens()
}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes struct {
	ref terra.Reference
}

func (m DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes{ref: ref}
}

func (m DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("object"))
}

func (m DestinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes](m.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes struct {
	ref terra.Reference
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes{ref: ref}
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_prefix"))
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) IntermediateBucketName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("intermediate_bucket_name"))
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("object"))
}

func (r DestinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes](r.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesS3Attributes struct {
	ref terra.Reference
}

func (s DestinationFlowConfigDestinationConnectorPropertiesS3Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DestinationFlowConfigDestinationConnectorPropertiesS3Attributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesS3Attributes {
	return DestinationFlowConfigDestinationConnectorPropertiesS3Attributes{ref: ref}
}

func (s DestinationFlowConfigDestinationConnectorPropertiesS3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DestinationFlowConfigDestinationConnectorPropertiesS3Attributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_name"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesS3Attributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesS3Attributes) S3OutputFormatConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes](s.ref.Append("s3_output_format_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes struct {
	ref terra.Reference
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) InternalRef() (terra.Reference, error) {
	return sofc.ref, nil
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes{ref: ref}
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sofc.ref.InternalTokens()
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) FileType() terra.StringValue {
	return terra.ReferenceAsString(sofc.ref.Append("file_type"))
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) PreserveSourceDataTyping() terra.BoolValue {
	return terra.ReferenceAsBool(sofc.ref.Append("preserve_source_data_typing"))
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) AggregationConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes](sofc.ref.Append("aggregation_config"))
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) PrefixConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes](sofc.ref.Append("prefix_config"))
}

type DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes struct {
	ref terra.Reference
}

func (ac DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes {
	return DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes{ref: ref}
}

func (ac DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) AggregationType() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("aggregation_type"))
}

func (ac DestinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) TargetFileSize() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("target_file_size"))
}

type DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes struct {
	ref terra.Reference
}

func (pc DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes {
	return DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes{ref: ref}
}

func (pc DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) PrefixFormat() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_format"))
}

func (pc DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) PrefixType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_type"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes struct {
	ref terra.Reference
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes{ref: ref}
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("id_field_names"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("write_operation_type"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes](s.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes struct {
	ref terra.Reference
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes{ref: ref}
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sd.ref.Append("id_field_names"))
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) ObjectPath() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("object_path"))
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("write_operation_type"))
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes](sd.ref.Append("error_handling_config"))
}

func (sd DestinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) SuccessResponseHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes](sd.ref.Append("success_response_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes struct {
	ref terra.Reference
}

func (srhc DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return srhc.ref, nil
}

func (srhc DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes{ref: ref}
}

func (srhc DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srhc.ref.InternalTokens()
}

func (srhc DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(srhc.ref.Append("bucket_name"))
}

func (srhc DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(srhc.ref.Append("bucket_prefix"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes struct {
	ref terra.Reference
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes{ref: ref}
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) IntermediateBucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("intermediate_bucket_name"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

func (s DestinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes](s.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes struct {
	ref terra.Reference
}

func (u DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes{ref: ref}
}

func (u DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("bucket_name"))
}

func (u DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("bucket_prefix"))
}

func (u DestinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) S3OutputFormatConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes](u.ref.Append("s3_output_format_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes struct {
	ref terra.Reference
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) InternalRef() (terra.Reference, error) {
	return sofc.ref, nil
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes{ref: ref}
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sofc.ref.InternalTokens()
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) FileType() terra.StringValue {
	return terra.ReferenceAsString(sofc.ref.Append("file_type"))
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) AggregationConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes](sofc.ref.Append("aggregation_config"))
}

func (sofc DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) PrefixConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes](sofc.ref.Append("prefix_config"))
}

type DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes struct {
	ref terra.Reference
}

func (ac DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes {
	return DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes{ref: ref}
}

func (ac DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac DestinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) AggregationType() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("aggregation_type"))
}

type DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes struct {
	ref terra.Reference
}

func (pc DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes {
	return DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes{ref: ref}
}

func (pc DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) PrefixFormat() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_format"))
}

func (pc DestinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) PrefixType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_type"))
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes struct {
	ref terra.Reference
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) InternalRef() (terra.Reference, error) {
	return z.ref, nil
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes{ref: ref}
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return z.ref.InternalTokens()
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](z.ref.Append("id_field_names"))
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("object"))
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("write_operation_type"))
}

func (z DestinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) ErrorHandlingConfig() terra.ListValue[DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes](z.ref.Append("error_handling_config"))
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes {
	return DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes{ref: ref}
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type SourceFlowConfigAttributes struct {
	ref terra.Reference
}

func (sfc SourceFlowConfigAttributes) InternalRef() (terra.Reference, error) {
	return sfc.ref, nil
}

func (sfc SourceFlowConfigAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigAttributes {
	return SourceFlowConfigAttributes{ref: ref}
}

func (sfc SourceFlowConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sfc.ref.InternalTokens()
}

func (sfc SourceFlowConfigAttributes) ApiVersion() terra.StringValue {
	return terra.ReferenceAsString(sfc.ref.Append("api_version"))
}

func (sfc SourceFlowConfigAttributes) ConnectorProfileName() terra.StringValue {
	return terra.ReferenceAsString(sfc.ref.Append("connector_profile_name"))
}

func (sfc SourceFlowConfigAttributes) ConnectorType() terra.StringValue {
	return terra.ReferenceAsString(sfc.ref.Append("connector_type"))
}

func (sfc SourceFlowConfigAttributes) IncrementalPullConfig() terra.ListValue[SourceFlowConfigIncrementalPullConfigAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigIncrementalPullConfigAttributes](sfc.ref.Append("incremental_pull_config"))
}

func (sfc SourceFlowConfigAttributes) SourceConnectorProperties() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesAttributes](sfc.ref.Append("source_connector_properties"))
}

type SourceFlowConfigIncrementalPullConfigAttributes struct {
	ref terra.Reference
}

func (ipc SourceFlowConfigIncrementalPullConfigAttributes) InternalRef() (terra.Reference, error) {
	return ipc.ref, nil
}

func (ipc SourceFlowConfigIncrementalPullConfigAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigIncrementalPullConfigAttributes {
	return SourceFlowConfigIncrementalPullConfigAttributes{ref: ref}
}

func (ipc SourceFlowConfigIncrementalPullConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ipc.ref.InternalTokens()
}

func (ipc SourceFlowConfigIncrementalPullConfigAttributes) DatetimeTypeFieldName() terra.StringValue {
	return terra.ReferenceAsString(ipc.ref.Append("datetime_type_field_name"))
}

type SourceFlowConfigSourceConnectorPropertiesAttributes struct {
	ref terra.Reference
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return scp.ref, nil
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesAttributes {
	return SourceFlowConfigSourceConnectorPropertiesAttributes{ref: ref}
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scp.ref.InternalTokens()
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Amplitude() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes](scp.ref.Append("amplitude"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) CustomConnector() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes](scp.ref.Append("custom_connector"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Datadog() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesDatadogAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesDatadogAttributes](scp.ref.Append("datadog"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Dynatrace() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes](scp.ref.Append("dynatrace"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) GoogleAnalytics() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes](scp.ref.Append("google_analytics"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) InforNexus() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes](scp.ref.Append("infor_nexus"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Marketo() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesMarketoAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesMarketoAttributes](scp.ref.Append("marketo"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) S3() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesS3Attributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesS3Attributes](scp.ref.Append("s3"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Salesforce() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes](scp.ref.Append("salesforce"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) SapoData() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes](scp.ref.Append("sapo_data"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) ServiceNow() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes](scp.ref.Append("service_now"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Singular() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesSingularAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesSingularAttributes](scp.ref.Append("singular"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Slack() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesSlackAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesSlackAttributes](scp.ref.Append("slack"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Trendmicro() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes](scp.ref.Append("trendmicro"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Veeva() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesVeevaAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesVeevaAttributes](scp.ref.Append("veeva"))
}

func (scp SourceFlowConfigSourceConnectorPropertiesAttributes) Zendesk() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesZendeskAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesZendeskAttributes](scp.ref.Append("zendesk"))
}

type SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes struct {
	ref terra.Reference
}

func (a SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes {
	return SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes{ref: ref}
}

func (a SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a SourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes {
	return SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes{ref: ref}
}

func (cc SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) CustomProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cc.ref.Append("custom_properties"))
}

func (cc SourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) EntityName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("entity_name"))
}

type SourceFlowConfigSourceConnectorPropertiesDatadogAttributes struct {
	ref terra.Reference
}

func (d SourceFlowConfigSourceConnectorPropertiesDatadogAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d SourceFlowConfigSourceConnectorPropertiesDatadogAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesDatadogAttributes {
	return SourceFlowConfigSourceConnectorPropertiesDatadogAttributes{ref: ref}
}

func (d SourceFlowConfigSourceConnectorPropertiesDatadogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d SourceFlowConfigSourceConnectorPropertiesDatadogAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes struct {
	ref terra.Reference
}

func (d SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes {
	return SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes{ref: ref}
}

func (d SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d SourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes struct {
	ref terra.Reference
}

func (ga SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) InternalRef() (terra.Reference, error) {
	return ga.ref, nil
}

func (ga SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes {
	return SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes{ref: ref}
}

func (ga SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ga.ref.InternalTokens()
}

func (ga SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes struct {
	ref terra.Reference
}

func (in SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) InternalRef() (terra.Reference, error) {
	return in.ref, nil
}

func (in SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes {
	return SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes{ref: ref}
}

func (in SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return in.ref.InternalTokens()
}

func (in SourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesMarketoAttributes struct {
	ref terra.Reference
}

func (m SourceFlowConfigSourceConnectorPropertiesMarketoAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m SourceFlowConfigSourceConnectorPropertiesMarketoAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesMarketoAttributes {
	return SourceFlowConfigSourceConnectorPropertiesMarketoAttributes{ref: ref}
}

func (m SourceFlowConfigSourceConnectorPropertiesMarketoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m SourceFlowConfigSourceConnectorPropertiesMarketoAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesS3Attributes struct {
	ref terra.Reference
}

func (s SourceFlowConfigSourceConnectorPropertiesS3Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SourceFlowConfigSourceConnectorPropertiesS3Attributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesS3Attributes {
	return SourceFlowConfigSourceConnectorPropertiesS3Attributes{ref: ref}
}

func (s SourceFlowConfigSourceConnectorPropertiesS3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SourceFlowConfigSourceConnectorPropertiesS3Attributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_name"))
}

func (s SourceFlowConfigSourceConnectorPropertiesS3Attributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s SourceFlowConfigSourceConnectorPropertiesS3Attributes) S3InputFormatConfig() terra.ListValue[SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes] {
	return terra.ReferenceAsList[SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes](s.ref.Append("s3_input_format_config"))
}

type SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes struct {
	ref terra.Reference
}

func (sifc SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) InternalRef() (terra.Reference, error) {
	return sifc.ref, nil
}

func (sifc SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes {
	return SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes{ref: ref}
}

func (sifc SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sifc.ref.InternalTokens()
}

func (sifc SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) S3InputFileType() terra.StringValue {
	return terra.ReferenceAsString(sifc.ref.Append("s3_input_file_type"))
}

type SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes struct {
	ref terra.Reference
}

func (s SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes {
	return SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes{ref: ref}
}

func (s SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) EnableDynamicFieldUpdate() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("enable_dynamic_field_update"))
}

func (s SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) IncludeDeletedRecords() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("include_deleted_records"))
}

func (s SourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes struct {
	ref terra.Reference
}

func (sd SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes {
	return SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes{ref: ref}
}

func (sd SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd SourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) ObjectPath() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("object_path"))
}

type SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes struct {
	ref terra.Reference
}

func (sn SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) InternalRef() (terra.Reference, error) {
	return sn.ref, nil
}

func (sn SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes {
	return SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes{ref: ref}
}

func (sn SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sn.ref.InternalTokens()
}

func (sn SourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesSingularAttributes struct {
	ref terra.Reference
}

func (s SourceFlowConfigSourceConnectorPropertiesSingularAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SourceFlowConfigSourceConnectorPropertiesSingularAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesSingularAttributes {
	return SourceFlowConfigSourceConnectorPropertiesSingularAttributes{ref: ref}
}

func (s SourceFlowConfigSourceConnectorPropertiesSingularAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SourceFlowConfigSourceConnectorPropertiesSingularAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesSlackAttributes struct {
	ref terra.Reference
}

func (s SourceFlowConfigSourceConnectorPropertiesSlackAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SourceFlowConfigSourceConnectorPropertiesSlackAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesSlackAttributes {
	return SourceFlowConfigSourceConnectorPropertiesSlackAttributes{ref: ref}
}

func (s SourceFlowConfigSourceConnectorPropertiesSlackAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SourceFlowConfigSourceConnectorPropertiesSlackAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes struct {
	ref terra.Reference
}

func (t SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes {
	return SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes{ref: ref}
}

func (t SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t SourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesVeevaAttributes struct {
	ref terra.Reference
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesVeevaAttributes {
	return SourceFlowConfigSourceConnectorPropertiesVeevaAttributes{ref: ref}
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) DocumentType() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("document_type"))
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) IncludeAllVersions() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("include_all_versions"))
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) IncludeRenditions() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("include_renditions"))
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) IncludeSourceFiles() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("include_source_files"))
}

func (v SourceFlowConfigSourceConnectorPropertiesVeevaAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("object"))
}

type SourceFlowConfigSourceConnectorPropertiesZendeskAttributes struct {
	ref terra.Reference
}

func (z SourceFlowConfigSourceConnectorPropertiesZendeskAttributes) InternalRef() (terra.Reference, error) {
	return z.ref, nil
}

func (z SourceFlowConfigSourceConnectorPropertiesZendeskAttributes) InternalWithRef(ref terra.Reference) SourceFlowConfigSourceConnectorPropertiesZendeskAttributes {
	return SourceFlowConfigSourceConnectorPropertiesZendeskAttributes{ref: ref}
}

func (z SourceFlowConfigSourceConnectorPropertiesZendeskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return z.ref.InternalTokens()
}

func (z SourceFlowConfigSourceConnectorPropertiesZendeskAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("object"))
}

type TaskAttributes struct {
	ref terra.Reference
}

func (t TaskAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TaskAttributes) InternalWithRef(ref terra.Reference) TaskAttributes {
	return TaskAttributes{ref: ref}
}

func (t TaskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TaskAttributes) DestinationField() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("destination_field"))
}

func (t TaskAttributes) SourceFields() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](t.ref.Append("source_fields"))
}

func (t TaskAttributes) TaskProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](t.ref.Append("task_properties"))
}

func (t TaskAttributes) TaskType() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("task_type"))
}

func (t TaskAttributes) ConnectorOperator() terra.ListValue[TaskConnectorOperatorAttributes] {
	return terra.ReferenceAsList[TaskConnectorOperatorAttributes](t.ref.Append("connector_operator"))
}

type TaskConnectorOperatorAttributes struct {
	ref terra.Reference
}

func (co TaskConnectorOperatorAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co TaskConnectorOperatorAttributes) InternalWithRef(ref terra.Reference) TaskConnectorOperatorAttributes {
	return TaskConnectorOperatorAttributes{ref: ref}
}

func (co TaskConnectorOperatorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co TaskConnectorOperatorAttributes) Amplitude() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("amplitude"))
}

func (co TaskConnectorOperatorAttributes) CustomConnector() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("custom_connector"))
}

func (co TaskConnectorOperatorAttributes) Datadog() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("datadog"))
}

func (co TaskConnectorOperatorAttributes) Dynatrace() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("dynatrace"))
}

func (co TaskConnectorOperatorAttributes) GoogleAnalytics() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("google_analytics"))
}

func (co TaskConnectorOperatorAttributes) InforNexus() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("infor_nexus"))
}

func (co TaskConnectorOperatorAttributes) Marketo() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("marketo"))
}

func (co TaskConnectorOperatorAttributes) S3() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("s3"))
}

func (co TaskConnectorOperatorAttributes) Salesforce() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("salesforce"))
}

func (co TaskConnectorOperatorAttributes) SapoData() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("sapo_data"))
}

func (co TaskConnectorOperatorAttributes) ServiceNow() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("service_now"))
}

func (co TaskConnectorOperatorAttributes) Singular() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("singular"))
}

func (co TaskConnectorOperatorAttributes) Slack() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("slack"))
}

func (co TaskConnectorOperatorAttributes) Trendmicro() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("trendmicro"))
}

func (co TaskConnectorOperatorAttributes) Veeva() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("veeva"))
}

func (co TaskConnectorOperatorAttributes) Zendesk() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("zendesk"))
}

type TriggerConfigAttributes struct {
	ref terra.Reference
}

func (tc TriggerConfigAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc TriggerConfigAttributes) InternalWithRef(ref terra.Reference) TriggerConfigAttributes {
	return TriggerConfigAttributes{ref: ref}
}

func (tc TriggerConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc TriggerConfigAttributes) TriggerType() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("trigger_type"))
}

func (tc TriggerConfigAttributes) TriggerProperties() terra.ListValue[TriggerConfigTriggerPropertiesAttributes] {
	return terra.ReferenceAsList[TriggerConfigTriggerPropertiesAttributes](tc.ref.Append("trigger_properties"))
}

type TriggerConfigTriggerPropertiesAttributes struct {
	ref terra.Reference
}

func (tp TriggerConfigTriggerPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return tp.ref, nil
}

func (tp TriggerConfigTriggerPropertiesAttributes) InternalWithRef(ref terra.Reference) TriggerConfigTriggerPropertiesAttributes {
	return TriggerConfigTriggerPropertiesAttributes{ref: ref}
}

func (tp TriggerConfigTriggerPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tp.ref.InternalTokens()
}

func (tp TriggerConfigTriggerPropertiesAttributes) Scheduled() terra.ListValue[TriggerConfigTriggerPropertiesScheduledAttributes] {
	return terra.ReferenceAsList[TriggerConfigTriggerPropertiesScheduledAttributes](tp.ref.Append("scheduled"))
}

type TriggerConfigTriggerPropertiesScheduledAttributes struct {
	ref terra.Reference
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) InternalWithRef(ref terra.Reference) TriggerConfigTriggerPropertiesScheduledAttributes {
	return TriggerConfigTriggerPropertiesScheduledAttributes{ref: ref}
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) DataPullMode() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("data_pull_mode"))
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) FirstExecutionFrom() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("first_execution_from"))
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) ScheduleEndTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schedule_end_time"))
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) ScheduleExpression() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schedule_expression"))
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) ScheduleOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("schedule_offset"))
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) ScheduleStartTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schedule_start_time"))
}

func (s TriggerConfigTriggerPropertiesScheduledAttributes) Timezone() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("timezone"))
}

type DestinationFlowConfigState struct {
	ApiVersion                     string                                                     `json:"api_version"`
	ConnectorProfileName           string                                                     `json:"connector_profile_name"`
	ConnectorType                  string                                                     `json:"connector_type"`
	DestinationConnectorProperties []DestinationFlowConfigDestinationConnectorPropertiesState `json:"destination_connector_properties"`
}

type DestinationFlowConfigDestinationConnectorPropertiesState struct {
	CustomConnector  []DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorState  `json:"custom_connector"`
	CustomerProfiles []DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesState `json:"customer_profiles"`
	EventBridge      []DestinationFlowConfigDestinationConnectorPropertiesEventBridgeState      `json:"event_bridge"`
	Honeycode        []DestinationFlowConfigDestinationConnectorPropertiesHoneycodeState        `json:"honeycode"`
	LookoutMetrics   []DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsState   `json:"lookout_metrics"`
	Marketo          []DestinationFlowConfigDestinationConnectorPropertiesMarketoState          `json:"marketo"`
	Redshift         []DestinationFlowConfigDestinationConnectorPropertiesRedshiftState         `json:"redshift"`
	S3               []DestinationFlowConfigDestinationConnectorPropertiesS3State               `json:"s3"`
	Salesforce       []DestinationFlowConfigDestinationConnectorPropertiesSalesforceState       `json:"salesforce"`
	SapoData         []DestinationFlowConfigDestinationConnectorPropertiesSapoDataState         `json:"sapo_data"`
	Snowflake        []DestinationFlowConfigDestinationConnectorPropertiesSnowflakeState        `json:"snowflake"`
	Upsolver         []DestinationFlowConfigDestinationConnectorPropertiesUpsolverState         `json:"upsolver"`
	Zendesk          []DestinationFlowConfigDestinationConnectorPropertiesZendeskState          `json:"zendesk"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorState struct {
	CustomProperties    map[string]string                                                                            `json:"custom_properties"`
	EntityName          string                                                                                       `json:"entity_name"`
	IdFieldNames        []string                                                                                     `json:"id_field_names"`
	WriteOperationType  string                                                                                       `json:"write_operation_type"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesState struct {
	DomainName     string `json:"domain_name"`
	ObjectTypeName string `json:"object_type_name"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeState struct {
	Object              string                                                                                   `json:"object"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeState struct {
	Object              string                                                                                 `json:"object"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsState struct{}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoState struct {
	Object              string                                                                               `json:"object"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftState struct {
	BucketPrefix           string                                                                                `json:"bucket_prefix"`
	IntermediateBucketName string                                                                                `json:"intermediate_bucket_name"`
	Object                 string                                                                                `json:"object"`
	ErrorHandlingConfig    []DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3State struct {
	BucketName           string                                                                           `json:"bucket_name"`
	BucketPrefix         string                                                                           `json:"bucket_prefix"`
	S3OutputFormatConfig []DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigState `json:"s3_output_format_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigState struct {
	FileType                 string                                                             `json:"file_type"`
	PreserveSourceDataTyping bool                                                               `json:"preserve_source_data_typing"`
	AggregationConfig        []DestinationFlowConfigDestinationConnectorProperties9A1Db91BState `json:"aggregation_config"`
	PrefixConfig             []DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4State `json:"prefix_config"`
}

type DestinationFlowConfigDestinationConnectorProperties9A1Db91BState struct {
	AggregationType string  `json:"aggregation_type"`
	TargetFileSize  float64 `json:"target_file_size"`
}

type DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4State struct {
	PrefixFormat string `json:"prefix_format"`
	PrefixType   string `json:"prefix_type"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceState struct {
	IdFieldNames        []string                                                                                `json:"id_field_names"`
	Object              string                                                                                  `json:"object"`
	WriteOperationType  string                                                                                  `json:"write_operation_type"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataState struct {
	IdFieldNames                  []string                                                                                        `json:"id_field_names"`
	ObjectPath                    string                                                                                          `json:"object_path"`
	WriteOperationType            string                                                                                          `json:"write_operation_type"`
	ErrorHandlingConfig           []DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigState           `json:"error_handling_config"`
	SuccessResponseHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigState `json:"success_response_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigState struct {
	BucketName   string `json:"bucket_name"`
	BucketPrefix string `json:"bucket_prefix"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeState struct {
	BucketPrefix           string                                                                                 `json:"bucket_prefix"`
	IntermediateBucketName string                                                                                 `json:"intermediate_bucket_name"`
	Object                 string                                                                                 `json:"object"`
	ErrorHandlingConfig    []DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverState struct {
	BucketName           string                                                                                 `json:"bucket_name"`
	BucketPrefix         string                                                                                 `json:"bucket_prefix"`
	S3OutputFormatConfig []DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigState `json:"s3_output_format_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigState struct {
	FileType          string                                                             `json:"file_type"`
	AggregationConfig []DestinationFlowConfigDestinationConnectorProperties8122C4C1State `json:"aggregation_config"`
	PrefixConfig      []DestinationFlowConfigDestinationConnectorProperties2Eb41171State `json:"prefix_config"`
}

type DestinationFlowConfigDestinationConnectorProperties8122C4C1State struct {
	AggregationType string `json:"aggregation_type"`
}

type DestinationFlowConfigDestinationConnectorProperties2Eb41171State struct {
	PrefixFormat string `json:"prefix_format"`
	PrefixType   string `json:"prefix_type"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskState struct {
	IdFieldNames        []string                                                                             `json:"id_field_names"`
	Object              string                                                                               `json:"object"`
	WriteOperationType  string                                                                               `json:"write_operation_type"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type SourceFlowConfigState struct {
	ApiVersion                string                                           `json:"api_version"`
	ConnectorProfileName      string                                           `json:"connector_profile_name"`
	ConnectorType             string                                           `json:"connector_type"`
	IncrementalPullConfig     []SourceFlowConfigIncrementalPullConfigState     `json:"incremental_pull_config"`
	SourceConnectorProperties []SourceFlowConfigSourceConnectorPropertiesState `json:"source_connector_properties"`
}

type SourceFlowConfigIncrementalPullConfigState struct {
	DatetimeTypeFieldName string `json:"datetime_type_field_name"`
}

type SourceFlowConfigSourceConnectorPropertiesState struct {
	Amplitude       []SourceFlowConfigSourceConnectorPropertiesAmplitudeState       `json:"amplitude"`
	CustomConnector []SourceFlowConfigSourceConnectorPropertiesCustomConnectorState `json:"custom_connector"`
	Datadog         []SourceFlowConfigSourceConnectorPropertiesDatadogState         `json:"datadog"`
	Dynatrace       []SourceFlowConfigSourceConnectorPropertiesDynatraceState       `json:"dynatrace"`
	GoogleAnalytics []SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsState `json:"google_analytics"`
	InforNexus      []SourceFlowConfigSourceConnectorPropertiesInforNexusState      `json:"infor_nexus"`
	Marketo         []SourceFlowConfigSourceConnectorPropertiesMarketoState         `json:"marketo"`
	S3              []SourceFlowConfigSourceConnectorPropertiesS3State              `json:"s3"`
	Salesforce      []SourceFlowConfigSourceConnectorPropertiesSalesforceState      `json:"salesforce"`
	SapoData        []SourceFlowConfigSourceConnectorPropertiesSapoDataState        `json:"sapo_data"`
	ServiceNow      []SourceFlowConfigSourceConnectorPropertiesServiceNowState      `json:"service_now"`
	Singular        []SourceFlowConfigSourceConnectorPropertiesSingularState        `json:"singular"`
	Slack           []SourceFlowConfigSourceConnectorPropertiesSlackState           `json:"slack"`
	Trendmicro      []SourceFlowConfigSourceConnectorPropertiesTrendmicroState      `json:"trendmicro"`
	Veeva           []SourceFlowConfigSourceConnectorPropertiesVeevaState           `json:"veeva"`
	Zendesk         []SourceFlowConfigSourceConnectorPropertiesZendeskState         `json:"zendesk"`
}

type SourceFlowConfigSourceConnectorPropertiesAmplitudeState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesCustomConnectorState struct {
	CustomProperties map[string]string `json:"custom_properties"`
	EntityName       string            `json:"entity_name"`
}

type SourceFlowConfigSourceConnectorPropertiesDatadogState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesDynatraceState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesInforNexusState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesMarketoState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesS3State struct {
	BucketName          string                                                                `json:"bucket_name"`
	BucketPrefix        string                                                                `json:"bucket_prefix"`
	S3InputFormatConfig []SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigState `json:"s3_input_format_config"`
}

type SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigState struct {
	S3InputFileType string `json:"s3_input_file_type"`
}

type SourceFlowConfigSourceConnectorPropertiesSalesforceState struct {
	EnableDynamicFieldUpdate bool   `json:"enable_dynamic_field_update"`
	IncludeDeletedRecords    bool   `json:"include_deleted_records"`
	Object                   string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesSapoDataState struct {
	ObjectPath string `json:"object_path"`
}

type SourceFlowConfigSourceConnectorPropertiesServiceNowState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesSingularState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesSlackState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesTrendmicroState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesVeevaState struct {
	DocumentType       string `json:"document_type"`
	IncludeAllVersions bool   `json:"include_all_versions"`
	IncludeRenditions  bool   `json:"include_renditions"`
	IncludeSourceFiles bool   `json:"include_source_files"`
	Object             string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesZendeskState struct {
	Object string `json:"object"`
}

type TaskState struct {
	DestinationField  string                       `json:"destination_field"`
	SourceFields      []string                     `json:"source_fields"`
	TaskProperties    map[string]string            `json:"task_properties"`
	TaskType          string                       `json:"task_type"`
	ConnectorOperator []TaskConnectorOperatorState `json:"connector_operator"`
}

type TaskConnectorOperatorState struct {
	Amplitude       string `json:"amplitude"`
	CustomConnector string `json:"custom_connector"`
	Datadog         string `json:"datadog"`
	Dynatrace       string `json:"dynatrace"`
	GoogleAnalytics string `json:"google_analytics"`
	InforNexus      string `json:"infor_nexus"`
	Marketo         string `json:"marketo"`
	S3              string `json:"s3"`
	Salesforce      string `json:"salesforce"`
	SapoData        string `json:"sapo_data"`
	ServiceNow      string `json:"service_now"`
	Singular        string `json:"singular"`
	Slack           string `json:"slack"`
	Trendmicro      string `json:"trendmicro"`
	Veeva           string `json:"veeva"`
	Zendesk         string `json:"zendesk"`
}

type TriggerConfigState struct {
	TriggerType       string                                `json:"trigger_type"`
	TriggerProperties []TriggerConfigTriggerPropertiesState `json:"trigger_properties"`
}

type TriggerConfigTriggerPropertiesState struct {
	Scheduled []TriggerConfigTriggerPropertiesScheduledState `json:"scheduled"`
}

type TriggerConfigTriggerPropertiesScheduledState struct {
	DataPullMode       string  `json:"data_pull_mode"`
	FirstExecutionFrom string  `json:"first_execution_from"`
	ScheduleEndTime    string  `json:"schedule_end_time"`
	ScheduleExpression string  `json:"schedule_expression"`
	ScheduleOffset     float64 `json:"schedule_offset"`
	ScheduleStartTime  string  `json:"schedule_start_time"`
	Timezone           string  `json:"timezone"`
}
