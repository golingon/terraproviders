// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_rbin_rule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LockConfiguration struct {
	// LockConfigurationUnlockDelay: required
	UnlockDelay *LockConfigurationUnlockDelay `hcl:"unlock_delay,block" validate:"required"`
}

type LockConfigurationUnlockDelay struct {
	// UnlockDelayUnit: string, required
	UnlockDelayUnit terra.StringValue `hcl:"unlock_delay_unit,attr" validate:"required"`
	// UnlockDelayValue: number, required
	UnlockDelayValue terra.NumberValue `hcl:"unlock_delay_value,attr" validate:"required"`
}

type ResourceTags struct {
	// ResourceTagKey: string, required
	ResourceTagKey terra.StringValue `hcl:"resource_tag_key,attr" validate:"required"`
	// ResourceTagValue: string, optional
	ResourceTagValue terra.StringValue `hcl:"resource_tag_value,attr"`
}

type RetentionPeriod struct {
	// RetentionPeriodUnit: string, required
	RetentionPeriodUnit terra.StringValue `hcl:"retention_period_unit,attr" validate:"required"`
	// RetentionPeriodValue: number, required
	RetentionPeriodValue terra.NumberValue `hcl:"retention_period_value,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LockConfigurationAttributes struct {
	ref terra.Reference
}

func (lc LockConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc LockConfigurationAttributes) InternalWithRef(ref terra.Reference) LockConfigurationAttributes {
	return LockConfigurationAttributes{ref: ref}
}

func (lc LockConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc LockConfigurationAttributes) UnlockDelay() terra.ListValue[LockConfigurationUnlockDelayAttributes] {
	return terra.ReferenceAsList[LockConfigurationUnlockDelayAttributes](lc.ref.Append("unlock_delay"))
}

type LockConfigurationUnlockDelayAttributes struct {
	ref terra.Reference
}

func (ud LockConfigurationUnlockDelayAttributes) InternalRef() (terra.Reference, error) {
	return ud.ref, nil
}

func (ud LockConfigurationUnlockDelayAttributes) InternalWithRef(ref terra.Reference) LockConfigurationUnlockDelayAttributes {
	return LockConfigurationUnlockDelayAttributes{ref: ref}
}

func (ud LockConfigurationUnlockDelayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ud.ref.InternalTokens()
}

func (ud LockConfigurationUnlockDelayAttributes) UnlockDelayUnit() terra.StringValue {
	return terra.ReferenceAsString(ud.ref.Append("unlock_delay_unit"))
}

func (ud LockConfigurationUnlockDelayAttributes) UnlockDelayValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ud.ref.Append("unlock_delay_value"))
}

type ResourceTagsAttributes struct {
	ref terra.Reference
}

func (rt ResourceTagsAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt ResourceTagsAttributes) InternalWithRef(ref terra.Reference) ResourceTagsAttributes {
	return ResourceTagsAttributes{ref: ref}
}

func (rt ResourceTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt ResourceTagsAttributes) ResourceTagKey() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("resource_tag_key"))
}

func (rt ResourceTagsAttributes) ResourceTagValue() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("resource_tag_value"))
}

type RetentionPeriodAttributes struct {
	ref terra.Reference
}

func (rp RetentionPeriodAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp RetentionPeriodAttributes) InternalWithRef(ref terra.Reference) RetentionPeriodAttributes {
	return RetentionPeriodAttributes{ref: ref}
}

func (rp RetentionPeriodAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp RetentionPeriodAttributes) RetentionPeriodUnit() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("retention_period_unit"))
}

func (rp RetentionPeriodAttributes) RetentionPeriodValue() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("retention_period_value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LockConfigurationState struct {
	UnlockDelay []LockConfigurationUnlockDelayState `json:"unlock_delay"`
}

type LockConfigurationUnlockDelayState struct {
	UnlockDelayUnit  string  `json:"unlock_delay_unit"`
	UnlockDelayValue float64 `json:"unlock_delay_value"`
}

type ResourceTagsState struct {
	ResourceTagKey   string `json:"resource_tag_key"`
	ResourceTagValue string `json:"resource_tag_value"`
}

type RetentionPeriodState struct {
	RetentionPeriodUnit  string  `json:"retention_period_unit"`
	RetentionPeriodValue float64 `json:"retention_period_value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
