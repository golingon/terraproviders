// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_identitystore_group_membership

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_identitystore_group_membership.
type Resource struct {
	Name      string
	Args      Args
	state     *awsIdentitystoreGroupMembershipState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aigm *Resource) Type() string {
	return "aws_identitystore_group_membership"
}

// LocalName returns the local name for [Resource].
func (aigm *Resource) LocalName() string {
	return aigm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aigm *Resource) Configuration() interface{} {
	return aigm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aigm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aigm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aigm *Resource) Dependencies() terra.Dependencies {
	return aigm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aigm *Resource) LifecycleManagement() *terra.Lifecycle {
	return aigm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aigm *Resource) Attributes() awsIdentitystoreGroupMembershipAttributes {
	return awsIdentitystoreGroupMembershipAttributes{ref: terra.ReferenceResource(aigm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aigm *Resource) ImportState(state io.Reader) error {
	aigm.state = &awsIdentitystoreGroupMembershipState{}
	if err := json.NewDecoder(state).Decode(aigm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aigm.Type(), aigm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aigm *Resource) State() (*awsIdentitystoreGroupMembershipState, bool) {
	return aigm.state, aigm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aigm *Resource) StateMust() *awsIdentitystoreGroupMembershipState {
	if aigm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aigm.Type(), aigm.LocalName()))
	}
	return aigm.state
}

// Args contains the configurations for aws_identitystore_group_membership.
type Args struct {
	// GroupId: string, required
	GroupId terra.StringValue `hcl:"group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityStoreId: string, required
	IdentityStoreId terra.StringValue `hcl:"identity_store_id,attr" validate:"required"`
	// MemberId: string, required
	MemberId terra.StringValue `hcl:"member_id,attr" validate:"required"`
}

type awsIdentitystoreGroupMembershipAttributes struct {
	ref terra.Reference
}

// GroupId returns a reference to field group_id of aws_identitystore_group_membership.
func (aigm awsIdentitystoreGroupMembershipAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(aigm.ref.Append("group_id"))
}

// Id returns a reference to field id of aws_identitystore_group_membership.
func (aigm awsIdentitystoreGroupMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aigm.ref.Append("id"))
}

// IdentityStoreId returns a reference to field identity_store_id of aws_identitystore_group_membership.
func (aigm awsIdentitystoreGroupMembershipAttributes) IdentityStoreId() terra.StringValue {
	return terra.ReferenceAsString(aigm.ref.Append("identity_store_id"))
}

// MemberId returns a reference to field member_id of aws_identitystore_group_membership.
func (aigm awsIdentitystoreGroupMembershipAttributes) MemberId() terra.StringValue {
	return terra.ReferenceAsString(aigm.ref.Append("member_id"))
}

// MembershipId returns a reference to field membership_id of aws_identitystore_group_membership.
func (aigm awsIdentitystoreGroupMembershipAttributes) MembershipId() terra.StringValue {
	return terra.ReferenceAsString(aigm.ref.Append("membership_id"))
}

type awsIdentitystoreGroupMembershipState struct {
	GroupId         string `json:"group_id"`
	Id              string `json:"id"`
	IdentityStoreId string `json:"identity_store_id"`
	MemberId        string `json:"member_id"`
	MembershipId    string `json:"membership_id"`
}
