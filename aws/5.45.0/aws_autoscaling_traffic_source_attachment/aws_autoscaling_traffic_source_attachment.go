// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_autoscaling_traffic_source_attachment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_autoscaling_traffic_source_attachment.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAutoscalingTrafficSourceAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aatsa *Resource) Type() string {
	return "aws_autoscaling_traffic_source_attachment"
}

// LocalName returns the local name for [Resource].
func (aatsa *Resource) LocalName() string {
	return aatsa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aatsa *Resource) Configuration() interface{} {
	return aatsa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aatsa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aatsa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aatsa *Resource) Dependencies() terra.Dependencies {
	return aatsa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aatsa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aatsa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aatsa *Resource) Attributes() awsAutoscalingTrafficSourceAttachmentAttributes {
	return awsAutoscalingTrafficSourceAttachmentAttributes{ref: terra.ReferenceResource(aatsa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aatsa *Resource) ImportState(state io.Reader) error {
	aatsa.state = &awsAutoscalingTrafficSourceAttachmentState{}
	if err := json.NewDecoder(state).Decode(aatsa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aatsa.Type(), aatsa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aatsa *Resource) State() (*awsAutoscalingTrafficSourceAttachmentState, bool) {
	return aatsa.state, aatsa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aatsa *Resource) StateMust() *awsAutoscalingTrafficSourceAttachmentState {
	if aatsa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aatsa.Type(), aatsa.LocalName()))
	}
	return aatsa.state
}

// Args contains the configurations for aws_autoscaling_traffic_source_attachment.
type Args struct {
	// AutoscalingGroupName: string, required
	AutoscalingGroupName terra.StringValue `hcl:"autoscaling_group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// TrafficSource: optional
	TrafficSource *TrafficSource `hcl:"traffic_source,block"`
}

type awsAutoscalingTrafficSourceAttachmentAttributes struct {
	ref terra.Reference
}

// AutoscalingGroupName returns a reference to field autoscaling_group_name of aws_autoscaling_traffic_source_attachment.
func (aatsa awsAutoscalingTrafficSourceAttachmentAttributes) AutoscalingGroupName() terra.StringValue {
	return terra.ReferenceAsString(aatsa.ref.Append("autoscaling_group_name"))
}

// Id returns a reference to field id of aws_autoscaling_traffic_source_attachment.
func (aatsa awsAutoscalingTrafficSourceAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aatsa.ref.Append("id"))
}

func (aatsa awsAutoscalingTrafficSourceAttachmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aatsa.ref.Append("timeouts"))
}

func (aatsa awsAutoscalingTrafficSourceAttachmentAttributes) TrafficSource() terra.ListValue[TrafficSourceAttributes] {
	return terra.ReferenceAsList[TrafficSourceAttributes](aatsa.ref.Append("traffic_source"))
}

type awsAutoscalingTrafficSourceAttachmentState struct {
	AutoscalingGroupName string               `json:"autoscaling_group_name"`
	Id                   string               `json:"id"`
	Timeouts             *TimeoutsState       `json:"timeouts"`
	TrafficSource        []TrafficSourceState `json:"traffic_source"`
}
