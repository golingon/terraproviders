// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_chimesdkmediapipelines_media_insights_pipeline_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Elements struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// ElementsAmazonTranscribeCallAnalyticsProcessorConfiguration: optional
	AmazonTranscribeCallAnalyticsProcessorConfiguration *ElementsAmazonTranscribeCallAnalyticsProcessorConfiguration `hcl:"amazon_transcribe_call_analytics_processor_configuration,block"`
	// ElementsAmazonTranscribeProcessorConfiguration: optional
	AmazonTranscribeProcessorConfiguration *ElementsAmazonTranscribeProcessorConfiguration `hcl:"amazon_transcribe_processor_configuration,block"`
	// ElementsKinesisDataStreamSinkConfiguration: optional
	KinesisDataStreamSinkConfiguration *ElementsKinesisDataStreamSinkConfiguration `hcl:"kinesis_data_stream_sink_configuration,block"`
	// ElementsLambdaFunctionSinkConfiguration: optional
	LambdaFunctionSinkConfiguration *ElementsLambdaFunctionSinkConfiguration `hcl:"lambda_function_sink_configuration,block"`
	// ElementsS3RecordingSinkConfiguration: optional
	S3RecordingSinkConfiguration *ElementsS3RecordingSinkConfiguration `hcl:"s3_recording_sink_configuration,block"`
	// ElementsSnsTopicSinkConfiguration: optional
	SnsTopicSinkConfiguration *ElementsSnsTopicSinkConfiguration `hcl:"sns_topic_sink_configuration,block"`
	// ElementsSqsQueueSinkConfiguration: optional
	SqsQueueSinkConfiguration *ElementsSqsQueueSinkConfiguration `hcl:"sqs_queue_sink_configuration,block"`
	// ElementsVoiceAnalyticsProcessorConfiguration: optional
	VoiceAnalyticsProcessorConfiguration *ElementsVoiceAnalyticsProcessorConfiguration `hcl:"voice_analytics_processor_configuration,block"`
}

type ElementsAmazonTranscribeCallAnalyticsProcessorConfiguration struct {
	// CallAnalyticsStreamCategories: list of string, optional
	CallAnalyticsStreamCategories terra.ListValue[terra.StringValue] `hcl:"call_analytics_stream_categories,attr"`
	// ContentIdentificationType: string, optional
	ContentIdentificationType terra.StringValue `hcl:"content_identification_type,attr"`
	// ContentRedactionType: string, optional
	ContentRedactionType terra.StringValue `hcl:"content_redaction_type,attr"`
	// EnablePartialResultsStabilization: bool, optional
	EnablePartialResultsStabilization terra.BoolValue `hcl:"enable_partial_results_stabilization,attr"`
	// FilterPartialResults: bool, optional
	FilterPartialResults terra.BoolValue `hcl:"filter_partial_results,attr"`
	// LanguageCode: string, required
	LanguageCode terra.StringValue `hcl:"language_code,attr" validate:"required"`
	// LanguageModelName: string, optional
	LanguageModelName terra.StringValue `hcl:"language_model_name,attr"`
	// PartialResultsStability: string, optional
	PartialResultsStability terra.StringValue `hcl:"partial_results_stability,attr"`
	// PiiEntityTypes: string, optional
	PiiEntityTypes terra.StringValue `hcl:"pii_entity_types,attr"`
	// VocabularyFilterMethod: string, optional
	VocabularyFilterMethod terra.StringValue `hcl:"vocabulary_filter_method,attr"`
	// VocabularyFilterName: string, optional
	VocabularyFilterName terra.StringValue `hcl:"vocabulary_filter_name,attr"`
	// VocabularyName: string, optional
	VocabularyName terra.StringValue `hcl:"vocabulary_name,attr"`
	// ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings: optional
	PostCallAnalyticsSettings *ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings `hcl:"post_call_analytics_settings,block"`
}

type ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings struct {
	// ContentRedactionOutput: string, optional
	ContentRedactionOutput terra.StringValue `hcl:"content_redaction_output,attr"`
	// DataAccessRoleArn: string, required
	DataAccessRoleArn terra.StringValue `hcl:"data_access_role_arn,attr" validate:"required"`
	// OutputEncryptionKmsKeyId: string, optional
	OutputEncryptionKmsKeyId terra.StringValue `hcl:"output_encryption_kms_key_id,attr"`
	// OutputLocation: string, required
	OutputLocation terra.StringValue `hcl:"output_location,attr" validate:"required"`
}

type ElementsAmazonTranscribeProcessorConfiguration struct {
	// ContentIdentificationType: string, optional
	ContentIdentificationType terra.StringValue `hcl:"content_identification_type,attr"`
	// ContentRedactionType: string, optional
	ContentRedactionType terra.StringValue `hcl:"content_redaction_type,attr"`
	// EnablePartialResultsStabilization: bool, optional
	EnablePartialResultsStabilization terra.BoolValue `hcl:"enable_partial_results_stabilization,attr"`
	// FilterPartialResults: bool, optional
	FilterPartialResults terra.BoolValue `hcl:"filter_partial_results,attr"`
	// LanguageCode: string, required
	LanguageCode terra.StringValue `hcl:"language_code,attr" validate:"required"`
	// LanguageModelName: string, optional
	LanguageModelName terra.StringValue `hcl:"language_model_name,attr"`
	// PartialResultsStability: string, optional
	PartialResultsStability terra.StringValue `hcl:"partial_results_stability,attr"`
	// PiiEntityTypes: string, optional
	PiiEntityTypes terra.StringValue `hcl:"pii_entity_types,attr"`
	// ShowSpeakerLabel: bool, optional
	ShowSpeakerLabel terra.BoolValue `hcl:"show_speaker_label,attr"`
	// VocabularyFilterMethod: string, optional
	VocabularyFilterMethod terra.StringValue `hcl:"vocabulary_filter_method,attr"`
	// VocabularyFilterName: string, optional
	VocabularyFilterName terra.StringValue `hcl:"vocabulary_filter_name,attr"`
	// VocabularyName: string, optional
	VocabularyName terra.StringValue `hcl:"vocabulary_name,attr"`
}

type ElementsKinesisDataStreamSinkConfiguration struct {
	// InsightsTarget: string, required
	InsightsTarget terra.StringValue `hcl:"insights_target,attr" validate:"required"`
}

type ElementsLambdaFunctionSinkConfiguration struct {
	// InsightsTarget: string, required
	InsightsTarget terra.StringValue `hcl:"insights_target,attr" validate:"required"`
}

type ElementsS3RecordingSinkConfiguration struct {
	// Destination: string, optional
	Destination terra.StringValue `hcl:"destination,attr"`
}

type ElementsSnsTopicSinkConfiguration struct {
	// InsightsTarget: string, required
	InsightsTarget terra.StringValue `hcl:"insights_target,attr" validate:"required"`
}

type ElementsSqsQueueSinkConfiguration struct {
	// InsightsTarget: string, required
	InsightsTarget terra.StringValue `hcl:"insights_target,attr" validate:"required"`
}

type ElementsVoiceAnalyticsProcessorConfiguration struct {
	// SpeakerSearchStatus: string, required
	SpeakerSearchStatus terra.StringValue `hcl:"speaker_search_status,attr" validate:"required"`
	// VoiceToneAnalysisStatus: string, required
	VoiceToneAnalysisStatus terra.StringValue `hcl:"voice_tone_analysis_status,attr" validate:"required"`
}

type RealTimeAlertConfiguration struct {
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// RealTimeAlertConfigurationRules: min=1,max=3
	Rules []RealTimeAlertConfigurationRules `hcl:"rules,block" validate:"min=1,max=3"`
}

type RealTimeAlertConfigurationRules struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// RealTimeAlertConfigurationRulesIssueDetectionConfiguration: optional
	IssueDetectionConfiguration *RealTimeAlertConfigurationRulesIssueDetectionConfiguration `hcl:"issue_detection_configuration,block"`
	// RealTimeAlertConfigurationRulesKeywordMatchConfiguration: optional
	KeywordMatchConfiguration *RealTimeAlertConfigurationRulesKeywordMatchConfiguration `hcl:"keyword_match_configuration,block"`
	// RealTimeAlertConfigurationRulesSentimentConfiguration: optional
	SentimentConfiguration *RealTimeAlertConfigurationRulesSentimentConfiguration `hcl:"sentiment_configuration,block"`
}

type RealTimeAlertConfigurationRulesIssueDetectionConfiguration struct {
	// RuleName: string, required
	RuleName terra.StringValue `hcl:"rule_name,attr" validate:"required"`
}

type RealTimeAlertConfigurationRulesKeywordMatchConfiguration struct {
	// Keywords: list of string, required
	Keywords terra.ListValue[terra.StringValue] `hcl:"keywords,attr" validate:"required"`
	// Negate: bool, optional
	Negate terra.BoolValue `hcl:"negate,attr"`
	// RuleName: string, required
	RuleName terra.StringValue `hcl:"rule_name,attr" validate:"required"`
}

type RealTimeAlertConfigurationRulesSentimentConfiguration struct {
	// RuleName: string, required
	RuleName terra.StringValue `hcl:"rule_name,attr" validate:"required"`
	// SentimentType: string, required
	SentimentType terra.StringValue `hcl:"sentiment_type,attr" validate:"required"`
	// TimePeriod: number, required
	TimePeriod terra.NumberValue `hcl:"time_period,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ElementsAttributes struct {
	ref terra.Reference
}

func (e ElementsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e ElementsAttributes) InternalWithRef(ref terra.Reference) ElementsAttributes {
	return ElementsAttributes{ref: ref}
}

func (e ElementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e ElementsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("type"))
}

func (e ElementsAttributes) AmazonTranscribeCallAnalyticsProcessorConfiguration() terra.ListValue[ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes](e.ref.Append("amazon_transcribe_call_analytics_processor_configuration"))
}

func (e ElementsAttributes) AmazonTranscribeProcessorConfiguration() terra.ListValue[ElementsAmazonTranscribeProcessorConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsAmazonTranscribeProcessorConfigurationAttributes](e.ref.Append("amazon_transcribe_processor_configuration"))
}

func (e ElementsAttributes) KinesisDataStreamSinkConfiguration() terra.ListValue[ElementsKinesisDataStreamSinkConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsKinesisDataStreamSinkConfigurationAttributes](e.ref.Append("kinesis_data_stream_sink_configuration"))
}

func (e ElementsAttributes) LambdaFunctionSinkConfiguration() terra.ListValue[ElementsLambdaFunctionSinkConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsLambdaFunctionSinkConfigurationAttributes](e.ref.Append("lambda_function_sink_configuration"))
}

func (e ElementsAttributes) S3RecordingSinkConfiguration() terra.ListValue[ElementsS3RecordingSinkConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsS3RecordingSinkConfigurationAttributes](e.ref.Append("s3_recording_sink_configuration"))
}

func (e ElementsAttributes) SnsTopicSinkConfiguration() terra.ListValue[ElementsSnsTopicSinkConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsSnsTopicSinkConfigurationAttributes](e.ref.Append("sns_topic_sink_configuration"))
}

func (e ElementsAttributes) SqsQueueSinkConfiguration() terra.ListValue[ElementsSqsQueueSinkConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsSqsQueueSinkConfigurationAttributes](e.ref.Append("sqs_queue_sink_configuration"))
}

func (e ElementsAttributes) VoiceAnalyticsProcessorConfiguration() terra.ListValue[ElementsVoiceAnalyticsProcessorConfigurationAttributes] {
	return terra.ReferenceAsList[ElementsVoiceAnalyticsProcessorConfigurationAttributes](e.ref.Append("voice_analytics_processor_configuration"))
}

type ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes struct {
	ref terra.Reference
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return atcapc.ref, nil
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes {
	return ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes{ref: ref}
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atcapc.ref.InternalTokens()
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) CallAnalyticsStreamCategories() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](atcapc.ref.Append("call_analytics_stream_categories"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) ContentIdentificationType() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("content_identification_type"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) ContentRedactionType() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("content_redaction_type"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) EnablePartialResultsStabilization() terra.BoolValue {
	return terra.ReferenceAsBool(atcapc.ref.Append("enable_partial_results_stabilization"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) FilterPartialResults() terra.BoolValue {
	return terra.ReferenceAsBool(atcapc.ref.Append("filter_partial_results"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("language_code"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) LanguageModelName() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("language_model_name"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) PartialResultsStability() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("partial_results_stability"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) PiiEntityTypes() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("pii_entity_types"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) VocabularyFilterMethod() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("vocabulary_filter_method"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) VocabularyFilterName() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("vocabulary_filter_name"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) VocabularyName() terra.StringValue {
	return terra.ReferenceAsString(atcapc.ref.Append("vocabulary_name"))
}

func (atcapc ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationAttributes) PostCallAnalyticsSettings() terra.ListValue[ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes] {
	return terra.ReferenceAsList[ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes](atcapc.ref.Append("post_call_analytics_settings"))
}

type ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes struct {
	ref terra.Reference
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) InternalRef() (terra.Reference, error) {
	return pcas.ref, nil
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) InternalWithRef(ref terra.Reference) ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes {
	return ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes{ref: ref}
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pcas.ref.InternalTokens()
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) ContentRedactionOutput() terra.StringValue {
	return terra.ReferenceAsString(pcas.ref.Append("content_redaction_output"))
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) DataAccessRoleArn() terra.StringValue {
	return terra.ReferenceAsString(pcas.ref.Append("data_access_role_arn"))
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) OutputEncryptionKmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(pcas.ref.Append("output_encryption_kms_key_id"))
}

func (pcas ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsAttributes) OutputLocation() terra.StringValue {
	return terra.ReferenceAsString(pcas.ref.Append("output_location"))
}

type ElementsAmazonTranscribeProcessorConfigurationAttributes struct {
	ref terra.Reference
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return atpc.ref, nil
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsAmazonTranscribeProcessorConfigurationAttributes {
	return ElementsAmazonTranscribeProcessorConfigurationAttributes{ref: ref}
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atpc.ref.InternalTokens()
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) ContentIdentificationType() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("content_identification_type"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) ContentRedactionType() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("content_redaction_type"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) EnablePartialResultsStabilization() terra.BoolValue {
	return terra.ReferenceAsBool(atpc.ref.Append("enable_partial_results_stabilization"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) FilterPartialResults() terra.BoolValue {
	return terra.ReferenceAsBool(atpc.ref.Append("filter_partial_results"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("language_code"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) LanguageModelName() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("language_model_name"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) PartialResultsStability() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("partial_results_stability"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) PiiEntityTypes() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("pii_entity_types"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) ShowSpeakerLabel() terra.BoolValue {
	return terra.ReferenceAsBool(atpc.ref.Append("show_speaker_label"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) VocabularyFilterMethod() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("vocabulary_filter_method"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) VocabularyFilterName() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("vocabulary_filter_name"))
}

func (atpc ElementsAmazonTranscribeProcessorConfigurationAttributes) VocabularyName() terra.StringValue {
	return terra.ReferenceAsString(atpc.ref.Append("vocabulary_name"))
}

type ElementsKinesisDataStreamSinkConfigurationAttributes struct {
	ref terra.Reference
}

func (kdssc ElementsKinesisDataStreamSinkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return kdssc.ref, nil
}

func (kdssc ElementsKinesisDataStreamSinkConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsKinesisDataStreamSinkConfigurationAttributes {
	return ElementsKinesisDataStreamSinkConfigurationAttributes{ref: ref}
}

func (kdssc ElementsKinesisDataStreamSinkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kdssc.ref.InternalTokens()
}

func (kdssc ElementsKinesisDataStreamSinkConfigurationAttributes) InsightsTarget() terra.StringValue {
	return terra.ReferenceAsString(kdssc.ref.Append("insights_target"))
}

type ElementsLambdaFunctionSinkConfigurationAttributes struct {
	ref terra.Reference
}

func (lfsc ElementsLambdaFunctionSinkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lfsc.ref, nil
}

func (lfsc ElementsLambdaFunctionSinkConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsLambdaFunctionSinkConfigurationAttributes {
	return ElementsLambdaFunctionSinkConfigurationAttributes{ref: ref}
}

func (lfsc ElementsLambdaFunctionSinkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lfsc.ref.InternalTokens()
}

func (lfsc ElementsLambdaFunctionSinkConfigurationAttributes) InsightsTarget() terra.StringValue {
	return terra.ReferenceAsString(lfsc.ref.Append("insights_target"))
}

type ElementsS3RecordingSinkConfigurationAttributes struct {
	ref terra.Reference
}

func (srsc ElementsS3RecordingSinkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return srsc.ref, nil
}

func (srsc ElementsS3RecordingSinkConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsS3RecordingSinkConfigurationAttributes {
	return ElementsS3RecordingSinkConfigurationAttributes{ref: ref}
}

func (srsc ElementsS3RecordingSinkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srsc.ref.InternalTokens()
}

func (srsc ElementsS3RecordingSinkConfigurationAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(srsc.ref.Append("destination"))
}

type ElementsSnsTopicSinkConfigurationAttributes struct {
	ref terra.Reference
}

func (stsc ElementsSnsTopicSinkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return stsc.ref, nil
}

func (stsc ElementsSnsTopicSinkConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsSnsTopicSinkConfigurationAttributes {
	return ElementsSnsTopicSinkConfigurationAttributes{ref: ref}
}

func (stsc ElementsSnsTopicSinkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return stsc.ref.InternalTokens()
}

func (stsc ElementsSnsTopicSinkConfigurationAttributes) InsightsTarget() terra.StringValue {
	return terra.ReferenceAsString(stsc.ref.Append("insights_target"))
}

type ElementsSqsQueueSinkConfigurationAttributes struct {
	ref terra.Reference
}

func (sqsc ElementsSqsQueueSinkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sqsc.ref, nil
}

func (sqsc ElementsSqsQueueSinkConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsSqsQueueSinkConfigurationAttributes {
	return ElementsSqsQueueSinkConfigurationAttributes{ref: ref}
}

func (sqsc ElementsSqsQueueSinkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sqsc.ref.InternalTokens()
}

func (sqsc ElementsSqsQueueSinkConfigurationAttributes) InsightsTarget() terra.StringValue {
	return terra.ReferenceAsString(sqsc.ref.Append("insights_target"))
}

type ElementsVoiceAnalyticsProcessorConfigurationAttributes struct {
	ref terra.Reference
}

func (vapc ElementsVoiceAnalyticsProcessorConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vapc.ref, nil
}

func (vapc ElementsVoiceAnalyticsProcessorConfigurationAttributes) InternalWithRef(ref terra.Reference) ElementsVoiceAnalyticsProcessorConfigurationAttributes {
	return ElementsVoiceAnalyticsProcessorConfigurationAttributes{ref: ref}
}

func (vapc ElementsVoiceAnalyticsProcessorConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vapc.ref.InternalTokens()
}

func (vapc ElementsVoiceAnalyticsProcessorConfigurationAttributes) SpeakerSearchStatus() terra.StringValue {
	return terra.ReferenceAsString(vapc.ref.Append("speaker_search_status"))
}

func (vapc ElementsVoiceAnalyticsProcessorConfigurationAttributes) VoiceToneAnalysisStatus() terra.StringValue {
	return terra.ReferenceAsString(vapc.ref.Append("voice_tone_analysis_status"))
}

type RealTimeAlertConfigurationAttributes struct {
	ref terra.Reference
}

func (rtac RealTimeAlertConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rtac.ref, nil
}

func (rtac RealTimeAlertConfigurationAttributes) InternalWithRef(ref terra.Reference) RealTimeAlertConfigurationAttributes {
	return RealTimeAlertConfigurationAttributes{ref: ref}
}

func (rtac RealTimeAlertConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rtac.ref.InternalTokens()
}

func (rtac RealTimeAlertConfigurationAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(rtac.ref.Append("disabled"))
}

func (rtac RealTimeAlertConfigurationAttributes) Rules() terra.ListValue[RealTimeAlertConfigurationRulesAttributes] {
	return terra.ReferenceAsList[RealTimeAlertConfigurationRulesAttributes](rtac.ref.Append("rules"))
}

type RealTimeAlertConfigurationRulesAttributes struct {
	ref terra.Reference
}

func (r RealTimeAlertConfigurationRulesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RealTimeAlertConfigurationRulesAttributes) InternalWithRef(ref terra.Reference) RealTimeAlertConfigurationRulesAttributes {
	return RealTimeAlertConfigurationRulesAttributes{ref: ref}
}

func (r RealTimeAlertConfigurationRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RealTimeAlertConfigurationRulesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("type"))
}

func (r RealTimeAlertConfigurationRulesAttributes) IssueDetectionConfiguration() terra.ListValue[RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes] {
	return terra.ReferenceAsList[RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes](r.ref.Append("issue_detection_configuration"))
}

func (r RealTimeAlertConfigurationRulesAttributes) KeywordMatchConfiguration() terra.ListValue[RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes] {
	return terra.ReferenceAsList[RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes](r.ref.Append("keyword_match_configuration"))
}

func (r RealTimeAlertConfigurationRulesAttributes) SentimentConfiguration() terra.ListValue[RealTimeAlertConfigurationRulesSentimentConfigurationAttributes] {
	return terra.ReferenceAsList[RealTimeAlertConfigurationRulesSentimentConfigurationAttributes](r.ref.Append("sentiment_configuration"))
}

type RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes struct {
	ref terra.Reference
}

func (idc RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return idc.ref, nil
}

func (idc RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes) InternalWithRef(ref terra.Reference) RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes {
	return RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes{ref: ref}
}

func (idc RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return idc.ref.InternalTokens()
}

func (idc RealTimeAlertConfigurationRulesIssueDetectionConfigurationAttributes) RuleName() terra.StringValue {
	return terra.ReferenceAsString(idc.ref.Append("rule_name"))
}

type RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes struct {
	ref terra.Reference
}

func (kmc RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return kmc.ref, nil
}

func (kmc RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes) InternalWithRef(ref terra.Reference) RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes {
	return RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes{ref: ref}
}

func (kmc RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kmc.ref.InternalTokens()
}

func (kmc RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes) Keywords() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](kmc.ref.Append("keywords"))
}

func (kmc RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes) Negate() terra.BoolValue {
	return terra.ReferenceAsBool(kmc.ref.Append("negate"))
}

func (kmc RealTimeAlertConfigurationRulesKeywordMatchConfigurationAttributes) RuleName() terra.StringValue {
	return terra.ReferenceAsString(kmc.ref.Append("rule_name"))
}

type RealTimeAlertConfigurationRulesSentimentConfigurationAttributes struct {
	ref terra.Reference
}

func (sc RealTimeAlertConfigurationRulesSentimentConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc RealTimeAlertConfigurationRulesSentimentConfigurationAttributes) InternalWithRef(ref terra.Reference) RealTimeAlertConfigurationRulesSentimentConfigurationAttributes {
	return RealTimeAlertConfigurationRulesSentimentConfigurationAttributes{ref: ref}
}

func (sc RealTimeAlertConfigurationRulesSentimentConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc RealTimeAlertConfigurationRulesSentimentConfigurationAttributes) RuleName() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("rule_name"))
}

func (sc RealTimeAlertConfigurationRulesSentimentConfigurationAttributes) SentimentType() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("sentiment_type"))
}

func (sc RealTimeAlertConfigurationRulesSentimentConfigurationAttributes) TimePeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("time_period"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ElementsState struct {
	Type                                                string                                                             `json:"type"`
	AmazonTranscribeCallAnalyticsProcessorConfiguration []ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationState `json:"amazon_transcribe_call_analytics_processor_configuration"`
	AmazonTranscribeProcessorConfiguration              []ElementsAmazonTranscribeProcessorConfigurationState              `json:"amazon_transcribe_processor_configuration"`
	KinesisDataStreamSinkConfiguration                  []ElementsKinesisDataStreamSinkConfigurationState                  `json:"kinesis_data_stream_sink_configuration"`
	LambdaFunctionSinkConfiguration                     []ElementsLambdaFunctionSinkConfigurationState                     `json:"lambda_function_sink_configuration"`
	S3RecordingSinkConfiguration                        []ElementsS3RecordingSinkConfigurationState                        `json:"s3_recording_sink_configuration"`
	SnsTopicSinkConfiguration                           []ElementsSnsTopicSinkConfigurationState                           `json:"sns_topic_sink_configuration"`
	SqsQueueSinkConfiguration                           []ElementsSqsQueueSinkConfigurationState                           `json:"sqs_queue_sink_configuration"`
	VoiceAnalyticsProcessorConfiguration                []ElementsVoiceAnalyticsProcessorConfigurationState                `json:"voice_analytics_processor_configuration"`
}

type ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationState struct {
	CallAnalyticsStreamCategories     []string                                                                                    `json:"call_analytics_stream_categories"`
	ContentIdentificationType         string                                                                                      `json:"content_identification_type"`
	ContentRedactionType              string                                                                                      `json:"content_redaction_type"`
	EnablePartialResultsStabilization bool                                                                                        `json:"enable_partial_results_stabilization"`
	FilterPartialResults              bool                                                                                        `json:"filter_partial_results"`
	LanguageCode                      string                                                                                      `json:"language_code"`
	LanguageModelName                 string                                                                                      `json:"language_model_name"`
	PartialResultsStability           string                                                                                      `json:"partial_results_stability"`
	PiiEntityTypes                    string                                                                                      `json:"pii_entity_types"`
	VocabularyFilterMethod            string                                                                                      `json:"vocabulary_filter_method"`
	VocabularyFilterName              string                                                                                      `json:"vocabulary_filter_name"`
	VocabularyName                    string                                                                                      `json:"vocabulary_name"`
	PostCallAnalyticsSettings         []ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsState `json:"post_call_analytics_settings"`
}

type ElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettingsState struct {
	ContentRedactionOutput   string `json:"content_redaction_output"`
	DataAccessRoleArn        string `json:"data_access_role_arn"`
	OutputEncryptionKmsKeyId string `json:"output_encryption_kms_key_id"`
	OutputLocation           string `json:"output_location"`
}

type ElementsAmazonTranscribeProcessorConfigurationState struct {
	ContentIdentificationType         string `json:"content_identification_type"`
	ContentRedactionType              string `json:"content_redaction_type"`
	EnablePartialResultsStabilization bool   `json:"enable_partial_results_stabilization"`
	FilterPartialResults              bool   `json:"filter_partial_results"`
	LanguageCode                      string `json:"language_code"`
	LanguageModelName                 string `json:"language_model_name"`
	PartialResultsStability           string `json:"partial_results_stability"`
	PiiEntityTypes                    string `json:"pii_entity_types"`
	ShowSpeakerLabel                  bool   `json:"show_speaker_label"`
	VocabularyFilterMethod            string `json:"vocabulary_filter_method"`
	VocabularyFilterName              string `json:"vocabulary_filter_name"`
	VocabularyName                    string `json:"vocabulary_name"`
}

type ElementsKinesisDataStreamSinkConfigurationState struct {
	InsightsTarget string `json:"insights_target"`
}

type ElementsLambdaFunctionSinkConfigurationState struct {
	InsightsTarget string `json:"insights_target"`
}

type ElementsS3RecordingSinkConfigurationState struct {
	Destination string `json:"destination"`
}

type ElementsSnsTopicSinkConfigurationState struct {
	InsightsTarget string `json:"insights_target"`
}

type ElementsSqsQueueSinkConfigurationState struct {
	InsightsTarget string `json:"insights_target"`
}

type ElementsVoiceAnalyticsProcessorConfigurationState struct {
	SpeakerSearchStatus     string `json:"speaker_search_status"`
	VoiceToneAnalysisStatus string `json:"voice_tone_analysis_status"`
}

type RealTimeAlertConfigurationState struct {
	Disabled bool                                   `json:"disabled"`
	Rules    []RealTimeAlertConfigurationRulesState `json:"rules"`
}

type RealTimeAlertConfigurationRulesState struct {
	Type                        string                                                            `json:"type"`
	IssueDetectionConfiguration []RealTimeAlertConfigurationRulesIssueDetectionConfigurationState `json:"issue_detection_configuration"`
	KeywordMatchConfiguration   []RealTimeAlertConfigurationRulesKeywordMatchConfigurationState   `json:"keyword_match_configuration"`
	SentimentConfiguration      []RealTimeAlertConfigurationRulesSentimentConfigurationState      `json:"sentiment_configuration"`
}

type RealTimeAlertConfigurationRulesIssueDetectionConfigurationState struct {
	RuleName string `json:"rule_name"`
}

type RealTimeAlertConfigurationRulesKeywordMatchConfigurationState struct {
	Keywords []string `json:"keywords"`
	Negate   bool     `json:"negate"`
	RuleName string   `json:"rule_name"`
}

type RealTimeAlertConfigurationRulesSentimentConfigurationState struct {
	RuleName      string  `json:"rule_name"`
	SentimentType string  `json:"sentiment_type"`
	TimePeriod    float64 `json:"time_period"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
