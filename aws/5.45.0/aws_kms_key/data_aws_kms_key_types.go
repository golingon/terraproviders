// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kms_key

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataMultiRegionConfigurationAttributes struct {
	ref terra.Reference
}

func (mrc DataMultiRegionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return mrc.ref, nil
}

func (mrc DataMultiRegionConfigurationAttributes) InternalWithRef(ref terra.Reference) DataMultiRegionConfigurationAttributes {
	return DataMultiRegionConfigurationAttributes{ref: ref}
}

func (mrc DataMultiRegionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrc.ref.InternalTokens()
}

func (mrc DataMultiRegionConfigurationAttributes) MultiRegionKeyType() terra.StringValue {
	return terra.ReferenceAsString(mrc.ref.Append("multi_region_key_type"))
}

func (mrc DataMultiRegionConfigurationAttributes) PrimaryKey() terra.ListValue[DataMultiRegionConfigurationPrimaryKeyAttributes] {
	return terra.ReferenceAsList[DataMultiRegionConfigurationPrimaryKeyAttributes](mrc.ref.Append("primary_key"))
}

func (mrc DataMultiRegionConfigurationAttributes) ReplicaKeys() terra.ListValue[DataMultiRegionConfigurationReplicaKeysAttributes] {
	return terra.ReferenceAsList[DataMultiRegionConfigurationReplicaKeysAttributes](mrc.ref.Append("replica_keys"))
}

type DataMultiRegionConfigurationPrimaryKeyAttributes struct {
	ref terra.Reference
}

func (pk DataMultiRegionConfigurationPrimaryKeyAttributes) InternalRef() (terra.Reference, error) {
	return pk.ref, nil
}

func (pk DataMultiRegionConfigurationPrimaryKeyAttributes) InternalWithRef(ref terra.Reference) DataMultiRegionConfigurationPrimaryKeyAttributes {
	return DataMultiRegionConfigurationPrimaryKeyAttributes{ref: ref}
}

func (pk DataMultiRegionConfigurationPrimaryKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pk.ref.InternalTokens()
}

func (pk DataMultiRegionConfigurationPrimaryKeyAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("arn"))
}

func (pk DataMultiRegionConfigurationPrimaryKeyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("region"))
}

type DataMultiRegionConfigurationReplicaKeysAttributes struct {
	ref terra.Reference
}

func (rk DataMultiRegionConfigurationReplicaKeysAttributes) InternalRef() (terra.Reference, error) {
	return rk.ref, nil
}

func (rk DataMultiRegionConfigurationReplicaKeysAttributes) InternalWithRef(ref terra.Reference) DataMultiRegionConfigurationReplicaKeysAttributes {
	return DataMultiRegionConfigurationReplicaKeysAttributes{ref: ref}
}

func (rk DataMultiRegionConfigurationReplicaKeysAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rk.ref.InternalTokens()
}

func (rk DataMultiRegionConfigurationReplicaKeysAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(rk.ref.Append("arn"))
}

func (rk DataMultiRegionConfigurationReplicaKeysAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(rk.ref.Append("region"))
}

type DataXksKeyConfigurationAttributes struct {
	ref terra.Reference
}

func (xkc DataXksKeyConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return xkc.ref, nil
}

func (xkc DataXksKeyConfigurationAttributes) InternalWithRef(ref terra.Reference) DataXksKeyConfigurationAttributes {
	return DataXksKeyConfigurationAttributes{ref: ref}
}

func (xkc DataXksKeyConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return xkc.ref.InternalTokens()
}

func (xkc DataXksKeyConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(xkc.ref.Append("id"))
}

type DataMultiRegionConfigurationState struct {
	MultiRegionKeyType string                                         `json:"multi_region_key_type"`
	PrimaryKey         []DataMultiRegionConfigurationPrimaryKeyState  `json:"primary_key"`
	ReplicaKeys        []DataMultiRegionConfigurationReplicaKeysState `json:"replica_keys"`
}

type DataMultiRegionConfigurationPrimaryKeyState struct {
	Arn    string `json:"arn"`
	Region string `json:"region"`
}

type DataMultiRegionConfigurationReplicaKeysState struct {
	Arn    string `json:"arn"`
	Region string `json:"region"`
}

type DataXksKeyConfigurationState struct {
	Id string `json:"id"`
}
