// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ses_configuration_set

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ses_configuration_set.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesConfigurationSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascs *Resource) Type() string {
	return "aws_ses_configuration_set"
}

// LocalName returns the local name for [Resource].
func (ascs *Resource) LocalName() string {
	return ascs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascs *Resource) Configuration() interface{} {
	return ascs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascs *Resource) Dependencies() terra.Dependencies {
	return ascs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascs *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascs *Resource) Attributes() awsSesConfigurationSetAttributes {
	return awsSesConfigurationSetAttributes{ref: terra.ReferenceResource(ascs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascs *Resource) ImportState(state io.Reader) error {
	ascs.state = &awsSesConfigurationSetState{}
	if err := json.NewDecoder(state).Decode(ascs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascs.Type(), ascs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascs *Resource) State() (*awsSesConfigurationSetState, bool) {
	return ascs.state, ascs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascs *Resource) StateMust() *awsSesConfigurationSetState {
	if ascs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascs.Type(), ascs.LocalName()))
	}
	return ascs.state
}

// Args contains the configurations for aws_ses_configuration_set.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ReputationMetricsEnabled: bool, optional
	ReputationMetricsEnabled terra.BoolValue `hcl:"reputation_metrics_enabled,attr"`
	// SendingEnabled: bool, optional
	SendingEnabled terra.BoolValue `hcl:"sending_enabled,attr"`
	// DeliveryOptions: optional
	DeliveryOptions *DeliveryOptions `hcl:"delivery_options,block"`
	// TrackingOptions: optional
	TrackingOptions *TrackingOptions `hcl:"tracking_options,block"`
}

type awsSesConfigurationSetAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ses_configuration_set.
func (ascs awsSesConfigurationSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("arn"))
}

// Id returns a reference to field id of aws_ses_configuration_set.
func (ascs awsSesConfigurationSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("id"))
}

// LastFreshStart returns a reference to field last_fresh_start of aws_ses_configuration_set.
func (ascs awsSesConfigurationSetAttributes) LastFreshStart() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("last_fresh_start"))
}

// Name returns a reference to field name of aws_ses_configuration_set.
func (ascs awsSesConfigurationSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ascs.ref.Append("name"))
}

// ReputationMetricsEnabled returns a reference to field reputation_metrics_enabled of aws_ses_configuration_set.
func (ascs awsSesConfigurationSetAttributes) ReputationMetricsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ascs.ref.Append("reputation_metrics_enabled"))
}

// SendingEnabled returns a reference to field sending_enabled of aws_ses_configuration_set.
func (ascs awsSesConfigurationSetAttributes) SendingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ascs.ref.Append("sending_enabled"))
}

func (ascs awsSesConfigurationSetAttributes) DeliveryOptions() terra.ListValue[DeliveryOptionsAttributes] {
	return terra.ReferenceAsList[DeliveryOptionsAttributes](ascs.ref.Append("delivery_options"))
}

func (ascs awsSesConfigurationSetAttributes) TrackingOptions() terra.ListValue[TrackingOptionsAttributes] {
	return terra.ReferenceAsList[TrackingOptionsAttributes](ascs.ref.Append("tracking_options"))
}

type awsSesConfigurationSetState struct {
	Arn                      string                 `json:"arn"`
	Id                       string                 `json:"id"`
	LastFreshStart           string                 `json:"last_fresh_start"`
	Name                     string                 `json:"name"`
	ReputationMetricsEnabled bool                   `json:"reputation_metrics_enabled"`
	SendingEnabled           bool                   `json:"sending_enabled"`
	DeliveryOptions          []DeliveryOptionsState `json:"delivery_options"`
	TrackingOptions          []TrackingOptionsState `json:"tracking_options"`
}
