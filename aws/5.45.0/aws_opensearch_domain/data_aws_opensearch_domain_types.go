// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_opensearch_domain

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataOffPeakWindowOptions struct{}

type DataAdvancedSecurityOptionsAttributes struct {
	ref terra.Reference
}

func (aso DataAdvancedSecurityOptionsAttributes) InternalRef() (terra.Reference, error) {
	return aso.ref, nil
}

func (aso DataAdvancedSecurityOptionsAttributes) InternalWithRef(ref terra.Reference) DataAdvancedSecurityOptionsAttributes {
	return DataAdvancedSecurityOptionsAttributes{ref: ref}
}

func (aso DataAdvancedSecurityOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aso.ref.InternalTokens()
}

func (aso DataAdvancedSecurityOptionsAttributes) AnonymousAuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aso.ref.Append("anonymous_auth_enabled"))
}

func (aso DataAdvancedSecurityOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(aso.ref.Append("enabled"))
}

func (aso DataAdvancedSecurityOptionsAttributes) InternalUserDatabaseEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aso.ref.Append("internal_user_database_enabled"))
}

type DataAutoTuneOptionsAttributes struct {
	ref terra.Reference
}

func (ato DataAutoTuneOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ato.ref, nil
}

func (ato DataAutoTuneOptionsAttributes) InternalWithRef(ref terra.Reference) DataAutoTuneOptionsAttributes {
	return DataAutoTuneOptionsAttributes{ref: ref}
}

func (ato DataAutoTuneOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ato.ref.InternalTokens()
}

func (ato DataAutoTuneOptionsAttributes) DesiredState() terra.StringValue {
	return terra.ReferenceAsString(ato.ref.Append("desired_state"))
}

func (ato DataAutoTuneOptionsAttributes) RollbackOnDisable() terra.StringValue {
	return terra.ReferenceAsString(ato.ref.Append("rollback_on_disable"))
}

func (ato DataAutoTuneOptionsAttributes) UseOffPeakWindow() terra.BoolValue {
	return terra.ReferenceAsBool(ato.ref.Append("use_off_peak_window"))
}

func (ato DataAutoTuneOptionsAttributes) MaintenanceSchedule() terra.SetValue[DataAutoTuneOptionsMaintenanceScheduleAttributes] {
	return terra.ReferenceAsSet[DataAutoTuneOptionsMaintenanceScheduleAttributes](ato.ref.Append("maintenance_schedule"))
}

type DataAutoTuneOptionsMaintenanceScheduleAttributes struct {
	ref terra.Reference
}

func (ms DataAutoTuneOptionsMaintenanceScheduleAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms DataAutoTuneOptionsMaintenanceScheduleAttributes) InternalWithRef(ref terra.Reference) DataAutoTuneOptionsMaintenanceScheduleAttributes {
	return DataAutoTuneOptionsMaintenanceScheduleAttributes{ref: ref}
}

func (ms DataAutoTuneOptionsMaintenanceScheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms DataAutoTuneOptionsMaintenanceScheduleAttributes) CronExpressionForRecurrence() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("cron_expression_for_recurrence"))
}

func (ms DataAutoTuneOptionsMaintenanceScheduleAttributes) StartAt() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("start_at"))
}

func (ms DataAutoTuneOptionsMaintenanceScheduleAttributes) Duration() terra.ListValue[DataAutoTuneOptionsMaintenanceScheduleDurationAttributes] {
	return terra.ReferenceAsList[DataAutoTuneOptionsMaintenanceScheduleDurationAttributes](ms.ref.Append("duration"))
}

type DataAutoTuneOptionsMaintenanceScheduleDurationAttributes struct {
	ref terra.Reference
}

func (d DataAutoTuneOptionsMaintenanceScheduleDurationAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataAutoTuneOptionsMaintenanceScheduleDurationAttributes) InternalWithRef(ref terra.Reference) DataAutoTuneOptionsMaintenanceScheduleDurationAttributes {
	return DataAutoTuneOptionsMaintenanceScheduleDurationAttributes{ref: ref}
}

func (d DataAutoTuneOptionsMaintenanceScheduleDurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataAutoTuneOptionsMaintenanceScheduleDurationAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("unit"))
}

func (d DataAutoTuneOptionsMaintenanceScheduleDurationAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(d.ref.Append("value"))
}

type DataClusterConfigAttributes struct {
	ref terra.Reference
}

func (cc DataClusterConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataClusterConfigAttributes) InternalWithRef(ref terra.Reference) DataClusterConfigAttributes {
	return DataClusterConfigAttributes{ref: ref}
}

func (cc DataClusterConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataClusterConfigAttributes) DedicatedMasterCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("dedicated_master_count"))
}

func (cc DataClusterConfigAttributes) DedicatedMasterEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("dedicated_master_enabled"))
}

func (cc DataClusterConfigAttributes) DedicatedMasterType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("dedicated_master_type"))
}

func (cc DataClusterConfigAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("instance_count"))
}

func (cc DataClusterConfigAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("instance_type"))
}

func (cc DataClusterConfigAttributes) MultiAzWithStandbyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("multi_az_with_standby_enabled"))
}

func (cc DataClusterConfigAttributes) WarmCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("warm_count"))
}

func (cc DataClusterConfigAttributes) WarmEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("warm_enabled"))
}

func (cc DataClusterConfigAttributes) WarmType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("warm_type"))
}

func (cc DataClusterConfigAttributes) ZoneAwarenessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("zone_awareness_enabled"))
}

func (cc DataClusterConfigAttributes) ColdStorageOptions() terra.ListValue[DataClusterConfigColdStorageOptionsAttributes] {
	return terra.ReferenceAsList[DataClusterConfigColdStorageOptionsAttributes](cc.ref.Append("cold_storage_options"))
}

func (cc DataClusterConfigAttributes) ZoneAwarenessConfig() terra.ListValue[DataClusterConfigZoneAwarenessConfigAttributes] {
	return terra.ReferenceAsList[DataClusterConfigZoneAwarenessConfigAttributes](cc.ref.Append("zone_awareness_config"))
}

type DataClusterConfigColdStorageOptionsAttributes struct {
	ref terra.Reference
}

func (cso DataClusterConfigColdStorageOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cso.ref, nil
}

func (cso DataClusterConfigColdStorageOptionsAttributes) InternalWithRef(ref terra.Reference) DataClusterConfigColdStorageOptionsAttributes {
	return DataClusterConfigColdStorageOptionsAttributes{ref: ref}
}

func (cso DataClusterConfigColdStorageOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cso.ref.InternalTokens()
}

func (cso DataClusterConfigColdStorageOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cso.ref.Append("enabled"))
}

type DataClusterConfigZoneAwarenessConfigAttributes struct {
	ref terra.Reference
}

func (zac DataClusterConfigZoneAwarenessConfigAttributes) InternalRef() (terra.Reference, error) {
	return zac.ref, nil
}

func (zac DataClusterConfigZoneAwarenessConfigAttributes) InternalWithRef(ref terra.Reference) DataClusterConfigZoneAwarenessConfigAttributes {
	return DataClusterConfigZoneAwarenessConfigAttributes{ref: ref}
}

func (zac DataClusterConfigZoneAwarenessConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return zac.ref.InternalTokens()
}

func (zac DataClusterConfigZoneAwarenessConfigAttributes) AvailabilityZoneCount() terra.NumberValue {
	return terra.ReferenceAsNumber(zac.ref.Append("availability_zone_count"))
}

type DataCognitoOptionsAttributes struct {
	ref terra.Reference
}

func (co DataCognitoOptionsAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co DataCognitoOptionsAttributes) InternalWithRef(ref terra.Reference) DataCognitoOptionsAttributes {
	return DataCognitoOptionsAttributes{ref: ref}
}

func (co DataCognitoOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co DataCognitoOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(co.ref.Append("enabled"))
}

func (co DataCognitoOptionsAttributes) IdentityPoolId() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("identity_pool_id"))
}

func (co DataCognitoOptionsAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("role_arn"))
}

func (co DataCognitoOptionsAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("user_pool_id"))
}

type DataEbsOptionsAttributes struct {
	ref terra.Reference
}

func (eo DataEbsOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo DataEbsOptionsAttributes) InternalWithRef(ref terra.Reference) DataEbsOptionsAttributes {
	return DataEbsOptionsAttributes{ref: ref}
}

func (eo DataEbsOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo DataEbsOptionsAttributes) EbsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(eo.ref.Append("ebs_enabled"))
}

func (eo DataEbsOptionsAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(eo.ref.Append("iops"))
}

func (eo DataEbsOptionsAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(eo.ref.Append("throughput"))
}

func (eo DataEbsOptionsAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(eo.ref.Append("volume_size"))
}

func (eo DataEbsOptionsAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(eo.ref.Append("volume_type"))
}

type DataEncryptionAtRestAttributes struct {
	ref terra.Reference
}

func (ear DataEncryptionAtRestAttributes) InternalRef() (terra.Reference, error) {
	return ear.ref, nil
}

func (ear DataEncryptionAtRestAttributes) InternalWithRef(ref terra.Reference) DataEncryptionAtRestAttributes {
	return DataEncryptionAtRestAttributes{ref: ref}
}

func (ear DataEncryptionAtRestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ear.ref.InternalTokens()
}

func (ear DataEncryptionAtRestAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ear.ref.Append("enabled"))
}

func (ear DataEncryptionAtRestAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ear.ref.Append("kms_key_id"))
}

type DataLogPublishingOptionsAttributes struct {
	ref terra.Reference
}

func (lpo DataLogPublishingOptionsAttributes) InternalRef() (terra.Reference, error) {
	return lpo.ref, nil
}

func (lpo DataLogPublishingOptionsAttributes) InternalWithRef(ref terra.Reference) DataLogPublishingOptionsAttributes {
	return DataLogPublishingOptionsAttributes{ref: ref}
}

func (lpo DataLogPublishingOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lpo.ref.InternalTokens()
}

func (lpo DataLogPublishingOptionsAttributes) CloudwatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(lpo.ref.Append("cloudwatch_log_group_arn"))
}

func (lpo DataLogPublishingOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(lpo.ref.Append("enabled"))
}

func (lpo DataLogPublishingOptionsAttributes) LogType() terra.StringValue {
	return terra.ReferenceAsString(lpo.ref.Append("log_type"))
}

type DataNodeToNodeEncryptionAttributes struct {
	ref terra.Reference
}

func (ntne DataNodeToNodeEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return ntne.ref, nil
}

func (ntne DataNodeToNodeEncryptionAttributes) InternalWithRef(ref terra.Reference) DataNodeToNodeEncryptionAttributes {
	return DataNodeToNodeEncryptionAttributes{ref: ref}
}

func (ntne DataNodeToNodeEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ntne.ref.InternalTokens()
}

func (ntne DataNodeToNodeEncryptionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ntne.ref.Append("enabled"))
}

type DataSnapshotOptionsAttributes struct {
	ref terra.Reference
}

func (so DataSnapshotOptionsAttributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so DataSnapshotOptionsAttributes) InternalWithRef(ref terra.Reference) DataSnapshotOptionsAttributes {
	return DataSnapshotOptionsAttributes{ref: ref}
}

func (so DataSnapshotOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so DataSnapshotOptionsAttributes) AutomatedSnapshotStartHour() terra.NumberValue {
	return terra.ReferenceAsNumber(so.ref.Append("automated_snapshot_start_hour"))
}

type DataSoftwareUpdateOptionsAttributes struct {
	ref terra.Reference
}

func (suo DataSoftwareUpdateOptionsAttributes) InternalRef() (terra.Reference, error) {
	return suo.ref, nil
}

func (suo DataSoftwareUpdateOptionsAttributes) InternalWithRef(ref terra.Reference) DataSoftwareUpdateOptionsAttributes {
	return DataSoftwareUpdateOptionsAttributes{ref: ref}
}

func (suo DataSoftwareUpdateOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return suo.ref.InternalTokens()
}

func (suo DataSoftwareUpdateOptionsAttributes) AutoSoftwareUpdateEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(suo.ref.Append("auto_software_update_enabled"))
}

type DataVpcOptionsAttributes struct {
	ref terra.Reference
}

func (vo DataVpcOptionsAttributes) InternalRef() (terra.Reference, error) {
	return vo.ref, nil
}

func (vo DataVpcOptionsAttributes) InternalWithRef(ref terra.Reference) DataVpcOptionsAttributes {
	return DataVpcOptionsAttributes{ref: ref}
}

func (vo DataVpcOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vo.ref.InternalTokens()
}

func (vo DataVpcOptionsAttributes) AvailabilityZones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vo.ref.Append("availability_zones"))
}

func (vo DataVpcOptionsAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vo.ref.Append("security_group_ids"))
}

func (vo DataVpcOptionsAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vo.ref.Append("subnet_ids"))
}

func (vo DataVpcOptionsAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vo.ref.Append("vpc_id"))
}

type DataOffPeakWindowOptionsAttributes struct {
	ref terra.Reference
}

func (opwo DataOffPeakWindowOptionsAttributes) InternalRef() (terra.Reference, error) {
	return opwo.ref, nil
}

func (opwo DataOffPeakWindowOptionsAttributes) InternalWithRef(ref terra.Reference) DataOffPeakWindowOptionsAttributes {
	return DataOffPeakWindowOptionsAttributes{ref: ref}
}

func (opwo DataOffPeakWindowOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return opwo.ref.InternalTokens()
}

func (opwo DataOffPeakWindowOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(opwo.ref.Append("enabled"))
}

func (opwo DataOffPeakWindowOptionsAttributes) OffPeakWindow() terra.ListValue[DataOffPeakWindowOptionsOffPeakWindowAttributes] {
	return terra.ReferenceAsList[DataOffPeakWindowOptionsOffPeakWindowAttributes](opwo.ref.Append("off_peak_window"))
}

type DataOffPeakWindowOptionsOffPeakWindowAttributes struct {
	ref terra.Reference
}

func (opw DataOffPeakWindowOptionsOffPeakWindowAttributes) InternalRef() (terra.Reference, error) {
	return opw.ref, nil
}

func (opw DataOffPeakWindowOptionsOffPeakWindowAttributes) InternalWithRef(ref terra.Reference) DataOffPeakWindowOptionsOffPeakWindowAttributes {
	return DataOffPeakWindowOptionsOffPeakWindowAttributes{ref: ref}
}

func (opw DataOffPeakWindowOptionsOffPeakWindowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return opw.ref.InternalTokens()
}

func (opw DataOffPeakWindowOptionsOffPeakWindowAttributes) WindowStartTime() terra.ListValue[DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes] {
	return terra.ReferenceAsList[DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes](opw.ref.Append("window_start_time"))
}

type DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes struct {
	ref terra.Reference
}

func (wst DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes) InternalRef() (terra.Reference, error) {
	return wst.ref, nil
}

func (wst DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes) InternalWithRef(ref terra.Reference) DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes {
	return DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes{ref: ref}
}

func (wst DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wst.ref.InternalTokens()
}

func (wst DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(wst.ref.Append("hours"))
}

func (wst DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(wst.ref.Append("minutes"))
}

type DataAdvancedSecurityOptionsState struct {
	AnonymousAuthEnabled        bool `json:"anonymous_auth_enabled"`
	Enabled                     bool `json:"enabled"`
	InternalUserDatabaseEnabled bool `json:"internal_user_database_enabled"`
}

type DataAutoTuneOptionsState struct {
	DesiredState        string                                        `json:"desired_state"`
	RollbackOnDisable   string                                        `json:"rollback_on_disable"`
	UseOffPeakWindow    bool                                          `json:"use_off_peak_window"`
	MaintenanceSchedule []DataAutoTuneOptionsMaintenanceScheduleState `json:"maintenance_schedule"`
}

type DataAutoTuneOptionsMaintenanceScheduleState struct {
	CronExpressionForRecurrence string                                                `json:"cron_expression_for_recurrence"`
	StartAt                     string                                                `json:"start_at"`
	Duration                    []DataAutoTuneOptionsMaintenanceScheduleDurationState `json:"duration"`
}

type DataAutoTuneOptionsMaintenanceScheduleDurationState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataClusterConfigState struct {
	DedicatedMasterCount      float64                                     `json:"dedicated_master_count"`
	DedicatedMasterEnabled    bool                                        `json:"dedicated_master_enabled"`
	DedicatedMasterType       string                                      `json:"dedicated_master_type"`
	InstanceCount             float64                                     `json:"instance_count"`
	InstanceType              string                                      `json:"instance_type"`
	MultiAzWithStandbyEnabled bool                                        `json:"multi_az_with_standby_enabled"`
	WarmCount                 float64                                     `json:"warm_count"`
	WarmEnabled               bool                                        `json:"warm_enabled"`
	WarmType                  string                                      `json:"warm_type"`
	ZoneAwarenessEnabled      bool                                        `json:"zone_awareness_enabled"`
	ColdStorageOptions        []DataClusterConfigColdStorageOptionsState  `json:"cold_storage_options"`
	ZoneAwarenessConfig       []DataClusterConfigZoneAwarenessConfigState `json:"zone_awareness_config"`
}

type DataClusterConfigColdStorageOptionsState struct {
	Enabled bool `json:"enabled"`
}

type DataClusterConfigZoneAwarenessConfigState struct {
	AvailabilityZoneCount float64 `json:"availability_zone_count"`
}

type DataCognitoOptionsState struct {
	Enabled        bool   `json:"enabled"`
	IdentityPoolId string `json:"identity_pool_id"`
	RoleArn        string `json:"role_arn"`
	UserPoolId     string `json:"user_pool_id"`
}

type DataEbsOptionsState struct {
	EbsEnabled bool    `json:"ebs_enabled"`
	Iops       float64 `json:"iops"`
	Throughput float64 `json:"throughput"`
	VolumeSize float64 `json:"volume_size"`
	VolumeType string  `json:"volume_type"`
}

type DataEncryptionAtRestState struct {
	Enabled  bool   `json:"enabled"`
	KmsKeyId string `json:"kms_key_id"`
}

type DataLogPublishingOptionsState struct {
	CloudwatchLogGroupArn string `json:"cloudwatch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogType               string `json:"log_type"`
}

type DataNodeToNodeEncryptionState struct {
	Enabled bool `json:"enabled"`
}

type DataSnapshotOptionsState struct {
	AutomatedSnapshotStartHour float64 `json:"automated_snapshot_start_hour"`
}

type DataSoftwareUpdateOptionsState struct {
	AutoSoftwareUpdateEnabled bool `json:"auto_software_update_enabled"`
}

type DataVpcOptionsState struct {
	AvailabilityZones []string `json:"availability_zones"`
	SecurityGroupIds  []string `json:"security_group_ids"`
	SubnetIds         []string `json:"subnet_ids"`
	VpcId             string   `json:"vpc_id"`
}

type DataOffPeakWindowOptionsState struct {
	Enabled       bool                                         `json:"enabled"`
	OffPeakWindow []DataOffPeakWindowOptionsOffPeakWindowState `json:"off_peak_window"`
}

type DataOffPeakWindowOptionsOffPeakWindowState struct {
	WindowStartTime []DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeState `json:"window_start_time"`
}

type DataOffPeakWindowOptionsOffPeakWindowWindowStartTimeState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
}
