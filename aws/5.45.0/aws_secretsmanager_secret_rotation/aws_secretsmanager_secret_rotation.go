// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_secretsmanager_secret_rotation

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_secretsmanager_secret_rotation.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSecretsmanagerSecretRotationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (assr *Resource) Type() string {
	return "aws_secretsmanager_secret_rotation"
}

// LocalName returns the local name for [Resource].
func (assr *Resource) LocalName() string {
	return assr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (assr *Resource) Configuration() interface{} {
	return assr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (assr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(assr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (assr *Resource) Dependencies() terra.Dependencies {
	return assr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (assr *Resource) LifecycleManagement() *terra.Lifecycle {
	return assr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (assr *Resource) Attributes() awsSecretsmanagerSecretRotationAttributes {
	return awsSecretsmanagerSecretRotationAttributes{ref: terra.ReferenceResource(assr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (assr *Resource) ImportState(state io.Reader) error {
	assr.state = &awsSecretsmanagerSecretRotationState{}
	if err := json.NewDecoder(state).Decode(assr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", assr.Type(), assr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (assr *Resource) State() (*awsSecretsmanagerSecretRotationState, bool) {
	return assr.state, assr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (assr *Resource) StateMust() *awsSecretsmanagerSecretRotationState {
	if assr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", assr.Type(), assr.LocalName()))
	}
	return assr.state
}

// Args contains the configurations for aws_secretsmanager_secret_rotation.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RotateImmediately: bool, optional
	RotateImmediately terra.BoolValue `hcl:"rotate_immediately,attr"`
	// RotationLambdaArn: string, optional
	RotationLambdaArn terra.StringValue `hcl:"rotation_lambda_arn,attr"`
	// SecretId: string, required
	SecretId terra.StringValue `hcl:"secret_id,attr" validate:"required"`
	// RotationRules: required
	RotationRules *RotationRules `hcl:"rotation_rules,block" validate:"required"`
}

type awsSecretsmanagerSecretRotationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_secretsmanager_secret_rotation.
func (assr awsSecretsmanagerSecretRotationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assr.ref.Append("id"))
}

// RotateImmediately returns a reference to field rotate_immediately of aws_secretsmanager_secret_rotation.
func (assr awsSecretsmanagerSecretRotationAttributes) RotateImmediately() terra.BoolValue {
	return terra.ReferenceAsBool(assr.ref.Append("rotate_immediately"))
}

// RotationEnabled returns a reference to field rotation_enabled of aws_secretsmanager_secret_rotation.
func (assr awsSecretsmanagerSecretRotationAttributes) RotationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(assr.ref.Append("rotation_enabled"))
}

// RotationLambdaArn returns a reference to field rotation_lambda_arn of aws_secretsmanager_secret_rotation.
func (assr awsSecretsmanagerSecretRotationAttributes) RotationLambdaArn() terra.StringValue {
	return terra.ReferenceAsString(assr.ref.Append("rotation_lambda_arn"))
}

// SecretId returns a reference to field secret_id of aws_secretsmanager_secret_rotation.
func (assr awsSecretsmanagerSecretRotationAttributes) SecretId() terra.StringValue {
	return terra.ReferenceAsString(assr.ref.Append("secret_id"))
}

func (assr awsSecretsmanagerSecretRotationAttributes) RotationRules() terra.ListValue[RotationRulesAttributes] {
	return terra.ReferenceAsList[RotationRulesAttributes](assr.ref.Append("rotation_rules"))
}

type awsSecretsmanagerSecretRotationState struct {
	Id                string               `json:"id"`
	RotateImmediately bool                 `json:"rotate_immediately"`
	RotationEnabled   bool                 `json:"rotation_enabled"`
	RotationLambdaArn string               `json:"rotation_lambda_arn"`
	SecretId          string               `json:"secret_id"`
	RotationRules     []RotationRulesState `json:"rotation_rules"`
}
