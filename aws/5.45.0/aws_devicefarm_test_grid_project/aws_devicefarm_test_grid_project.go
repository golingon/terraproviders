// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_devicefarm_test_grid_project

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_devicefarm_test_grid_project.
type Resource struct {
	Name      string
	Args      Args
	state     *awsDevicefarmTestGridProjectState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adtgp *Resource) Type() string {
	return "aws_devicefarm_test_grid_project"
}

// LocalName returns the local name for [Resource].
func (adtgp *Resource) LocalName() string {
	return adtgp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adtgp *Resource) Configuration() interface{} {
	return adtgp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adtgp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adtgp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adtgp *Resource) Dependencies() terra.Dependencies {
	return adtgp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adtgp *Resource) LifecycleManagement() *terra.Lifecycle {
	return adtgp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adtgp *Resource) Attributes() awsDevicefarmTestGridProjectAttributes {
	return awsDevicefarmTestGridProjectAttributes{ref: terra.ReferenceResource(adtgp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adtgp *Resource) ImportState(state io.Reader) error {
	adtgp.state = &awsDevicefarmTestGridProjectState{}
	if err := json.NewDecoder(state).Decode(adtgp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adtgp.Type(), adtgp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adtgp *Resource) State() (*awsDevicefarmTestGridProjectState, bool) {
	return adtgp.state, adtgp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adtgp *Resource) StateMust() *awsDevicefarmTestGridProjectState {
	if adtgp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adtgp.Type(), adtgp.LocalName()))
	}
	return adtgp.state
}

// Args contains the configurations for aws_devicefarm_test_grid_project.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpcConfig: optional
	VpcConfig *VpcConfig `hcl:"vpc_config,block"`
}

type awsDevicefarmTestGridProjectAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_devicefarm_test_grid_project.
func (adtgp awsDevicefarmTestGridProjectAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(adtgp.ref.Append("arn"))
}

// Description returns a reference to field description of aws_devicefarm_test_grid_project.
func (adtgp awsDevicefarmTestGridProjectAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(adtgp.ref.Append("description"))
}

// Id returns a reference to field id of aws_devicefarm_test_grid_project.
func (adtgp awsDevicefarmTestGridProjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adtgp.ref.Append("id"))
}

// Name returns a reference to field name of aws_devicefarm_test_grid_project.
func (adtgp awsDevicefarmTestGridProjectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adtgp.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_devicefarm_test_grid_project.
func (adtgp awsDevicefarmTestGridProjectAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adtgp.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_devicefarm_test_grid_project.
func (adtgp awsDevicefarmTestGridProjectAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adtgp.ref.Append("tags_all"))
}

func (adtgp awsDevicefarmTestGridProjectAttributes) VpcConfig() terra.ListValue[VpcConfigAttributes] {
	return terra.ReferenceAsList[VpcConfigAttributes](adtgp.ref.Append("vpc_config"))
}

type awsDevicefarmTestGridProjectState struct {
	Arn         string            `json:"arn"`
	Description string            `json:"description"`
	Id          string            `json:"id"`
	Name        string            `json:"name"`
	Tags        map[string]string `json:"tags"`
	TagsAll     map[string]string `json:"tags_all"`
	VpcConfig   []VpcConfigState  `json:"vpc_config"`
}
