// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appautoscaling_scheduled_action

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appautoscaling_scheduled_action.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppautoscalingScheduledActionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasa *Resource) Type() string {
	return "aws_appautoscaling_scheduled_action"
}

// LocalName returns the local name for [Resource].
func (aasa *Resource) LocalName() string {
	return aasa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasa *Resource) Configuration() interface{} {
	return aasa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasa *Resource) Dependencies() terra.Dependencies {
	return aasa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasa *Resource) Attributes() awsAppautoscalingScheduledActionAttributes {
	return awsAppautoscalingScheduledActionAttributes{ref: terra.ReferenceResource(aasa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasa *Resource) ImportState(state io.Reader) error {
	aasa.state = &awsAppautoscalingScheduledActionState{}
	if err := json.NewDecoder(state).Decode(aasa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasa.Type(), aasa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasa *Resource) State() (*awsAppautoscalingScheduledActionState, bool) {
	return aasa.state, aasa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasa *Resource) StateMust() *awsAppautoscalingScheduledActionState {
	if aasa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasa.Type(), aasa.LocalName()))
	}
	return aasa.state
}

// Args contains the configurations for aws_appautoscaling_scheduled_action.
type Args struct {
	// EndTime: string, optional
	EndTime terra.StringValue `hcl:"end_time,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceId: string, required
	ResourceId terra.StringValue `hcl:"resource_id,attr" validate:"required"`
	// ScalableDimension: string, required
	ScalableDimension terra.StringValue `hcl:"scalable_dimension,attr" validate:"required"`
	// Schedule: string, required
	Schedule terra.StringValue `hcl:"schedule,attr" validate:"required"`
	// ServiceNamespace: string, required
	ServiceNamespace terra.StringValue `hcl:"service_namespace,attr" validate:"required"`
	// StartTime: string, optional
	StartTime terra.StringValue `hcl:"start_time,attr"`
	// Timezone: string, optional
	Timezone terra.StringValue `hcl:"timezone,attr"`
	// ScalableTargetAction: required
	ScalableTargetAction *ScalableTargetAction `hcl:"scalable_target_action,block" validate:"required"`
}

type awsAppautoscalingScheduledActionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("arn"))
}

// EndTime returns a reference to field end_time of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("end_time"))
}

// Id returns a reference to field id of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("id"))
}

// Name returns a reference to field name of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("name"))
}

// ResourceId returns a reference to field resource_id of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("resource_id"))
}

// ScalableDimension returns a reference to field scalable_dimension of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) ScalableDimension() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("scalable_dimension"))
}

// Schedule returns a reference to field schedule of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) Schedule() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("schedule"))
}

// ServiceNamespace returns a reference to field service_namespace of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) ServiceNamespace() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("service_namespace"))
}

// StartTime returns a reference to field start_time of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("start_time"))
}

// Timezone returns a reference to field timezone of aws_appautoscaling_scheduled_action.
func (aasa awsAppautoscalingScheduledActionAttributes) Timezone() terra.StringValue {
	return terra.ReferenceAsString(aasa.ref.Append("timezone"))
}

func (aasa awsAppautoscalingScheduledActionAttributes) ScalableTargetAction() terra.ListValue[ScalableTargetActionAttributes] {
	return terra.ReferenceAsList[ScalableTargetActionAttributes](aasa.ref.Append("scalable_target_action"))
}

type awsAppautoscalingScheduledActionState struct {
	Arn                  string                      `json:"arn"`
	EndTime              string                      `json:"end_time"`
	Id                   string                      `json:"id"`
	Name                 string                      `json:"name"`
	ResourceId           string                      `json:"resource_id"`
	ScalableDimension    string                      `json:"scalable_dimension"`
	Schedule             string                      `json:"schedule"`
	ServiceNamespace     string                      `json:"service_namespace"`
	StartTime            string                      `json:"start_time"`
	Timezone             string                      `json:"timezone"`
	ScalableTargetAction []ScalableTargetActionState `json:"scalable_target_action"`
}
