// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53_resolver_firewall_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_route53_resolver_firewall_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *awsRoute53ResolverFirewallRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arrfr *Resource) Type() string {
	return "aws_route53_resolver_firewall_rule"
}

// LocalName returns the local name for [Resource].
func (arrfr *Resource) LocalName() string {
	return arrfr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arrfr *Resource) Configuration() interface{} {
	return arrfr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arrfr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arrfr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arrfr *Resource) Dependencies() terra.Dependencies {
	return arrfr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arrfr *Resource) LifecycleManagement() *terra.Lifecycle {
	return arrfr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arrfr *Resource) Attributes() awsRoute53ResolverFirewallRuleAttributes {
	return awsRoute53ResolverFirewallRuleAttributes{ref: terra.ReferenceResource(arrfr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arrfr *Resource) ImportState(state io.Reader) error {
	arrfr.state = &awsRoute53ResolverFirewallRuleState{}
	if err := json.NewDecoder(state).Decode(arrfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arrfr.Type(), arrfr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arrfr *Resource) State() (*awsRoute53ResolverFirewallRuleState, bool) {
	return arrfr.state, arrfr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arrfr *Resource) StateMust() *awsRoute53ResolverFirewallRuleState {
	if arrfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arrfr.Type(), arrfr.LocalName()))
	}
	return arrfr.state
}

// Args contains the configurations for aws_route53_resolver_firewall_rule.
type Args struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// BlockOverrideDnsType: string, optional
	BlockOverrideDnsType terra.StringValue `hcl:"block_override_dns_type,attr"`
	// BlockOverrideDomain: string, optional
	BlockOverrideDomain terra.StringValue `hcl:"block_override_domain,attr"`
	// BlockOverrideTtl: number, optional
	BlockOverrideTtl terra.NumberValue `hcl:"block_override_ttl,attr"`
	// BlockResponse: string, optional
	BlockResponse terra.StringValue `hcl:"block_response,attr"`
	// FirewallDomainListId: string, required
	FirewallDomainListId terra.StringValue `hcl:"firewall_domain_list_id,attr" validate:"required"`
	// FirewallRuleGroupId: string, required
	FirewallRuleGroupId terra.StringValue `hcl:"firewall_rule_group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
}

type awsRoute53ResolverFirewallRuleAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("action"))
}

// BlockOverrideDnsType returns a reference to field block_override_dns_type of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) BlockOverrideDnsType() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("block_override_dns_type"))
}

// BlockOverrideDomain returns a reference to field block_override_domain of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) BlockOverrideDomain() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("block_override_domain"))
}

// BlockOverrideTtl returns a reference to field block_override_ttl of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) BlockOverrideTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(arrfr.ref.Append("block_override_ttl"))
}

// BlockResponse returns a reference to field block_response of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) BlockResponse() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("block_response"))
}

// FirewallDomainListId returns a reference to field firewall_domain_list_id of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) FirewallDomainListId() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("firewall_domain_list_id"))
}

// FirewallRuleGroupId returns a reference to field firewall_rule_group_id of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) FirewallRuleGroupId() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("firewall_rule_group_id"))
}

// Id returns a reference to field id of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("id"))
}

// Name returns a reference to field name of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arrfr.ref.Append("name"))
}

// Priority returns a reference to field priority of aws_route53_resolver_firewall_rule.
func (arrfr awsRoute53ResolverFirewallRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(arrfr.ref.Append("priority"))
}

type awsRoute53ResolverFirewallRuleState struct {
	Action               string  `json:"action"`
	BlockOverrideDnsType string  `json:"block_override_dns_type"`
	BlockOverrideDomain  string  `json:"block_override_domain"`
	BlockOverrideTtl     float64 `json:"block_override_ttl"`
	BlockResponse        string  `json:"block_response"`
	FirewallDomainListId string  `json:"firewall_domain_list_id"`
	FirewallRuleGroupId  string  `json:"firewall_rule_group_id"`
	Id                   string  `json:"id"`
	Name                 string  `json:"name"`
	Priority             float64 `json:"priority"`
}
