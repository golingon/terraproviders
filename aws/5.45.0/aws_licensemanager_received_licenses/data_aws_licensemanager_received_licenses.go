// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_licensemanager_received_licenses

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_licensemanager_received_licenses.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alrl *DataSource) DataSource() string {
	return "aws_licensemanager_received_licenses"
}

// LocalName returns the local name for [DataSource].
func (alrl *DataSource) LocalName() string {
	return alrl.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alrl *DataSource) Configuration() interface{} {
	return alrl.Args
}

// Attributes returns the attributes for [DataSource].
func (alrl *DataSource) Attributes() dataAwsLicensemanagerReceivedLicensesAttributes {
	return dataAwsLicensemanagerReceivedLicensesAttributes{ref: terra.ReferenceDataSource(alrl)}
}

// DataArgs contains the configurations for aws_licensemanager_received_licenses.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
}

type dataAwsLicensemanagerReceivedLicensesAttributes struct {
	ref terra.Reference
}

// Arns returns a reference to field arns of aws_licensemanager_received_licenses.
func (alrl dataAwsLicensemanagerReceivedLicensesAttributes) Arns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alrl.ref.Append("arns"))
}

// Id returns a reference to field id of aws_licensemanager_received_licenses.
func (alrl dataAwsLicensemanagerReceivedLicensesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("id"))
}

func (alrl dataAwsLicensemanagerReceivedLicensesAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](alrl.ref.Append("filter"))
}
