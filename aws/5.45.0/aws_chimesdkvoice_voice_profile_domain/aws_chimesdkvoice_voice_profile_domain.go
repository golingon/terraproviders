// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_chimesdkvoice_voice_profile_domain

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_chimesdkvoice_voice_profile_domain.
type Resource struct {
	Name      string
	Args      Args
	state     *awsChimesdkvoiceVoiceProfileDomainState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acvpd *Resource) Type() string {
	return "aws_chimesdkvoice_voice_profile_domain"
}

// LocalName returns the local name for [Resource].
func (acvpd *Resource) LocalName() string {
	return acvpd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acvpd *Resource) Configuration() interface{} {
	return acvpd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acvpd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acvpd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acvpd *Resource) Dependencies() terra.Dependencies {
	return acvpd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acvpd *Resource) LifecycleManagement() *terra.Lifecycle {
	return acvpd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acvpd *Resource) Attributes() awsChimesdkvoiceVoiceProfileDomainAttributes {
	return awsChimesdkvoiceVoiceProfileDomainAttributes{ref: terra.ReferenceResource(acvpd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acvpd *Resource) ImportState(state io.Reader) error {
	acvpd.state = &awsChimesdkvoiceVoiceProfileDomainState{}
	if err := json.NewDecoder(state).Decode(acvpd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acvpd.Type(), acvpd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acvpd *Resource) State() (*awsChimesdkvoiceVoiceProfileDomainState, bool) {
	return acvpd.state, acvpd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acvpd *Resource) StateMust() *awsChimesdkvoiceVoiceProfileDomainState {
	if acvpd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acvpd.Type(), acvpd.LocalName()))
	}
	return acvpd.state
}

// Args contains the configurations for aws_chimesdkvoice_voice_profile_domain.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// ServerSideEncryptionConfiguration: required
	ServerSideEncryptionConfiguration *ServerSideEncryptionConfiguration `hcl:"server_side_encryption_configuration,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsChimesdkvoiceVoiceProfileDomainAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_chimesdkvoice_voice_profile_domain.
func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acvpd.ref.Append("arn"))
}

// Description returns a reference to field description of aws_chimesdkvoice_voice_profile_domain.
func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(acvpd.ref.Append("description"))
}

// Id returns a reference to field id of aws_chimesdkvoice_voice_profile_domain.
func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acvpd.ref.Append("id"))
}

// Name returns a reference to field name of aws_chimesdkvoice_voice_profile_domain.
func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acvpd.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_chimesdkvoice_voice_profile_domain.
func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acvpd.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_chimesdkvoice_voice_profile_domain.
func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acvpd.ref.Append("tags_all"))
}

func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) ServerSideEncryptionConfiguration() terra.ListValue[ServerSideEncryptionConfigurationAttributes] {
	return terra.ReferenceAsList[ServerSideEncryptionConfigurationAttributes](acvpd.ref.Append("server_side_encryption_configuration"))
}

func (acvpd awsChimesdkvoiceVoiceProfileDomainAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acvpd.ref.Append("timeouts"))
}

type awsChimesdkvoiceVoiceProfileDomainState struct {
	Arn                               string                                   `json:"arn"`
	Description                       string                                   `json:"description"`
	Id                                string                                   `json:"id"`
	Name                              string                                   `json:"name"`
	Tags                              map[string]string                        `json:"tags"`
	TagsAll                           map[string]string                        `json:"tags_all"`
	ServerSideEncryptionConfiguration []ServerSideEncryptionConfigurationState `json:"server_side_encryption_configuration"`
	Timeouts                          *TimeoutsState                           `json:"timeouts"`
}
