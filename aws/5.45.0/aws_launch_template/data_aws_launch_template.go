// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_launch_template

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_launch_template.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alt *DataSource) DataSource() string {
	return "aws_launch_template"
}

// LocalName returns the local name for [DataSource].
func (alt *DataSource) LocalName() string {
	return alt.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alt *DataSource) Configuration() interface{} {
	return alt.Args
}

// Attributes returns the attributes for [DataSource].
func (alt *DataSource) Attributes() dataAwsLaunchTemplateAttributes {
	return dataAwsLaunchTemplateAttributes{ref: terra.ReferenceDataSource(alt)}
}

// DataArgs contains the configurations for aws_launch_template.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsLaunchTemplateAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("arn"))
}

// DefaultVersion returns a reference to field default_version of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) DefaultVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(alt.ref.Append("default_version"))
}

// Description returns a reference to field description of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("description"))
}

// DisableApiStop returns a reference to field disable_api_stop of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) DisableApiStop() terra.BoolValue {
	return terra.ReferenceAsBool(alt.ref.Append("disable_api_stop"))
}

// DisableApiTermination returns a reference to field disable_api_termination of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) DisableApiTermination() terra.BoolValue {
	return terra.ReferenceAsBool(alt.ref.Append("disable_api_termination"))
}

// EbsOptimized returns a reference to field ebs_optimized of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) EbsOptimized() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("ebs_optimized"))
}

// Id returns a reference to field id of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("id"))
}

// ImageId returns a reference to field image_id of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) ImageId() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("image_id"))
}

// InstanceInitiatedShutdownBehavior returns a reference to field instance_initiated_shutdown_behavior of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) InstanceInitiatedShutdownBehavior() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("instance_initiated_shutdown_behavior"))
}

// InstanceType returns a reference to field instance_type of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("instance_type"))
}

// KernelId returns a reference to field kernel_id of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) KernelId() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("kernel_id"))
}

// KeyName returns a reference to field key_name of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("key_name"))
}

// LatestVersion returns a reference to field latest_version of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) LatestVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(alt.ref.Append("latest_version"))
}

// Name returns a reference to field name of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("name"))
}

// RamDiskId returns a reference to field ram_disk_id of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) RamDiskId() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("ram_disk_id"))
}

// SecurityGroupNames returns a reference to field security_group_names of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) SecurityGroupNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](alt.ref.Append("security_group_names"))
}

// Tags returns a reference to field tags of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](alt.ref.Append("tags"))
}

// UserData returns a reference to field user_data of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) UserData() terra.StringValue {
	return terra.ReferenceAsString(alt.ref.Append("user_data"))
}

// VpcSecurityGroupIds returns a reference to field vpc_security_group_ids of aws_launch_template.
func (alt dataAwsLaunchTemplateAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](alt.ref.Append("vpc_security_group_ids"))
}

func (alt dataAwsLaunchTemplateAttributes) BlockDeviceMappings() terra.ListValue[DataBlockDeviceMappingsAttributes] {
	return terra.ReferenceAsList[DataBlockDeviceMappingsAttributes](alt.ref.Append("block_device_mappings"))
}

func (alt dataAwsLaunchTemplateAttributes) CapacityReservationSpecification() terra.ListValue[DataCapacityReservationSpecificationAttributes] {
	return terra.ReferenceAsList[DataCapacityReservationSpecificationAttributes](alt.ref.Append("capacity_reservation_specification"))
}

func (alt dataAwsLaunchTemplateAttributes) CpuOptions() terra.ListValue[DataCpuOptionsAttributes] {
	return terra.ReferenceAsList[DataCpuOptionsAttributes](alt.ref.Append("cpu_options"))
}

func (alt dataAwsLaunchTemplateAttributes) CreditSpecification() terra.ListValue[DataCreditSpecificationAttributes] {
	return terra.ReferenceAsList[DataCreditSpecificationAttributes](alt.ref.Append("credit_specification"))
}

func (alt dataAwsLaunchTemplateAttributes) ElasticGpuSpecifications() terra.ListValue[DataElasticGpuSpecificationsAttributes] {
	return terra.ReferenceAsList[DataElasticGpuSpecificationsAttributes](alt.ref.Append("elastic_gpu_specifications"))
}

func (alt dataAwsLaunchTemplateAttributes) ElasticInferenceAccelerator() terra.ListValue[DataElasticInferenceAcceleratorAttributes] {
	return terra.ReferenceAsList[DataElasticInferenceAcceleratorAttributes](alt.ref.Append("elastic_inference_accelerator"))
}

func (alt dataAwsLaunchTemplateAttributes) EnclaveOptions() terra.ListValue[DataEnclaveOptionsAttributes] {
	return terra.ReferenceAsList[DataEnclaveOptionsAttributes](alt.ref.Append("enclave_options"))
}

func (alt dataAwsLaunchTemplateAttributes) HibernationOptions() terra.ListValue[DataHibernationOptionsAttributes] {
	return terra.ReferenceAsList[DataHibernationOptionsAttributes](alt.ref.Append("hibernation_options"))
}

func (alt dataAwsLaunchTemplateAttributes) IamInstanceProfile() terra.ListValue[DataIamInstanceProfileAttributes] {
	return terra.ReferenceAsList[DataIamInstanceProfileAttributes](alt.ref.Append("iam_instance_profile"))
}

func (alt dataAwsLaunchTemplateAttributes) InstanceMarketOptions() terra.ListValue[DataInstanceMarketOptionsAttributes] {
	return terra.ReferenceAsList[DataInstanceMarketOptionsAttributes](alt.ref.Append("instance_market_options"))
}

func (alt dataAwsLaunchTemplateAttributes) InstanceRequirements() terra.ListValue[DataInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsAttributes](alt.ref.Append("instance_requirements"))
}

func (alt dataAwsLaunchTemplateAttributes) LicenseSpecification() terra.ListValue[DataLicenseSpecificationAttributes] {
	return terra.ReferenceAsList[DataLicenseSpecificationAttributes](alt.ref.Append("license_specification"))
}

func (alt dataAwsLaunchTemplateAttributes) MaintenanceOptions() terra.ListValue[DataMaintenanceOptionsAttributes] {
	return terra.ReferenceAsList[DataMaintenanceOptionsAttributes](alt.ref.Append("maintenance_options"))
}

func (alt dataAwsLaunchTemplateAttributes) MetadataOptions() terra.ListValue[DataMetadataOptionsAttributes] {
	return terra.ReferenceAsList[DataMetadataOptionsAttributes](alt.ref.Append("metadata_options"))
}

func (alt dataAwsLaunchTemplateAttributes) Monitoring() terra.ListValue[DataMonitoringAttributes] {
	return terra.ReferenceAsList[DataMonitoringAttributes](alt.ref.Append("monitoring"))
}

func (alt dataAwsLaunchTemplateAttributes) NetworkInterfaces() terra.ListValue[DataNetworkInterfacesAttributes] {
	return terra.ReferenceAsList[DataNetworkInterfacesAttributes](alt.ref.Append("network_interfaces"))
}

func (alt dataAwsLaunchTemplateAttributes) Placement() terra.ListValue[DataPlacementAttributes] {
	return terra.ReferenceAsList[DataPlacementAttributes](alt.ref.Append("placement"))
}

func (alt dataAwsLaunchTemplateAttributes) PrivateDnsNameOptions() terra.ListValue[DataPrivateDnsNameOptionsAttributes] {
	return terra.ReferenceAsList[DataPrivateDnsNameOptionsAttributes](alt.ref.Append("private_dns_name_options"))
}

func (alt dataAwsLaunchTemplateAttributes) TagSpecifications() terra.ListValue[DataTagSpecificationsAttributes] {
	return terra.ReferenceAsList[DataTagSpecificationsAttributes](alt.ref.Append("tag_specifications"))
}

func (alt dataAwsLaunchTemplateAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](alt.ref.Append("filter"))
}

func (alt dataAwsLaunchTemplateAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](alt.ref.Append("timeouts"))
}
