// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_launch_template

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values: set of string, required
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataBlockDeviceMappingsAttributes struct {
	ref terra.Reference
}

func (bdm DataBlockDeviceMappingsAttributes) InternalRef() (terra.Reference, error) {
	return bdm.ref, nil
}

func (bdm DataBlockDeviceMappingsAttributes) InternalWithRef(ref terra.Reference) DataBlockDeviceMappingsAttributes {
	return DataBlockDeviceMappingsAttributes{ref: ref}
}

func (bdm DataBlockDeviceMappingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bdm.ref.InternalTokens()
}

func (bdm DataBlockDeviceMappingsAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("device_name"))
}

func (bdm DataBlockDeviceMappingsAttributes) NoDevice() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("no_device"))
}

func (bdm DataBlockDeviceMappingsAttributes) VirtualName() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("virtual_name"))
}

func (bdm DataBlockDeviceMappingsAttributes) Ebs() terra.ListValue[DataBlockDeviceMappingsEbsAttributes] {
	return terra.ReferenceAsList[DataBlockDeviceMappingsEbsAttributes](bdm.ref.Append("ebs"))
}

type DataBlockDeviceMappingsEbsAttributes struct {
	ref terra.Reference
}

func (e DataBlockDeviceMappingsEbsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataBlockDeviceMappingsEbsAttributes) InternalWithRef(ref terra.Reference) DataBlockDeviceMappingsEbsAttributes {
	return DataBlockDeviceMappingsEbsAttributes{ref: ref}
}

func (e DataBlockDeviceMappingsEbsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataBlockDeviceMappingsEbsAttributes) DeleteOnTermination() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("delete_on_termination"))
}

func (e DataBlockDeviceMappingsEbsAttributes) Encrypted() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("encrypted"))
}

func (e DataBlockDeviceMappingsEbsAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("iops"))
}

func (e DataBlockDeviceMappingsEbsAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kms_key_id"))
}

func (e DataBlockDeviceMappingsEbsAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("snapshot_id"))
}

func (e DataBlockDeviceMappingsEbsAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("throughput"))
}

func (e DataBlockDeviceMappingsEbsAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("volume_size"))
}

func (e DataBlockDeviceMappingsEbsAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("volume_type"))
}

type DataCapacityReservationSpecificationAttributes struct {
	ref terra.Reference
}

func (crs DataCapacityReservationSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return crs.ref, nil
}

func (crs DataCapacityReservationSpecificationAttributes) InternalWithRef(ref terra.Reference) DataCapacityReservationSpecificationAttributes {
	return DataCapacityReservationSpecificationAttributes{ref: ref}
}

func (crs DataCapacityReservationSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return crs.ref.InternalTokens()
}

func (crs DataCapacityReservationSpecificationAttributes) CapacityReservationPreference() terra.StringValue {
	return terra.ReferenceAsString(crs.ref.Append("capacity_reservation_preference"))
}

func (crs DataCapacityReservationSpecificationAttributes) CapacityReservationTarget() terra.ListValue[DataCapacityReservationSpecificationCapacityReservationTargetAttributes] {
	return terra.ReferenceAsList[DataCapacityReservationSpecificationCapacityReservationTargetAttributes](crs.ref.Append("capacity_reservation_target"))
}

type DataCapacityReservationSpecificationCapacityReservationTargetAttributes struct {
	ref terra.Reference
}

func (crt DataCapacityReservationSpecificationCapacityReservationTargetAttributes) InternalRef() (terra.Reference, error) {
	return crt.ref, nil
}

func (crt DataCapacityReservationSpecificationCapacityReservationTargetAttributes) InternalWithRef(ref terra.Reference) DataCapacityReservationSpecificationCapacityReservationTargetAttributes {
	return DataCapacityReservationSpecificationCapacityReservationTargetAttributes{ref: ref}
}

func (crt DataCapacityReservationSpecificationCapacityReservationTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return crt.ref.InternalTokens()
}

func (crt DataCapacityReservationSpecificationCapacityReservationTargetAttributes) CapacityReservationId() terra.StringValue {
	return terra.ReferenceAsString(crt.ref.Append("capacity_reservation_id"))
}

func (crt DataCapacityReservationSpecificationCapacityReservationTargetAttributes) CapacityReservationResourceGroupArn() terra.StringValue {
	return terra.ReferenceAsString(crt.ref.Append("capacity_reservation_resource_group_arn"))
}

type DataCpuOptionsAttributes struct {
	ref terra.Reference
}

func (co DataCpuOptionsAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co DataCpuOptionsAttributes) InternalWithRef(ref terra.Reference) DataCpuOptionsAttributes {
	return DataCpuOptionsAttributes{ref: ref}
}

func (co DataCpuOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co DataCpuOptionsAttributes) AmdSevSnp() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("amd_sev_snp"))
}

func (co DataCpuOptionsAttributes) CoreCount() terra.NumberValue {
	return terra.ReferenceAsNumber(co.ref.Append("core_count"))
}

func (co DataCpuOptionsAttributes) ThreadsPerCore() terra.NumberValue {
	return terra.ReferenceAsNumber(co.ref.Append("threads_per_core"))
}

type DataCreditSpecificationAttributes struct {
	ref terra.Reference
}

func (cs DataCreditSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs DataCreditSpecificationAttributes) InternalWithRef(ref terra.Reference) DataCreditSpecificationAttributes {
	return DataCreditSpecificationAttributes{ref: ref}
}

func (cs DataCreditSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs DataCreditSpecificationAttributes) CpuCredits() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("cpu_credits"))
}

type DataElasticGpuSpecificationsAttributes struct {
	ref terra.Reference
}

func (egs DataElasticGpuSpecificationsAttributes) InternalRef() (terra.Reference, error) {
	return egs.ref, nil
}

func (egs DataElasticGpuSpecificationsAttributes) InternalWithRef(ref terra.Reference) DataElasticGpuSpecificationsAttributes {
	return DataElasticGpuSpecificationsAttributes{ref: ref}
}

func (egs DataElasticGpuSpecificationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return egs.ref.InternalTokens()
}

func (egs DataElasticGpuSpecificationsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(egs.ref.Append("type"))
}

type DataElasticInferenceAcceleratorAttributes struct {
	ref terra.Reference
}

func (eia DataElasticInferenceAcceleratorAttributes) InternalRef() (terra.Reference, error) {
	return eia.ref, nil
}

func (eia DataElasticInferenceAcceleratorAttributes) InternalWithRef(ref terra.Reference) DataElasticInferenceAcceleratorAttributes {
	return DataElasticInferenceAcceleratorAttributes{ref: ref}
}

func (eia DataElasticInferenceAcceleratorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eia.ref.InternalTokens()
}

func (eia DataElasticInferenceAcceleratorAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(eia.ref.Append("type"))
}

type DataEnclaveOptionsAttributes struct {
	ref terra.Reference
}

func (eo DataEnclaveOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo DataEnclaveOptionsAttributes) InternalWithRef(ref terra.Reference) DataEnclaveOptionsAttributes {
	return DataEnclaveOptionsAttributes{ref: ref}
}

func (eo DataEnclaveOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo DataEnclaveOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(eo.ref.Append("enabled"))
}

type DataHibernationOptionsAttributes struct {
	ref terra.Reference
}

func (ho DataHibernationOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ho.ref, nil
}

func (ho DataHibernationOptionsAttributes) InternalWithRef(ref terra.Reference) DataHibernationOptionsAttributes {
	return DataHibernationOptionsAttributes{ref: ref}
}

func (ho DataHibernationOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ho.ref.InternalTokens()
}

func (ho DataHibernationOptionsAttributes) Configured() terra.BoolValue {
	return terra.ReferenceAsBool(ho.ref.Append("configured"))
}

type DataIamInstanceProfileAttributes struct {
	ref terra.Reference
}

func (iip DataIamInstanceProfileAttributes) InternalRef() (terra.Reference, error) {
	return iip.ref, nil
}

func (iip DataIamInstanceProfileAttributes) InternalWithRef(ref terra.Reference) DataIamInstanceProfileAttributes {
	return DataIamInstanceProfileAttributes{ref: ref}
}

func (iip DataIamInstanceProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return iip.ref.InternalTokens()
}

func (iip DataIamInstanceProfileAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(iip.ref.Append("arn"))
}

func (iip DataIamInstanceProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(iip.ref.Append("name"))
}

type DataInstanceMarketOptionsAttributes struct {
	ref terra.Reference
}

func (imo DataInstanceMarketOptionsAttributes) InternalRef() (terra.Reference, error) {
	return imo.ref, nil
}

func (imo DataInstanceMarketOptionsAttributes) InternalWithRef(ref terra.Reference) DataInstanceMarketOptionsAttributes {
	return DataInstanceMarketOptionsAttributes{ref: ref}
}

func (imo DataInstanceMarketOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return imo.ref.InternalTokens()
}

func (imo DataInstanceMarketOptionsAttributes) MarketType() terra.StringValue {
	return terra.ReferenceAsString(imo.ref.Append("market_type"))
}

func (imo DataInstanceMarketOptionsAttributes) SpotOptions() terra.ListValue[DataInstanceMarketOptionsSpotOptionsAttributes] {
	return terra.ReferenceAsList[DataInstanceMarketOptionsSpotOptionsAttributes](imo.ref.Append("spot_options"))
}

type DataInstanceMarketOptionsSpotOptionsAttributes struct {
	ref terra.Reference
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) InternalWithRef(ref terra.Reference) DataInstanceMarketOptionsSpotOptionsAttributes {
	return DataInstanceMarketOptionsSpotOptionsAttributes{ref: ref}
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) BlockDurationMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(so.ref.Append("block_duration_minutes"))
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) InstanceInterruptionBehavior() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("instance_interruption_behavior"))
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) MaxPrice() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("max_price"))
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) SpotInstanceType() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("spot_instance_type"))
}

func (so DataInstanceMarketOptionsSpotOptionsAttributes) ValidUntil() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("valid_until"))
}

type DataInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir DataInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir DataInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsAttributes {
	return DataInstanceRequirementsAttributes{ref: ref}
}

func (ir DataInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir DataInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir DataInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir DataInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir DataInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir DataInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir DataInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir DataInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir DataInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir DataInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir DataInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir DataInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir DataInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir DataInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir DataInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir DataInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[DataInstanceRequirementsAcceleratorCountAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsAcceleratorCountAttributes](ir.ref.Append("accelerator_count"))
}

func (ir DataInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir DataInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir DataInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[DataInstanceRequirementsMemoryGibPerVcpuAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsMemoryGibPerVcpuAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir DataInstanceRequirementsAttributes) MemoryMib() terra.ListValue[DataInstanceRequirementsMemoryMibAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsMemoryMibAttributes](ir.ref.Append("memory_mib"))
}

func (ir DataInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[DataInstanceRequirementsNetworkBandwidthGbpsAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsNetworkBandwidthGbpsAttributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir DataInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[DataInstanceRequirementsNetworkInterfaceCountAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsNetworkInterfaceCountAttributes](ir.ref.Append("network_interface_count"))
}

func (ir DataInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[DataInstanceRequirementsTotalLocalStorageGbAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsTotalLocalStorageGbAttributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir DataInstanceRequirementsAttributes) VcpuCount() terra.ListValue[DataInstanceRequirementsVcpuCountAttributes] {
	return terra.ReferenceAsList[DataInstanceRequirementsVcpuCountAttributes](ir.ref.Append("vcpu_count"))
}

type DataInstanceRequirementsAcceleratorCountAttributes struct {
	ref terra.Reference
}

func (ac DataInstanceRequirementsAcceleratorCountAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac DataInstanceRequirementsAcceleratorCountAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsAcceleratorCountAttributes {
	return DataInstanceRequirementsAcceleratorCountAttributes{ref: ref}
}

func (ac DataInstanceRequirementsAcceleratorCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac DataInstanceRequirementsAcceleratorCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac DataInstanceRequirementsAcceleratorCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes struct {
	ref terra.Reference
}

func (atmm DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes {
	return DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes{ref: ref}
}

func (atmm DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm DataInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes struct {
	ref terra.Reference
}

func (bebm DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes {
	return DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes{ref: ref}
}

func (bebm DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm DataInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type DataInstanceRequirementsMemoryGibPerVcpuAttributes struct {
	ref terra.Reference
}

func (mgpv DataInstanceRequirementsMemoryGibPerVcpuAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv DataInstanceRequirementsMemoryGibPerVcpuAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsMemoryGibPerVcpuAttributes {
	return DataInstanceRequirementsMemoryGibPerVcpuAttributes{ref: ref}
}

func (mgpv DataInstanceRequirementsMemoryGibPerVcpuAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv DataInstanceRequirementsMemoryGibPerVcpuAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv DataInstanceRequirementsMemoryGibPerVcpuAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type DataInstanceRequirementsMemoryMibAttributes struct {
	ref terra.Reference
}

func (mm DataInstanceRequirementsMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm DataInstanceRequirementsMemoryMibAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsMemoryMibAttributes {
	return DataInstanceRequirementsMemoryMibAttributes{ref: ref}
}

func (mm DataInstanceRequirementsMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm DataInstanceRequirementsMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm DataInstanceRequirementsMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type DataInstanceRequirementsNetworkBandwidthGbpsAttributes struct {
	ref terra.Reference
}

func (nbg DataInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg DataInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsNetworkBandwidthGbpsAttributes {
	return DataInstanceRequirementsNetworkBandwidthGbpsAttributes{ref: ref}
}

func (nbg DataInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg DataInstanceRequirementsNetworkBandwidthGbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg DataInstanceRequirementsNetworkBandwidthGbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type DataInstanceRequirementsNetworkInterfaceCountAttributes struct {
	ref terra.Reference
}

func (nic DataInstanceRequirementsNetworkInterfaceCountAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic DataInstanceRequirementsNetworkInterfaceCountAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsNetworkInterfaceCountAttributes {
	return DataInstanceRequirementsNetworkInterfaceCountAttributes{ref: ref}
}

func (nic DataInstanceRequirementsNetworkInterfaceCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic DataInstanceRequirementsNetworkInterfaceCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic DataInstanceRequirementsNetworkInterfaceCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type DataInstanceRequirementsTotalLocalStorageGbAttributes struct {
	ref terra.Reference
}

func (tlsg DataInstanceRequirementsTotalLocalStorageGbAttributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg DataInstanceRequirementsTotalLocalStorageGbAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsTotalLocalStorageGbAttributes {
	return DataInstanceRequirementsTotalLocalStorageGbAttributes{ref: ref}
}

func (tlsg DataInstanceRequirementsTotalLocalStorageGbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg DataInstanceRequirementsTotalLocalStorageGbAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg DataInstanceRequirementsTotalLocalStorageGbAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type DataInstanceRequirementsVcpuCountAttributes struct {
	ref terra.Reference
}

func (vc DataInstanceRequirementsVcpuCountAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc DataInstanceRequirementsVcpuCountAttributes) InternalWithRef(ref terra.Reference) DataInstanceRequirementsVcpuCountAttributes {
	return DataInstanceRequirementsVcpuCountAttributes{ref: ref}
}

func (vc DataInstanceRequirementsVcpuCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc DataInstanceRequirementsVcpuCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc DataInstanceRequirementsVcpuCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type DataLicenseSpecificationAttributes struct {
	ref terra.Reference
}

func (ls DataLicenseSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return ls.ref, nil
}

func (ls DataLicenseSpecificationAttributes) InternalWithRef(ref terra.Reference) DataLicenseSpecificationAttributes {
	return DataLicenseSpecificationAttributes{ref: ref}
}

func (ls DataLicenseSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ls.ref.InternalTokens()
}

func (ls DataLicenseSpecificationAttributes) LicenseConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("license_configuration_arn"))
}

type DataMaintenanceOptionsAttributes struct {
	ref terra.Reference
}

func (mo DataMaintenanceOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo DataMaintenanceOptionsAttributes) InternalWithRef(ref terra.Reference) DataMaintenanceOptionsAttributes {
	return DataMaintenanceOptionsAttributes{ref: ref}
}

func (mo DataMaintenanceOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo DataMaintenanceOptionsAttributes) AutoRecovery() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("auto_recovery"))
}

type DataMetadataOptionsAttributes struct {
	ref terra.Reference
}

func (mo DataMetadataOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo DataMetadataOptionsAttributes) InternalWithRef(ref terra.Reference) DataMetadataOptionsAttributes {
	return DataMetadataOptionsAttributes{ref: ref}
}

func (mo DataMetadataOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo DataMetadataOptionsAttributes) HttpEndpoint() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("http_endpoint"))
}

func (mo DataMetadataOptionsAttributes) HttpProtocolIpv6() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("http_protocol_ipv6"))
}

func (mo DataMetadataOptionsAttributes) HttpPutResponseHopLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(mo.ref.Append("http_put_response_hop_limit"))
}

func (mo DataMetadataOptionsAttributes) HttpTokens() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("http_tokens"))
}

func (mo DataMetadataOptionsAttributes) InstanceMetadataTags() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("instance_metadata_tags"))
}

type DataMonitoringAttributes struct {
	ref terra.Reference
}

func (m DataMonitoringAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataMonitoringAttributes) InternalWithRef(ref terra.Reference) DataMonitoringAttributes {
	return DataMonitoringAttributes{ref: ref}
}

func (m DataMonitoringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataMonitoringAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("enabled"))
}

type DataNetworkInterfacesAttributes struct {
	ref terra.Reference
}

func (ni DataNetworkInterfacesAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni DataNetworkInterfacesAttributes) InternalWithRef(ref terra.Reference) DataNetworkInterfacesAttributes {
	return DataNetworkInterfacesAttributes{ref: ref}
}

func (ni DataNetworkInterfacesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ni.ref.InternalTokens()
}

func (ni DataNetworkInterfacesAttributes) AssociateCarrierIpAddress() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("associate_carrier_ip_address"))
}

func (ni DataNetworkInterfacesAttributes) AssociatePublicIpAddress() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("associate_public_ip_address"))
}

func (ni DataNetworkInterfacesAttributes) DeleteOnTermination() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("delete_on_termination"))
}

func (ni DataNetworkInterfacesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("description"))
}

func (ni DataNetworkInterfacesAttributes) DeviceIndex() terra.NumberValue {
	return terra.ReferenceAsNumber(ni.ref.Append("device_index"))
}

func (ni DataNetworkInterfacesAttributes) InterfaceType() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("interface_type"))
}

func (ni DataNetworkInterfacesAttributes) Ipv4AddressCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ni.ref.Append("ipv4_address_count"))
}

func (ni DataNetworkInterfacesAttributes) Ipv4Addresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ni.ref.Append("ipv4_addresses"))
}

func (ni DataNetworkInterfacesAttributes) Ipv4PrefixCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ni.ref.Append("ipv4_prefix_count"))
}

func (ni DataNetworkInterfacesAttributes) Ipv4Prefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ni.ref.Append("ipv4_prefixes"))
}

func (ni DataNetworkInterfacesAttributes) Ipv6AddressCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ni.ref.Append("ipv6_address_count"))
}

func (ni DataNetworkInterfacesAttributes) Ipv6Addresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ni.ref.Append("ipv6_addresses"))
}

func (ni DataNetworkInterfacesAttributes) Ipv6PrefixCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ni.ref.Append("ipv6_prefix_count"))
}

func (ni DataNetworkInterfacesAttributes) Ipv6Prefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ni.ref.Append("ipv6_prefixes"))
}

func (ni DataNetworkInterfacesAttributes) NetworkCardIndex() terra.NumberValue {
	return terra.ReferenceAsNumber(ni.ref.Append("network_card_index"))
}

func (ni DataNetworkInterfacesAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("network_interface_id"))
}

func (ni DataNetworkInterfacesAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("private_ip_address"))
}

func (ni DataNetworkInterfacesAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ni.ref.Append("security_groups"))
}

func (ni DataNetworkInterfacesAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("subnet_id"))
}

type DataPlacementAttributes struct {
	ref terra.Reference
}

func (p DataPlacementAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataPlacementAttributes) InternalWithRef(ref terra.Reference) DataPlacementAttributes {
	return DataPlacementAttributes{ref: ref}
}

func (p DataPlacementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataPlacementAttributes) Affinity() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("affinity"))
}

func (p DataPlacementAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("availability_zone"))
}

func (p DataPlacementAttributes) GroupName() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("group_name"))
}

func (p DataPlacementAttributes) HostId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("host_id"))
}

func (p DataPlacementAttributes) HostResourceGroupArn() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("host_resource_group_arn"))
}

func (p DataPlacementAttributes) PartitionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("partition_number"))
}

func (p DataPlacementAttributes) SpreadDomain() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("spread_domain"))
}

func (p DataPlacementAttributes) Tenancy() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("tenancy"))
}

type DataPrivateDnsNameOptionsAttributes struct {
	ref terra.Reference
}

func (pdno DataPrivateDnsNameOptionsAttributes) InternalRef() (terra.Reference, error) {
	return pdno.ref, nil
}

func (pdno DataPrivateDnsNameOptionsAttributes) InternalWithRef(ref terra.Reference) DataPrivateDnsNameOptionsAttributes {
	return DataPrivateDnsNameOptionsAttributes{ref: ref}
}

func (pdno DataPrivateDnsNameOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pdno.ref.InternalTokens()
}

func (pdno DataPrivateDnsNameOptionsAttributes) EnableResourceNameDnsARecord() terra.BoolValue {
	return terra.ReferenceAsBool(pdno.ref.Append("enable_resource_name_dns_a_record"))
}

func (pdno DataPrivateDnsNameOptionsAttributes) EnableResourceNameDnsAaaaRecord() terra.BoolValue {
	return terra.ReferenceAsBool(pdno.ref.Append("enable_resource_name_dns_aaaa_record"))
}

func (pdno DataPrivateDnsNameOptionsAttributes) HostnameType() terra.StringValue {
	return terra.ReferenceAsString(pdno.ref.Append("hostname_type"))
}

type DataTagSpecificationsAttributes struct {
	ref terra.Reference
}

func (ts DataTagSpecificationsAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts DataTagSpecificationsAttributes) InternalWithRef(ref terra.Reference) DataTagSpecificationsAttributes {
	return DataTagSpecificationsAttributes{ref: ref}
}

func (ts DataTagSpecificationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts DataTagSpecificationsAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("resource_type"))
}

func (ts DataTagSpecificationsAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ts.ref.Append("tags"))
}

type DataFilterAttributes struct {
	ref terra.Reference
}

func (f DataFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFilterAttributes) InternalWithRef(ref terra.Reference) DataFilterAttributes {
	return DataFilterAttributes{ref: ref}
}

func (f DataFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DataFilterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](f.ref.Append("values"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataBlockDeviceMappingsState struct {
	DeviceName  string                            `json:"device_name"`
	NoDevice    string                            `json:"no_device"`
	VirtualName string                            `json:"virtual_name"`
	Ebs         []DataBlockDeviceMappingsEbsState `json:"ebs"`
}

type DataBlockDeviceMappingsEbsState struct {
	DeleteOnTermination string  `json:"delete_on_termination"`
	Encrypted           string  `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	SnapshotId          string  `json:"snapshot_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type DataCapacityReservationSpecificationState struct {
	CapacityReservationPreference string                                                               `json:"capacity_reservation_preference"`
	CapacityReservationTarget     []DataCapacityReservationSpecificationCapacityReservationTargetState `json:"capacity_reservation_target"`
}

type DataCapacityReservationSpecificationCapacityReservationTargetState struct {
	CapacityReservationId               string `json:"capacity_reservation_id"`
	CapacityReservationResourceGroupArn string `json:"capacity_reservation_resource_group_arn"`
}

type DataCpuOptionsState struct {
	AmdSevSnp      string  `json:"amd_sev_snp"`
	CoreCount      float64 `json:"core_count"`
	ThreadsPerCore float64 `json:"threads_per_core"`
}

type DataCreditSpecificationState struct {
	CpuCredits string `json:"cpu_credits"`
}

type DataElasticGpuSpecificationsState struct {
	Type string `json:"type"`
}

type DataElasticInferenceAcceleratorState struct {
	Type string `json:"type"`
}

type DataEnclaveOptionsState struct {
	Enabled bool `json:"enabled"`
}

type DataHibernationOptionsState struct {
	Configured bool `json:"configured"`
}

type DataIamInstanceProfileState struct {
	Arn  string `json:"arn"`
	Name string `json:"name"`
}

type DataInstanceMarketOptionsState struct {
	MarketType  string                                      `json:"market_type"`
	SpotOptions []DataInstanceMarketOptionsSpotOptionsState `json:"spot_options"`
}

type DataInstanceMarketOptionsSpotOptionsState struct {
	BlockDurationMinutes         float64 `json:"block_duration_minutes"`
	InstanceInterruptionBehavior string  `json:"instance_interruption_behavior"`
	MaxPrice                     string  `json:"max_price"`
	SpotInstanceType             string  `json:"spot_instance_type"`
	ValidUntil                   string  `json:"valid_until"`
}

type DataInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                                 `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                                 `json:"accelerator_names"`
	AcceleratorTypes                          []string                                                 `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                                 `json:"allowed_instance_types"`
	BareMetal                                 string                                                   `json:"bare_metal"`
	BurstablePerformance                      string                                                   `json:"burstable_performance"`
	CpuManufacturers                          []string                                                 `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                                 `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                                 `json:"instance_generations"`
	LocalStorage                              string                                                   `json:"local_storage"`
	LocalStorageTypes                         []string                                                 `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                                  `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                                     `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                                  `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []DataInstanceRequirementsAcceleratorCountState          `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []DataInstanceRequirementsAcceleratorTotalMemoryMibState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []DataInstanceRequirementsBaselineEbsBandwidthMbpsState  `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []DataInstanceRequirementsMemoryGibPerVcpuState          `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []DataInstanceRequirementsMemoryMibState                 `json:"memory_mib"`
	NetworkBandwidthGbps                      []DataInstanceRequirementsNetworkBandwidthGbpsState      `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []DataInstanceRequirementsNetworkInterfaceCountState     `json:"network_interface_count"`
	TotalLocalStorageGb                       []DataInstanceRequirementsTotalLocalStorageGbState       `json:"total_local_storage_gb"`
	VcpuCount                                 []DataInstanceRequirementsVcpuCountState                 `json:"vcpu_count"`
}

type DataInstanceRequirementsAcceleratorCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsAcceleratorTotalMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsBaselineEbsBandwidthMbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsMemoryGibPerVcpuState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsNetworkBandwidthGbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsNetworkInterfaceCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsTotalLocalStorageGbState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataInstanceRequirementsVcpuCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type DataLicenseSpecificationState struct {
	LicenseConfigurationArn string `json:"license_configuration_arn"`
}

type DataMaintenanceOptionsState struct {
	AutoRecovery string `json:"auto_recovery"`
}

type DataMetadataOptionsState struct {
	HttpEndpoint            string  `json:"http_endpoint"`
	HttpProtocolIpv6        string  `json:"http_protocol_ipv6"`
	HttpPutResponseHopLimit float64 `json:"http_put_response_hop_limit"`
	HttpTokens              string  `json:"http_tokens"`
	InstanceMetadataTags    string  `json:"instance_metadata_tags"`
}

type DataMonitoringState struct {
	Enabled bool `json:"enabled"`
}

type DataNetworkInterfacesState struct {
	AssociateCarrierIpAddress string   `json:"associate_carrier_ip_address"`
	AssociatePublicIpAddress  string   `json:"associate_public_ip_address"`
	DeleteOnTermination       string   `json:"delete_on_termination"`
	Description               string   `json:"description"`
	DeviceIndex               float64  `json:"device_index"`
	InterfaceType             string   `json:"interface_type"`
	Ipv4AddressCount          float64  `json:"ipv4_address_count"`
	Ipv4Addresses             []string `json:"ipv4_addresses"`
	Ipv4PrefixCount           float64  `json:"ipv4_prefix_count"`
	Ipv4Prefixes              []string `json:"ipv4_prefixes"`
	Ipv6AddressCount          float64  `json:"ipv6_address_count"`
	Ipv6Addresses             []string `json:"ipv6_addresses"`
	Ipv6PrefixCount           float64  `json:"ipv6_prefix_count"`
	Ipv6Prefixes              []string `json:"ipv6_prefixes"`
	NetworkCardIndex          float64  `json:"network_card_index"`
	NetworkInterfaceId        string   `json:"network_interface_id"`
	PrivateIpAddress          string   `json:"private_ip_address"`
	SecurityGroups            []string `json:"security_groups"`
	SubnetId                  string   `json:"subnet_id"`
}

type DataPlacementState struct {
	Affinity             string  `json:"affinity"`
	AvailabilityZone     string  `json:"availability_zone"`
	GroupName            string  `json:"group_name"`
	HostId               string  `json:"host_id"`
	HostResourceGroupArn string  `json:"host_resource_group_arn"`
	PartitionNumber      float64 `json:"partition_number"`
	SpreadDomain         string  `json:"spread_domain"`
	Tenancy              string  `json:"tenancy"`
}

type DataPrivateDnsNameOptionsState struct {
	EnableResourceNameDnsARecord    bool   `json:"enable_resource_name_dns_a_record"`
	EnableResourceNameDnsAaaaRecord bool   `json:"enable_resource_name_dns_aaaa_record"`
	HostnameType                    string `json:"hostname_type"`
}

type DataTagSpecificationsState struct {
	ResourceType string            `json:"resource_type"`
	Tags         map[string]string `json:"tags"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
