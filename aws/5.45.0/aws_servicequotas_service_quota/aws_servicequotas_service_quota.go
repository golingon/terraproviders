// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicequotas_service_quota

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_servicequotas_service_quota.
type Resource struct {
	Name      string
	Args      Args
	state     *awsServicequotasServiceQuotaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (assq *Resource) Type() string {
	return "aws_servicequotas_service_quota"
}

// LocalName returns the local name for [Resource].
func (assq *Resource) LocalName() string {
	return assq.Name
}

// Configuration returns the configuration (args) for [Resource].
func (assq *Resource) Configuration() interface{} {
	return assq.Args
}

// DependOn is used for other resources to depend on [Resource].
func (assq *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(assq)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (assq *Resource) Dependencies() terra.Dependencies {
	return assq.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (assq *Resource) LifecycleManagement() *terra.Lifecycle {
	return assq.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (assq *Resource) Attributes() awsServicequotasServiceQuotaAttributes {
	return awsServicequotasServiceQuotaAttributes{ref: terra.ReferenceResource(assq)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (assq *Resource) ImportState(state io.Reader) error {
	assq.state = &awsServicequotasServiceQuotaState{}
	if err := json.NewDecoder(state).Decode(assq.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", assq.Type(), assq.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (assq *Resource) State() (*awsServicequotasServiceQuotaState, bool) {
	return assq.state, assq.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (assq *Resource) StateMust() *awsServicequotasServiceQuotaState {
	if assq.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", assq.Type(), assq.LocalName()))
	}
	return assq.state
}

// Args contains the configurations for aws_servicequotas_service_quota.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// QuotaCode: string, required
	QuotaCode terra.StringValue `hcl:"quota_code,attr" validate:"required"`
	// ServiceCode: string, required
	ServiceCode terra.StringValue `hcl:"service_code,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type awsServicequotasServiceQuotaAttributes struct {
	ref terra.Reference
}

// Adjustable returns a reference to field adjustable of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) Adjustable() terra.BoolValue {
	return terra.ReferenceAsBool(assq.ref.Append("adjustable"))
}

// Arn returns a reference to field arn of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("arn"))
}

// DefaultValue returns a reference to field default_value of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) DefaultValue() terra.NumberValue {
	return terra.ReferenceAsNumber(assq.ref.Append("default_value"))
}

// Id returns a reference to field id of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("id"))
}

// QuotaCode returns a reference to field quota_code of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) QuotaCode() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("quota_code"))
}

// QuotaName returns a reference to field quota_name of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) QuotaName() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("quota_name"))
}

// RequestId returns a reference to field request_id of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) RequestId() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("request_id"))
}

// RequestStatus returns a reference to field request_status of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) RequestStatus() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("request_status"))
}

// ServiceCode returns a reference to field service_code of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) ServiceCode() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("service_code"))
}

// ServiceName returns a reference to field service_name of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("service_name"))
}

// Value returns a reference to field value of aws_servicequotas_service_quota.
func (assq awsServicequotasServiceQuotaAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(assq.ref.Append("value"))
}

func (assq awsServicequotasServiceQuotaAttributes) UsageMetric() terra.ListValue[UsageMetricAttributes] {
	return terra.ReferenceAsList[UsageMetricAttributes](assq.ref.Append("usage_metric"))
}

type awsServicequotasServiceQuotaState struct {
	Adjustable    bool               `json:"adjustable"`
	Arn           string             `json:"arn"`
	DefaultValue  float64            `json:"default_value"`
	Id            string             `json:"id"`
	QuotaCode     string             `json:"quota_code"`
	QuotaName     string             `json:"quota_name"`
	RequestId     string             `json:"request_id"`
	RequestStatus string             `json:"request_status"`
	ServiceCode   string             `json:"service_code"`
	ServiceName   string             `json:"service_name"`
	Value         float64            `json:"value"`
	UsageMetric   []UsageMetricState `json:"usage_metric"`
}
