// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicequotas_service_quota

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataUsageMetricAttributes struct {
	ref terra.Reference
}

func (um DataUsageMetricAttributes) InternalRef() (terra.Reference, error) {
	return um.ref, nil
}

func (um DataUsageMetricAttributes) InternalWithRef(ref terra.Reference) DataUsageMetricAttributes {
	return DataUsageMetricAttributes{ref: ref}
}

func (um DataUsageMetricAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return um.ref.InternalTokens()
}

func (um DataUsageMetricAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(um.ref.Append("metric_name"))
}

func (um DataUsageMetricAttributes) MetricNamespace() terra.StringValue {
	return terra.ReferenceAsString(um.ref.Append("metric_namespace"))
}

func (um DataUsageMetricAttributes) MetricStatisticRecommendation() terra.StringValue {
	return terra.ReferenceAsString(um.ref.Append("metric_statistic_recommendation"))
}

func (um DataUsageMetricAttributes) MetricDimensions() terra.ListValue[DataUsageMetricMetricDimensionsAttributes] {
	return terra.ReferenceAsList[DataUsageMetricMetricDimensionsAttributes](um.ref.Append("metric_dimensions"))
}

type DataUsageMetricMetricDimensionsAttributes struct {
	ref terra.Reference
}

func (md DataUsageMetricMetricDimensionsAttributes) InternalRef() (terra.Reference, error) {
	return md.ref, nil
}

func (md DataUsageMetricMetricDimensionsAttributes) InternalWithRef(ref terra.Reference) DataUsageMetricMetricDimensionsAttributes {
	return DataUsageMetricMetricDimensionsAttributes{ref: ref}
}

func (md DataUsageMetricMetricDimensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return md.ref.InternalTokens()
}

func (md DataUsageMetricMetricDimensionsAttributes) Class() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("class"))
}

func (md DataUsageMetricMetricDimensionsAttributes) Resource() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("resource"))
}

func (md DataUsageMetricMetricDimensionsAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("service"))
}

func (md DataUsageMetricMetricDimensionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("type"))
}

type DataUsageMetricState struct {
	MetricName                    string                                 `json:"metric_name"`
	MetricNamespace               string                                 `json:"metric_namespace"`
	MetricStatisticRecommendation string                                 `json:"metric_statistic_recommendation"`
	MetricDimensions              []DataUsageMetricMetricDimensionsState `json:"metric_dimensions"`
}

type DataUsageMetricMetricDimensionsState struct {
	Class    string `json:"class"`
	Resource string `json:"resource"`
	Service  string `json:"service"`
	Type     string `json:"type"`
}
