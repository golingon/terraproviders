// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicequotas_service_quota

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_servicequotas_service_quota.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (assq *DataSource) DataSource() string {
	return "aws_servicequotas_service_quota"
}

// LocalName returns the local name for [DataSource].
func (assq *DataSource) LocalName() string {
	return assq.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (assq *DataSource) Configuration() interface{} {
	return assq.Args
}

// Attributes returns the attributes for [DataSource].
func (assq *DataSource) Attributes() dataAwsServicequotasServiceQuotaAttributes {
	return dataAwsServicequotasServiceQuotaAttributes{ref: terra.ReferenceDataSource(assq)}
}

// DataArgs contains the configurations for aws_servicequotas_service_quota.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// QuotaCode: string, optional
	QuotaCode terra.StringValue `hcl:"quota_code,attr"`
	// QuotaName: string, optional
	QuotaName terra.StringValue `hcl:"quota_name,attr"`
	// ServiceCode: string, required
	ServiceCode terra.StringValue `hcl:"service_code,attr" validate:"required"`
}

type dataAwsServicequotasServiceQuotaAttributes struct {
	ref terra.Reference
}

// Adjustable returns a reference to field adjustable of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) Adjustable() terra.BoolValue {
	return terra.ReferenceAsBool(assq.ref.Append("adjustable"))
}

// Arn returns a reference to field arn of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("arn"))
}

// DefaultValue returns a reference to field default_value of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) DefaultValue() terra.NumberValue {
	return terra.ReferenceAsNumber(assq.ref.Append("default_value"))
}

// GlobalQuota returns a reference to field global_quota of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) GlobalQuota() terra.BoolValue {
	return terra.ReferenceAsBool(assq.ref.Append("global_quota"))
}

// Id returns a reference to field id of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("id"))
}

// QuotaCode returns a reference to field quota_code of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) QuotaCode() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("quota_code"))
}

// QuotaName returns a reference to field quota_name of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) QuotaName() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("quota_name"))
}

// ServiceCode returns a reference to field service_code of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) ServiceCode() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("service_code"))
}

// ServiceName returns a reference to field service_name of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(assq.ref.Append("service_name"))
}

// Value returns a reference to field value of aws_servicequotas_service_quota.
func (assq dataAwsServicequotasServiceQuotaAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(assq.ref.Append("value"))
}

func (assq dataAwsServicequotasServiceQuotaAttributes) UsageMetric() terra.ListValue[DataUsageMetricAttributes] {
	return terra.ReferenceAsList[DataUsageMetricAttributes](assq.ref.Append("usage_metric"))
}
