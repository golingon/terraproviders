// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_snapshot_create_volume_permission

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_snapshot_create_volume_permission.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSnapshotCreateVolumePermissionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascvp *Resource) Type() string {
	return "aws_snapshot_create_volume_permission"
}

// LocalName returns the local name for [Resource].
func (ascvp *Resource) LocalName() string {
	return ascvp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascvp *Resource) Configuration() interface{} {
	return ascvp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascvp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascvp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascvp *Resource) Dependencies() terra.Dependencies {
	return ascvp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascvp *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascvp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascvp *Resource) Attributes() awsSnapshotCreateVolumePermissionAttributes {
	return awsSnapshotCreateVolumePermissionAttributes{ref: terra.ReferenceResource(ascvp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascvp *Resource) ImportState(state io.Reader) error {
	ascvp.state = &awsSnapshotCreateVolumePermissionState{}
	if err := json.NewDecoder(state).Decode(ascvp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascvp.Type(), ascvp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascvp *Resource) State() (*awsSnapshotCreateVolumePermissionState, bool) {
	return ascvp.state, ascvp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascvp *Resource) StateMust() *awsSnapshotCreateVolumePermissionState {
	if ascvp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascvp.Type(), ascvp.LocalName()))
	}
	return ascvp.state
}

// Args contains the configurations for aws_snapshot_create_volume_permission.
type Args struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SnapshotId: string, required
	SnapshotId terra.StringValue `hcl:"snapshot_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsSnapshotCreateVolumePermissionAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_snapshot_create_volume_permission.
func (ascvp awsSnapshotCreateVolumePermissionAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(ascvp.ref.Append("account_id"))
}

// Id returns a reference to field id of aws_snapshot_create_volume_permission.
func (ascvp awsSnapshotCreateVolumePermissionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascvp.ref.Append("id"))
}

// SnapshotId returns a reference to field snapshot_id of aws_snapshot_create_volume_permission.
func (ascvp awsSnapshotCreateVolumePermissionAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(ascvp.ref.Append("snapshot_id"))
}

func (ascvp awsSnapshotCreateVolumePermissionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascvp.ref.Append("timeouts"))
}

type awsSnapshotCreateVolumePermissionState struct {
	AccountId  string         `json:"account_id"`
	Id         string         `json:"id"`
	SnapshotId string         `json:"snapshot_id"`
	Timeouts   *TimeoutsState `json:"timeouts"`
}
