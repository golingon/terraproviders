// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_field_level_encryption_profile

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudfront_field_level_encryption_profile.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudfrontFieldLevelEncryptionProfileState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acflep *Resource) Type() string {
	return "aws_cloudfront_field_level_encryption_profile"
}

// LocalName returns the local name for [Resource].
func (acflep *Resource) LocalName() string {
	return acflep.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acflep *Resource) Configuration() interface{} {
	return acflep.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acflep *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acflep)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acflep *Resource) Dependencies() terra.Dependencies {
	return acflep.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acflep *Resource) LifecycleManagement() *terra.Lifecycle {
	return acflep.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acflep *Resource) Attributes() awsCloudfrontFieldLevelEncryptionProfileAttributes {
	return awsCloudfrontFieldLevelEncryptionProfileAttributes{ref: terra.ReferenceResource(acflep)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acflep *Resource) ImportState(state io.Reader) error {
	acflep.state = &awsCloudfrontFieldLevelEncryptionProfileState{}
	if err := json.NewDecoder(state).Decode(acflep.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acflep.Type(), acflep.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acflep *Resource) State() (*awsCloudfrontFieldLevelEncryptionProfileState, bool) {
	return acflep.state, acflep.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acflep *Resource) StateMust() *awsCloudfrontFieldLevelEncryptionProfileState {
	if acflep.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acflep.Type(), acflep.LocalName()))
	}
	return acflep.state
}

// Args contains the configurations for aws_cloudfront_field_level_encryption_profile.
type Args struct {
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// EncryptionEntities: required
	EncryptionEntities *EncryptionEntities `hcl:"encryption_entities,block" validate:"required"`
}

type awsCloudfrontFieldLevelEncryptionProfileAttributes struct {
	ref terra.Reference
}

// CallerReference returns a reference to field caller_reference of aws_cloudfront_field_level_encryption_profile.
func (acflep awsCloudfrontFieldLevelEncryptionProfileAttributes) CallerReference() terra.StringValue {
	return terra.ReferenceAsString(acflep.ref.Append("caller_reference"))
}

// Comment returns a reference to field comment of aws_cloudfront_field_level_encryption_profile.
func (acflep awsCloudfrontFieldLevelEncryptionProfileAttributes) Comment() terra.StringValue {
	return terra.ReferenceAsString(acflep.ref.Append("comment"))
}

// Etag returns a reference to field etag of aws_cloudfront_field_level_encryption_profile.
func (acflep awsCloudfrontFieldLevelEncryptionProfileAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(acflep.ref.Append("etag"))
}

// Id returns a reference to field id of aws_cloudfront_field_level_encryption_profile.
func (acflep awsCloudfrontFieldLevelEncryptionProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acflep.ref.Append("id"))
}

// Name returns a reference to field name of aws_cloudfront_field_level_encryption_profile.
func (acflep awsCloudfrontFieldLevelEncryptionProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acflep.ref.Append("name"))
}

func (acflep awsCloudfrontFieldLevelEncryptionProfileAttributes) EncryptionEntities() terra.ListValue[EncryptionEntitiesAttributes] {
	return terra.ReferenceAsList[EncryptionEntitiesAttributes](acflep.ref.Append("encryption_entities"))
}

type awsCloudfrontFieldLevelEncryptionProfileState struct {
	CallerReference    string                    `json:"caller_reference"`
	Comment            string                    `json:"comment"`
	Etag               string                    `json:"etag"`
	Id                 string                    `json:"id"`
	Name               string                    `json:"name"`
	EncryptionEntities []EncryptionEntitiesState `json:"encryption_entities"`
}
