// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emr_release_labels

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_emr_release_labels.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aerl *DataSource) DataSource() string {
	return "aws_emr_release_labels"
}

// LocalName returns the local name for [DataSource].
func (aerl *DataSource) LocalName() string {
	return aerl.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aerl *DataSource) Configuration() interface{} {
	return aerl.Args
}

// Attributes returns the attributes for [DataSource].
func (aerl *DataSource) Attributes() dataAwsEmrReleaseLabelsAttributes {
	return dataAwsEmrReleaseLabelsAttributes{ref: terra.ReferenceDataSource(aerl)}
}

// DataArgs contains the configurations for aws_emr_release_labels.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filters: optional
	Filters *DataFilters `hcl:"filters,block"`
}

type dataAwsEmrReleaseLabelsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_emr_release_labels.
func (aerl dataAwsEmrReleaseLabelsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aerl.ref.Append("id"))
}

// ReleaseLabels returns a reference to field release_labels of aws_emr_release_labels.
func (aerl dataAwsEmrReleaseLabelsAttributes) ReleaseLabels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aerl.ref.Append("release_labels"))
}

func (aerl dataAwsEmrReleaseLabelsAttributes) Filters() terra.ListValue[DataFiltersAttributes] {
	return terra.ReferenceAsList[DataFiltersAttributes](aerl.ref.Append("filters"))
}
