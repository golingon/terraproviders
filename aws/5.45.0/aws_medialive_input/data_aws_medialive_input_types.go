// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_medialive_input

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataDestinationsAttributes struct {
	ref terra.Reference
}

func (d DataDestinationsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataDestinationsAttributes) InternalWithRef(ref terra.Reference) DataDestinationsAttributes {
	return DataDestinationsAttributes{ref: ref}
}

func (d DataDestinationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataDestinationsAttributes) Ip() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("ip"))
}

func (d DataDestinationsAttributes) Port() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("port"))
}

func (d DataDestinationsAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("url"))
}

func (d DataDestinationsAttributes) Vpc() terra.ListValue[DataDestinationsVpcAttributes] {
	return terra.ReferenceAsList[DataDestinationsVpcAttributes](d.ref.Append("vpc"))
}

type DataDestinationsVpcAttributes struct {
	ref terra.Reference
}

func (v DataDestinationsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataDestinationsVpcAttributes) InternalWithRef(ref terra.Reference) DataDestinationsVpcAttributes {
	return DataDestinationsVpcAttributes{ref: ref}
}

func (v DataDestinationsVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataDestinationsVpcAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("availability_zone"))
}

func (v DataDestinationsVpcAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("network_interface_id"))
}

type DataInputDevicesAttributes struct {
	ref terra.Reference
}

func (id DataInputDevicesAttributes) InternalRef() (terra.Reference, error) {
	return id.ref, nil
}

func (id DataInputDevicesAttributes) InternalWithRef(ref terra.Reference) DataInputDevicesAttributes {
	return DataInputDevicesAttributes{ref: ref}
}

func (id DataInputDevicesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return id.ref.InternalTokens()
}

func (id DataInputDevicesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("id"))
}

type DataMediaConnectFlowsAttributes struct {
	ref terra.Reference
}

func (mcf DataMediaConnectFlowsAttributes) InternalRef() (terra.Reference, error) {
	return mcf.ref, nil
}

func (mcf DataMediaConnectFlowsAttributes) InternalWithRef(ref terra.Reference) DataMediaConnectFlowsAttributes {
	return DataMediaConnectFlowsAttributes{ref: ref}
}

func (mcf DataMediaConnectFlowsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mcf.ref.InternalTokens()
}

func (mcf DataMediaConnectFlowsAttributes) FlowArn() terra.StringValue {
	return terra.ReferenceAsString(mcf.ref.Append("flow_arn"))
}

type DataSourcesAttributes struct {
	ref terra.Reference
}

func (s DataSourcesAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSourcesAttributes) InternalWithRef(ref terra.Reference) DataSourcesAttributes {
	return DataSourcesAttributes{ref: ref}
}

func (s DataSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSourcesAttributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("password_param"))
}

func (s DataSourcesAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("url"))
}

func (s DataSourcesAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("username"))
}

type DataDestinationsState struct {
	Ip   string                     `json:"ip"`
	Port string                     `json:"port"`
	Url  string                     `json:"url"`
	Vpc  []DataDestinationsVpcState `json:"vpc"`
}

type DataDestinationsVpcState struct {
	AvailabilityZone   string `json:"availability_zone"`
	NetworkInterfaceId string `json:"network_interface_id"`
}

type DataInputDevicesState struct {
	Id string `json:"id"`
}

type DataMediaConnectFlowsState struct {
	FlowArn string `json:"flow_arn"`
}

type DataSourcesState struct {
	PasswordParam string `json:"password_param"`
	Url           string `json:"url"`
	Username      string `json:"username"`
}
