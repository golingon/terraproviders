// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3_bucket

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_s3_bucket.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asb *DataSource) DataSource() string {
	return "aws_s3_bucket"
}

// LocalName returns the local name for [DataSource].
func (asb *DataSource) LocalName() string {
	return asb.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asb *DataSource) Configuration() interface{} {
	return asb.Args
}

// Attributes returns the attributes for [DataSource].
func (asb *DataSource) Attributes() dataAwsS3BucketAttributes {
	return dataAwsS3BucketAttributes{ref: terra.ReferenceDataSource(asb)}
}

// DataArgs contains the configurations for aws_s3_bucket.
type DataArgs struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsS3BucketAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("arn"))
}

// Bucket returns a reference to field bucket of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("bucket"))
}

// BucketDomainName returns a reference to field bucket_domain_name of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) BucketDomainName() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("bucket_domain_name"))
}

// BucketRegionalDomainName returns a reference to field bucket_regional_domain_name of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) BucketRegionalDomainName() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("bucket_regional_domain_name"))
}

// HostedZoneId returns a reference to field hosted_zone_id of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("hosted_zone_id"))
}

// Id returns a reference to field id of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("id"))
}

// Region returns a reference to field region of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("region"))
}

// WebsiteDomain returns a reference to field website_domain of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) WebsiteDomain() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("website_domain"))
}

// WebsiteEndpoint returns a reference to field website_endpoint of aws_s3_bucket.
func (asb dataAwsS3BucketAttributes) WebsiteEndpoint() terra.StringValue {
	return terra.ReferenceAsString(asb.ref.Append("website_endpoint"))
}
