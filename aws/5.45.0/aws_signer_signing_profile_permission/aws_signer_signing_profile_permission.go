// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_signer_signing_profile_permission

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_signer_signing_profile_permission.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSignerSigningProfilePermissionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asspp *Resource) Type() string {
	return "aws_signer_signing_profile_permission"
}

// LocalName returns the local name for [Resource].
func (asspp *Resource) LocalName() string {
	return asspp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asspp *Resource) Configuration() interface{} {
	return asspp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asspp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asspp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asspp *Resource) Dependencies() terra.Dependencies {
	return asspp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asspp *Resource) LifecycleManagement() *terra.Lifecycle {
	return asspp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asspp *Resource) Attributes() awsSignerSigningProfilePermissionAttributes {
	return awsSignerSigningProfilePermissionAttributes{ref: terra.ReferenceResource(asspp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asspp *Resource) ImportState(state io.Reader) error {
	asspp.state = &awsSignerSigningProfilePermissionState{}
	if err := json.NewDecoder(state).Decode(asspp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asspp.Type(), asspp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asspp *Resource) State() (*awsSignerSigningProfilePermissionState, bool) {
	return asspp.state, asspp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asspp *Resource) StateMust() *awsSignerSigningProfilePermissionState {
	if asspp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asspp.Type(), asspp.LocalName()))
	}
	return asspp.state
}

// Args contains the configurations for aws_signer_signing_profile_permission.
type Args struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Principal: string, required
	Principal terra.StringValue `hcl:"principal,attr" validate:"required"`
	// ProfileName: string, required
	ProfileName terra.StringValue `hcl:"profile_name,attr" validate:"required"`
	// ProfileVersion: string, optional
	ProfileVersion terra.StringValue `hcl:"profile_version,attr"`
	// StatementId: string, optional
	StatementId terra.StringValue `hcl:"statement_id,attr"`
	// StatementIdPrefix: string, optional
	StatementIdPrefix terra.StringValue `hcl:"statement_id_prefix,attr"`
}

type awsSignerSigningProfilePermissionAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("action"))
}

// Id returns a reference to field id of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("id"))
}

// Principal returns a reference to field principal of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) Principal() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("principal"))
}

// ProfileName returns a reference to field profile_name of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) ProfileName() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("profile_name"))
}

// ProfileVersion returns a reference to field profile_version of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) ProfileVersion() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("profile_version"))
}

// StatementId returns a reference to field statement_id of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) StatementId() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("statement_id"))
}

// StatementIdPrefix returns a reference to field statement_id_prefix of aws_signer_signing_profile_permission.
func (asspp awsSignerSigningProfilePermissionAttributes) StatementIdPrefix() terra.StringValue {
	return terra.ReferenceAsString(asspp.ref.Append("statement_id_prefix"))
}

type awsSignerSigningProfilePermissionState struct {
	Action            string `json:"action"`
	Id                string `json:"id"`
	Principal         string `json:"principal"`
	ProfileName       string `json:"profile_name"`
	ProfileVersion    string `json:"profile_version"`
	StatementId       string `json:"statement_id"`
	StatementIdPrefix string `json:"statement_id_prefix"`
}
