// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_authorizer

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_api_gateway_authorizer.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApiGatewayAuthorizerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaga *Resource) Type() string {
	return "aws_api_gateway_authorizer"
}

// LocalName returns the local name for [Resource].
func (aaga *Resource) LocalName() string {
	return aaga.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaga *Resource) Configuration() interface{} {
	return aaga.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaga *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaga)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaga *Resource) Dependencies() terra.Dependencies {
	return aaga.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaga *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaga.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaga *Resource) Attributes() awsApiGatewayAuthorizerAttributes {
	return awsApiGatewayAuthorizerAttributes{ref: terra.ReferenceResource(aaga)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaga *Resource) ImportState(state io.Reader) error {
	aaga.state = &awsApiGatewayAuthorizerState{}
	if err := json.NewDecoder(state).Decode(aaga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaga.Type(), aaga.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaga *Resource) State() (*awsApiGatewayAuthorizerState, bool) {
	return aaga.state, aaga.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaga *Resource) StateMust() *awsApiGatewayAuthorizerState {
	if aaga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaga.Type(), aaga.LocalName()))
	}
	return aaga.state
}

// Args contains the configurations for aws_api_gateway_authorizer.
type Args struct {
	// AuthorizerCredentials: string, optional
	AuthorizerCredentials terra.StringValue `hcl:"authorizer_credentials,attr"`
	// AuthorizerResultTtlInSeconds: number, optional
	AuthorizerResultTtlInSeconds terra.NumberValue `hcl:"authorizer_result_ttl_in_seconds,attr"`
	// AuthorizerUri: string, optional
	AuthorizerUri terra.StringValue `hcl:"authorizer_uri,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentitySource: string, optional
	IdentitySource terra.StringValue `hcl:"identity_source,attr"`
	// IdentityValidationExpression: string, optional
	IdentityValidationExpression terra.StringValue `hcl:"identity_validation_expression,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ProviderArns: set of string, optional
	ProviderArns terra.SetValue[terra.StringValue] `hcl:"provider_arns,attr"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type awsApiGatewayAuthorizerAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("arn"))
}

// AuthorizerCredentials returns a reference to field authorizer_credentials of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) AuthorizerCredentials() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("authorizer_credentials"))
}

// AuthorizerResultTtlInSeconds returns a reference to field authorizer_result_ttl_in_seconds of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) AuthorizerResultTtlInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(aaga.ref.Append("authorizer_result_ttl_in_seconds"))
}

// AuthorizerUri returns a reference to field authorizer_uri of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) AuthorizerUri() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("authorizer_uri"))
}

// Id returns a reference to field id of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("id"))
}

// IdentitySource returns a reference to field identity_source of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) IdentitySource() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("identity_source"))
}

// IdentityValidationExpression returns a reference to field identity_validation_expression of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) IdentityValidationExpression() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("identity_validation_expression"))
}

// Name returns a reference to field name of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("name"))
}

// ProviderArns returns a reference to field provider_arns of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) ProviderArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaga.ref.Append("provider_arns"))
}

// RestApiId returns a reference to field rest_api_id of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("rest_api_id"))
}

// Type returns a reference to field type of aws_api_gateway_authorizer.
func (aaga awsApiGatewayAuthorizerAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aaga.ref.Append("type"))
}

type awsApiGatewayAuthorizerState struct {
	Arn                          string   `json:"arn"`
	AuthorizerCredentials        string   `json:"authorizer_credentials"`
	AuthorizerResultTtlInSeconds float64  `json:"authorizer_result_ttl_in_seconds"`
	AuthorizerUri                string   `json:"authorizer_uri"`
	Id                           string   `json:"id"`
	IdentitySource               string   `json:"identity_source"`
	IdentityValidationExpression string   `json:"identity_validation_expression"`
	Name                         string   `json:"name"`
	ProviderArns                 []string `json:"provider_arns"`
	RestApiId                    string   `json:"rest_api_id"`
	Type                         string   `json:"type"`
}
