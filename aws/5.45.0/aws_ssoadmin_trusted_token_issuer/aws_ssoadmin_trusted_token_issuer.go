// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssoadmin_trusted_token_issuer

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ssoadmin_trusted_token_issuer.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSsoadminTrustedTokenIssuerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (astti *Resource) Type() string {
	return "aws_ssoadmin_trusted_token_issuer"
}

// LocalName returns the local name for [Resource].
func (astti *Resource) LocalName() string {
	return astti.Name
}

// Configuration returns the configuration (args) for [Resource].
func (astti *Resource) Configuration() interface{} {
	return astti.Args
}

// DependOn is used for other resources to depend on [Resource].
func (astti *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(astti)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (astti *Resource) Dependencies() terra.Dependencies {
	return astti.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (astti *Resource) LifecycleManagement() *terra.Lifecycle {
	return astti.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (astti *Resource) Attributes() awsSsoadminTrustedTokenIssuerAttributes {
	return awsSsoadminTrustedTokenIssuerAttributes{ref: terra.ReferenceResource(astti)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (astti *Resource) ImportState(state io.Reader) error {
	astti.state = &awsSsoadminTrustedTokenIssuerState{}
	if err := json.NewDecoder(state).Decode(astti.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", astti.Type(), astti.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (astti *Resource) State() (*awsSsoadminTrustedTokenIssuerState, bool) {
	return astti.state, astti.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (astti *Resource) StateMust() *awsSsoadminTrustedTokenIssuerState {
	if astti.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", astti.Type(), astti.LocalName()))
	}
	return astti.state
}

// Args contains the configurations for aws_ssoadmin_trusted_token_issuer.
type Args struct {
	// ClientToken: string, optional
	ClientToken terra.StringValue `hcl:"client_token,attr"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TrustedTokenIssuerType: string, required
	TrustedTokenIssuerType terra.StringValue `hcl:"trusted_token_issuer_type,attr" validate:"required"`
	// TrustedTokenIssuerConfiguration: min=0
	TrustedTokenIssuerConfiguration []TrustedTokenIssuerConfiguration `hcl:"trusted_token_issuer_configuration,block" validate:"min=0"`
}

type awsSsoadminTrustedTokenIssuerAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(astti.ref.Append("arn"))
}

// ClientToken returns a reference to field client_token of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) ClientToken() terra.StringValue {
	return terra.ReferenceAsString(astti.ref.Append("client_token"))
}

// Id returns a reference to field id of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(astti.ref.Append("id"))
}

// InstanceArn returns a reference to field instance_arn of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceAsString(astti.ref.Append("instance_arn"))
}

// Name returns a reference to field name of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(astti.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](astti.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](astti.ref.Append("tags_all"))
}

// TrustedTokenIssuerType returns a reference to field trusted_token_issuer_type of aws_ssoadmin_trusted_token_issuer.
func (astti awsSsoadminTrustedTokenIssuerAttributes) TrustedTokenIssuerType() terra.StringValue {
	return terra.ReferenceAsString(astti.ref.Append("trusted_token_issuer_type"))
}

func (astti awsSsoadminTrustedTokenIssuerAttributes) TrustedTokenIssuerConfiguration() terra.ListValue[TrustedTokenIssuerConfigurationAttributes] {
	return terra.ReferenceAsList[TrustedTokenIssuerConfigurationAttributes](astti.ref.Append("trusted_token_issuer_configuration"))
}

type awsSsoadminTrustedTokenIssuerState struct {
	Arn                             string                                 `json:"arn"`
	ClientToken                     string                                 `json:"client_token"`
	Id                              string                                 `json:"id"`
	InstanceArn                     string                                 `json:"instance_arn"`
	Name                            string                                 `json:"name"`
	Tags                            map[string]string                      `json:"tags"`
	TagsAll                         map[string]string                      `json:"tags_all"`
	TrustedTokenIssuerType          string                                 `json:"trusted_token_issuer_type"`
	TrustedTokenIssuerConfiguration []TrustedTokenIssuerConfigurationState `json:"trusted_token_issuer_configuration"`
}
