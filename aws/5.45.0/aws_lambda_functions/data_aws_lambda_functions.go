// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lambda_functions

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_lambda_functions.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alf *DataSource) DataSource() string {
	return "aws_lambda_functions"
}

// LocalName returns the local name for [DataSource].
func (alf *DataSource) LocalName() string {
	return alf.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alf *DataSource) Configuration() interface{} {
	return alf.Args
}

// Attributes returns the attributes for [DataSource].
func (alf *DataSource) Attributes() dataAwsLambdaFunctionsAttributes {
	return dataAwsLambdaFunctionsAttributes{ref: terra.ReferenceDataSource(alf)}
}

// DataArgs contains the configurations for aws_lambda_functions.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsLambdaFunctionsAttributes struct {
	ref terra.Reference
}

// FunctionArns returns a reference to field function_arns of aws_lambda_functions.
func (alf dataAwsLambdaFunctionsAttributes) FunctionArns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alf.ref.Append("function_arns"))
}

// FunctionNames returns a reference to field function_names of aws_lambda_functions.
func (alf dataAwsLambdaFunctionsAttributes) FunctionNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alf.ref.Append("function_names"))
}

// Id returns a reference to field id of aws_lambda_functions.
func (alf dataAwsLambdaFunctionsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alf.ref.Append("id"))
}
