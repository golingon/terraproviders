// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emrcontainers_virtual_cluster

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_emrcontainers_virtual_cluster.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aevc *DataSource) DataSource() string {
	return "aws_emrcontainers_virtual_cluster"
}

// LocalName returns the local name for [DataSource].
func (aevc *DataSource) LocalName() string {
	return aevc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aevc *DataSource) Configuration() interface{} {
	return aevc.Args
}

// Attributes returns the attributes for [DataSource].
func (aevc *DataSource) Attributes() dataAwsEmrcontainersVirtualClusterAttributes {
	return dataAwsEmrcontainersVirtualClusterAttributes{ref: terra.ReferenceDataSource(aevc)}
}

// DataArgs contains the configurations for aws_emrcontainers_virtual_cluster.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VirtualClusterId: string, required
	VirtualClusterId terra.StringValue `hcl:"virtual_cluster_id,attr" validate:"required"`
}

type dataAwsEmrcontainersVirtualClusterAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aevc.ref.Append("arn"))
}

// CreatedAt returns a reference to field created_at of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(aevc.ref.Append("created_at"))
}

// Id returns a reference to field id of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aevc.ref.Append("id"))
}

// Name returns a reference to field name of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aevc.ref.Append("name"))
}

// State returns a reference to field state of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aevc.ref.Append("state"))
}

// Tags returns a reference to field tags of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aevc.ref.Append("tags"))
}

// VirtualClusterId returns a reference to field virtual_cluster_id of aws_emrcontainers_virtual_cluster.
func (aevc dataAwsEmrcontainersVirtualClusterAttributes) VirtualClusterId() terra.StringValue {
	return terra.ReferenceAsString(aevc.ref.Append("virtual_cluster_id"))
}

func (aevc dataAwsEmrcontainersVirtualClusterAttributes) ContainerProvider() terra.ListValue[DataContainerProviderAttributes] {
	return terra.ReferenceAsList[DataContainerProviderAttributes](aevc.ref.Append("container_provider"))
}
