// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emrcontainers_virtual_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataContainerProviderAttributes struct {
	ref terra.Reference
}

func (cp DataContainerProviderAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp DataContainerProviderAttributes) InternalWithRef(ref terra.Reference) DataContainerProviderAttributes {
	return DataContainerProviderAttributes{ref: ref}
}

func (cp DataContainerProviderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp DataContainerProviderAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("id"))
}

func (cp DataContainerProviderAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("type"))
}

func (cp DataContainerProviderAttributes) Info() terra.ListValue[DataContainerProviderInfoAttributes] {
	return terra.ReferenceAsList[DataContainerProviderInfoAttributes](cp.ref.Append("info"))
}

type DataContainerProviderInfoAttributes struct {
	ref terra.Reference
}

func (i DataContainerProviderInfoAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataContainerProviderInfoAttributes) InternalWithRef(ref terra.Reference) DataContainerProviderInfoAttributes {
	return DataContainerProviderInfoAttributes{ref: ref}
}

func (i DataContainerProviderInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataContainerProviderInfoAttributes) EksInfo() terra.ListValue[DataContainerProviderInfoEksInfoAttributes] {
	return terra.ReferenceAsList[DataContainerProviderInfoEksInfoAttributes](i.ref.Append("eks_info"))
}

type DataContainerProviderInfoEksInfoAttributes struct {
	ref terra.Reference
}

func (ei DataContainerProviderInfoEksInfoAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei DataContainerProviderInfoEksInfoAttributes) InternalWithRef(ref terra.Reference) DataContainerProviderInfoEksInfoAttributes {
	return DataContainerProviderInfoEksInfoAttributes{ref: ref}
}

func (ei DataContainerProviderInfoEksInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ei.ref.InternalTokens()
}

func (ei DataContainerProviderInfoEksInfoAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("namespace"))
}

type DataContainerProviderState struct {
	Id   string                           `json:"id"`
	Type string                           `json:"type"`
	Info []DataContainerProviderInfoState `json:"info"`
}

type DataContainerProviderInfoState struct {
	EksInfo []DataContainerProviderInfoEksInfoState `json:"eks_info"`
}

type DataContainerProviderInfoEksInfoState struct {
	Namespace string `json:"namespace"`
}
