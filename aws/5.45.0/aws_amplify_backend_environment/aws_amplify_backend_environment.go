// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_amplify_backend_environment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_amplify_backend_environment.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAmplifyBackendEnvironmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aabe *Resource) Type() string {
	return "aws_amplify_backend_environment"
}

// LocalName returns the local name for [Resource].
func (aabe *Resource) LocalName() string {
	return aabe.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aabe *Resource) Configuration() interface{} {
	return aabe.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aabe *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aabe)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aabe *Resource) Dependencies() terra.Dependencies {
	return aabe.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aabe *Resource) LifecycleManagement() *terra.Lifecycle {
	return aabe.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aabe *Resource) Attributes() awsAmplifyBackendEnvironmentAttributes {
	return awsAmplifyBackendEnvironmentAttributes{ref: terra.ReferenceResource(aabe)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aabe *Resource) ImportState(state io.Reader) error {
	aabe.state = &awsAmplifyBackendEnvironmentState{}
	if err := json.NewDecoder(state).Decode(aabe.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aabe.Type(), aabe.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aabe *Resource) State() (*awsAmplifyBackendEnvironmentState, bool) {
	return aabe.state, aabe.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aabe *Resource) StateMust() *awsAmplifyBackendEnvironmentState {
	if aabe.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aabe.Type(), aabe.LocalName()))
	}
	return aabe.state
}

// Args contains the configurations for aws_amplify_backend_environment.
type Args struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// DeploymentArtifacts: string, optional
	DeploymentArtifacts terra.StringValue `hcl:"deployment_artifacts,attr"`
	// EnvironmentName: string, required
	EnvironmentName terra.StringValue `hcl:"environment_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// StackName: string, optional
	StackName terra.StringValue `hcl:"stack_name,attr"`
}

type awsAmplifyBackendEnvironmentAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of aws_amplify_backend_environment.
func (aabe awsAmplifyBackendEnvironmentAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(aabe.ref.Append("app_id"))
}

// Arn returns a reference to field arn of aws_amplify_backend_environment.
func (aabe awsAmplifyBackendEnvironmentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aabe.ref.Append("arn"))
}

// DeploymentArtifacts returns a reference to field deployment_artifacts of aws_amplify_backend_environment.
func (aabe awsAmplifyBackendEnvironmentAttributes) DeploymentArtifacts() terra.StringValue {
	return terra.ReferenceAsString(aabe.ref.Append("deployment_artifacts"))
}

// EnvironmentName returns a reference to field environment_name of aws_amplify_backend_environment.
func (aabe awsAmplifyBackendEnvironmentAttributes) EnvironmentName() terra.StringValue {
	return terra.ReferenceAsString(aabe.ref.Append("environment_name"))
}

// Id returns a reference to field id of aws_amplify_backend_environment.
func (aabe awsAmplifyBackendEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aabe.ref.Append("id"))
}

// StackName returns a reference to field stack_name of aws_amplify_backend_environment.
func (aabe awsAmplifyBackendEnvironmentAttributes) StackName() terra.StringValue {
	return terra.ReferenceAsString(aabe.ref.Append("stack_name"))
}

type awsAmplifyBackendEnvironmentState struct {
	AppId               string `json:"app_id"`
	Arn                 string `json:"arn"`
	DeploymentArtifacts string `json:"deployment_artifacts"`
	EnvironmentName     string `json:"environment_name"`
	Id                  string `json:"id"`
	StackName           string `json:"stack_name"`
}
