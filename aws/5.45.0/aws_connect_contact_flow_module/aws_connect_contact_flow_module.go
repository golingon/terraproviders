// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_contact_flow_module

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_connect_contact_flow_module.
type Resource struct {
	Name      string
	Args      Args
	state     *awsConnectContactFlowModuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (accfm *Resource) Type() string {
	return "aws_connect_contact_flow_module"
}

// LocalName returns the local name for [Resource].
func (accfm *Resource) LocalName() string {
	return accfm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (accfm *Resource) Configuration() interface{} {
	return accfm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (accfm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(accfm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (accfm *Resource) Dependencies() terra.Dependencies {
	return accfm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (accfm *Resource) LifecycleManagement() *terra.Lifecycle {
	return accfm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (accfm *Resource) Attributes() awsConnectContactFlowModuleAttributes {
	return awsConnectContactFlowModuleAttributes{ref: terra.ReferenceResource(accfm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (accfm *Resource) ImportState(state io.Reader) error {
	accfm.state = &awsConnectContactFlowModuleState{}
	if err := json.NewDecoder(state).Decode(accfm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", accfm.Type(), accfm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (accfm *Resource) State() (*awsConnectContactFlowModuleState, bool) {
	return accfm.state, accfm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (accfm *Resource) StateMust() *awsConnectContactFlowModuleState {
	if accfm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", accfm.Type(), accfm.LocalName()))
	}
	return accfm.state
}

// Args contains the configurations for aws_connect_contact_flow_module.
type Args struct {
	// Content: string, optional
	Content terra.StringValue `hcl:"content,attr"`
	// ContentHash: string, optional
	ContentHash terra.StringValue `hcl:"content_hash,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Filename: string, optional
	Filename terra.StringValue `hcl:"filename,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}

type awsConnectContactFlowModuleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("arn"))
}

// ContactFlowModuleId returns a reference to field contact_flow_module_id of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) ContactFlowModuleId() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("contact_flow_module_id"))
}

// Content returns a reference to field content of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("content"))
}

// ContentHash returns a reference to field content_hash of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) ContentHash() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("content_hash"))
}

// Description returns a reference to field description of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("description"))
}

// Filename returns a reference to field filename of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Filename() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("filename"))
}

// Id returns a reference to field id of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("instance_id"))
}

// Name returns a reference to field name of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(accfm.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](accfm.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_connect_contact_flow_module.
func (accfm awsConnectContactFlowModuleAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](accfm.ref.Append("tags_all"))
}

type awsConnectContactFlowModuleState struct {
	Arn                 string            `json:"arn"`
	ContactFlowModuleId string            `json:"contact_flow_module_id"`
	Content             string            `json:"content"`
	ContentHash         string            `json:"content_hash"`
	Description         string            `json:"description"`
	Filename            string            `json:"filename"`
	Id                  string            `json:"id"`
	InstanceId          string            `json:"instance_id"`
	Name                string            `json:"name"`
	Tags                map[string]string `json:"tags"`
	TagsAll             map[string]string `json:"tags_all"`
}
