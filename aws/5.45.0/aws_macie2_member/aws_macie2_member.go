// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_macie2_member

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_macie2_member.
type Resource struct {
	Name      string
	Args      Args
	state     *awsMacie2MemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amm *Resource) Type() string {
	return "aws_macie2_member"
}

// LocalName returns the local name for [Resource].
func (amm *Resource) LocalName() string {
	return amm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amm *Resource) Configuration() interface{} {
	return amm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amm *Resource) Dependencies() terra.Dependencies {
	return amm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amm *Resource) LifecycleManagement() *terra.Lifecycle {
	return amm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amm *Resource) Attributes() awsMacie2MemberAttributes {
	return awsMacie2MemberAttributes{ref: terra.ReferenceResource(amm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amm *Resource) ImportState(state io.Reader) error {
	amm.state = &awsMacie2MemberState{}
	if err := json.NewDecoder(state).Decode(amm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amm.Type(), amm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amm *Resource) State() (*awsMacie2MemberState, bool) {
	return amm.state, amm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amm *Resource) StateMust() *awsMacie2MemberState {
	if amm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amm.Type(), amm.LocalName()))
	}
	return amm.state
}

// Args contains the configurations for aws_macie2_member.
type Args struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InvitationDisableEmailNotification: bool, optional
	InvitationDisableEmailNotification terra.BoolValue `hcl:"invitation_disable_email_notification,attr"`
	// InvitationMessage: string, optional
	InvitationMessage terra.StringValue `hcl:"invitation_message,attr"`
	// Invite: bool, optional
	Invite terra.BoolValue `hcl:"invite,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsMacie2MemberAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_macie2_member.
func (amm awsMacie2MemberAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("account_id"))
}

// AdministratorAccountId returns a reference to field administrator_account_id of aws_macie2_member.
func (amm awsMacie2MemberAttributes) AdministratorAccountId() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("administrator_account_id"))
}

// Arn returns a reference to field arn of aws_macie2_member.
func (amm awsMacie2MemberAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("arn"))
}

// Email returns a reference to field email of aws_macie2_member.
func (amm awsMacie2MemberAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("email"))
}

// Id returns a reference to field id of aws_macie2_member.
func (amm awsMacie2MemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("id"))
}

// InvitationDisableEmailNotification returns a reference to field invitation_disable_email_notification of aws_macie2_member.
func (amm awsMacie2MemberAttributes) InvitationDisableEmailNotification() terra.BoolValue {
	return terra.ReferenceAsBool(amm.ref.Append("invitation_disable_email_notification"))
}

// InvitationMessage returns a reference to field invitation_message of aws_macie2_member.
func (amm awsMacie2MemberAttributes) InvitationMessage() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("invitation_message"))
}

// Invite returns a reference to field invite of aws_macie2_member.
func (amm awsMacie2MemberAttributes) Invite() terra.BoolValue {
	return terra.ReferenceAsBool(amm.ref.Append("invite"))
}

// InvitedAt returns a reference to field invited_at of aws_macie2_member.
func (amm awsMacie2MemberAttributes) InvitedAt() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("invited_at"))
}

// MasterAccountId returns a reference to field master_account_id of aws_macie2_member.
func (amm awsMacie2MemberAttributes) MasterAccountId() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("master_account_id"))
}

// RelationshipStatus returns a reference to field relationship_status of aws_macie2_member.
func (amm awsMacie2MemberAttributes) RelationshipStatus() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("relationship_status"))
}

// Status returns a reference to field status of aws_macie2_member.
func (amm awsMacie2MemberAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_macie2_member.
func (amm awsMacie2MemberAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amm.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_macie2_member.
func (amm awsMacie2MemberAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amm.ref.Append("tags_all"))
}

// UpdatedAt returns a reference to field updated_at of aws_macie2_member.
func (amm awsMacie2MemberAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("updated_at"))
}

func (amm awsMacie2MemberAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amm.ref.Append("timeouts"))
}

type awsMacie2MemberState struct {
	AccountId                          string            `json:"account_id"`
	AdministratorAccountId             string            `json:"administrator_account_id"`
	Arn                                string            `json:"arn"`
	Email                              string            `json:"email"`
	Id                                 string            `json:"id"`
	InvitationDisableEmailNotification bool              `json:"invitation_disable_email_notification"`
	InvitationMessage                  string            `json:"invitation_message"`
	Invite                             bool              `json:"invite"`
	InvitedAt                          string            `json:"invited_at"`
	MasterAccountId                    string            `json:"master_account_id"`
	RelationshipStatus                 string            `json:"relationship_status"`
	Status                             string            `json:"status"`
	Tags                               map[string]string `json:"tags"`
	TagsAll                            map[string]string `json:"tags_all"`
	UpdatedAt                          string            `json:"updated_at"`
	Timeouts                           *TimeoutsState    `json:"timeouts"`
}
