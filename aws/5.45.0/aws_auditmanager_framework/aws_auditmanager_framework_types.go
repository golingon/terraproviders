// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_auditmanager_framework

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ControlSets struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ControlSetsControls: min=0
	Controls []ControlSetsControls `hcl:"controls,block" validate:"min=0"`
}

type ControlSetsControls struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
}

type ControlSetsAttributes struct {
	ref terra.Reference
}

func (cs ControlSetsAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs ControlSetsAttributes) InternalWithRef(ref terra.Reference) ControlSetsAttributes {
	return ControlSetsAttributes{ref: ref}
}

func (cs ControlSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs ControlSetsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("id"))
}

func (cs ControlSetsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("name"))
}

func (cs ControlSetsAttributes) Controls() terra.SetValue[ControlSetsControlsAttributes] {
	return terra.ReferenceAsSet[ControlSetsControlsAttributes](cs.ref.Append("controls"))
}

type ControlSetsControlsAttributes struct {
	ref terra.Reference
}

func (c ControlSetsControlsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ControlSetsControlsAttributes) InternalWithRef(ref terra.Reference) ControlSetsControlsAttributes {
	return ControlSetsControlsAttributes{ref: ref}
}

func (c ControlSetsControlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ControlSetsControlsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

type ControlSetsState struct {
	Id       string                     `json:"id"`
	Name     string                     `json:"name"`
	Controls []ControlSetsControlsState `json:"controls"`
}

type ControlSetsControlsState struct {
	Id string `json:"id"`
}
