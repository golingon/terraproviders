// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iot_thing_group_membership

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_iot_thing_group_membership.
type Resource struct {
	Name      string
	Args      Args
	state     *awsIotThingGroupMembershipState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aitgm *Resource) Type() string {
	return "aws_iot_thing_group_membership"
}

// LocalName returns the local name for [Resource].
func (aitgm *Resource) LocalName() string {
	return aitgm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aitgm *Resource) Configuration() interface{} {
	return aitgm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aitgm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aitgm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aitgm *Resource) Dependencies() terra.Dependencies {
	return aitgm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aitgm *Resource) LifecycleManagement() *terra.Lifecycle {
	return aitgm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aitgm *Resource) Attributes() awsIotThingGroupMembershipAttributes {
	return awsIotThingGroupMembershipAttributes{ref: terra.ReferenceResource(aitgm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aitgm *Resource) ImportState(state io.Reader) error {
	aitgm.state = &awsIotThingGroupMembershipState{}
	if err := json.NewDecoder(state).Decode(aitgm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aitgm.Type(), aitgm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aitgm *Resource) State() (*awsIotThingGroupMembershipState, bool) {
	return aitgm.state, aitgm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aitgm *Resource) StateMust() *awsIotThingGroupMembershipState {
	if aitgm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aitgm.Type(), aitgm.LocalName()))
	}
	return aitgm.state
}

// Args contains the configurations for aws_iot_thing_group_membership.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OverrideDynamicGroup: bool, optional
	OverrideDynamicGroup terra.BoolValue `hcl:"override_dynamic_group,attr"`
	// ThingGroupName: string, required
	ThingGroupName terra.StringValue `hcl:"thing_group_name,attr" validate:"required"`
	// ThingName: string, required
	ThingName terra.StringValue `hcl:"thing_name,attr" validate:"required"`
}

type awsIotThingGroupMembershipAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_iot_thing_group_membership.
func (aitgm awsIotThingGroupMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aitgm.ref.Append("id"))
}

// OverrideDynamicGroup returns a reference to field override_dynamic_group of aws_iot_thing_group_membership.
func (aitgm awsIotThingGroupMembershipAttributes) OverrideDynamicGroup() terra.BoolValue {
	return terra.ReferenceAsBool(aitgm.ref.Append("override_dynamic_group"))
}

// ThingGroupName returns a reference to field thing_group_name of aws_iot_thing_group_membership.
func (aitgm awsIotThingGroupMembershipAttributes) ThingGroupName() terra.StringValue {
	return terra.ReferenceAsString(aitgm.ref.Append("thing_group_name"))
}

// ThingName returns a reference to field thing_name of aws_iot_thing_group_membership.
func (aitgm awsIotThingGroupMembershipAttributes) ThingName() terra.StringValue {
	return terra.ReferenceAsString(aitgm.ref.Append("thing_name"))
}

type awsIotThingGroupMembershipState struct {
	Id                   string `json:"id"`
	OverrideDynamicGroup bool   `json:"override_dynamic_group"`
	ThingGroupName       string `json:"thing_group_name"`
	ThingName            string `json:"thing_name"`
}
