// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkmanager_connect_peer

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type BgpOptions struct {
	// PeerAsn: number, optional
	PeerAsn terra.NumberValue `hcl:"peer_asn,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type ConfigurationAttributes struct {
	ref terra.Reference
}

func (c ConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ConfigurationAttributes) InternalWithRef(ref terra.Reference) ConfigurationAttributes {
	return ConfigurationAttributes{ref: ref}
}

func (c ConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ConfigurationAttributes) CoreNetworkAddress() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("core_network_address"))
}

func (c ConfigurationAttributes) InsideCidrBlocks() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("inside_cidr_blocks"))
}

func (c ConfigurationAttributes) PeerAddress() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("peer_address"))
}

func (c ConfigurationAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("protocol"))
}

func (c ConfigurationAttributes) BgpConfigurations() terra.ListValue[ConfigurationBgpConfigurationsAttributes] {
	return terra.ReferenceAsList[ConfigurationBgpConfigurationsAttributes](c.ref.Append("bgp_configurations"))
}

type ConfigurationBgpConfigurationsAttributes struct {
	ref terra.Reference
}

func (bc ConfigurationBgpConfigurationsAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc ConfigurationBgpConfigurationsAttributes) InternalWithRef(ref terra.Reference) ConfigurationBgpConfigurationsAttributes {
	return ConfigurationBgpConfigurationsAttributes{ref: ref}
}

func (bc ConfigurationBgpConfigurationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc ConfigurationBgpConfigurationsAttributes) CoreNetworkAddress() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("core_network_address"))
}

func (bc ConfigurationBgpConfigurationsAttributes) CoreNetworkAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(bc.ref.Append("core_network_asn"))
}

func (bc ConfigurationBgpConfigurationsAttributes) PeerAddress() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("peer_address"))
}

func (bc ConfigurationBgpConfigurationsAttributes) PeerAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(bc.ref.Append("peer_asn"))
}

type BgpOptionsAttributes struct {
	ref terra.Reference
}

func (bo BgpOptionsAttributes) InternalRef() (terra.Reference, error) {
	return bo.ref, nil
}

func (bo BgpOptionsAttributes) InternalWithRef(ref terra.Reference) BgpOptionsAttributes {
	return BgpOptionsAttributes{ref: ref}
}

func (bo BgpOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bo.ref.InternalTokens()
}

func (bo BgpOptionsAttributes) PeerAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(bo.ref.Append("peer_asn"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type ConfigurationState struct {
	CoreNetworkAddress string                                `json:"core_network_address"`
	InsideCidrBlocks   []string                              `json:"inside_cidr_blocks"`
	PeerAddress        string                                `json:"peer_address"`
	Protocol           string                                `json:"protocol"`
	BgpConfigurations  []ConfigurationBgpConfigurationsState `json:"bgp_configurations"`
}

type ConfigurationBgpConfigurationsState struct {
	CoreNetworkAddress string  `json:"core_network_address"`
	CoreNetworkAsn     float64 `json:"core_network_asn"`
	PeerAddress        string  `json:"peer_address"`
	PeerAsn            float64 `json:"peer_asn"`
}

type BgpOptionsState struct {
	PeerAsn float64 `json:"peer_asn"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
