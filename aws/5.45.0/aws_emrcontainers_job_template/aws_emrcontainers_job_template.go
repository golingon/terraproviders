// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emrcontainers_job_template

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_emrcontainers_job_template.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEmrcontainersJobTemplateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aejt *Resource) Type() string {
	return "aws_emrcontainers_job_template"
}

// LocalName returns the local name for [Resource].
func (aejt *Resource) LocalName() string {
	return aejt.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aejt *Resource) Configuration() interface{} {
	return aejt.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aejt *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aejt)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aejt *Resource) Dependencies() terra.Dependencies {
	return aejt.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aejt *Resource) LifecycleManagement() *terra.Lifecycle {
	return aejt.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aejt *Resource) Attributes() awsEmrcontainersJobTemplateAttributes {
	return awsEmrcontainersJobTemplateAttributes{ref: terra.ReferenceResource(aejt)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aejt *Resource) ImportState(state io.Reader) error {
	aejt.state = &awsEmrcontainersJobTemplateState{}
	if err := json.NewDecoder(state).Decode(aejt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aejt.Type(), aejt.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aejt *Resource) State() (*awsEmrcontainersJobTemplateState, bool) {
	return aejt.state, aejt.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aejt *Resource) StateMust() *awsEmrcontainersJobTemplateState {
	if aejt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aejt.Type(), aejt.LocalName()))
	}
	return aejt.state
}

// Args contains the configurations for aws_emrcontainers_job_template.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyArn: string, optional
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// JobTemplateData: required
	JobTemplateData *JobTemplateData `hcl:"job_template_data,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsEmrcontainersJobTemplateAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_emrcontainers_job_template.
func (aejt awsEmrcontainersJobTemplateAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aejt.ref.Append("arn"))
}

// Id returns a reference to field id of aws_emrcontainers_job_template.
func (aejt awsEmrcontainersJobTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aejt.ref.Append("id"))
}

// KmsKeyArn returns a reference to field kms_key_arn of aws_emrcontainers_job_template.
func (aejt awsEmrcontainersJobTemplateAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(aejt.ref.Append("kms_key_arn"))
}

// Name returns a reference to field name of aws_emrcontainers_job_template.
func (aejt awsEmrcontainersJobTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aejt.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_emrcontainers_job_template.
func (aejt awsEmrcontainersJobTemplateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aejt.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_emrcontainers_job_template.
func (aejt awsEmrcontainersJobTemplateAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aejt.ref.Append("tags_all"))
}

func (aejt awsEmrcontainersJobTemplateAttributes) JobTemplateData() terra.ListValue[JobTemplateDataAttributes] {
	return terra.ReferenceAsList[JobTemplateDataAttributes](aejt.ref.Append("job_template_data"))
}

func (aejt awsEmrcontainersJobTemplateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aejt.ref.Append("timeouts"))
}

type awsEmrcontainersJobTemplateState struct {
	Arn             string                 `json:"arn"`
	Id              string                 `json:"id"`
	KmsKeyArn       string                 `json:"kms_key_arn"`
	Name            string                 `json:"name"`
	Tags            map[string]string      `json:"tags"`
	TagsAll         map[string]string      `json:"tags_all"`
	JobTemplateData []JobTemplateDataState `json:"job_template_data"`
	Timeouts        *TimeoutsState         `json:"timeouts"`
}
