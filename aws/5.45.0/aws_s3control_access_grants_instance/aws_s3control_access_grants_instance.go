// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3control_access_grants_instance

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_s3control_access_grants_instance.
type Resource struct {
	Name      string
	Args      Args
	state     *awsS3ControlAccessGrantsInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asagi *Resource) Type() string {
	return "aws_s3control_access_grants_instance"
}

// LocalName returns the local name for [Resource].
func (asagi *Resource) LocalName() string {
	return asagi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asagi *Resource) Configuration() interface{} {
	return asagi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asagi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asagi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asagi *Resource) Dependencies() terra.Dependencies {
	return asagi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asagi *Resource) LifecycleManagement() *terra.Lifecycle {
	return asagi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asagi *Resource) Attributes() awsS3ControlAccessGrantsInstanceAttributes {
	return awsS3ControlAccessGrantsInstanceAttributes{ref: terra.ReferenceResource(asagi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asagi *Resource) ImportState(state io.Reader) error {
	asagi.state = &awsS3ControlAccessGrantsInstanceState{}
	if err := json.NewDecoder(state).Decode(asagi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asagi.Type(), asagi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asagi *Resource) State() (*awsS3ControlAccessGrantsInstanceState, bool) {
	return asagi.state, asagi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asagi *Resource) StateMust() *awsS3ControlAccessGrantsInstanceState {
	if asagi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asagi.Type(), asagi.LocalName()))
	}
	return asagi.state
}

// Args contains the configurations for aws_s3control_access_grants_instance.
type Args struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// IdentityCenterArn: string, optional
	IdentityCenterArn terra.StringValue `hcl:"identity_center_arn,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type awsS3ControlAccessGrantsInstanceAttributes struct {
	ref terra.Reference
}

// AccessGrantsInstanceArn returns a reference to field access_grants_instance_arn of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) AccessGrantsInstanceArn() terra.StringValue {
	return terra.ReferenceAsString(asagi.ref.Append("access_grants_instance_arn"))
}

// AccessGrantsInstanceId returns a reference to field access_grants_instance_id of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) AccessGrantsInstanceId() terra.StringValue {
	return terra.ReferenceAsString(asagi.ref.Append("access_grants_instance_id"))
}

// AccountId returns a reference to field account_id of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(asagi.ref.Append("account_id"))
}

// Id returns a reference to field id of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asagi.ref.Append("id"))
}

// IdentityCenterApplicationArn returns a reference to field identity_center_application_arn of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) IdentityCenterApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(asagi.ref.Append("identity_center_application_arn"))
}

// IdentityCenterArn returns a reference to field identity_center_arn of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) IdentityCenterArn() terra.StringValue {
	return terra.ReferenceAsString(asagi.ref.Append("identity_center_arn"))
}

// Tags returns a reference to field tags of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asagi.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_s3control_access_grants_instance.
func (asagi awsS3ControlAccessGrantsInstanceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asagi.ref.Append("tags_all"))
}

type awsS3ControlAccessGrantsInstanceState struct {
	AccessGrantsInstanceArn      string            `json:"access_grants_instance_arn"`
	AccessGrantsInstanceId       string            `json:"access_grants_instance_id"`
	AccountId                    string            `json:"account_id"`
	Id                           string            `json:"id"`
	IdentityCenterApplicationArn string            `json:"identity_center_application_arn"`
	IdentityCenterArn            string            `json:"identity_center_arn"`
	Tags                         map[string]string `json:"tags"`
	TagsAll                      map[string]string `json:"tags_all"`
}
