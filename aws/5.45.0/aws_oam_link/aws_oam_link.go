// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_oam_link

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_oam_link.
type Resource struct {
	Name      string
	Args      Args
	state     *awsOamLinkState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aol *Resource) Type() string {
	return "aws_oam_link"
}

// LocalName returns the local name for [Resource].
func (aol *Resource) LocalName() string {
	return aol.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aol *Resource) Configuration() interface{} {
	return aol.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aol *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aol)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aol *Resource) Dependencies() terra.Dependencies {
	return aol.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aol *Resource) LifecycleManagement() *terra.Lifecycle {
	return aol.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aol *Resource) Attributes() awsOamLinkAttributes {
	return awsOamLinkAttributes{ref: terra.ReferenceResource(aol)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aol *Resource) ImportState(state io.Reader) error {
	aol.state = &awsOamLinkState{}
	if err := json.NewDecoder(state).Decode(aol.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aol.Type(), aol.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aol *Resource) State() (*awsOamLinkState, bool) {
	return aol.state, aol.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aol *Resource) StateMust() *awsOamLinkState {
	if aol.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aol.Type(), aol.LocalName()))
	}
	return aol.state
}

// Args contains the configurations for aws_oam_link.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LabelTemplate: string, required
	LabelTemplate terra.StringValue `hcl:"label_template,attr" validate:"required"`
	// ResourceTypes: set of string, required
	ResourceTypes terra.SetValue[terra.StringValue] `hcl:"resource_types,attr" validate:"required"`
	// SinkIdentifier: string, required
	SinkIdentifier terra.StringValue `hcl:"sink_identifier,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsOamLinkAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_oam_link.
func (aol awsOamLinkAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("arn"))
}

// Id returns a reference to field id of aws_oam_link.
func (aol awsOamLinkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("id"))
}

// Label returns a reference to field label of aws_oam_link.
func (aol awsOamLinkAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("label"))
}

// LabelTemplate returns a reference to field label_template of aws_oam_link.
func (aol awsOamLinkAttributes) LabelTemplate() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("label_template"))
}

// LinkId returns a reference to field link_id of aws_oam_link.
func (aol awsOamLinkAttributes) LinkId() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("link_id"))
}

// ResourceTypes returns a reference to field resource_types of aws_oam_link.
func (aol awsOamLinkAttributes) ResourceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aol.ref.Append("resource_types"))
}

// SinkArn returns a reference to field sink_arn of aws_oam_link.
func (aol awsOamLinkAttributes) SinkArn() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("sink_arn"))
}

// SinkIdentifier returns a reference to field sink_identifier of aws_oam_link.
func (aol awsOamLinkAttributes) SinkIdentifier() terra.StringValue {
	return terra.ReferenceAsString(aol.ref.Append("sink_identifier"))
}

// Tags returns a reference to field tags of aws_oam_link.
func (aol awsOamLinkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aol.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_oam_link.
func (aol awsOamLinkAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aol.ref.Append("tags_all"))
}

func (aol awsOamLinkAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aol.ref.Append("timeouts"))
}

type awsOamLinkState struct {
	Arn            string            `json:"arn"`
	Id             string            `json:"id"`
	Label          string            `json:"label"`
	LabelTemplate  string            `json:"label_template"`
	LinkId         string            `json:"link_id"`
	ResourceTypes  []string          `json:"resource_types"`
	SinkArn        string            `json:"sink_arn"`
	SinkIdentifier string            `json:"sink_identifier"`
	Tags           map[string]string `json:"tags"`
	TagsAll        map[string]string `json:"tags_all"`
	Timeouts       *TimeoutsState    `json:"timeouts"`
}
