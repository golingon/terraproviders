// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ecr_lifecycle_policy_document

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ecr_lifecycle_policy_document.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aelpd *DataSource) DataSource() string {
	return "aws_ecr_lifecycle_policy_document"
}

// LocalName returns the local name for [DataSource].
func (aelpd *DataSource) LocalName() string {
	return aelpd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aelpd *DataSource) Configuration() interface{} {
	return aelpd.Args
}

// Attributes returns the attributes for [DataSource].
func (aelpd *DataSource) Attributes() dataAwsEcrLifecyclePolicyDocumentAttributes {
	return dataAwsEcrLifecyclePolicyDocumentAttributes{ref: terra.ReferenceDataSource(aelpd)}
}

// DataArgs contains the configurations for aws_ecr_lifecycle_policy_document.
type DataArgs struct {
	// Rule: min=0
	Rule []DataRule `hcl:"rule,block" validate:"min=0"`
}

type dataAwsEcrLifecyclePolicyDocumentAttributes struct {
	ref terra.Reference
}

// Json returns a reference to field json of aws_ecr_lifecycle_policy_document.
func (aelpd dataAwsEcrLifecyclePolicyDocumentAttributes) Json() terra.StringValue {
	return terra.ReferenceAsString(aelpd.ref.Append("json"))
}

func (aelpd dataAwsEcrLifecyclePolicyDocumentAttributes) Rule() terra.ListValue[DataRuleAttributes] {
	return terra.ReferenceAsList[DataRuleAttributes](aelpd.ref.Append("rule"))
}
