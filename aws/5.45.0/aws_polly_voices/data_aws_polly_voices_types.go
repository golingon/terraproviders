// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_polly_voices

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataVoices struct{}

type DataVoicesAttributes struct {
	ref terra.Reference
}

func (v DataVoicesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataVoicesAttributes) InternalWithRef(ref terra.Reference) DataVoicesAttributes {
	return DataVoicesAttributes{ref: ref}
}

func (v DataVoicesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataVoicesAttributes) AdditionalLanguageCodes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("additional_language_codes"))
}

func (v DataVoicesAttributes) Gender() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("gender"))
}

func (v DataVoicesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v DataVoicesAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("language_code"))
}

func (v DataVoicesAttributes) LanguageName() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("language_name"))
}

func (v DataVoicesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataVoicesAttributes) SupportedEngines() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("supported_engines"))
}

type DataVoicesState struct {
	AdditionalLanguageCodes []string `json:"additional_language_codes"`
	Gender                  string   `json:"gender"`
	Id                      string   `json:"id"`
	LanguageCode            string   `json:"language_code"`
	LanguageName            string   `json:"language_name"`
	Name                    string   `json:"name"`
	SupportedEngines        []string `json:"supported_engines"`
}
