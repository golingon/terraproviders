// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_batch_job_definition

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_batch_job_definition.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (abjd *DataSource) DataSource() string {
	return "aws_batch_job_definition"
}

// LocalName returns the local name for [DataSource].
func (abjd *DataSource) LocalName() string {
	return abjd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (abjd *DataSource) Configuration() interface{} {
	return abjd.Args
}

// Attributes returns the attributes for [DataSource].
func (abjd *DataSource) Attributes() dataAwsBatchJobDefinitionAttributes {
	return dataAwsBatchJobDefinitionAttributes{ref: terra.ReferenceDataSource(abjd)}
}

// DataArgs contains the configurations for aws_batch_job_definition.
type DataArgs struct {
	// Arn: string, optional
	Arn terra.StringValue `hcl:"arn,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Revision: number, optional
	Revision terra.NumberValue `hcl:"revision,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type dataAwsBatchJobDefinitionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("arn"))
}

// ArnPrefix returns a reference to field arn_prefix of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) ArnPrefix() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("arn_prefix"))
}

// ContainerOrchestrationType returns a reference to field container_orchestration_type of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) ContainerOrchestrationType() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("container_orchestration_type"))
}

// Id returns a reference to field id of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("id"))
}

// Name returns a reference to field name of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("name"))
}

// Revision returns a reference to field revision of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Revision() terra.NumberValue {
	return terra.ReferenceAsNumber(abjd.ref.Append("revision"))
}

// SchedulingPriority returns a reference to field scheduling_priority of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) SchedulingPriority() terra.NumberValue {
	return terra.ReferenceAsNumber(abjd.ref.Append("scheduling_priority"))
}

// Status returns a reference to field status of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](abjd.ref.Append("tags"))
}

// Type returns a reference to field type of aws_batch_job_definition.
func (abjd dataAwsBatchJobDefinitionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(abjd.ref.Append("type"))
}

func (abjd dataAwsBatchJobDefinitionAttributes) EksProperties() terra.ListValue[DataEksPropertiesAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesAttributes](abjd.ref.Append("eks_properties"))
}

func (abjd dataAwsBatchJobDefinitionAttributes) NodeProperties() terra.ListValue[DataNodePropertiesAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesAttributes](abjd.ref.Append("node_properties"))
}

func (abjd dataAwsBatchJobDefinitionAttributes) RetryStrategy() terra.ListValue[DataRetryStrategyAttributes] {
	return terra.ReferenceAsList[DataRetryStrategyAttributes](abjd.ref.Append("retry_strategy"))
}

func (abjd dataAwsBatchJobDefinitionAttributes) Timeout() terra.ListValue[DataTimeoutAttributes] {
	return terra.ReferenceAsList[DataTimeoutAttributes](abjd.ref.Append("timeout"))
}
