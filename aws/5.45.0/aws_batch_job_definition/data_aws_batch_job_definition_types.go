// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_batch_job_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataEksPropertiesAttributes struct {
	ref terra.Reference
}

func (ep DataEksPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return ep.ref, nil
}

func (ep DataEksPropertiesAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesAttributes {
	return DataEksPropertiesAttributes{ref: ref}
}

func (ep DataEksPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ep.ref.InternalTokens()
}

func (ep DataEksPropertiesAttributes) PodProperties() terra.ListValue[DataEksPropertiesPodPropertiesAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesAttributes](ep.ref.Append("pod_properties"))
}

type DataEksPropertiesPodPropertiesAttributes struct {
	ref terra.Reference
}

func (pp DataEksPropertiesPodPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp DataEksPropertiesPodPropertiesAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesAttributes {
	return DataEksPropertiesPodPropertiesAttributes{ref: ref}
}

func (pp DataEksPropertiesPodPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp DataEksPropertiesPodPropertiesAttributes) DnsPolicy() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("dns_policy"))
}

func (pp DataEksPropertiesPodPropertiesAttributes) HostNetwork() terra.BoolValue {
	return terra.ReferenceAsBool(pp.ref.Append("host_network"))
}

func (pp DataEksPropertiesPodPropertiesAttributes) ServiceAccountName() terra.BoolValue {
	return terra.ReferenceAsBool(pp.ref.Append("service_account_name"))
}

func (pp DataEksPropertiesPodPropertiesAttributes) Containers() terra.ListValue[DataEksPropertiesPodPropertiesContainersAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesContainersAttributes](pp.ref.Append("containers"))
}

func (pp DataEksPropertiesPodPropertiesAttributes) Metadata() terra.ListValue[DataEksPropertiesPodPropertiesMetadataAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesMetadataAttributes](pp.ref.Append("metadata"))
}

func (pp DataEksPropertiesPodPropertiesAttributes) Volumes() terra.ListValue[DataEksPropertiesPodPropertiesVolumesAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesVolumesAttributes](pp.ref.Append("volumes"))
}

type DataEksPropertiesPodPropertiesContainersAttributes struct {
	ref terra.Reference
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesContainersAttributes {
	return DataEksPropertiesPodPropertiesContainersAttributes{ref: ref}
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) Args() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("args"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("command"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) ImagePullPolicy() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image_pull_policy"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) Env() terra.ListValue[DataEksPropertiesPodPropertiesContainersEnvAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesContainersEnvAttributes](c.ref.Append("env"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) Resources() terra.ListValue[DataEksPropertiesPodPropertiesContainersResourcesAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesContainersResourcesAttributes](c.ref.Append("resources"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) SecurityContext() terra.ListValue[DataEksPropertiesPodPropertiesContainersSecurityContextAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesContainersSecurityContextAttributes](c.ref.Append("security_context"))
}

func (c DataEksPropertiesPodPropertiesContainersAttributes) VolumeMounts() terra.ListValue[DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes](c.ref.Append("volume_mounts"))
}

type DataEksPropertiesPodPropertiesContainersEnvAttributes struct {
	ref terra.Reference
}

func (e DataEksPropertiesPodPropertiesContainersEnvAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataEksPropertiesPodPropertiesContainersEnvAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesContainersEnvAttributes {
	return DataEksPropertiesPodPropertiesContainersEnvAttributes{ref: ref}
}

func (e DataEksPropertiesPodPropertiesContainersEnvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataEksPropertiesPodPropertiesContainersEnvAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataEksPropertiesPodPropertiesContainersEnvAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type DataEksPropertiesPodPropertiesContainersResourcesAttributes struct {
	ref terra.Reference
}

func (r DataEksPropertiesPodPropertiesContainersResourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataEksPropertiesPodPropertiesContainersResourcesAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesContainersResourcesAttributes {
	return DataEksPropertiesPodPropertiesContainersResourcesAttributes{ref: ref}
}

func (r DataEksPropertiesPodPropertiesContainersResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataEksPropertiesPodPropertiesContainersResourcesAttributes) Limits() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("limits"))
}

func (r DataEksPropertiesPodPropertiesContainersResourcesAttributes) Requests() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("requests"))
}

type DataEksPropertiesPodPropertiesContainersSecurityContextAttributes struct {
	ref terra.Reference
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesContainersSecurityContextAttributes {
	return DataEksPropertiesPodPropertiesContainersSecurityContextAttributes{ref: ref}
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) Privileged() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("privileged"))
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) ReadOnlyRootFileSystem() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("read_only_root_file_system"))
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) RunAsGroup() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("run_as_group"))
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) RunAsNonRoot() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("run_as_non_root"))
}

func (sc DataEksPropertiesPodPropertiesContainersSecurityContextAttributes) RunAsUser() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("run_as_user"))
}

type DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes struct {
	ref terra.Reference
}

func (vm DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes {
	return DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes{ref: ref}
}

func (vm DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes) MountPath() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("mount_path"))
}

func (vm DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("name"))
}

func (vm DataEksPropertiesPodPropertiesContainersVolumeMountsAttributes) ReadOnly() terra.BoolValue {
	return terra.ReferenceAsBool(vm.ref.Append("read_only"))
}

type DataEksPropertiesPodPropertiesMetadataAttributes struct {
	ref terra.Reference
}

func (m DataEksPropertiesPodPropertiesMetadataAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataEksPropertiesPodPropertiesMetadataAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesMetadataAttributes {
	return DataEksPropertiesPodPropertiesMetadataAttributes{ref: ref}
}

func (m DataEksPropertiesPodPropertiesMetadataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataEksPropertiesPodPropertiesMetadataAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("labels"))
}

type DataEksPropertiesPodPropertiesVolumesAttributes struct {
	ref terra.Reference
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesVolumesAttributes {
	return DataEksPropertiesPodPropertiesVolumesAttributes{ref: ref}
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) EmptyDir() terra.ListValue[DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes](v.ref.Append("empty_dir"))
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) HostPath() terra.ListValue[DataEksPropertiesPodPropertiesVolumesHostPathAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesVolumesHostPathAttributes](v.ref.Append("host_path"))
}

func (v DataEksPropertiesPodPropertiesVolumesAttributes) Secret() terra.ListValue[DataEksPropertiesPodPropertiesVolumesSecretAttributes] {
	return terra.ReferenceAsList[DataEksPropertiesPodPropertiesVolumesSecretAttributes](v.ref.Append("secret"))
}

type DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes struct {
	ref terra.Reference
}

func (ed DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes) InternalRef() (terra.Reference, error) {
	return ed.ref, nil
}

func (ed DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes {
	return DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes{ref: ref}
}

func (ed DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ed.ref.InternalTokens()
}

func (ed DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes) Medium() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("medium"))
}

func (ed DataEksPropertiesPodPropertiesVolumesEmptyDirAttributes) SizeLimit() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("size_limit"))
}

type DataEksPropertiesPodPropertiesVolumesHostPathAttributes struct {
	ref terra.Reference
}

func (hp DataEksPropertiesPodPropertiesVolumesHostPathAttributes) InternalRef() (terra.Reference, error) {
	return hp.ref, nil
}

func (hp DataEksPropertiesPodPropertiesVolumesHostPathAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesVolumesHostPathAttributes {
	return DataEksPropertiesPodPropertiesVolumesHostPathAttributes{ref: ref}
}

func (hp DataEksPropertiesPodPropertiesVolumesHostPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hp.ref.InternalTokens()
}

func (hp DataEksPropertiesPodPropertiesVolumesHostPathAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("path"))
}

type DataEksPropertiesPodPropertiesVolumesSecretAttributes struct {
	ref terra.Reference
}

func (s DataEksPropertiesPodPropertiesVolumesSecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataEksPropertiesPodPropertiesVolumesSecretAttributes) InternalWithRef(ref terra.Reference) DataEksPropertiesPodPropertiesVolumesSecretAttributes {
	return DataEksPropertiesPodPropertiesVolumesSecretAttributes{ref: ref}
}

func (s DataEksPropertiesPodPropertiesVolumesSecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataEksPropertiesPodPropertiesVolumesSecretAttributes) Optional() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("optional"))
}

func (s DataEksPropertiesPodPropertiesVolumesSecretAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type DataNodePropertiesAttributes struct {
	ref terra.Reference
}

func (np DataNodePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return np.ref, nil
}

func (np DataNodePropertiesAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesAttributes {
	return DataNodePropertiesAttributes{ref: ref}
}

func (np DataNodePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return np.ref.InternalTokens()
}

func (np DataNodePropertiesAttributes) MainNode() terra.NumberValue {
	return terra.ReferenceAsNumber(np.ref.Append("main_node"))
}

func (np DataNodePropertiesAttributes) NumNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(np.ref.Append("num_nodes"))
}

func (np DataNodePropertiesAttributes) NodeRangeProperties() terra.ListValue[DataNodePropertiesNodeRangePropertiesAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesAttributes](np.ref.Append("node_range_properties"))
}

type DataNodePropertiesNodeRangePropertiesAttributes struct {
	ref terra.Reference
}

func (nrp DataNodePropertiesNodeRangePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return nrp.ref, nil
}

func (nrp DataNodePropertiesNodeRangePropertiesAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesAttributes {
	return DataNodePropertiesNodeRangePropertiesAttributes{ref: ref}
}

func (nrp DataNodePropertiesNodeRangePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nrp.ref.InternalTokens()
}

func (nrp DataNodePropertiesNodeRangePropertiesAttributes) TargetNodes() terra.StringValue {
	return terra.ReferenceAsString(nrp.ref.Append("target_nodes"))
}

func (nrp DataNodePropertiesNodeRangePropertiesAttributes) Container() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerAttributes](nrp.ref.Append("container"))
}

type DataNodePropertiesNodeRangePropertiesContainerAttributes struct {
	ref terra.Reference
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerAttributes{ref: ref}
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("command"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) ExecutionRoleArn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("execution_role_arn"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("instance_type"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) JobRoleArn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("job_role_arn"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Privileged() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("privileged"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) ReadonlyRootFilesystem() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("readonly_root_filesystem"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) User() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("user"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Environment() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes](c.ref.Append("environment"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) EphemeralStorage() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes](c.ref.Append("ephemeral_storage"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) FargatePlatformConfiguration() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes](c.ref.Append("fargate_platform_configuration"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) LinuxParameters() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes](c.ref.Append("linux_parameters"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) LogConfiguration() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes](c.ref.Append("log_configuration"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) MountPoints() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes](c.ref.Append("mount_points"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) NetworkConfiguration() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes](c.ref.Append("network_configuration"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) ResourceRequirements() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes](c.ref.Append("resource_requirements"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) RuntimePlatform() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes](c.ref.Append("runtime_platform"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Secrets() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes](c.ref.Append("secrets"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Ulimits() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes](c.ref.Append("ulimits"))
}

func (c DataNodePropertiesNodeRangePropertiesContainerAttributes) Volumes() terra.ListValue[DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes](c.ref.Append("volumes"))
}

type DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes struct {
	ref terra.Reference
}

func (e DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes{ref: ref}
}

func (e DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataNodePropertiesNodeRangePropertiesContainerEnvironmentAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes struct {
	ref terra.Reference
}

func (es DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes{ref: ref}
}

func (es DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageAttributes) SizeInGib() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("size_in_gib"))
}

type DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes struct {
	ref terra.Reference
}

func (fpc DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return fpc.ref, nil
}

func (fpc DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes{ref: ref}
}

func (fpc DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpc.ref.InternalTokens()
}

func (fpc DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationAttributes) PlatformVersion() terra.StringValue {
	return terra.ReferenceAsString(fpc.ref.Append("platform_version"))
}

type DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes struct {
	ref terra.Reference
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes{ref: ref}
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) InitProcessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(lp.ref.Append("init_process_enabled"))
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) MaxSwap() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("max_swap"))
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) SharedMemorySize() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("shared_memory_size"))
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) Swappiness() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("swappiness"))
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) Devices() terra.ListValue[DataNodePropertiesNodeRangePropertiesB3842463Attributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesB3842463Attributes](lp.ref.Append("devices"))
}

func (lp DataNodePropertiesNodeRangePropertiesContainerLinuxParametersAttributes) Tmpfs() terra.ListValue[DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes](lp.ref.Append("tmpfs"))
}

type DataNodePropertiesNodeRangePropertiesB3842463Attributes struct {
	ref terra.Reference
}

func (d DataNodePropertiesNodeRangePropertiesB3842463Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataNodePropertiesNodeRangePropertiesB3842463Attributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesB3842463Attributes {
	return DataNodePropertiesNodeRangePropertiesB3842463Attributes{ref: ref}
}

func (d DataNodePropertiesNodeRangePropertiesB3842463Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataNodePropertiesNodeRangePropertiesB3842463Attributes) ContainerPath() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("container_path"))
}

func (d DataNodePropertiesNodeRangePropertiesB3842463Attributes) HostPath() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("host_path"))
}

func (d DataNodePropertiesNodeRangePropertiesB3842463Attributes) Permissions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](d.ref.Append("permissions"))
}

type DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes struct {
	ref terra.Reference
}

func (t DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes {
	return DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes{ref: ref}
}

func (t DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes) ContainerPath() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("container_path"))
}

func (t DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes) MountOptions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](t.ref.Append("mount_options"))
}

func (t DataNodePropertiesNodeRangePropertiesD34Bd6B7Attributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("size"))
}

type DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes struct {
	ref terra.Reference
}

func (lc DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes{ref: ref}
}

func (lc DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes) LogDriver() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("log_driver"))
}

func (lc DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes) Options() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](lc.ref.Append("options"))
}

func (lc DataNodePropertiesNodeRangePropertiesContainerLogConfigurationAttributes) SecretOptions() terra.ListValue[DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes](lc.ref.Append("secret_options"))
}

type DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes struct {
	ref terra.Reference
}

func (so DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes {
	return DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes{ref: ref}
}

func (so DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("name"))
}

func (so DataNodePropertiesNodeRangePropertiesBb6Ae614Attributes) ValueFrom() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("value_from"))
}

type DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes struct {
	ref terra.Reference
}

func (mp DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes{ref: ref}
}

func (mp DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes) ContainerPath() terra.StringValue {
	return terra.ReferenceAsString(mp.ref.Append("container_path"))
}

func (mp DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes) ReadOnly() terra.BoolValue {
	return terra.ReferenceAsBool(mp.ref.Append("read_only"))
}

func (mp DataNodePropertiesNodeRangePropertiesContainerMountPointsAttributes) SourceVolume() terra.StringValue {
	return terra.ReferenceAsString(mp.ref.Append("source_volume"))
}

type DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes struct {
	ref terra.Reference
}

func (nc DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes{ref: ref}
}

func (nc DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationAttributes) AssignPublicIp() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("assign_public_ip"))
}

type DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes struct {
	ref terra.Reference
}

func (rr DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return rr.ref, nil
}

func (rr DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes{ref: ref}
}

func (rr DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rr.ref.InternalTokens()
}

func (rr DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("type"))
}

func (rr DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("value"))
}

type DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes struct {
	ref terra.Reference
}

func (rp DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes{ref: ref}
}

func (rp DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes) CpuArchitecture() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("cpu_architecture"))
}

func (rp DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformAttributes) OperatingSystemFamily() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("operating_system_family"))
}

type DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes struct {
	ref terra.Reference
}

func (s DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes{ref: ref}
}

func (s DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DataNodePropertiesNodeRangePropertiesContainerSecretsAttributes) ValueFrom() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("value_from"))
}

type DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes struct {
	ref terra.Reference
}

func (u DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes{ref: ref}
}

func (u DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes) HardLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(u.ref.Append("hard_limit"))
}

func (u DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("name"))
}

func (u DataNodePropertiesNodeRangePropertiesContainerUlimitsAttributes) SoftLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(u.ref.Append("soft_limit"))
}

type DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes struct {
	ref terra.Reference
}

func (v DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes {
	return DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes{ref: ref}
}

func (v DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes) EfsVolumeConfiguration() terra.ListValue[DataNodePropertiesNodeRangePropertiesA802B2EeAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangePropertiesA802B2EeAttributes](v.ref.Append("efs_volume_configuration"))
}

func (v DataNodePropertiesNodeRangePropertiesContainerVolumesAttributes) Host() terra.ListValue[DataNodePropertiesNodeRangeProperties7D5735FaAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangeProperties7D5735FaAttributes](v.ref.Append("host"))
}

type DataNodePropertiesNodeRangePropertiesA802B2EeAttributes struct {
	ref terra.Reference
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) InternalRef() (terra.Reference, error) {
	return evc.ref, nil
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangePropertiesA802B2EeAttributes {
	return DataNodePropertiesNodeRangePropertiesA802B2EeAttributes{ref: ref}
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return evc.ref.InternalTokens()
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(evc.ref.Append("file_system_id"))
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) RootDirectory() terra.StringValue {
	return terra.ReferenceAsString(evc.ref.Append("root_directory"))
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) TransitEncryption() terra.StringValue {
	return terra.ReferenceAsString(evc.ref.Append("transit_encryption"))
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) TransitEncryptionPort() terra.NumberValue {
	return terra.ReferenceAsNumber(evc.ref.Append("transit_encryption_port"))
}

func (evc DataNodePropertiesNodeRangePropertiesA802B2EeAttributes) AuthorizationConfig() terra.ListValue[DataNodePropertiesNodeRangeProperties9463B7AcAttributes] {
	return terra.ReferenceAsList[DataNodePropertiesNodeRangeProperties9463B7AcAttributes](evc.ref.Append("authorization_config"))
}

type DataNodePropertiesNodeRangeProperties9463B7AcAttributes struct {
	ref terra.Reference
}

func (ac DataNodePropertiesNodeRangeProperties9463B7AcAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac DataNodePropertiesNodeRangeProperties9463B7AcAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangeProperties9463B7AcAttributes {
	return DataNodePropertiesNodeRangeProperties9463B7AcAttributes{ref: ref}
}

func (ac DataNodePropertiesNodeRangeProperties9463B7AcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac DataNodePropertiesNodeRangeProperties9463B7AcAttributes) AccessPointId() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("access_point_id"))
}

func (ac DataNodePropertiesNodeRangeProperties9463B7AcAttributes) Iam() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("iam"))
}

type DataNodePropertiesNodeRangeProperties7D5735FaAttributes struct {
	ref terra.Reference
}

func (h DataNodePropertiesNodeRangeProperties7D5735FaAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataNodePropertiesNodeRangeProperties7D5735FaAttributes) InternalWithRef(ref terra.Reference) DataNodePropertiesNodeRangeProperties7D5735FaAttributes {
	return DataNodePropertiesNodeRangeProperties7D5735FaAttributes{ref: ref}
}

func (h DataNodePropertiesNodeRangeProperties7D5735FaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataNodePropertiesNodeRangeProperties7D5735FaAttributes) SourcePath() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("source_path"))
}

type DataRetryStrategyAttributes struct {
	ref terra.Reference
}

func (rs DataRetryStrategyAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs DataRetryStrategyAttributes) InternalWithRef(ref terra.Reference) DataRetryStrategyAttributes {
	return DataRetryStrategyAttributes{ref: ref}
}

func (rs DataRetryStrategyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs DataRetryStrategyAttributes) Attempts() terra.NumberValue {
	return terra.ReferenceAsNumber(rs.ref.Append("attempts"))
}

func (rs DataRetryStrategyAttributes) EvaluateOnExit() terra.ListValue[DataRetryStrategyEvaluateOnExitAttributes] {
	return terra.ReferenceAsList[DataRetryStrategyEvaluateOnExitAttributes](rs.ref.Append("evaluate_on_exit"))
}

type DataRetryStrategyEvaluateOnExitAttributes struct {
	ref terra.Reference
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) InternalRef() (terra.Reference, error) {
	return eoe.ref, nil
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) InternalWithRef(ref terra.Reference) DataRetryStrategyEvaluateOnExitAttributes {
	return DataRetryStrategyEvaluateOnExitAttributes{ref: ref}
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eoe.ref.InternalTokens()
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(eoe.ref.Append("action"))
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) OnExitCode() terra.StringValue {
	return terra.ReferenceAsString(eoe.ref.Append("on_exit_code"))
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) OnReason() terra.StringValue {
	return terra.ReferenceAsString(eoe.ref.Append("on_reason"))
}

func (eoe DataRetryStrategyEvaluateOnExitAttributes) OnStatusReason() terra.StringValue {
	return terra.ReferenceAsString(eoe.ref.Append("on_status_reason"))
}

type DataTimeoutAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutAttributes) InternalWithRef(ref terra.Reference) DataTimeoutAttributes {
	return DataTimeoutAttributes{ref: ref}
}

func (t DataTimeoutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutAttributes) AttemptDurationSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("attempt_duration_seconds"))
}

type DataEksPropertiesState struct {
	PodProperties []DataEksPropertiesPodPropertiesState `json:"pod_properties"`
}

type DataEksPropertiesPodPropertiesState struct {
	DnsPolicy          string                                          `json:"dns_policy"`
	HostNetwork        bool                                            `json:"host_network"`
	ServiceAccountName bool                                            `json:"service_account_name"`
	Containers         []DataEksPropertiesPodPropertiesContainersState `json:"containers"`
	Metadata           []DataEksPropertiesPodPropertiesMetadataState   `json:"metadata"`
	Volumes            []DataEksPropertiesPodPropertiesVolumesState    `json:"volumes"`
}

type DataEksPropertiesPodPropertiesContainersState struct {
	Args            []string                                                       `json:"args"`
	Command         []string                                                       `json:"command"`
	Image           string                                                         `json:"image"`
	ImagePullPolicy string                                                         `json:"image_pull_policy"`
	Name            string                                                         `json:"name"`
	Env             []DataEksPropertiesPodPropertiesContainersEnvState             `json:"env"`
	Resources       []DataEksPropertiesPodPropertiesContainersResourcesState       `json:"resources"`
	SecurityContext []DataEksPropertiesPodPropertiesContainersSecurityContextState `json:"security_context"`
	VolumeMounts    []DataEksPropertiesPodPropertiesContainersVolumeMountsState    `json:"volume_mounts"`
}

type DataEksPropertiesPodPropertiesContainersEnvState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataEksPropertiesPodPropertiesContainersResourcesState struct {
	Limits   map[string]string `json:"limits"`
	Requests map[string]string `json:"requests"`
}

type DataEksPropertiesPodPropertiesContainersSecurityContextState struct {
	Privileged             bool    `json:"privileged"`
	ReadOnlyRootFileSystem bool    `json:"read_only_root_file_system"`
	RunAsGroup             float64 `json:"run_as_group"`
	RunAsNonRoot           bool    `json:"run_as_non_root"`
	RunAsUser              float64 `json:"run_as_user"`
}

type DataEksPropertiesPodPropertiesContainersVolumeMountsState struct {
	MountPath string `json:"mount_path"`
	Name      string `json:"name"`
	ReadOnly  bool   `json:"read_only"`
}

type DataEksPropertiesPodPropertiesMetadataState struct {
	Labels map[string]string `json:"labels"`
}

type DataEksPropertiesPodPropertiesVolumesState struct {
	Name     string                                               `json:"name"`
	EmptyDir []DataEksPropertiesPodPropertiesVolumesEmptyDirState `json:"empty_dir"`
	HostPath []DataEksPropertiesPodPropertiesVolumesHostPathState `json:"host_path"`
	Secret   []DataEksPropertiesPodPropertiesVolumesSecretState   `json:"secret"`
}

type DataEksPropertiesPodPropertiesVolumesEmptyDirState struct {
	Medium    string `json:"medium"`
	SizeLimit string `json:"size_limit"`
}

type DataEksPropertiesPodPropertiesVolumesHostPathState struct {
	Path string `json:"path"`
}

type DataEksPropertiesPodPropertiesVolumesSecretState struct {
	Optional   bool   `json:"optional"`
	SecretName string `json:"secret_name"`
}

type DataNodePropertiesState struct {
	MainNode            float64                                      `json:"main_node"`
	NumNodes            float64                                      `json:"num_nodes"`
	NodeRangeProperties []DataNodePropertiesNodeRangePropertiesState `json:"node_range_properties"`
}

type DataNodePropertiesNodeRangePropertiesState struct {
	TargetNodes string                                                `json:"target_nodes"`
	Container   []DataNodePropertiesNodeRangePropertiesContainerState `json:"container"`
}

type DataNodePropertiesNodeRangePropertiesContainerState struct {
	Command                      []string                                                                          `json:"command"`
	ExecutionRoleArn             string                                                                            `json:"execution_role_arn"`
	Image                        string                                                                            `json:"image"`
	InstanceType                 string                                                                            `json:"instance_type"`
	JobRoleArn                   string                                                                            `json:"job_role_arn"`
	Privileged                   bool                                                                              `json:"privileged"`
	ReadonlyRootFilesystem       bool                                                                              `json:"readonly_root_filesystem"`
	User                         string                                                                            `json:"user"`
	Environment                  []DataNodePropertiesNodeRangePropertiesContainerEnvironmentState                  `json:"environment"`
	EphemeralStorage             []DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageState             `json:"ephemeral_storage"`
	FargatePlatformConfiguration []DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationState `json:"fargate_platform_configuration"`
	LinuxParameters              []DataNodePropertiesNodeRangePropertiesContainerLinuxParametersState              `json:"linux_parameters"`
	LogConfiguration             []DataNodePropertiesNodeRangePropertiesContainerLogConfigurationState             `json:"log_configuration"`
	MountPoints                  []DataNodePropertiesNodeRangePropertiesContainerMountPointsState                  `json:"mount_points"`
	NetworkConfiguration         []DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationState         `json:"network_configuration"`
	ResourceRequirements         []DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsState         `json:"resource_requirements"`
	RuntimePlatform              []DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformState              `json:"runtime_platform"`
	Secrets                      []DataNodePropertiesNodeRangePropertiesContainerSecretsState                      `json:"secrets"`
	Ulimits                      []DataNodePropertiesNodeRangePropertiesContainerUlimitsState                      `json:"ulimits"`
	Volumes                      []DataNodePropertiesNodeRangePropertiesContainerVolumesState                      `json:"volumes"`
}

type DataNodePropertiesNodeRangePropertiesContainerEnvironmentState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataNodePropertiesNodeRangePropertiesContainerEphemeralStorageState struct {
	SizeInGib float64 `json:"size_in_gib"`
}

type DataNodePropertiesNodeRangePropertiesContainerFargatePlatformConfigurationState struct {
	PlatformVersion string `json:"platform_version"`
}

type DataNodePropertiesNodeRangePropertiesContainerLinuxParametersState struct {
	InitProcessEnabled bool                                                 `json:"init_process_enabled"`
	MaxSwap            float64                                              `json:"max_swap"`
	SharedMemorySize   float64                                              `json:"shared_memory_size"`
	Swappiness         float64                                              `json:"swappiness"`
	Devices            []DataNodePropertiesNodeRangePropertiesB3842463State `json:"devices"`
	Tmpfs              []DataNodePropertiesNodeRangePropertiesD34Bd6B7State `json:"tmpfs"`
}

type DataNodePropertiesNodeRangePropertiesB3842463State struct {
	ContainerPath string   `json:"container_path"`
	HostPath      string   `json:"host_path"`
	Permissions   []string `json:"permissions"`
}

type DataNodePropertiesNodeRangePropertiesD34Bd6B7State struct {
	ContainerPath string   `json:"container_path"`
	MountOptions  []string `json:"mount_options"`
	Size          float64  `json:"size"`
}

type DataNodePropertiesNodeRangePropertiesContainerLogConfigurationState struct {
	LogDriver     string                                               `json:"log_driver"`
	Options       map[string]string                                    `json:"options"`
	SecretOptions []DataNodePropertiesNodeRangePropertiesBb6Ae614State `json:"secret_options"`
}

type DataNodePropertiesNodeRangePropertiesBb6Ae614State struct {
	Name      string `json:"name"`
	ValueFrom string `json:"value_from"`
}

type DataNodePropertiesNodeRangePropertiesContainerMountPointsState struct {
	ContainerPath string `json:"container_path"`
	ReadOnly      bool   `json:"read_only"`
	SourceVolume  string `json:"source_volume"`
}

type DataNodePropertiesNodeRangePropertiesContainerNetworkConfigurationState struct {
	AssignPublicIp bool `json:"assign_public_ip"`
}

type DataNodePropertiesNodeRangePropertiesContainerResourceRequirementsState struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}

type DataNodePropertiesNodeRangePropertiesContainerRuntimePlatformState struct {
	CpuArchitecture       string `json:"cpu_architecture"`
	OperatingSystemFamily string `json:"operating_system_family"`
}

type DataNodePropertiesNodeRangePropertiesContainerSecretsState struct {
	Name      string `json:"name"`
	ValueFrom string `json:"value_from"`
}

type DataNodePropertiesNodeRangePropertiesContainerUlimitsState struct {
	HardLimit float64 `json:"hard_limit"`
	Name      string  `json:"name"`
	SoftLimit float64 `json:"soft_limit"`
}

type DataNodePropertiesNodeRangePropertiesContainerVolumesState struct {
	Name                   string                                               `json:"name"`
	EfsVolumeConfiguration []DataNodePropertiesNodeRangePropertiesA802B2EeState `json:"efs_volume_configuration"`
	Host                   []DataNodePropertiesNodeRangeProperties7D5735FaState `json:"host"`
}

type DataNodePropertiesNodeRangePropertiesA802B2EeState struct {
	FileSystemId          string                                               `json:"file_system_id"`
	RootDirectory         string                                               `json:"root_directory"`
	TransitEncryption     string                                               `json:"transit_encryption"`
	TransitEncryptionPort float64                                              `json:"transit_encryption_port"`
	AuthorizationConfig   []DataNodePropertiesNodeRangeProperties9463B7AcState `json:"authorization_config"`
}

type DataNodePropertiesNodeRangeProperties9463B7AcState struct {
	AccessPointId string `json:"access_point_id"`
	Iam           string `json:"iam"`
}

type DataNodePropertiesNodeRangeProperties7D5735FaState struct {
	SourcePath string `json:"source_path"`
}

type DataRetryStrategyState struct {
	Attempts       float64                                `json:"attempts"`
	EvaluateOnExit []DataRetryStrategyEvaluateOnExitState `json:"evaluate_on_exit"`
}

type DataRetryStrategyEvaluateOnExitState struct {
	Action         string `json:"action"`
	OnExitCode     string `json:"on_exit_code"`
	OnReason       string `json:"on_reason"`
	OnStatusReason string `json:"on_status_reason"`
}

type DataTimeoutState struct {
	AttemptDurationSeconds float64 `json:"attempt_duration_seconds"`
}
