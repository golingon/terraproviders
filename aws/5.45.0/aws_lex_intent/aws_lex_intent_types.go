// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lex_intent

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ConclusionStatement struct {
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// ConclusionStatementMessage: min=1,max=15
	Message []ConclusionStatementMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type ConclusionStatementMessage struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber: number, optional
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type ConfirmationPrompt struct {
	// MaxAttempts: number, required
	MaxAttempts terra.NumberValue `hcl:"max_attempts,attr" validate:"required"`
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// ConfirmationPromptMessage: min=1,max=15
	Message []ConfirmationPromptMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type ConfirmationPromptMessage struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber: number, optional
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type DialogCodeHook struct {
	// MessageVersion: string, required
	MessageVersion terra.StringValue `hcl:"message_version,attr" validate:"required"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
}

type FollowUpPrompt struct {
	// FollowUpPromptPrompt: required
	Prompt *FollowUpPromptPrompt `hcl:"prompt,block" validate:"required"`
	// FollowUpPromptRejectionStatement: required
	RejectionStatement *FollowUpPromptRejectionStatement `hcl:"rejection_statement,block" validate:"required"`
}

type FollowUpPromptPrompt struct {
	// MaxAttempts: number, required
	MaxAttempts terra.NumberValue `hcl:"max_attempts,attr" validate:"required"`
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// FollowUpPromptPromptMessage: min=1,max=15
	Message []FollowUpPromptPromptMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type FollowUpPromptPromptMessage struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber: number, optional
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type FollowUpPromptRejectionStatement struct {
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// FollowUpPromptRejectionStatementMessage: min=1,max=15
	Message []FollowUpPromptRejectionStatementMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type FollowUpPromptRejectionStatementMessage struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber: number, optional
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type FulfillmentActivity struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// FulfillmentActivityCodeHook: optional
	CodeHook *FulfillmentActivityCodeHook `hcl:"code_hook,block"`
}

type FulfillmentActivityCodeHook struct {
	// MessageVersion: string, required
	MessageVersion terra.StringValue `hcl:"message_version,attr" validate:"required"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
}

type RejectionStatement struct {
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// RejectionStatementMessage: min=1,max=15
	Message []RejectionStatementMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type RejectionStatementMessage struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber: number, optional
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type Slot struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// SampleUtterances: list of string, optional
	SampleUtterances terra.ListValue[terra.StringValue] `hcl:"sample_utterances,attr"`
	// SlotConstraint: string, required
	SlotConstraint terra.StringValue `hcl:"slot_constraint,attr" validate:"required"`
	// SlotType: string, required
	SlotType terra.StringValue `hcl:"slot_type,attr" validate:"required"`
	// SlotTypeVersion: string, optional
	SlotTypeVersion terra.StringValue `hcl:"slot_type_version,attr"`
	// SlotValueElicitationPrompt: optional
	ValueElicitationPrompt *SlotValueElicitationPrompt `hcl:"value_elicitation_prompt,block"`
}

type SlotValueElicitationPrompt struct {
	// MaxAttempts: number, required
	MaxAttempts terra.NumberValue `hcl:"max_attempts,attr" validate:"required"`
	// ResponseCard: string, optional
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// SlotValueElicitationPromptMessage: min=1,max=15
	Message []SlotValueElicitationPromptMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type SlotValueElicitationPromptMessage struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber: number, optional
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ConclusionStatementAttributes struct {
	ref terra.Reference
}

func (cs ConclusionStatementAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs ConclusionStatementAttributes) InternalWithRef(ref terra.Reference) ConclusionStatementAttributes {
	return ConclusionStatementAttributes{ref: ref}
}

func (cs ConclusionStatementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs ConclusionStatementAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("response_card"))
}

func (cs ConclusionStatementAttributes) Message() terra.SetValue[ConclusionStatementMessageAttributes] {
	return terra.ReferenceAsSet[ConclusionStatementMessageAttributes](cs.ref.Append("message"))
}

type ConclusionStatementMessageAttributes struct {
	ref terra.Reference
}

func (m ConclusionStatementMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m ConclusionStatementMessageAttributes) InternalWithRef(ref terra.Reference) ConclusionStatementMessageAttributes {
	return ConclusionStatementMessageAttributes{ref: ref}
}

func (m ConclusionStatementMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m ConclusionStatementMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m ConclusionStatementMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m ConclusionStatementMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type ConfirmationPromptAttributes struct {
	ref terra.Reference
}

func (cp ConfirmationPromptAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp ConfirmationPromptAttributes) InternalWithRef(ref terra.Reference) ConfirmationPromptAttributes {
	return ConfirmationPromptAttributes{ref: ref}
}

func (cp ConfirmationPromptAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp ConfirmationPromptAttributes) MaxAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(cp.ref.Append("max_attempts"))
}

func (cp ConfirmationPromptAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("response_card"))
}

func (cp ConfirmationPromptAttributes) Message() terra.SetValue[ConfirmationPromptMessageAttributes] {
	return terra.ReferenceAsSet[ConfirmationPromptMessageAttributes](cp.ref.Append("message"))
}

type ConfirmationPromptMessageAttributes struct {
	ref terra.Reference
}

func (m ConfirmationPromptMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m ConfirmationPromptMessageAttributes) InternalWithRef(ref terra.Reference) ConfirmationPromptMessageAttributes {
	return ConfirmationPromptMessageAttributes{ref: ref}
}

func (m ConfirmationPromptMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m ConfirmationPromptMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m ConfirmationPromptMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m ConfirmationPromptMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type DialogCodeHookAttributes struct {
	ref terra.Reference
}

func (dch DialogCodeHookAttributes) InternalRef() (terra.Reference, error) {
	return dch.ref, nil
}

func (dch DialogCodeHookAttributes) InternalWithRef(ref terra.Reference) DialogCodeHookAttributes {
	return DialogCodeHookAttributes{ref: ref}
}

func (dch DialogCodeHookAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dch.ref.InternalTokens()
}

func (dch DialogCodeHookAttributes) MessageVersion() terra.StringValue {
	return terra.ReferenceAsString(dch.ref.Append("message_version"))
}

func (dch DialogCodeHookAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(dch.ref.Append("uri"))
}

type FollowUpPromptAttributes struct {
	ref terra.Reference
}

func (fup FollowUpPromptAttributes) InternalRef() (terra.Reference, error) {
	return fup.ref, nil
}

func (fup FollowUpPromptAttributes) InternalWithRef(ref terra.Reference) FollowUpPromptAttributes {
	return FollowUpPromptAttributes{ref: ref}
}

func (fup FollowUpPromptAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fup.ref.InternalTokens()
}

func (fup FollowUpPromptAttributes) Prompt() terra.ListValue[FollowUpPromptPromptAttributes] {
	return terra.ReferenceAsList[FollowUpPromptPromptAttributes](fup.ref.Append("prompt"))
}

func (fup FollowUpPromptAttributes) RejectionStatement() terra.ListValue[FollowUpPromptRejectionStatementAttributes] {
	return terra.ReferenceAsList[FollowUpPromptRejectionStatementAttributes](fup.ref.Append("rejection_statement"))
}

type FollowUpPromptPromptAttributes struct {
	ref terra.Reference
}

func (p FollowUpPromptPromptAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p FollowUpPromptPromptAttributes) InternalWithRef(ref terra.Reference) FollowUpPromptPromptAttributes {
	return FollowUpPromptPromptAttributes{ref: ref}
}

func (p FollowUpPromptPromptAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p FollowUpPromptPromptAttributes) MaxAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("max_attempts"))
}

func (p FollowUpPromptPromptAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("response_card"))
}

func (p FollowUpPromptPromptAttributes) Message() terra.SetValue[FollowUpPromptPromptMessageAttributes] {
	return terra.ReferenceAsSet[FollowUpPromptPromptMessageAttributes](p.ref.Append("message"))
}

type FollowUpPromptPromptMessageAttributes struct {
	ref terra.Reference
}

func (m FollowUpPromptPromptMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FollowUpPromptPromptMessageAttributes) InternalWithRef(ref terra.Reference) FollowUpPromptPromptMessageAttributes {
	return FollowUpPromptPromptMessageAttributes{ref: ref}
}

func (m FollowUpPromptPromptMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FollowUpPromptPromptMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m FollowUpPromptPromptMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m FollowUpPromptPromptMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type FollowUpPromptRejectionStatementAttributes struct {
	ref terra.Reference
}

func (rs FollowUpPromptRejectionStatementAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs FollowUpPromptRejectionStatementAttributes) InternalWithRef(ref terra.Reference) FollowUpPromptRejectionStatementAttributes {
	return FollowUpPromptRejectionStatementAttributes{ref: ref}
}

func (rs FollowUpPromptRejectionStatementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs FollowUpPromptRejectionStatementAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("response_card"))
}

func (rs FollowUpPromptRejectionStatementAttributes) Message() terra.SetValue[FollowUpPromptRejectionStatementMessageAttributes] {
	return terra.ReferenceAsSet[FollowUpPromptRejectionStatementMessageAttributes](rs.ref.Append("message"))
}

type FollowUpPromptRejectionStatementMessageAttributes struct {
	ref terra.Reference
}

func (m FollowUpPromptRejectionStatementMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FollowUpPromptRejectionStatementMessageAttributes) InternalWithRef(ref terra.Reference) FollowUpPromptRejectionStatementMessageAttributes {
	return FollowUpPromptRejectionStatementMessageAttributes{ref: ref}
}

func (m FollowUpPromptRejectionStatementMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FollowUpPromptRejectionStatementMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m FollowUpPromptRejectionStatementMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m FollowUpPromptRejectionStatementMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type FulfillmentActivityAttributes struct {
	ref terra.Reference
}

func (fa FulfillmentActivityAttributes) InternalRef() (terra.Reference, error) {
	return fa.ref, nil
}

func (fa FulfillmentActivityAttributes) InternalWithRef(ref terra.Reference) FulfillmentActivityAttributes {
	return FulfillmentActivityAttributes{ref: ref}
}

func (fa FulfillmentActivityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fa.ref.InternalTokens()
}

func (fa FulfillmentActivityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("type"))
}

func (fa FulfillmentActivityAttributes) CodeHook() terra.ListValue[FulfillmentActivityCodeHookAttributes] {
	return terra.ReferenceAsList[FulfillmentActivityCodeHookAttributes](fa.ref.Append("code_hook"))
}

type FulfillmentActivityCodeHookAttributes struct {
	ref terra.Reference
}

func (ch FulfillmentActivityCodeHookAttributes) InternalRef() (terra.Reference, error) {
	return ch.ref, nil
}

func (ch FulfillmentActivityCodeHookAttributes) InternalWithRef(ref terra.Reference) FulfillmentActivityCodeHookAttributes {
	return FulfillmentActivityCodeHookAttributes{ref: ref}
}

func (ch FulfillmentActivityCodeHookAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ch.ref.InternalTokens()
}

func (ch FulfillmentActivityCodeHookAttributes) MessageVersion() terra.StringValue {
	return terra.ReferenceAsString(ch.ref.Append("message_version"))
}

func (ch FulfillmentActivityCodeHookAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(ch.ref.Append("uri"))
}

type RejectionStatementAttributes struct {
	ref terra.Reference
}

func (rs RejectionStatementAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs RejectionStatementAttributes) InternalWithRef(ref terra.Reference) RejectionStatementAttributes {
	return RejectionStatementAttributes{ref: ref}
}

func (rs RejectionStatementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs RejectionStatementAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("response_card"))
}

func (rs RejectionStatementAttributes) Message() terra.SetValue[RejectionStatementMessageAttributes] {
	return terra.ReferenceAsSet[RejectionStatementMessageAttributes](rs.ref.Append("message"))
}

type RejectionStatementMessageAttributes struct {
	ref terra.Reference
}

func (m RejectionStatementMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m RejectionStatementMessageAttributes) InternalWithRef(ref terra.Reference) RejectionStatementMessageAttributes {
	return RejectionStatementMessageAttributes{ref: ref}
}

func (m RejectionStatementMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m RejectionStatementMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m RejectionStatementMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m RejectionStatementMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type SlotAttributes struct {
	ref terra.Reference
}

func (s SlotAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SlotAttributes) InternalWithRef(ref terra.Reference) SlotAttributes {
	return SlotAttributes{ref: ref}
}

func (s SlotAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SlotAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("description"))
}

func (s SlotAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s SlotAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("priority"))
}

func (s SlotAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("response_card"))
}

func (s SlotAttributes) SampleUtterances() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("sample_utterances"))
}

func (s SlotAttributes) SlotConstraint() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("slot_constraint"))
}

func (s SlotAttributes) SlotType() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("slot_type"))
}

func (s SlotAttributes) SlotTypeVersion() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("slot_type_version"))
}

func (s SlotAttributes) ValueElicitationPrompt() terra.ListValue[SlotValueElicitationPromptAttributes] {
	return terra.ReferenceAsList[SlotValueElicitationPromptAttributes](s.ref.Append("value_elicitation_prompt"))
}

type SlotValueElicitationPromptAttributes struct {
	ref terra.Reference
}

func (vep SlotValueElicitationPromptAttributes) InternalRef() (terra.Reference, error) {
	return vep.ref, nil
}

func (vep SlotValueElicitationPromptAttributes) InternalWithRef(ref terra.Reference) SlotValueElicitationPromptAttributes {
	return SlotValueElicitationPromptAttributes{ref: ref}
}

func (vep SlotValueElicitationPromptAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vep.ref.InternalTokens()
}

func (vep SlotValueElicitationPromptAttributes) MaxAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(vep.ref.Append("max_attempts"))
}

func (vep SlotValueElicitationPromptAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(vep.ref.Append("response_card"))
}

func (vep SlotValueElicitationPromptAttributes) Message() terra.SetValue[SlotValueElicitationPromptMessageAttributes] {
	return terra.ReferenceAsSet[SlotValueElicitationPromptMessageAttributes](vep.ref.Append("message"))
}

type SlotValueElicitationPromptMessageAttributes struct {
	ref terra.Reference
}

func (m SlotValueElicitationPromptMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m SlotValueElicitationPromptMessageAttributes) InternalWithRef(ref terra.Reference) SlotValueElicitationPromptMessageAttributes {
	return SlotValueElicitationPromptMessageAttributes{ref: ref}
}

func (m SlotValueElicitationPromptMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m SlotValueElicitationPromptMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m SlotValueElicitationPromptMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m SlotValueElicitationPromptMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ConclusionStatementState struct {
	ResponseCard string                            `json:"response_card"`
	Message      []ConclusionStatementMessageState `json:"message"`
}

type ConclusionStatementMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type ConfirmationPromptState struct {
	MaxAttempts  float64                          `json:"max_attempts"`
	ResponseCard string                           `json:"response_card"`
	Message      []ConfirmationPromptMessageState `json:"message"`
}

type ConfirmationPromptMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type DialogCodeHookState struct {
	MessageVersion string `json:"message_version"`
	Uri            string `json:"uri"`
}

type FollowUpPromptState struct {
	Prompt             []FollowUpPromptPromptState             `json:"prompt"`
	RejectionStatement []FollowUpPromptRejectionStatementState `json:"rejection_statement"`
}

type FollowUpPromptPromptState struct {
	MaxAttempts  float64                            `json:"max_attempts"`
	ResponseCard string                             `json:"response_card"`
	Message      []FollowUpPromptPromptMessageState `json:"message"`
}

type FollowUpPromptPromptMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type FollowUpPromptRejectionStatementState struct {
	ResponseCard string                                         `json:"response_card"`
	Message      []FollowUpPromptRejectionStatementMessageState `json:"message"`
}

type FollowUpPromptRejectionStatementMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type FulfillmentActivityState struct {
	Type     string                             `json:"type"`
	CodeHook []FulfillmentActivityCodeHookState `json:"code_hook"`
}

type FulfillmentActivityCodeHookState struct {
	MessageVersion string `json:"message_version"`
	Uri            string `json:"uri"`
}

type RejectionStatementState struct {
	ResponseCard string                           `json:"response_card"`
	Message      []RejectionStatementMessageState `json:"message"`
}

type RejectionStatementMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type SlotState struct {
	Description            string                            `json:"description"`
	Name                   string                            `json:"name"`
	Priority               float64                           `json:"priority"`
	ResponseCard           string                            `json:"response_card"`
	SampleUtterances       []string                          `json:"sample_utterances"`
	SlotConstraint         string                            `json:"slot_constraint"`
	SlotType               string                            `json:"slot_type"`
	SlotTypeVersion        string                            `json:"slot_type_version"`
	ValueElicitationPrompt []SlotValueElicitationPromptState `json:"value_elicitation_prompt"`
}

type SlotValueElicitationPromptState struct {
	MaxAttempts  float64                                  `json:"max_attempts"`
	ResponseCard string                                   `json:"response_card"`
	Message      []SlotValueElicitationPromptMessageState `json:"message"`
}

type SlotValueElicitationPromptMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
