// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lex_intent

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lex_intent.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLexIntentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ali *Resource) Type() string {
	return "aws_lex_intent"
}

// LocalName returns the local name for [Resource].
func (ali *Resource) LocalName() string {
	return ali.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ali *Resource) Configuration() interface{} {
	return ali.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ali *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ali)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ali *Resource) Dependencies() terra.Dependencies {
	return ali.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ali *Resource) LifecycleManagement() *terra.Lifecycle {
	return ali.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ali *Resource) Attributes() awsLexIntentAttributes {
	return awsLexIntentAttributes{ref: terra.ReferenceResource(ali)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ali *Resource) ImportState(state io.Reader) error {
	ali.state = &awsLexIntentState{}
	if err := json.NewDecoder(state).Decode(ali.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ali.Type(), ali.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ali *Resource) State() (*awsLexIntentState, bool) {
	return ali.state, ali.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ali *Resource) StateMust() *awsLexIntentState {
	if ali.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ali.Type(), ali.LocalName()))
	}
	return ali.state
}

// Args contains the configurations for aws_lex_intent.
type Args struct {
	// CreateVersion: bool, optional
	CreateVersion terra.BoolValue `hcl:"create_version,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ParentIntentSignature: string, optional
	ParentIntentSignature terra.StringValue `hcl:"parent_intent_signature,attr"`
	// SampleUtterances: set of string, optional
	SampleUtterances terra.SetValue[terra.StringValue] `hcl:"sample_utterances,attr"`
	// ConclusionStatement: optional
	ConclusionStatement *ConclusionStatement `hcl:"conclusion_statement,block"`
	// ConfirmationPrompt: optional
	ConfirmationPrompt *ConfirmationPrompt `hcl:"confirmation_prompt,block"`
	// DialogCodeHook: optional
	DialogCodeHook *DialogCodeHook `hcl:"dialog_code_hook,block"`
	// FollowUpPrompt: optional
	FollowUpPrompt *FollowUpPrompt `hcl:"follow_up_prompt,block"`
	// FulfillmentActivity: required
	FulfillmentActivity *FulfillmentActivity `hcl:"fulfillment_activity,block" validate:"required"`
	// RejectionStatement: optional
	RejectionStatement *RejectionStatement `hcl:"rejection_statement,block"`
	// Slot: min=0,max=100
	Slot []Slot `hcl:"slot,block" validate:"min=0,max=100"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsLexIntentAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_lex_intent.
func (ali awsLexIntentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("arn"))
}

// Checksum returns a reference to field checksum of aws_lex_intent.
func (ali awsLexIntentAttributes) Checksum() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("checksum"))
}

// CreateVersion returns a reference to field create_version of aws_lex_intent.
func (ali awsLexIntentAttributes) CreateVersion() terra.BoolValue {
	return terra.ReferenceAsBool(ali.ref.Append("create_version"))
}

// CreatedDate returns a reference to field created_date of aws_lex_intent.
func (ali awsLexIntentAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("created_date"))
}

// Description returns a reference to field description of aws_lex_intent.
func (ali awsLexIntentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("description"))
}

// Id returns a reference to field id of aws_lex_intent.
func (ali awsLexIntentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("id"))
}

// LastUpdatedDate returns a reference to field last_updated_date of aws_lex_intent.
func (ali awsLexIntentAttributes) LastUpdatedDate() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("last_updated_date"))
}

// Name returns a reference to field name of aws_lex_intent.
func (ali awsLexIntentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("name"))
}

// ParentIntentSignature returns a reference to field parent_intent_signature of aws_lex_intent.
func (ali awsLexIntentAttributes) ParentIntentSignature() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("parent_intent_signature"))
}

// SampleUtterances returns a reference to field sample_utterances of aws_lex_intent.
func (ali awsLexIntentAttributes) SampleUtterances() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ali.ref.Append("sample_utterances"))
}

// Version returns a reference to field version of aws_lex_intent.
func (ali awsLexIntentAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("version"))
}

func (ali awsLexIntentAttributes) ConclusionStatement() terra.ListValue[ConclusionStatementAttributes] {
	return terra.ReferenceAsList[ConclusionStatementAttributes](ali.ref.Append("conclusion_statement"))
}

func (ali awsLexIntentAttributes) ConfirmationPrompt() terra.ListValue[ConfirmationPromptAttributes] {
	return terra.ReferenceAsList[ConfirmationPromptAttributes](ali.ref.Append("confirmation_prompt"))
}

func (ali awsLexIntentAttributes) DialogCodeHook() terra.ListValue[DialogCodeHookAttributes] {
	return terra.ReferenceAsList[DialogCodeHookAttributes](ali.ref.Append("dialog_code_hook"))
}

func (ali awsLexIntentAttributes) FollowUpPrompt() terra.ListValue[FollowUpPromptAttributes] {
	return terra.ReferenceAsList[FollowUpPromptAttributes](ali.ref.Append("follow_up_prompt"))
}

func (ali awsLexIntentAttributes) FulfillmentActivity() terra.ListValue[FulfillmentActivityAttributes] {
	return terra.ReferenceAsList[FulfillmentActivityAttributes](ali.ref.Append("fulfillment_activity"))
}

func (ali awsLexIntentAttributes) RejectionStatement() terra.ListValue[RejectionStatementAttributes] {
	return terra.ReferenceAsList[RejectionStatementAttributes](ali.ref.Append("rejection_statement"))
}

func (ali awsLexIntentAttributes) Slot() terra.SetValue[SlotAttributes] {
	return terra.ReferenceAsSet[SlotAttributes](ali.ref.Append("slot"))
}

func (ali awsLexIntentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ali.ref.Append("timeouts"))
}

type awsLexIntentState struct {
	Arn                   string                     `json:"arn"`
	Checksum              string                     `json:"checksum"`
	CreateVersion         bool                       `json:"create_version"`
	CreatedDate           string                     `json:"created_date"`
	Description           string                     `json:"description"`
	Id                    string                     `json:"id"`
	LastUpdatedDate       string                     `json:"last_updated_date"`
	Name                  string                     `json:"name"`
	ParentIntentSignature string                     `json:"parent_intent_signature"`
	SampleUtterances      []string                   `json:"sample_utterances"`
	Version               string                     `json:"version"`
	ConclusionStatement   []ConclusionStatementState `json:"conclusion_statement"`
	ConfirmationPrompt    []ConfirmationPromptState  `json:"confirmation_prompt"`
	DialogCodeHook        []DialogCodeHookState      `json:"dialog_code_hook"`
	FollowUpPrompt        []FollowUpPromptState      `json:"follow_up_prompt"`
	FulfillmentActivity   []FulfillmentActivityState `json:"fulfillment_activity"`
	RejectionStatement    []RejectionStatementState  `json:"rejection_statement"`
	Slot                  []SlotState                `json:"slot"`
	Timeouts              *TimeoutsState             `json:"timeouts"`
}
