// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_redshift_snapshot_schedule_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_redshift_snapshot_schedule_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsRedshiftSnapshotScheduleAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arssa *Resource) Type() string {
	return "aws_redshift_snapshot_schedule_association"
}

// LocalName returns the local name for [Resource].
func (arssa *Resource) LocalName() string {
	return arssa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arssa *Resource) Configuration() interface{} {
	return arssa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arssa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arssa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arssa *Resource) Dependencies() terra.Dependencies {
	return arssa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arssa *Resource) LifecycleManagement() *terra.Lifecycle {
	return arssa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arssa *Resource) Attributes() awsRedshiftSnapshotScheduleAssociationAttributes {
	return awsRedshiftSnapshotScheduleAssociationAttributes{ref: terra.ReferenceResource(arssa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arssa *Resource) ImportState(state io.Reader) error {
	arssa.state = &awsRedshiftSnapshotScheduleAssociationState{}
	if err := json.NewDecoder(state).Decode(arssa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arssa.Type(), arssa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arssa *Resource) State() (*awsRedshiftSnapshotScheduleAssociationState, bool) {
	return arssa.state, arssa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arssa *Resource) StateMust() *awsRedshiftSnapshotScheduleAssociationState {
	if arssa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arssa.Type(), arssa.LocalName()))
	}
	return arssa.state
}

// Args contains the configurations for aws_redshift_snapshot_schedule_association.
type Args struct {
	// ClusterIdentifier: string, required
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ScheduleIdentifier: string, required
	ScheduleIdentifier terra.StringValue `hcl:"schedule_identifier,attr" validate:"required"`
}

type awsRedshiftSnapshotScheduleAssociationAttributes struct {
	ref terra.Reference
}

// ClusterIdentifier returns a reference to field cluster_identifier of aws_redshift_snapshot_schedule_association.
func (arssa awsRedshiftSnapshotScheduleAssociationAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(arssa.ref.Append("cluster_identifier"))
}

// Id returns a reference to field id of aws_redshift_snapshot_schedule_association.
func (arssa awsRedshiftSnapshotScheduleAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arssa.ref.Append("id"))
}

// ScheduleIdentifier returns a reference to field schedule_identifier of aws_redshift_snapshot_schedule_association.
func (arssa awsRedshiftSnapshotScheduleAssociationAttributes) ScheduleIdentifier() terra.StringValue {
	return terra.ReferenceAsString(arssa.ref.Append("schedule_identifier"))
}

type awsRedshiftSnapshotScheduleAssociationState struct {
	ClusterIdentifier  string `json:"cluster_identifier"`
	Id                 string `json:"id"`
	ScheduleIdentifier string `json:"schedule_identifier"`
}
