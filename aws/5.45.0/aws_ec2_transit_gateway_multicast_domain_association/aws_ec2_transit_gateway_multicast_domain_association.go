// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_transit_gateway_multicast_domain_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ec2_transit_gateway_multicast_domain_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEc2TransitGatewayMulticastDomainAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aetgmda *Resource) Type() string {
	return "aws_ec2_transit_gateway_multicast_domain_association"
}

// LocalName returns the local name for [Resource].
func (aetgmda *Resource) LocalName() string {
	return aetgmda.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aetgmda *Resource) Configuration() interface{} {
	return aetgmda.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aetgmda *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aetgmda)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aetgmda *Resource) Dependencies() terra.Dependencies {
	return aetgmda.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aetgmda *Resource) LifecycleManagement() *terra.Lifecycle {
	return aetgmda.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aetgmda *Resource) Attributes() awsEc2TransitGatewayMulticastDomainAssociationAttributes {
	return awsEc2TransitGatewayMulticastDomainAssociationAttributes{ref: terra.ReferenceResource(aetgmda)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aetgmda *Resource) ImportState(state io.Reader) error {
	aetgmda.state = &awsEc2TransitGatewayMulticastDomainAssociationState{}
	if err := json.NewDecoder(state).Decode(aetgmda.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aetgmda.Type(), aetgmda.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aetgmda *Resource) State() (*awsEc2TransitGatewayMulticastDomainAssociationState, bool) {
	return aetgmda.state, aetgmda.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aetgmda *Resource) StateMust() *awsEc2TransitGatewayMulticastDomainAssociationState {
	if aetgmda.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aetgmda.Type(), aetgmda.LocalName()))
	}
	return aetgmda.state
}

// Args contains the configurations for aws_ec2_transit_gateway_multicast_domain_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// TransitGatewayAttachmentId: string, required
	TransitGatewayAttachmentId terra.StringValue `hcl:"transit_gateway_attachment_id,attr" validate:"required"`
	// TransitGatewayMulticastDomainId: string, required
	TransitGatewayMulticastDomainId terra.StringValue `hcl:"transit_gateway_multicast_domain_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsEc2TransitGatewayMulticastDomainAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ec2_transit_gateway_multicast_domain_association.
func (aetgmda awsEc2TransitGatewayMulticastDomainAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aetgmda.ref.Append("id"))
}

// SubnetId returns a reference to field subnet_id of aws_ec2_transit_gateway_multicast_domain_association.
func (aetgmda awsEc2TransitGatewayMulticastDomainAssociationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(aetgmda.ref.Append("subnet_id"))
}

// TransitGatewayAttachmentId returns a reference to field transit_gateway_attachment_id of aws_ec2_transit_gateway_multicast_domain_association.
func (aetgmda awsEc2TransitGatewayMulticastDomainAssociationAttributes) TransitGatewayAttachmentId() terra.StringValue {
	return terra.ReferenceAsString(aetgmda.ref.Append("transit_gateway_attachment_id"))
}

// TransitGatewayMulticastDomainId returns a reference to field transit_gateway_multicast_domain_id of aws_ec2_transit_gateway_multicast_domain_association.
func (aetgmda awsEc2TransitGatewayMulticastDomainAssociationAttributes) TransitGatewayMulticastDomainId() terra.StringValue {
	return terra.ReferenceAsString(aetgmda.ref.Append("transit_gateway_multicast_domain_id"))
}

func (aetgmda awsEc2TransitGatewayMulticastDomainAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aetgmda.ref.Append("timeouts"))
}

type awsEc2TransitGatewayMulticastDomainAssociationState struct {
	Id                              string         `json:"id"`
	SubnetId                        string         `json:"subnet_id"`
	TransitGatewayAttachmentId      string         `json:"transit_gateway_attachment_id"`
	TransitGatewayMulticastDomainId string         `json:"transit_gateway_multicast_domain_id"`
	Timeouts                        *TimeoutsState `json:"timeouts"`
}
