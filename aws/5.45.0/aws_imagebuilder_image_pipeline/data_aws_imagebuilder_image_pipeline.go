// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_image_pipeline

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_imagebuilder_image_pipeline.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aiip *DataSource) DataSource() string {
	return "aws_imagebuilder_image_pipeline"
}

// LocalName returns the local name for [DataSource].
func (aiip *DataSource) LocalName() string {
	return aiip.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aiip *DataSource) Configuration() interface{} {
	return aiip.Args
}

// Attributes returns the attributes for [DataSource].
func (aiip *DataSource) Attributes() dataAwsImagebuilderImagePipelineAttributes {
	return dataAwsImagebuilderImagePipelineAttributes{ref: terra.ReferenceDataSource(aiip)}
}

// DataArgs contains the configurations for aws_imagebuilder_image_pipeline.
type DataArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsImagebuilderImagePipelineAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("arn"))
}

// ContainerRecipeArn returns a reference to field container_recipe_arn of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) ContainerRecipeArn() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("container_recipe_arn"))
}

// DateCreated returns a reference to field date_created of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) DateCreated() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("date_created"))
}

// DateLastRun returns a reference to field date_last_run of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) DateLastRun() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("date_last_run"))
}

// DateNextRun returns a reference to field date_next_run of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) DateNextRun() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("date_next_run"))
}

// DateUpdated returns a reference to field date_updated of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) DateUpdated() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("date_updated"))
}

// Description returns a reference to field description of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("description"))
}

// DistributionConfigurationArn returns a reference to field distribution_configuration_arn of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) DistributionConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("distribution_configuration_arn"))
}

// EnhancedImageMetadataEnabled returns a reference to field enhanced_image_metadata_enabled of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) EnhancedImageMetadataEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aiip.ref.Append("enhanced_image_metadata_enabled"))
}

// Id returns a reference to field id of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("id"))
}

// ImageRecipeArn returns a reference to field image_recipe_arn of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) ImageRecipeArn() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("image_recipe_arn"))
}

// InfrastructureConfigurationArn returns a reference to field infrastructure_configuration_arn of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) InfrastructureConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("infrastructure_configuration_arn"))
}

// Name returns a reference to field name of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("name"))
}

// Platform returns a reference to field platform of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Platform() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("platform"))
}

// Status returns a reference to field status of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(aiip.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_imagebuilder_image_pipeline.
func (aiip dataAwsImagebuilderImagePipelineAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aiip.ref.Append("tags"))
}

func (aiip dataAwsImagebuilderImagePipelineAttributes) ImageScanningConfiguration() terra.ListValue[DataImageScanningConfigurationAttributes] {
	return terra.ReferenceAsList[DataImageScanningConfigurationAttributes](aiip.ref.Append("image_scanning_configuration"))
}

func (aiip dataAwsImagebuilderImagePipelineAttributes) ImageTestsConfiguration() terra.ListValue[DataImageTestsConfigurationAttributes] {
	return terra.ReferenceAsList[DataImageTestsConfigurationAttributes](aiip.ref.Append("image_tests_configuration"))
}

func (aiip dataAwsImagebuilderImagePipelineAttributes) Schedule() terra.ListValue[DataScheduleAttributes] {
	return terra.ReferenceAsList[DataScheduleAttributes](aiip.ref.Append("schedule"))
}
