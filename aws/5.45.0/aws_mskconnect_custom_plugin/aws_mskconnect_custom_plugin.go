// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_mskconnect_custom_plugin

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_mskconnect_custom_plugin.
type Resource struct {
	Name      string
	Args      Args
	state     *awsMskconnectCustomPluginState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amcp *Resource) Type() string {
	return "aws_mskconnect_custom_plugin"
}

// LocalName returns the local name for [Resource].
func (amcp *Resource) LocalName() string {
	return amcp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amcp *Resource) Configuration() interface{} {
	return amcp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amcp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amcp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amcp *Resource) Dependencies() terra.Dependencies {
	return amcp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amcp *Resource) LifecycleManagement() *terra.Lifecycle {
	return amcp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amcp *Resource) Attributes() awsMskconnectCustomPluginAttributes {
	return awsMskconnectCustomPluginAttributes{ref: terra.ReferenceResource(amcp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amcp *Resource) ImportState(state io.Reader) error {
	amcp.state = &awsMskconnectCustomPluginState{}
	if err := json.NewDecoder(state).Decode(amcp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amcp.Type(), amcp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amcp *Resource) State() (*awsMskconnectCustomPluginState, bool) {
	return amcp.state, amcp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amcp *Resource) StateMust() *awsMskconnectCustomPluginState {
	if amcp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amcp.Type(), amcp.LocalName()))
	}
	return amcp.state
}

// Args contains the configurations for aws_mskconnect_custom_plugin.
type Args struct {
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Location: required
	Location *Location `hcl:"location,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsMskconnectCustomPluginAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(amcp.ref.Append("arn"))
}

// ContentType returns a reference to field content_type of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(amcp.ref.Append("content_type"))
}

// Description returns a reference to field description of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(amcp.ref.Append("description"))
}

// Id returns a reference to field id of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amcp.ref.Append("id"))
}

// LatestRevision returns a reference to field latest_revision of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) LatestRevision() terra.NumberValue {
	return terra.ReferenceAsNumber(amcp.ref.Append("latest_revision"))
}

// Name returns a reference to field name of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amcp.ref.Append("name"))
}

// State returns a reference to field state of aws_mskconnect_custom_plugin.
func (amcp awsMskconnectCustomPluginAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(amcp.ref.Append("state"))
}

func (amcp awsMskconnectCustomPluginAttributes) Location() terra.ListValue[LocationAttributes] {
	return terra.ReferenceAsList[LocationAttributes](amcp.ref.Append("location"))
}

func (amcp awsMskconnectCustomPluginAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amcp.ref.Append("timeouts"))
}

type awsMskconnectCustomPluginState struct {
	Arn            string          `json:"arn"`
	ContentType    string          `json:"content_type"`
	Description    string          `json:"description"`
	Id             string          `json:"id"`
	LatestRevision float64         `json:"latest_revision"`
	Name           string          `json:"name"`
	State          string          `json:"state"`
	Location       []LocationState `json:"location"`
	Timeouts       *TimeoutsState  `json:"timeouts"`
}
