// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_instance_type

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataFpgasAttributes struct {
	ref terra.Reference
}

func (f DataFpgasAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFpgasAttributes) InternalWithRef(ref terra.Reference) DataFpgasAttributes {
	return DataFpgasAttributes{ref: ref}
}

func (f DataFpgasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFpgasAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(f.ref.Append("count"))
}

func (f DataFpgasAttributes) Manufacturer() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("manufacturer"))
}

func (f DataFpgasAttributes) MemorySize() terra.NumberValue {
	return terra.ReferenceAsNumber(f.ref.Append("memory_size"))
}

func (f DataFpgasAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

type DataGpusAttributes struct {
	ref terra.Reference
}

func (g DataGpusAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataGpusAttributes) InternalWithRef(ref terra.Reference) DataGpusAttributes {
	return DataGpusAttributes{ref: ref}
}

func (g DataGpusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataGpusAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("count"))
}

func (g DataGpusAttributes) Manufacturer() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("manufacturer"))
}

func (g DataGpusAttributes) MemorySize() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("memory_size"))
}

func (g DataGpusAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("name"))
}

type DataInferenceAcceleratorsAttributes struct {
	ref terra.Reference
}

func (ia DataInferenceAcceleratorsAttributes) InternalRef() (terra.Reference, error) {
	return ia.ref, nil
}

func (ia DataInferenceAcceleratorsAttributes) InternalWithRef(ref terra.Reference) DataInferenceAcceleratorsAttributes {
	return DataInferenceAcceleratorsAttributes{ref: ref}
}

func (ia DataInferenceAcceleratorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ia.ref.InternalTokens()
}

func (ia DataInferenceAcceleratorsAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(ia.ref.Append("count"))
}

func (ia DataInferenceAcceleratorsAttributes) Manufacturer() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("manufacturer"))
}

func (ia DataInferenceAcceleratorsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("name"))
}

type DataInstanceDisksAttributes struct {
	ref terra.Reference
}

func (id DataInstanceDisksAttributes) InternalRef() (terra.Reference, error) {
	return id.ref, nil
}

func (id DataInstanceDisksAttributes) InternalWithRef(ref terra.Reference) DataInstanceDisksAttributes {
	return DataInstanceDisksAttributes{ref: ref}
}

func (id DataInstanceDisksAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return id.ref.InternalTokens()
}

func (id DataInstanceDisksAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("count"))
}

func (id DataInstanceDisksAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("size"))
}

func (id DataInstanceDisksAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataFpgasState struct {
	Count        float64 `json:"count"`
	Manufacturer string  `json:"manufacturer"`
	MemorySize   float64 `json:"memory_size"`
	Name         string  `json:"name"`
}

type DataGpusState struct {
	Count        float64 `json:"count"`
	Manufacturer string  `json:"manufacturer"`
	MemorySize   float64 `json:"memory_size"`
	Name         string  `json:"name"`
}

type DataInferenceAcceleratorsState struct {
	Count        float64 `json:"count"`
	Manufacturer string  `json:"manufacturer"`
	Name         string  `json:"name"`
}

type DataInstanceDisksState struct {
	Count float64 `json:"count"`
	Size  float64 `json:"size"`
	Type  string  `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
