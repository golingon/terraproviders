// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpclattice_service_network_service_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_vpclattice_service_network_service_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsVpclatticeServiceNetworkServiceAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avsnsa *Resource) Type() string {
	return "aws_vpclattice_service_network_service_association"
}

// LocalName returns the local name for [Resource].
func (avsnsa *Resource) LocalName() string {
	return avsnsa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avsnsa *Resource) Configuration() interface{} {
	return avsnsa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avsnsa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avsnsa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avsnsa *Resource) Dependencies() terra.Dependencies {
	return avsnsa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avsnsa *Resource) LifecycleManagement() *terra.Lifecycle {
	return avsnsa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avsnsa *Resource) Attributes() awsVpclatticeServiceNetworkServiceAssociationAttributes {
	return awsVpclatticeServiceNetworkServiceAssociationAttributes{ref: terra.ReferenceResource(avsnsa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avsnsa *Resource) ImportState(state io.Reader) error {
	avsnsa.state = &awsVpclatticeServiceNetworkServiceAssociationState{}
	if err := json.NewDecoder(state).Decode(avsnsa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avsnsa.Type(), avsnsa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avsnsa *Resource) State() (*awsVpclatticeServiceNetworkServiceAssociationState, bool) {
	return avsnsa.state, avsnsa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avsnsa *Resource) StateMust() *awsVpclatticeServiceNetworkServiceAssociationState {
	if avsnsa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avsnsa.Type(), avsnsa.LocalName()))
	}
	return avsnsa.state
}

// Args contains the configurations for aws_vpclattice_service_network_service_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ServiceIdentifier: string, required
	ServiceIdentifier terra.StringValue `hcl:"service_identifier,attr" validate:"required"`
	// ServiceNetworkIdentifier: string, required
	ServiceNetworkIdentifier terra.StringValue `hcl:"service_network_identifier,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsVpclatticeServiceNetworkServiceAssociationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("arn"))
}

// CreatedBy returns a reference to field created_by of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) CreatedBy() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("created_by"))
}

// CustomDomainName returns a reference to field custom_domain_name of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) CustomDomainName() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("custom_domain_name"))
}

// Id returns a reference to field id of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("id"))
}

// ServiceIdentifier returns a reference to field service_identifier of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) ServiceIdentifier() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("service_identifier"))
}

// ServiceNetworkIdentifier returns a reference to field service_network_identifier of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) ServiceNetworkIdentifier() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("service_network_identifier"))
}

// Status returns a reference to field status of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(avsnsa.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](avsnsa.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_vpclattice_service_network_service_association.
func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](avsnsa.ref.Append("tags_all"))
}

func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) DnsEntry() terra.ListValue[DnsEntryAttributes] {
	return terra.ReferenceAsList[DnsEntryAttributes](avsnsa.ref.Append("dns_entry"))
}

func (avsnsa awsVpclatticeServiceNetworkServiceAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avsnsa.ref.Append("timeouts"))
}

type awsVpclatticeServiceNetworkServiceAssociationState struct {
	Arn                      string            `json:"arn"`
	CreatedBy                string            `json:"created_by"`
	CustomDomainName         string            `json:"custom_domain_name"`
	Id                       string            `json:"id"`
	ServiceIdentifier        string            `json:"service_identifier"`
	ServiceNetworkIdentifier string            `json:"service_network_identifier"`
	Status                   string            `json:"status"`
	Tags                     map[string]string `json:"tags"`
	TagsAll                  map[string]string `json:"tags_all"`
	DnsEntry                 []DnsEntryState   `json:"dns_entry"`
	Timeouts                 *TimeoutsState    `json:"timeouts"`
}
