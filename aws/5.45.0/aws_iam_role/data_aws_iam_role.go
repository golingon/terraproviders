// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iam_role

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_iam_role.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (air *DataSource) DataSource() string {
	return "aws_iam_role"
}

// LocalName returns the local name for [DataSource].
func (air *DataSource) LocalName() string {
	return air.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (air *DataSource) Configuration() interface{} {
	return air.Args
}

// Attributes returns the attributes for [DataSource].
func (air *DataSource) Attributes() dataAwsIamRoleAttributes {
	return dataAwsIamRoleAttributes{ref: terra.ReferenceDataSource(air)}
}

// DataArgs contains the configurations for aws_iam_role.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsIamRoleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_iam_role.
func (air dataAwsIamRoleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("arn"))
}

// AssumeRolePolicy returns a reference to field assume_role_policy of aws_iam_role.
func (air dataAwsIamRoleAttributes) AssumeRolePolicy() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("assume_role_policy"))
}

// CreateDate returns a reference to field create_date of aws_iam_role.
func (air dataAwsIamRoleAttributes) CreateDate() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("create_date"))
}

// Description returns a reference to field description of aws_iam_role.
func (air dataAwsIamRoleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("description"))
}

// Id returns a reference to field id of aws_iam_role.
func (air dataAwsIamRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("id"))
}

// MaxSessionDuration returns a reference to field max_session_duration of aws_iam_role.
func (air dataAwsIamRoleAttributes) MaxSessionDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(air.ref.Append("max_session_duration"))
}

// Name returns a reference to field name of aws_iam_role.
func (air dataAwsIamRoleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("name"))
}

// Path returns a reference to field path of aws_iam_role.
func (air dataAwsIamRoleAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("path"))
}

// PermissionsBoundary returns a reference to field permissions_boundary of aws_iam_role.
func (air dataAwsIamRoleAttributes) PermissionsBoundary() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("permissions_boundary"))
}

// Tags returns a reference to field tags of aws_iam_role.
func (air dataAwsIamRoleAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](air.ref.Append("tags"))
}

// UniqueId returns a reference to field unique_id of aws_iam_role.
func (air dataAwsIamRoleAttributes) UniqueId() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("unique_id"))
}

func (air dataAwsIamRoleAttributes) RoleLastUsed() terra.ListValue[DataRoleLastUsedAttributes] {
	return terra.ReferenceAsList[DataRoleLastUsedAttributes](air.ref.Append("role_last_used"))
}
