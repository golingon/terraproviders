// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_apigatewayv2_model

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_apigatewayv2_model.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApigatewayv2ModelState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aam *Resource) Type() string {
	return "aws_apigatewayv2_model"
}

// LocalName returns the local name for [Resource].
func (aam *Resource) LocalName() string {
	return aam.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aam *Resource) Configuration() interface{} {
	return aam.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aam *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aam)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aam *Resource) Dependencies() terra.Dependencies {
	return aam.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aam *Resource) LifecycleManagement() *terra.Lifecycle {
	return aam.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aam *Resource) Attributes() awsApigatewayv2ModelAttributes {
	return awsApigatewayv2ModelAttributes{ref: terra.ReferenceResource(aam)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aam *Resource) ImportState(state io.Reader) error {
	aam.state = &awsApigatewayv2ModelState{}
	if err := json.NewDecoder(state).Decode(aam.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aam.Type(), aam.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aam *Resource) State() (*awsApigatewayv2ModelState, bool) {
	return aam.state, aam.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aam *Resource) StateMust() *awsApigatewayv2ModelState {
	if aam.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aam.Type(), aam.LocalName()))
	}
	return aam.state
}

// Args contains the configurations for aws_apigatewayv2_model.
type Args struct {
	// ApiId: string, required
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
}

type awsApigatewayv2ModelAttributes struct {
	ref terra.Reference
}

// ApiId returns a reference to field api_id of aws_apigatewayv2_model.
func (aam awsApigatewayv2ModelAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(aam.ref.Append("api_id"))
}

// ContentType returns a reference to field content_type of aws_apigatewayv2_model.
func (aam awsApigatewayv2ModelAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(aam.ref.Append("content_type"))
}

// Description returns a reference to field description of aws_apigatewayv2_model.
func (aam awsApigatewayv2ModelAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aam.ref.Append("description"))
}

// Id returns a reference to field id of aws_apigatewayv2_model.
func (aam awsApigatewayv2ModelAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aam.ref.Append("id"))
}

// Name returns a reference to field name of aws_apigatewayv2_model.
func (aam awsApigatewayv2ModelAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aam.ref.Append("name"))
}

// Schema returns a reference to field schema of aws_apigatewayv2_model.
func (aam awsApigatewayv2ModelAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(aam.ref.Append("schema"))
}

type awsApigatewayv2ModelState struct {
	ApiId       string `json:"api_id"`
	ContentType string `json:"content_type"`
	Description string `json:"description"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Schema      string `json:"schema"`
}
