// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_securityhub_insight

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Filters struct {
	// FiltersAwsAccountId: min=0,max=20
	AwsAccountId []FiltersAwsAccountId `hcl:"aws_account_id,block" validate:"min=0,max=20"`
	// FiltersCompanyName: min=0,max=20
	CompanyName []FiltersCompanyName `hcl:"company_name,block" validate:"min=0,max=20"`
	// FiltersComplianceStatus: min=0,max=20
	ComplianceStatus []FiltersComplianceStatus `hcl:"compliance_status,block" validate:"min=0,max=20"`
	// FiltersConfidence: min=0,max=20
	Confidence []FiltersConfidence `hcl:"confidence,block" validate:"min=0,max=20"`
	// FiltersCreatedAt: min=0,max=20
	CreatedAt []FiltersCreatedAt `hcl:"created_at,block" validate:"min=0,max=20"`
	// FiltersCriticality: min=0,max=20
	Criticality []FiltersCriticality `hcl:"criticality,block" validate:"min=0,max=20"`
	// FiltersDescription: min=0,max=20
	Description []FiltersDescription `hcl:"description,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsConfidence: min=0,max=20
	FindingProviderFieldsConfidence []FiltersFindingProviderFieldsConfidence `hcl:"finding_provider_fields_confidence,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsCriticality: min=0,max=20
	FindingProviderFieldsCriticality []FiltersFindingProviderFieldsCriticality `hcl:"finding_provider_fields_criticality,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsRelatedFindingsId: min=0,max=20
	FindingProviderFieldsRelatedFindingsId []FiltersFindingProviderFieldsRelatedFindingsId `hcl:"finding_provider_fields_related_findings_id,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsRelatedFindingsProductArn: min=0,max=20
	FindingProviderFieldsRelatedFindingsProductArn []FiltersFindingProviderFieldsRelatedFindingsProductArn `hcl:"finding_provider_fields_related_findings_product_arn,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsSeverityLabel: min=0,max=20
	FindingProviderFieldsSeverityLabel []FiltersFindingProviderFieldsSeverityLabel `hcl:"finding_provider_fields_severity_label,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsSeverityOriginal: min=0,max=20
	FindingProviderFieldsSeverityOriginal []FiltersFindingProviderFieldsSeverityOriginal `hcl:"finding_provider_fields_severity_original,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsTypes: min=0,max=20
	FindingProviderFieldsTypes []FiltersFindingProviderFieldsTypes `hcl:"finding_provider_fields_types,block" validate:"min=0,max=20"`
	// FiltersFirstObservedAt: min=0,max=20
	FirstObservedAt []FiltersFirstObservedAt `hcl:"first_observed_at,block" validate:"min=0,max=20"`
	// FiltersGeneratorId: min=0,max=20
	GeneratorId []FiltersGeneratorId `hcl:"generator_id,block" validate:"min=0,max=20"`
	// FiltersId: min=0,max=20
	Id []FiltersId `hcl:"id,block" validate:"min=0,max=20"`
	// FiltersKeyword: min=0,max=20
	Keyword []FiltersKeyword `hcl:"keyword,block" validate:"min=0,max=20"`
	// FiltersLastObservedAt: min=0,max=20
	LastObservedAt []FiltersLastObservedAt `hcl:"last_observed_at,block" validate:"min=0,max=20"`
	// FiltersMalwareName: min=0,max=20
	MalwareName []FiltersMalwareName `hcl:"malware_name,block" validate:"min=0,max=20"`
	// FiltersMalwarePath: min=0,max=20
	MalwarePath []FiltersMalwarePath `hcl:"malware_path,block" validate:"min=0,max=20"`
	// FiltersMalwareState: min=0,max=20
	MalwareState []FiltersMalwareState `hcl:"malware_state,block" validate:"min=0,max=20"`
	// FiltersMalwareType: min=0,max=20
	MalwareType []FiltersMalwareType `hcl:"malware_type,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationDomain: min=0,max=20
	NetworkDestinationDomain []FiltersNetworkDestinationDomain `hcl:"network_destination_domain,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationIpv4: min=0,max=20
	NetworkDestinationIpv4 []FiltersNetworkDestinationIpv4 `hcl:"network_destination_ipv4,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationIpv6: min=0,max=20
	NetworkDestinationIpv6 []FiltersNetworkDestinationIpv6 `hcl:"network_destination_ipv6,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationPort: min=0,max=20
	NetworkDestinationPort []FiltersNetworkDestinationPort `hcl:"network_destination_port,block" validate:"min=0,max=20"`
	// FiltersNetworkDirection: min=0,max=20
	NetworkDirection []FiltersNetworkDirection `hcl:"network_direction,block" validate:"min=0,max=20"`
	// FiltersNetworkProtocol: min=0,max=20
	NetworkProtocol []FiltersNetworkProtocol `hcl:"network_protocol,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceDomain: min=0,max=20
	NetworkSourceDomain []FiltersNetworkSourceDomain `hcl:"network_source_domain,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceIpv4: min=0,max=20
	NetworkSourceIpv4 []FiltersNetworkSourceIpv4 `hcl:"network_source_ipv4,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceIpv6: min=0,max=20
	NetworkSourceIpv6 []FiltersNetworkSourceIpv6 `hcl:"network_source_ipv6,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceMac: min=0,max=20
	NetworkSourceMac []FiltersNetworkSourceMac `hcl:"network_source_mac,block" validate:"min=0,max=20"`
	// FiltersNetworkSourcePort: min=0,max=20
	NetworkSourcePort []FiltersNetworkSourcePort `hcl:"network_source_port,block" validate:"min=0,max=20"`
	// FiltersNoteText: min=0,max=20
	NoteText []FiltersNoteText `hcl:"note_text,block" validate:"min=0,max=20"`
	// FiltersNoteUpdatedAt: min=0,max=20
	NoteUpdatedAt []FiltersNoteUpdatedAt `hcl:"note_updated_at,block" validate:"min=0,max=20"`
	// FiltersNoteUpdatedBy: min=0,max=20
	NoteUpdatedBy []FiltersNoteUpdatedBy `hcl:"note_updated_by,block" validate:"min=0,max=20"`
	// FiltersProcessLaunchedAt: min=0,max=20
	ProcessLaunchedAt []FiltersProcessLaunchedAt `hcl:"process_launched_at,block" validate:"min=0,max=20"`
	// FiltersProcessName: min=0,max=20
	ProcessName []FiltersProcessName `hcl:"process_name,block" validate:"min=0,max=20"`
	// FiltersProcessParentPid: min=0,max=20
	ProcessParentPid []FiltersProcessParentPid `hcl:"process_parent_pid,block" validate:"min=0,max=20"`
	// FiltersProcessPath: min=0,max=20
	ProcessPath []FiltersProcessPath `hcl:"process_path,block" validate:"min=0,max=20"`
	// FiltersProcessPid: min=0,max=20
	ProcessPid []FiltersProcessPid `hcl:"process_pid,block" validate:"min=0,max=20"`
	// FiltersProcessTerminatedAt: min=0,max=20
	ProcessTerminatedAt []FiltersProcessTerminatedAt `hcl:"process_terminated_at,block" validate:"min=0,max=20"`
	// FiltersProductArn: min=0,max=20
	ProductArn []FiltersProductArn `hcl:"product_arn,block" validate:"min=0,max=20"`
	// FiltersProductFields: min=0,max=20
	ProductFields []FiltersProductFields `hcl:"product_fields,block" validate:"min=0,max=20"`
	// FiltersProductName: min=0,max=20
	ProductName []FiltersProductName `hcl:"product_name,block" validate:"min=0,max=20"`
	// FiltersRecommendationText: min=0,max=20
	RecommendationText []FiltersRecommendationText `hcl:"recommendation_text,block" validate:"min=0,max=20"`
	// FiltersRecordState: min=0,max=20
	RecordState []FiltersRecordState `hcl:"record_state,block" validate:"min=0,max=20"`
	// FiltersRelatedFindingsId: min=0,max=20
	RelatedFindingsId []FiltersRelatedFindingsId `hcl:"related_findings_id,block" validate:"min=0,max=20"`
	// FiltersRelatedFindingsProductArn: min=0,max=20
	RelatedFindingsProductArn []FiltersRelatedFindingsProductArn `hcl:"related_findings_product_arn,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceIamInstanceProfileArn: min=0,max=20
	ResourceAwsEc2InstanceIamInstanceProfileArn []FiltersResourceAwsEc2InstanceIamInstanceProfileArn `hcl:"resource_aws_ec2_instance_iam_instance_profile_arn,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceImageId: min=0,max=20
	ResourceAwsEc2InstanceImageId []FiltersResourceAwsEc2InstanceImageId `hcl:"resource_aws_ec2_instance_image_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceIpv4Addresses: min=0,max=20
	ResourceAwsEc2InstanceIpv4Addresses []FiltersResourceAwsEc2InstanceIpv4Addresses `hcl:"resource_aws_ec2_instance_ipv4_addresses,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceIpv6Addresses: min=0,max=20
	ResourceAwsEc2InstanceIpv6Addresses []FiltersResourceAwsEc2InstanceIpv6Addresses `hcl:"resource_aws_ec2_instance_ipv6_addresses,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceKeyName: min=0,max=20
	ResourceAwsEc2InstanceKeyName []FiltersResourceAwsEc2InstanceKeyName `hcl:"resource_aws_ec2_instance_key_name,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceLaunchedAt: min=0,max=20
	ResourceAwsEc2InstanceLaunchedAt []FiltersResourceAwsEc2InstanceLaunchedAt `hcl:"resource_aws_ec2_instance_launched_at,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceSubnetId: min=0,max=20
	ResourceAwsEc2InstanceSubnetId []FiltersResourceAwsEc2InstanceSubnetId `hcl:"resource_aws_ec2_instance_subnet_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceType: min=0,max=20
	ResourceAwsEc2InstanceType []FiltersResourceAwsEc2InstanceType `hcl:"resource_aws_ec2_instance_type,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceVpcId: min=0,max=20
	ResourceAwsEc2InstanceVpcId []FiltersResourceAwsEc2InstanceVpcId `hcl:"resource_aws_ec2_instance_vpc_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsIamAccessKeyCreatedAt: min=0,max=20
	ResourceAwsIamAccessKeyCreatedAt []FiltersResourceAwsIamAccessKeyCreatedAt `hcl:"resource_aws_iam_access_key_created_at,block" validate:"min=0,max=20"`
	// FiltersResourceAwsIamAccessKeyStatus: min=0,max=20
	ResourceAwsIamAccessKeyStatus []FiltersResourceAwsIamAccessKeyStatus `hcl:"resource_aws_iam_access_key_status,block" validate:"min=0,max=20"`
	// FiltersResourceAwsIamAccessKeyUserName: min=0,max=20
	ResourceAwsIamAccessKeyUserName []FiltersResourceAwsIamAccessKeyUserName `hcl:"resource_aws_iam_access_key_user_name,block" validate:"min=0,max=20"`
	// FiltersResourceAwsS3BucketOwnerId: min=0,max=20
	ResourceAwsS3BucketOwnerId []FiltersResourceAwsS3BucketOwnerId `hcl:"resource_aws_s3_bucket_owner_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsS3BucketOwnerName: min=0,max=20
	ResourceAwsS3BucketOwnerName []FiltersResourceAwsS3BucketOwnerName `hcl:"resource_aws_s3_bucket_owner_name,block" validate:"min=0,max=20"`
	// FiltersResourceContainerImageId: min=0,max=20
	ResourceContainerImageId []FiltersResourceContainerImageId `hcl:"resource_container_image_id,block" validate:"min=0,max=20"`
	// FiltersResourceContainerImageName: min=0,max=20
	ResourceContainerImageName []FiltersResourceContainerImageName `hcl:"resource_container_image_name,block" validate:"min=0,max=20"`
	// FiltersResourceContainerLaunchedAt: min=0,max=20
	ResourceContainerLaunchedAt []FiltersResourceContainerLaunchedAt `hcl:"resource_container_launched_at,block" validate:"min=0,max=20"`
	// FiltersResourceContainerName: min=0,max=20
	ResourceContainerName []FiltersResourceContainerName `hcl:"resource_container_name,block" validate:"min=0,max=20"`
	// FiltersResourceDetailsOther: min=0,max=20
	ResourceDetailsOther []FiltersResourceDetailsOther `hcl:"resource_details_other,block" validate:"min=0,max=20"`
	// FiltersResourceId: min=0,max=20
	ResourceId []FiltersResourceId `hcl:"resource_id,block" validate:"min=0,max=20"`
	// FiltersResourcePartition: min=0,max=20
	ResourcePartition []FiltersResourcePartition `hcl:"resource_partition,block" validate:"min=0,max=20"`
	// FiltersResourceRegion: min=0,max=20
	ResourceRegion []FiltersResourceRegion `hcl:"resource_region,block" validate:"min=0,max=20"`
	// FiltersResourceTags: min=0,max=20
	ResourceTags []FiltersResourceTags `hcl:"resource_tags,block" validate:"min=0,max=20"`
	// FiltersResourceType: min=0,max=20
	ResourceType []FiltersResourceType `hcl:"resource_type,block" validate:"min=0,max=20"`
	// FiltersSeverityLabel: min=0,max=20
	SeverityLabel []FiltersSeverityLabel `hcl:"severity_label,block" validate:"min=0,max=20"`
	// FiltersSourceUrl: min=0,max=20
	SourceUrl []FiltersSourceUrl `hcl:"source_url,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorCategory: min=0,max=20
	ThreatIntelIndicatorCategory []FiltersThreatIntelIndicatorCategory `hcl:"threat_intel_indicator_category,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorLastObservedAt: min=0,max=20
	ThreatIntelIndicatorLastObservedAt []FiltersThreatIntelIndicatorLastObservedAt `hcl:"threat_intel_indicator_last_observed_at,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorSource: min=0,max=20
	ThreatIntelIndicatorSource []FiltersThreatIntelIndicatorSource `hcl:"threat_intel_indicator_source,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorSourceUrl: min=0,max=20
	ThreatIntelIndicatorSourceUrl []FiltersThreatIntelIndicatorSourceUrl `hcl:"threat_intel_indicator_source_url,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorType: min=0,max=20
	ThreatIntelIndicatorType []FiltersThreatIntelIndicatorType `hcl:"threat_intel_indicator_type,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorValue: min=0,max=20
	ThreatIntelIndicatorValue []FiltersThreatIntelIndicatorValue `hcl:"threat_intel_indicator_value,block" validate:"min=0,max=20"`
	// FiltersTitle: min=0,max=20
	Title []FiltersTitle `hcl:"title,block" validate:"min=0,max=20"`
	// FiltersType: min=0,max=20
	Type []FiltersType `hcl:"type,block" validate:"min=0,max=20"`
	// FiltersUpdatedAt: min=0,max=20
	UpdatedAt []FiltersUpdatedAt `hcl:"updated_at,block" validate:"min=0,max=20"`
	// FiltersUserDefinedValues: min=0,max=20
	UserDefinedValues []FiltersUserDefinedValues `hcl:"user_defined_values,block" validate:"min=0,max=20"`
	// FiltersVerificationState: min=0,max=20
	VerificationState []FiltersVerificationState `hcl:"verification_state,block" validate:"min=0,max=20"`
	// FiltersWorkflowStatus: min=0,max=20
	WorkflowStatus []FiltersWorkflowStatus `hcl:"workflow_status,block" validate:"min=0,max=20"`
}

type FiltersAwsAccountId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersCompanyName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersComplianceStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersConfidence struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersCreatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersCreatedAtDateRange: optional
	DateRange *FiltersCreatedAtDateRange `hcl:"date_range,block"`
}

type FiltersCreatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersCriticality struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersDescription struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsConfidence struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersFindingProviderFieldsCriticality struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersFindingProviderFieldsRelatedFindingsId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsRelatedFindingsProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsSeverityLabel struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsSeverityOriginal struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsTypes struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFirstObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersFirstObservedAtDateRange: optional
	DateRange *FiltersFirstObservedAtDateRange `hcl:"date_range,block"`
}

type FiltersFirstObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersGeneratorId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersKeyword struct {
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersLastObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersLastObservedAtDateRange: optional
	DateRange *FiltersLastObservedAtDateRange `hcl:"date_range,block"`
}

type FiltersLastObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwareName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwarePath struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwareState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwareType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkDestinationDomain struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkDestinationIpv4 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkDestinationIpv6 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkDestinationPort struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersNetworkDirection struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkProtocol struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkSourceDomain struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkSourceIpv4 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkSourceIpv6 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkSourceMac struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkSourcePort struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersNoteText struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNoteUpdatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersNoteUpdatedAtDateRange: optional
	DateRange *FiltersNoteUpdatedAtDateRange `hcl:"date_range,block"`
}

type FiltersNoteUpdatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersNoteUpdatedBy struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessLaunchedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersProcessLaunchedAtDateRange: optional
	DateRange *FiltersProcessLaunchedAtDateRange `hcl:"date_range,block"`
}

type FiltersProcessLaunchedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessParentPid struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersProcessPath struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessPid struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersProcessTerminatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersProcessTerminatedAtDateRange: optional
	DateRange *FiltersProcessTerminatedAtDateRange `hcl:"date_range,block"`
}

type FiltersProcessTerminatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProductFields struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProductName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRecommendationText struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRecordState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRelatedFindingsId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRelatedFindingsProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceIamInstanceProfileArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceImageId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceIpv4Addresses struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceIpv6Addresses struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceKeyName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceLaunchedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersResourceAwsEc2InstanceLaunchedAtDateRange: optional
	DateRange *FiltersResourceAwsEc2InstanceLaunchedAtDateRange `hcl:"date_range,block"`
}

type FiltersResourceAwsEc2InstanceLaunchedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceSubnetId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceVpcId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsIamAccessKeyCreatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersResourceAwsIamAccessKeyCreatedAtDateRange: optional
	DateRange *FiltersResourceAwsIamAccessKeyCreatedAtDateRange `hcl:"date_range,block"`
}

type FiltersResourceAwsIamAccessKeyCreatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsIamAccessKeyStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsIamAccessKeyUserName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsS3BucketOwnerId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsS3BucketOwnerName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerImageId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerImageName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerLaunchedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersResourceContainerLaunchedAtDateRange: optional
	DateRange *FiltersResourceContainerLaunchedAtDateRange `hcl:"date_range,block"`
}

type FiltersResourceContainerLaunchedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceDetailsOther struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourcePartition struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceRegion struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceTags struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersSeverityLabel struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersSourceUrl struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorCategory struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorLastObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersThreatIntelIndicatorLastObservedAtDateRange: optional
	DateRange *FiltersThreatIntelIndicatorLastObservedAtDateRange `hcl:"date_range,block"`
}

type FiltersThreatIntelIndicatorLastObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorSource struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorSourceUrl struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorValue struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersTitle struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersUpdatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersUpdatedAtDateRange: optional
	DateRange *FiltersUpdatedAtDateRange `hcl:"date_range,block"`
}

type FiltersUpdatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersUserDefinedValues struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersVerificationState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersWorkflowStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersAttributes struct {
	ref terra.Reference
}

func (f FiltersAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f FiltersAttributes) InternalWithRef(ref terra.Reference) FiltersAttributes {
	return FiltersAttributes{ref: ref}
}

func (f FiltersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f FiltersAttributes) AwsAccountId() terra.SetValue[FiltersAwsAccountIdAttributes] {
	return terra.ReferenceAsSet[FiltersAwsAccountIdAttributes](f.ref.Append("aws_account_id"))
}

func (f FiltersAttributes) CompanyName() terra.SetValue[FiltersCompanyNameAttributes] {
	return terra.ReferenceAsSet[FiltersCompanyNameAttributes](f.ref.Append("company_name"))
}

func (f FiltersAttributes) ComplianceStatus() terra.SetValue[FiltersComplianceStatusAttributes] {
	return terra.ReferenceAsSet[FiltersComplianceStatusAttributes](f.ref.Append("compliance_status"))
}

func (f FiltersAttributes) Confidence() terra.SetValue[FiltersConfidenceAttributes] {
	return terra.ReferenceAsSet[FiltersConfidenceAttributes](f.ref.Append("confidence"))
}

func (f FiltersAttributes) CreatedAt() terra.SetValue[FiltersCreatedAtAttributes] {
	return terra.ReferenceAsSet[FiltersCreatedAtAttributes](f.ref.Append("created_at"))
}

func (f FiltersAttributes) Criticality() terra.SetValue[FiltersCriticalityAttributes] {
	return terra.ReferenceAsSet[FiltersCriticalityAttributes](f.ref.Append("criticality"))
}

func (f FiltersAttributes) Description() terra.SetValue[FiltersDescriptionAttributes] {
	return terra.ReferenceAsSet[FiltersDescriptionAttributes](f.ref.Append("description"))
}

func (f FiltersAttributes) FindingProviderFieldsConfidence() terra.SetValue[FiltersFindingProviderFieldsConfidenceAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsConfidenceAttributes](f.ref.Append("finding_provider_fields_confidence"))
}

func (f FiltersAttributes) FindingProviderFieldsCriticality() terra.SetValue[FiltersFindingProviderFieldsCriticalityAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsCriticalityAttributes](f.ref.Append("finding_provider_fields_criticality"))
}

func (f FiltersAttributes) FindingProviderFieldsRelatedFindingsId() terra.SetValue[FiltersFindingProviderFieldsRelatedFindingsIdAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsRelatedFindingsIdAttributes](f.ref.Append("finding_provider_fields_related_findings_id"))
}

func (f FiltersAttributes) FindingProviderFieldsRelatedFindingsProductArn() terra.SetValue[FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes](f.ref.Append("finding_provider_fields_related_findings_product_arn"))
}

func (f FiltersAttributes) FindingProviderFieldsSeverityLabel() terra.SetValue[FiltersFindingProviderFieldsSeverityLabelAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsSeverityLabelAttributes](f.ref.Append("finding_provider_fields_severity_label"))
}

func (f FiltersAttributes) FindingProviderFieldsSeverityOriginal() terra.SetValue[FiltersFindingProviderFieldsSeverityOriginalAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsSeverityOriginalAttributes](f.ref.Append("finding_provider_fields_severity_original"))
}

func (f FiltersAttributes) FindingProviderFieldsTypes() terra.SetValue[FiltersFindingProviderFieldsTypesAttributes] {
	return terra.ReferenceAsSet[FiltersFindingProviderFieldsTypesAttributes](f.ref.Append("finding_provider_fields_types"))
}

func (f FiltersAttributes) FirstObservedAt() terra.SetValue[FiltersFirstObservedAtAttributes] {
	return terra.ReferenceAsSet[FiltersFirstObservedAtAttributes](f.ref.Append("first_observed_at"))
}

func (f FiltersAttributes) GeneratorId() terra.SetValue[FiltersGeneratorIdAttributes] {
	return terra.ReferenceAsSet[FiltersGeneratorIdAttributes](f.ref.Append("generator_id"))
}

func (f FiltersAttributes) Id() terra.SetValue[FiltersIdAttributes] {
	return terra.ReferenceAsSet[FiltersIdAttributes](f.ref.Append("id"))
}

func (f FiltersAttributes) Keyword() terra.SetValue[FiltersKeywordAttributes] {
	return terra.ReferenceAsSet[FiltersKeywordAttributes](f.ref.Append("keyword"))
}

func (f FiltersAttributes) LastObservedAt() terra.SetValue[FiltersLastObservedAtAttributes] {
	return terra.ReferenceAsSet[FiltersLastObservedAtAttributes](f.ref.Append("last_observed_at"))
}

func (f FiltersAttributes) MalwareName() terra.SetValue[FiltersMalwareNameAttributes] {
	return terra.ReferenceAsSet[FiltersMalwareNameAttributes](f.ref.Append("malware_name"))
}

func (f FiltersAttributes) MalwarePath() terra.SetValue[FiltersMalwarePathAttributes] {
	return terra.ReferenceAsSet[FiltersMalwarePathAttributes](f.ref.Append("malware_path"))
}

func (f FiltersAttributes) MalwareState() terra.SetValue[FiltersMalwareStateAttributes] {
	return terra.ReferenceAsSet[FiltersMalwareStateAttributes](f.ref.Append("malware_state"))
}

func (f FiltersAttributes) MalwareType() terra.SetValue[FiltersMalwareTypeAttributes] {
	return terra.ReferenceAsSet[FiltersMalwareTypeAttributes](f.ref.Append("malware_type"))
}

func (f FiltersAttributes) NetworkDestinationDomain() terra.SetValue[FiltersNetworkDestinationDomainAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkDestinationDomainAttributes](f.ref.Append("network_destination_domain"))
}

func (f FiltersAttributes) NetworkDestinationIpv4() terra.SetValue[FiltersNetworkDestinationIpv4Attributes] {
	return terra.ReferenceAsSet[FiltersNetworkDestinationIpv4Attributes](f.ref.Append("network_destination_ipv4"))
}

func (f FiltersAttributes) NetworkDestinationIpv6() terra.SetValue[FiltersNetworkDestinationIpv6Attributes] {
	return terra.ReferenceAsSet[FiltersNetworkDestinationIpv6Attributes](f.ref.Append("network_destination_ipv6"))
}

func (f FiltersAttributes) NetworkDestinationPort() terra.SetValue[FiltersNetworkDestinationPortAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkDestinationPortAttributes](f.ref.Append("network_destination_port"))
}

func (f FiltersAttributes) NetworkDirection() terra.SetValue[FiltersNetworkDirectionAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkDirectionAttributes](f.ref.Append("network_direction"))
}

func (f FiltersAttributes) NetworkProtocol() terra.SetValue[FiltersNetworkProtocolAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkProtocolAttributes](f.ref.Append("network_protocol"))
}

func (f FiltersAttributes) NetworkSourceDomain() terra.SetValue[FiltersNetworkSourceDomainAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkSourceDomainAttributes](f.ref.Append("network_source_domain"))
}

func (f FiltersAttributes) NetworkSourceIpv4() terra.SetValue[FiltersNetworkSourceIpv4Attributes] {
	return terra.ReferenceAsSet[FiltersNetworkSourceIpv4Attributes](f.ref.Append("network_source_ipv4"))
}

func (f FiltersAttributes) NetworkSourceIpv6() terra.SetValue[FiltersNetworkSourceIpv6Attributes] {
	return terra.ReferenceAsSet[FiltersNetworkSourceIpv6Attributes](f.ref.Append("network_source_ipv6"))
}

func (f FiltersAttributes) NetworkSourceMac() terra.SetValue[FiltersNetworkSourceMacAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkSourceMacAttributes](f.ref.Append("network_source_mac"))
}

func (f FiltersAttributes) NetworkSourcePort() terra.SetValue[FiltersNetworkSourcePortAttributes] {
	return terra.ReferenceAsSet[FiltersNetworkSourcePortAttributes](f.ref.Append("network_source_port"))
}

func (f FiltersAttributes) NoteText() terra.SetValue[FiltersNoteTextAttributes] {
	return terra.ReferenceAsSet[FiltersNoteTextAttributes](f.ref.Append("note_text"))
}

func (f FiltersAttributes) NoteUpdatedAt() terra.SetValue[FiltersNoteUpdatedAtAttributes] {
	return terra.ReferenceAsSet[FiltersNoteUpdatedAtAttributes](f.ref.Append("note_updated_at"))
}

func (f FiltersAttributes) NoteUpdatedBy() terra.SetValue[FiltersNoteUpdatedByAttributes] {
	return terra.ReferenceAsSet[FiltersNoteUpdatedByAttributes](f.ref.Append("note_updated_by"))
}

func (f FiltersAttributes) ProcessLaunchedAt() terra.SetValue[FiltersProcessLaunchedAtAttributes] {
	return terra.ReferenceAsSet[FiltersProcessLaunchedAtAttributes](f.ref.Append("process_launched_at"))
}

func (f FiltersAttributes) ProcessName() terra.SetValue[FiltersProcessNameAttributes] {
	return terra.ReferenceAsSet[FiltersProcessNameAttributes](f.ref.Append("process_name"))
}

func (f FiltersAttributes) ProcessParentPid() terra.SetValue[FiltersProcessParentPidAttributes] {
	return terra.ReferenceAsSet[FiltersProcessParentPidAttributes](f.ref.Append("process_parent_pid"))
}

func (f FiltersAttributes) ProcessPath() terra.SetValue[FiltersProcessPathAttributes] {
	return terra.ReferenceAsSet[FiltersProcessPathAttributes](f.ref.Append("process_path"))
}

func (f FiltersAttributes) ProcessPid() terra.SetValue[FiltersProcessPidAttributes] {
	return terra.ReferenceAsSet[FiltersProcessPidAttributes](f.ref.Append("process_pid"))
}

func (f FiltersAttributes) ProcessTerminatedAt() terra.SetValue[FiltersProcessTerminatedAtAttributes] {
	return terra.ReferenceAsSet[FiltersProcessTerminatedAtAttributes](f.ref.Append("process_terminated_at"))
}

func (f FiltersAttributes) ProductArn() terra.SetValue[FiltersProductArnAttributes] {
	return terra.ReferenceAsSet[FiltersProductArnAttributes](f.ref.Append("product_arn"))
}

func (f FiltersAttributes) ProductFields() terra.SetValue[FiltersProductFieldsAttributes] {
	return terra.ReferenceAsSet[FiltersProductFieldsAttributes](f.ref.Append("product_fields"))
}

func (f FiltersAttributes) ProductName() terra.SetValue[FiltersProductNameAttributes] {
	return terra.ReferenceAsSet[FiltersProductNameAttributes](f.ref.Append("product_name"))
}

func (f FiltersAttributes) RecommendationText() terra.SetValue[FiltersRecommendationTextAttributes] {
	return terra.ReferenceAsSet[FiltersRecommendationTextAttributes](f.ref.Append("recommendation_text"))
}

func (f FiltersAttributes) RecordState() terra.SetValue[FiltersRecordStateAttributes] {
	return terra.ReferenceAsSet[FiltersRecordStateAttributes](f.ref.Append("record_state"))
}

func (f FiltersAttributes) RelatedFindingsId() terra.SetValue[FiltersRelatedFindingsIdAttributes] {
	return terra.ReferenceAsSet[FiltersRelatedFindingsIdAttributes](f.ref.Append("related_findings_id"))
}

func (f FiltersAttributes) RelatedFindingsProductArn() terra.SetValue[FiltersRelatedFindingsProductArnAttributes] {
	return terra.ReferenceAsSet[FiltersRelatedFindingsProductArnAttributes](f.ref.Append("related_findings_product_arn"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceIamInstanceProfileArn() terra.SetValue[FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes](f.ref.Append("resource_aws_ec2_instance_iam_instance_profile_arn"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceImageId() terra.SetValue[FiltersResourceAwsEc2InstanceImageIdAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceImageIdAttributes](f.ref.Append("resource_aws_ec2_instance_image_id"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceIpv4Addresses() terra.SetValue[FiltersResourceAwsEc2InstanceIpv4AddressesAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceIpv4AddressesAttributes](f.ref.Append("resource_aws_ec2_instance_ipv4_addresses"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceIpv6Addresses() terra.SetValue[FiltersResourceAwsEc2InstanceIpv6AddressesAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceIpv6AddressesAttributes](f.ref.Append("resource_aws_ec2_instance_ipv6_addresses"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceKeyName() terra.SetValue[FiltersResourceAwsEc2InstanceKeyNameAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceKeyNameAttributes](f.ref.Append("resource_aws_ec2_instance_key_name"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceLaunchedAt() terra.SetValue[FiltersResourceAwsEc2InstanceLaunchedAtAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceLaunchedAtAttributes](f.ref.Append("resource_aws_ec2_instance_launched_at"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceSubnetId() terra.SetValue[FiltersResourceAwsEc2InstanceSubnetIdAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceSubnetIdAttributes](f.ref.Append("resource_aws_ec2_instance_subnet_id"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceType() terra.SetValue[FiltersResourceAwsEc2InstanceTypeAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceTypeAttributes](f.ref.Append("resource_aws_ec2_instance_type"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceVpcId() terra.SetValue[FiltersResourceAwsEc2InstanceVpcIdAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsEc2InstanceVpcIdAttributes](f.ref.Append("resource_aws_ec2_instance_vpc_id"))
}

func (f FiltersAttributes) ResourceAwsIamAccessKeyCreatedAt() terra.SetValue[FiltersResourceAwsIamAccessKeyCreatedAtAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsIamAccessKeyCreatedAtAttributes](f.ref.Append("resource_aws_iam_access_key_created_at"))
}

func (f FiltersAttributes) ResourceAwsIamAccessKeyStatus() terra.SetValue[FiltersResourceAwsIamAccessKeyStatusAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsIamAccessKeyStatusAttributes](f.ref.Append("resource_aws_iam_access_key_status"))
}

func (f FiltersAttributes) ResourceAwsIamAccessKeyUserName() terra.SetValue[FiltersResourceAwsIamAccessKeyUserNameAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsIamAccessKeyUserNameAttributes](f.ref.Append("resource_aws_iam_access_key_user_name"))
}

func (f FiltersAttributes) ResourceAwsS3BucketOwnerId() terra.SetValue[FiltersResourceAwsS3BucketOwnerIdAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsS3BucketOwnerIdAttributes](f.ref.Append("resource_aws_s3_bucket_owner_id"))
}

func (f FiltersAttributes) ResourceAwsS3BucketOwnerName() terra.SetValue[FiltersResourceAwsS3BucketOwnerNameAttributes] {
	return terra.ReferenceAsSet[FiltersResourceAwsS3BucketOwnerNameAttributes](f.ref.Append("resource_aws_s3_bucket_owner_name"))
}

func (f FiltersAttributes) ResourceContainerImageId() terra.SetValue[FiltersResourceContainerImageIdAttributes] {
	return terra.ReferenceAsSet[FiltersResourceContainerImageIdAttributes](f.ref.Append("resource_container_image_id"))
}

func (f FiltersAttributes) ResourceContainerImageName() terra.SetValue[FiltersResourceContainerImageNameAttributes] {
	return terra.ReferenceAsSet[FiltersResourceContainerImageNameAttributes](f.ref.Append("resource_container_image_name"))
}

func (f FiltersAttributes) ResourceContainerLaunchedAt() terra.SetValue[FiltersResourceContainerLaunchedAtAttributes] {
	return terra.ReferenceAsSet[FiltersResourceContainerLaunchedAtAttributes](f.ref.Append("resource_container_launched_at"))
}

func (f FiltersAttributes) ResourceContainerName() terra.SetValue[FiltersResourceContainerNameAttributes] {
	return terra.ReferenceAsSet[FiltersResourceContainerNameAttributes](f.ref.Append("resource_container_name"))
}

func (f FiltersAttributes) ResourceDetailsOther() terra.SetValue[FiltersResourceDetailsOtherAttributes] {
	return terra.ReferenceAsSet[FiltersResourceDetailsOtherAttributes](f.ref.Append("resource_details_other"))
}

func (f FiltersAttributes) ResourceId() terra.SetValue[FiltersResourceIdAttributes] {
	return terra.ReferenceAsSet[FiltersResourceIdAttributes](f.ref.Append("resource_id"))
}

func (f FiltersAttributes) ResourcePartition() terra.SetValue[FiltersResourcePartitionAttributes] {
	return terra.ReferenceAsSet[FiltersResourcePartitionAttributes](f.ref.Append("resource_partition"))
}

func (f FiltersAttributes) ResourceRegion() terra.SetValue[FiltersResourceRegionAttributes] {
	return terra.ReferenceAsSet[FiltersResourceRegionAttributes](f.ref.Append("resource_region"))
}

func (f FiltersAttributes) ResourceTags() terra.SetValue[FiltersResourceTagsAttributes] {
	return terra.ReferenceAsSet[FiltersResourceTagsAttributes](f.ref.Append("resource_tags"))
}

func (f FiltersAttributes) ResourceType() terra.SetValue[FiltersResourceTypeAttributes] {
	return terra.ReferenceAsSet[FiltersResourceTypeAttributes](f.ref.Append("resource_type"))
}

func (f FiltersAttributes) SeverityLabel() terra.SetValue[FiltersSeverityLabelAttributes] {
	return terra.ReferenceAsSet[FiltersSeverityLabelAttributes](f.ref.Append("severity_label"))
}

func (f FiltersAttributes) SourceUrl() terra.SetValue[FiltersSourceUrlAttributes] {
	return terra.ReferenceAsSet[FiltersSourceUrlAttributes](f.ref.Append("source_url"))
}

func (f FiltersAttributes) ThreatIntelIndicatorCategory() terra.SetValue[FiltersThreatIntelIndicatorCategoryAttributes] {
	return terra.ReferenceAsSet[FiltersThreatIntelIndicatorCategoryAttributes](f.ref.Append("threat_intel_indicator_category"))
}

func (f FiltersAttributes) ThreatIntelIndicatorLastObservedAt() terra.SetValue[FiltersThreatIntelIndicatorLastObservedAtAttributes] {
	return terra.ReferenceAsSet[FiltersThreatIntelIndicatorLastObservedAtAttributes](f.ref.Append("threat_intel_indicator_last_observed_at"))
}

func (f FiltersAttributes) ThreatIntelIndicatorSource() terra.SetValue[FiltersThreatIntelIndicatorSourceAttributes] {
	return terra.ReferenceAsSet[FiltersThreatIntelIndicatorSourceAttributes](f.ref.Append("threat_intel_indicator_source"))
}

func (f FiltersAttributes) ThreatIntelIndicatorSourceUrl() terra.SetValue[FiltersThreatIntelIndicatorSourceUrlAttributes] {
	return terra.ReferenceAsSet[FiltersThreatIntelIndicatorSourceUrlAttributes](f.ref.Append("threat_intel_indicator_source_url"))
}

func (f FiltersAttributes) ThreatIntelIndicatorType() terra.SetValue[FiltersThreatIntelIndicatorTypeAttributes] {
	return terra.ReferenceAsSet[FiltersThreatIntelIndicatorTypeAttributes](f.ref.Append("threat_intel_indicator_type"))
}

func (f FiltersAttributes) ThreatIntelIndicatorValue() terra.SetValue[FiltersThreatIntelIndicatorValueAttributes] {
	return terra.ReferenceAsSet[FiltersThreatIntelIndicatorValueAttributes](f.ref.Append("threat_intel_indicator_value"))
}

func (f FiltersAttributes) Title() terra.SetValue[FiltersTitleAttributes] {
	return terra.ReferenceAsSet[FiltersTitleAttributes](f.ref.Append("title"))
}

func (f FiltersAttributes) Type() terra.SetValue[FiltersTypeAttributes] {
	return terra.ReferenceAsSet[FiltersTypeAttributes](f.ref.Append("type"))
}

func (f FiltersAttributes) UpdatedAt() terra.SetValue[FiltersUpdatedAtAttributes] {
	return terra.ReferenceAsSet[FiltersUpdatedAtAttributes](f.ref.Append("updated_at"))
}

func (f FiltersAttributes) UserDefinedValues() terra.SetValue[FiltersUserDefinedValuesAttributes] {
	return terra.ReferenceAsSet[FiltersUserDefinedValuesAttributes](f.ref.Append("user_defined_values"))
}

func (f FiltersAttributes) VerificationState() terra.SetValue[FiltersVerificationStateAttributes] {
	return terra.ReferenceAsSet[FiltersVerificationStateAttributes](f.ref.Append("verification_state"))
}

func (f FiltersAttributes) WorkflowStatus() terra.SetValue[FiltersWorkflowStatusAttributes] {
	return terra.ReferenceAsSet[FiltersWorkflowStatusAttributes](f.ref.Append("workflow_status"))
}

type FiltersAwsAccountIdAttributes struct {
	ref terra.Reference
}

func (aai FiltersAwsAccountIdAttributes) InternalRef() (terra.Reference, error) {
	return aai.ref, nil
}

func (aai FiltersAwsAccountIdAttributes) InternalWithRef(ref terra.Reference) FiltersAwsAccountIdAttributes {
	return FiltersAwsAccountIdAttributes{ref: ref}
}

func (aai FiltersAwsAccountIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aai.ref.InternalTokens()
}

func (aai FiltersAwsAccountIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("comparison"))
}

func (aai FiltersAwsAccountIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("value"))
}

type FiltersCompanyNameAttributes struct {
	ref terra.Reference
}

func (cn FiltersCompanyNameAttributes) InternalRef() (terra.Reference, error) {
	return cn.ref, nil
}

func (cn FiltersCompanyNameAttributes) InternalWithRef(ref terra.Reference) FiltersCompanyNameAttributes {
	return FiltersCompanyNameAttributes{ref: ref}
}

func (cn FiltersCompanyNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cn.ref.InternalTokens()
}

func (cn FiltersCompanyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(cn.ref.Append("comparison"))
}

func (cn FiltersCompanyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cn.ref.Append("value"))
}

type FiltersComplianceStatusAttributes struct {
	ref terra.Reference
}

func (cs FiltersComplianceStatusAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs FiltersComplianceStatusAttributes) InternalWithRef(ref terra.Reference) FiltersComplianceStatusAttributes {
	return FiltersComplianceStatusAttributes{ref: ref}
}

func (cs FiltersComplianceStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs FiltersComplianceStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("comparison"))
}

func (cs FiltersComplianceStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("value"))
}

type FiltersConfidenceAttributes struct {
	ref terra.Reference
}

func (c FiltersConfidenceAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FiltersConfidenceAttributes) InternalWithRef(ref terra.Reference) FiltersConfidenceAttributes {
	return FiltersConfidenceAttributes{ref: ref}
}

func (c FiltersConfidenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FiltersConfidenceAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("eq"))
}

func (c FiltersConfidenceAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("gte"))
}

func (c FiltersConfidenceAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("lte"))
}

type FiltersCreatedAtAttributes struct {
	ref terra.Reference
}

func (ca FiltersCreatedAtAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca FiltersCreatedAtAttributes) InternalWithRef(ref terra.Reference) FiltersCreatedAtAttributes {
	return FiltersCreatedAtAttributes{ref: ref}
}

func (ca FiltersCreatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca FiltersCreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("end"))
}

func (ca FiltersCreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("start"))
}

func (ca FiltersCreatedAtAttributes) DateRange() terra.ListValue[FiltersCreatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersCreatedAtDateRangeAttributes](ca.ref.Append("date_range"))
}

type FiltersCreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersCreatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersCreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersCreatedAtDateRangeAttributes {
	return FiltersCreatedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersCreatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersCreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersCreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersCriticalityAttributes struct {
	ref terra.Reference
}

func (c FiltersCriticalityAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FiltersCriticalityAttributes) InternalWithRef(ref terra.Reference) FiltersCriticalityAttributes {
	return FiltersCriticalityAttributes{ref: ref}
}

func (c FiltersCriticalityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FiltersCriticalityAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("eq"))
}

func (c FiltersCriticalityAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("gte"))
}

func (c FiltersCriticalityAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("lte"))
}

type FiltersDescriptionAttributes struct {
	ref terra.Reference
}

func (d FiltersDescriptionAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d FiltersDescriptionAttributes) InternalWithRef(ref terra.Reference) FiltersDescriptionAttributes {
	return FiltersDescriptionAttributes{ref: ref}
}

func (d FiltersDescriptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d FiltersDescriptionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("comparison"))
}

func (d FiltersDescriptionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type FiltersFindingProviderFieldsConfidenceAttributes struct {
	ref terra.Reference
}

func (fpfc FiltersFindingProviderFieldsConfidenceAttributes) InternalRef() (terra.Reference, error) {
	return fpfc.ref, nil
}

func (fpfc FiltersFindingProviderFieldsConfidenceAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsConfidenceAttributes {
	return FiltersFindingProviderFieldsConfidenceAttributes{ref: ref}
}

func (fpfc FiltersFindingProviderFieldsConfidenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfc.ref.InternalTokens()
}

func (fpfc FiltersFindingProviderFieldsConfidenceAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("eq"))
}

func (fpfc FiltersFindingProviderFieldsConfidenceAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("gte"))
}

func (fpfc FiltersFindingProviderFieldsConfidenceAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("lte"))
}

type FiltersFindingProviderFieldsCriticalityAttributes struct {
	ref terra.Reference
}

func (fpfc FiltersFindingProviderFieldsCriticalityAttributes) InternalRef() (terra.Reference, error) {
	return fpfc.ref, nil
}

func (fpfc FiltersFindingProviderFieldsCriticalityAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsCriticalityAttributes {
	return FiltersFindingProviderFieldsCriticalityAttributes{ref: ref}
}

func (fpfc FiltersFindingProviderFieldsCriticalityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfc.ref.InternalTokens()
}

func (fpfc FiltersFindingProviderFieldsCriticalityAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("eq"))
}

func (fpfc FiltersFindingProviderFieldsCriticalityAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("gte"))
}

func (fpfc FiltersFindingProviderFieldsCriticalityAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("lte"))
}

type FiltersFindingProviderFieldsRelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (fpfrfi FiltersFindingProviderFieldsRelatedFindingsIdAttributes) InternalRef() (terra.Reference, error) {
	return fpfrfi.ref, nil
}

func (fpfrfi FiltersFindingProviderFieldsRelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsRelatedFindingsIdAttributes {
	return FiltersFindingProviderFieldsRelatedFindingsIdAttributes{ref: ref}
}

func (fpfrfi FiltersFindingProviderFieldsRelatedFindingsIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfrfi.ref.InternalTokens()
}

func (fpfrfi FiltersFindingProviderFieldsRelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfrfi.ref.Append("comparison"))
}

func (fpfrfi FiltersFindingProviderFieldsRelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfrfi.ref.Append("value"))
}

type FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (fpfrfpa FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes) InternalRef() (terra.Reference, error) {
	return fpfrfpa.ref, nil
}

func (fpfrfpa FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes {
	return FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes{ref: ref}
}

func (fpfrfpa FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfrfpa.ref.InternalTokens()
}

func (fpfrfpa FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfrfpa.ref.Append("comparison"))
}

func (fpfrfpa FiltersFindingProviderFieldsRelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfrfpa.ref.Append("value"))
}

type FiltersFindingProviderFieldsSeverityLabelAttributes struct {
	ref terra.Reference
}

func (fpfsl FiltersFindingProviderFieldsSeverityLabelAttributes) InternalRef() (terra.Reference, error) {
	return fpfsl.ref, nil
}

func (fpfsl FiltersFindingProviderFieldsSeverityLabelAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsSeverityLabelAttributes {
	return FiltersFindingProviderFieldsSeverityLabelAttributes{ref: ref}
}

func (fpfsl FiltersFindingProviderFieldsSeverityLabelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfsl.ref.InternalTokens()
}

func (fpfsl FiltersFindingProviderFieldsSeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfsl.ref.Append("comparison"))
}

func (fpfsl FiltersFindingProviderFieldsSeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfsl.ref.Append("value"))
}

type FiltersFindingProviderFieldsSeverityOriginalAttributes struct {
	ref terra.Reference
}

func (fpfso FiltersFindingProviderFieldsSeverityOriginalAttributes) InternalRef() (terra.Reference, error) {
	return fpfso.ref, nil
}

func (fpfso FiltersFindingProviderFieldsSeverityOriginalAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsSeverityOriginalAttributes {
	return FiltersFindingProviderFieldsSeverityOriginalAttributes{ref: ref}
}

func (fpfso FiltersFindingProviderFieldsSeverityOriginalAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfso.ref.InternalTokens()
}

func (fpfso FiltersFindingProviderFieldsSeverityOriginalAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfso.ref.Append("comparison"))
}

func (fpfso FiltersFindingProviderFieldsSeverityOriginalAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfso.ref.Append("value"))
}

type FiltersFindingProviderFieldsTypesAttributes struct {
	ref terra.Reference
}

func (fpft FiltersFindingProviderFieldsTypesAttributes) InternalRef() (terra.Reference, error) {
	return fpft.ref, nil
}

func (fpft FiltersFindingProviderFieldsTypesAttributes) InternalWithRef(ref terra.Reference) FiltersFindingProviderFieldsTypesAttributes {
	return FiltersFindingProviderFieldsTypesAttributes{ref: ref}
}

func (fpft FiltersFindingProviderFieldsTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpft.ref.InternalTokens()
}

func (fpft FiltersFindingProviderFieldsTypesAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpft.ref.Append("comparison"))
}

func (fpft FiltersFindingProviderFieldsTypesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpft.ref.Append("value"))
}

type FiltersFirstObservedAtAttributes struct {
	ref terra.Reference
}

func (foa FiltersFirstObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return foa.ref, nil
}

func (foa FiltersFirstObservedAtAttributes) InternalWithRef(ref terra.Reference) FiltersFirstObservedAtAttributes {
	return FiltersFirstObservedAtAttributes{ref: ref}
}

func (foa FiltersFirstObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return foa.ref.InternalTokens()
}

func (foa FiltersFirstObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(foa.ref.Append("end"))
}

func (foa FiltersFirstObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(foa.ref.Append("start"))
}

func (foa FiltersFirstObservedAtAttributes) DateRange() terra.ListValue[FiltersFirstObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersFirstObservedAtDateRangeAttributes](foa.ref.Append("date_range"))
}

type FiltersFirstObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersFirstObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersFirstObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersFirstObservedAtDateRangeAttributes {
	return FiltersFirstObservedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersFirstObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersFirstObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersFirstObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersGeneratorIdAttributes struct {
	ref terra.Reference
}

func (gi FiltersGeneratorIdAttributes) InternalRef() (terra.Reference, error) {
	return gi.ref, nil
}

func (gi FiltersGeneratorIdAttributes) InternalWithRef(ref terra.Reference) FiltersGeneratorIdAttributes {
	return FiltersGeneratorIdAttributes{ref: ref}
}

func (gi FiltersGeneratorIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gi.ref.InternalTokens()
}

func (gi FiltersGeneratorIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(gi.ref.Append("comparison"))
}

func (gi FiltersGeneratorIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(gi.ref.Append("value"))
}

type FiltersIdAttributes struct {
	ref terra.Reference
}

func (i FiltersIdAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i FiltersIdAttributes) InternalWithRef(ref terra.Reference) FiltersIdAttributes {
	return FiltersIdAttributes{ref: ref}
}

func (i FiltersIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i FiltersIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("comparison"))
}

func (i FiltersIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("value"))
}

type FiltersKeywordAttributes struct {
	ref terra.Reference
}

func (k FiltersKeywordAttributes) InternalRef() (terra.Reference, error) {
	return k.ref, nil
}

func (k FiltersKeywordAttributes) InternalWithRef(ref terra.Reference) FiltersKeywordAttributes {
	return FiltersKeywordAttributes{ref: ref}
}

func (k FiltersKeywordAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return k.ref.InternalTokens()
}

func (k FiltersKeywordAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(k.ref.Append("value"))
}

type FiltersLastObservedAtAttributes struct {
	ref terra.Reference
}

func (loa FiltersLastObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return loa.ref, nil
}

func (loa FiltersLastObservedAtAttributes) InternalWithRef(ref terra.Reference) FiltersLastObservedAtAttributes {
	return FiltersLastObservedAtAttributes{ref: ref}
}

func (loa FiltersLastObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return loa.ref.InternalTokens()
}

func (loa FiltersLastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(loa.ref.Append("end"))
}

func (loa FiltersLastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(loa.ref.Append("start"))
}

func (loa FiltersLastObservedAtAttributes) DateRange() terra.ListValue[FiltersLastObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersLastObservedAtDateRangeAttributes](loa.ref.Append("date_range"))
}

type FiltersLastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersLastObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersLastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersLastObservedAtDateRangeAttributes {
	return FiltersLastObservedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersLastObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersLastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersLastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersMalwareNameAttributes struct {
	ref terra.Reference
}

func (mn FiltersMalwareNameAttributes) InternalRef() (terra.Reference, error) {
	return mn.ref, nil
}

func (mn FiltersMalwareNameAttributes) InternalWithRef(ref terra.Reference) FiltersMalwareNameAttributes {
	return FiltersMalwareNameAttributes{ref: ref}
}

func (mn FiltersMalwareNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mn.ref.InternalTokens()
}

func (mn FiltersMalwareNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(mn.ref.Append("comparison"))
}

func (mn FiltersMalwareNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mn.ref.Append("value"))
}

type FiltersMalwarePathAttributes struct {
	ref terra.Reference
}

func (mp FiltersMalwarePathAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp FiltersMalwarePathAttributes) InternalWithRef(ref terra.Reference) FiltersMalwarePathAttributes {
	return FiltersMalwarePathAttributes{ref: ref}
}

func (mp FiltersMalwarePathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp FiltersMalwarePathAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(mp.ref.Append("comparison"))
}

func (mp FiltersMalwarePathAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mp.ref.Append("value"))
}

type FiltersMalwareStateAttributes struct {
	ref terra.Reference
}

func (ms FiltersMalwareStateAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms FiltersMalwareStateAttributes) InternalWithRef(ref terra.Reference) FiltersMalwareStateAttributes {
	return FiltersMalwareStateAttributes{ref: ref}
}

func (ms FiltersMalwareStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms FiltersMalwareStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("comparison"))
}

func (ms FiltersMalwareStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("value"))
}

type FiltersMalwareTypeAttributes struct {
	ref terra.Reference
}

func (mt FiltersMalwareTypeAttributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt FiltersMalwareTypeAttributes) InternalWithRef(ref terra.Reference) FiltersMalwareTypeAttributes {
	return FiltersMalwareTypeAttributes{ref: ref}
}

func (mt FiltersMalwareTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt FiltersMalwareTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("comparison"))
}

func (mt FiltersMalwareTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("value"))
}

type FiltersNetworkDestinationDomainAttributes struct {
	ref terra.Reference
}

func (ndd FiltersNetworkDestinationDomainAttributes) InternalRef() (terra.Reference, error) {
	return ndd.ref, nil
}

func (ndd FiltersNetworkDestinationDomainAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkDestinationDomainAttributes {
	return FiltersNetworkDestinationDomainAttributes{ref: ref}
}

func (ndd FiltersNetworkDestinationDomainAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndd.ref.InternalTokens()
}

func (ndd FiltersNetworkDestinationDomainAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ndd.ref.Append("comparison"))
}

func (ndd FiltersNetworkDestinationDomainAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ndd.ref.Append("value"))
}

type FiltersNetworkDestinationIpv4Attributes struct {
	ref terra.Reference
}

func (ndi FiltersNetworkDestinationIpv4Attributes) InternalRef() (terra.Reference, error) {
	return ndi.ref, nil
}

func (ndi FiltersNetworkDestinationIpv4Attributes) InternalWithRef(ref terra.Reference) FiltersNetworkDestinationIpv4Attributes {
	return FiltersNetworkDestinationIpv4Attributes{ref: ref}
}

func (ndi FiltersNetworkDestinationIpv4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndi.ref.InternalTokens()
}

func (ndi FiltersNetworkDestinationIpv4Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ndi.ref.Append("cidr"))
}

type FiltersNetworkDestinationIpv6Attributes struct {
	ref terra.Reference
}

func (ndi FiltersNetworkDestinationIpv6Attributes) InternalRef() (terra.Reference, error) {
	return ndi.ref, nil
}

func (ndi FiltersNetworkDestinationIpv6Attributes) InternalWithRef(ref terra.Reference) FiltersNetworkDestinationIpv6Attributes {
	return FiltersNetworkDestinationIpv6Attributes{ref: ref}
}

func (ndi FiltersNetworkDestinationIpv6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndi.ref.InternalTokens()
}

func (ndi FiltersNetworkDestinationIpv6Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ndi.ref.Append("cidr"))
}

type FiltersNetworkDestinationPortAttributes struct {
	ref terra.Reference
}

func (ndp FiltersNetworkDestinationPortAttributes) InternalRef() (terra.Reference, error) {
	return ndp.ref, nil
}

func (ndp FiltersNetworkDestinationPortAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkDestinationPortAttributes {
	return FiltersNetworkDestinationPortAttributes{ref: ref}
}

func (ndp FiltersNetworkDestinationPortAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndp.ref.InternalTokens()
}

func (ndp FiltersNetworkDestinationPortAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(ndp.ref.Append("eq"))
}

func (ndp FiltersNetworkDestinationPortAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(ndp.ref.Append("gte"))
}

func (ndp FiltersNetworkDestinationPortAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(ndp.ref.Append("lte"))
}

type FiltersNetworkDirectionAttributes struct {
	ref terra.Reference
}

func (nd FiltersNetworkDirectionAttributes) InternalRef() (terra.Reference, error) {
	return nd.ref, nil
}

func (nd FiltersNetworkDirectionAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkDirectionAttributes {
	return FiltersNetworkDirectionAttributes{ref: ref}
}

func (nd FiltersNetworkDirectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nd.ref.InternalTokens()
}

func (nd FiltersNetworkDirectionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nd.ref.Append("comparison"))
}

func (nd FiltersNetworkDirectionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nd.ref.Append("value"))
}

type FiltersNetworkProtocolAttributes struct {
	ref terra.Reference
}

func (np FiltersNetworkProtocolAttributes) InternalRef() (terra.Reference, error) {
	return np.ref, nil
}

func (np FiltersNetworkProtocolAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkProtocolAttributes {
	return FiltersNetworkProtocolAttributes{ref: ref}
}

func (np FiltersNetworkProtocolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return np.ref.InternalTokens()
}

func (np FiltersNetworkProtocolAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("comparison"))
}

func (np FiltersNetworkProtocolAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("value"))
}

type FiltersNetworkSourceDomainAttributes struct {
	ref terra.Reference
}

func (nsd FiltersNetworkSourceDomainAttributes) InternalRef() (terra.Reference, error) {
	return nsd.ref, nil
}

func (nsd FiltersNetworkSourceDomainAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkSourceDomainAttributes {
	return FiltersNetworkSourceDomainAttributes{ref: ref}
}

func (nsd FiltersNetworkSourceDomainAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsd.ref.InternalTokens()
}

func (nsd FiltersNetworkSourceDomainAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nsd.ref.Append("comparison"))
}

func (nsd FiltersNetworkSourceDomainAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nsd.ref.Append("value"))
}

type FiltersNetworkSourceIpv4Attributes struct {
	ref terra.Reference
}

func (nsi FiltersNetworkSourceIpv4Attributes) InternalRef() (terra.Reference, error) {
	return nsi.ref, nil
}

func (nsi FiltersNetworkSourceIpv4Attributes) InternalWithRef(ref terra.Reference) FiltersNetworkSourceIpv4Attributes {
	return FiltersNetworkSourceIpv4Attributes{ref: ref}
}

func (nsi FiltersNetworkSourceIpv4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsi.ref.InternalTokens()
}

func (nsi FiltersNetworkSourceIpv4Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(nsi.ref.Append("cidr"))
}

type FiltersNetworkSourceIpv6Attributes struct {
	ref terra.Reference
}

func (nsi FiltersNetworkSourceIpv6Attributes) InternalRef() (terra.Reference, error) {
	return nsi.ref, nil
}

func (nsi FiltersNetworkSourceIpv6Attributes) InternalWithRef(ref terra.Reference) FiltersNetworkSourceIpv6Attributes {
	return FiltersNetworkSourceIpv6Attributes{ref: ref}
}

func (nsi FiltersNetworkSourceIpv6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsi.ref.InternalTokens()
}

func (nsi FiltersNetworkSourceIpv6Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(nsi.ref.Append("cidr"))
}

type FiltersNetworkSourceMacAttributes struct {
	ref terra.Reference
}

func (nsm FiltersNetworkSourceMacAttributes) InternalRef() (terra.Reference, error) {
	return nsm.ref, nil
}

func (nsm FiltersNetworkSourceMacAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkSourceMacAttributes {
	return FiltersNetworkSourceMacAttributes{ref: ref}
}

func (nsm FiltersNetworkSourceMacAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsm.ref.InternalTokens()
}

func (nsm FiltersNetworkSourceMacAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nsm.ref.Append("comparison"))
}

func (nsm FiltersNetworkSourceMacAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nsm.ref.Append("value"))
}

type FiltersNetworkSourcePortAttributes struct {
	ref terra.Reference
}

func (nsp FiltersNetworkSourcePortAttributes) InternalRef() (terra.Reference, error) {
	return nsp.ref, nil
}

func (nsp FiltersNetworkSourcePortAttributes) InternalWithRef(ref terra.Reference) FiltersNetworkSourcePortAttributes {
	return FiltersNetworkSourcePortAttributes{ref: ref}
}

func (nsp FiltersNetworkSourcePortAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsp.ref.InternalTokens()
}

func (nsp FiltersNetworkSourcePortAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(nsp.ref.Append("eq"))
}

func (nsp FiltersNetworkSourcePortAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(nsp.ref.Append("gte"))
}

func (nsp FiltersNetworkSourcePortAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(nsp.ref.Append("lte"))
}

type FiltersNoteTextAttributes struct {
	ref terra.Reference
}

func (nt FiltersNoteTextAttributes) InternalRef() (terra.Reference, error) {
	return nt.ref, nil
}

func (nt FiltersNoteTextAttributes) InternalWithRef(ref terra.Reference) FiltersNoteTextAttributes {
	return FiltersNoteTextAttributes{ref: ref}
}

func (nt FiltersNoteTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nt.ref.InternalTokens()
}

func (nt FiltersNoteTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("comparison"))
}

func (nt FiltersNoteTextAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("value"))
}

type FiltersNoteUpdatedAtAttributes struct {
	ref terra.Reference
}

func (nua FiltersNoteUpdatedAtAttributes) InternalRef() (terra.Reference, error) {
	return nua.ref, nil
}

func (nua FiltersNoteUpdatedAtAttributes) InternalWithRef(ref terra.Reference) FiltersNoteUpdatedAtAttributes {
	return FiltersNoteUpdatedAtAttributes{ref: ref}
}

func (nua FiltersNoteUpdatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nua.ref.InternalTokens()
}

func (nua FiltersNoteUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(nua.ref.Append("end"))
}

func (nua FiltersNoteUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(nua.ref.Append("start"))
}

func (nua FiltersNoteUpdatedAtAttributes) DateRange() terra.ListValue[FiltersNoteUpdatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersNoteUpdatedAtDateRangeAttributes](nua.ref.Append("date_range"))
}

type FiltersNoteUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersNoteUpdatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersNoteUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersNoteUpdatedAtDateRangeAttributes {
	return FiltersNoteUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersNoteUpdatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersNoteUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersNoteUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersNoteUpdatedByAttributes struct {
	ref terra.Reference
}

func (nub FiltersNoteUpdatedByAttributes) InternalRef() (terra.Reference, error) {
	return nub.ref, nil
}

func (nub FiltersNoteUpdatedByAttributes) InternalWithRef(ref terra.Reference) FiltersNoteUpdatedByAttributes {
	return FiltersNoteUpdatedByAttributes{ref: ref}
}

func (nub FiltersNoteUpdatedByAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nub.ref.InternalTokens()
}

func (nub FiltersNoteUpdatedByAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nub.ref.Append("comparison"))
}

func (nub FiltersNoteUpdatedByAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nub.ref.Append("value"))
}

type FiltersProcessLaunchedAtAttributes struct {
	ref terra.Reference
}

func (pla FiltersProcessLaunchedAtAttributes) InternalRef() (terra.Reference, error) {
	return pla.ref, nil
}

func (pla FiltersProcessLaunchedAtAttributes) InternalWithRef(ref terra.Reference) FiltersProcessLaunchedAtAttributes {
	return FiltersProcessLaunchedAtAttributes{ref: ref}
}

func (pla FiltersProcessLaunchedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pla.ref.InternalTokens()
}

func (pla FiltersProcessLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(pla.ref.Append("end"))
}

func (pla FiltersProcessLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(pla.ref.Append("start"))
}

func (pla FiltersProcessLaunchedAtAttributes) DateRange() terra.ListValue[FiltersProcessLaunchedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersProcessLaunchedAtDateRangeAttributes](pla.ref.Append("date_range"))
}

type FiltersProcessLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersProcessLaunchedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersProcessLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersProcessLaunchedAtDateRangeAttributes {
	return FiltersProcessLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersProcessLaunchedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersProcessLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersProcessLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersProcessNameAttributes struct {
	ref terra.Reference
}

func (pn FiltersProcessNameAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn FiltersProcessNameAttributes) InternalWithRef(ref terra.Reference) FiltersProcessNameAttributes {
	return FiltersProcessNameAttributes{ref: ref}
}

func (pn FiltersProcessNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pn.ref.InternalTokens()
}

func (pn FiltersProcessNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("comparison"))
}

func (pn FiltersProcessNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("value"))
}

type FiltersProcessParentPidAttributes struct {
	ref terra.Reference
}

func (ppp FiltersProcessParentPidAttributes) InternalRef() (terra.Reference, error) {
	return ppp.ref, nil
}

func (ppp FiltersProcessParentPidAttributes) InternalWithRef(ref terra.Reference) FiltersProcessParentPidAttributes {
	return FiltersProcessParentPidAttributes{ref: ref}
}

func (ppp FiltersProcessParentPidAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ppp.ref.InternalTokens()
}

func (ppp FiltersProcessParentPidAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(ppp.ref.Append("eq"))
}

func (ppp FiltersProcessParentPidAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(ppp.ref.Append("gte"))
}

func (ppp FiltersProcessParentPidAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(ppp.ref.Append("lte"))
}

type FiltersProcessPathAttributes struct {
	ref terra.Reference
}

func (pp FiltersProcessPathAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp FiltersProcessPathAttributes) InternalWithRef(ref terra.Reference) FiltersProcessPathAttributes {
	return FiltersProcessPathAttributes{ref: ref}
}

func (pp FiltersProcessPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp FiltersProcessPathAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("comparison"))
}

func (pp FiltersProcessPathAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("value"))
}

type FiltersProcessPidAttributes struct {
	ref terra.Reference
}

func (pp FiltersProcessPidAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp FiltersProcessPidAttributes) InternalWithRef(ref terra.Reference) FiltersProcessPidAttributes {
	return FiltersProcessPidAttributes{ref: ref}
}

func (pp FiltersProcessPidAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp FiltersProcessPidAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("eq"))
}

func (pp FiltersProcessPidAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("gte"))
}

func (pp FiltersProcessPidAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("lte"))
}

type FiltersProcessTerminatedAtAttributes struct {
	ref terra.Reference
}

func (pta FiltersProcessTerminatedAtAttributes) InternalRef() (terra.Reference, error) {
	return pta.ref, nil
}

func (pta FiltersProcessTerminatedAtAttributes) InternalWithRef(ref terra.Reference) FiltersProcessTerminatedAtAttributes {
	return FiltersProcessTerminatedAtAttributes{ref: ref}
}

func (pta FiltersProcessTerminatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pta.ref.InternalTokens()
}

func (pta FiltersProcessTerminatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(pta.ref.Append("end"))
}

func (pta FiltersProcessTerminatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(pta.ref.Append("start"))
}

func (pta FiltersProcessTerminatedAtAttributes) DateRange() terra.ListValue[FiltersProcessTerminatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersProcessTerminatedAtDateRangeAttributes](pta.ref.Append("date_range"))
}

type FiltersProcessTerminatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersProcessTerminatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersProcessTerminatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersProcessTerminatedAtDateRangeAttributes {
	return FiltersProcessTerminatedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersProcessTerminatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersProcessTerminatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersProcessTerminatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersProductArnAttributes struct {
	ref terra.Reference
}

func (pa FiltersProductArnAttributes) InternalRef() (terra.Reference, error) {
	return pa.ref, nil
}

func (pa FiltersProductArnAttributes) InternalWithRef(ref terra.Reference) FiltersProductArnAttributes {
	return FiltersProductArnAttributes{ref: ref}
}

func (pa FiltersProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pa.ref.InternalTokens()
}

func (pa FiltersProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("comparison"))
}

func (pa FiltersProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("value"))
}

type FiltersProductFieldsAttributes struct {
	ref terra.Reference
}

func (pf FiltersProductFieldsAttributes) InternalRef() (terra.Reference, error) {
	return pf.ref, nil
}

func (pf FiltersProductFieldsAttributes) InternalWithRef(ref terra.Reference) FiltersProductFieldsAttributes {
	return FiltersProductFieldsAttributes{ref: ref}
}

func (pf FiltersProductFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pf.ref.InternalTokens()
}

func (pf FiltersProductFieldsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("comparison"))
}

func (pf FiltersProductFieldsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("key"))
}

func (pf FiltersProductFieldsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("value"))
}

type FiltersProductNameAttributes struct {
	ref terra.Reference
}

func (pn FiltersProductNameAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn FiltersProductNameAttributes) InternalWithRef(ref terra.Reference) FiltersProductNameAttributes {
	return FiltersProductNameAttributes{ref: ref}
}

func (pn FiltersProductNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pn.ref.InternalTokens()
}

func (pn FiltersProductNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("comparison"))
}

func (pn FiltersProductNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("value"))
}

type FiltersRecommendationTextAttributes struct {
	ref terra.Reference
}

func (rt FiltersRecommendationTextAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt FiltersRecommendationTextAttributes) InternalWithRef(ref terra.Reference) FiltersRecommendationTextAttributes {
	return FiltersRecommendationTextAttributes{ref: ref}
}

func (rt FiltersRecommendationTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt FiltersRecommendationTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt FiltersRecommendationTextAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type FiltersRecordStateAttributes struct {
	ref terra.Reference
}

func (rs FiltersRecordStateAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs FiltersRecordStateAttributes) InternalWithRef(ref terra.Reference) FiltersRecordStateAttributes {
	return FiltersRecordStateAttributes{ref: ref}
}

func (rs FiltersRecordStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs FiltersRecordStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("comparison"))
}

func (rs FiltersRecordStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("value"))
}

type FiltersRelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (rfi FiltersRelatedFindingsIdAttributes) InternalRef() (terra.Reference, error) {
	return rfi.ref, nil
}

func (rfi FiltersRelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) FiltersRelatedFindingsIdAttributes {
	return FiltersRelatedFindingsIdAttributes{ref: ref}
}

func (rfi FiltersRelatedFindingsIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rfi.ref.InternalTokens()
}

func (rfi FiltersRelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rfi.ref.Append("comparison"))
}

func (rfi FiltersRelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rfi.ref.Append("value"))
}

type FiltersRelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (rfpa FiltersRelatedFindingsProductArnAttributes) InternalRef() (terra.Reference, error) {
	return rfpa.ref, nil
}

func (rfpa FiltersRelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) FiltersRelatedFindingsProductArnAttributes {
	return FiltersRelatedFindingsProductArnAttributes{ref: ref}
}

func (rfpa FiltersRelatedFindingsProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rfpa.ref.InternalTokens()
}

func (rfpa FiltersRelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rfpa.ref.Append("comparison"))
}

func (rfpa FiltersRelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rfpa.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes struct {
	ref terra.Reference
}

func (raeiiipa FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalRef() (terra.Reference, error) {
	return raeiiipa.ref, nil
}

func (raeiiipa FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes {
	return FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes{ref: ref}
}

func (raeiiipa FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiiipa.ref.InternalTokens()
}

func (raeiiipa FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeiiipa.ref.Append("comparison"))
}

func (raeiiipa FiltersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeiiipa.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceImageIdAttributes struct {
	ref terra.Reference
}

func (raeiii FiltersResourceAwsEc2InstanceImageIdAttributes) InternalRef() (terra.Reference, error) {
	return raeiii.ref, nil
}

func (raeiii FiltersResourceAwsEc2InstanceImageIdAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceImageIdAttributes {
	return FiltersResourceAwsEc2InstanceImageIdAttributes{ref: ref}
}

func (raeiii FiltersResourceAwsEc2InstanceImageIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiii.ref.InternalTokens()
}

func (raeiii FiltersResourceAwsEc2InstanceImageIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeiii.ref.Append("comparison"))
}

func (raeiii FiltersResourceAwsEc2InstanceImageIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeiii.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceIpv4AddressesAttributes struct {
	ref terra.Reference
}

func (raeiia FiltersResourceAwsEc2InstanceIpv4AddressesAttributes) InternalRef() (terra.Reference, error) {
	return raeiia.ref, nil
}

func (raeiia FiltersResourceAwsEc2InstanceIpv4AddressesAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceIpv4AddressesAttributes {
	return FiltersResourceAwsEc2InstanceIpv4AddressesAttributes{ref: ref}
}

func (raeiia FiltersResourceAwsEc2InstanceIpv4AddressesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiia.ref.InternalTokens()
}

func (raeiia FiltersResourceAwsEc2InstanceIpv4AddressesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(raeiia.ref.Append("cidr"))
}

type FiltersResourceAwsEc2InstanceIpv6AddressesAttributes struct {
	ref terra.Reference
}

func (raeiia FiltersResourceAwsEc2InstanceIpv6AddressesAttributes) InternalRef() (terra.Reference, error) {
	return raeiia.ref, nil
}

func (raeiia FiltersResourceAwsEc2InstanceIpv6AddressesAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceIpv6AddressesAttributes {
	return FiltersResourceAwsEc2InstanceIpv6AddressesAttributes{ref: ref}
}

func (raeiia FiltersResourceAwsEc2InstanceIpv6AddressesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiia.ref.InternalTokens()
}

func (raeiia FiltersResourceAwsEc2InstanceIpv6AddressesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(raeiia.ref.Append("cidr"))
}

type FiltersResourceAwsEc2InstanceKeyNameAttributes struct {
	ref terra.Reference
}

func (raeikn FiltersResourceAwsEc2InstanceKeyNameAttributes) InternalRef() (terra.Reference, error) {
	return raeikn.ref, nil
}

func (raeikn FiltersResourceAwsEc2InstanceKeyNameAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceKeyNameAttributes {
	return FiltersResourceAwsEc2InstanceKeyNameAttributes{ref: ref}
}

func (raeikn FiltersResourceAwsEc2InstanceKeyNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeikn.ref.InternalTokens()
}

func (raeikn FiltersResourceAwsEc2InstanceKeyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeikn.ref.Append("comparison"))
}

func (raeikn FiltersResourceAwsEc2InstanceKeyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeikn.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceLaunchedAtAttributes struct {
	ref terra.Reference
}

func (raeila FiltersResourceAwsEc2InstanceLaunchedAtAttributes) InternalRef() (terra.Reference, error) {
	return raeila.ref, nil
}

func (raeila FiltersResourceAwsEc2InstanceLaunchedAtAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceLaunchedAtAttributes {
	return FiltersResourceAwsEc2InstanceLaunchedAtAttributes{ref: ref}
}

func (raeila FiltersResourceAwsEc2InstanceLaunchedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeila.ref.InternalTokens()
}

func (raeila FiltersResourceAwsEc2InstanceLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(raeila.ref.Append("end"))
}

func (raeila FiltersResourceAwsEc2InstanceLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(raeila.ref.Append("start"))
}

func (raeila FiltersResourceAwsEc2InstanceLaunchedAtAttributes) DateRange() terra.ListValue[FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes](raeila.ref.Append("date_range"))
}

type FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes {
	return FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceSubnetIdAttributes struct {
	ref terra.Reference
}

func (raeisi FiltersResourceAwsEc2InstanceSubnetIdAttributes) InternalRef() (terra.Reference, error) {
	return raeisi.ref, nil
}

func (raeisi FiltersResourceAwsEc2InstanceSubnetIdAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceSubnetIdAttributes {
	return FiltersResourceAwsEc2InstanceSubnetIdAttributes{ref: ref}
}

func (raeisi FiltersResourceAwsEc2InstanceSubnetIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeisi.ref.InternalTokens()
}

func (raeisi FiltersResourceAwsEc2InstanceSubnetIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeisi.ref.Append("comparison"))
}

func (raeisi FiltersResourceAwsEc2InstanceSubnetIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeisi.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceTypeAttributes struct {
	ref terra.Reference
}

func (raeit FiltersResourceAwsEc2InstanceTypeAttributes) InternalRef() (terra.Reference, error) {
	return raeit.ref, nil
}

func (raeit FiltersResourceAwsEc2InstanceTypeAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceTypeAttributes {
	return FiltersResourceAwsEc2InstanceTypeAttributes{ref: ref}
}

func (raeit FiltersResourceAwsEc2InstanceTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeit.ref.InternalTokens()
}

func (raeit FiltersResourceAwsEc2InstanceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeit.ref.Append("comparison"))
}

func (raeit FiltersResourceAwsEc2InstanceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeit.ref.Append("value"))
}

type FiltersResourceAwsEc2InstanceVpcIdAttributes struct {
	ref terra.Reference
}

func (raeivi FiltersResourceAwsEc2InstanceVpcIdAttributes) InternalRef() (terra.Reference, error) {
	return raeivi.ref, nil
}

func (raeivi FiltersResourceAwsEc2InstanceVpcIdAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsEc2InstanceVpcIdAttributes {
	return FiltersResourceAwsEc2InstanceVpcIdAttributes{ref: ref}
}

func (raeivi FiltersResourceAwsEc2InstanceVpcIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeivi.ref.InternalTokens()
}

func (raeivi FiltersResourceAwsEc2InstanceVpcIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeivi.ref.Append("comparison"))
}

func (raeivi FiltersResourceAwsEc2InstanceVpcIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeivi.ref.Append("value"))
}

type FiltersResourceAwsIamAccessKeyCreatedAtAttributes struct {
	ref terra.Reference
}

func (raiakca FiltersResourceAwsIamAccessKeyCreatedAtAttributes) InternalRef() (terra.Reference, error) {
	return raiakca.ref, nil
}

func (raiakca FiltersResourceAwsIamAccessKeyCreatedAtAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsIamAccessKeyCreatedAtAttributes {
	return FiltersResourceAwsIamAccessKeyCreatedAtAttributes{ref: ref}
}

func (raiakca FiltersResourceAwsIamAccessKeyCreatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raiakca.ref.InternalTokens()
}

func (raiakca FiltersResourceAwsIamAccessKeyCreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(raiakca.ref.Append("end"))
}

func (raiakca FiltersResourceAwsIamAccessKeyCreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(raiakca.ref.Append("start"))
}

func (raiakca FiltersResourceAwsIamAccessKeyCreatedAtAttributes) DateRange() terra.ListValue[FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes](raiakca.ref.Append("date_range"))
}

type FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes {
	return FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersResourceAwsIamAccessKeyStatusAttributes struct {
	ref terra.Reference
}

func (raiaks FiltersResourceAwsIamAccessKeyStatusAttributes) InternalRef() (terra.Reference, error) {
	return raiaks.ref, nil
}

func (raiaks FiltersResourceAwsIamAccessKeyStatusAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsIamAccessKeyStatusAttributes {
	return FiltersResourceAwsIamAccessKeyStatusAttributes{ref: ref}
}

func (raiaks FiltersResourceAwsIamAccessKeyStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raiaks.ref.InternalTokens()
}

func (raiaks FiltersResourceAwsIamAccessKeyStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raiaks.ref.Append("comparison"))
}

func (raiaks FiltersResourceAwsIamAccessKeyStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raiaks.ref.Append("value"))
}

type FiltersResourceAwsIamAccessKeyUserNameAttributes struct {
	ref terra.Reference
}

func (raiakun FiltersResourceAwsIamAccessKeyUserNameAttributes) InternalRef() (terra.Reference, error) {
	return raiakun.ref, nil
}

func (raiakun FiltersResourceAwsIamAccessKeyUserNameAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsIamAccessKeyUserNameAttributes {
	return FiltersResourceAwsIamAccessKeyUserNameAttributes{ref: ref}
}

func (raiakun FiltersResourceAwsIamAccessKeyUserNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raiakun.ref.InternalTokens()
}

func (raiakun FiltersResourceAwsIamAccessKeyUserNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raiakun.ref.Append("comparison"))
}

func (raiakun FiltersResourceAwsIamAccessKeyUserNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raiakun.ref.Append("value"))
}

type FiltersResourceAwsS3BucketOwnerIdAttributes struct {
	ref terra.Reference
}

func (rasboi FiltersResourceAwsS3BucketOwnerIdAttributes) InternalRef() (terra.Reference, error) {
	return rasboi.ref, nil
}

func (rasboi FiltersResourceAwsS3BucketOwnerIdAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsS3BucketOwnerIdAttributes {
	return FiltersResourceAwsS3BucketOwnerIdAttributes{ref: ref}
}

func (rasboi FiltersResourceAwsS3BucketOwnerIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rasboi.ref.InternalTokens()
}

func (rasboi FiltersResourceAwsS3BucketOwnerIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rasboi.ref.Append("comparison"))
}

func (rasboi FiltersResourceAwsS3BucketOwnerIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rasboi.ref.Append("value"))
}

type FiltersResourceAwsS3BucketOwnerNameAttributes struct {
	ref terra.Reference
}

func (rasbon FiltersResourceAwsS3BucketOwnerNameAttributes) InternalRef() (terra.Reference, error) {
	return rasbon.ref, nil
}

func (rasbon FiltersResourceAwsS3BucketOwnerNameAttributes) InternalWithRef(ref terra.Reference) FiltersResourceAwsS3BucketOwnerNameAttributes {
	return FiltersResourceAwsS3BucketOwnerNameAttributes{ref: ref}
}

func (rasbon FiltersResourceAwsS3BucketOwnerNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rasbon.ref.InternalTokens()
}

func (rasbon FiltersResourceAwsS3BucketOwnerNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rasbon.ref.Append("comparison"))
}

func (rasbon FiltersResourceAwsS3BucketOwnerNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rasbon.ref.Append("value"))
}

type FiltersResourceContainerImageIdAttributes struct {
	ref terra.Reference
}

func (rcii FiltersResourceContainerImageIdAttributes) InternalRef() (terra.Reference, error) {
	return rcii.ref, nil
}

func (rcii FiltersResourceContainerImageIdAttributes) InternalWithRef(ref terra.Reference) FiltersResourceContainerImageIdAttributes {
	return FiltersResourceContainerImageIdAttributes{ref: ref}
}

func (rcii FiltersResourceContainerImageIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcii.ref.InternalTokens()
}

func (rcii FiltersResourceContainerImageIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rcii.ref.Append("comparison"))
}

func (rcii FiltersResourceContainerImageIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rcii.ref.Append("value"))
}

type FiltersResourceContainerImageNameAttributes struct {
	ref terra.Reference
}

func (rcin FiltersResourceContainerImageNameAttributes) InternalRef() (terra.Reference, error) {
	return rcin.ref, nil
}

func (rcin FiltersResourceContainerImageNameAttributes) InternalWithRef(ref terra.Reference) FiltersResourceContainerImageNameAttributes {
	return FiltersResourceContainerImageNameAttributes{ref: ref}
}

func (rcin FiltersResourceContainerImageNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcin.ref.InternalTokens()
}

func (rcin FiltersResourceContainerImageNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rcin.ref.Append("comparison"))
}

func (rcin FiltersResourceContainerImageNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rcin.ref.Append("value"))
}

type FiltersResourceContainerLaunchedAtAttributes struct {
	ref terra.Reference
}

func (rcla FiltersResourceContainerLaunchedAtAttributes) InternalRef() (terra.Reference, error) {
	return rcla.ref, nil
}

func (rcla FiltersResourceContainerLaunchedAtAttributes) InternalWithRef(ref terra.Reference) FiltersResourceContainerLaunchedAtAttributes {
	return FiltersResourceContainerLaunchedAtAttributes{ref: ref}
}

func (rcla FiltersResourceContainerLaunchedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcla.ref.InternalTokens()
}

func (rcla FiltersResourceContainerLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(rcla.ref.Append("end"))
}

func (rcla FiltersResourceContainerLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(rcla.ref.Append("start"))
}

func (rcla FiltersResourceContainerLaunchedAtAttributes) DateRange() terra.ListValue[FiltersResourceContainerLaunchedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersResourceContainerLaunchedAtDateRangeAttributes](rcla.ref.Append("date_range"))
}

type FiltersResourceContainerLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersResourceContainerLaunchedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersResourceContainerLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersResourceContainerLaunchedAtDateRangeAttributes {
	return FiltersResourceContainerLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersResourceContainerLaunchedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersResourceContainerLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersResourceContainerLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersResourceContainerNameAttributes struct {
	ref terra.Reference
}

func (rcn FiltersResourceContainerNameAttributes) InternalRef() (terra.Reference, error) {
	return rcn.ref, nil
}

func (rcn FiltersResourceContainerNameAttributes) InternalWithRef(ref terra.Reference) FiltersResourceContainerNameAttributes {
	return FiltersResourceContainerNameAttributes{ref: ref}
}

func (rcn FiltersResourceContainerNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcn.ref.InternalTokens()
}

func (rcn FiltersResourceContainerNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rcn.ref.Append("comparison"))
}

func (rcn FiltersResourceContainerNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rcn.ref.Append("value"))
}

type FiltersResourceDetailsOtherAttributes struct {
	ref terra.Reference
}

func (rdo FiltersResourceDetailsOtherAttributes) InternalRef() (terra.Reference, error) {
	return rdo.ref, nil
}

func (rdo FiltersResourceDetailsOtherAttributes) InternalWithRef(ref terra.Reference) FiltersResourceDetailsOtherAttributes {
	return FiltersResourceDetailsOtherAttributes{ref: ref}
}

func (rdo FiltersResourceDetailsOtherAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rdo.ref.InternalTokens()
}

func (rdo FiltersResourceDetailsOtherAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("comparison"))
}

func (rdo FiltersResourceDetailsOtherAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("key"))
}

func (rdo FiltersResourceDetailsOtherAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("value"))
}

type FiltersResourceIdAttributes struct {
	ref terra.Reference
}

func (ri FiltersResourceIdAttributes) InternalRef() (terra.Reference, error) {
	return ri.ref, nil
}

func (ri FiltersResourceIdAttributes) InternalWithRef(ref terra.Reference) FiltersResourceIdAttributes {
	return FiltersResourceIdAttributes{ref: ref}
}

func (ri FiltersResourceIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ri.ref.InternalTokens()
}

func (ri FiltersResourceIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ri.ref.Append("comparison"))
}

func (ri FiltersResourceIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ri.ref.Append("value"))
}

type FiltersResourcePartitionAttributes struct {
	ref terra.Reference
}

func (rp FiltersResourcePartitionAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp FiltersResourcePartitionAttributes) InternalWithRef(ref terra.Reference) FiltersResourcePartitionAttributes {
	return FiltersResourcePartitionAttributes{ref: ref}
}

func (rp FiltersResourcePartitionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp FiltersResourcePartitionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("comparison"))
}

func (rp FiltersResourcePartitionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("value"))
}

type FiltersResourceRegionAttributes struct {
	ref terra.Reference
}

func (rr FiltersResourceRegionAttributes) InternalRef() (terra.Reference, error) {
	return rr.ref, nil
}

func (rr FiltersResourceRegionAttributes) InternalWithRef(ref terra.Reference) FiltersResourceRegionAttributes {
	return FiltersResourceRegionAttributes{ref: ref}
}

func (rr FiltersResourceRegionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rr.ref.InternalTokens()
}

func (rr FiltersResourceRegionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("comparison"))
}

func (rr FiltersResourceRegionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("value"))
}

type FiltersResourceTagsAttributes struct {
	ref terra.Reference
}

func (rt FiltersResourceTagsAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt FiltersResourceTagsAttributes) InternalWithRef(ref terra.Reference) FiltersResourceTagsAttributes {
	return FiltersResourceTagsAttributes{ref: ref}
}

func (rt FiltersResourceTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt FiltersResourceTagsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt FiltersResourceTagsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("key"))
}

func (rt FiltersResourceTagsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type FiltersResourceTypeAttributes struct {
	ref terra.Reference
}

func (rt FiltersResourceTypeAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt FiltersResourceTypeAttributes) InternalWithRef(ref terra.Reference) FiltersResourceTypeAttributes {
	return FiltersResourceTypeAttributes{ref: ref}
}

func (rt FiltersResourceTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt FiltersResourceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt FiltersResourceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type FiltersSeverityLabelAttributes struct {
	ref terra.Reference
}

func (sl FiltersSeverityLabelAttributes) InternalRef() (terra.Reference, error) {
	return sl.ref, nil
}

func (sl FiltersSeverityLabelAttributes) InternalWithRef(ref terra.Reference) FiltersSeverityLabelAttributes {
	return FiltersSeverityLabelAttributes{ref: ref}
}

func (sl FiltersSeverityLabelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sl.ref.InternalTokens()
}

func (sl FiltersSeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("comparison"))
}

func (sl FiltersSeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("value"))
}

type FiltersSourceUrlAttributes struct {
	ref terra.Reference
}

func (su FiltersSourceUrlAttributes) InternalRef() (terra.Reference, error) {
	return su.ref, nil
}

func (su FiltersSourceUrlAttributes) InternalWithRef(ref terra.Reference) FiltersSourceUrlAttributes {
	return FiltersSourceUrlAttributes{ref: ref}
}

func (su FiltersSourceUrlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return su.ref.InternalTokens()
}

func (su FiltersSourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(su.ref.Append("comparison"))
}

func (su FiltersSourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(su.ref.Append("value"))
}

type FiltersThreatIntelIndicatorCategoryAttributes struct {
	ref terra.Reference
}

func (tiic FiltersThreatIntelIndicatorCategoryAttributes) InternalRef() (terra.Reference, error) {
	return tiic.ref, nil
}

func (tiic FiltersThreatIntelIndicatorCategoryAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorCategoryAttributes {
	return FiltersThreatIntelIndicatorCategoryAttributes{ref: ref}
}

func (tiic FiltersThreatIntelIndicatorCategoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiic.ref.InternalTokens()
}

func (tiic FiltersThreatIntelIndicatorCategoryAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiic.ref.Append("comparison"))
}

func (tiic FiltersThreatIntelIndicatorCategoryAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiic.ref.Append("value"))
}

type FiltersThreatIntelIndicatorLastObservedAtAttributes struct {
	ref terra.Reference
}

func (tiiloa FiltersThreatIntelIndicatorLastObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return tiiloa.ref, nil
}

func (tiiloa FiltersThreatIntelIndicatorLastObservedAtAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorLastObservedAtAttributes {
	return FiltersThreatIntelIndicatorLastObservedAtAttributes{ref: ref}
}

func (tiiloa FiltersThreatIntelIndicatorLastObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiiloa.ref.InternalTokens()
}

func (tiiloa FiltersThreatIntelIndicatorLastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(tiiloa.ref.Append("end"))
}

func (tiiloa FiltersThreatIntelIndicatorLastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(tiiloa.ref.Append("start"))
}

func (tiiloa FiltersThreatIntelIndicatorLastObservedAtAttributes) DateRange() terra.ListValue[FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes](tiiloa.ref.Append("date_range"))
}

type FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes {
	return FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersThreatIntelIndicatorLastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersThreatIntelIndicatorSourceAttributes struct {
	ref terra.Reference
}

func (tiis FiltersThreatIntelIndicatorSourceAttributes) InternalRef() (terra.Reference, error) {
	return tiis.ref, nil
}

func (tiis FiltersThreatIntelIndicatorSourceAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorSourceAttributes {
	return FiltersThreatIntelIndicatorSourceAttributes{ref: ref}
}

func (tiis FiltersThreatIntelIndicatorSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiis.ref.InternalTokens()
}

func (tiis FiltersThreatIntelIndicatorSourceAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiis.ref.Append("comparison"))
}

func (tiis FiltersThreatIntelIndicatorSourceAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiis.ref.Append("value"))
}

type FiltersThreatIntelIndicatorSourceUrlAttributes struct {
	ref terra.Reference
}

func (tiisu FiltersThreatIntelIndicatorSourceUrlAttributes) InternalRef() (terra.Reference, error) {
	return tiisu.ref, nil
}

func (tiisu FiltersThreatIntelIndicatorSourceUrlAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorSourceUrlAttributes {
	return FiltersThreatIntelIndicatorSourceUrlAttributes{ref: ref}
}

func (tiisu FiltersThreatIntelIndicatorSourceUrlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiisu.ref.InternalTokens()
}

func (tiisu FiltersThreatIntelIndicatorSourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiisu.ref.Append("comparison"))
}

func (tiisu FiltersThreatIntelIndicatorSourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiisu.ref.Append("value"))
}

type FiltersThreatIntelIndicatorTypeAttributes struct {
	ref terra.Reference
}

func (tiit FiltersThreatIntelIndicatorTypeAttributes) InternalRef() (terra.Reference, error) {
	return tiit.ref, nil
}

func (tiit FiltersThreatIntelIndicatorTypeAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorTypeAttributes {
	return FiltersThreatIntelIndicatorTypeAttributes{ref: ref}
}

func (tiit FiltersThreatIntelIndicatorTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiit.ref.InternalTokens()
}

func (tiit FiltersThreatIntelIndicatorTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiit.ref.Append("comparison"))
}

func (tiit FiltersThreatIntelIndicatorTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiit.ref.Append("value"))
}

type FiltersThreatIntelIndicatorValueAttributes struct {
	ref terra.Reference
}

func (tiiv FiltersThreatIntelIndicatorValueAttributes) InternalRef() (terra.Reference, error) {
	return tiiv.ref, nil
}

func (tiiv FiltersThreatIntelIndicatorValueAttributes) InternalWithRef(ref terra.Reference) FiltersThreatIntelIndicatorValueAttributes {
	return FiltersThreatIntelIndicatorValueAttributes{ref: ref}
}

func (tiiv FiltersThreatIntelIndicatorValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiiv.ref.InternalTokens()
}

func (tiiv FiltersThreatIntelIndicatorValueAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiiv.ref.Append("comparison"))
}

func (tiiv FiltersThreatIntelIndicatorValueAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiiv.ref.Append("value"))
}

type FiltersTitleAttributes struct {
	ref terra.Reference
}

func (t FiltersTitleAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FiltersTitleAttributes) InternalWithRef(ref terra.Reference) FiltersTitleAttributes {
	return FiltersTitleAttributes{ref: ref}
}

func (t FiltersTitleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FiltersTitleAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("comparison"))
}

func (t FiltersTitleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type FiltersTypeAttributes struct {
	ref terra.Reference
}

func (t FiltersTypeAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FiltersTypeAttributes) InternalWithRef(ref terra.Reference) FiltersTypeAttributes {
	return FiltersTypeAttributes{ref: ref}
}

func (t FiltersTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FiltersTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("comparison"))
}

func (t FiltersTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type FiltersUpdatedAtAttributes struct {
	ref terra.Reference
}

func (ua FiltersUpdatedAtAttributes) InternalRef() (terra.Reference, error) {
	return ua.ref, nil
}

func (ua FiltersUpdatedAtAttributes) InternalWithRef(ref terra.Reference) FiltersUpdatedAtAttributes {
	return FiltersUpdatedAtAttributes{ref: ref}
}

func (ua FiltersUpdatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ua.ref.InternalTokens()
}

func (ua FiltersUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(ua.ref.Append("end"))
}

func (ua FiltersUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ua.ref.Append("start"))
}

func (ua FiltersUpdatedAtAttributes) DateRange() terra.ListValue[FiltersUpdatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[FiltersUpdatedAtDateRangeAttributes](ua.ref.Append("date_range"))
}

type FiltersUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FiltersUpdatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr FiltersUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FiltersUpdatedAtDateRangeAttributes {
	return FiltersUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr FiltersUpdatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr FiltersUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr FiltersUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type FiltersUserDefinedValuesAttributes struct {
	ref terra.Reference
}

func (udv FiltersUserDefinedValuesAttributes) InternalRef() (terra.Reference, error) {
	return udv.ref, nil
}

func (udv FiltersUserDefinedValuesAttributes) InternalWithRef(ref terra.Reference) FiltersUserDefinedValuesAttributes {
	return FiltersUserDefinedValuesAttributes{ref: ref}
}

func (udv FiltersUserDefinedValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return udv.ref.InternalTokens()
}

func (udv FiltersUserDefinedValuesAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(udv.ref.Append("comparison"))
}

func (udv FiltersUserDefinedValuesAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(udv.ref.Append("key"))
}

func (udv FiltersUserDefinedValuesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(udv.ref.Append("value"))
}

type FiltersVerificationStateAttributes struct {
	ref terra.Reference
}

func (vs FiltersVerificationStateAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs FiltersVerificationStateAttributes) InternalWithRef(ref terra.Reference) FiltersVerificationStateAttributes {
	return FiltersVerificationStateAttributes{ref: ref}
}

func (vs FiltersVerificationStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs FiltersVerificationStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("comparison"))
}

func (vs FiltersVerificationStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("value"))
}

type FiltersWorkflowStatusAttributes struct {
	ref terra.Reference
}

func (ws FiltersWorkflowStatusAttributes) InternalRef() (terra.Reference, error) {
	return ws.ref, nil
}

func (ws FiltersWorkflowStatusAttributes) InternalWithRef(ref terra.Reference) FiltersWorkflowStatusAttributes {
	return FiltersWorkflowStatusAttributes{ref: ref}
}

func (ws FiltersWorkflowStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ws.ref.InternalTokens()
}

func (ws FiltersWorkflowStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("comparison"))
}

func (ws FiltersWorkflowStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("value"))
}

type FiltersState struct {
	AwsAccountId                                   []FiltersAwsAccountIdState                                   `json:"aws_account_id"`
	CompanyName                                    []FiltersCompanyNameState                                    `json:"company_name"`
	ComplianceStatus                               []FiltersComplianceStatusState                               `json:"compliance_status"`
	Confidence                                     []FiltersConfidenceState                                     `json:"confidence"`
	CreatedAt                                      []FiltersCreatedAtState                                      `json:"created_at"`
	Criticality                                    []FiltersCriticalityState                                    `json:"criticality"`
	Description                                    []FiltersDescriptionState                                    `json:"description"`
	FindingProviderFieldsConfidence                []FiltersFindingProviderFieldsConfidenceState                `json:"finding_provider_fields_confidence"`
	FindingProviderFieldsCriticality               []FiltersFindingProviderFieldsCriticalityState               `json:"finding_provider_fields_criticality"`
	FindingProviderFieldsRelatedFindingsId         []FiltersFindingProviderFieldsRelatedFindingsIdState         `json:"finding_provider_fields_related_findings_id"`
	FindingProviderFieldsRelatedFindingsProductArn []FiltersFindingProviderFieldsRelatedFindingsProductArnState `json:"finding_provider_fields_related_findings_product_arn"`
	FindingProviderFieldsSeverityLabel             []FiltersFindingProviderFieldsSeverityLabelState             `json:"finding_provider_fields_severity_label"`
	FindingProviderFieldsSeverityOriginal          []FiltersFindingProviderFieldsSeverityOriginalState          `json:"finding_provider_fields_severity_original"`
	FindingProviderFieldsTypes                     []FiltersFindingProviderFieldsTypesState                     `json:"finding_provider_fields_types"`
	FirstObservedAt                                []FiltersFirstObservedAtState                                `json:"first_observed_at"`
	GeneratorId                                    []FiltersGeneratorIdState                                    `json:"generator_id"`
	Id                                             []FiltersIdState                                             `json:"id"`
	Keyword                                        []FiltersKeywordState                                        `json:"keyword"`
	LastObservedAt                                 []FiltersLastObservedAtState                                 `json:"last_observed_at"`
	MalwareName                                    []FiltersMalwareNameState                                    `json:"malware_name"`
	MalwarePath                                    []FiltersMalwarePathState                                    `json:"malware_path"`
	MalwareState                                   []FiltersMalwareStateState                                   `json:"malware_state"`
	MalwareType                                    []FiltersMalwareTypeState                                    `json:"malware_type"`
	NetworkDestinationDomain                       []FiltersNetworkDestinationDomainState                       `json:"network_destination_domain"`
	NetworkDestinationIpv4                         []FiltersNetworkDestinationIpv4State                         `json:"network_destination_ipv4"`
	NetworkDestinationIpv6                         []FiltersNetworkDestinationIpv6State                         `json:"network_destination_ipv6"`
	NetworkDestinationPort                         []FiltersNetworkDestinationPortState                         `json:"network_destination_port"`
	NetworkDirection                               []FiltersNetworkDirectionState                               `json:"network_direction"`
	NetworkProtocol                                []FiltersNetworkProtocolState                                `json:"network_protocol"`
	NetworkSourceDomain                            []FiltersNetworkSourceDomainState                            `json:"network_source_domain"`
	NetworkSourceIpv4                              []FiltersNetworkSourceIpv4State                              `json:"network_source_ipv4"`
	NetworkSourceIpv6                              []FiltersNetworkSourceIpv6State                              `json:"network_source_ipv6"`
	NetworkSourceMac                               []FiltersNetworkSourceMacState                               `json:"network_source_mac"`
	NetworkSourcePort                              []FiltersNetworkSourcePortState                              `json:"network_source_port"`
	NoteText                                       []FiltersNoteTextState                                       `json:"note_text"`
	NoteUpdatedAt                                  []FiltersNoteUpdatedAtState                                  `json:"note_updated_at"`
	NoteUpdatedBy                                  []FiltersNoteUpdatedByState                                  `json:"note_updated_by"`
	ProcessLaunchedAt                              []FiltersProcessLaunchedAtState                              `json:"process_launched_at"`
	ProcessName                                    []FiltersProcessNameState                                    `json:"process_name"`
	ProcessParentPid                               []FiltersProcessParentPidState                               `json:"process_parent_pid"`
	ProcessPath                                    []FiltersProcessPathState                                    `json:"process_path"`
	ProcessPid                                     []FiltersProcessPidState                                     `json:"process_pid"`
	ProcessTerminatedAt                            []FiltersProcessTerminatedAtState                            `json:"process_terminated_at"`
	ProductArn                                     []FiltersProductArnState                                     `json:"product_arn"`
	ProductFields                                  []FiltersProductFieldsState                                  `json:"product_fields"`
	ProductName                                    []FiltersProductNameState                                    `json:"product_name"`
	RecommendationText                             []FiltersRecommendationTextState                             `json:"recommendation_text"`
	RecordState                                    []FiltersRecordStateState                                    `json:"record_state"`
	RelatedFindingsId                              []FiltersRelatedFindingsIdState                              `json:"related_findings_id"`
	RelatedFindingsProductArn                      []FiltersRelatedFindingsProductArnState                      `json:"related_findings_product_arn"`
	ResourceAwsEc2InstanceIamInstanceProfileArn    []FiltersResourceAwsEc2InstanceIamInstanceProfileArnState    `json:"resource_aws_ec2_instance_iam_instance_profile_arn"`
	ResourceAwsEc2InstanceImageId                  []FiltersResourceAwsEc2InstanceImageIdState                  `json:"resource_aws_ec2_instance_image_id"`
	ResourceAwsEc2InstanceIpv4Addresses            []FiltersResourceAwsEc2InstanceIpv4AddressesState            `json:"resource_aws_ec2_instance_ipv4_addresses"`
	ResourceAwsEc2InstanceIpv6Addresses            []FiltersResourceAwsEc2InstanceIpv6AddressesState            `json:"resource_aws_ec2_instance_ipv6_addresses"`
	ResourceAwsEc2InstanceKeyName                  []FiltersResourceAwsEc2InstanceKeyNameState                  `json:"resource_aws_ec2_instance_key_name"`
	ResourceAwsEc2InstanceLaunchedAt               []FiltersResourceAwsEc2InstanceLaunchedAtState               `json:"resource_aws_ec2_instance_launched_at"`
	ResourceAwsEc2InstanceSubnetId                 []FiltersResourceAwsEc2InstanceSubnetIdState                 `json:"resource_aws_ec2_instance_subnet_id"`
	ResourceAwsEc2InstanceType                     []FiltersResourceAwsEc2InstanceTypeState                     `json:"resource_aws_ec2_instance_type"`
	ResourceAwsEc2InstanceVpcId                    []FiltersResourceAwsEc2InstanceVpcIdState                    `json:"resource_aws_ec2_instance_vpc_id"`
	ResourceAwsIamAccessKeyCreatedAt               []FiltersResourceAwsIamAccessKeyCreatedAtState               `json:"resource_aws_iam_access_key_created_at"`
	ResourceAwsIamAccessKeyStatus                  []FiltersResourceAwsIamAccessKeyStatusState                  `json:"resource_aws_iam_access_key_status"`
	ResourceAwsIamAccessKeyUserName                []FiltersResourceAwsIamAccessKeyUserNameState                `json:"resource_aws_iam_access_key_user_name"`
	ResourceAwsS3BucketOwnerId                     []FiltersResourceAwsS3BucketOwnerIdState                     `json:"resource_aws_s3_bucket_owner_id"`
	ResourceAwsS3BucketOwnerName                   []FiltersResourceAwsS3BucketOwnerNameState                   `json:"resource_aws_s3_bucket_owner_name"`
	ResourceContainerImageId                       []FiltersResourceContainerImageIdState                       `json:"resource_container_image_id"`
	ResourceContainerImageName                     []FiltersResourceContainerImageNameState                     `json:"resource_container_image_name"`
	ResourceContainerLaunchedAt                    []FiltersResourceContainerLaunchedAtState                    `json:"resource_container_launched_at"`
	ResourceContainerName                          []FiltersResourceContainerNameState                          `json:"resource_container_name"`
	ResourceDetailsOther                           []FiltersResourceDetailsOtherState                           `json:"resource_details_other"`
	ResourceId                                     []FiltersResourceIdState                                     `json:"resource_id"`
	ResourcePartition                              []FiltersResourcePartitionState                              `json:"resource_partition"`
	ResourceRegion                                 []FiltersResourceRegionState                                 `json:"resource_region"`
	ResourceTags                                   []FiltersResourceTagsState                                   `json:"resource_tags"`
	ResourceType                                   []FiltersResourceTypeState                                   `json:"resource_type"`
	SeverityLabel                                  []FiltersSeverityLabelState                                  `json:"severity_label"`
	SourceUrl                                      []FiltersSourceUrlState                                      `json:"source_url"`
	ThreatIntelIndicatorCategory                   []FiltersThreatIntelIndicatorCategoryState                   `json:"threat_intel_indicator_category"`
	ThreatIntelIndicatorLastObservedAt             []FiltersThreatIntelIndicatorLastObservedAtState             `json:"threat_intel_indicator_last_observed_at"`
	ThreatIntelIndicatorSource                     []FiltersThreatIntelIndicatorSourceState                     `json:"threat_intel_indicator_source"`
	ThreatIntelIndicatorSourceUrl                  []FiltersThreatIntelIndicatorSourceUrlState                  `json:"threat_intel_indicator_source_url"`
	ThreatIntelIndicatorType                       []FiltersThreatIntelIndicatorTypeState                       `json:"threat_intel_indicator_type"`
	ThreatIntelIndicatorValue                      []FiltersThreatIntelIndicatorValueState                      `json:"threat_intel_indicator_value"`
	Title                                          []FiltersTitleState                                          `json:"title"`
	Type                                           []FiltersTypeState                                           `json:"type"`
	UpdatedAt                                      []FiltersUpdatedAtState                                      `json:"updated_at"`
	UserDefinedValues                              []FiltersUserDefinedValuesState                              `json:"user_defined_values"`
	VerificationState                              []FiltersVerificationStateState                              `json:"verification_state"`
	WorkflowStatus                                 []FiltersWorkflowStatusState                                 `json:"workflow_status"`
}

type FiltersAwsAccountIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersCompanyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersComplianceStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersConfidenceState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersCreatedAtState struct {
	End       string                           `json:"end"`
	Start     string                           `json:"start"`
	DateRange []FiltersCreatedAtDateRangeState `json:"date_range"`
}

type FiltersCreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersCriticalityState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersDescriptionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsConfidenceState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersFindingProviderFieldsCriticalityState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersFindingProviderFieldsRelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsRelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsSeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsSeverityOriginalState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsTypesState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFirstObservedAtState struct {
	End       string                                 `json:"end"`
	Start     string                                 `json:"start"`
	DateRange []FiltersFirstObservedAtDateRangeState `json:"date_range"`
}

type FiltersFirstObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersGeneratorIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersKeywordState struct {
	Value string `json:"value"`
}

type FiltersLastObservedAtState struct {
	End       string                                `json:"end"`
	Start     string                                `json:"start"`
	DateRange []FiltersLastObservedAtDateRangeState `json:"date_range"`
}

type FiltersLastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersMalwareNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersMalwarePathState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersMalwareStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersMalwareTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkDestinationDomainState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkDestinationIpv4State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkDestinationIpv6State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkDestinationPortState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersNetworkDirectionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkProtocolState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkSourceDomainState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkSourceIpv4State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkSourceIpv6State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkSourceMacState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkSourcePortState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersNoteTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNoteUpdatedAtState struct {
	End       string                               `json:"end"`
	Start     string                               `json:"start"`
	DateRange []FiltersNoteUpdatedAtDateRangeState `json:"date_range"`
}

type FiltersNoteUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersNoteUpdatedByState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProcessLaunchedAtState struct {
	End       string                                   `json:"end"`
	Start     string                                   `json:"start"`
	DateRange []FiltersProcessLaunchedAtDateRangeState `json:"date_range"`
}

type FiltersProcessLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersProcessNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProcessParentPidState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersProcessPathState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProcessPidState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersProcessTerminatedAtState struct {
	End       string                                     `json:"end"`
	Start     string                                     `json:"start"`
	DateRange []FiltersProcessTerminatedAtDateRangeState `json:"date_range"`
}

type FiltersProcessTerminatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProductFieldsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersProductNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRecommendationTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRecordStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceIamInstanceProfileArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceImageIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceIpv4AddressesState struct {
	Cidr string `json:"cidr"`
}

type FiltersResourceAwsEc2InstanceIpv6AddressesState struct {
	Cidr string `json:"cidr"`
}

type FiltersResourceAwsEc2InstanceKeyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceLaunchedAtState struct {
	End       string                                                  `json:"end"`
	Start     string                                                  `json:"start"`
	DateRange []FiltersResourceAwsEc2InstanceLaunchedAtDateRangeState `json:"date_range"`
}

type FiltersResourceAwsEc2InstanceLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersResourceAwsEc2InstanceSubnetIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceVpcIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsIamAccessKeyCreatedAtState struct {
	End       string                                                  `json:"end"`
	Start     string                                                  `json:"start"`
	DateRange []FiltersResourceAwsIamAccessKeyCreatedAtDateRangeState `json:"date_range"`
}

type FiltersResourceAwsIamAccessKeyCreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersResourceAwsIamAccessKeyStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsIamAccessKeyUserNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsS3BucketOwnerIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsS3BucketOwnerNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceContainerImageIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceContainerImageNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceContainerLaunchedAtState struct {
	End       string                                             `json:"end"`
	Start     string                                             `json:"start"`
	DateRange []FiltersResourceContainerLaunchedAtDateRangeState `json:"date_range"`
}

type FiltersResourceContainerLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersResourceContainerNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceDetailsOtherState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersResourceIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourcePartitionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceRegionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceTagsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersResourceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersSeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersSourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorCategoryState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorLastObservedAtState struct {
	End       string                                                    `json:"end"`
	Start     string                                                    `json:"start"`
	DateRange []FiltersThreatIntelIndicatorLastObservedAtDateRangeState `json:"date_range"`
}

type FiltersThreatIntelIndicatorLastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersThreatIntelIndicatorSourceState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorSourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorValueState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersTitleState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersUpdatedAtState struct {
	End       string                           `json:"end"`
	Start     string                           `json:"start"`
	DateRange []FiltersUpdatedAtDateRangeState `json:"date_range"`
}

type FiltersUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersUserDefinedValuesState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersVerificationStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersWorkflowStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}
