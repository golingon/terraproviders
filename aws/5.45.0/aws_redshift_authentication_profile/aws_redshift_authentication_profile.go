// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_redshift_authentication_profile

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_redshift_authentication_profile.
type Resource struct {
	Name      string
	Args      Args
	state     *awsRedshiftAuthenticationProfileState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arap *Resource) Type() string {
	return "aws_redshift_authentication_profile"
}

// LocalName returns the local name for [Resource].
func (arap *Resource) LocalName() string {
	return arap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arap *Resource) Configuration() interface{} {
	return arap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arap *Resource) Dependencies() terra.Dependencies {
	return arap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arap *Resource) LifecycleManagement() *terra.Lifecycle {
	return arap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arap *Resource) Attributes() awsRedshiftAuthenticationProfileAttributes {
	return awsRedshiftAuthenticationProfileAttributes{ref: terra.ReferenceResource(arap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arap *Resource) ImportState(state io.Reader) error {
	arap.state = &awsRedshiftAuthenticationProfileState{}
	if err := json.NewDecoder(state).Decode(arap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arap.Type(), arap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arap *Resource) State() (*awsRedshiftAuthenticationProfileState, bool) {
	return arap.state, arap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arap *Resource) StateMust() *awsRedshiftAuthenticationProfileState {
	if arap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arap.Type(), arap.LocalName()))
	}
	return arap.state
}

// Args contains the configurations for aws_redshift_authentication_profile.
type Args struct {
	// AuthenticationProfileContent: string, required
	AuthenticationProfileContent terra.StringValue `hcl:"authentication_profile_content,attr" validate:"required"`
	// AuthenticationProfileName: string, required
	AuthenticationProfileName terra.StringValue `hcl:"authentication_profile_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsRedshiftAuthenticationProfileAttributes struct {
	ref terra.Reference
}

// AuthenticationProfileContent returns a reference to field authentication_profile_content of aws_redshift_authentication_profile.
func (arap awsRedshiftAuthenticationProfileAttributes) AuthenticationProfileContent() terra.StringValue {
	return terra.ReferenceAsString(arap.ref.Append("authentication_profile_content"))
}

// AuthenticationProfileName returns a reference to field authentication_profile_name of aws_redshift_authentication_profile.
func (arap awsRedshiftAuthenticationProfileAttributes) AuthenticationProfileName() terra.StringValue {
	return terra.ReferenceAsString(arap.ref.Append("authentication_profile_name"))
}

// Id returns a reference to field id of aws_redshift_authentication_profile.
func (arap awsRedshiftAuthenticationProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arap.ref.Append("id"))
}

type awsRedshiftAuthenticationProfileState struct {
	AuthenticationProfileContent string `json:"authentication_profile_content"`
	AuthenticationProfileName    string `json:"authentication_profile_name"`
	Id                           string `json:"id"`
}
