// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_endpoint_service_allowed_principal

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_vpc_endpoint_service_allowed_principal.
type Resource struct {
	Name      string
	Args      Args
	state     *awsVpcEndpointServiceAllowedPrincipalState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avesap *Resource) Type() string {
	return "aws_vpc_endpoint_service_allowed_principal"
}

// LocalName returns the local name for [Resource].
func (avesap *Resource) LocalName() string {
	return avesap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avesap *Resource) Configuration() interface{} {
	return avesap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avesap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avesap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avesap *Resource) Dependencies() terra.Dependencies {
	return avesap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avesap *Resource) LifecycleManagement() *terra.Lifecycle {
	return avesap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avesap *Resource) Attributes() awsVpcEndpointServiceAllowedPrincipalAttributes {
	return awsVpcEndpointServiceAllowedPrincipalAttributes{ref: terra.ReferenceResource(avesap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avesap *Resource) ImportState(state io.Reader) error {
	avesap.state = &awsVpcEndpointServiceAllowedPrincipalState{}
	if err := json.NewDecoder(state).Decode(avesap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avesap.Type(), avesap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avesap *Resource) State() (*awsVpcEndpointServiceAllowedPrincipalState, bool) {
	return avesap.state, avesap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avesap *Resource) StateMust() *awsVpcEndpointServiceAllowedPrincipalState {
	if avesap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avesap.Type(), avesap.LocalName()))
	}
	return avesap.state
}

// Args contains the configurations for aws_vpc_endpoint_service_allowed_principal.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PrincipalArn: string, required
	PrincipalArn terra.StringValue `hcl:"principal_arn,attr" validate:"required"`
	// VpcEndpointServiceId: string, required
	VpcEndpointServiceId terra.StringValue `hcl:"vpc_endpoint_service_id,attr" validate:"required"`
}

type awsVpcEndpointServiceAllowedPrincipalAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_vpc_endpoint_service_allowed_principal.
func (avesap awsVpcEndpointServiceAllowedPrincipalAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avesap.ref.Append("id"))
}

// PrincipalArn returns a reference to field principal_arn of aws_vpc_endpoint_service_allowed_principal.
func (avesap awsVpcEndpointServiceAllowedPrincipalAttributes) PrincipalArn() terra.StringValue {
	return terra.ReferenceAsString(avesap.ref.Append("principal_arn"))
}

// VpcEndpointServiceId returns a reference to field vpc_endpoint_service_id of aws_vpc_endpoint_service_allowed_principal.
func (avesap awsVpcEndpointServiceAllowedPrincipalAttributes) VpcEndpointServiceId() terra.StringValue {
	return terra.ReferenceAsString(avesap.ref.Append("vpc_endpoint_service_id"))
}

type awsVpcEndpointServiceAllowedPrincipalState struct {
	Id                   string `json:"id"`
	PrincipalArn         string `json:"principal_arn"`
	VpcEndpointServiceId string `json:"vpc_endpoint_service_id"`
}
