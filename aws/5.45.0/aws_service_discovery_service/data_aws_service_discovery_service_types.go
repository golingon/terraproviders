// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_service_discovery_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataDnsConfigAttributes struct {
	ref terra.Reference
}

func (dc DataDnsConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DataDnsConfigAttributes) InternalWithRef(ref terra.Reference) DataDnsConfigAttributes {
	return DataDnsConfigAttributes{ref: ref}
}

func (dc DataDnsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DataDnsConfigAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("namespace_id"))
}

func (dc DataDnsConfigAttributes) RoutingPolicy() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("routing_policy"))
}

func (dc DataDnsConfigAttributes) DnsRecords() terra.ListValue[DataDnsConfigDnsRecordsAttributes] {
	return terra.ReferenceAsList[DataDnsConfigDnsRecordsAttributes](dc.ref.Append("dns_records"))
}

type DataDnsConfigDnsRecordsAttributes struct {
	ref terra.Reference
}

func (dr DataDnsConfigDnsRecordsAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr DataDnsConfigDnsRecordsAttributes) InternalWithRef(ref terra.Reference) DataDnsConfigDnsRecordsAttributes {
	return DataDnsConfigDnsRecordsAttributes{ref: ref}
}

func (dr DataDnsConfigDnsRecordsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr DataDnsConfigDnsRecordsAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("ttl"))
}

func (dr DataDnsConfigDnsRecordsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("type"))
}

type DataHealthCheckConfigAttributes struct {
	ref terra.Reference
}

func (hcc DataHealthCheckConfigAttributes) InternalRef() (terra.Reference, error) {
	return hcc.ref, nil
}

func (hcc DataHealthCheckConfigAttributes) InternalWithRef(ref terra.Reference) DataHealthCheckConfigAttributes {
	return DataHealthCheckConfigAttributes{ref: ref}
}

func (hcc DataHealthCheckConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hcc.ref.InternalTokens()
}

func (hcc DataHealthCheckConfigAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hcc.ref.Append("failure_threshold"))
}

func (hcc DataHealthCheckConfigAttributes) ResourcePath() terra.StringValue {
	return terra.ReferenceAsString(hcc.ref.Append("resource_path"))
}

func (hcc DataHealthCheckConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(hcc.ref.Append("type"))
}

type DataHealthCheckCustomConfigAttributes struct {
	ref terra.Reference
}

func (hccc DataHealthCheckCustomConfigAttributes) InternalRef() (terra.Reference, error) {
	return hccc.ref, nil
}

func (hccc DataHealthCheckCustomConfigAttributes) InternalWithRef(ref terra.Reference) DataHealthCheckCustomConfigAttributes {
	return DataHealthCheckCustomConfigAttributes{ref: ref}
}

func (hccc DataHealthCheckCustomConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hccc.ref.InternalTokens()
}

func (hccc DataHealthCheckCustomConfigAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hccc.ref.Append("failure_threshold"))
}

type DataDnsConfigState struct {
	NamespaceId   string                         `json:"namespace_id"`
	RoutingPolicy string                         `json:"routing_policy"`
	DnsRecords    []DataDnsConfigDnsRecordsState `json:"dns_records"`
}

type DataDnsConfigDnsRecordsState struct {
	Ttl  float64 `json:"ttl"`
	Type string  `json:"type"`
}

type DataHealthCheckConfigState struct {
	FailureThreshold float64 `json:"failure_threshold"`
	ResourcePath     string  `json:"resource_path"`
	Type             string  `json:"type"`
}

type DataHealthCheckCustomConfigState struct {
	FailureThreshold float64 `json:"failure_threshold"`
}
