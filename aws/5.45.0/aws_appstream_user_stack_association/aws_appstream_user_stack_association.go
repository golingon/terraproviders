// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appstream_user_stack_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appstream_user_stack_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppstreamUserStackAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aausa *Resource) Type() string {
	return "aws_appstream_user_stack_association"
}

// LocalName returns the local name for [Resource].
func (aausa *Resource) LocalName() string {
	return aausa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aausa *Resource) Configuration() interface{} {
	return aausa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aausa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aausa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aausa *Resource) Dependencies() terra.Dependencies {
	return aausa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aausa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aausa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aausa *Resource) Attributes() awsAppstreamUserStackAssociationAttributes {
	return awsAppstreamUserStackAssociationAttributes{ref: terra.ReferenceResource(aausa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aausa *Resource) ImportState(state io.Reader) error {
	aausa.state = &awsAppstreamUserStackAssociationState{}
	if err := json.NewDecoder(state).Decode(aausa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aausa.Type(), aausa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aausa *Resource) State() (*awsAppstreamUserStackAssociationState, bool) {
	return aausa.state, aausa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aausa *Resource) StateMust() *awsAppstreamUserStackAssociationState {
	if aausa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aausa.Type(), aausa.LocalName()))
	}
	return aausa.state
}

// Args contains the configurations for aws_appstream_user_stack_association.
type Args struct {
	// AuthenticationType: string, required
	AuthenticationType terra.StringValue `hcl:"authentication_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SendEmailNotification: bool, optional
	SendEmailNotification terra.BoolValue `hcl:"send_email_notification,attr"`
	// StackName: string, required
	StackName terra.StringValue `hcl:"stack_name,attr" validate:"required"`
	// UserName: string, required
	UserName terra.StringValue `hcl:"user_name,attr" validate:"required"`
}

type awsAppstreamUserStackAssociationAttributes struct {
	ref terra.Reference
}

// AuthenticationType returns a reference to field authentication_type of aws_appstream_user_stack_association.
func (aausa awsAppstreamUserStackAssociationAttributes) AuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(aausa.ref.Append("authentication_type"))
}

// Id returns a reference to field id of aws_appstream_user_stack_association.
func (aausa awsAppstreamUserStackAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aausa.ref.Append("id"))
}

// SendEmailNotification returns a reference to field send_email_notification of aws_appstream_user_stack_association.
func (aausa awsAppstreamUserStackAssociationAttributes) SendEmailNotification() terra.BoolValue {
	return terra.ReferenceAsBool(aausa.ref.Append("send_email_notification"))
}

// StackName returns a reference to field stack_name of aws_appstream_user_stack_association.
func (aausa awsAppstreamUserStackAssociationAttributes) StackName() terra.StringValue {
	return terra.ReferenceAsString(aausa.ref.Append("stack_name"))
}

// UserName returns a reference to field user_name of aws_appstream_user_stack_association.
func (aausa awsAppstreamUserStackAssociationAttributes) UserName() terra.StringValue {
	return terra.ReferenceAsString(aausa.ref.Append("user_name"))
}

type awsAppstreamUserStackAssociationState struct {
	AuthenticationType    string `json:"authentication_type"`
	Id                    string `json:"id"`
	SendEmailNotification bool   `json:"send_email_notification"`
	StackName             string `json:"stack_name"`
	UserName              string `json:"user_name"`
}
