// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_securityhub_standards_control

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_securityhub_standards_control.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSecurityhubStandardsControlState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (assc *Resource) Type() string {
	return "aws_securityhub_standards_control"
}

// LocalName returns the local name for [Resource].
func (assc *Resource) LocalName() string {
	return assc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (assc *Resource) Configuration() interface{} {
	return assc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (assc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(assc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (assc *Resource) Dependencies() terra.Dependencies {
	return assc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (assc *Resource) LifecycleManagement() *terra.Lifecycle {
	return assc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (assc *Resource) Attributes() awsSecurityhubStandardsControlAttributes {
	return awsSecurityhubStandardsControlAttributes{ref: terra.ReferenceResource(assc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (assc *Resource) ImportState(state io.Reader) error {
	assc.state = &awsSecurityhubStandardsControlState{}
	if err := json.NewDecoder(state).Decode(assc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", assc.Type(), assc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (assc *Resource) State() (*awsSecurityhubStandardsControlState, bool) {
	return assc.state, assc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (assc *Resource) StateMust() *awsSecurityhubStandardsControlState {
	if assc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", assc.Type(), assc.LocalName()))
	}
	return assc.state
}

// Args contains the configurations for aws_securityhub_standards_control.
type Args struct {
	// ControlStatus: string, required
	ControlStatus terra.StringValue `hcl:"control_status,attr" validate:"required"`
	// DisabledReason: string, optional
	DisabledReason terra.StringValue `hcl:"disabled_reason,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// StandardsControlArn: string, required
	StandardsControlArn terra.StringValue `hcl:"standards_control_arn,attr" validate:"required"`
}

type awsSecurityhubStandardsControlAttributes struct {
	ref terra.Reference
}

// ControlId returns a reference to field control_id of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) ControlId() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("control_id"))
}

// ControlStatus returns a reference to field control_status of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) ControlStatus() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("control_status"))
}

// ControlStatusUpdatedAt returns a reference to field control_status_updated_at of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) ControlStatusUpdatedAt() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("control_status_updated_at"))
}

// Description returns a reference to field description of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("description"))
}

// DisabledReason returns a reference to field disabled_reason of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) DisabledReason() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("disabled_reason"))
}

// Id returns a reference to field id of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("id"))
}

// RelatedRequirements returns a reference to field related_requirements of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) RelatedRequirements() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](assc.ref.Append("related_requirements"))
}

// RemediationUrl returns a reference to field remediation_url of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) RemediationUrl() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("remediation_url"))
}

// SeverityRating returns a reference to field severity_rating of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) SeverityRating() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("severity_rating"))
}

// StandardsControlArn returns a reference to field standards_control_arn of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) StandardsControlArn() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("standards_control_arn"))
}

// Title returns a reference to field title of aws_securityhub_standards_control.
func (assc awsSecurityhubStandardsControlAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(assc.ref.Append("title"))
}

type awsSecurityhubStandardsControlState struct {
	ControlId              string   `json:"control_id"`
	ControlStatus          string   `json:"control_status"`
	ControlStatusUpdatedAt string   `json:"control_status_updated_at"`
	Description            string   `json:"description"`
	DisabledReason         string   `json:"disabled_reason"`
	Id                     string   `json:"id"`
	RelatedRequirements    []string `json:"related_requirements"`
	RemediationUrl         string   `json:"remediation_url"`
	SeverityRating         string   `json:"severity_rating"`
	StandardsControlArn    string   `json:"standards_control_arn"`
	Title                  string   `json:"title"`
}
