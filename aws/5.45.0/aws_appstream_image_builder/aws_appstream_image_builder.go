// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appstream_image_builder

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appstream_image_builder.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppstreamImageBuilderState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaib *Resource) Type() string {
	return "aws_appstream_image_builder"
}

// LocalName returns the local name for [Resource].
func (aaib *Resource) LocalName() string {
	return aaib.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaib *Resource) Configuration() interface{} {
	return aaib.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaib *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaib)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaib *Resource) Dependencies() terra.Dependencies {
	return aaib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaib *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaib.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaib *Resource) Attributes() awsAppstreamImageBuilderAttributes {
	return awsAppstreamImageBuilderAttributes{ref: terra.ReferenceResource(aaib)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaib *Resource) ImportState(state io.Reader) error {
	aaib.state = &awsAppstreamImageBuilderState{}
	if err := json.NewDecoder(state).Decode(aaib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaib.Type(), aaib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaib *Resource) State() (*awsAppstreamImageBuilderState, bool) {
	return aaib.state, aaib.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaib *Resource) StateMust() *awsAppstreamImageBuilderState {
	if aaib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaib.Type(), aaib.LocalName()))
	}
	return aaib.state
}

// Args contains the configurations for aws_appstream_image_builder.
type Args struct {
	// AppstreamAgentVersion: string, optional
	AppstreamAgentVersion terra.StringValue `hcl:"appstream_agent_version,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// EnableDefaultInternetAccess: bool, optional
	EnableDefaultInternetAccess terra.BoolValue `hcl:"enable_default_internet_access,attr"`
	// IamRoleArn: string, optional
	IamRoleArn terra.StringValue `hcl:"iam_role_arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImageArn: string, optional
	ImageArn terra.StringValue `hcl:"image_arn,attr"`
	// ImageName: string, optional
	ImageName terra.StringValue `hcl:"image_name,attr"`
	// InstanceType: string, required
	InstanceType terra.StringValue `hcl:"instance_type,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// AccessEndpoint: min=0,max=4
	AccessEndpoint []AccessEndpoint `hcl:"access_endpoint,block" validate:"min=0,max=4"`
	// DomainJoinInfo: optional
	DomainJoinInfo *DomainJoinInfo `hcl:"domain_join_info,block"`
	// VpcConfig: optional
	VpcConfig *VpcConfig `hcl:"vpc_config,block"`
}

type awsAppstreamImageBuilderAttributes struct {
	ref terra.Reference
}

// AppstreamAgentVersion returns a reference to field appstream_agent_version of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) AppstreamAgentVersion() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("appstream_agent_version"))
}

// Arn returns a reference to field arn of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("arn"))
}

// CreatedTime returns a reference to field created_time of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("created_time"))
}

// Description returns a reference to field description of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("display_name"))
}

// EnableDefaultInternetAccess returns a reference to field enable_default_internet_access of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) EnableDefaultInternetAccess() terra.BoolValue {
	return terra.ReferenceAsBool(aaib.ref.Append("enable_default_internet_access"))
}

// IamRoleArn returns a reference to field iam_role_arn of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) IamRoleArn() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("iam_role_arn"))
}

// Id returns a reference to field id of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("id"))
}

// ImageArn returns a reference to field image_arn of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) ImageArn() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("image_arn"))
}

// ImageName returns a reference to field image_name of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("image_name"))
}

// InstanceType returns a reference to field instance_type of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("instance_type"))
}

// Name returns a reference to field name of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("name"))
}

// State returns a reference to field state of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aaib.ref.Append("state"))
}

// Tags returns a reference to field tags of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaib.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_appstream_image_builder.
func (aaib awsAppstreamImageBuilderAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaib.ref.Append("tags_all"))
}

func (aaib awsAppstreamImageBuilderAttributes) AccessEndpoint() terra.SetValue[AccessEndpointAttributes] {
	return terra.ReferenceAsSet[AccessEndpointAttributes](aaib.ref.Append("access_endpoint"))
}

func (aaib awsAppstreamImageBuilderAttributes) DomainJoinInfo() terra.ListValue[DomainJoinInfoAttributes] {
	return terra.ReferenceAsList[DomainJoinInfoAttributes](aaib.ref.Append("domain_join_info"))
}

func (aaib awsAppstreamImageBuilderAttributes) VpcConfig() terra.ListValue[VpcConfigAttributes] {
	return terra.ReferenceAsList[VpcConfigAttributes](aaib.ref.Append("vpc_config"))
}

type awsAppstreamImageBuilderState struct {
	AppstreamAgentVersion       string                `json:"appstream_agent_version"`
	Arn                         string                `json:"arn"`
	CreatedTime                 string                `json:"created_time"`
	Description                 string                `json:"description"`
	DisplayName                 string                `json:"display_name"`
	EnableDefaultInternetAccess bool                  `json:"enable_default_internet_access"`
	IamRoleArn                  string                `json:"iam_role_arn"`
	Id                          string                `json:"id"`
	ImageArn                    string                `json:"image_arn"`
	ImageName                   string                `json:"image_name"`
	InstanceType                string                `json:"instance_type"`
	Name                        string                `json:"name"`
	State                       string                `json:"state"`
	Tags                        map[string]string     `json:"tags"`
	TagsAll                     map[string]string     `json:"tags_all"`
	AccessEndpoint              []AccessEndpointState `json:"access_endpoint"`
	DomainJoinInfo              []DomainJoinInfoState `json:"domain_join_info"`
	VpcConfig                   []VpcConfigState      `json:"vpc_config"`
}
