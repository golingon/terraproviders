// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_image

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_imagebuilder_image.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aii *DataSource) DataSource() string {
	return "aws_imagebuilder_image"
}

// LocalName returns the local name for [DataSource].
func (aii *DataSource) LocalName() string {
	return aii.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aii *DataSource) Configuration() interface{} {
	return aii.Args
}

// Attributes returns the attributes for [DataSource].
func (aii *DataSource) Attributes() dataAwsImagebuilderImageAttributes {
	return dataAwsImagebuilderImageAttributes{ref: terra.ReferenceDataSource(aii)}
}

// DataArgs contains the configurations for aws_imagebuilder_image.
type DataArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsImagebuilderImageAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("arn"))
}

// BuildVersionArn returns a reference to field build_version_arn of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) BuildVersionArn() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("build_version_arn"))
}

// ContainerRecipeArn returns a reference to field container_recipe_arn of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) ContainerRecipeArn() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("container_recipe_arn"))
}

// DateCreated returns a reference to field date_created of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) DateCreated() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("date_created"))
}

// DistributionConfigurationArn returns a reference to field distribution_configuration_arn of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) DistributionConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("distribution_configuration_arn"))
}

// EnhancedImageMetadataEnabled returns a reference to field enhanced_image_metadata_enabled of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) EnhancedImageMetadataEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aii.ref.Append("enhanced_image_metadata_enabled"))
}

// Id returns a reference to field id of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("id"))
}

// ImageRecipeArn returns a reference to field image_recipe_arn of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) ImageRecipeArn() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("image_recipe_arn"))
}

// InfrastructureConfigurationArn returns a reference to field infrastructure_configuration_arn of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) InfrastructureConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("infrastructure_configuration_arn"))
}

// Name returns a reference to field name of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("name"))
}

// OsVersion returns a reference to field os_version of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) OsVersion() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("os_version"))
}

// Platform returns a reference to field platform of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) Platform() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("platform"))
}

// Tags returns a reference to field tags of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aii.ref.Append("tags"))
}

// Version returns a reference to field version of aws_imagebuilder_image.
func (aii dataAwsImagebuilderImageAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(aii.ref.Append("version"))
}

func (aii dataAwsImagebuilderImageAttributes) ImageScanningConfiguration() terra.ListValue[DataImageScanningConfigurationAttributes] {
	return terra.ReferenceAsList[DataImageScanningConfigurationAttributes](aii.ref.Append("image_scanning_configuration"))
}

func (aii dataAwsImagebuilderImageAttributes) ImageTestsConfiguration() terra.ListValue[DataImageTestsConfigurationAttributes] {
	return terra.ReferenceAsList[DataImageTestsConfigurationAttributes](aii.ref.Append("image_tests_configuration"))
}

func (aii dataAwsImagebuilderImageAttributes) OutputResources() terra.ListValue[DataOutputResourcesAttributes] {
	return terra.ReferenceAsList[DataOutputResourcesAttributes](aii.ref.Append("output_resources"))
}
