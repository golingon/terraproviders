// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_image

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ImageScanningConfiguration struct {
	// ImageScanningEnabled: bool, optional
	ImageScanningEnabled terra.BoolValue `hcl:"image_scanning_enabled,attr"`
	// ImageScanningConfigurationEcrConfiguration: optional
	EcrConfiguration *ImageScanningConfigurationEcrConfiguration `hcl:"ecr_configuration,block"`
}

type ImageScanningConfigurationEcrConfiguration struct {
	// ContainerTags: set of string, optional
	ContainerTags terra.SetValue[terra.StringValue] `hcl:"container_tags,attr"`
	// RepositoryName: string, optional
	RepositoryName terra.StringValue `hcl:"repository_name,attr"`
}

type ImageTestsConfiguration struct {
	// ImageTestsEnabled: bool, optional
	ImageTestsEnabled terra.BoolValue `hcl:"image_tests_enabled,attr"`
	// TimeoutMinutes: number, optional
	TimeoutMinutes terra.NumberValue `hcl:"timeout_minutes,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
}

type OutputResourcesAttributes struct {
	ref terra.Reference
}

func (or OutputResourcesAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or OutputResourcesAttributes) InternalWithRef(ref terra.Reference) OutputResourcesAttributes {
	return OutputResourcesAttributes{ref: ref}
}

func (or OutputResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or OutputResourcesAttributes) Amis() terra.SetValue[OutputResourcesAmisAttributes] {
	return terra.ReferenceAsSet[OutputResourcesAmisAttributes](or.ref.Append("amis"))
}

func (or OutputResourcesAttributes) Containers() terra.SetValue[OutputResourcesContainersAttributes] {
	return terra.ReferenceAsSet[OutputResourcesContainersAttributes](or.ref.Append("containers"))
}

type OutputResourcesAmisAttributes struct {
	ref terra.Reference
}

func (a OutputResourcesAmisAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a OutputResourcesAmisAttributes) InternalWithRef(ref terra.Reference) OutputResourcesAmisAttributes {
	return OutputResourcesAmisAttributes{ref: ref}
}

func (a OutputResourcesAmisAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a OutputResourcesAmisAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("account_id"))
}

func (a OutputResourcesAmisAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("description"))
}

func (a OutputResourcesAmisAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("image"))
}

func (a OutputResourcesAmisAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

func (a OutputResourcesAmisAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("region"))
}

type OutputResourcesContainersAttributes struct {
	ref terra.Reference
}

func (c OutputResourcesContainersAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c OutputResourcesContainersAttributes) InternalWithRef(ref terra.Reference) OutputResourcesContainersAttributes {
	return OutputResourcesContainersAttributes{ref: ref}
}

func (c OutputResourcesContainersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c OutputResourcesContainersAttributes) ImageUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("image_uris"))
}

func (c OutputResourcesContainersAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("region"))
}

type ImageScanningConfigurationAttributes struct {
	ref terra.Reference
}

func (isc ImageScanningConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return isc.ref, nil
}

func (isc ImageScanningConfigurationAttributes) InternalWithRef(ref terra.Reference) ImageScanningConfigurationAttributes {
	return ImageScanningConfigurationAttributes{ref: ref}
}

func (isc ImageScanningConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isc.ref.InternalTokens()
}

func (isc ImageScanningConfigurationAttributes) ImageScanningEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(isc.ref.Append("image_scanning_enabled"))
}

func (isc ImageScanningConfigurationAttributes) EcrConfiguration() terra.ListValue[ImageScanningConfigurationEcrConfigurationAttributes] {
	return terra.ReferenceAsList[ImageScanningConfigurationEcrConfigurationAttributes](isc.ref.Append("ecr_configuration"))
}

type ImageScanningConfigurationEcrConfigurationAttributes struct {
	ref terra.Reference
}

func (ec ImageScanningConfigurationEcrConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec ImageScanningConfigurationEcrConfigurationAttributes) InternalWithRef(ref terra.Reference) ImageScanningConfigurationEcrConfigurationAttributes {
	return ImageScanningConfigurationEcrConfigurationAttributes{ref: ref}
}

func (ec ImageScanningConfigurationEcrConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec ImageScanningConfigurationEcrConfigurationAttributes) ContainerTags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ec.ref.Append("container_tags"))
}

func (ec ImageScanningConfigurationEcrConfigurationAttributes) RepositoryName() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("repository_name"))
}

type ImageTestsConfigurationAttributes struct {
	ref terra.Reference
}

func (itc ImageTestsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return itc.ref, nil
}

func (itc ImageTestsConfigurationAttributes) InternalWithRef(ref terra.Reference) ImageTestsConfigurationAttributes {
	return ImageTestsConfigurationAttributes{ref: ref}
}

func (itc ImageTestsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return itc.ref.InternalTokens()
}

func (itc ImageTestsConfigurationAttributes) ImageTestsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(itc.ref.Append("image_tests_enabled"))
}

func (itc ImageTestsConfigurationAttributes) TimeoutMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(itc.ref.Append("timeout_minutes"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

type OutputResourcesState struct {
	Amis       []OutputResourcesAmisState       `json:"amis"`
	Containers []OutputResourcesContainersState `json:"containers"`
}

type OutputResourcesAmisState struct {
	AccountId   string `json:"account_id"`
	Description string `json:"description"`
	Image       string `json:"image"`
	Name        string `json:"name"`
	Region      string `json:"region"`
}

type OutputResourcesContainersState struct {
	ImageUris []string `json:"image_uris"`
	Region    string   `json:"region"`
}

type ImageScanningConfigurationState struct {
	ImageScanningEnabled bool                                              `json:"image_scanning_enabled"`
	EcrConfiguration     []ImageScanningConfigurationEcrConfigurationState `json:"ecr_configuration"`
}

type ImageScanningConfigurationEcrConfigurationState struct {
	ContainerTags  []string `json:"container_tags"`
	RepositoryName string   `json:"repository_name"`
}

type ImageTestsConfigurationState struct {
	ImageTestsEnabled bool    `json:"image_tests_enabled"`
	TimeoutMinutes    float64 `json:"timeout_minutes"`
}

type TimeoutsState struct {
	Create string `json:"create"`
}
