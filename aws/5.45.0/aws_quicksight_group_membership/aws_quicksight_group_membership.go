// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_quicksight_group_membership

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_quicksight_group_membership.
type Resource struct {
	Name      string
	Args      Args
	state     *awsQuicksightGroupMembershipState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aqgm *Resource) Type() string {
	return "aws_quicksight_group_membership"
}

// LocalName returns the local name for [Resource].
func (aqgm *Resource) LocalName() string {
	return aqgm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aqgm *Resource) Configuration() interface{} {
	return aqgm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aqgm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aqgm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aqgm *Resource) Dependencies() terra.Dependencies {
	return aqgm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aqgm *Resource) LifecycleManagement() *terra.Lifecycle {
	return aqgm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aqgm *Resource) Attributes() awsQuicksightGroupMembershipAttributes {
	return awsQuicksightGroupMembershipAttributes{ref: terra.ReferenceResource(aqgm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aqgm *Resource) ImportState(state io.Reader) error {
	aqgm.state = &awsQuicksightGroupMembershipState{}
	if err := json.NewDecoder(state).Decode(aqgm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aqgm.Type(), aqgm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aqgm *Resource) State() (*awsQuicksightGroupMembershipState, bool) {
	return aqgm.state, aqgm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aqgm *Resource) StateMust() *awsQuicksightGroupMembershipState {
	if aqgm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aqgm.Type(), aqgm.LocalName()))
	}
	return aqgm.state
}

// Args contains the configurations for aws_quicksight_group_membership.
type Args struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MemberName: string, required
	MemberName terra.StringValue `hcl:"member_name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}

type awsQuicksightGroupMembershipAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_quicksight_group_membership.
func (aqgm awsQuicksightGroupMembershipAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aqgm.ref.Append("arn"))
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_group_membership.
func (aqgm awsQuicksightGroupMembershipAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(aqgm.ref.Append("aws_account_id"))
}

// GroupName returns a reference to field group_name of aws_quicksight_group_membership.
func (aqgm awsQuicksightGroupMembershipAttributes) GroupName() terra.StringValue {
	return terra.ReferenceAsString(aqgm.ref.Append("group_name"))
}

// Id returns a reference to field id of aws_quicksight_group_membership.
func (aqgm awsQuicksightGroupMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aqgm.ref.Append("id"))
}

// MemberName returns a reference to field member_name of aws_quicksight_group_membership.
func (aqgm awsQuicksightGroupMembershipAttributes) MemberName() terra.StringValue {
	return terra.ReferenceAsString(aqgm.ref.Append("member_name"))
}

// Namespace returns a reference to field namespace of aws_quicksight_group_membership.
func (aqgm awsQuicksightGroupMembershipAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(aqgm.ref.Append("namespace"))
}

type awsQuicksightGroupMembershipState struct {
	Arn          string `json:"arn"`
	AwsAccountId string `json:"aws_account_id"`
	GroupName    string `json:"group_name"`
	Id           string `json:"id"`
	MemberName   string `json:"member_name"`
	Namespace    string `json:"namespace"`
}
