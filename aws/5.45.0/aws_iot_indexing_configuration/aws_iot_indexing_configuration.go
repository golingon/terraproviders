// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_iot_indexing_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_iot_indexing_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsIotIndexingConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aiic *Resource) Type() string {
	return "aws_iot_indexing_configuration"
}

// LocalName returns the local name for [Resource].
func (aiic *Resource) LocalName() string {
	return aiic.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aiic *Resource) Configuration() interface{} {
	return aiic.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aiic *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aiic)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aiic *Resource) Dependencies() terra.Dependencies {
	return aiic.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aiic *Resource) LifecycleManagement() *terra.Lifecycle {
	return aiic.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aiic *Resource) Attributes() awsIotIndexingConfigurationAttributes {
	return awsIotIndexingConfigurationAttributes{ref: terra.ReferenceResource(aiic)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aiic *Resource) ImportState(state io.Reader) error {
	aiic.state = &awsIotIndexingConfigurationState{}
	if err := json.NewDecoder(state).Decode(aiic.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiic.Type(), aiic.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aiic *Resource) State() (*awsIotIndexingConfigurationState, bool) {
	return aiic.state, aiic.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aiic *Resource) StateMust() *awsIotIndexingConfigurationState {
	if aiic.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiic.Type(), aiic.LocalName()))
	}
	return aiic.state
}

// Args contains the configurations for aws_iot_indexing_configuration.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ThingGroupIndexingConfiguration: optional
	ThingGroupIndexingConfiguration *ThingGroupIndexingConfiguration `hcl:"thing_group_indexing_configuration,block"`
	// ThingIndexingConfiguration: optional
	ThingIndexingConfiguration *ThingIndexingConfiguration `hcl:"thing_indexing_configuration,block"`
}

type awsIotIndexingConfigurationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_iot_indexing_configuration.
func (aiic awsIotIndexingConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiic.ref.Append("id"))
}

func (aiic awsIotIndexingConfigurationAttributes) ThingGroupIndexingConfiguration() terra.ListValue[ThingGroupIndexingConfigurationAttributes] {
	return terra.ReferenceAsList[ThingGroupIndexingConfigurationAttributes](aiic.ref.Append("thing_group_indexing_configuration"))
}

func (aiic awsIotIndexingConfigurationAttributes) ThingIndexingConfiguration() terra.ListValue[ThingIndexingConfigurationAttributes] {
	return terra.ReferenceAsList[ThingIndexingConfigurationAttributes](aiic.ref.Append("thing_indexing_configuration"))
}

type awsIotIndexingConfigurationState struct {
	Id                              string                                 `json:"id"`
	ThingGroupIndexingConfiguration []ThingGroupIndexingConfigurationState `json:"thing_group_indexing_configuration"`
	ThingIndexingConfiguration      []ThingIndexingConfigurationState      `json:"thing_indexing_configuration"`
}
