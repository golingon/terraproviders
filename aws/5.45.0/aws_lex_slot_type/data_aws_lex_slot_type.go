// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lex_slot_type

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_lex_slot_type.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alst *DataSource) DataSource() string {
	return "aws_lex_slot_type"
}

// LocalName returns the local name for [DataSource].
func (alst *DataSource) LocalName() string {
	return alst.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alst *DataSource) Configuration() interface{} {
	return alst.Args
}

// Attributes returns the attributes for [DataSource].
func (alst *DataSource) Attributes() dataAwsLexSlotTypeAttributes {
	return dataAwsLexSlotTypeAttributes{ref: terra.ReferenceDataSource(alst)}
}

// DataArgs contains the configurations for aws_lex_slot_type.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type dataAwsLexSlotTypeAttributes struct {
	ref terra.Reference
}

// Checksum returns a reference to field checksum of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) Checksum() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("checksum"))
}

// CreatedDate returns a reference to field created_date of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("created_date"))
}

// Description returns a reference to field description of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("description"))
}

// Id returns a reference to field id of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("id"))
}

// LastUpdatedDate returns a reference to field last_updated_date of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) LastUpdatedDate() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("last_updated_date"))
}

// Name returns a reference to field name of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("name"))
}

// ValueSelectionStrategy returns a reference to field value_selection_strategy of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) ValueSelectionStrategy() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("value_selection_strategy"))
}

// Version returns a reference to field version of aws_lex_slot_type.
func (alst dataAwsLexSlotTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(alst.ref.Append("version"))
}

func (alst dataAwsLexSlotTypeAttributes) EnumerationValue() terra.SetValue[DataEnumerationValueAttributes] {
	return terra.ReferenceAsSet[DataEnumerationValueAttributes](alst.ref.Append("enumeration_value"))
}
