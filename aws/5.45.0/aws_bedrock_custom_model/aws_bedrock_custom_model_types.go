// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_bedrock_custom_model

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type OutputDataConfig struct {
	// S3Uri: string, required
	S3Uri terra.StringValue `hcl:"s3_uri,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type TrainingDataConfig struct {
	// S3Uri: string, required
	S3Uri terra.StringValue `hcl:"s3_uri,attr" validate:"required"`
}

type ValidationDataConfig struct {
	// ValidationDataConfigValidator: min=0
	Validator []ValidationDataConfigValidator `hcl:"validator,block" validate:"min=0"`
}

type ValidationDataConfigValidator struct {
	// S3Uri: string, required
	S3Uri terra.StringValue `hcl:"s3_uri,attr" validate:"required"`
}

type VpcConfig struct {
	// SecurityGroupIds: set of string, required
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type TrainingMetricsAttributes struct {
	ref terra.Reference
}

func (tm TrainingMetricsAttributes) InternalRef() (terra.Reference, error) {
	return tm.ref, nil
}

func (tm TrainingMetricsAttributes) InternalWithRef(ref terra.Reference) TrainingMetricsAttributes {
	return TrainingMetricsAttributes{ref: ref}
}

func (tm TrainingMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tm.ref.InternalTokens()
}

func (tm TrainingMetricsAttributes) TrainingLoss() terra.NumberValue {
	return terra.ReferenceAsNumber(tm.ref.Append("training_loss"))
}

type ValidationMetricsAttributes struct {
	ref terra.Reference
}

func (vm ValidationMetricsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm ValidationMetricsAttributes) InternalWithRef(ref terra.Reference) ValidationMetricsAttributes {
	return ValidationMetricsAttributes{ref: ref}
}

func (vm ValidationMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm ValidationMetricsAttributes) ValidationLoss() terra.NumberValue {
	return terra.ReferenceAsNumber(vm.ref.Append("validation_loss"))
}

type OutputDataConfigAttributes struct {
	ref terra.Reference
}

func (odc OutputDataConfigAttributes) InternalRef() (terra.Reference, error) {
	return odc.ref, nil
}

func (odc OutputDataConfigAttributes) InternalWithRef(ref terra.Reference) OutputDataConfigAttributes {
	return OutputDataConfigAttributes{ref: ref}
}

func (odc OutputDataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return odc.ref.InternalTokens()
}

func (odc OutputDataConfigAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(odc.ref.Append("s3_uri"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type TrainingDataConfigAttributes struct {
	ref terra.Reference
}

func (tdc TrainingDataConfigAttributes) InternalRef() (terra.Reference, error) {
	return tdc.ref, nil
}

func (tdc TrainingDataConfigAttributes) InternalWithRef(ref terra.Reference) TrainingDataConfigAttributes {
	return TrainingDataConfigAttributes{ref: ref}
}

func (tdc TrainingDataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tdc.ref.InternalTokens()
}

func (tdc TrainingDataConfigAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(tdc.ref.Append("s3_uri"))
}

type ValidationDataConfigAttributes struct {
	ref terra.Reference
}

func (vdc ValidationDataConfigAttributes) InternalRef() (terra.Reference, error) {
	return vdc.ref, nil
}

func (vdc ValidationDataConfigAttributes) InternalWithRef(ref terra.Reference) ValidationDataConfigAttributes {
	return ValidationDataConfigAttributes{ref: ref}
}

func (vdc ValidationDataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vdc.ref.InternalTokens()
}

func (vdc ValidationDataConfigAttributes) Validator() terra.ListValue[ValidationDataConfigValidatorAttributes] {
	return terra.ReferenceAsList[ValidationDataConfigValidatorAttributes](vdc.ref.Append("validator"))
}

type ValidationDataConfigValidatorAttributes struct {
	ref terra.Reference
}

func (v ValidationDataConfigValidatorAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ValidationDataConfigValidatorAttributes) InternalWithRef(ref terra.Reference) ValidationDataConfigValidatorAttributes {
	return ValidationDataConfigValidatorAttributes{ref: ref}
}

func (v ValidationDataConfigValidatorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v ValidationDataConfigValidatorAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("s3_uri"))
}

type VpcConfigAttributes struct {
	ref terra.Reference
}

func (vc VpcConfigAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc VpcConfigAttributes) InternalWithRef(ref terra.Reference) VpcConfigAttributes {
	return VpcConfigAttributes{ref: ref}
}

func (vc VpcConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc VpcConfigAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc VpcConfigAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

type TrainingMetricsState struct {
	TrainingLoss float64 `json:"training_loss"`
}

type ValidationMetricsState struct {
	ValidationLoss float64 `json:"validation_loss"`
}

type OutputDataConfigState struct {
	S3Uri string `json:"s3_uri"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}

type TrainingDataConfigState struct {
	S3Uri string `json:"s3_uri"`
}

type ValidationDataConfigState struct {
	Validator []ValidationDataConfigValidatorState `json:"validator"`
}

type ValidationDataConfigValidatorState struct {
	S3Uri string `json:"s3_uri"`
}

type VpcConfigState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
}
