// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_bedrock_custom_model

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataOutputDataConfigAttributes struct {
	ref terra.Reference
}

func (odc DataOutputDataConfigAttributes) InternalRef() (terra.Reference, error) {
	return odc.ref, nil
}

func (odc DataOutputDataConfigAttributes) InternalWithRef(ref terra.Reference) DataOutputDataConfigAttributes {
	return DataOutputDataConfigAttributes{ref: ref}
}

func (odc DataOutputDataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return odc.ref.InternalTokens()
}

func (odc DataOutputDataConfigAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(odc.ref.Append("s3_uri"))
}

type DataTrainingDataConfigAttributes struct {
	ref terra.Reference
}

func (tdc DataTrainingDataConfigAttributes) InternalRef() (terra.Reference, error) {
	return tdc.ref, nil
}

func (tdc DataTrainingDataConfigAttributes) InternalWithRef(ref terra.Reference) DataTrainingDataConfigAttributes {
	return DataTrainingDataConfigAttributes{ref: ref}
}

func (tdc DataTrainingDataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tdc.ref.InternalTokens()
}

func (tdc DataTrainingDataConfigAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(tdc.ref.Append("s3_uri"))
}

type DataTrainingMetricsAttributes struct {
	ref terra.Reference
}

func (tm DataTrainingMetricsAttributes) InternalRef() (terra.Reference, error) {
	return tm.ref, nil
}

func (tm DataTrainingMetricsAttributes) InternalWithRef(ref terra.Reference) DataTrainingMetricsAttributes {
	return DataTrainingMetricsAttributes{ref: ref}
}

func (tm DataTrainingMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tm.ref.InternalTokens()
}

func (tm DataTrainingMetricsAttributes) TrainingLoss() terra.NumberValue {
	return terra.ReferenceAsNumber(tm.ref.Append("training_loss"))
}

type DataValidationDataConfigAttributes struct {
	ref terra.Reference
}

func (vdc DataValidationDataConfigAttributes) InternalRef() (terra.Reference, error) {
	return vdc.ref, nil
}

func (vdc DataValidationDataConfigAttributes) InternalWithRef(ref terra.Reference) DataValidationDataConfigAttributes {
	return DataValidationDataConfigAttributes{ref: ref}
}

func (vdc DataValidationDataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vdc.ref.InternalTokens()
}

func (vdc DataValidationDataConfigAttributes) Validator() terra.ListValue[DataValidationDataConfigValidatorAttributes] {
	return terra.ReferenceAsList[DataValidationDataConfigValidatorAttributes](vdc.ref.Append("validator"))
}

type DataValidationDataConfigValidatorAttributes struct {
	ref terra.Reference
}

func (v DataValidationDataConfigValidatorAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataValidationDataConfigValidatorAttributes) InternalWithRef(ref terra.Reference) DataValidationDataConfigValidatorAttributes {
	return DataValidationDataConfigValidatorAttributes{ref: ref}
}

func (v DataValidationDataConfigValidatorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataValidationDataConfigValidatorAttributes) S3Uri() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("s3_uri"))
}

type DataValidationMetricsAttributes struct {
	ref terra.Reference
}

func (vm DataValidationMetricsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm DataValidationMetricsAttributes) InternalWithRef(ref terra.Reference) DataValidationMetricsAttributes {
	return DataValidationMetricsAttributes{ref: ref}
}

func (vm DataValidationMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm DataValidationMetricsAttributes) ValidationLoss() terra.NumberValue {
	return terra.ReferenceAsNumber(vm.ref.Append("validation_loss"))
}

type DataOutputDataConfigState struct {
	S3Uri string `json:"s3_uri"`
}

type DataTrainingDataConfigState struct {
	S3Uri string `json:"s3_uri"`
}

type DataTrainingMetricsState struct {
	TrainingLoss float64 `json:"training_loss"`
}

type DataValidationDataConfigState struct {
	Validator []DataValidationDataConfigValidatorState `json:"validator"`
}

type DataValidationDataConfigValidatorState struct {
	S3Uri string `json:"s3_uri"`
}

type DataValidationMetricsState struct {
	ValidationLoss float64 `json:"validation_loss"`
}
