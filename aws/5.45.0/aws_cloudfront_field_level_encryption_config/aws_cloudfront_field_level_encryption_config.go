// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_field_level_encryption_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudfront_field_level_encryption_config.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudfrontFieldLevelEncryptionConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acflec *Resource) Type() string {
	return "aws_cloudfront_field_level_encryption_config"
}

// LocalName returns the local name for [Resource].
func (acflec *Resource) LocalName() string {
	return acflec.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acflec *Resource) Configuration() interface{} {
	return acflec.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acflec *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acflec)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acflec *Resource) Dependencies() terra.Dependencies {
	return acflec.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acflec *Resource) LifecycleManagement() *terra.Lifecycle {
	return acflec.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acflec *Resource) Attributes() awsCloudfrontFieldLevelEncryptionConfigAttributes {
	return awsCloudfrontFieldLevelEncryptionConfigAttributes{ref: terra.ReferenceResource(acflec)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acflec *Resource) ImportState(state io.Reader) error {
	acflec.state = &awsCloudfrontFieldLevelEncryptionConfigState{}
	if err := json.NewDecoder(state).Decode(acflec.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acflec.Type(), acflec.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acflec *Resource) State() (*awsCloudfrontFieldLevelEncryptionConfigState, bool) {
	return acflec.state, acflec.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acflec *Resource) StateMust() *awsCloudfrontFieldLevelEncryptionConfigState {
	if acflec.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acflec.Type(), acflec.LocalName()))
	}
	return acflec.state
}

// Args contains the configurations for aws_cloudfront_field_level_encryption_config.
type Args struct {
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ContentTypeProfileConfig: required
	ContentTypeProfileConfig *ContentTypeProfileConfig `hcl:"content_type_profile_config,block" validate:"required"`
	// QueryArgProfileConfig: required
	QueryArgProfileConfig *QueryArgProfileConfig `hcl:"query_arg_profile_config,block" validate:"required"`
}

type awsCloudfrontFieldLevelEncryptionConfigAttributes struct {
	ref terra.Reference
}

// CallerReference returns a reference to field caller_reference of aws_cloudfront_field_level_encryption_config.
func (acflec awsCloudfrontFieldLevelEncryptionConfigAttributes) CallerReference() terra.StringValue {
	return terra.ReferenceAsString(acflec.ref.Append("caller_reference"))
}

// Comment returns a reference to field comment of aws_cloudfront_field_level_encryption_config.
func (acflec awsCloudfrontFieldLevelEncryptionConfigAttributes) Comment() terra.StringValue {
	return terra.ReferenceAsString(acflec.ref.Append("comment"))
}

// Etag returns a reference to field etag of aws_cloudfront_field_level_encryption_config.
func (acflec awsCloudfrontFieldLevelEncryptionConfigAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(acflec.ref.Append("etag"))
}

// Id returns a reference to field id of aws_cloudfront_field_level_encryption_config.
func (acflec awsCloudfrontFieldLevelEncryptionConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acflec.ref.Append("id"))
}

func (acflec awsCloudfrontFieldLevelEncryptionConfigAttributes) ContentTypeProfileConfig() terra.ListValue[ContentTypeProfileConfigAttributes] {
	return terra.ReferenceAsList[ContentTypeProfileConfigAttributes](acflec.ref.Append("content_type_profile_config"))
}

func (acflec awsCloudfrontFieldLevelEncryptionConfigAttributes) QueryArgProfileConfig() terra.ListValue[QueryArgProfileConfigAttributes] {
	return terra.ReferenceAsList[QueryArgProfileConfigAttributes](acflec.ref.Append("query_arg_profile_config"))
}

type awsCloudfrontFieldLevelEncryptionConfigState struct {
	CallerReference          string                          `json:"caller_reference"`
	Comment                  string                          `json:"comment"`
	Etag                     string                          `json:"etag"`
	Id                       string                          `json:"id"`
	ContentTypeProfileConfig []ContentTypeProfileConfigState `json:"content_type_profile_config"`
	QueryArgProfileConfig    []QueryArgProfileConfigState    `json:"query_arg_profile_config"`
}
