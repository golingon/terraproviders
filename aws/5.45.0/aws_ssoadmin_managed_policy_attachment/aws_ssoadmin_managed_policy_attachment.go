// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssoadmin_managed_policy_attachment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ssoadmin_managed_policy_attachment.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSsoadminManagedPolicyAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asmpa *Resource) Type() string {
	return "aws_ssoadmin_managed_policy_attachment"
}

// LocalName returns the local name for [Resource].
func (asmpa *Resource) LocalName() string {
	return asmpa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asmpa *Resource) Configuration() interface{} {
	return asmpa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asmpa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asmpa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asmpa *Resource) Dependencies() terra.Dependencies {
	return asmpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asmpa *Resource) LifecycleManagement() *terra.Lifecycle {
	return asmpa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asmpa *Resource) Attributes() awsSsoadminManagedPolicyAttachmentAttributes {
	return awsSsoadminManagedPolicyAttachmentAttributes{ref: terra.ReferenceResource(asmpa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asmpa *Resource) ImportState(state io.Reader) error {
	asmpa.state = &awsSsoadminManagedPolicyAttachmentState{}
	if err := json.NewDecoder(state).Decode(asmpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asmpa.Type(), asmpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asmpa *Resource) State() (*awsSsoadminManagedPolicyAttachmentState, bool) {
	return asmpa.state, asmpa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asmpa *Resource) StateMust() *awsSsoadminManagedPolicyAttachmentState {
	if asmpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asmpa.Type(), asmpa.LocalName()))
	}
	return asmpa.state
}

// Args contains the configurations for aws_ssoadmin_managed_policy_attachment.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// ManagedPolicyArn: string, required
	ManagedPolicyArn terra.StringValue `hcl:"managed_policy_arn,attr" validate:"required"`
	// PermissionSetArn: string, required
	PermissionSetArn terra.StringValue `hcl:"permission_set_arn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsSsoadminManagedPolicyAttachmentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ssoadmin_managed_policy_attachment.
func (asmpa awsSsoadminManagedPolicyAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asmpa.ref.Append("id"))
}

// InstanceArn returns a reference to field instance_arn of aws_ssoadmin_managed_policy_attachment.
func (asmpa awsSsoadminManagedPolicyAttachmentAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceAsString(asmpa.ref.Append("instance_arn"))
}

// ManagedPolicyArn returns a reference to field managed_policy_arn of aws_ssoadmin_managed_policy_attachment.
func (asmpa awsSsoadminManagedPolicyAttachmentAttributes) ManagedPolicyArn() terra.StringValue {
	return terra.ReferenceAsString(asmpa.ref.Append("managed_policy_arn"))
}

// ManagedPolicyName returns a reference to field managed_policy_name of aws_ssoadmin_managed_policy_attachment.
func (asmpa awsSsoadminManagedPolicyAttachmentAttributes) ManagedPolicyName() terra.StringValue {
	return terra.ReferenceAsString(asmpa.ref.Append("managed_policy_name"))
}

// PermissionSetArn returns a reference to field permission_set_arn of aws_ssoadmin_managed_policy_attachment.
func (asmpa awsSsoadminManagedPolicyAttachmentAttributes) PermissionSetArn() terra.StringValue {
	return terra.ReferenceAsString(asmpa.ref.Append("permission_set_arn"))
}

func (asmpa awsSsoadminManagedPolicyAttachmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asmpa.ref.Append("timeouts"))
}

type awsSsoadminManagedPolicyAttachmentState struct {
	Id                string         `json:"id"`
	InstanceArn       string         `json:"instance_arn"`
	ManagedPolicyArn  string         `json:"managed_policy_arn"`
	ManagedPolicyName string         `json:"managed_policy_name"`
	PermissionSetArn  string         `json:"permission_set_arn"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
