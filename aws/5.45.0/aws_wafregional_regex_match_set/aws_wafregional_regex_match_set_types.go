// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_wafregional_regex_match_set

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type RegexMatchTuple struct {
	// RegexPatternSetId: string, required
	RegexPatternSetId terra.StringValue `hcl:"regex_pattern_set_id,attr" validate:"required"`
	// TextTransformation: string, required
	TextTransformation terra.StringValue `hcl:"text_transformation,attr" validate:"required"`
	// RegexMatchTupleFieldToMatch: required
	FieldToMatch *RegexMatchTupleFieldToMatch `hcl:"field_to_match,block" validate:"required"`
}

type RegexMatchTupleFieldToMatch struct {
	// Data: string, optional
	Data terra.StringValue `hcl:"data,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type RegexMatchTupleAttributes struct {
	ref terra.Reference
}

func (rmt RegexMatchTupleAttributes) InternalRef() (terra.Reference, error) {
	return rmt.ref, nil
}

func (rmt RegexMatchTupleAttributes) InternalWithRef(ref terra.Reference) RegexMatchTupleAttributes {
	return RegexMatchTupleAttributes{ref: ref}
}

func (rmt RegexMatchTupleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rmt.ref.InternalTokens()
}

func (rmt RegexMatchTupleAttributes) RegexPatternSetId() terra.StringValue {
	return terra.ReferenceAsString(rmt.ref.Append("regex_pattern_set_id"))
}

func (rmt RegexMatchTupleAttributes) TextTransformation() terra.StringValue {
	return terra.ReferenceAsString(rmt.ref.Append("text_transformation"))
}

func (rmt RegexMatchTupleAttributes) FieldToMatch() terra.ListValue[RegexMatchTupleFieldToMatchAttributes] {
	return terra.ReferenceAsList[RegexMatchTupleFieldToMatchAttributes](rmt.ref.Append("field_to_match"))
}

type RegexMatchTupleFieldToMatchAttributes struct {
	ref terra.Reference
}

func (ftm RegexMatchTupleFieldToMatchAttributes) InternalRef() (terra.Reference, error) {
	return ftm.ref, nil
}

func (ftm RegexMatchTupleFieldToMatchAttributes) InternalWithRef(ref terra.Reference) RegexMatchTupleFieldToMatchAttributes {
	return RegexMatchTupleFieldToMatchAttributes{ref: ref}
}

func (ftm RegexMatchTupleFieldToMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ftm.ref.InternalTokens()
}

func (ftm RegexMatchTupleFieldToMatchAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("data"))
}

func (ftm RegexMatchTupleFieldToMatchAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("type"))
}

type RegexMatchTupleState struct {
	RegexPatternSetId  string                             `json:"regex_pattern_set_id"`
	TextTransformation string                             `json:"text_transformation"`
	FieldToMatch       []RegexMatchTupleFieldToMatchState `json:"field_to_match"`
}

type RegexMatchTupleFieldToMatchState struct {
	Data string `json:"data"`
	Type string `json:"type"`
}
