// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_transit_gateway_vpc_attachment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ec2_transit_gateway_vpc_attachment.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEc2TransitGatewayVpcAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aetgva *Resource) Type() string {
	return "aws_ec2_transit_gateway_vpc_attachment"
}

// LocalName returns the local name for [Resource].
func (aetgva *Resource) LocalName() string {
	return aetgva.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aetgva *Resource) Configuration() interface{} {
	return aetgva.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aetgva *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aetgva)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aetgva *Resource) Dependencies() terra.Dependencies {
	return aetgva.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aetgva *Resource) LifecycleManagement() *terra.Lifecycle {
	return aetgva.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aetgva *Resource) Attributes() awsEc2TransitGatewayVpcAttachmentAttributes {
	return awsEc2TransitGatewayVpcAttachmentAttributes{ref: terra.ReferenceResource(aetgva)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aetgva *Resource) ImportState(state io.Reader) error {
	aetgva.state = &awsEc2TransitGatewayVpcAttachmentState{}
	if err := json.NewDecoder(state).Decode(aetgva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aetgva.Type(), aetgva.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aetgva *Resource) State() (*awsEc2TransitGatewayVpcAttachmentState, bool) {
	return aetgva.state, aetgva.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aetgva *Resource) StateMust() *awsEc2TransitGatewayVpcAttachmentState {
	if aetgva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aetgva.Type(), aetgva.LocalName()))
	}
	return aetgva.state
}

// Args contains the configurations for aws_ec2_transit_gateway_vpc_attachment.
type Args struct {
	// ApplianceModeSupport: string, optional
	ApplianceModeSupport terra.StringValue `hcl:"appliance_mode_support,attr"`
	// DnsSupport: string, optional
	DnsSupport terra.StringValue `hcl:"dns_support,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Ipv6Support: string, optional
	Ipv6Support terra.StringValue `hcl:"ipv6_support,attr"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// TransitGatewayDefaultRouteTableAssociation: bool, optional
	TransitGatewayDefaultRouteTableAssociation terra.BoolValue `hcl:"transit_gateway_default_route_table_association,attr"`
	// TransitGatewayDefaultRouteTablePropagation: bool, optional
	TransitGatewayDefaultRouteTablePropagation terra.BoolValue `hcl:"transit_gateway_default_route_table_propagation,attr"`
	// TransitGatewayId: string, required
	TransitGatewayId terra.StringValue `hcl:"transit_gateway_id,attr" validate:"required"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
}

type awsEc2TransitGatewayVpcAttachmentAttributes struct {
	ref terra.Reference
}

// ApplianceModeSupport returns a reference to field appliance_mode_support of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) ApplianceModeSupport() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("appliance_mode_support"))
}

// DnsSupport returns a reference to field dns_support of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) DnsSupport() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("dns_support"))
}

// Id returns a reference to field id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("id"))
}

// Ipv6Support returns a reference to field ipv6_support of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) Ipv6Support() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("ipv6_support"))
}

// SubnetIds returns a reference to field subnet_ids of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aetgva.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aetgva.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aetgva.ref.Append("tags_all"))
}

// TransitGatewayDefaultRouteTableAssociation returns a reference to field transit_gateway_default_route_table_association of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) TransitGatewayDefaultRouteTableAssociation() terra.BoolValue {
	return terra.ReferenceAsBool(aetgva.ref.Append("transit_gateway_default_route_table_association"))
}

// TransitGatewayDefaultRouteTablePropagation returns a reference to field transit_gateway_default_route_table_propagation of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) TransitGatewayDefaultRouteTablePropagation() terra.BoolValue {
	return terra.ReferenceAsBool(aetgva.ref.Append("transit_gateway_default_route_table_propagation"))
}

// TransitGatewayId returns a reference to field transit_gateway_id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("transit_gateway_id"))
}

// VpcId returns a reference to field vpc_id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("vpc_id"))
}

// VpcOwnerId returns a reference to field vpc_owner_id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva awsEc2TransitGatewayVpcAttachmentAttributes) VpcOwnerId() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("vpc_owner_id"))
}

type awsEc2TransitGatewayVpcAttachmentState struct {
	ApplianceModeSupport                       string            `json:"appliance_mode_support"`
	DnsSupport                                 string            `json:"dns_support"`
	Id                                         string            `json:"id"`
	Ipv6Support                                string            `json:"ipv6_support"`
	SubnetIds                                  []string          `json:"subnet_ids"`
	Tags                                       map[string]string `json:"tags"`
	TagsAll                                    map[string]string `json:"tags_all"`
	TransitGatewayDefaultRouteTableAssociation bool              `json:"transit_gateway_default_route_table_association"`
	TransitGatewayDefaultRouteTablePropagation bool              `json:"transit_gateway_default_route_table_propagation"`
	TransitGatewayId                           string            `json:"transit_gateway_id"`
	VpcId                                      string            `json:"vpc_id"`
	VpcOwnerId                                 string            `json:"vpc_owner_id"`
}
