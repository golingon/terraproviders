// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_transit_gateway_vpc_attachment

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ec2_transit_gateway_vpc_attachment.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aetgva *DataSource) DataSource() string {
	return "aws_ec2_transit_gateway_vpc_attachment"
}

// LocalName returns the local name for [DataSource].
func (aetgva *DataSource) LocalName() string {
	return aetgva.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aetgva *DataSource) Configuration() interface{} {
	return aetgva.Args
}

// Attributes returns the attributes for [DataSource].
func (aetgva *DataSource) Attributes() dataAwsEc2TransitGatewayVpcAttachmentAttributes {
	return dataAwsEc2TransitGatewayVpcAttachmentAttributes{ref: terra.ReferenceDataSource(aetgva)}
}

// DataArgs contains the configurations for aws_ec2_transit_gateway_vpc_attachment.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEc2TransitGatewayVpcAttachmentAttributes struct {
	ref terra.Reference
}

// ApplianceModeSupport returns a reference to field appliance_mode_support of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) ApplianceModeSupport() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("appliance_mode_support"))
}

// DnsSupport returns a reference to field dns_support of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) DnsSupport() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("dns_support"))
}

// Id returns a reference to field id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("id"))
}

// Ipv6Support returns a reference to field ipv6_support of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) Ipv6Support() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("ipv6_support"))
}

// SubnetIds returns a reference to field subnet_ids of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aetgva.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aetgva.ref.Append("tags"))
}

// TransitGatewayId returns a reference to field transit_gateway_id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("transit_gateway_id"))
}

// VpcId returns a reference to field vpc_id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("vpc_id"))
}

// VpcOwnerId returns a reference to field vpc_owner_id of aws_ec2_transit_gateway_vpc_attachment.
func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) VpcOwnerId() terra.StringValue {
	return terra.ReferenceAsString(aetgva.ref.Append("vpc_owner_id"))
}

func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](aetgva.ref.Append("filter"))
}

func (aetgva dataAwsEc2TransitGatewayVpcAttachmentAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aetgva.ref.Append("timeouts"))
}
