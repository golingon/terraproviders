// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_availability_zones

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_availability_zones.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aaz *DataSource) DataSource() string {
	return "aws_availability_zones"
}

// LocalName returns the local name for [DataSource].
func (aaz *DataSource) LocalName() string {
	return aaz.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aaz *DataSource) Configuration() interface{} {
	return aaz.Args
}

// Attributes returns the attributes for [DataSource].
func (aaz *DataSource) Attributes() dataAwsAvailabilityZonesAttributes {
	return dataAwsAvailabilityZonesAttributes{ref: terra.ReferenceDataSource(aaz)}
}

// DataArgs contains the configurations for aws_availability_zones.
type DataArgs struct {
	// AllAvailabilityZones: bool, optional
	AllAvailabilityZones terra.BoolValue `hcl:"all_availability_zones,attr"`
	// ExcludeNames: set of string, optional
	ExcludeNames terra.SetValue[terra.StringValue] `hcl:"exclude_names,attr"`
	// ExcludeZoneIds: set of string, optional
	ExcludeZoneIds terra.SetValue[terra.StringValue] `hcl:"exclude_zone_ids,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsAvailabilityZonesAttributes struct {
	ref terra.Reference
}

// AllAvailabilityZones returns a reference to field all_availability_zones of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) AllAvailabilityZones() terra.BoolValue {
	return terra.ReferenceAsBool(aaz.ref.Append("all_availability_zones"))
}

// ExcludeNames returns a reference to field exclude_names of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) ExcludeNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaz.ref.Append("exclude_names"))
}

// ExcludeZoneIds returns a reference to field exclude_zone_ids of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) ExcludeZoneIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaz.ref.Append("exclude_zone_ids"))
}

// GroupNames returns a reference to field group_names of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) GroupNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaz.ref.Append("group_names"))
}

// Id returns a reference to field id of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaz.ref.Append("id"))
}

// Names returns a reference to field names of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aaz.ref.Append("names"))
}

// State returns a reference to field state of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aaz.ref.Append("state"))
}

// ZoneIds returns a reference to field zone_ids of aws_availability_zones.
func (aaz dataAwsAvailabilityZonesAttributes) ZoneIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aaz.ref.Append("zone_ids"))
}

func (aaz dataAwsAvailabilityZonesAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](aaz.ref.Append("filter"))
}

func (aaz dataAwsAvailabilityZonesAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aaz.ref.Append("timeouts"))
}
