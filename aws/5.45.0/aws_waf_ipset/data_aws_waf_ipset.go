// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_waf_ipset

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_waf_ipset.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (awi *DataSource) DataSource() string {
	return "aws_waf_ipset"
}

// LocalName returns the local name for [DataSource].
func (awi *DataSource) LocalName() string {
	return awi.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (awi *DataSource) Configuration() interface{} {
	return awi.Args
}

// Attributes returns the attributes for [DataSource].
func (awi *DataSource) Attributes() dataAwsWafIpsetAttributes {
	return dataAwsWafIpsetAttributes{ref: terra.ReferenceDataSource(awi)}
}

// DataArgs contains the configurations for aws_waf_ipset.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type dataAwsWafIpsetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_waf_ipset.
func (awi dataAwsWafIpsetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awi.ref.Append("id"))
}

// Name returns a reference to field name of aws_waf_ipset.
func (awi dataAwsWafIpsetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(awi.ref.Append("name"))
}
