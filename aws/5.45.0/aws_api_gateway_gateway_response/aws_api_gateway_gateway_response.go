// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_gateway_response

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_api_gateway_gateway_response.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApiGatewayGatewayResponseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaggr *Resource) Type() string {
	return "aws_api_gateway_gateway_response"
}

// LocalName returns the local name for [Resource].
func (aaggr *Resource) LocalName() string {
	return aaggr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaggr *Resource) Configuration() interface{} {
	return aaggr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaggr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaggr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaggr *Resource) Dependencies() terra.Dependencies {
	return aaggr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaggr *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaggr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaggr *Resource) Attributes() awsApiGatewayGatewayResponseAttributes {
	return awsApiGatewayGatewayResponseAttributes{ref: terra.ReferenceResource(aaggr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaggr *Resource) ImportState(state io.Reader) error {
	aaggr.state = &awsApiGatewayGatewayResponseState{}
	if err := json.NewDecoder(state).Decode(aaggr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaggr.Type(), aaggr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaggr *Resource) State() (*awsApiGatewayGatewayResponseState, bool) {
	return aaggr.state, aaggr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaggr *Resource) StateMust() *awsApiGatewayGatewayResponseState {
	if aaggr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaggr.Type(), aaggr.LocalName()))
	}
	return aaggr.state
}

// Args contains the configurations for aws_api_gateway_gateway_response.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResponseParameters: map of string, optional
	ResponseParameters terra.MapValue[terra.StringValue] `hcl:"response_parameters,attr"`
	// ResponseTemplates: map of string, optional
	ResponseTemplates terra.MapValue[terra.StringValue] `hcl:"response_templates,attr"`
	// ResponseType: string, required
	ResponseType terra.StringValue `hcl:"response_type,attr" validate:"required"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// StatusCode: string, optional
	StatusCode terra.StringValue `hcl:"status_code,attr"`
}

type awsApiGatewayGatewayResponseAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_api_gateway_gateway_response.
func (aaggr awsApiGatewayGatewayResponseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaggr.ref.Append("id"))
}

// ResponseParameters returns a reference to field response_parameters of aws_api_gateway_gateway_response.
func (aaggr awsApiGatewayGatewayResponseAttributes) ResponseParameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaggr.ref.Append("response_parameters"))
}

// ResponseTemplates returns a reference to field response_templates of aws_api_gateway_gateway_response.
func (aaggr awsApiGatewayGatewayResponseAttributes) ResponseTemplates() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaggr.ref.Append("response_templates"))
}

// ResponseType returns a reference to field response_type of aws_api_gateway_gateway_response.
func (aaggr awsApiGatewayGatewayResponseAttributes) ResponseType() terra.StringValue {
	return terra.ReferenceAsString(aaggr.ref.Append("response_type"))
}

// RestApiId returns a reference to field rest_api_id of aws_api_gateway_gateway_response.
func (aaggr awsApiGatewayGatewayResponseAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceAsString(aaggr.ref.Append("rest_api_id"))
}

// StatusCode returns a reference to field status_code of aws_api_gateway_gateway_response.
func (aaggr awsApiGatewayGatewayResponseAttributes) StatusCode() terra.StringValue {
	return terra.ReferenceAsString(aaggr.ref.Append("status_code"))
}

type awsApiGatewayGatewayResponseState struct {
	Id                 string            `json:"id"`
	ResponseParameters map[string]string `json:"response_parameters"`
	ResponseTemplates  map[string]string `json:"response_templates"`
	ResponseType       string            `json:"response_type"`
	RestApiId          string            `json:"rest_api_id"`
	StatusCode         string            `json:"status_code"`
}
