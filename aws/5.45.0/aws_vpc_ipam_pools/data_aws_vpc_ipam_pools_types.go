// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_ipam_pools

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values: set of string, required
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataIpamPoolsAttributes struct {
	ref terra.Reference
}

func (ip DataIpamPoolsAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip DataIpamPoolsAttributes) InternalWithRef(ref terra.Reference) DataIpamPoolsAttributes {
	return DataIpamPoolsAttributes{ref: ref}
}

func (ip DataIpamPoolsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip DataIpamPoolsAttributes) AddressFamily() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("address_family"))
}

func (ip DataIpamPoolsAttributes) AllocationDefaultNetmaskLength() terra.NumberValue {
	return terra.ReferenceAsNumber(ip.ref.Append("allocation_default_netmask_length"))
}

func (ip DataIpamPoolsAttributes) AllocationMaxNetmaskLength() terra.NumberValue {
	return terra.ReferenceAsNumber(ip.ref.Append("allocation_max_netmask_length"))
}

func (ip DataIpamPoolsAttributes) AllocationMinNetmaskLength() terra.NumberValue {
	return terra.ReferenceAsNumber(ip.ref.Append("allocation_min_netmask_length"))
}

func (ip DataIpamPoolsAttributes) AllocationResourceTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ip.ref.Append("allocation_resource_tags"))
}

func (ip DataIpamPoolsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("arn"))
}

func (ip DataIpamPoolsAttributes) AutoImport() terra.BoolValue {
	return terra.ReferenceAsBool(ip.ref.Append("auto_import"))
}

func (ip DataIpamPoolsAttributes) AwsService() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("aws_service"))
}

func (ip DataIpamPoolsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("description"))
}

func (ip DataIpamPoolsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("id"))
}

func (ip DataIpamPoolsAttributes) IpamScopeId() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("ipam_scope_id"))
}

func (ip DataIpamPoolsAttributes) IpamScopeType() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("ipam_scope_type"))
}

func (ip DataIpamPoolsAttributes) Locale() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("locale"))
}

func (ip DataIpamPoolsAttributes) PoolDepth() terra.NumberValue {
	return terra.ReferenceAsNumber(ip.ref.Append("pool_depth"))
}

func (ip DataIpamPoolsAttributes) PubliclyAdvertisable() terra.BoolValue {
	return terra.ReferenceAsBool(ip.ref.Append("publicly_advertisable"))
}

func (ip DataIpamPoolsAttributes) SourceIpamPoolId() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("source_ipam_pool_id"))
}

func (ip DataIpamPoolsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("state"))
}

func (ip DataIpamPoolsAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ip.ref.Append("tags"))
}

type DataFilterAttributes struct {
	ref terra.Reference
}

func (f DataFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFilterAttributes) InternalWithRef(ref terra.Reference) DataFilterAttributes {
	return DataFilterAttributes{ref: ref}
}

func (f DataFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DataFilterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](f.ref.Append("values"))
}

type DataIpamPoolsState struct {
	AddressFamily                  string            `json:"address_family"`
	AllocationDefaultNetmaskLength float64           `json:"allocation_default_netmask_length"`
	AllocationMaxNetmaskLength     float64           `json:"allocation_max_netmask_length"`
	AllocationMinNetmaskLength     float64           `json:"allocation_min_netmask_length"`
	AllocationResourceTags         map[string]string `json:"allocation_resource_tags"`
	Arn                            string            `json:"arn"`
	AutoImport                     bool              `json:"auto_import"`
	AwsService                     string            `json:"aws_service"`
	Description                    string            `json:"description"`
	Id                             string            `json:"id"`
	IpamScopeId                    string            `json:"ipam_scope_id"`
	IpamScopeType                  string            `json:"ipam_scope_type"`
	Locale                         string            `json:"locale"`
	PoolDepth                      float64           `json:"pool_depth"`
	PubliclyAdvertisable           bool              `json:"publicly_advertisable"`
	SourceIpamPoolId               string            `json:"source_ipam_pool_id"`
	State                          string            `json:"state"`
	Tags                           map[string]string `json:"tags"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}
