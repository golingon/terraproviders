// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_risk_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccountTakeoverRiskConfiguration struct {
	// AccountTakeoverRiskConfigurationActions: required
	Actions *AccountTakeoverRiskConfigurationActions `hcl:"actions,block" validate:"required"`
	// AccountTakeoverRiskConfigurationNotifyConfiguration: required
	NotifyConfiguration *AccountTakeoverRiskConfigurationNotifyConfiguration `hcl:"notify_configuration,block" validate:"required"`
}

type AccountTakeoverRiskConfigurationActions struct {
	// AccountTakeoverRiskConfigurationActionsHighAction: optional
	HighAction *AccountTakeoverRiskConfigurationActionsHighAction `hcl:"high_action,block"`
	// AccountTakeoverRiskConfigurationActionsLowAction: optional
	LowAction *AccountTakeoverRiskConfigurationActionsLowAction `hcl:"low_action,block"`
	// AccountTakeoverRiskConfigurationActionsMediumAction: optional
	MediumAction *AccountTakeoverRiskConfigurationActionsMediumAction `hcl:"medium_action,block"`
}

type AccountTakeoverRiskConfigurationActionsHighAction struct {
	// EventAction: string, required
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
	// Notify: bool, required
	Notify terra.BoolValue `hcl:"notify,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationActionsLowAction struct {
	// EventAction: string, required
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
	// Notify: bool, required
	Notify terra.BoolValue `hcl:"notify,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationActionsMediumAction struct {
	// EventAction: string, required
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
	// Notify: bool, required
	Notify terra.BoolValue `hcl:"notify,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationNotifyConfiguration struct {
	// From: string, optional
	From terra.StringValue `hcl:"from,attr"`
	// ReplyTo: string, optional
	ReplyTo terra.StringValue `hcl:"reply_to,attr"`
	// SourceArn: string, required
	SourceArn terra.StringValue `hcl:"source_arn,attr" validate:"required"`
	// AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail: optional
	BlockEmail *AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail `hcl:"block_email,block"`
	// AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail: optional
	MfaEmail *AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail `hcl:"mfa_email,block"`
	// AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail: optional
	NoActionEmail *AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail `hcl:"no_action_email,block"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail struct {
	// HtmlBody: string, required
	HtmlBody terra.StringValue `hcl:"html_body,attr" validate:"required"`
	// Subject: string, required
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// TextBody: string, required
	TextBody terra.StringValue `hcl:"text_body,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail struct {
	// HtmlBody: string, required
	HtmlBody terra.StringValue `hcl:"html_body,attr" validate:"required"`
	// Subject: string, required
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// TextBody: string, required
	TextBody terra.StringValue `hcl:"text_body,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail struct {
	// HtmlBody: string, required
	HtmlBody terra.StringValue `hcl:"html_body,attr" validate:"required"`
	// Subject: string, required
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// TextBody: string, required
	TextBody terra.StringValue `hcl:"text_body,attr" validate:"required"`
}

type CompromisedCredentialsRiskConfiguration struct {
	// EventFilter: set of string, optional
	EventFilter terra.SetValue[terra.StringValue] `hcl:"event_filter,attr"`
	// CompromisedCredentialsRiskConfigurationActions: required
	Actions *CompromisedCredentialsRiskConfigurationActions `hcl:"actions,block" validate:"required"`
}

type CompromisedCredentialsRiskConfigurationActions struct {
	// EventAction: string, required
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
}

type RiskExceptionConfiguration struct {
	// BlockedIpRangeList: set of string, optional
	BlockedIpRangeList terra.SetValue[terra.StringValue] `hcl:"blocked_ip_range_list,attr"`
	// SkippedIpRangeList: set of string, optional
	SkippedIpRangeList terra.SetValue[terra.StringValue] `hcl:"skipped_ip_range_list,attr"`
}

type AccountTakeoverRiskConfigurationAttributes struct {
	ref terra.Reference
}

func (atrc AccountTakeoverRiskConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return atrc.ref, nil
}

func (atrc AccountTakeoverRiskConfigurationAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationAttributes {
	return AccountTakeoverRiskConfigurationAttributes{ref: ref}
}

func (atrc AccountTakeoverRiskConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atrc.ref.InternalTokens()
}

func (atrc AccountTakeoverRiskConfigurationAttributes) Actions() terra.ListValue[AccountTakeoverRiskConfigurationActionsAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationActionsAttributes](atrc.ref.Append("actions"))
}

func (atrc AccountTakeoverRiskConfigurationAttributes) NotifyConfiguration() terra.ListValue[AccountTakeoverRiskConfigurationNotifyConfigurationAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationNotifyConfigurationAttributes](atrc.ref.Append("notify_configuration"))
}

type AccountTakeoverRiskConfigurationActionsAttributes struct {
	ref terra.Reference
}

func (a AccountTakeoverRiskConfigurationActionsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AccountTakeoverRiskConfigurationActionsAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationActionsAttributes {
	return AccountTakeoverRiskConfigurationActionsAttributes{ref: ref}
}

func (a AccountTakeoverRiskConfigurationActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a AccountTakeoverRiskConfigurationActionsAttributes) HighAction() terra.ListValue[AccountTakeoverRiskConfigurationActionsHighActionAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationActionsHighActionAttributes](a.ref.Append("high_action"))
}

func (a AccountTakeoverRiskConfigurationActionsAttributes) LowAction() terra.ListValue[AccountTakeoverRiskConfigurationActionsLowActionAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationActionsLowActionAttributes](a.ref.Append("low_action"))
}

func (a AccountTakeoverRiskConfigurationActionsAttributes) MediumAction() terra.ListValue[AccountTakeoverRiskConfigurationActionsMediumActionAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationActionsMediumActionAttributes](a.ref.Append("medium_action"))
}

type AccountTakeoverRiskConfigurationActionsHighActionAttributes struct {
	ref terra.Reference
}

func (ha AccountTakeoverRiskConfigurationActionsHighActionAttributes) InternalRef() (terra.Reference, error) {
	return ha.ref, nil
}

func (ha AccountTakeoverRiskConfigurationActionsHighActionAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationActionsHighActionAttributes {
	return AccountTakeoverRiskConfigurationActionsHighActionAttributes{ref: ref}
}

func (ha AccountTakeoverRiskConfigurationActionsHighActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ha.ref.InternalTokens()
}

func (ha AccountTakeoverRiskConfigurationActionsHighActionAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(ha.ref.Append("event_action"))
}

func (ha AccountTakeoverRiskConfigurationActionsHighActionAttributes) Notify() terra.BoolValue {
	return terra.ReferenceAsBool(ha.ref.Append("notify"))
}

type AccountTakeoverRiskConfigurationActionsLowActionAttributes struct {
	ref terra.Reference
}

func (la AccountTakeoverRiskConfigurationActionsLowActionAttributes) InternalRef() (terra.Reference, error) {
	return la.ref, nil
}

func (la AccountTakeoverRiskConfigurationActionsLowActionAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationActionsLowActionAttributes {
	return AccountTakeoverRiskConfigurationActionsLowActionAttributes{ref: ref}
}

func (la AccountTakeoverRiskConfigurationActionsLowActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return la.ref.InternalTokens()
}

func (la AccountTakeoverRiskConfigurationActionsLowActionAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(la.ref.Append("event_action"))
}

func (la AccountTakeoverRiskConfigurationActionsLowActionAttributes) Notify() terra.BoolValue {
	return terra.ReferenceAsBool(la.ref.Append("notify"))
}

type AccountTakeoverRiskConfigurationActionsMediumActionAttributes struct {
	ref terra.Reference
}

func (ma AccountTakeoverRiskConfigurationActionsMediumActionAttributes) InternalRef() (terra.Reference, error) {
	return ma.ref, nil
}

func (ma AccountTakeoverRiskConfigurationActionsMediumActionAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationActionsMediumActionAttributes {
	return AccountTakeoverRiskConfigurationActionsMediumActionAttributes{ref: ref}
}

func (ma AccountTakeoverRiskConfigurationActionsMediumActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ma.ref.InternalTokens()
}

func (ma AccountTakeoverRiskConfigurationActionsMediumActionAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("event_action"))
}

func (ma AccountTakeoverRiskConfigurationActionsMediumActionAttributes) Notify() terra.BoolValue {
	return terra.ReferenceAsBool(ma.ref.Append("notify"))
}

type AccountTakeoverRiskConfigurationNotifyConfigurationAttributes struct {
	ref terra.Reference
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationNotifyConfigurationAttributes {
	return AccountTakeoverRiskConfigurationNotifyConfigurationAttributes{ref: ref}
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) From() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("from"))
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) ReplyTo() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("reply_to"))
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) SourceArn() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("source_arn"))
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) BlockEmail() terra.ListValue[AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes](nc.ref.Append("block_email"))
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) MfaEmail() terra.ListValue[AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes](nc.ref.Append("mfa_email"))
}

func (nc AccountTakeoverRiskConfigurationNotifyConfigurationAttributes) NoActionEmail() terra.ListValue[AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes] {
	return terra.ReferenceAsList[AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes](nc.ref.Append("no_action_email"))
}

type AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes struct {
	ref terra.Reference
}

func (be AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) InternalRef() (terra.Reference, error) {
	return be.ref, nil
}

func (be AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes {
	return AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes{ref: ref}
}

func (be AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return be.ref.InternalTokens()
}

func (be AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) HtmlBody() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("html_body"))
}

func (be AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("subject"))
}

func (be AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) TextBody() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("text_body"))
}

type AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes struct {
	ref terra.Reference
}

func (me AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) InternalRef() (terra.Reference, error) {
	return me.ref, nil
}

func (me AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes {
	return AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes{ref: ref}
}

func (me AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return me.ref.InternalTokens()
}

func (me AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) HtmlBody() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("html_body"))
}

func (me AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("subject"))
}

func (me AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) TextBody() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("text_body"))
}

type AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes struct {
	ref terra.Reference
}

func (nae AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) InternalRef() (terra.Reference, error) {
	return nae.ref, nil
}

func (nae AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) InternalWithRef(ref terra.Reference) AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes {
	return AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes{ref: ref}
}

func (nae AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nae.ref.InternalTokens()
}

func (nae AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) HtmlBody() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("html_body"))
}

func (nae AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("subject"))
}

func (nae AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) TextBody() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("text_body"))
}

type CompromisedCredentialsRiskConfigurationAttributes struct {
	ref terra.Reference
}

func (ccrc CompromisedCredentialsRiskConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ccrc.ref, nil
}

func (ccrc CompromisedCredentialsRiskConfigurationAttributes) InternalWithRef(ref terra.Reference) CompromisedCredentialsRiskConfigurationAttributes {
	return CompromisedCredentialsRiskConfigurationAttributes{ref: ref}
}

func (ccrc CompromisedCredentialsRiskConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ccrc.ref.InternalTokens()
}

func (ccrc CompromisedCredentialsRiskConfigurationAttributes) EventFilter() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ccrc.ref.Append("event_filter"))
}

func (ccrc CompromisedCredentialsRiskConfigurationAttributes) Actions() terra.ListValue[CompromisedCredentialsRiskConfigurationActionsAttributes] {
	return terra.ReferenceAsList[CompromisedCredentialsRiskConfigurationActionsAttributes](ccrc.ref.Append("actions"))
}

type CompromisedCredentialsRiskConfigurationActionsAttributes struct {
	ref terra.Reference
}

func (a CompromisedCredentialsRiskConfigurationActionsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a CompromisedCredentialsRiskConfigurationActionsAttributes) InternalWithRef(ref terra.Reference) CompromisedCredentialsRiskConfigurationActionsAttributes {
	return CompromisedCredentialsRiskConfigurationActionsAttributes{ref: ref}
}

func (a CompromisedCredentialsRiskConfigurationActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a CompromisedCredentialsRiskConfigurationActionsAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("event_action"))
}

type RiskExceptionConfigurationAttributes struct {
	ref terra.Reference
}

func (rec RiskExceptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rec.ref, nil
}

func (rec RiskExceptionConfigurationAttributes) InternalWithRef(ref terra.Reference) RiskExceptionConfigurationAttributes {
	return RiskExceptionConfigurationAttributes{ref: ref}
}

func (rec RiskExceptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rec.ref.InternalTokens()
}

func (rec RiskExceptionConfigurationAttributes) BlockedIpRangeList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rec.ref.Append("blocked_ip_range_list"))
}

func (rec RiskExceptionConfigurationAttributes) SkippedIpRangeList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rec.ref.Append("skipped_ip_range_list"))
}

type AccountTakeoverRiskConfigurationState struct {
	Actions             []AccountTakeoverRiskConfigurationActionsState             `json:"actions"`
	NotifyConfiguration []AccountTakeoverRiskConfigurationNotifyConfigurationState `json:"notify_configuration"`
}

type AccountTakeoverRiskConfigurationActionsState struct {
	HighAction   []AccountTakeoverRiskConfigurationActionsHighActionState   `json:"high_action"`
	LowAction    []AccountTakeoverRiskConfigurationActionsLowActionState    `json:"low_action"`
	MediumAction []AccountTakeoverRiskConfigurationActionsMediumActionState `json:"medium_action"`
}

type AccountTakeoverRiskConfigurationActionsHighActionState struct {
	EventAction string `json:"event_action"`
	Notify      bool   `json:"notify"`
}

type AccountTakeoverRiskConfigurationActionsLowActionState struct {
	EventAction string `json:"event_action"`
	Notify      bool   `json:"notify"`
}

type AccountTakeoverRiskConfigurationActionsMediumActionState struct {
	EventAction string `json:"event_action"`
	Notify      bool   `json:"notify"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationState struct {
	From          string                                                                  `json:"from"`
	ReplyTo       string                                                                  `json:"reply_to"`
	SourceArn     string                                                                  `json:"source_arn"`
	BlockEmail    []AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailState    `json:"block_email"`
	MfaEmail      []AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailState      `json:"mfa_email"`
	NoActionEmail []AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailState `json:"no_action_email"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailState struct {
	HtmlBody string `json:"html_body"`
	Subject  string `json:"subject"`
	TextBody string `json:"text_body"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailState struct {
	HtmlBody string `json:"html_body"`
	Subject  string `json:"subject"`
	TextBody string `json:"text_body"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailState struct {
	HtmlBody string `json:"html_body"`
	Subject  string `json:"subject"`
	TextBody string `json:"text_body"`
}

type CompromisedCredentialsRiskConfigurationState struct {
	EventFilter []string                                              `json:"event_filter"`
	Actions     []CompromisedCredentialsRiskConfigurationActionsState `json:"actions"`
}

type CompromisedCredentialsRiskConfigurationActionsState struct {
	EventAction string `json:"event_action"`
}

type RiskExceptionConfigurationState struct {
	BlockedIpRangeList []string `json:"blocked_ip_range_list"`
	SkippedIpRangeList []string `json:"skipped_ip_range_list"`
}
