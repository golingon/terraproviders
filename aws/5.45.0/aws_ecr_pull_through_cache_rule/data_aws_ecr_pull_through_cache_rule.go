// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ecr_pull_through_cache_rule

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ecr_pull_through_cache_rule.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aeptcr *DataSource) DataSource() string {
	return "aws_ecr_pull_through_cache_rule"
}

// LocalName returns the local name for [DataSource].
func (aeptcr *DataSource) LocalName() string {
	return aeptcr.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aeptcr *DataSource) Configuration() interface{} {
	return aeptcr.Args
}

// Attributes returns the attributes for [DataSource].
func (aeptcr *DataSource) Attributes() dataAwsEcrPullThroughCacheRuleAttributes {
	return dataAwsEcrPullThroughCacheRuleAttributes{ref: terra.ReferenceDataSource(aeptcr)}
}

// DataArgs contains the configurations for aws_ecr_pull_through_cache_rule.
type DataArgs struct {
	// EcrRepositoryPrefix: string, required
	EcrRepositoryPrefix terra.StringValue `hcl:"ecr_repository_prefix,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsEcrPullThroughCacheRuleAttributes struct {
	ref terra.Reference
}

// CredentialArn returns a reference to field credential_arn of aws_ecr_pull_through_cache_rule.
func (aeptcr dataAwsEcrPullThroughCacheRuleAttributes) CredentialArn() terra.StringValue {
	return terra.ReferenceAsString(aeptcr.ref.Append("credential_arn"))
}

// EcrRepositoryPrefix returns a reference to field ecr_repository_prefix of aws_ecr_pull_through_cache_rule.
func (aeptcr dataAwsEcrPullThroughCacheRuleAttributes) EcrRepositoryPrefix() terra.StringValue {
	return terra.ReferenceAsString(aeptcr.ref.Append("ecr_repository_prefix"))
}

// Id returns a reference to field id of aws_ecr_pull_through_cache_rule.
func (aeptcr dataAwsEcrPullThroughCacheRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aeptcr.ref.Append("id"))
}

// RegistryId returns a reference to field registry_id of aws_ecr_pull_through_cache_rule.
func (aeptcr dataAwsEcrPullThroughCacheRuleAttributes) RegistryId() terra.StringValue {
	return terra.ReferenceAsString(aeptcr.ref.Append("registry_id"))
}

// UpstreamRegistryUrl returns a reference to field upstream_registry_url of aws_ecr_pull_through_cache_rule.
func (aeptcr dataAwsEcrPullThroughCacheRuleAttributes) UpstreamRegistryUrl() terra.StringValue {
	return terra.ReferenceAsString(aeptcr.ref.Append("upstream_registry_url"))
}
