// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appconfig_extension_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_appconfig_extension_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsAppconfigExtensionAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaea *Resource) Type() string {
	return "aws_appconfig_extension_association"
}

// LocalName returns the local name for [Resource].
func (aaea *Resource) LocalName() string {
	return aaea.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaea *Resource) Configuration() interface{} {
	return aaea.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaea *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaea)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaea *Resource) Dependencies() terra.Dependencies {
	return aaea.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaea *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaea.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaea *Resource) Attributes() awsAppconfigExtensionAssociationAttributes {
	return awsAppconfigExtensionAssociationAttributes{ref: terra.ReferenceResource(aaea)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaea *Resource) ImportState(state io.Reader) error {
	aaea.state = &awsAppconfigExtensionAssociationState{}
	if err := json.NewDecoder(state).Decode(aaea.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaea.Type(), aaea.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaea *Resource) State() (*awsAppconfigExtensionAssociationState, bool) {
	return aaea.state, aaea.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaea *Resource) StateMust() *awsAppconfigExtensionAssociationState {
	if aaea.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaea.Type(), aaea.LocalName()))
	}
	return aaea.state
}

// Args contains the configurations for aws_appconfig_extension_association.
type Args struct {
	// ExtensionArn: string, required
	ExtensionArn terra.StringValue `hcl:"extension_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type awsAppconfigExtensionAssociationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_appconfig_extension_association.
func (aaea awsAppconfigExtensionAssociationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aaea.ref.Append("arn"))
}

// ExtensionArn returns a reference to field extension_arn of aws_appconfig_extension_association.
func (aaea awsAppconfigExtensionAssociationAttributes) ExtensionArn() terra.StringValue {
	return terra.ReferenceAsString(aaea.ref.Append("extension_arn"))
}

// ExtensionVersion returns a reference to field extension_version of aws_appconfig_extension_association.
func (aaea awsAppconfigExtensionAssociationAttributes) ExtensionVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(aaea.ref.Append("extension_version"))
}

// Id returns a reference to field id of aws_appconfig_extension_association.
func (aaea awsAppconfigExtensionAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaea.ref.Append("id"))
}

// Parameters returns a reference to field parameters of aws_appconfig_extension_association.
func (aaea awsAppconfigExtensionAssociationAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaea.ref.Append("parameters"))
}

// ResourceArn returns a reference to field resource_arn of aws_appconfig_extension_association.
func (aaea awsAppconfigExtensionAssociationAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(aaea.ref.Append("resource_arn"))
}

type awsAppconfigExtensionAssociationState struct {
	Arn              string            `json:"arn"`
	ExtensionArn     string            `json:"extension_arn"`
	ExtensionVersion float64           `json:"extension_version"`
	Id               string            `json:"id"`
	Parameters       map[string]string `json:"parameters"`
	ResourceArn      string            `json:"resource_arn"`
}
