// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kms_secret

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataSecret struct {
	// Context: map of string, optional
	Context terra.MapValue[terra.StringValue] `hcl:"context,attr"`
	// GrantTokens: list of string, optional
	GrantTokens terra.ListValue[terra.StringValue] `hcl:"grant_tokens,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Payload: string, required
	Payload terra.StringValue `hcl:"payload,attr" validate:"required"`
}

type DataSecretAttributes struct {
	ref terra.Reference
}

func (s DataSecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSecretAttributes) InternalWithRef(ref terra.Reference) DataSecretAttributes {
	return DataSecretAttributes{ref: ref}
}

func (s DataSecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSecretAttributes) Context() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](s.ref.Append("context"))
}

func (s DataSecretAttributes) GrantTokens() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("grant_tokens"))
}

func (s DataSecretAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DataSecretAttributes) Payload() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("payload"))
}

type DataSecretState struct {
	Context     map[string]string `json:"context"`
	GrantTokens []string          `json:"grant_tokens"`
	Name        string            `json:"name"`
	Payload     string            `json:"payload"`
}
