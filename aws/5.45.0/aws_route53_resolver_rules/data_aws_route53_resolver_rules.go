// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53_resolver_rules

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_route53_resolver_rules.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arrr *DataSource) DataSource() string {
	return "aws_route53_resolver_rules"
}

// LocalName returns the local name for [DataSource].
func (arrr *DataSource) LocalName() string {
	return arrr.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arrr *DataSource) Configuration() interface{} {
	return arrr.Args
}

// Attributes returns the attributes for [DataSource].
func (arrr *DataSource) Attributes() dataAwsRoute53ResolverRulesAttributes {
	return dataAwsRoute53ResolverRulesAttributes{ref: terra.ReferenceDataSource(arrr)}
}

// DataArgs contains the configurations for aws_route53_resolver_rules.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NameRegex: string, optional
	NameRegex terra.StringValue `hcl:"name_regex,attr"`
	// OwnerId: string, optional
	OwnerId terra.StringValue `hcl:"owner_id,attr"`
	// ResolverEndpointId: string, optional
	ResolverEndpointId terra.StringValue `hcl:"resolver_endpoint_id,attr"`
	// RuleType: string, optional
	RuleType terra.StringValue `hcl:"rule_type,attr"`
	// ShareStatus: string, optional
	ShareStatus terra.StringValue `hcl:"share_status,attr"`
}

type dataAwsRoute53ResolverRulesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arrr.ref.Append("id"))
}

// NameRegex returns a reference to field name_regex of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) NameRegex() terra.StringValue {
	return terra.ReferenceAsString(arrr.ref.Append("name_regex"))
}

// OwnerId returns a reference to field owner_id of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(arrr.ref.Append("owner_id"))
}

// ResolverEndpointId returns a reference to field resolver_endpoint_id of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) ResolverEndpointId() terra.StringValue {
	return terra.ReferenceAsString(arrr.ref.Append("resolver_endpoint_id"))
}

// ResolverRuleIds returns a reference to field resolver_rule_ids of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) ResolverRuleIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arrr.ref.Append("resolver_rule_ids"))
}

// RuleType returns a reference to field rule_type of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) RuleType() terra.StringValue {
	return terra.ReferenceAsString(arrr.ref.Append("rule_type"))
}

// ShareStatus returns a reference to field share_status of aws_route53_resolver_rules.
func (arrr dataAwsRoute53ResolverRulesAttributes) ShareStatus() terra.StringValue {
	return terra.ReferenceAsString(arrr.ref.Append("share_status"))
}
