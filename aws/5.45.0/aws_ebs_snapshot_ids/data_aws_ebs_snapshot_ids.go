// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ebs_snapshot_ids

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ebs_snapshot_ids.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aesi *DataSource) DataSource() string {
	return "aws_ebs_snapshot_ids"
}

// LocalName returns the local name for [DataSource].
func (aesi *DataSource) LocalName() string {
	return aesi.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aesi *DataSource) Configuration() interface{} {
	return aesi.Args
}

// Attributes returns the attributes for [DataSource].
func (aesi *DataSource) Attributes() dataAwsEbsSnapshotIdsAttributes {
	return dataAwsEbsSnapshotIdsAttributes{ref: terra.ReferenceDataSource(aesi)}
}

// DataArgs contains the configurations for aws_ebs_snapshot_ids.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Owners: list of string, optional
	Owners terra.ListValue[terra.StringValue] `hcl:"owners,attr"`
	// RestorableByUserIds: list of string, optional
	RestorableByUserIds terra.ListValue[terra.StringValue] `hcl:"restorable_by_user_ids,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEbsSnapshotIdsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ebs_snapshot_ids.
func (aesi dataAwsEbsSnapshotIdsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aesi.ref.Append("id"))
}

// Ids returns a reference to field ids of aws_ebs_snapshot_ids.
func (aesi dataAwsEbsSnapshotIdsAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aesi.ref.Append("ids"))
}

// Owners returns a reference to field owners of aws_ebs_snapshot_ids.
func (aesi dataAwsEbsSnapshotIdsAttributes) Owners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aesi.ref.Append("owners"))
}

// RestorableByUserIds returns a reference to field restorable_by_user_ids of aws_ebs_snapshot_ids.
func (aesi dataAwsEbsSnapshotIdsAttributes) RestorableByUserIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aesi.ref.Append("restorable_by_user_ids"))
}

func (aesi dataAwsEbsSnapshotIdsAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](aesi.ref.Append("filter"))
}

func (aesi dataAwsEbsSnapshotIdsAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aesi.ref.Append("timeouts"))
}
