// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_response_headers_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CorsConfig struct {
	// AccessControlAllowCredentials: bool, required
	AccessControlAllowCredentials terra.BoolValue `hcl:"access_control_allow_credentials,attr" validate:"required"`
	// AccessControlMaxAgeSec: number, optional
	AccessControlMaxAgeSec terra.NumberValue `hcl:"access_control_max_age_sec,attr"`
	// OriginOverride: bool, required
	OriginOverride terra.BoolValue `hcl:"origin_override,attr" validate:"required"`
	// CorsConfigAccessControlAllowHeaders: required
	AccessControlAllowHeaders *CorsConfigAccessControlAllowHeaders `hcl:"access_control_allow_headers,block" validate:"required"`
	// CorsConfigAccessControlAllowMethods: required
	AccessControlAllowMethods *CorsConfigAccessControlAllowMethods `hcl:"access_control_allow_methods,block" validate:"required"`
	// CorsConfigAccessControlAllowOrigins: required
	AccessControlAllowOrigins *CorsConfigAccessControlAllowOrigins `hcl:"access_control_allow_origins,block" validate:"required"`
	// CorsConfigAccessControlExposeHeaders: optional
	AccessControlExposeHeaders *CorsConfigAccessControlExposeHeaders `hcl:"access_control_expose_headers,block"`
}

type CorsConfigAccessControlAllowHeaders struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CorsConfigAccessControlAllowMethods struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CorsConfigAccessControlAllowOrigins struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CorsConfigAccessControlExposeHeaders struct {
	// Items: set of string, optional
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CustomHeadersConfig struct {
	// CustomHeadersConfigItems: min=0
	Items []CustomHeadersConfigItems `hcl:"items,block" validate:"min=0"`
}

type CustomHeadersConfigItems struct {
	// Header: string, required
	Header terra.StringValue `hcl:"header,attr" validate:"required"`
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RemoveHeadersConfig struct {
	// RemoveHeadersConfigItems: min=0
	Items []RemoveHeadersConfigItems `hcl:"items,block" validate:"min=0"`
}

type RemoveHeadersConfigItems struct {
	// Header: string, required
	Header terra.StringValue `hcl:"header,attr" validate:"required"`
}

type SecurityHeadersConfig struct {
	// SecurityHeadersConfigContentSecurityPolicy: optional
	ContentSecurityPolicy *SecurityHeadersConfigContentSecurityPolicy `hcl:"content_security_policy,block"`
	// SecurityHeadersConfigContentTypeOptions: optional
	ContentTypeOptions *SecurityHeadersConfigContentTypeOptions `hcl:"content_type_options,block"`
	// SecurityHeadersConfigFrameOptions: optional
	FrameOptions *SecurityHeadersConfigFrameOptions `hcl:"frame_options,block"`
	// SecurityHeadersConfigReferrerPolicy: optional
	ReferrerPolicy *SecurityHeadersConfigReferrerPolicy `hcl:"referrer_policy,block"`
	// SecurityHeadersConfigStrictTransportSecurity: optional
	StrictTransportSecurity *SecurityHeadersConfigStrictTransportSecurity `hcl:"strict_transport_security,block"`
	// SecurityHeadersConfigXssProtection: optional
	XssProtection *SecurityHeadersConfigXssProtection `hcl:"xss_protection,block"`
}

type SecurityHeadersConfigContentSecurityPolicy struct {
	// ContentSecurityPolicy: string, required
	ContentSecurityPolicy terra.StringValue `hcl:"content_security_policy,attr" validate:"required"`
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
}

type SecurityHeadersConfigContentTypeOptions struct {
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
}

type SecurityHeadersConfigFrameOptions struct {
	// FrameOption: string, required
	FrameOption terra.StringValue `hcl:"frame_option,attr" validate:"required"`
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
}

type SecurityHeadersConfigReferrerPolicy struct {
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// ReferrerPolicy: string, required
	ReferrerPolicy terra.StringValue `hcl:"referrer_policy,attr" validate:"required"`
}

type SecurityHeadersConfigStrictTransportSecurity struct {
	// AccessControlMaxAgeSec: number, required
	AccessControlMaxAgeSec terra.NumberValue `hcl:"access_control_max_age_sec,attr" validate:"required"`
	// IncludeSubdomains: bool, optional
	IncludeSubdomains terra.BoolValue `hcl:"include_subdomains,attr"`
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// Preload: bool, optional
	Preload terra.BoolValue `hcl:"preload,attr"`
}

type SecurityHeadersConfigXssProtection struct {
	// ModeBlock: bool, optional
	ModeBlock terra.BoolValue `hcl:"mode_block,attr"`
	// Override: bool, required
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// Protection: bool, required
	Protection terra.BoolValue `hcl:"protection,attr" validate:"required"`
	// ReportUri: string, optional
	ReportUri terra.StringValue `hcl:"report_uri,attr"`
}

type ServerTimingHeadersConfig struct {
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// SamplingRate: number, required
	SamplingRate terra.NumberValue `hcl:"sampling_rate,attr" validate:"required"`
}

type CorsConfigAttributes struct {
	ref terra.Reference
}

func (cc CorsConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc CorsConfigAttributes) InternalWithRef(ref terra.Reference) CorsConfigAttributes {
	return CorsConfigAttributes{ref: ref}
}

func (cc CorsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc CorsConfigAttributes) AccessControlAllowCredentials() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("access_control_allow_credentials"))
}

func (cc CorsConfigAttributes) AccessControlMaxAgeSec() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("access_control_max_age_sec"))
}

func (cc CorsConfigAttributes) OriginOverride() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("origin_override"))
}

func (cc CorsConfigAttributes) AccessControlAllowHeaders() terra.ListValue[CorsConfigAccessControlAllowHeadersAttributes] {
	return terra.ReferenceAsList[CorsConfigAccessControlAllowHeadersAttributes](cc.ref.Append("access_control_allow_headers"))
}

func (cc CorsConfigAttributes) AccessControlAllowMethods() terra.ListValue[CorsConfigAccessControlAllowMethodsAttributes] {
	return terra.ReferenceAsList[CorsConfigAccessControlAllowMethodsAttributes](cc.ref.Append("access_control_allow_methods"))
}

func (cc CorsConfigAttributes) AccessControlAllowOrigins() terra.ListValue[CorsConfigAccessControlAllowOriginsAttributes] {
	return terra.ReferenceAsList[CorsConfigAccessControlAllowOriginsAttributes](cc.ref.Append("access_control_allow_origins"))
}

func (cc CorsConfigAttributes) AccessControlExposeHeaders() terra.ListValue[CorsConfigAccessControlExposeHeadersAttributes] {
	return terra.ReferenceAsList[CorsConfigAccessControlExposeHeadersAttributes](cc.ref.Append("access_control_expose_headers"))
}

type CorsConfigAccessControlAllowHeadersAttributes struct {
	ref terra.Reference
}

func (acah CorsConfigAccessControlAllowHeadersAttributes) InternalRef() (terra.Reference, error) {
	return acah.ref, nil
}

func (acah CorsConfigAccessControlAllowHeadersAttributes) InternalWithRef(ref terra.Reference) CorsConfigAccessControlAllowHeadersAttributes {
	return CorsConfigAccessControlAllowHeadersAttributes{ref: ref}
}

func (acah CorsConfigAccessControlAllowHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acah.ref.InternalTokens()
}

func (acah CorsConfigAccessControlAllowHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acah.ref.Append("items"))
}

type CorsConfigAccessControlAllowMethodsAttributes struct {
	ref terra.Reference
}

func (acam CorsConfigAccessControlAllowMethodsAttributes) InternalRef() (terra.Reference, error) {
	return acam.ref, nil
}

func (acam CorsConfigAccessControlAllowMethodsAttributes) InternalWithRef(ref terra.Reference) CorsConfigAccessControlAllowMethodsAttributes {
	return CorsConfigAccessControlAllowMethodsAttributes{ref: ref}
}

func (acam CorsConfigAccessControlAllowMethodsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acam.ref.InternalTokens()
}

func (acam CorsConfigAccessControlAllowMethodsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acam.ref.Append("items"))
}

type CorsConfigAccessControlAllowOriginsAttributes struct {
	ref terra.Reference
}

func (acao CorsConfigAccessControlAllowOriginsAttributes) InternalRef() (terra.Reference, error) {
	return acao.ref, nil
}

func (acao CorsConfigAccessControlAllowOriginsAttributes) InternalWithRef(ref terra.Reference) CorsConfigAccessControlAllowOriginsAttributes {
	return CorsConfigAccessControlAllowOriginsAttributes{ref: ref}
}

func (acao CorsConfigAccessControlAllowOriginsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acao.ref.InternalTokens()
}

func (acao CorsConfigAccessControlAllowOriginsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acao.ref.Append("items"))
}

type CorsConfigAccessControlExposeHeadersAttributes struct {
	ref terra.Reference
}

func (aceh CorsConfigAccessControlExposeHeadersAttributes) InternalRef() (terra.Reference, error) {
	return aceh.ref, nil
}

func (aceh CorsConfigAccessControlExposeHeadersAttributes) InternalWithRef(ref terra.Reference) CorsConfigAccessControlExposeHeadersAttributes {
	return CorsConfigAccessControlExposeHeadersAttributes{ref: ref}
}

func (aceh CorsConfigAccessControlExposeHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aceh.ref.InternalTokens()
}

func (aceh CorsConfigAccessControlExposeHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aceh.ref.Append("items"))
}

type CustomHeadersConfigAttributes struct {
	ref terra.Reference
}

func (chc CustomHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return chc.ref, nil
}

func (chc CustomHeadersConfigAttributes) InternalWithRef(ref terra.Reference) CustomHeadersConfigAttributes {
	return CustomHeadersConfigAttributes{ref: ref}
}

func (chc CustomHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return chc.ref.InternalTokens()
}

func (chc CustomHeadersConfigAttributes) Items() terra.SetValue[CustomHeadersConfigItemsAttributes] {
	return terra.ReferenceAsSet[CustomHeadersConfigItemsAttributes](chc.ref.Append("items"))
}

type CustomHeadersConfigItemsAttributes struct {
	ref terra.Reference
}

func (i CustomHeadersConfigItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i CustomHeadersConfigItemsAttributes) InternalWithRef(ref terra.Reference) CustomHeadersConfigItemsAttributes {
	return CustomHeadersConfigItemsAttributes{ref: ref}
}

func (i CustomHeadersConfigItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i CustomHeadersConfigItemsAttributes) Header() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("header"))
}

func (i CustomHeadersConfigItemsAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("override"))
}

func (i CustomHeadersConfigItemsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("value"))
}

type RemoveHeadersConfigAttributes struct {
	ref terra.Reference
}

func (rhc RemoveHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return rhc.ref, nil
}

func (rhc RemoveHeadersConfigAttributes) InternalWithRef(ref terra.Reference) RemoveHeadersConfigAttributes {
	return RemoveHeadersConfigAttributes{ref: ref}
}

func (rhc RemoveHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rhc.ref.InternalTokens()
}

func (rhc RemoveHeadersConfigAttributes) Items() terra.SetValue[RemoveHeadersConfigItemsAttributes] {
	return terra.ReferenceAsSet[RemoveHeadersConfigItemsAttributes](rhc.ref.Append("items"))
}

type RemoveHeadersConfigItemsAttributes struct {
	ref terra.Reference
}

func (i RemoveHeadersConfigItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i RemoveHeadersConfigItemsAttributes) InternalWithRef(ref terra.Reference) RemoveHeadersConfigItemsAttributes {
	return RemoveHeadersConfigItemsAttributes{ref: ref}
}

func (i RemoveHeadersConfigItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i RemoveHeadersConfigItemsAttributes) Header() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("header"))
}

type SecurityHeadersConfigAttributes struct {
	ref terra.Reference
}

func (shc SecurityHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return shc.ref, nil
}

func (shc SecurityHeadersConfigAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigAttributes {
	return SecurityHeadersConfigAttributes{ref: ref}
}

func (shc SecurityHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return shc.ref.InternalTokens()
}

func (shc SecurityHeadersConfigAttributes) ContentSecurityPolicy() terra.ListValue[SecurityHeadersConfigContentSecurityPolicyAttributes] {
	return terra.ReferenceAsList[SecurityHeadersConfigContentSecurityPolicyAttributes](shc.ref.Append("content_security_policy"))
}

func (shc SecurityHeadersConfigAttributes) ContentTypeOptions() terra.ListValue[SecurityHeadersConfigContentTypeOptionsAttributes] {
	return terra.ReferenceAsList[SecurityHeadersConfigContentTypeOptionsAttributes](shc.ref.Append("content_type_options"))
}

func (shc SecurityHeadersConfigAttributes) FrameOptions() terra.ListValue[SecurityHeadersConfigFrameOptionsAttributes] {
	return terra.ReferenceAsList[SecurityHeadersConfigFrameOptionsAttributes](shc.ref.Append("frame_options"))
}

func (shc SecurityHeadersConfigAttributes) ReferrerPolicy() terra.ListValue[SecurityHeadersConfigReferrerPolicyAttributes] {
	return terra.ReferenceAsList[SecurityHeadersConfigReferrerPolicyAttributes](shc.ref.Append("referrer_policy"))
}

func (shc SecurityHeadersConfigAttributes) StrictTransportSecurity() terra.ListValue[SecurityHeadersConfigStrictTransportSecurityAttributes] {
	return terra.ReferenceAsList[SecurityHeadersConfigStrictTransportSecurityAttributes](shc.ref.Append("strict_transport_security"))
}

func (shc SecurityHeadersConfigAttributes) XssProtection() terra.ListValue[SecurityHeadersConfigXssProtectionAttributes] {
	return terra.ReferenceAsList[SecurityHeadersConfigXssProtectionAttributes](shc.ref.Append("xss_protection"))
}

type SecurityHeadersConfigContentSecurityPolicyAttributes struct {
	ref terra.Reference
}

func (csp SecurityHeadersConfigContentSecurityPolicyAttributes) InternalRef() (terra.Reference, error) {
	return csp.ref, nil
}

func (csp SecurityHeadersConfigContentSecurityPolicyAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigContentSecurityPolicyAttributes {
	return SecurityHeadersConfigContentSecurityPolicyAttributes{ref: ref}
}

func (csp SecurityHeadersConfigContentSecurityPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csp.ref.InternalTokens()
}

func (csp SecurityHeadersConfigContentSecurityPolicyAttributes) ContentSecurityPolicy() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("content_security_policy"))
}

func (csp SecurityHeadersConfigContentSecurityPolicyAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(csp.ref.Append("override"))
}

type SecurityHeadersConfigContentTypeOptionsAttributes struct {
	ref terra.Reference
}

func (cto SecurityHeadersConfigContentTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cto.ref, nil
}

func (cto SecurityHeadersConfigContentTypeOptionsAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigContentTypeOptionsAttributes {
	return SecurityHeadersConfigContentTypeOptionsAttributes{ref: ref}
}

func (cto SecurityHeadersConfigContentTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cto.ref.InternalTokens()
}

func (cto SecurityHeadersConfigContentTypeOptionsAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(cto.ref.Append("override"))
}

type SecurityHeadersConfigFrameOptionsAttributes struct {
	ref terra.Reference
}

func (fo SecurityHeadersConfigFrameOptionsAttributes) InternalRef() (terra.Reference, error) {
	return fo.ref, nil
}

func (fo SecurityHeadersConfigFrameOptionsAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigFrameOptionsAttributes {
	return SecurityHeadersConfigFrameOptionsAttributes{ref: ref}
}

func (fo SecurityHeadersConfigFrameOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fo.ref.InternalTokens()
}

func (fo SecurityHeadersConfigFrameOptionsAttributes) FrameOption() terra.StringValue {
	return terra.ReferenceAsString(fo.ref.Append("frame_option"))
}

func (fo SecurityHeadersConfigFrameOptionsAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(fo.ref.Append("override"))
}

type SecurityHeadersConfigReferrerPolicyAttributes struct {
	ref terra.Reference
}

func (rp SecurityHeadersConfigReferrerPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp SecurityHeadersConfigReferrerPolicyAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigReferrerPolicyAttributes {
	return SecurityHeadersConfigReferrerPolicyAttributes{ref: ref}
}

func (rp SecurityHeadersConfigReferrerPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp SecurityHeadersConfigReferrerPolicyAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(rp.ref.Append("override"))
}

func (rp SecurityHeadersConfigReferrerPolicyAttributes) ReferrerPolicy() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("referrer_policy"))
}

type SecurityHeadersConfigStrictTransportSecurityAttributes struct {
	ref terra.Reference
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) InternalRef() (terra.Reference, error) {
	return sts.ref, nil
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigStrictTransportSecurityAttributes {
	return SecurityHeadersConfigStrictTransportSecurityAttributes{ref: ref}
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sts.ref.InternalTokens()
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) AccessControlMaxAgeSec() terra.NumberValue {
	return terra.ReferenceAsNumber(sts.ref.Append("access_control_max_age_sec"))
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) IncludeSubdomains() terra.BoolValue {
	return terra.ReferenceAsBool(sts.ref.Append("include_subdomains"))
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(sts.ref.Append("override"))
}

func (sts SecurityHeadersConfigStrictTransportSecurityAttributes) Preload() terra.BoolValue {
	return terra.ReferenceAsBool(sts.ref.Append("preload"))
}

type SecurityHeadersConfigXssProtectionAttributes struct {
	ref terra.Reference
}

func (xp SecurityHeadersConfigXssProtectionAttributes) InternalRef() (terra.Reference, error) {
	return xp.ref, nil
}

func (xp SecurityHeadersConfigXssProtectionAttributes) InternalWithRef(ref terra.Reference) SecurityHeadersConfigXssProtectionAttributes {
	return SecurityHeadersConfigXssProtectionAttributes{ref: ref}
}

func (xp SecurityHeadersConfigXssProtectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return xp.ref.InternalTokens()
}

func (xp SecurityHeadersConfigXssProtectionAttributes) ModeBlock() terra.BoolValue {
	return terra.ReferenceAsBool(xp.ref.Append("mode_block"))
}

func (xp SecurityHeadersConfigXssProtectionAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(xp.ref.Append("override"))
}

func (xp SecurityHeadersConfigXssProtectionAttributes) Protection() terra.BoolValue {
	return terra.ReferenceAsBool(xp.ref.Append("protection"))
}

func (xp SecurityHeadersConfigXssProtectionAttributes) ReportUri() terra.StringValue {
	return terra.ReferenceAsString(xp.ref.Append("report_uri"))
}

type ServerTimingHeadersConfigAttributes struct {
	ref terra.Reference
}

func (sthc ServerTimingHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return sthc.ref, nil
}

func (sthc ServerTimingHeadersConfigAttributes) InternalWithRef(ref terra.Reference) ServerTimingHeadersConfigAttributes {
	return ServerTimingHeadersConfigAttributes{ref: ref}
}

func (sthc ServerTimingHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sthc.ref.InternalTokens()
}

func (sthc ServerTimingHeadersConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sthc.ref.Append("enabled"))
}

func (sthc ServerTimingHeadersConfigAttributes) SamplingRate() terra.NumberValue {
	return terra.ReferenceAsNumber(sthc.ref.Append("sampling_rate"))
}

type CorsConfigState struct {
	AccessControlAllowCredentials bool                                        `json:"access_control_allow_credentials"`
	AccessControlMaxAgeSec        float64                                     `json:"access_control_max_age_sec"`
	OriginOverride                bool                                        `json:"origin_override"`
	AccessControlAllowHeaders     []CorsConfigAccessControlAllowHeadersState  `json:"access_control_allow_headers"`
	AccessControlAllowMethods     []CorsConfigAccessControlAllowMethodsState  `json:"access_control_allow_methods"`
	AccessControlAllowOrigins     []CorsConfigAccessControlAllowOriginsState  `json:"access_control_allow_origins"`
	AccessControlExposeHeaders    []CorsConfigAccessControlExposeHeadersState `json:"access_control_expose_headers"`
}

type CorsConfigAccessControlAllowHeadersState struct {
	Items []string `json:"items"`
}

type CorsConfigAccessControlAllowMethodsState struct {
	Items []string `json:"items"`
}

type CorsConfigAccessControlAllowOriginsState struct {
	Items []string `json:"items"`
}

type CorsConfigAccessControlExposeHeadersState struct {
	Items []string `json:"items"`
}

type CustomHeadersConfigState struct {
	Items []CustomHeadersConfigItemsState `json:"items"`
}

type CustomHeadersConfigItemsState struct {
	Header   string `json:"header"`
	Override bool   `json:"override"`
	Value    string `json:"value"`
}

type RemoveHeadersConfigState struct {
	Items []RemoveHeadersConfigItemsState `json:"items"`
}

type RemoveHeadersConfigItemsState struct {
	Header string `json:"header"`
}

type SecurityHeadersConfigState struct {
	ContentSecurityPolicy   []SecurityHeadersConfigContentSecurityPolicyState   `json:"content_security_policy"`
	ContentTypeOptions      []SecurityHeadersConfigContentTypeOptionsState      `json:"content_type_options"`
	FrameOptions            []SecurityHeadersConfigFrameOptionsState            `json:"frame_options"`
	ReferrerPolicy          []SecurityHeadersConfigReferrerPolicyState          `json:"referrer_policy"`
	StrictTransportSecurity []SecurityHeadersConfigStrictTransportSecurityState `json:"strict_transport_security"`
	XssProtection           []SecurityHeadersConfigXssProtectionState           `json:"xss_protection"`
}

type SecurityHeadersConfigContentSecurityPolicyState struct {
	ContentSecurityPolicy string `json:"content_security_policy"`
	Override              bool   `json:"override"`
}

type SecurityHeadersConfigContentTypeOptionsState struct {
	Override bool `json:"override"`
}

type SecurityHeadersConfigFrameOptionsState struct {
	FrameOption string `json:"frame_option"`
	Override    bool   `json:"override"`
}

type SecurityHeadersConfigReferrerPolicyState struct {
	Override       bool   `json:"override"`
	ReferrerPolicy string `json:"referrer_policy"`
}

type SecurityHeadersConfigStrictTransportSecurityState struct {
	AccessControlMaxAgeSec float64 `json:"access_control_max_age_sec"`
	IncludeSubdomains      bool    `json:"include_subdomains"`
	Override               bool    `json:"override"`
	Preload                bool    `json:"preload"`
}

type SecurityHeadersConfigXssProtectionState struct {
	ModeBlock  bool   `json:"mode_block"`
	Override   bool   `json:"override"`
	Protection bool   `json:"protection"`
	ReportUri  string `json:"report_uri"`
}

type ServerTimingHeadersConfigState struct {
	Enabled      bool    `json:"enabled"`
	SamplingRate float64 `json:"sampling_rate"`
}
