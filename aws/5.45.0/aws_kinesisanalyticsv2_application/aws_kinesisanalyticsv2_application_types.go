// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kinesisanalyticsv2_application

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ApplicationConfiguration struct {
	// ApplicationConfigurationApplicationCodeConfiguration: required
	ApplicationCodeConfiguration *ApplicationConfigurationApplicationCodeConfiguration `hcl:"application_code_configuration,block" validate:"required"`
	// ApplicationConfigurationApplicationSnapshotConfiguration: optional
	ApplicationSnapshotConfiguration *ApplicationConfigurationApplicationSnapshotConfiguration `hcl:"application_snapshot_configuration,block"`
	// ApplicationConfigurationEnvironmentProperties: optional
	EnvironmentProperties *ApplicationConfigurationEnvironmentProperties `hcl:"environment_properties,block"`
	// ApplicationConfigurationFlinkApplicationConfiguration: optional
	FlinkApplicationConfiguration *ApplicationConfigurationFlinkApplicationConfiguration `hcl:"flink_application_configuration,block"`
	// ApplicationConfigurationRunConfiguration: optional
	RunConfiguration *ApplicationConfigurationRunConfiguration `hcl:"run_configuration,block"`
	// ApplicationConfigurationSqlApplicationConfiguration: optional
	SqlApplicationConfiguration *ApplicationConfigurationSqlApplicationConfiguration `hcl:"sql_application_configuration,block"`
	// ApplicationConfigurationVpcConfiguration: optional
	VpcConfiguration *ApplicationConfigurationVpcConfiguration `hcl:"vpc_configuration,block"`
}

type ApplicationConfigurationApplicationCodeConfiguration struct {
	// CodeContentType: string, required
	CodeContentType terra.StringValue `hcl:"code_content_type,attr" validate:"required"`
	// ApplicationConfigurationApplicationCodeConfigurationCodeContent: optional
	CodeContent *ApplicationConfigurationApplicationCodeConfigurationCodeContent `hcl:"code_content,block"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContent struct {
	// TextContent: string, optional
	TextContent terra.StringValue `hcl:"text_content,attr"`
	// ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation: optional
	S3ContentLocation *ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation `hcl:"s3_content_location,block"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation struct {
	// BucketArn: string, required
	BucketArn terra.StringValue `hcl:"bucket_arn,attr" validate:"required"`
	// FileKey: string, required
	FileKey terra.StringValue `hcl:"file_key,attr" validate:"required"`
	// ObjectVersion: string, optional
	ObjectVersion terra.StringValue `hcl:"object_version,attr"`
}

type ApplicationConfigurationApplicationSnapshotConfiguration struct {
	// SnapshotsEnabled: bool, required
	SnapshotsEnabled terra.BoolValue `hcl:"snapshots_enabled,attr" validate:"required"`
}

type ApplicationConfigurationEnvironmentProperties struct {
	// ApplicationConfigurationEnvironmentPropertiesPropertyGroup: min=1,max=50
	PropertyGroup []ApplicationConfigurationEnvironmentPropertiesPropertyGroup `hcl:"property_group,block" validate:"min=1,max=50"`
}

type ApplicationConfigurationEnvironmentPropertiesPropertyGroup struct {
	// PropertyGroupId: string, required
	PropertyGroupId terra.StringValue `hcl:"property_group_id,attr" validate:"required"`
	// PropertyMap: map of string, required
	PropertyMap terra.MapValue[terra.StringValue] `hcl:"property_map,attr" validate:"required"`
}

type ApplicationConfigurationFlinkApplicationConfiguration struct {
	// ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration: optional
	CheckpointConfiguration *ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration `hcl:"checkpoint_configuration,block"`
	// ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration: optional
	MonitoringConfiguration *ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration `hcl:"monitoring_configuration,block"`
	// ApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration: optional
	ParallelismConfiguration *ApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration `hcl:"parallelism_configuration,block"`
}

type ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration struct {
	// CheckpointInterval: number, optional
	CheckpointInterval terra.NumberValue `hcl:"checkpoint_interval,attr"`
	// CheckpointingEnabled: bool, optional
	CheckpointingEnabled terra.BoolValue `hcl:"checkpointing_enabled,attr"`
	// ConfigurationType: string, required
	ConfigurationType terra.StringValue `hcl:"configuration_type,attr" validate:"required"`
	// MinPauseBetweenCheckpoints: number, optional
	MinPauseBetweenCheckpoints terra.NumberValue `hcl:"min_pause_between_checkpoints,attr"`
}

type ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration struct {
	// ConfigurationType: string, required
	ConfigurationType terra.StringValue `hcl:"configuration_type,attr" validate:"required"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
	// MetricsLevel: string, optional
	MetricsLevel terra.StringValue `hcl:"metrics_level,attr"`
}

type ApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration struct {
	// AutoScalingEnabled: bool, optional
	AutoScalingEnabled terra.BoolValue `hcl:"auto_scaling_enabled,attr"`
	// ConfigurationType: string, required
	ConfigurationType terra.StringValue `hcl:"configuration_type,attr" validate:"required"`
	// Parallelism: number, optional
	Parallelism terra.NumberValue `hcl:"parallelism,attr"`
	// ParallelismPerKpu: number, optional
	ParallelismPerKpu terra.NumberValue `hcl:"parallelism_per_kpu,attr"`
}

type ApplicationConfigurationRunConfiguration struct {
	// ApplicationConfigurationRunConfigurationApplicationRestoreConfiguration: optional
	ApplicationRestoreConfiguration *ApplicationConfigurationRunConfigurationApplicationRestoreConfiguration `hcl:"application_restore_configuration,block"`
	// ApplicationConfigurationRunConfigurationFlinkRunConfiguration: optional
	FlinkRunConfiguration *ApplicationConfigurationRunConfigurationFlinkRunConfiguration `hcl:"flink_run_configuration,block"`
}

type ApplicationConfigurationRunConfigurationApplicationRestoreConfiguration struct {
	// ApplicationRestoreType: string, optional
	ApplicationRestoreType terra.StringValue `hcl:"application_restore_type,attr"`
	// SnapshotName: string, optional
	SnapshotName terra.StringValue `hcl:"snapshot_name,attr"`
}

type ApplicationConfigurationRunConfigurationFlinkRunConfiguration struct {
	// AllowNonRestoredState: bool, optional
	AllowNonRestoredState terra.BoolValue `hcl:"allow_non_restored_state,attr"`
}

type ApplicationConfigurationSqlApplicationConfiguration struct {
	// ApplicationConfigurationSqlApplicationConfigurationInput: optional
	Input *ApplicationConfigurationSqlApplicationConfigurationInput `hcl:"input,block"`
	// ApplicationConfigurationSqlApplicationConfigurationOutput: min=0,max=3
	Output []ApplicationConfigurationSqlApplicationConfigurationOutput `hcl:"output,block" validate:"min=0,max=3"`
	// ApplicationConfigurationSqlApplicationConfigurationReferenceDataSource: optional
	ReferenceDataSource *ApplicationConfigurationSqlApplicationConfigurationReferenceDataSource `hcl:"reference_data_source,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationInput struct {
	// NamePrefix: string, required
	NamePrefix terra.StringValue `hcl:"name_prefix,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputParallelism: optional
	InputParallelism *ApplicationConfigurationSqlApplicationConfigurationInputInputParallelism `hcl:"input_parallelism,block"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration: optional
	InputProcessingConfiguration *ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration `hcl:"input_processing_configuration,block"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputSchema: required
	InputSchema *ApplicationConfigurationSqlApplicationConfigurationInputInputSchema `hcl:"input_schema,block" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration: min=0
	InputStartingPositionConfiguration []ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration `hcl:"input_starting_position_configuration,block" validate:"min=0"`
	// ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput: optional
	KinesisFirehoseInput *ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput `hcl:"kinesis_firehose_input,block"`
	// ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput: optional
	KinesisStreamsInput *ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput `hcl:"kinesis_streams_input,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputParallelism struct {
	// Count: number, optional
	Count terra.NumberValue `hcl:"count,attr"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration struct {
	// ApplicationConfigurationSqlApplicationConfigurationE5495824: required
	InputLambdaProcessor *ApplicationConfigurationSqlApplicationConfigurationE5495824 `hcl:"input_lambda_processor,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationE5495824 struct {
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputSchema struct {
	// RecordEncoding: string, optional
	RecordEncoding terra.StringValue `hcl:"record_encoding,attr"`
	// ApplicationConfigurationSqlApplicationConfiguration204Adc8C: min=1,max=1000
	RecordColumn []ApplicationConfigurationSqlApplicationConfiguration204Adc8C `hcl:"record_column,block" validate:"min=1,max=1000"`
	// ApplicationConfigurationSqlApplicationConfiguration2A04Ed58: required
	RecordFormat *ApplicationConfigurationSqlApplicationConfiguration2A04Ed58 `hcl:"record_format,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration204Adc8C struct {
	// Mapping: string, optional
	Mapping terra.StringValue `hcl:"mapping,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SqlType: string, required
	SqlType terra.StringValue `hcl:"sql_type,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration2A04Ed58 struct {
	// RecordFormatType: string, required
	RecordFormatType terra.StringValue `hcl:"record_format_type,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfiguration7A87Fff5: required
	MappingParameters *ApplicationConfigurationSqlApplicationConfiguration7A87Fff5 `hcl:"mapping_parameters,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration7A87Fff5 struct {
	// ApplicationConfigurationSqlApplicationConfigurationC224A52E: optional
	CsvMappingParameters *ApplicationConfigurationSqlApplicationConfigurationC224A52E `hcl:"csv_mapping_parameters,block"`
	// ApplicationConfigurationSqlApplicationConfiguration204F7F24: optional
	JsonMappingParameters *ApplicationConfigurationSqlApplicationConfiguration204F7F24 `hcl:"json_mapping_parameters,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationC224A52E struct {
	// RecordColumnDelimiter: string, required
	RecordColumnDelimiter terra.StringValue `hcl:"record_column_delimiter,attr" validate:"required"`
	// RecordRowDelimiter: string, required
	RecordRowDelimiter terra.StringValue `hcl:"record_row_delimiter,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration204F7F24 struct {
	// RecordRowPath: string, required
	RecordRowPath terra.StringValue `hcl:"record_row_path,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration struct {
	// InputStartingPosition: string, optional
	InputStartingPosition terra.StringValue `hcl:"input_starting_position,attr"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput struct {
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput struct {
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutput struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema: required
	DestinationSchema *ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema `hcl:"destination_schema,block" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput: optional
	KinesisFirehoseOutput *ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput `hcl:"kinesis_firehose_output,block"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput: optional
	KinesisStreamsOutput *ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput `hcl:"kinesis_streams_output,block"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput: optional
	LambdaOutput *ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput `hcl:"lambda_output,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema struct {
	// RecordFormatType: string, required
	RecordFormatType terra.StringValue `hcl:"record_format_type,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput struct {
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput struct {
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput struct {
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSource struct {
	// TableName: string, required
	TableName terra.StringValue `hcl:"table_name,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema: required
	ReferenceSchema *ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema `hcl:"reference_schema,block" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource: required
	S3ReferenceDataSource *ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource `hcl:"s3_reference_data_source,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema struct {
	// RecordEncoding: string, optional
	RecordEncoding terra.StringValue `hcl:"record_encoding,attr"`
	// ApplicationConfigurationSqlApplicationConfiguration19Cec7E2: min=1,max=1000
	RecordColumn []ApplicationConfigurationSqlApplicationConfiguration19Cec7E2 `hcl:"record_column,block" validate:"min=1,max=1000"`
	// ApplicationConfigurationSqlApplicationConfiguration2B9C949E: required
	RecordFormat *ApplicationConfigurationSqlApplicationConfiguration2B9C949E `hcl:"record_format,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration19Cec7E2 struct {
	// Mapping: string, optional
	Mapping terra.StringValue `hcl:"mapping,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SqlType: string, required
	SqlType terra.StringValue `hcl:"sql_type,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration2B9C949E struct {
	// RecordFormatType: string, required
	RecordFormatType terra.StringValue `hcl:"record_format_type,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationEbc7091F: required
	MappingParameters *ApplicationConfigurationSqlApplicationConfigurationEbc7091F `hcl:"mapping_parameters,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationEbc7091F struct {
	// ApplicationConfigurationSqlApplicationConfigurationF24D03Ed: optional
	CsvMappingParameters *ApplicationConfigurationSqlApplicationConfigurationF24D03Ed `hcl:"csv_mapping_parameters,block"`
	// ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7: optional
	JsonMappingParameters *ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7 `hcl:"json_mapping_parameters,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationF24D03Ed struct {
	// RecordColumnDelimiter: string, required
	RecordColumnDelimiter terra.StringValue `hcl:"record_column_delimiter,attr" validate:"required"`
	// RecordRowDelimiter: string, required
	RecordRowDelimiter terra.StringValue `hcl:"record_row_delimiter,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7 struct {
	// RecordRowPath: string, required
	RecordRowPath terra.StringValue `hcl:"record_row_path,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource struct {
	// BucketArn: string, required
	BucketArn terra.StringValue `hcl:"bucket_arn,attr" validate:"required"`
	// FileKey: string, required
	FileKey terra.StringValue `hcl:"file_key,attr" validate:"required"`
}

type ApplicationConfigurationVpcConfiguration struct {
	// SecurityGroupIds: set of string, required
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type CloudwatchLoggingOptions struct {
	// LogStreamArn: string, required
	LogStreamArn terra.StringValue `hcl:"log_stream_arn,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ApplicationConfigurationAttributes struct {
	ref terra.Reference
}

func (ac ApplicationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac ApplicationConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationAttributes {
	return ApplicationConfigurationAttributes{ref: ref}
}

func (ac ApplicationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac ApplicationConfigurationAttributes) ApplicationCodeConfiguration() terra.ListValue[ApplicationConfigurationApplicationCodeConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationApplicationCodeConfigurationAttributes](ac.ref.Append("application_code_configuration"))
}

func (ac ApplicationConfigurationAttributes) ApplicationSnapshotConfiguration() terra.ListValue[ApplicationConfigurationApplicationSnapshotConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationApplicationSnapshotConfigurationAttributes](ac.ref.Append("application_snapshot_configuration"))
}

func (ac ApplicationConfigurationAttributes) EnvironmentProperties() terra.ListValue[ApplicationConfigurationEnvironmentPropertiesAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationEnvironmentPropertiesAttributes](ac.ref.Append("environment_properties"))
}

func (ac ApplicationConfigurationAttributes) FlinkApplicationConfiguration() terra.ListValue[ApplicationConfigurationFlinkApplicationConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationFlinkApplicationConfigurationAttributes](ac.ref.Append("flink_application_configuration"))
}

func (ac ApplicationConfigurationAttributes) RunConfiguration() terra.ListValue[ApplicationConfigurationRunConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationRunConfigurationAttributes](ac.ref.Append("run_configuration"))
}

func (ac ApplicationConfigurationAttributes) SqlApplicationConfiguration() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationAttributes](ac.ref.Append("sql_application_configuration"))
}

func (ac ApplicationConfigurationAttributes) VpcConfiguration() terra.ListValue[ApplicationConfigurationVpcConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationVpcConfigurationAttributes](ac.ref.Append("vpc_configuration"))
}

type ApplicationConfigurationApplicationCodeConfigurationAttributes struct {
	ref terra.Reference
}

func (acc ApplicationConfigurationApplicationCodeConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return acc.ref, nil
}

func (acc ApplicationConfigurationApplicationCodeConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationApplicationCodeConfigurationAttributes {
	return ApplicationConfigurationApplicationCodeConfigurationAttributes{ref: ref}
}

func (acc ApplicationConfigurationApplicationCodeConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acc.ref.InternalTokens()
}

func (acc ApplicationConfigurationApplicationCodeConfigurationAttributes) CodeContentType() terra.StringValue {
	return terra.ReferenceAsString(acc.ref.Append("code_content_type"))
}

func (acc ApplicationConfigurationApplicationCodeConfigurationAttributes) CodeContent() terra.ListValue[ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes](acc.ref.Append("code_content"))
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes struct {
	ref terra.Reference
}

func (cc ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes {
	return ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes{ref: ref}
}

func (cc ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes) TextContent() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("text_content"))
}

func (cc ApplicationConfigurationApplicationCodeConfigurationCodeContentAttributes) S3ContentLocation() terra.ListValue[ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes](cc.ref.Append("s3_content_location"))
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes struct {
	ref terra.Reference
}

func (scl ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) InternalRef() (terra.Reference, error) {
	return scl.ref, nil
}

func (scl ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes {
	return ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes{ref: ref}
}

func (scl ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scl.ref.InternalTokens()
}

func (scl ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) BucketArn() terra.StringValue {
	return terra.ReferenceAsString(scl.ref.Append("bucket_arn"))
}

func (scl ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) FileKey() terra.StringValue {
	return terra.ReferenceAsString(scl.ref.Append("file_key"))
}

func (scl ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) ObjectVersion() terra.StringValue {
	return terra.ReferenceAsString(scl.ref.Append("object_version"))
}

type ApplicationConfigurationApplicationSnapshotConfigurationAttributes struct {
	ref terra.Reference
}

func (asc ApplicationConfigurationApplicationSnapshotConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return asc.ref, nil
}

func (asc ApplicationConfigurationApplicationSnapshotConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationApplicationSnapshotConfigurationAttributes {
	return ApplicationConfigurationApplicationSnapshotConfigurationAttributes{ref: ref}
}

func (asc ApplicationConfigurationApplicationSnapshotConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return asc.ref.InternalTokens()
}

func (asc ApplicationConfigurationApplicationSnapshotConfigurationAttributes) SnapshotsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asc.ref.Append("snapshots_enabled"))
}

type ApplicationConfigurationEnvironmentPropertiesAttributes struct {
	ref terra.Reference
}

func (ep ApplicationConfigurationEnvironmentPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return ep.ref, nil
}

func (ep ApplicationConfigurationEnvironmentPropertiesAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationEnvironmentPropertiesAttributes {
	return ApplicationConfigurationEnvironmentPropertiesAttributes{ref: ref}
}

func (ep ApplicationConfigurationEnvironmentPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ep.ref.InternalTokens()
}

func (ep ApplicationConfigurationEnvironmentPropertiesAttributes) PropertyGroup() terra.SetValue[ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes] {
	return terra.ReferenceAsSet[ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes](ep.ref.Append("property_group"))
}

type ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes struct {
	ref terra.Reference
}

func (pg ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) InternalRef() (terra.Reference, error) {
	return pg.ref, nil
}

func (pg ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes {
	return ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes{ref: ref}
}

func (pg ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pg.ref.InternalTokens()
}

func (pg ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) PropertyGroupId() terra.StringValue {
	return terra.ReferenceAsString(pg.ref.Append("property_group_id"))
}

func (pg ApplicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) PropertyMap() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](pg.ref.Append("property_map"))
}

type ApplicationConfigurationFlinkApplicationConfigurationAttributes struct {
	ref terra.Reference
}

func (fac ApplicationConfigurationFlinkApplicationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return fac.ref, nil
}

func (fac ApplicationConfigurationFlinkApplicationConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationFlinkApplicationConfigurationAttributes {
	return ApplicationConfigurationFlinkApplicationConfigurationAttributes{ref: ref}
}

func (fac ApplicationConfigurationFlinkApplicationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fac.ref.InternalTokens()
}

func (fac ApplicationConfigurationFlinkApplicationConfigurationAttributes) CheckpointConfiguration() terra.ListValue[ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes](fac.ref.Append("checkpoint_configuration"))
}

func (fac ApplicationConfigurationFlinkApplicationConfigurationAttributes) MonitoringConfiguration() terra.ListValue[ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes](fac.ref.Append("monitoring_configuration"))
}

func (fac ApplicationConfigurationFlinkApplicationConfigurationAttributes) ParallelismConfiguration() terra.ListValue[ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes](fac.ref.Append("parallelism_configuration"))
}

type ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes struct {
	ref terra.Reference
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes {
	return ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes{ref: ref}
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) CheckpointInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("checkpoint_interval"))
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) CheckpointingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("checkpointing_enabled"))
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) ConfigurationType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("configuration_type"))
}

func (cc ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) MinPauseBetweenCheckpoints() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("min_pause_between_checkpoints"))
}

type ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes struct {
	ref terra.Reference
}

func (mc ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes {
	return ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes{ref: ref}
}

func (mc ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) ConfigurationType() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("configuration_type"))
}

func (mc ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("log_level"))
}

func (mc ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) MetricsLevel() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("metrics_level"))
}

type ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes struct {
	ref terra.Reference
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes {
	return ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes{ref: ref}
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) AutoScalingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("auto_scaling_enabled"))
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) ConfigurationType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("configuration_type"))
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) Parallelism() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("parallelism"))
}

func (pc ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) ParallelismPerKpu() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("parallelism_per_kpu"))
}

type ApplicationConfigurationRunConfigurationAttributes struct {
	ref terra.Reference
}

func (rc ApplicationConfigurationRunConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc ApplicationConfigurationRunConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationRunConfigurationAttributes {
	return ApplicationConfigurationRunConfigurationAttributes{ref: ref}
}

func (rc ApplicationConfigurationRunConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc ApplicationConfigurationRunConfigurationAttributes) ApplicationRestoreConfiguration() terra.ListValue[ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes](rc.ref.Append("application_restore_configuration"))
}

func (rc ApplicationConfigurationRunConfigurationAttributes) FlinkRunConfiguration() terra.ListValue[ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes](rc.ref.Append("flink_run_configuration"))
}

type ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes struct {
	ref terra.Reference
}

func (arc ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return arc.ref, nil
}

func (arc ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes {
	return ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes{ref: ref}
}

func (arc ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return arc.ref.InternalTokens()
}

func (arc ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) ApplicationRestoreType() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("application_restore_type"))
}

func (arc ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) SnapshotName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("snapshot_name"))
}

type ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes struct {
	ref terra.Reference
}

func (frc ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return frc.ref, nil
}

func (frc ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes {
	return ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes{ref: ref}
}

func (frc ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return frc.ref.InternalTokens()
}

func (frc ApplicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) AllowNonRestoredState() terra.BoolValue {
	return terra.ReferenceAsBool(frc.ref.Append("allow_non_restored_state"))
}

type ApplicationConfigurationSqlApplicationConfigurationAttributes struct {
	ref terra.Reference
}

func (sac ApplicationConfigurationSqlApplicationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sac.ref, nil
}

func (sac ApplicationConfigurationSqlApplicationConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationAttributes{ref: ref}
}

func (sac ApplicationConfigurationSqlApplicationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sac.ref.InternalTokens()
}

func (sac ApplicationConfigurationSqlApplicationConfigurationAttributes) Input() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputAttributes](sac.ref.Append("input"))
}

func (sac ApplicationConfigurationSqlApplicationConfigurationAttributes) Output() terra.SetValue[ApplicationConfigurationSqlApplicationConfigurationOutputAttributes] {
	return terra.ReferenceAsSet[ApplicationConfigurationSqlApplicationConfigurationOutputAttributes](sac.ref.Append("output"))
}

func (sac ApplicationConfigurationSqlApplicationConfigurationAttributes) ReferenceDataSource() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes](sac.ref.Append("reference_data_source"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputAttributes struct {
	ref terra.Reference
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputAttributes{ref: ref}
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InAppStreamNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("in_app_stream_names"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InputId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("input_id"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("name_prefix"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InputParallelism() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes](i.ref.Append("input_parallelism"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InputProcessingConfiguration() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes](i.ref.Append("input_processing_configuration"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InputSchema() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes](i.ref.Append("input_schema"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) InputStartingPositionConfiguration() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes](i.ref.Append("input_starting_position_configuration"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) KinesisFirehoseInput() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes](i.ref.Append("kinesis_firehose_input"))
}

func (i ApplicationConfigurationSqlApplicationConfigurationInputAttributes) KinesisStreamsInput() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes](i.ref.Append("kinesis_streams_input"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes struct {
	ref terra.Reference
}

func (ip ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes{ref: ref}
}

func (ip ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(ip.ref.Append("count"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes struct {
	ref terra.Reference
}

func (ipc ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ipc.ref, nil
}

func (ipc ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes{ref: ref}
}

func (ipc ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ipc.ref.InternalTokens()
}

func (ipc ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InputLambdaProcessor() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes](ipc.ref.Append("input_lambda_processor"))
}

type ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes struct {
	ref terra.Reference
}

func (ilp ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes) InternalRef() (terra.Reference, error) {
	return ilp.ref, nil
}

func (ilp ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes {
	return ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes{ref: ref}
}

func (ilp ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ilp.ref.InternalTokens()
}

func (ilp ApplicationConfigurationSqlApplicationConfigurationE5495824Attributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(ilp.ref.Append("resource_arn"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes struct {
	ref terra.Reference
}

func (is ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes{ref: ref}
}

func (is ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) RecordEncoding() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("record_encoding"))
}

func (is ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) RecordColumn() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes](is.ref.Append("record_column"))
}

func (is ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) RecordFormat() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes](is.ref.Append("record_format"))
}

type ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes struct {
	ref terra.Reference
}

func (rc ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes {
	return ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes{ref: ref}
}

func (rc ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) Mapping() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("mapping"))
}

func (rc ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("name"))
}

func (rc ApplicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) SqlType() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("sql_type"))
}

type ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes struct {
	ref terra.Reference
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes {
	return ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes{ref: ref}
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) RecordFormatType() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("record_format_type"))
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) MappingParameters() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes](rf.ref.Append("mapping_parameters"))
}

type ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes struct {
	ref terra.Reference
}

func (mp ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes {
	return ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes{ref: ref}
}

func (mp ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) CsvMappingParameters() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes](mp.ref.Append("csv_mapping_parameters"))
}

func (mp ApplicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) JsonMappingParameters() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes](mp.ref.Append("json_mapping_parameters"))
}

type ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes struct {
	ref terra.Reference
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes) InternalRef() (terra.Reference, error) {
	return cmp.ref, nil
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes{ref: ref}
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmp.ref.InternalTokens()
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes) RecordColumnDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_column_delimiter"))
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationC224A52EAttributes) RecordRowDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_row_delimiter"))
}

type ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes struct {
	ref terra.Reference
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes) InternalRef() (terra.Reference, error) {
	return jmp.ref, nil
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes {
	return ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes{ref: ref}
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return jmp.ref.InternalTokens()
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration204F7F24Attributes) RecordRowPath() terra.StringValue {
	return terra.ReferenceAsString(jmp.ref.Append("record_row_path"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes struct {
	ref terra.Reference
}

func (ispc ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ispc.ref, nil
}

func (ispc ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes{ref: ref}
}

func (ispc ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ispc.ref.InternalTokens()
}

func (ispc ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InputStartingPosition() terra.StringValue {
	return terra.ReferenceAsString(ispc.ref.Append("input_starting_position"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes struct {
	ref terra.Reference
}

func (kfi ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) InternalRef() (terra.Reference, error) {
	return kfi.ref, nil
}

func (kfi ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes{ref: ref}
}

func (kfi ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfi.ref.InternalTokens()
}

func (kfi ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(kfi.ref.Append("resource_arn"))
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes struct {
	ref terra.Reference
}

func (ksi ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) InternalRef() (terra.Reference, error) {
	return ksi.ref, nil
}

func (ksi ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes{ref: ref}
}

func (ksi ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ksi.ref.InternalTokens()
}

func (ksi ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(ksi.ref.Append("resource_arn"))
}

type ApplicationConfigurationSqlApplicationConfigurationOutputAttributes struct {
	ref terra.Reference
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationOutputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationOutputAttributes{ref: ref}
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("name"))
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) OutputId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("output_id"))
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) DestinationSchema() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes](o.ref.Append("destination_schema"))
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) KinesisFirehoseOutput() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes](o.ref.Append("kinesis_firehose_output"))
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) KinesisStreamsOutput() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes](o.ref.Append("kinesis_streams_output"))
}

func (o ApplicationConfigurationSqlApplicationConfigurationOutputAttributes) LambdaOutput() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes](o.ref.Append("lambda_output"))
}

type ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes struct {
	ref terra.Reference
}

func (ds ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes{ref: ref}
}

func (ds ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) RecordFormatType() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("record_format_type"))
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes struct {
	ref terra.Reference
}

func (kfo ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) InternalRef() (terra.Reference, error) {
	return kfo.ref, nil
}

func (kfo ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes{ref: ref}
}

func (kfo ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfo.ref.InternalTokens()
}

func (kfo ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(kfo.ref.Append("resource_arn"))
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes struct {
	ref terra.Reference
}

func (kso ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) InternalRef() (terra.Reference, error) {
	return kso.ref, nil
}

func (kso ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes{ref: ref}
}

func (kso ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kso.ref.InternalTokens()
}

func (kso ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(kso.ref.Append("resource_arn"))
}

type ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes struct {
	ref terra.Reference
}

func (lo ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes{ref: ref}
}

func (lo ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("resource_arn"))
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes struct {
	ref terra.Reference
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) InternalRef() (terra.Reference, error) {
	return rds.ref, nil
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes{ref: ref}
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rds.ref.InternalTokens()
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) ReferenceId() terra.StringValue {
	return terra.ReferenceAsString(rds.ref.Append("reference_id"))
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) TableName() terra.StringValue {
	return terra.ReferenceAsString(rds.ref.Append("table_name"))
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) ReferenceSchema() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes](rds.ref.Append("reference_schema"))
}

func (rds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) S3ReferenceDataSource() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes](rds.ref.Append("s3_reference_data_source"))
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes struct {
	ref terra.Reference
}

func (rs ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes{ref: ref}
}

func (rs ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) RecordEncoding() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("record_encoding"))
}

func (rs ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) RecordColumn() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes](rs.ref.Append("record_column"))
}

func (rs ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) RecordFormat() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes](rs.ref.Append("record_format"))
}

type ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes struct {
	ref terra.Reference
}

func (rc ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes {
	return ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes{ref: ref}
}

func (rc ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) Mapping() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("mapping"))
}

func (rc ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("name"))
}

func (rc ApplicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) SqlType() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("sql_type"))
}

type ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes struct {
	ref terra.Reference
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes {
	return ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes{ref: ref}
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) RecordFormatType() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("record_format_type"))
}

func (rf ApplicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) MappingParameters() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes](rf.ref.Append("mapping_parameters"))
}

type ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes struct {
	ref terra.Reference
}

func (mp ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes{ref: ref}
}

func (mp ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) CsvMappingParameters() terra.ListValue[ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes](mp.ref.Append("csv_mapping_parameters"))
}

func (mp ApplicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) JsonMappingParameters() terra.ListValue[ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes] {
	return terra.ReferenceAsList[ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes](mp.ref.Append("json_mapping_parameters"))
}

type ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes struct {
	ref terra.Reference
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) InternalRef() (terra.Reference, error) {
	return cmp.ref, nil
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes{ref: ref}
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmp.ref.InternalTokens()
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) RecordColumnDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_column_delimiter"))
}

func (cmp ApplicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) RecordRowDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_row_delimiter"))
}

type ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes struct {
	ref terra.Reference
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) InternalRef() (terra.Reference, error) {
	return jmp.ref, nil
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes {
	return ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes{ref: ref}
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return jmp.ref.InternalTokens()
}

func (jmp ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) RecordRowPath() terra.StringValue {
	return terra.ReferenceAsString(jmp.ref.Append("record_row_path"))
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes struct {
	ref terra.Reference
}

func (srds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) InternalRef() (terra.Reference, error) {
	return srds.ref, nil
}

func (srds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes {
	return ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes{ref: ref}
}

func (srds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srds.ref.InternalTokens()
}

func (srds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) BucketArn() terra.StringValue {
	return terra.ReferenceAsString(srds.ref.Append("bucket_arn"))
}

func (srds ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) FileKey() terra.StringValue {
	return terra.ReferenceAsString(srds.ref.Append("file_key"))
}

type ApplicationConfigurationVpcConfigurationAttributes struct {
	ref terra.Reference
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) InternalWithRef(ref terra.Reference) ApplicationConfigurationVpcConfigurationAttributes {
	return ApplicationConfigurationVpcConfigurationAttributes{ref: ref}
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) VpcConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_configuration_id"))
}

func (vc ApplicationConfigurationVpcConfigurationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_id"))
}

type CloudwatchLoggingOptionsAttributes struct {
	ref terra.Reference
}

func (clo CloudwatchLoggingOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clo.ref, nil
}

func (clo CloudwatchLoggingOptionsAttributes) InternalWithRef(ref terra.Reference) CloudwatchLoggingOptionsAttributes {
	return CloudwatchLoggingOptionsAttributes{ref: ref}
}

func (clo CloudwatchLoggingOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clo.ref.InternalTokens()
}

func (clo CloudwatchLoggingOptionsAttributes) CloudwatchLoggingOptionId() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_logging_option_id"))
}

func (clo CloudwatchLoggingOptionsAttributes) LogStreamArn() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("log_stream_arn"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ApplicationConfigurationState struct {
	ApplicationCodeConfiguration     []ApplicationConfigurationApplicationCodeConfigurationState     `json:"application_code_configuration"`
	ApplicationSnapshotConfiguration []ApplicationConfigurationApplicationSnapshotConfigurationState `json:"application_snapshot_configuration"`
	EnvironmentProperties            []ApplicationConfigurationEnvironmentPropertiesState            `json:"environment_properties"`
	FlinkApplicationConfiguration    []ApplicationConfigurationFlinkApplicationConfigurationState    `json:"flink_application_configuration"`
	RunConfiguration                 []ApplicationConfigurationRunConfigurationState                 `json:"run_configuration"`
	SqlApplicationConfiguration      []ApplicationConfigurationSqlApplicationConfigurationState      `json:"sql_application_configuration"`
	VpcConfiguration                 []ApplicationConfigurationVpcConfigurationState                 `json:"vpc_configuration"`
}

type ApplicationConfigurationApplicationCodeConfigurationState struct {
	CodeContentType string                                                                 `json:"code_content_type"`
	CodeContent     []ApplicationConfigurationApplicationCodeConfigurationCodeContentState `json:"code_content"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentState struct {
	TextContent       string                                                                                  `json:"text_content"`
	S3ContentLocation []ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationState `json:"s3_content_location"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationState struct {
	BucketArn     string `json:"bucket_arn"`
	FileKey       string `json:"file_key"`
	ObjectVersion string `json:"object_version"`
}

type ApplicationConfigurationApplicationSnapshotConfigurationState struct {
	SnapshotsEnabled bool `json:"snapshots_enabled"`
}

type ApplicationConfigurationEnvironmentPropertiesState struct {
	PropertyGroup []ApplicationConfigurationEnvironmentPropertiesPropertyGroupState `json:"property_group"`
}

type ApplicationConfigurationEnvironmentPropertiesPropertyGroupState struct {
	PropertyGroupId string            `json:"property_group_id"`
	PropertyMap     map[string]string `json:"property_map"`
}

type ApplicationConfigurationFlinkApplicationConfigurationState struct {
	CheckpointConfiguration  []ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationState  `json:"checkpoint_configuration"`
	MonitoringConfiguration  []ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationState  `json:"monitoring_configuration"`
	ParallelismConfiguration []ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationState `json:"parallelism_configuration"`
}

type ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationState struct {
	CheckpointInterval         float64 `json:"checkpoint_interval"`
	CheckpointingEnabled       bool    `json:"checkpointing_enabled"`
	ConfigurationType          string  `json:"configuration_type"`
	MinPauseBetweenCheckpoints float64 `json:"min_pause_between_checkpoints"`
}

type ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationState struct {
	ConfigurationType string `json:"configuration_type"`
	LogLevel          string `json:"log_level"`
	MetricsLevel      string `json:"metrics_level"`
}

type ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationState struct {
	AutoScalingEnabled bool    `json:"auto_scaling_enabled"`
	ConfigurationType  string  `json:"configuration_type"`
	Parallelism        float64 `json:"parallelism"`
	ParallelismPerKpu  float64 `json:"parallelism_per_kpu"`
}

type ApplicationConfigurationRunConfigurationState struct {
	ApplicationRestoreConfiguration []ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationState `json:"application_restore_configuration"`
	FlinkRunConfiguration           []ApplicationConfigurationRunConfigurationFlinkRunConfigurationState           `json:"flink_run_configuration"`
}

type ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationState struct {
	ApplicationRestoreType string `json:"application_restore_type"`
	SnapshotName           string `json:"snapshot_name"`
}

type ApplicationConfigurationRunConfigurationFlinkRunConfigurationState struct {
	AllowNonRestoredState bool `json:"allow_non_restored_state"`
}

type ApplicationConfigurationSqlApplicationConfigurationState struct {
	Input               []ApplicationConfigurationSqlApplicationConfigurationInputState               `json:"input"`
	Output              []ApplicationConfigurationSqlApplicationConfigurationOutputState              `json:"output"`
	ReferenceDataSource []ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceState `json:"reference_data_source"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputState struct {
	InAppStreamNames                   []string                                                                                          `json:"in_app_stream_names"`
	InputId                            string                                                                                            `json:"input_id"`
	NamePrefix                         string                                                                                            `json:"name_prefix"`
	InputParallelism                   []ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismState                   `json:"input_parallelism"`
	InputProcessingConfiguration       []ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationState       `json:"input_processing_configuration"`
	InputSchema                        []ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaState                        `json:"input_schema"`
	InputStartingPositionConfiguration []ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationState `json:"input_starting_position_configuration"`
	KinesisFirehoseInput               []ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputState               `json:"kinesis_firehose_input"`
	KinesisStreamsInput                []ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputState                `json:"kinesis_streams_input"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismState struct {
	Count float64 `json:"count"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationState struct {
	InputLambdaProcessor []ApplicationConfigurationSqlApplicationConfigurationE5495824State `json:"input_lambda_processor"`
}

type ApplicationConfigurationSqlApplicationConfigurationE5495824State struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaState struct {
	RecordEncoding string                                                             `json:"record_encoding"`
	RecordColumn   []ApplicationConfigurationSqlApplicationConfiguration204Adc8CState `json:"record_column"`
	RecordFormat   []ApplicationConfigurationSqlApplicationConfiguration2A04Ed58State `json:"record_format"`
}

type ApplicationConfigurationSqlApplicationConfiguration204Adc8CState struct {
	Mapping string `json:"mapping"`
	Name    string `json:"name"`
	SqlType string `json:"sql_type"`
}

type ApplicationConfigurationSqlApplicationConfiguration2A04Ed58State struct {
	RecordFormatType  string                                                             `json:"record_format_type"`
	MappingParameters []ApplicationConfigurationSqlApplicationConfiguration7A87Fff5State `json:"mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfiguration7A87Fff5State struct {
	CsvMappingParameters  []ApplicationConfigurationSqlApplicationConfigurationC224A52EState `json:"csv_mapping_parameters"`
	JsonMappingParameters []ApplicationConfigurationSqlApplicationConfiguration204F7F24State `json:"json_mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfigurationC224A52EState struct {
	RecordColumnDelimiter string `json:"record_column_delimiter"`
	RecordRowDelimiter    string `json:"record_row_delimiter"`
}

type ApplicationConfigurationSqlApplicationConfiguration204F7F24State struct {
	RecordRowPath string `json:"record_row_path"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationState struct {
	InputStartingPosition string `json:"input_starting_position"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputState struct {
	Name                  string                                                                                `json:"name"`
	OutputId              string                                                                                `json:"output_id"`
	DestinationSchema     []ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaState     `json:"destination_schema"`
	KinesisFirehoseOutput []ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputState `json:"kinesis_firehose_output"`
	KinesisStreamsOutput  []ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputState  `json:"kinesis_streams_output"`
	LambdaOutput          []ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputState          `json:"lambda_output"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaState struct {
	RecordFormatType string `json:"record_format_type"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceState struct {
	ReferenceId           string                                                                                             `json:"reference_id"`
	TableName             string                                                                                             `json:"table_name"`
	ReferenceSchema       []ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaState       `json:"reference_schema"`
	S3ReferenceDataSource []ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceState `json:"s3_reference_data_source"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaState struct {
	RecordEncoding string                                                             `json:"record_encoding"`
	RecordColumn   []ApplicationConfigurationSqlApplicationConfiguration19Cec7E2State `json:"record_column"`
	RecordFormat   []ApplicationConfigurationSqlApplicationConfiguration2B9C949EState `json:"record_format"`
}

type ApplicationConfigurationSqlApplicationConfiguration19Cec7E2State struct {
	Mapping string `json:"mapping"`
	Name    string `json:"name"`
	SqlType string `json:"sql_type"`
}

type ApplicationConfigurationSqlApplicationConfiguration2B9C949EState struct {
	RecordFormatType  string                                                             `json:"record_format_type"`
	MappingParameters []ApplicationConfigurationSqlApplicationConfigurationEbc7091FState `json:"mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfigurationEbc7091FState struct {
	CsvMappingParameters  []ApplicationConfigurationSqlApplicationConfigurationF24D03EdState `json:"csv_mapping_parameters"`
	JsonMappingParameters []ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7State `json:"json_mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfigurationF24D03EdState struct {
	RecordColumnDelimiter string `json:"record_column_delimiter"`
	RecordRowDelimiter    string `json:"record_row_delimiter"`
}

type ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7State struct {
	RecordRowPath string `json:"record_row_path"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceState struct {
	BucketArn string `json:"bucket_arn"`
	FileKey   string `json:"file_key"`
}

type ApplicationConfigurationVpcConfigurationState struct {
	SecurityGroupIds   []string `json:"security_group_ids"`
	SubnetIds          []string `json:"subnet_ids"`
	VpcConfigurationId string   `json:"vpc_configuration_id"`
	VpcId              string   `json:"vpc_id"`
}

type CloudwatchLoggingOptionsState struct {
	CloudwatchLoggingOptionId string `json:"cloudwatch_logging_option_id"`
	LogStreamArn              string `json:"log_stream_arn"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
