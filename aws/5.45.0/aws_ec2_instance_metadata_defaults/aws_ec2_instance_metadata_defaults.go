// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_instance_metadata_defaults

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ec2_instance_metadata_defaults.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEc2InstanceMetadataDefaultsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aeimd *Resource) Type() string {
	return "aws_ec2_instance_metadata_defaults"
}

// LocalName returns the local name for [Resource].
func (aeimd *Resource) LocalName() string {
	return aeimd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aeimd *Resource) Configuration() interface{} {
	return aeimd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aeimd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aeimd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aeimd *Resource) Dependencies() terra.Dependencies {
	return aeimd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aeimd *Resource) LifecycleManagement() *terra.Lifecycle {
	return aeimd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aeimd *Resource) Attributes() awsEc2InstanceMetadataDefaultsAttributes {
	return awsEc2InstanceMetadataDefaultsAttributes{ref: terra.ReferenceResource(aeimd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aeimd *Resource) ImportState(state io.Reader) error {
	aeimd.state = &awsEc2InstanceMetadataDefaultsState{}
	if err := json.NewDecoder(state).Decode(aeimd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aeimd.Type(), aeimd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aeimd *Resource) State() (*awsEc2InstanceMetadataDefaultsState, bool) {
	return aeimd.state, aeimd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aeimd *Resource) StateMust() *awsEc2InstanceMetadataDefaultsState {
	if aeimd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aeimd.Type(), aeimd.LocalName()))
	}
	return aeimd.state
}

// Args contains the configurations for aws_ec2_instance_metadata_defaults.
type Args struct {
	// HttpEndpoint: string, optional
	HttpEndpoint terra.StringValue `hcl:"http_endpoint,attr"`
	// HttpPutResponseHopLimit: number, optional
	HttpPutResponseHopLimit terra.NumberValue `hcl:"http_put_response_hop_limit,attr"`
	// HttpTokens: string, optional
	HttpTokens terra.StringValue `hcl:"http_tokens,attr"`
	// InstanceMetadataTags: string, optional
	InstanceMetadataTags terra.StringValue `hcl:"instance_metadata_tags,attr"`
}

type awsEc2InstanceMetadataDefaultsAttributes struct {
	ref terra.Reference
}

// HttpEndpoint returns a reference to field http_endpoint of aws_ec2_instance_metadata_defaults.
func (aeimd awsEc2InstanceMetadataDefaultsAttributes) HttpEndpoint() terra.StringValue {
	return terra.ReferenceAsString(aeimd.ref.Append("http_endpoint"))
}

// HttpPutResponseHopLimit returns a reference to field http_put_response_hop_limit of aws_ec2_instance_metadata_defaults.
func (aeimd awsEc2InstanceMetadataDefaultsAttributes) HttpPutResponseHopLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(aeimd.ref.Append("http_put_response_hop_limit"))
}

// HttpTokens returns a reference to field http_tokens of aws_ec2_instance_metadata_defaults.
func (aeimd awsEc2InstanceMetadataDefaultsAttributes) HttpTokens() terra.StringValue {
	return terra.ReferenceAsString(aeimd.ref.Append("http_tokens"))
}

// Id returns a reference to field id of aws_ec2_instance_metadata_defaults.
func (aeimd awsEc2InstanceMetadataDefaultsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aeimd.ref.Append("id"))
}

// InstanceMetadataTags returns a reference to field instance_metadata_tags of aws_ec2_instance_metadata_defaults.
func (aeimd awsEc2InstanceMetadataDefaultsAttributes) InstanceMetadataTags() terra.StringValue {
	return terra.ReferenceAsString(aeimd.ref.Append("instance_metadata_tags"))
}

type awsEc2InstanceMetadataDefaultsState struct {
	HttpEndpoint            string  `json:"http_endpoint"`
	HttpPutResponseHopLimit float64 `json:"http_put_response_hop_limit"`
	HttpTokens              string  `json:"http_tokens"`
	Id                      string  `json:"id"`
	InstanceMetadataTags    string  `json:"instance_metadata_tags"`
}
