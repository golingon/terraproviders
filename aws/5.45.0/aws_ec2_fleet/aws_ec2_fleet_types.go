// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_fleet

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type FleetInstanceSet struct {
	// InstanceIds: list of string, optional
	InstanceIds terra.ListValue[terra.StringValue] `hcl:"instance_ids,attr"`
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// Lifecycle: string, optional
	Lifecycle terra.StringValue `hcl:"lifecycle,attr"`
	// Platform: string, optional
	Platform terra.StringValue `hcl:"platform,attr"`
}

type LaunchTemplateConfig struct {
	// LaunchTemplateConfigLaunchTemplateSpecification: optional
	LaunchTemplateSpecification *LaunchTemplateConfigLaunchTemplateSpecification `hcl:"launch_template_specification,block"`
	// LaunchTemplateConfigOverride: min=0,max=300
	Override []LaunchTemplateConfigOverride `hcl:"override,block" validate:"min=0,max=300"`
}

type LaunchTemplateConfigLaunchTemplateSpecification struct {
	// LaunchTemplateId: string, optional
	LaunchTemplateId terra.StringValue `hcl:"launch_template_id,attr"`
	// LaunchTemplateName: string, optional
	LaunchTemplateName terra.StringValue `hcl:"launch_template_name,attr"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type LaunchTemplateConfigOverride struct {
	// AvailabilityZone: string, optional
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// MaxPrice: string, optional
	MaxPrice terra.StringValue `hcl:"max_price,attr"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// SubnetId: string, optional
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// WeightedCapacity: number, optional
	WeightedCapacity terra.NumberValue `hcl:"weighted_capacity,attr"`
	// LaunchTemplateConfigOverrideInstanceRequirements: optional
	InstanceRequirements *LaunchTemplateConfigOverrideInstanceRequirements `hcl:"instance_requirements,block"`
}

type LaunchTemplateConfigOverrideInstanceRequirements struct {
	// AcceleratorManufacturers: set of string, optional
	AcceleratorManufacturers terra.SetValue[terra.StringValue] `hcl:"accelerator_manufacturers,attr"`
	// AcceleratorNames: set of string, optional
	AcceleratorNames terra.SetValue[terra.StringValue] `hcl:"accelerator_names,attr"`
	// AcceleratorTypes: set of string, optional
	AcceleratorTypes terra.SetValue[terra.StringValue] `hcl:"accelerator_types,attr"`
	// AllowedInstanceTypes: set of string, optional
	AllowedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"allowed_instance_types,attr"`
	// BareMetal: string, optional
	BareMetal terra.StringValue `hcl:"bare_metal,attr"`
	// BurstablePerformance: string, optional
	BurstablePerformance terra.StringValue `hcl:"burstable_performance,attr"`
	// CpuManufacturers: set of string, optional
	CpuManufacturers terra.SetValue[terra.StringValue] `hcl:"cpu_manufacturers,attr"`
	// ExcludedInstanceTypes: set of string, optional
	ExcludedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"excluded_instance_types,attr"`
	// InstanceGenerations: set of string, optional
	InstanceGenerations terra.SetValue[terra.StringValue] `hcl:"instance_generations,attr"`
	// LocalStorage: string, optional
	LocalStorage terra.StringValue `hcl:"local_storage,attr"`
	// LocalStorageTypes: set of string, optional
	LocalStorageTypes terra.SetValue[terra.StringValue] `hcl:"local_storage_types,attr"`
	// OnDemandMaxPricePercentageOverLowestPrice: number, optional
	OnDemandMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"on_demand_max_price_percentage_over_lowest_price,attr"`
	// RequireHibernateSupport: bool, optional
	RequireHibernateSupport terra.BoolValue `hcl:"require_hibernate_support,attr"`
	// SpotMaxPricePercentageOverLowestPrice: number, optional
	SpotMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"spot_max_price_percentage_over_lowest_price,attr"`
	// LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount: optional
	AcceleratorCount *LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount `hcl:"accelerator_count,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib: optional
	AcceleratorTotalMemoryMib *LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib `hcl:"accelerator_total_memory_mib,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps: optional
	BaselineEbsBandwidthMbps *LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps `hcl:"baseline_ebs_bandwidth_mbps,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu: optional
	MemoryGibPerVcpu *LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu `hcl:"memory_gib_per_vcpu,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsMemoryMib: required
	MemoryMib *LaunchTemplateConfigOverrideInstanceRequirementsMemoryMib `hcl:"memory_mib,block" validate:"required"`
	// LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps: optional
	NetworkBandwidthGbps *LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps `hcl:"network_bandwidth_gbps,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount: optional
	NetworkInterfaceCount *LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount `hcl:"network_interface_count,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb: optional
	TotalLocalStorageGb *LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb `hcl:"total_local_storage_gb,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsVcpuCount: required
	VcpuCount *LaunchTemplateConfigOverrideInstanceRequirementsVcpuCount `hcl:"vcpu_count,block" validate:"required"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryMib struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, required
	Min terra.NumberValue `hcl:"min,attr" validate:"required"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsVcpuCount struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, required
	Min terra.NumberValue `hcl:"min,attr" validate:"required"`
}

type OnDemandOptions struct {
	// AllocationStrategy: string, optional
	AllocationStrategy terra.StringValue `hcl:"allocation_strategy,attr"`
	// MaxTotalPrice: string, optional
	MaxTotalPrice terra.StringValue `hcl:"max_total_price,attr"`
	// MinTargetCapacity: number, optional
	MinTargetCapacity terra.NumberValue `hcl:"min_target_capacity,attr"`
	// SingleAvailabilityZone: bool, optional
	SingleAvailabilityZone terra.BoolValue `hcl:"single_availability_zone,attr"`
	// SingleInstanceType: bool, optional
	SingleInstanceType terra.BoolValue `hcl:"single_instance_type,attr"`
}

type SpotOptions struct {
	// AllocationStrategy: string, optional
	AllocationStrategy terra.StringValue `hcl:"allocation_strategy,attr"`
	// InstanceInterruptionBehavior: string, optional
	InstanceInterruptionBehavior terra.StringValue `hcl:"instance_interruption_behavior,attr"`
	// InstancePoolsToUseCount: number, optional
	InstancePoolsToUseCount terra.NumberValue `hcl:"instance_pools_to_use_count,attr"`
	// SpotOptionsMaintenanceStrategies: optional
	MaintenanceStrategies *SpotOptionsMaintenanceStrategies `hcl:"maintenance_strategies,block"`
}

type SpotOptionsMaintenanceStrategies struct {
	// SpotOptionsMaintenanceStrategiesCapacityRebalance: optional
	CapacityRebalance *SpotOptionsMaintenanceStrategiesCapacityRebalance `hcl:"capacity_rebalance,block"`
}

type SpotOptionsMaintenanceStrategiesCapacityRebalance struct {
	// ReplacementStrategy: string, optional
	ReplacementStrategy terra.StringValue `hcl:"replacement_strategy,attr"`
	// TerminationDelay: number, optional
	TerminationDelay terra.NumberValue `hcl:"termination_delay,attr"`
}

type TargetCapacitySpecification struct {
	// DefaultTargetCapacityType: string, required
	DefaultTargetCapacityType terra.StringValue `hcl:"default_target_capacity_type,attr" validate:"required"`
	// OnDemandTargetCapacity: number, optional
	OnDemandTargetCapacity terra.NumberValue `hcl:"on_demand_target_capacity,attr"`
	// SpotTargetCapacity: number, optional
	SpotTargetCapacity terra.NumberValue `hcl:"spot_target_capacity,attr"`
	// TargetCapacityUnitType: string, optional
	TargetCapacityUnitType terra.StringValue `hcl:"target_capacity_unit_type,attr"`
	// TotalTargetCapacity: number, required
	TotalTargetCapacity terra.NumberValue `hcl:"total_target_capacity,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type FleetInstanceSetAttributes struct {
	ref terra.Reference
}

func (fis FleetInstanceSetAttributes) InternalRef() (terra.Reference, error) {
	return fis.ref, nil
}

func (fis FleetInstanceSetAttributes) InternalWithRef(ref terra.Reference) FleetInstanceSetAttributes {
	return FleetInstanceSetAttributes{ref: ref}
}

func (fis FleetInstanceSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fis.ref.InternalTokens()
}

func (fis FleetInstanceSetAttributes) InstanceIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fis.ref.Append("instance_ids"))
}

func (fis FleetInstanceSetAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(fis.ref.Append("instance_type"))
}

func (fis FleetInstanceSetAttributes) Lifecycle() terra.StringValue {
	return terra.ReferenceAsString(fis.ref.Append("lifecycle"))
}

func (fis FleetInstanceSetAttributes) Platform() terra.StringValue {
	return terra.ReferenceAsString(fis.ref.Append("platform"))
}

type LaunchTemplateConfigAttributes struct {
	ref terra.Reference
}

func (ltc LaunchTemplateConfigAttributes) InternalRef() (terra.Reference, error) {
	return ltc.ref, nil
}

func (ltc LaunchTemplateConfigAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigAttributes {
	return LaunchTemplateConfigAttributes{ref: ref}
}

func (ltc LaunchTemplateConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ltc.ref.InternalTokens()
}

func (ltc LaunchTemplateConfigAttributes) LaunchTemplateSpecification() terra.ListValue[LaunchTemplateConfigLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigLaunchTemplateSpecificationAttributes](ltc.ref.Append("launch_template_specification"))
}

func (ltc LaunchTemplateConfigAttributes) Override() terra.ListValue[LaunchTemplateConfigOverrideAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideAttributes](ltc.ref.Append("override"))
}

type LaunchTemplateConfigLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigLaunchTemplateSpecificationAttributes {
	return LaunchTemplateConfigLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) LaunchTemplateId() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_id"))
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) LaunchTemplateName() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_name"))
}

func (lts LaunchTemplateConfigLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type LaunchTemplateConfigOverrideAttributes struct {
	ref terra.Reference
}

func (o LaunchTemplateConfigOverrideAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o LaunchTemplateConfigOverrideAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideAttributes {
	return LaunchTemplateConfigOverrideAttributes{ref: ref}
}

func (o LaunchTemplateConfigOverrideAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o LaunchTemplateConfigOverrideAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("availability_zone"))
}

func (o LaunchTemplateConfigOverrideAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("instance_type"))
}

func (o LaunchTemplateConfigOverrideAttributes) MaxPrice() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("max_price"))
}

func (o LaunchTemplateConfigOverrideAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("priority"))
}

func (o LaunchTemplateConfigOverrideAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("subnet_id"))
}

func (o LaunchTemplateConfigOverrideAttributes) WeightedCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("weighted_capacity"))
}

func (o LaunchTemplateConfigOverrideAttributes) InstanceRequirements() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsAttributes](o.ref.Append("instance_requirements"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsAttributes{ref: ref}
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes](ir.ref.Append("accelerator_count"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) MemoryMib() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes](ir.ref.Append("memory_mib"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes](ir.ref.Append("network_interface_count"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir LaunchTemplateConfigOverrideInstanceRequirementsAttributes) VcpuCount() terra.ListValue[LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes] {
	return terra.ReferenceAsList[LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes](ir.ref.Append("vcpu_count"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes struct {
	ref terra.Reference
}

func (ac LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes{ref: ref}
}

func (ac LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes struct {
	ref terra.Reference
}

func (atmm LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes{ref: ref}
}

func (atmm LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes struct {
	ref terra.Reference
}

func (bebm LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes{ref: ref}
}

func (bebm LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes struct {
	ref terra.Reference
}

func (mgpv LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes{ref: ref}
}

func (mgpv LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes struct {
	ref terra.Reference
}

func (mm LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes{ref: ref}
}

func (mm LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes struct {
	ref terra.Reference
}

func (nbg LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes{ref: ref}
}

func (nbg LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes struct {
	ref terra.Reference
}

func (nic LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes{ref: ref}
}

func (nic LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes struct {
	ref terra.Reference
}

func (tlsg LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes{ref: ref}
}

func (tlsg LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes struct {
	ref terra.Reference
}

func (vc LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) InternalWithRef(ref terra.Reference) LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes {
	return LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes{ref: ref}
}

func (vc LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type OnDemandOptionsAttributes struct {
	ref terra.Reference
}

func (odo OnDemandOptionsAttributes) InternalRef() (terra.Reference, error) {
	return odo.ref, nil
}

func (odo OnDemandOptionsAttributes) InternalWithRef(ref terra.Reference) OnDemandOptionsAttributes {
	return OnDemandOptionsAttributes{ref: ref}
}

func (odo OnDemandOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return odo.ref.InternalTokens()
}

func (odo OnDemandOptionsAttributes) AllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(odo.ref.Append("allocation_strategy"))
}

func (odo OnDemandOptionsAttributes) MaxTotalPrice() terra.StringValue {
	return terra.ReferenceAsString(odo.ref.Append("max_total_price"))
}

func (odo OnDemandOptionsAttributes) MinTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(odo.ref.Append("min_target_capacity"))
}

func (odo OnDemandOptionsAttributes) SingleAvailabilityZone() terra.BoolValue {
	return terra.ReferenceAsBool(odo.ref.Append("single_availability_zone"))
}

func (odo OnDemandOptionsAttributes) SingleInstanceType() terra.BoolValue {
	return terra.ReferenceAsBool(odo.ref.Append("single_instance_type"))
}

type SpotOptionsAttributes struct {
	ref terra.Reference
}

func (so SpotOptionsAttributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so SpotOptionsAttributes) InternalWithRef(ref terra.Reference) SpotOptionsAttributes {
	return SpotOptionsAttributes{ref: ref}
}

func (so SpotOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so SpotOptionsAttributes) AllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("allocation_strategy"))
}

func (so SpotOptionsAttributes) InstanceInterruptionBehavior() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("instance_interruption_behavior"))
}

func (so SpotOptionsAttributes) InstancePoolsToUseCount() terra.NumberValue {
	return terra.ReferenceAsNumber(so.ref.Append("instance_pools_to_use_count"))
}

func (so SpotOptionsAttributes) MaintenanceStrategies() terra.ListValue[SpotOptionsMaintenanceStrategiesAttributes] {
	return terra.ReferenceAsList[SpotOptionsMaintenanceStrategiesAttributes](so.ref.Append("maintenance_strategies"))
}

type SpotOptionsMaintenanceStrategiesAttributes struct {
	ref terra.Reference
}

func (ms SpotOptionsMaintenanceStrategiesAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms SpotOptionsMaintenanceStrategiesAttributes) InternalWithRef(ref terra.Reference) SpotOptionsMaintenanceStrategiesAttributes {
	return SpotOptionsMaintenanceStrategiesAttributes{ref: ref}
}

func (ms SpotOptionsMaintenanceStrategiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms SpotOptionsMaintenanceStrategiesAttributes) CapacityRebalance() terra.ListValue[SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes] {
	return terra.ReferenceAsList[SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes](ms.ref.Append("capacity_rebalance"))
}

type SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes struct {
	ref terra.Reference
}

func (cr SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) InternalWithRef(ref terra.Reference) SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes {
	return SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes{ref: ref}
}

func (cr SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) ReplacementStrategy() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("replacement_strategy"))
}

func (cr SpotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) TerminationDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(cr.ref.Append("termination_delay"))
}

type TargetCapacitySpecificationAttributes struct {
	ref terra.Reference
}

func (tcs TargetCapacitySpecificationAttributes) InternalRef() (terra.Reference, error) {
	return tcs.ref, nil
}

func (tcs TargetCapacitySpecificationAttributes) InternalWithRef(ref terra.Reference) TargetCapacitySpecificationAttributes {
	return TargetCapacitySpecificationAttributes{ref: ref}
}

func (tcs TargetCapacitySpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tcs.ref.InternalTokens()
}

func (tcs TargetCapacitySpecificationAttributes) DefaultTargetCapacityType() terra.StringValue {
	return terra.ReferenceAsString(tcs.ref.Append("default_target_capacity_type"))
}

func (tcs TargetCapacitySpecificationAttributes) OnDemandTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(tcs.ref.Append("on_demand_target_capacity"))
}

func (tcs TargetCapacitySpecificationAttributes) SpotTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(tcs.ref.Append("spot_target_capacity"))
}

func (tcs TargetCapacitySpecificationAttributes) TargetCapacityUnitType() terra.StringValue {
	return terra.ReferenceAsString(tcs.ref.Append("target_capacity_unit_type"))
}

func (tcs TargetCapacitySpecificationAttributes) TotalTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(tcs.ref.Append("total_target_capacity"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type FleetInstanceSetState struct {
	InstanceIds  []string `json:"instance_ids"`
	InstanceType string   `json:"instance_type"`
	Lifecycle    string   `json:"lifecycle"`
	Platform     string   `json:"platform"`
}

type LaunchTemplateConfigState struct {
	LaunchTemplateSpecification []LaunchTemplateConfigLaunchTemplateSpecificationState `json:"launch_template_specification"`
	Override                    []LaunchTemplateConfigOverrideState                    `json:"override"`
}

type LaunchTemplateConfigLaunchTemplateSpecificationState struct {
	LaunchTemplateId   string `json:"launch_template_id"`
	LaunchTemplateName string `json:"launch_template_name"`
	Version            string `json:"version"`
}

type LaunchTemplateConfigOverrideState struct {
	AvailabilityZone     string                                                  `json:"availability_zone"`
	InstanceType         string                                                  `json:"instance_type"`
	MaxPrice             string                                                  `json:"max_price"`
	Priority             float64                                                 `json:"priority"`
	SubnetId             string                                                  `json:"subnet_id"`
	WeightedCapacity     float64                                                 `json:"weighted_capacity"`
	InstanceRequirements []LaunchTemplateConfigOverrideInstanceRequirementsState `json:"instance_requirements"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                                                         `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                                                         `json:"accelerator_names"`
	AcceleratorTypes                          []string                                                                         `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                                                         `json:"allowed_instance_types"`
	BareMetal                                 string                                                                           `json:"bare_metal"`
	BurstablePerformance                      string                                                                           `json:"burstable_performance"`
	CpuManufacturers                          []string                                                                         `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                                                         `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                                                         `json:"instance_generations"`
	LocalStorage                              string                                                                           `json:"local_storage"`
	LocalStorageTypes                         []string                                                                         `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                                                          `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                                                             `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                                                          `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountState          `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsState  `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuState          `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibState                 `json:"memory_mib"`
	NetworkBandwidthGbps                      []LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsState      `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountState     `json:"network_interface_count"`
	TotalLocalStorageGb                       []LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbState       `json:"total_local_storage_gb"`
	VcpuCount                                 []LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountState                 `json:"vcpu_count"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type OnDemandOptionsState struct {
	AllocationStrategy     string  `json:"allocation_strategy"`
	MaxTotalPrice          string  `json:"max_total_price"`
	MinTargetCapacity      float64 `json:"min_target_capacity"`
	SingleAvailabilityZone bool    `json:"single_availability_zone"`
	SingleInstanceType     bool    `json:"single_instance_type"`
}

type SpotOptionsState struct {
	AllocationStrategy           string                                  `json:"allocation_strategy"`
	InstanceInterruptionBehavior string                                  `json:"instance_interruption_behavior"`
	InstancePoolsToUseCount      float64                                 `json:"instance_pools_to_use_count"`
	MaintenanceStrategies        []SpotOptionsMaintenanceStrategiesState `json:"maintenance_strategies"`
}

type SpotOptionsMaintenanceStrategiesState struct {
	CapacityRebalance []SpotOptionsMaintenanceStrategiesCapacityRebalanceState `json:"capacity_rebalance"`
}

type SpotOptionsMaintenanceStrategiesCapacityRebalanceState struct {
	ReplacementStrategy string  `json:"replacement_strategy"`
	TerminationDelay    float64 `json:"termination_delay"`
}

type TargetCapacitySpecificationState struct {
	DefaultTargetCapacityType string  `json:"default_target_capacity_type"`
	OnDemandTargetCapacity    float64 `json:"on_demand_target_capacity"`
	SpotTargetCapacity        float64 `json:"spot_target_capacity"`
	TargetCapacityUnitType    string  `json:"target_capacity_unit_type"`
	TotalTargetCapacity       float64 `json:"total_target_capacity"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
