// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_acmpca_certificate_authority

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataRevocationConfigurationAttributes struct {
	ref terra.Reference
}

func (rc DataRevocationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc DataRevocationConfigurationAttributes) InternalWithRef(ref terra.Reference) DataRevocationConfigurationAttributes {
	return DataRevocationConfigurationAttributes{ref: ref}
}

func (rc DataRevocationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc DataRevocationConfigurationAttributes) CrlConfiguration() terra.ListValue[DataRevocationConfigurationCrlConfigurationAttributes] {
	return terra.ReferenceAsList[DataRevocationConfigurationCrlConfigurationAttributes](rc.ref.Append("crl_configuration"))
}

func (rc DataRevocationConfigurationAttributes) OcspConfiguration() terra.ListValue[DataRevocationConfigurationOcspConfigurationAttributes] {
	return terra.ReferenceAsList[DataRevocationConfigurationOcspConfigurationAttributes](rc.ref.Append("ocsp_configuration"))
}

type DataRevocationConfigurationCrlConfigurationAttributes struct {
	ref terra.Reference
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) InternalWithRef(ref terra.Reference) DataRevocationConfigurationCrlConfigurationAttributes {
	return DataRevocationConfigurationCrlConfigurationAttributes{ref: ref}
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) CustomCname() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("custom_cname"))
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("enabled"))
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) ExpirationInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("expiration_in_days"))
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) S3BucketName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("s3_bucket_name"))
}

func (cc DataRevocationConfigurationCrlConfigurationAttributes) S3ObjectAcl() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("s3_object_acl"))
}

type DataRevocationConfigurationOcspConfigurationAttributes struct {
	ref terra.Reference
}

func (oc DataRevocationConfigurationOcspConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc DataRevocationConfigurationOcspConfigurationAttributes) InternalWithRef(ref terra.Reference) DataRevocationConfigurationOcspConfigurationAttributes {
	return DataRevocationConfigurationOcspConfigurationAttributes{ref: ref}
}

func (oc DataRevocationConfigurationOcspConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc DataRevocationConfigurationOcspConfigurationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("enabled"))
}

func (oc DataRevocationConfigurationOcspConfigurationAttributes) OcspCustomCname() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("ocsp_custom_cname"))
}

type DataRevocationConfigurationState struct {
	CrlConfiguration  []DataRevocationConfigurationCrlConfigurationState  `json:"crl_configuration"`
	OcspConfiguration []DataRevocationConfigurationOcspConfigurationState `json:"ocsp_configuration"`
}

type DataRevocationConfigurationCrlConfigurationState struct {
	CustomCname      string  `json:"custom_cname"`
	Enabled          bool    `json:"enabled"`
	ExpirationInDays float64 `json:"expiration_in_days"`
	S3BucketName     string  `json:"s3_bucket_name"`
	S3ObjectAcl      string  `json:"s3_object_acl"`
}

type DataRevocationConfigurationOcspConfigurationState struct {
	Enabled         bool   `json:"enabled"`
	OcspCustomCname string `json:"ocsp_custom_cname"`
}
