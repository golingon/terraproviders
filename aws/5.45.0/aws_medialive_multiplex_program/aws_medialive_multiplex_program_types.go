// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_medialive_multiplex_program

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MultiplexProgramSettings struct {
	// PreferredChannelPipeline: string, required
	PreferredChannelPipeline terra.StringValue `hcl:"preferred_channel_pipeline,attr" validate:"required"`
	// ProgramNumber: number, required
	ProgramNumber terra.NumberValue `hcl:"program_number,attr" validate:"required"`
	// MultiplexProgramSettingsServiceDescriptor: min=0
	ServiceDescriptor []MultiplexProgramSettingsServiceDescriptor `hcl:"service_descriptor,block" validate:"min=0"`
	// MultiplexProgramSettingsVideoSettings: min=0
	VideoSettings []MultiplexProgramSettingsVideoSettings `hcl:"video_settings,block" validate:"min=0"`
}

type MultiplexProgramSettingsServiceDescriptor struct {
	// ProviderName: string, required
	ProviderName terra.StringValue `hcl:"provider_name,attr" validate:"required"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
}

type MultiplexProgramSettingsVideoSettings struct {
	// ConstantBitrate: number, optional
	ConstantBitrate terra.NumberValue `hcl:"constant_bitrate,attr"`
	// MultiplexProgramSettingsVideoSettingsStatmuxSettings: min=0
	StatmuxSettings []MultiplexProgramSettingsVideoSettingsStatmuxSettings `hcl:"statmux_settings,block" validate:"min=0"`
}

type MultiplexProgramSettingsVideoSettingsStatmuxSettings struct {
	// MaximumBitrate: number, optional
	MaximumBitrate terra.NumberValue `hcl:"maximum_bitrate,attr"`
	// MinimumBitrate: number, optional
	MinimumBitrate terra.NumberValue `hcl:"minimum_bitrate,attr"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
}

type MultiplexProgramSettingsAttributes struct {
	ref terra.Reference
}

func (mps MultiplexProgramSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mps.ref, nil
}

func (mps MultiplexProgramSettingsAttributes) InternalWithRef(ref terra.Reference) MultiplexProgramSettingsAttributes {
	return MultiplexProgramSettingsAttributes{ref: ref}
}

func (mps MultiplexProgramSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mps.ref.InternalTokens()
}

func (mps MultiplexProgramSettingsAttributes) PreferredChannelPipeline() terra.StringValue {
	return terra.ReferenceAsString(mps.ref.Append("preferred_channel_pipeline"))
}

func (mps MultiplexProgramSettingsAttributes) ProgramNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(mps.ref.Append("program_number"))
}

func (mps MultiplexProgramSettingsAttributes) ServiceDescriptor() terra.ListValue[MultiplexProgramSettingsServiceDescriptorAttributes] {
	return terra.ReferenceAsList[MultiplexProgramSettingsServiceDescriptorAttributes](mps.ref.Append("service_descriptor"))
}

func (mps MultiplexProgramSettingsAttributes) VideoSettings() terra.ListValue[MultiplexProgramSettingsVideoSettingsAttributes] {
	return terra.ReferenceAsList[MultiplexProgramSettingsVideoSettingsAttributes](mps.ref.Append("video_settings"))
}

type MultiplexProgramSettingsServiceDescriptorAttributes struct {
	ref terra.Reference
}

func (sd MultiplexProgramSettingsServiceDescriptorAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd MultiplexProgramSettingsServiceDescriptorAttributes) InternalWithRef(ref terra.Reference) MultiplexProgramSettingsServiceDescriptorAttributes {
	return MultiplexProgramSettingsServiceDescriptorAttributes{ref: ref}
}

func (sd MultiplexProgramSettingsServiceDescriptorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd MultiplexProgramSettingsServiceDescriptorAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("provider_name"))
}

func (sd MultiplexProgramSettingsServiceDescriptorAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("service_name"))
}

type MultiplexProgramSettingsVideoSettingsAttributes struct {
	ref terra.Reference
}

func (vs MultiplexProgramSettingsVideoSettingsAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs MultiplexProgramSettingsVideoSettingsAttributes) InternalWithRef(ref terra.Reference) MultiplexProgramSettingsVideoSettingsAttributes {
	return MultiplexProgramSettingsVideoSettingsAttributes{ref: ref}
}

func (vs MultiplexProgramSettingsVideoSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs MultiplexProgramSettingsVideoSettingsAttributes) ConstantBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(vs.ref.Append("constant_bitrate"))
}

func (vs MultiplexProgramSettingsVideoSettingsAttributes) StatmuxSettings() terra.ListValue[MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes] {
	return terra.ReferenceAsList[MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes](vs.ref.Append("statmux_settings"))
}

type MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes struct {
	ref terra.Reference
}

func (ss MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes) InternalWithRef(ref terra.Reference) MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes {
	return MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes{ref: ref}
}

func (ss MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes) MaximumBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ss.ref.Append("maximum_bitrate"))
}

func (ss MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes) MinimumBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ss.ref.Append("minimum_bitrate"))
}

func (ss MultiplexProgramSettingsVideoSettingsStatmuxSettingsAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(ss.ref.Append("priority"))
}

type MultiplexProgramSettingsState struct {
	PreferredChannelPipeline string                                           `json:"preferred_channel_pipeline"`
	ProgramNumber            float64                                          `json:"program_number"`
	ServiceDescriptor        []MultiplexProgramSettingsServiceDescriptorState `json:"service_descriptor"`
	VideoSettings            []MultiplexProgramSettingsVideoSettingsState     `json:"video_settings"`
}

type MultiplexProgramSettingsServiceDescriptorState struct {
	ProviderName string `json:"provider_name"`
	ServiceName  string `json:"service_name"`
}

type MultiplexProgramSettingsVideoSettingsState struct {
	ConstantBitrate float64                                                     `json:"constant_bitrate"`
	StatmuxSettings []MultiplexProgramSettingsVideoSettingsStatmuxSettingsState `json:"statmux_settings"`
}

type MultiplexProgramSettingsVideoSettingsStatmuxSettingsState struct {
	MaximumBitrate float64 `json:"maximum_bitrate"`
	MinimumBitrate float64 `json:"minimum_bitrate"`
	Priority       float64 `json:"priority"`
}
