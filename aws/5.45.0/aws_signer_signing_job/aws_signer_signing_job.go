// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_signer_signing_job

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_signer_signing_job.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSignerSigningJobState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (assj *Resource) Type() string {
	return "aws_signer_signing_job"
}

// LocalName returns the local name for [Resource].
func (assj *Resource) LocalName() string {
	return assj.Name
}

// Configuration returns the configuration (args) for [Resource].
func (assj *Resource) Configuration() interface{} {
	return assj.Args
}

// DependOn is used for other resources to depend on [Resource].
func (assj *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(assj)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (assj *Resource) Dependencies() terra.Dependencies {
	return assj.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (assj *Resource) LifecycleManagement() *terra.Lifecycle {
	return assj.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (assj *Resource) Attributes() awsSignerSigningJobAttributes {
	return awsSignerSigningJobAttributes{ref: terra.ReferenceResource(assj)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (assj *Resource) ImportState(state io.Reader) error {
	assj.state = &awsSignerSigningJobState{}
	if err := json.NewDecoder(state).Decode(assj.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", assj.Type(), assj.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (assj *Resource) State() (*awsSignerSigningJobState, bool) {
	return assj.state, assj.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (assj *Resource) StateMust() *awsSignerSigningJobState {
	if assj.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", assj.Type(), assj.LocalName()))
	}
	return assj.state
}

// Args contains the configurations for aws_signer_signing_job.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IgnoreSigningJobFailure: bool, optional
	IgnoreSigningJobFailure terra.BoolValue `hcl:"ignore_signing_job_failure,attr"`
	// ProfileName: string, required
	ProfileName terra.StringValue `hcl:"profile_name,attr" validate:"required"`
	// Destination: required
	Destination *Destination `hcl:"destination,block" validate:"required"`
	// Source: required
	Source *Source `hcl:"source,block" validate:"required"`
}

type awsSignerSigningJobAttributes struct {
	ref terra.Reference
}

// CompletedAt returns a reference to field completed_at of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) CompletedAt() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("completed_at"))
}

// CreatedAt returns a reference to field created_at of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("created_at"))
}

// Id returns a reference to field id of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("id"))
}

// IgnoreSigningJobFailure returns a reference to field ignore_signing_job_failure of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) IgnoreSigningJobFailure() terra.BoolValue {
	return terra.ReferenceAsBool(assj.ref.Append("ignore_signing_job_failure"))
}

// JobId returns a reference to field job_id of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) JobId() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("job_id"))
}

// JobInvoker returns a reference to field job_invoker of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) JobInvoker() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("job_invoker"))
}

// JobOwner returns a reference to field job_owner of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) JobOwner() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("job_owner"))
}

// PlatformDisplayName returns a reference to field platform_display_name of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) PlatformDisplayName() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("platform_display_name"))
}

// PlatformId returns a reference to field platform_id of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) PlatformId() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("platform_id"))
}

// ProfileName returns a reference to field profile_name of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) ProfileName() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("profile_name"))
}

// ProfileVersion returns a reference to field profile_version of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) ProfileVersion() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("profile_version"))
}

// RequestedBy returns a reference to field requested_by of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) RequestedBy() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("requested_by"))
}

// SignatureExpiresAt returns a reference to field signature_expires_at of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) SignatureExpiresAt() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("signature_expires_at"))
}

// Status returns a reference to field status of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("status"))
}

// StatusReason returns a reference to field status_reason of aws_signer_signing_job.
func (assj awsSignerSigningJobAttributes) StatusReason() terra.StringValue {
	return terra.ReferenceAsString(assj.ref.Append("status_reason"))
}

func (assj awsSignerSigningJobAttributes) RevocationRecord() terra.ListValue[RevocationRecordAttributes] {
	return terra.ReferenceAsList[RevocationRecordAttributes](assj.ref.Append("revocation_record"))
}

func (assj awsSignerSigningJobAttributes) SignedObject() terra.ListValue[SignedObjectAttributes] {
	return terra.ReferenceAsList[SignedObjectAttributes](assj.ref.Append("signed_object"))
}

func (assj awsSignerSigningJobAttributes) Destination() terra.ListValue[DestinationAttributes] {
	return terra.ReferenceAsList[DestinationAttributes](assj.ref.Append("destination"))
}

func (assj awsSignerSigningJobAttributes) Source() terra.ListValue[SourceAttributes] {
	return terra.ReferenceAsList[SourceAttributes](assj.ref.Append("source"))
}

type awsSignerSigningJobState struct {
	CompletedAt             string                  `json:"completed_at"`
	CreatedAt               string                  `json:"created_at"`
	Id                      string                  `json:"id"`
	IgnoreSigningJobFailure bool                    `json:"ignore_signing_job_failure"`
	JobId                   string                  `json:"job_id"`
	JobInvoker              string                  `json:"job_invoker"`
	JobOwner                string                  `json:"job_owner"`
	PlatformDisplayName     string                  `json:"platform_display_name"`
	PlatformId              string                  `json:"platform_id"`
	ProfileName             string                  `json:"profile_name"`
	ProfileVersion          string                  `json:"profile_version"`
	RequestedBy             string                  `json:"requested_by"`
	SignatureExpiresAt      string                  `json:"signature_expires_at"`
	Status                  string                  `json:"status"`
	StatusReason            string                  `json:"status_reason"`
	RevocationRecord        []RevocationRecordState `json:"revocation_record"`
	SignedObject            []SignedObjectState     `json:"signed_object"`
	Destination             []DestinationState      `json:"destination"`
	Source                  []SourceState           `json:"source"`
}
