// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_codedeploy_deployment_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MinimumHealthyHosts struct {
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Value: number, optional
	Value terra.NumberValue `hcl:"value,attr"`
}

type TrafficRoutingConfig struct {
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// TrafficRoutingConfigTimeBasedCanary: optional
	TimeBasedCanary *TrafficRoutingConfigTimeBasedCanary `hcl:"time_based_canary,block"`
	// TrafficRoutingConfigTimeBasedLinear: optional
	TimeBasedLinear *TrafficRoutingConfigTimeBasedLinear `hcl:"time_based_linear,block"`
}

type TrafficRoutingConfigTimeBasedCanary struct {
	// Interval: number, optional
	Interval terra.NumberValue `hcl:"interval,attr"`
	// Percentage: number, optional
	Percentage terra.NumberValue `hcl:"percentage,attr"`
}

type TrafficRoutingConfigTimeBasedLinear struct {
	// Interval: number, optional
	Interval terra.NumberValue `hcl:"interval,attr"`
	// Percentage: number, optional
	Percentage terra.NumberValue `hcl:"percentage,attr"`
}

type MinimumHealthyHostsAttributes struct {
	ref terra.Reference
}

func (mhh MinimumHealthyHostsAttributes) InternalRef() (terra.Reference, error) {
	return mhh.ref, nil
}

func (mhh MinimumHealthyHostsAttributes) InternalWithRef(ref terra.Reference) MinimumHealthyHostsAttributes {
	return MinimumHealthyHostsAttributes{ref: ref}
}

func (mhh MinimumHealthyHostsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mhh.ref.InternalTokens()
}

func (mhh MinimumHealthyHostsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(mhh.ref.Append("type"))
}

func (mhh MinimumHealthyHostsAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(mhh.ref.Append("value"))
}

type TrafficRoutingConfigAttributes struct {
	ref terra.Reference
}

func (trc TrafficRoutingConfigAttributes) InternalRef() (terra.Reference, error) {
	return trc.ref, nil
}

func (trc TrafficRoutingConfigAttributes) InternalWithRef(ref terra.Reference) TrafficRoutingConfigAttributes {
	return TrafficRoutingConfigAttributes{ref: ref}
}

func (trc TrafficRoutingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return trc.ref.InternalTokens()
}

func (trc TrafficRoutingConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(trc.ref.Append("type"))
}

func (trc TrafficRoutingConfigAttributes) TimeBasedCanary() terra.ListValue[TrafficRoutingConfigTimeBasedCanaryAttributes] {
	return terra.ReferenceAsList[TrafficRoutingConfigTimeBasedCanaryAttributes](trc.ref.Append("time_based_canary"))
}

func (trc TrafficRoutingConfigAttributes) TimeBasedLinear() terra.ListValue[TrafficRoutingConfigTimeBasedLinearAttributes] {
	return terra.ReferenceAsList[TrafficRoutingConfigTimeBasedLinearAttributes](trc.ref.Append("time_based_linear"))
}

type TrafficRoutingConfigTimeBasedCanaryAttributes struct {
	ref terra.Reference
}

func (tbc TrafficRoutingConfigTimeBasedCanaryAttributes) InternalRef() (terra.Reference, error) {
	return tbc.ref, nil
}

func (tbc TrafficRoutingConfigTimeBasedCanaryAttributes) InternalWithRef(ref terra.Reference) TrafficRoutingConfigTimeBasedCanaryAttributes {
	return TrafficRoutingConfigTimeBasedCanaryAttributes{ref: ref}
}

func (tbc TrafficRoutingConfigTimeBasedCanaryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbc.ref.InternalTokens()
}

func (tbc TrafficRoutingConfigTimeBasedCanaryAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(tbc.ref.Append("interval"))
}

func (tbc TrafficRoutingConfigTimeBasedCanaryAttributes) Percentage() terra.NumberValue {
	return terra.ReferenceAsNumber(tbc.ref.Append("percentage"))
}

type TrafficRoutingConfigTimeBasedLinearAttributes struct {
	ref terra.Reference
}

func (tbl TrafficRoutingConfigTimeBasedLinearAttributes) InternalRef() (terra.Reference, error) {
	return tbl.ref, nil
}

func (tbl TrafficRoutingConfigTimeBasedLinearAttributes) InternalWithRef(ref terra.Reference) TrafficRoutingConfigTimeBasedLinearAttributes {
	return TrafficRoutingConfigTimeBasedLinearAttributes{ref: ref}
}

func (tbl TrafficRoutingConfigTimeBasedLinearAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbl.ref.InternalTokens()
}

func (tbl TrafficRoutingConfigTimeBasedLinearAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(tbl.ref.Append("interval"))
}

func (tbl TrafficRoutingConfigTimeBasedLinearAttributes) Percentage() terra.NumberValue {
	return terra.ReferenceAsNumber(tbl.ref.Append("percentage"))
}

type MinimumHealthyHostsState struct {
	Type  string  `json:"type"`
	Value float64 `json:"value"`
}

type TrafficRoutingConfigState struct {
	Type            string                                     `json:"type"`
	TimeBasedCanary []TrafficRoutingConfigTimeBasedCanaryState `json:"time_based_canary"`
	TimeBasedLinear []TrafficRoutingConfigTimeBasedLinearState `json:"time_based_linear"`
}

type TrafficRoutingConfigTimeBasedCanaryState struct {
	Interval   float64 `json:"interval"`
	Percentage float64 `json:"percentage"`
}

type TrafficRoutingConfigTimeBasedLinearState struct {
	Interval   float64 `json:"interval"`
	Percentage float64 `json:"percentage"`
}
