// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_internet_gateway_attachment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_internet_gateway_attachment.
type Resource struct {
	Name      string
	Args      Args
	state     *awsInternetGatewayAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aiga *Resource) Type() string {
	return "aws_internet_gateway_attachment"
}

// LocalName returns the local name for [Resource].
func (aiga *Resource) LocalName() string {
	return aiga.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aiga *Resource) Configuration() interface{} {
	return aiga.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aiga *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aiga)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aiga *Resource) Dependencies() terra.Dependencies {
	return aiga.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aiga *Resource) LifecycleManagement() *terra.Lifecycle {
	return aiga.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aiga *Resource) Attributes() awsInternetGatewayAttachmentAttributes {
	return awsInternetGatewayAttachmentAttributes{ref: terra.ReferenceResource(aiga)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aiga *Resource) ImportState(state io.Reader) error {
	aiga.state = &awsInternetGatewayAttachmentState{}
	if err := json.NewDecoder(state).Decode(aiga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiga.Type(), aiga.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aiga *Resource) State() (*awsInternetGatewayAttachmentState, bool) {
	return aiga.state, aiga.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aiga *Resource) StateMust() *awsInternetGatewayAttachmentState {
	if aiga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiga.Type(), aiga.LocalName()))
	}
	return aiga.state
}

// Args contains the configurations for aws_internet_gateway_attachment.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InternetGatewayId: string, required
	InternetGatewayId terra.StringValue `hcl:"internet_gateway_id,attr" validate:"required"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsInternetGatewayAttachmentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_internet_gateway_attachment.
func (aiga awsInternetGatewayAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiga.ref.Append("id"))
}

// InternetGatewayId returns a reference to field internet_gateway_id of aws_internet_gateway_attachment.
func (aiga awsInternetGatewayAttachmentAttributes) InternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(aiga.ref.Append("internet_gateway_id"))
}

// VpcId returns a reference to field vpc_id of aws_internet_gateway_attachment.
func (aiga awsInternetGatewayAttachmentAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(aiga.ref.Append("vpc_id"))
}

func (aiga awsInternetGatewayAttachmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aiga.ref.Append("timeouts"))
}

type awsInternetGatewayAttachmentState struct {
	Id                string         `json:"id"`
	InternetGatewayId string         `json:"internet_gateway_id"`
	VpcId             string         `json:"vpc_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
