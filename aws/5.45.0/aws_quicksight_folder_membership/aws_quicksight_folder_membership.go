// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_quicksight_folder_membership

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_quicksight_folder_membership.
type Resource struct {
	Name      string
	Args      Args
	state     *awsQuicksightFolderMembershipState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aqfm *Resource) Type() string {
	return "aws_quicksight_folder_membership"
}

// LocalName returns the local name for [Resource].
func (aqfm *Resource) LocalName() string {
	return aqfm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aqfm *Resource) Configuration() interface{} {
	return aqfm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aqfm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aqfm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aqfm *Resource) Dependencies() terra.Dependencies {
	return aqfm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aqfm *Resource) LifecycleManagement() *terra.Lifecycle {
	return aqfm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aqfm *Resource) Attributes() awsQuicksightFolderMembershipAttributes {
	return awsQuicksightFolderMembershipAttributes{ref: terra.ReferenceResource(aqfm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aqfm *Resource) ImportState(state io.Reader) error {
	aqfm.state = &awsQuicksightFolderMembershipState{}
	if err := json.NewDecoder(state).Decode(aqfm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aqfm.Type(), aqfm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aqfm *Resource) State() (*awsQuicksightFolderMembershipState, bool) {
	return aqfm.state, aqfm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aqfm *Resource) StateMust() *awsQuicksightFolderMembershipState {
	if aqfm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aqfm.Type(), aqfm.LocalName()))
	}
	return aqfm.state
}

// Args contains the configurations for aws_quicksight_folder_membership.
type Args struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// FolderId: string, required
	FolderId terra.StringValue `hcl:"folder_id,attr" validate:"required"`
	// MemberId: string, required
	MemberId terra.StringValue `hcl:"member_id,attr" validate:"required"`
	// MemberType: string, required
	MemberType terra.StringValue `hcl:"member_type,attr" validate:"required"`
}

type awsQuicksightFolderMembershipAttributes struct {
	ref terra.Reference
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_folder_membership.
func (aqfm awsQuicksightFolderMembershipAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(aqfm.ref.Append("aws_account_id"))
}

// FolderId returns a reference to field folder_id of aws_quicksight_folder_membership.
func (aqfm awsQuicksightFolderMembershipAttributes) FolderId() terra.StringValue {
	return terra.ReferenceAsString(aqfm.ref.Append("folder_id"))
}

// Id returns a reference to field id of aws_quicksight_folder_membership.
func (aqfm awsQuicksightFolderMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aqfm.ref.Append("id"))
}

// MemberId returns a reference to field member_id of aws_quicksight_folder_membership.
func (aqfm awsQuicksightFolderMembershipAttributes) MemberId() terra.StringValue {
	return terra.ReferenceAsString(aqfm.ref.Append("member_id"))
}

// MemberType returns a reference to field member_type of aws_quicksight_folder_membership.
func (aqfm awsQuicksightFolderMembershipAttributes) MemberType() terra.StringValue {
	return terra.ReferenceAsString(aqfm.ref.Append("member_type"))
}

type awsQuicksightFolderMembershipState struct {
	AwsAccountId string `json:"aws_account_id"`
	FolderId     string `json:"folder_id"`
	Id           string `json:"id"`
	MemberId     string `json:"member_id"`
	MemberType   string `json:"member_type"`
}
