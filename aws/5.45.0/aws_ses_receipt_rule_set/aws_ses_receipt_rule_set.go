// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ses_receipt_rule_set

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ses_receipt_rule_set.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesReceiptRuleSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asrrs *Resource) Type() string {
	return "aws_ses_receipt_rule_set"
}

// LocalName returns the local name for [Resource].
func (asrrs *Resource) LocalName() string {
	return asrrs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asrrs *Resource) Configuration() interface{} {
	return asrrs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asrrs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asrrs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asrrs *Resource) Dependencies() terra.Dependencies {
	return asrrs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asrrs *Resource) LifecycleManagement() *terra.Lifecycle {
	return asrrs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asrrs *Resource) Attributes() awsSesReceiptRuleSetAttributes {
	return awsSesReceiptRuleSetAttributes{ref: terra.ReferenceResource(asrrs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asrrs *Resource) ImportState(state io.Reader) error {
	asrrs.state = &awsSesReceiptRuleSetState{}
	if err := json.NewDecoder(state).Decode(asrrs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asrrs.Type(), asrrs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asrrs *Resource) State() (*awsSesReceiptRuleSetState, bool) {
	return asrrs.state, asrrs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asrrs *Resource) StateMust() *awsSesReceiptRuleSetState {
	if asrrs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asrrs.Type(), asrrs.LocalName()))
	}
	return asrrs.state
}

// Args contains the configurations for aws_ses_receipt_rule_set.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RuleSetName: string, required
	RuleSetName terra.StringValue `hcl:"rule_set_name,attr" validate:"required"`
}

type awsSesReceiptRuleSetAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ses_receipt_rule_set.
func (asrrs awsSesReceiptRuleSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asrrs.ref.Append("arn"))
}

// Id returns a reference to field id of aws_ses_receipt_rule_set.
func (asrrs awsSesReceiptRuleSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asrrs.ref.Append("id"))
}

// RuleSetName returns a reference to field rule_set_name of aws_ses_receipt_rule_set.
func (asrrs awsSesReceiptRuleSetAttributes) RuleSetName() terra.StringValue {
	return terra.ReferenceAsString(asrrs.ref.Append("rule_set_name"))
}

type awsSesReceiptRuleSetState struct {
	Arn         string `json:"arn"`
	Id          string `json:"id"`
	RuleSetName string `json:"rule_set_name"`
}
