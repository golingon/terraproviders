// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_network_interface

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values: set of string, required
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAssociationAttributes struct {
	ref terra.Reference
}

func (a DataAssociationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAssociationAttributes) InternalWithRef(ref terra.Reference) DataAssociationAttributes {
	return DataAssociationAttributes{ref: ref}
}

func (a DataAssociationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAssociationAttributes) AllocationId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("allocation_id"))
}

func (a DataAssociationAttributes) AssociationId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("association_id"))
}

func (a DataAssociationAttributes) CarrierIp() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("carrier_ip"))
}

func (a DataAssociationAttributes) CustomerOwnedIp() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("customer_owned_ip"))
}

func (a DataAssociationAttributes) IpOwnerId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("ip_owner_id"))
}

func (a DataAssociationAttributes) PublicDnsName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("public_dns_name"))
}

func (a DataAssociationAttributes) PublicIp() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("public_ip"))
}

type DataAttachmentAttributes struct {
	ref terra.Reference
}

func (a DataAttachmentAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAttachmentAttributes) InternalWithRef(ref terra.Reference) DataAttachmentAttributes {
	return DataAttachmentAttributes{ref: ref}
}

func (a DataAttachmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAttachmentAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("attachment_id"))
}

func (a DataAttachmentAttributes) DeviceIndex() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("device_index"))
}

func (a DataAttachmentAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("instance_id"))
}

func (a DataAttachmentAttributes) InstanceOwnerId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("instance_owner_id"))
}

type DataFilterAttributes struct {
	ref terra.Reference
}

func (f DataFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFilterAttributes) InternalWithRef(ref terra.Reference) DataFilterAttributes {
	return DataFilterAttributes{ref: ref}
}

func (f DataFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DataFilterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](f.ref.Append("values"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAssociationState struct {
	AllocationId    string `json:"allocation_id"`
	AssociationId   string `json:"association_id"`
	CarrierIp       string `json:"carrier_ip"`
	CustomerOwnedIp string `json:"customer_owned_ip"`
	IpOwnerId       string `json:"ip_owner_id"`
	PublicDnsName   string `json:"public_dns_name"`
	PublicIp        string `json:"public_ip"`
}

type DataAttachmentState struct {
	AttachmentId    string  `json:"attachment_id"`
	DeviceIndex     float64 `json:"device_index"`
	InstanceId      string  `json:"instance_id"`
	InstanceOwnerId string  `json:"instance_owner_id"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
