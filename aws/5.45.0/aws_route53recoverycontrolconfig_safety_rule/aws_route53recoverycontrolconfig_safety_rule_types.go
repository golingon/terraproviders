// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53recoverycontrolconfig_safety_rule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type RuleConfig struct {
	// Inverted: bool, required
	Inverted terra.BoolValue `hcl:"inverted,attr" validate:"required"`
	// Threshold: number, required
	Threshold terra.NumberValue `hcl:"threshold,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type RuleConfigAttributes struct {
	ref terra.Reference
}

func (rc RuleConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc RuleConfigAttributes) InternalWithRef(ref terra.Reference) RuleConfigAttributes {
	return RuleConfigAttributes{ref: ref}
}

func (rc RuleConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc RuleConfigAttributes) Inverted() terra.BoolValue {
	return terra.ReferenceAsBool(rc.ref.Append("inverted"))
}

func (rc RuleConfigAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("threshold"))
}

func (rc RuleConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("type"))
}

type RuleConfigState struct {
	Inverted  bool    `json:"inverted"`
	Threshold float64 `json:"threshold"`
	Type      string  `json:"type"`
}
