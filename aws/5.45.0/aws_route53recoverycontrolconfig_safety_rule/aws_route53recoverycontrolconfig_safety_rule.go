// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53recoverycontrolconfig_safety_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_route53recoverycontrolconfig_safety_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *awsRoute53RecoverycontrolconfigSafetyRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arsr *Resource) Type() string {
	return "aws_route53recoverycontrolconfig_safety_rule"
}

// LocalName returns the local name for [Resource].
func (arsr *Resource) LocalName() string {
	return arsr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arsr *Resource) Configuration() interface{} {
	return arsr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arsr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arsr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arsr *Resource) Dependencies() terra.Dependencies {
	return arsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arsr *Resource) LifecycleManagement() *terra.Lifecycle {
	return arsr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arsr *Resource) Attributes() awsRoute53RecoverycontrolconfigSafetyRuleAttributes {
	return awsRoute53RecoverycontrolconfigSafetyRuleAttributes{ref: terra.ReferenceResource(arsr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arsr *Resource) ImportState(state io.Reader) error {
	arsr.state = &awsRoute53RecoverycontrolconfigSafetyRuleState{}
	if err := json.NewDecoder(state).Decode(arsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arsr.Type(), arsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arsr *Resource) State() (*awsRoute53RecoverycontrolconfigSafetyRuleState, bool) {
	return arsr.state, arsr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arsr *Resource) StateMust() *awsRoute53RecoverycontrolconfigSafetyRuleState {
	if arsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arsr.Type(), arsr.LocalName()))
	}
	return arsr.state
}

// Args contains the configurations for aws_route53recoverycontrolconfig_safety_rule.
type Args struct {
	// AssertedControls: list of string, optional
	AssertedControls terra.ListValue[terra.StringValue] `hcl:"asserted_controls,attr"`
	// ControlPanelArn: string, required
	ControlPanelArn terra.StringValue `hcl:"control_panel_arn,attr" validate:"required"`
	// GatingControls: list of string, optional
	GatingControls terra.ListValue[terra.StringValue] `hcl:"gating_controls,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TargetControls: list of string, optional
	TargetControls terra.ListValue[terra.StringValue] `hcl:"target_controls,attr"`
	// WaitPeriodMs: number, required
	WaitPeriodMs terra.NumberValue `hcl:"wait_period_ms,attr" validate:"required"`
	// RuleConfig: required
	RuleConfig *RuleConfig `hcl:"rule_config,block" validate:"required"`
}

type awsRoute53RecoverycontrolconfigSafetyRuleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arsr.ref.Append("arn"))
}

// AssertedControls returns a reference to field asserted_controls of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) AssertedControls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](arsr.ref.Append("asserted_controls"))
}

// ControlPanelArn returns a reference to field control_panel_arn of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) ControlPanelArn() terra.StringValue {
	return terra.ReferenceAsString(arsr.ref.Append("control_panel_arn"))
}

// GatingControls returns a reference to field gating_controls of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) GatingControls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](arsr.ref.Append("gating_controls"))
}

// Id returns a reference to field id of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arsr.ref.Append("id"))
}

// Name returns a reference to field name of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arsr.ref.Append("name"))
}

// Status returns a reference to field status of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(arsr.ref.Append("status"))
}

// TargetControls returns a reference to field target_controls of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) TargetControls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](arsr.ref.Append("target_controls"))
}

// WaitPeriodMs returns a reference to field wait_period_ms of aws_route53recoverycontrolconfig_safety_rule.
func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) WaitPeriodMs() terra.NumberValue {
	return terra.ReferenceAsNumber(arsr.ref.Append("wait_period_ms"))
}

func (arsr awsRoute53RecoverycontrolconfigSafetyRuleAttributes) RuleConfig() terra.ListValue[RuleConfigAttributes] {
	return terra.ReferenceAsList[RuleConfigAttributes](arsr.ref.Append("rule_config"))
}

type awsRoute53RecoverycontrolconfigSafetyRuleState struct {
	Arn              string            `json:"arn"`
	AssertedControls []string          `json:"asserted_controls"`
	ControlPanelArn  string            `json:"control_panel_arn"`
	GatingControls   []string          `json:"gating_controls"`
	Id               string            `json:"id"`
	Name             string            `json:"name"`
	Status           string            `json:"status"`
	TargetControls   []string          `json:"target_controls"`
	WaitPeriodMs     float64           `json:"wait_period_ms"`
	RuleConfig       []RuleConfigState `json:"rule_config"`
}
