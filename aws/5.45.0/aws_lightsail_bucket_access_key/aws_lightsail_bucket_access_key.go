// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lightsail_bucket_access_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lightsail_bucket_access_key.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLightsailBucketAccessKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (albak *Resource) Type() string {
	return "aws_lightsail_bucket_access_key"
}

// LocalName returns the local name for [Resource].
func (albak *Resource) LocalName() string {
	return albak.Name
}

// Configuration returns the configuration (args) for [Resource].
func (albak *Resource) Configuration() interface{} {
	return albak.Args
}

// DependOn is used for other resources to depend on [Resource].
func (albak *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(albak)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (albak *Resource) Dependencies() terra.Dependencies {
	return albak.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (albak *Resource) LifecycleManagement() *terra.Lifecycle {
	return albak.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (albak *Resource) Attributes() awsLightsailBucketAccessKeyAttributes {
	return awsLightsailBucketAccessKeyAttributes{ref: terra.ReferenceResource(albak)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (albak *Resource) ImportState(state io.Reader) error {
	albak.state = &awsLightsailBucketAccessKeyState{}
	if err := json.NewDecoder(state).Decode(albak.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", albak.Type(), albak.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (albak *Resource) State() (*awsLightsailBucketAccessKeyState, bool) {
	return albak.state, albak.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (albak *Resource) StateMust() *awsLightsailBucketAccessKeyState {
	if albak.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", albak.Type(), albak.LocalName()))
	}
	return albak.state
}

// Args contains the configurations for aws_lightsail_bucket_access_key.
type Args struct {
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsLightsailBucketAccessKeyAttributes struct {
	ref terra.Reference
}

// AccessKeyId returns a reference to field access_key_id of aws_lightsail_bucket_access_key.
func (albak awsLightsailBucketAccessKeyAttributes) AccessKeyId() terra.StringValue {
	return terra.ReferenceAsString(albak.ref.Append("access_key_id"))
}

// BucketName returns a reference to field bucket_name of aws_lightsail_bucket_access_key.
func (albak awsLightsailBucketAccessKeyAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(albak.ref.Append("bucket_name"))
}

// CreatedAt returns a reference to field created_at of aws_lightsail_bucket_access_key.
func (albak awsLightsailBucketAccessKeyAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(albak.ref.Append("created_at"))
}

// Id returns a reference to field id of aws_lightsail_bucket_access_key.
func (albak awsLightsailBucketAccessKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(albak.ref.Append("id"))
}

// SecretAccessKey returns a reference to field secret_access_key of aws_lightsail_bucket_access_key.
func (albak awsLightsailBucketAccessKeyAttributes) SecretAccessKey() terra.StringValue {
	return terra.ReferenceAsString(albak.ref.Append("secret_access_key"))
}

// Status returns a reference to field status of aws_lightsail_bucket_access_key.
func (albak awsLightsailBucketAccessKeyAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(albak.ref.Append("status"))
}

type awsLightsailBucketAccessKeyState struct {
	AccessKeyId     string `json:"access_key_id"`
	BucketName      string `json:"bucket_name"`
	CreatedAt       string `json:"created_at"`
	Id              string `json:"id"`
	SecretAccessKey string `json:"secret_access_key"`
	Status          string `json:"status"`
}
