// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_instance_storage_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataStorageConfigAttributes struct {
	ref terra.Reference
}

func (sc DataStorageConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataStorageConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigAttributes {
	return DataStorageConfigAttributes{ref: ref}
}

func (sc DataStorageConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataStorageConfigAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("storage_type"))
}

func (sc DataStorageConfigAttributes) KinesisFirehoseConfig() terra.ListValue[DataStorageConfigKinesisFirehoseConfigAttributes] {
	return terra.ReferenceAsList[DataStorageConfigKinesisFirehoseConfigAttributes](sc.ref.Append("kinesis_firehose_config"))
}

func (sc DataStorageConfigAttributes) KinesisStreamConfig() terra.ListValue[DataStorageConfigKinesisStreamConfigAttributes] {
	return terra.ReferenceAsList[DataStorageConfigKinesisStreamConfigAttributes](sc.ref.Append("kinesis_stream_config"))
}

func (sc DataStorageConfigAttributes) KinesisVideoStreamConfig() terra.ListValue[DataStorageConfigKinesisVideoStreamConfigAttributes] {
	return terra.ReferenceAsList[DataStorageConfigKinesisVideoStreamConfigAttributes](sc.ref.Append("kinesis_video_stream_config"))
}

func (sc DataStorageConfigAttributes) S3Config() terra.ListValue[DataStorageConfigS3ConfigAttributes] {
	return terra.ReferenceAsList[DataStorageConfigS3ConfigAttributes](sc.ref.Append("s3_config"))
}

type DataStorageConfigKinesisFirehoseConfigAttributes struct {
	ref terra.Reference
}

func (kfc DataStorageConfigKinesisFirehoseConfigAttributes) InternalRef() (terra.Reference, error) {
	return kfc.ref, nil
}

func (kfc DataStorageConfigKinesisFirehoseConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigKinesisFirehoseConfigAttributes {
	return DataStorageConfigKinesisFirehoseConfigAttributes{ref: ref}
}

func (kfc DataStorageConfigKinesisFirehoseConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfc.ref.InternalTokens()
}

func (kfc DataStorageConfigKinesisFirehoseConfigAttributes) FirehoseArn() terra.StringValue {
	return terra.ReferenceAsString(kfc.ref.Append("firehose_arn"))
}

type DataStorageConfigKinesisStreamConfigAttributes struct {
	ref terra.Reference
}

func (ksc DataStorageConfigKinesisStreamConfigAttributes) InternalRef() (terra.Reference, error) {
	return ksc.ref, nil
}

func (ksc DataStorageConfigKinesisStreamConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigKinesisStreamConfigAttributes {
	return DataStorageConfigKinesisStreamConfigAttributes{ref: ref}
}

func (ksc DataStorageConfigKinesisStreamConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ksc.ref.InternalTokens()
}

func (ksc DataStorageConfigKinesisStreamConfigAttributes) StreamArn() terra.StringValue {
	return terra.ReferenceAsString(ksc.ref.Append("stream_arn"))
}

type DataStorageConfigKinesisVideoStreamConfigAttributes struct {
	ref terra.Reference
}

func (kvsc DataStorageConfigKinesisVideoStreamConfigAttributes) InternalRef() (terra.Reference, error) {
	return kvsc.ref, nil
}

func (kvsc DataStorageConfigKinesisVideoStreamConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigKinesisVideoStreamConfigAttributes {
	return DataStorageConfigKinesisVideoStreamConfigAttributes{ref: ref}
}

func (kvsc DataStorageConfigKinesisVideoStreamConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kvsc.ref.InternalTokens()
}

func (kvsc DataStorageConfigKinesisVideoStreamConfigAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(kvsc.ref.Append("prefix"))
}

func (kvsc DataStorageConfigKinesisVideoStreamConfigAttributes) RetentionPeriodHours() terra.NumberValue {
	return terra.ReferenceAsNumber(kvsc.ref.Append("retention_period_hours"))
}

func (kvsc DataStorageConfigKinesisVideoStreamConfigAttributes) EncryptionConfig() terra.ListValue[DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes] {
	return terra.ReferenceAsList[DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes](kvsc.ref.Append("encryption_config"))
}

type DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes struct {
	ref terra.Reference
}

func (ec DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes {
	return DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes{ref: ref}
}

func (ec DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("encryption_type"))
}

func (ec DataStorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

type DataStorageConfigS3ConfigAttributes struct {
	ref terra.Reference
}

func (sc DataStorageConfigS3ConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataStorageConfigS3ConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigS3ConfigAttributes {
	return DataStorageConfigS3ConfigAttributes{ref: ref}
}

func (sc DataStorageConfigS3ConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataStorageConfigS3ConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("bucket_name"))
}

func (sc DataStorageConfigS3ConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("bucket_prefix"))
}

func (sc DataStorageConfigS3ConfigAttributes) EncryptionConfig() terra.ListValue[DataStorageConfigS3ConfigEncryptionConfigAttributes] {
	return terra.ReferenceAsList[DataStorageConfigS3ConfigEncryptionConfigAttributes](sc.ref.Append("encryption_config"))
}

type DataStorageConfigS3ConfigEncryptionConfigAttributes struct {
	ref terra.Reference
}

func (ec DataStorageConfigS3ConfigEncryptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec DataStorageConfigS3ConfigEncryptionConfigAttributes) InternalWithRef(ref terra.Reference) DataStorageConfigS3ConfigEncryptionConfigAttributes {
	return DataStorageConfigS3ConfigEncryptionConfigAttributes{ref: ref}
}

func (ec DataStorageConfigS3ConfigEncryptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec DataStorageConfigS3ConfigEncryptionConfigAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("encryption_type"))
}

func (ec DataStorageConfigS3ConfigEncryptionConfigAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

type DataStorageConfigState struct {
	StorageType              string                                           `json:"storage_type"`
	KinesisFirehoseConfig    []DataStorageConfigKinesisFirehoseConfigState    `json:"kinesis_firehose_config"`
	KinesisStreamConfig      []DataStorageConfigKinesisStreamConfigState      `json:"kinesis_stream_config"`
	KinesisVideoStreamConfig []DataStorageConfigKinesisVideoStreamConfigState `json:"kinesis_video_stream_config"`
	S3Config                 []DataStorageConfigS3ConfigState                 `json:"s3_config"`
}

type DataStorageConfigKinesisFirehoseConfigState struct {
	FirehoseArn string `json:"firehose_arn"`
}

type DataStorageConfigKinesisStreamConfigState struct {
	StreamArn string `json:"stream_arn"`
}

type DataStorageConfigKinesisVideoStreamConfigState struct {
	Prefix               string                                                           `json:"prefix"`
	RetentionPeriodHours float64                                                          `json:"retention_period_hours"`
	EncryptionConfig     []DataStorageConfigKinesisVideoStreamConfigEncryptionConfigState `json:"encryption_config"`
}

type DataStorageConfigKinesisVideoStreamConfigEncryptionConfigState struct {
	EncryptionType string `json:"encryption_type"`
	KeyId          string `json:"key_id"`
}

type DataStorageConfigS3ConfigState struct {
	BucketName       string                                           `json:"bucket_name"`
	BucketPrefix     string                                           `json:"bucket_prefix"`
	EncryptionConfig []DataStorageConfigS3ConfigEncryptionConfigState `json:"encryption_config"`
}

type DataStorageConfigS3ConfigEncryptionConfigState struct {
	EncryptionType string `json:"encryption_type"`
	KeyId          string `json:"key_id"`
}
