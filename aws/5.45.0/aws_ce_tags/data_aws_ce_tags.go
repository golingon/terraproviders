// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ce_tags

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_ce_tags.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (act *DataSource) DataSource() string {
	return "aws_ce_tags"
}

// LocalName returns the local name for [DataSource].
func (act *DataSource) LocalName() string {
	return act.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (act *DataSource) Configuration() interface{} {
	return act.Args
}

// Attributes returns the attributes for [DataSource].
func (act *DataSource) Attributes() dataAwsCeTagsAttributes {
	return dataAwsCeTagsAttributes{ref: terra.ReferenceDataSource(act)}
}

// DataArgs contains the configurations for aws_ce_tags.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SearchString: string, optional
	SearchString terra.StringValue `hcl:"search_string,attr"`
	// TagKey: string, optional
	TagKey terra.StringValue `hcl:"tag_key,attr"`
	// Filter: optional
	Filter *DataFilter `hcl:"filter,block"`
	// SortBy: min=0
	SortBy []DataSortBy `hcl:"sort_by,block" validate:"min=0"`
	// TimePeriod: required
	TimePeriod *DataTimePeriod `hcl:"time_period,block" validate:"required"`
}

type dataAwsCeTagsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ce_tags.
func (act dataAwsCeTagsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(act.ref.Append("id"))
}

// SearchString returns a reference to field search_string of aws_ce_tags.
func (act dataAwsCeTagsAttributes) SearchString() terra.StringValue {
	return terra.ReferenceAsString(act.ref.Append("search_string"))
}

// TagKey returns a reference to field tag_key of aws_ce_tags.
func (act dataAwsCeTagsAttributes) TagKey() terra.StringValue {
	return terra.ReferenceAsString(act.ref.Append("tag_key"))
}

// Tags returns a reference to field tags of aws_ce_tags.
func (act dataAwsCeTagsAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](act.ref.Append("tags"))
}

func (act dataAwsCeTagsAttributes) Filter() terra.ListValue[DataFilterAttributes] {
	return terra.ReferenceAsList[DataFilterAttributes](act.ref.Append("filter"))
}

func (act dataAwsCeTagsAttributes) SortBy() terra.ListValue[DataSortByAttributes] {
	return terra.ReferenceAsList[DataSortByAttributes](act.ref.Append("sort_by"))
}

func (act dataAwsCeTagsAttributes) TimePeriod() terra.ListValue[DataTimePeriodAttributes] {
	return terra.ReferenceAsList[DataTimePeriodAttributes](act.ref.Append("time_period"))
}
