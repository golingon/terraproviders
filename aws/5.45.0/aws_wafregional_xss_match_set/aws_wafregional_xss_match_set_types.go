// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_wafregional_xss_match_set

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type XssMatchTuple struct {
	// TextTransformation: string, required
	TextTransformation terra.StringValue `hcl:"text_transformation,attr" validate:"required"`
	// XssMatchTupleFieldToMatch: required
	FieldToMatch *XssMatchTupleFieldToMatch `hcl:"field_to_match,block" validate:"required"`
}

type XssMatchTupleFieldToMatch struct {
	// Data: string, optional
	Data terra.StringValue `hcl:"data,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type XssMatchTupleAttributes struct {
	ref terra.Reference
}

func (xmt XssMatchTupleAttributes) InternalRef() (terra.Reference, error) {
	return xmt.ref, nil
}

func (xmt XssMatchTupleAttributes) InternalWithRef(ref terra.Reference) XssMatchTupleAttributes {
	return XssMatchTupleAttributes{ref: ref}
}

func (xmt XssMatchTupleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return xmt.ref.InternalTokens()
}

func (xmt XssMatchTupleAttributes) TextTransformation() terra.StringValue {
	return terra.ReferenceAsString(xmt.ref.Append("text_transformation"))
}

func (xmt XssMatchTupleAttributes) FieldToMatch() terra.ListValue[XssMatchTupleFieldToMatchAttributes] {
	return terra.ReferenceAsList[XssMatchTupleFieldToMatchAttributes](xmt.ref.Append("field_to_match"))
}

type XssMatchTupleFieldToMatchAttributes struct {
	ref terra.Reference
}

func (ftm XssMatchTupleFieldToMatchAttributes) InternalRef() (terra.Reference, error) {
	return ftm.ref, nil
}

func (ftm XssMatchTupleFieldToMatchAttributes) InternalWithRef(ref terra.Reference) XssMatchTupleFieldToMatchAttributes {
	return XssMatchTupleFieldToMatchAttributes{ref: ref}
}

func (ftm XssMatchTupleFieldToMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ftm.ref.InternalTokens()
}

func (ftm XssMatchTupleFieldToMatchAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("data"))
}

func (ftm XssMatchTupleFieldToMatchAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("type"))
}

type XssMatchTupleState struct {
	TextTransformation string                           `json:"text_transformation"`
	FieldToMatch       []XssMatchTupleFieldToMatchState `json:"field_to_match"`
}

type XssMatchTupleFieldToMatchState struct {
	Data string `json:"data"`
	Type string `json:"type"`
}
