// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkfirewall_firewall

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataEncryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec DataEncryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec DataEncryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) DataEncryptionConfigurationAttributes {
	return DataEncryptionConfigurationAttributes{ref: ref}
}

func (ec DataEncryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec DataEncryptionConfigurationAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

func (ec DataEncryptionConfigurationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("type"))
}

type DataFirewallStatusAttributes struct {
	ref terra.Reference
}

func (fs DataFirewallStatusAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs DataFirewallStatusAttributes) InternalWithRef(ref terra.Reference) DataFirewallStatusAttributes {
	return DataFirewallStatusAttributes{ref: ref}
}

func (fs DataFirewallStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs DataFirewallStatusAttributes) ConfigurationSyncStateSummary() terra.StringValue {
	return terra.ReferenceAsString(fs.ref.Append("configuration_sync_state_summary"))
}

func (fs DataFirewallStatusAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(fs.ref.Append("status"))
}

func (fs DataFirewallStatusAttributes) CapacityUsageSummary() terra.SetValue[DataFirewallStatusCapacityUsageSummaryAttributes] {
	return terra.ReferenceAsSet[DataFirewallStatusCapacityUsageSummaryAttributes](fs.ref.Append("capacity_usage_summary"))
}

func (fs DataFirewallStatusAttributes) SyncStates() terra.SetValue[DataFirewallStatusSyncStatesAttributes] {
	return terra.ReferenceAsSet[DataFirewallStatusSyncStatesAttributes](fs.ref.Append("sync_states"))
}

type DataFirewallStatusCapacityUsageSummaryAttributes struct {
	ref terra.Reference
}

func (cus DataFirewallStatusCapacityUsageSummaryAttributes) InternalRef() (terra.Reference, error) {
	return cus.ref, nil
}

func (cus DataFirewallStatusCapacityUsageSummaryAttributes) InternalWithRef(ref terra.Reference) DataFirewallStatusCapacityUsageSummaryAttributes {
	return DataFirewallStatusCapacityUsageSummaryAttributes{ref: ref}
}

func (cus DataFirewallStatusCapacityUsageSummaryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cus.ref.InternalTokens()
}

func (cus DataFirewallStatusCapacityUsageSummaryAttributes) Cidrs() terra.SetValue[DataFirewallStatusCapacityUsageSummaryCidrsAttributes] {
	return terra.ReferenceAsSet[DataFirewallStatusCapacityUsageSummaryCidrsAttributes](cus.ref.Append("cidrs"))
}

type DataFirewallStatusCapacityUsageSummaryCidrsAttributes struct {
	ref terra.Reference
}

func (c DataFirewallStatusCapacityUsageSummaryCidrsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataFirewallStatusCapacityUsageSummaryCidrsAttributes) InternalWithRef(ref terra.Reference) DataFirewallStatusCapacityUsageSummaryCidrsAttributes {
	return DataFirewallStatusCapacityUsageSummaryCidrsAttributes{ref: ref}
}

func (c DataFirewallStatusCapacityUsageSummaryCidrsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataFirewallStatusCapacityUsageSummaryCidrsAttributes) AvailableCidrCount() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("available_cidr_count"))
}

func (c DataFirewallStatusCapacityUsageSummaryCidrsAttributes) UtilizedCidrCount() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("utilized_cidr_count"))
}

func (c DataFirewallStatusCapacityUsageSummaryCidrsAttributes) IpSetReferences() terra.SetValue[DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes] {
	return terra.ReferenceAsSet[DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes](c.ref.Append("ip_set_references"))
}

type DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes struct {
	ref terra.Reference
}

func (isr DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) InternalWithRef(ref terra.Reference) DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes {
	return DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes{ref: ref}
}

func (isr DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) ResolvedCidrCount() terra.NumberValue {
	return terra.ReferenceAsNumber(isr.ref.Append("resolved_cidr_count"))
}

type DataFirewallStatusSyncStatesAttributes struct {
	ref terra.Reference
}

func (ss DataFirewallStatusSyncStatesAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DataFirewallStatusSyncStatesAttributes) InternalWithRef(ref terra.Reference) DataFirewallStatusSyncStatesAttributes {
	return DataFirewallStatusSyncStatesAttributes{ref: ref}
}

func (ss DataFirewallStatusSyncStatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DataFirewallStatusSyncStatesAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("availability_zone"))
}

func (ss DataFirewallStatusSyncStatesAttributes) Attachment() terra.ListValue[DataFirewallStatusSyncStatesAttachmentAttributes] {
	return terra.ReferenceAsList[DataFirewallStatusSyncStatesAttachmentAttributes](ss.ref.Append("attachment"))
}

type DataFirewallStatusSyncStatesAttachmentAttributes struct {
	ref terra.Reference
}

func (a DataFirewallStatusSyncStatesAttachmentAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataFirewallStatusSyncStatesAttachmentAttributes) InternalWithRef(ref terra.Reference) DataFirewallStatusSyncStatesAttachmentAttributes {
	return DataFirewallStatusSyncStatesAttachmentAttributes{ref: ref}
}

func (a DataFirewallStatusSyncStatesAttachmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataFirewallStatusSyncStatesAttachmentAttributes) EndpointId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("endpoint_id"))
}

func (a DataFirewallStatusSyncStatesAttachmentAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("status"))
}

func (a DataFirewallStatusSyncStatesAttachmentAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("subnet_id"))
}

type DataSubnetMappingAttributes struct {
	ref terra.Reference
}

func (sm DataSubnetMappingAttributes) InternalRef() (terra.Reference, error) {
	return sm.ref, nil
}

func (sm DataSubnetMappingAttributes) InternalWithRef(ref terra.Reference) DataSubnetMappingAttributes {
	return DataSubnetMappingAttributes{ref: ref}
}

func (sm DataSubnetMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sm.ref.InternalTokens()
}

func (sm DataSubnetMappingAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(sm.ref.Append("subnet_id"))
}

type DataEncryptionConfigurationState struct {
	KeyId string `json:"key_id"`
	Type  string `json:"type"`
}

type DataFirewallStatusState struct {
	ConfigurationSyncStateSummary string                                        `json:"configuration_sync_state_summary"`
	Status                        string                                        `json:"status"`
	CapacityUsageSummary          []DataFirewallStatusCapacityUsageSummaryState `json:"capacity_usage_summary"`
	SyncStates                    []DataFirewallStatusSyncStatesState           `json:"sync_states"`
}

type DataFirewallStatusCapacityUsageSummaryState struct {
	Cidrs []DataFirewallStatusCapacityUsageSummaryCidrsState `json:"cidrs"`
}

type DataFirewallStatusCapacityUsageSummaryCidrsState struct {
	AvailableCidrCount float64                                                           `json:"available_cidr_count"`
	UtilizedCidrCount  float64                                                           `json:"utilized_cidr_count"`
	IpSetReferences    []DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesState `json:"ip_set_references"`
}

type DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesState struct {
	ResolvedCidrCount float64 `json:"resolved_cidr_count"`
}

type DataFirewallStatusSyncStatesState struct {
	AvailabilityZone string                                        `json:"availability_zone"`
	Attachment       []DataFirewallStatusSyncStatesAttachmentState `json:"attachment"`
}

type DataFirewallStatusSyncStatesAttachmentState struct {
	EndpointId string `json:"endpoint_id"`
	Status     string `json:"status"`
	SubnetId   string `json:"subnet_id"`
}

type DataSubnetMappingState struct {
	SubnetId string `json:"subnet_id"`
}
