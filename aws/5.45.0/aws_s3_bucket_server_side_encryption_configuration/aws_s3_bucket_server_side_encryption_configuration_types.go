// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3_bucket_server_side_encryption_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Rule struct {
	// BucketKeyEnabled: bool, optional
	BucketKeyEnabled terra.BoolValue `hcl:"bucket_key_enabled,attr"`
	// RuleApplyServerSideEncryptionByDefault: optional
	ApplyServerSideEncryptionByDefault *RuleApplyServerSideEncryptionByDefault `hcl:"apply_server_side_encryption_by_default,block"`
}

type RuleApplyServerSideEncryptionByDefault struct {
	// KmsMasterKeyId: string, optional
	KmsMasterKeyId terra.StringValue `hcl:"kms_master_key_id,attr"`
	// SseAlgorithm: string, required
	SseAlgorithm terra.StringValue `hcl:"sse_algorithm,attr" validate:"required"`
}

type RuleAttributes struct {
	ref terra.Reference
}

func (r RuleAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RuleAttributes) InternalWithRef(ref terra.Reference) RuleAttributes {
	return RuleAttributes{ref: ref}
}

func (r RuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RuleAttributes) BucketKeyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("bucket_key_enabled"))
}

func (r RuleAttributes) ApplyServerSideEncryptionByDefault() terra.ListValue[RuleApplyServerSideEncryptionByDefaultAttributes] {
	return terra.ReferenceAsList[RuleApplyServerSideEncryptionByDefaultAttributes](r.ref.Append("apply_server_side_encryption_by_default"))
}

type RuleApplyServerSideEncryptionByDefaultAttributes struct {
	ref terra.Reference
}

func (assebd RuleApplyServerSideEncryptionByDefaultAttributes) InternalRef() (terra.Reference, error) {
	return assebd.ref, nil
}

func (assebd RuleApplyServerSideEncryptionByDefaultAttributes) InternalWithRef(ref terra.Reference) RuleApplyServerSideEncryptionByDefaultAttributes {
	return RuleApplyServerSideEncryptionByDefaultAttributes{ref: ref}
}

func (assebd RuleApplyServerSideEncryptionByDefaultAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return assebd.ref.InternalTokens()
}

func (assebd RuleApplyServerSideEncryptionByDefaultAttributes) KmsMasterKeyId() terra.StringValue {
	return terra.ReferenceAsString(assebd.ref.Append("kms_master_key_id"))
}

func (assebd RuleApplyServerSideEncryptionByDefaultAttributes) SseAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(assebd.ref.Append("sse_algorithm"))
}

type RuleState struct {
	BucketKeyEnabled                   bool                                          `json:"bucket_key_enabled"`
	ApplyServerSideEncryptionByDefault []RuleApplyServerSideEncryptionByDefaultState `json:"apply_server_side_encryption_by_default"`
}

type RuleApplyServerSideEncryptionByDefaultState struct {
	KmsMasterKeyId string `json:"kms_master_key_id"`
	SseAlgorithm   string `json:"sse_algorithm"`
}
