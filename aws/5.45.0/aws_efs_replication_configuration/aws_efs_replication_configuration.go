// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_efs_replication_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_efs_replication_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEfsReplicationConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aerc *Resource) Type() string {
	return "aws_efs_replication_configuration"
}

// LocalName returns the local name for [Resource].
func (aerc *Resource) LocalName() string {
	return aerc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aerc *Resource) Configuration() interface{} {
	return aerc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aerc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aerc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aerc *Resource) Dependencies() terra.Dependencies {
	return aerc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aerc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aerc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aerc *Resource) Attributes() awsEfsReplicationConfigurationAttributes {
	return awsEfsReplicationConfigurationAttributes{ref: terra.ReferenceResource(aerc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aerc *Resource) ImportState(state io.Reader) error {
	aerc.state = &awsEfsReplicationConfigurationState{}
	if err := json.NewDecoder(state).Decode(aerc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aerc.Type(), aerc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aerc *Resource) State() (*awsEfsReplicationConfigurationState, bool) {
	return aerc.state, aerc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aerc *Resource) StateMust() *awsEfsReplicationConfigurationState {
	if aerc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aerc.Type(), aerc.LocalName()))
	}
	return aerc.state
}

// Args contains the configurations for aws_efs_replication_configuration.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SourceFileSystemId: string, required
	SourceFileSystemId terra.StringValue `hcl:"source_file_system_id,attr" validate:"required"`
	// Destination: required
	Destination *Destination `hcl:"destination,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsEfsReplicationConfigurationAttributes struct {
	ref terra.Reference
}

// CreationTime returns a reference to field creation_time of aws_efs_replication_configuration.
func (aerc awsEfsReplicationConfigurationAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(aerc.ref.Append("creation_time"))
}

// Id returns a reference to field id of aws_efs_replication_configuration.
func (aerc awsEfsReplicationConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aerc.ref.Append("id"))
}

// OriginalSourceFileSystemArn returns a reference to field original_source_file_system_arn of aws_efs_replication_configuration.
func (aerc awsEfsReplicationConfigurationAttributes) OriginalSourceFileSystemArn() terra.StringValue {
	return terra.ReferenceAsString(aerc.ref.Append("original_source_file_system_arn"))
}

// SourceFileSystemArn returns a reference to field source_file_system_arn of aws_efs_replication_configuration.
func (aerc awsEfsReplicationConfigurationAttributes) SourceFileSystemArn() terra.StringValue {
	return terra.ReferenceAsString(aerc.ref.Append("source_file_system_arn"))
}

// SourceFileSystemId returns a reference to field source_file_system_id of aws_efs_replication_configuration.
func (aerc awsEfsReplicationConfigurationAttributes) SourceFileSystemId() terra.StringValue {
	return terra.ReferenceAsString(aerc.ref.Append("source_file_system_id"))
}

// SourceFileSystemRegion returns a reference to field source_file_system_region of aws_efs_replication_configuration.
func (aerc awsEfsReplicationConfigurationAttributes) SourceFileSystemRegion() terra.StringValue {
	return terra.ReferenceAsString(aerc.ref.Append("source_file_system_region"))
}

func (aerc awsEfsReplicationConfigurationAttributes) Destination() terra.ListValue[DestinationAttributes] {
	return terra.ReferenceAsList[DestinationAttributes](aerc.ref.Append("destination"))
}

func (aerc awsEfsReplicationConfigurationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aerc.ref.Append("timeouts"))
}

type awsEfsReplicationConfigurationState struct {
	CreationTime                string             `json:"creation_time"`
	Id                          string             `json:"id"`
	OriginalSourceFileSystemArn string             `json:"original_source_file_system_arn"`
	SourceFileSystemArn         string             `json:"source_file_system_arn"`
	SourceFileSystemId          string             `json:"source_file_system_id"`
	SourceFileSystemRegion      string             `json:"source_file_system_region"`
	Destination                 []DestinationState `json:"destination"`
	Timeouts                    *TimeoutsState     `json:"timeouts"`
}
