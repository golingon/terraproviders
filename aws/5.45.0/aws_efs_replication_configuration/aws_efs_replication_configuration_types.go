// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_efs_replication_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Destination struct {
	// AvailabilityZoneName: string, optional
	AvailabilityZoneName terra.StringValue `hcl:"availability_zone_name,attr"`
	// FileSystemId: string, optional
	FileSystemId terra.StringValue `hcl:"file_system_id,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type DestinationAttributes struct {
	ref terra.Reference
}

func (d DestinationAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DestinationAttributes) InternalWithRef(ref terra.Reference) DestinationAttributes {
	return DestinationAttributes{ref: ref}
}

func (d DestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DestinationAttributes) AvailabilityZoneName() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("availability_zone_name"))
}

func (d DestinationAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("file_system_id"))
}

func (d DestinationAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("kms_key_id"))
}

func (d DestinationAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("region"))
}

func (d DestinationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("status"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type DestinationState struct {
	AvailabilityZoneName string `json:"availability_zone_name"`
	FileSystemId         string `json:"file_system_id"`
	KmsKeyId             string `json:"kms_key_id"`
	Region               string `json:"region"`
	Status               string `json:"status"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
