// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_rest_api

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_api_gateway_rest_api.
type Resource struct {
	Name      string
	Args      Args
	state     *awsApiGatewayRestApiState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aagra *Resource) Type() string {
	return "aws_api_gateway_rest_api"
}

// LocalName returns the local name for [Resource].
func (aagra *Resource) LocalName() string {
	return aagra.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aagra *Resource) Configuration() interface{} {
	return aagra.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aagra *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aagra)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aagra *Resource) Dependencies() terra.Dependencies {
	return aagra.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aagra *Resource) LifecycleManagement() *terra.Lifecycle {
	return aagra.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aagra *Resource) Attributes() awsApiGatewayRestApiAttributes {
	return awsApiGatewayRestApiAttributes{ref: terra.ReferenceResource(aagra)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aagra *Resource) ImportState(state io.Reader) error {
	aagra.state = &awsApiGatewayRestApiState{}
	if err := json.NewDecoder(state).Decode(aagra.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aagra.Type(), aagra.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aagra *Resource) State() (*awsApiGatewayRestApiState, bool) {
	return aagra.state, aagra.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aagra *Resource) StateMust() *awsApiGatewayRestApiState {
	if aagra.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aagra.Type(), aagra.LocalName()))
	}
	return aagra.state
}

// Args contains the configurations for aws_api_gateway_rest_api.
type Args struct {
	// ApiKeySource: string, optional
	ApiKeySource terra.StringValue `hcl:"api_key_source,attr"`
	// BinaryMediaTypes: list of string, optional
	BinaryMediaTypes terra.ListValue[terra.StringValue] `hcl:"binary_media_types,attr"`
	// Body: string, optional
	Body terra.StringValue `hcl:"body,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisableExecuteApiEndpoint: bool, optional
	DisableExecuteApiEndpoint terra.BoolValue `hcl:"disable_execute_api_endpoint,attr"`
	// FailOnWarnings: bool, optional
	FailOnWarnings terra.BoolValue `hcl:"fail_on_warnings,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MinimumCompressionSize: string, optional
	MinimumCompressionSize terra.StringValue `hcl:"minimum_compression_size,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// Policy: string, optional
	Policy terra.StringValue `hcl:"policy,attr"`
	// PutRestApiMode: string, optional
	PutRestApiMode terra.StringValue `hcl:"put_rest_api_mode,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// EndpointConfiguration: optional
	EndpointConfiguration *EndpointConfiguration `hcl:"endpoint_configuration,block"`
}

type awsApiGatewayRestApiAttributes struct {
	ref terra.Reference
}

// ApiKeySource returns a reference to field api_key_source of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) ApiKeySource() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("api_key_source"))
}

// Arn returns a reference to field arn of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("arn"))
}

// BinaryMediaTypes returns a reference to field binary_media_types of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) BinaryMediaTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aagra.ref.Append("binary_media_types"))
}

// Body returns a reference to field body of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Body() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("body"))
}

// CreatedDate returns a reference to field created_date of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("created_date"))
}

// Description returns a reference to field description of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("description"))
}

// DisableExecuteApiEndpoint returns a reference to field disable_execute_api_endpoint of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) DisableExecuteApiEndpoint() terra.BoolValue {
	return terra.ReferenceAsBool(aagra.ref.Append("disable_execute_api_endpoint"))
}

// ExecutionArn returns a reference to field execution_arn of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) ExecutionArn() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("execution_arn"))
}

// FailOnWarnings returns a reference to field fail_on_warnings of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) FailOnWarnings() terra.BoolValue {
	return terra.ReferenceAsBool(aagra.ref.Append("fail_on_warnings"))
}

// Id returns a reference to field id of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("id"))
}

// MinimumCompressionSize returns a reference to field minimum_compression_size of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) MinimumCompressionSize() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("minimum_compression_size"))
}

// Name returns a reference to field name of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("name"))
}

// Parameters returns a reference to field parameters of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aagra.ref.Append("parameters"))
}

// Policy returns a reference to field policy of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("policy"))
}

// PutRestApiMode returns a reference to field put_rest_api_mode of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) PutRestApiMode() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("put_rest_api_mode"))
}

// RootResourceId returns a reference to field root_resource_id of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) RootResourceId() terra.StringValue {
	return terra.ReferenceAsString(aagra.ref.Append("root_resource_id"))
}

// Tags returns a reference to field tags of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aagra.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_api_gateway_rest_api.
func (aagra awsApiGatewayRestApiAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aagra.ref.Append("tags_all"))
}

func (aagra awsApiGatewayRestApiAttributes) EndpointConfiguration() terra.ListValue[EndpointConfigurationAttributes] {
	return terra.ReferenceAsList[EndpointConfigurationAttributes](aagra.ref.Append("endpoint_configuration"))
}

type awsApiGatewayRestApiState struct {
	ApiKeySource              string                       `json:"api_key_source"`
	Arn                       string                       `json:"arn"`
	BinaryMediaTypes          []string                     `json:"binary_media_types"`
	Body                      string                       `json:"body"`
	CreatedDate               string                       `json:"created_date"`
	Description               string                       `json:"description"`
	DisableExecuteApiEndpoint bool                         `json:"disable_execute_api_endpoint"`
	ExecutionArn              string                       `json:"execution_arn"`
	FailOnWarnings            bool                         `json:"fail_on_warnings"`
	Id                        string                       `json:"id"`
	MinimumCompressionSize    string                       `json:"minimum_compression_size"`
	Name                      string                       `json:"name"`
	Parameters                map[string]string            `json:"parameters"`
	Policy                    string                       `json:"policy"`
	PutRestApiMode            string                       `json:"put_rest_api_mode"`
	RootResourceId            string                       `json:"root_resource_id"`
	Tags                      map[string]string            `json:"tags"`
	TagsAll                   map[string]string            `json:"tags_all"`
	EndpointConfiguration     []EndpointConfigurationState `json:"endpoint_configuration"`
}
