// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_partition

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_partition.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ap *DataSource) DataSource() string {
	return "aws_partition"
}

// LocalName returns the local name for [DataSource].
func (ap *DataSource) LocalName() string {
	return ap.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ap *DataSource) Configuration() interface{} {
	return ap.Args
}

// Attributes returns the attributes for [DataSource].
func (ap *DataSource) Attributes() dataAwsPartitionAttributes {
	return dataAwsPartitionAttributes{ref: terra.ReferenceDataSource(ap)}
}

// DataArgs contains the configurations for aws_partition.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsPartitionAttributes struct {
	ref terra.Reference
}

// DnsSuffix returns a reference to field dns_suffix of aws_partition.
func (ap dataAwsPartitionAttributes) DnsSuffix() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("dns_suffix"))
}

// Id returns a reference to field id of aws_partition.
func (ap dataAwsPartitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("id"))
}

// Partition returns a reference to field partition of aws_partition.
func (ap dataAwsPartitionAttributes) Partition() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("partition"))
}

// ReverseDnsPrefix returns a reference to field reverse_dns_prefix of aws_partition.
func (ap dataAwsPartitionAttributes) ReverseDnsPrefix() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("reverse_dns_prefix"))
}
