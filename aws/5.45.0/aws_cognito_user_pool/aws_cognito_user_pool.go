// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_user_pool

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cognito_user_pool.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCognitoUserPoolState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acup *Resource) Type() string {
	return "aws_cognito_user_pool"
}

// LocalName returns the local name for [Resource].
func (acup *Resource) LocalName() string {
	return acup.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acup *Resource) Configuration() interface{} {
	return acup.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acup *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acup)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acup *Resource) Dependencies() terra.Dependencies {
	return acup.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acup *Resource) LifecycleManagement() *terra.Lifecycle {
	return acup.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acup *Resource) Attributes() awsCognitoUserPoolAttributes {
	return awsCognitoUserPoolAttributes{ref: terra.ReferenceResource(acup)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acup *Resource) ImportState(state io.Reader) error {
	acup.state = &awsCognitoUserPoolState{}
	if err := json.NewDecoder(state).Decode(acup.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acup.Type(), acup.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acup *Resource) State() (*awsCognitoUserPoolState, bool) {
	return acup.state, acup.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acup *Resource) StateMust() *awsCognitoUserPoolState {
	if acup.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acup.Type(), acup.LocalName()))
	}
	return acup.state
}

// Args contains the configurations for aws_cognito_user_pool.
type Args struct {
	// AliasAttributes: set of string, optional
	AliasAttributes terra.SetValue[terra.StringValue] `hcl:"alias_attributes,attr"`
	// AutoVerifiedAttributes: set of string, optional
	AutoVerifiedAttributes terra.SetValue[terra.StringValue] `hcl:"auto_verified_attributes,attr"`
	// DeletionProtection: string, optional
	DeletionProtection terra.StringValue `hcl:"deletion_protection,attr"`
	// EmailVerificationMessage: string, optional
	EmailVerificationMessage terra.StringValue `hcl:"email_verification_message,attr"`
	// EmailVerificationSubject: string, optional
	EmailVerificationSubject terra.StringValue `hcl:"email_verification_subject,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MfaConfiguration: string, optional
	MfaConfiguration terra.StringValue `hcl:"mfa_configuration,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SmsAuthenticationMessage: string, optional
	SmsAuthenticationMessage terra.StringValue `hcl:"sms_authentication_message,attr"`
	// SmsVerificationMessage: string, optional
	SmsVerificationMessage terra.StringValue `hcl:"sms_verification_message,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// UsernameAttributes: set of string, optional
	UsernameAttributes terra.SetValue[terra.StringValue] `hcl:"username_attributes,attr"`
	// AccountRecoverySetting: optional
	AccountRecoverySetting *AccountRecoverySetting `hcl:"account_recovery_setting,block"`
	// AdminCreateUserConfig: optional
	AdminCreateUserConfig *AdminCreateUserConfig `hcl:"admin_create_user_config,block"`
	// DeviceConfiguration: optional
	DeviceConfiguration *DeviceConfiguration `hcl:"device_configuration,block"`
	// EmailConfiguration: optional
	EmailConfiguration *EmailConfiguration `hcl:"email_configuration,block"`
	// LambdaConfig: optional
	LambdaConfig *LambdaConfig `hcl:"lambda_config,block"`
	// PasswordPolicy: optional
	PasswordPolicy *PasswordPolicy `hcl:"password_policy,block"`
	// Schema: min=0,max=50
	Schema []Schema `hcl:"schema,block" validate:"min=0,max=50"`
	// SmsConfiguration: optional
	SmsConfiguration *SmsConfiguration `hcl:"sms_configuration,block"`
	// SoftwareTokenMfaConfiguration: optional
	SoftwareTokenMfaConfiguration *SoftwareTokenMfaConfiguration `hcl:"software_token_mfa_configuration,block"`
	// UserAttributeUpdateSettings: optional
	UserAttributeUpdateSettings *UserAttributeUpdateSettings `hcl:"user_attribute_update_settings,block"`
	// UserPoolAddOns: optional
	UserPoolAddOns *UserPoolAddOns `hcl:"user_pool_add_ons,block"`
	// UsernameConfiguration: optional
	UsernameConfiguration *UsernameConfiguration `hcl:"username_configuration,block"`
	// VerificationMessageTemplate: optional
	VerificationMessageTemplate *VerificationMessageTemplate `hcl:"verification_message_template,block"`
}

type awsCognitoUserPoolAttributes struct {
	ref terra.Reference
}

// AliasAttributes returns a reference to field alias_attributes of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) AliasAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acup.ref.Append("alias_attributes"))
}

// Arn returns a reference to field arn of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("arn"))
}

// AutoVerifiedAttributes returns a reference to field auto_verified_attributes of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) AutoVerifiedAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acup.ref.Append("auto_verified_attributes"))
}

// CreationDate returns a reference to field creation_date of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) CreationDate() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("creation_date"))
}

// CustomDomain returns a reference to field custom_domain of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) CustomDomain() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("custom_domain"))
}

// DeletionProtection returns a reference to field deletion_protection of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) DeletionProtection() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("deletion_protection"))
}

// Domain returns a reference to field domain of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("domain"))
}

// EmailVerificationMessage returns a reference to field email_verification_message of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) EmailVerificationMessage() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("email_verification_message"))
}

// EmailVerificationSubject returns a reference to field email_verification_subject of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) EmailVerificationSubject() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("email_verification_subject"))
}

// Endpoint returns a reference to field endpoint of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("endpoint"))
}

// EstimatedNumberOfUsers returns a reference to field estimated_number_of_users of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) EstimatedNumberOfUsers() terra.NumberValue {
	return terra.ReferenceAsNumber(acup.ref.Append("estimated_number_of_users"))
}

// Id returns a reference to field id of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("id"))
}

// LastModifiedDate returns a reference to field last_modified_date of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) LastModifiedDate() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("last_modified_date"))
}

// MfaConfiguration returns a reference to field mfa_configuration of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) MfaConfiguration() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("mfa_configuration"))
}

// Name returns a reference to field name of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("name"))
}

// SmsAuthenticationMessage returns a reference to field sms_authentication_message of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) SmsAuthenticationMessage() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("sms_authentication_message"))
}

// SmsVerificationMessage returns a reference to field sms_verification_message of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) SmsVerificationMessage() terra.StringValue {
	return terra.ReferenceAsString(acup.ref.Append("sms_verification_message"))
}

// Tags returns a reference to field tags of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acup.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acup.ref.Append("tags_all"))
}

// UsernameAttributes returns a reference to field username_attributes of aws_cognito_user_pool.
func (acup awsCognitoUserPoolAttributes) UsernameAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acup.ref.Append("username_attributes"))
}

func (acup awsCognitoUserPoolAttributes) AccountRecoverySetting() terra.ListValue[AccountRecoverySettingAttributes] {
	return terra.ReferenceAsList[AccountRecoverySettingAttributes](acup.ref.Append("account_recovery_setting"))
}

func (acup awsCognitoUserPoolAttributes) AdminCreateUserConfig() terra.ListValue[AdminCreateUserConfigAttributes] {
	return terra.ReferenceAsList[AdminCreateUserConfigAttributes](acup.ref.Append("admin_create_user_config"))
}

func (acup awsCognitoUserPoolAttributes) DeviceConfiguration() terra.ListValue[DeviceConfigurationAttributes] {
	return terra.ReferenceAsList[DeviceConfigurationAttributes](acup.ref.Append("device_configuration"))
}

func (acup awsCognitoUserPoolAttributes) EmailConfiguration() terra.ListValue[EmailConfigurationAttributes] {
	return terra.ReferenceAsList[EmailConfigurationAttributes](acup.ref.Append("email_configuration"))
}

func (acup awsCognitoUserPoolAttributes) LambdaConfig() terra.ListValue[LambdaConfigAttributes] {
	return terra.ReferenceAsList[LambdaConfigAttributes](acup.ref.Append("lambda_config"))
}

func (acup awsCognitoUserPoolAttributes) PasswordPolicy() terra.ListValue[PasswordPolicyAttributes] {
	return terra.ReferenceAsList[PasswordPolicyAttributes](acup.ref.Append("password_policy"))
}

func (acup awsCognitoUserPoolAttributes) Schema() terra.SetValue[SchemaAttributes] {
	return terra.ReferenceAsSet[SchemaAttributes](acup.ref.Append("schema"))
}

func (acup awsCognitoUserPoolAttributes) SmsConfiguration() terra.ListValue[SmsConfigurationAttributes] {
	return terra.ReferenceAsList[SmsConfigurationAttributes](acup.ref.Append("sms_configuration"))
}

func (acup awsCognitoUserPoolAttributes) SoftwareTokenMfaConfiguration() terra.ListValue[SoftwareTokenMfaConfigurationAttributes] {
	return terra.ReferenceAsList[SoftwareTokenMfaConfigurationAttributes](acup.ref.Append("software_token_mfa_configuration"))
}

func (acup awsCognitoUserPoolAttributes) UserAttributeUpdateSettings() terra.ListValue[UserAttributeUpdateSettingsAttributes] {
	return terra.ReferenceAsList[UserAttributeUpdateSettingsAttributes](acup.ref.Append("user_attribute_update_settings"))
}

func (acup awsCognitoUserPoolAttributes) UserPoolAddOns() terra.ListValue[UserPoolAddOnsAttributes] {
	return terra.ReferenceAsList[UserPoolAddOnsAttributes](acup.ref.Append("user_pool_add_ons"))
}

func (acup awsCognitoUserPoolAttributes) UsernameConfiguration() terra.ListValue[UsernameConfigurationAttributes] {
	return terra.ReferenceAsList[UsernameConfigurationAttributes](acup.ref.Append("username_configuration"))
}

func (acup awsCognitoUserPoolAttributes) VerificationMessageTemplate() terra.ListValue[VerificationMessageTemplateAttributes] {
	return terra.ReferenceAsList[VerificationMessageTemplateAttributes](acup.ref.Append("verification_message_template"))
}

type awsCognitoUserPoolState struct {
	AliasAttributes               []string                             `json:"alias_attributes"`
	Arn                           string                               `json:"arn"`
	AutoVerifiedAttributes        []string                             `json:"auto_verified_attributes"`
	CreationDate                  string                               `json:"creation_date"`
	CustomDomain                  string                               `json:"custom_domain"`
	DeletionProtection            string                               `json:"deletion_protection"`
	Domain                        string                               `json:"domain"`
	EmailVerificationMessage      string                               `json:"email_verification_message"`
	EmailVerificationSubject      string                               `json:"email_verification_subject"`
	Endpoint                      string                               `json:"endpoint"`
	EstimatedNumberOfUsers        float64                              `json:"estimated_number_of_users"`
	Id                            string                               `json:"id"`
	LastModifiedDate              string                               `json:"last_modified_date"`
	MfaConfiguration              string                               `json:"mfa_configuration"`
	Name                          string                               `json:"name"`
	SmsAuthenticationMessage      string                               `json:"sms_authentication_message"`
	SmsVerificationMessage        string                               `json:"sms_verification_message"`
	Tags                          map[string]string                    `json:"tags"`
	TagsAll                       map[string]string                    `json:"tags_all"`
	UsernameAttributes            []string                             `json:"username_attributes"`
	AccountRecoverySetting        []AccountRecoverySettingState        `json:"account_recovery_setting"`
	AdminCreateUserConfig         []AdminCreateUserConfigState         `json:"admin_create_user_config"`
	DeviceConfiguration           []DeviceConfigurationState           `json:"device_configuration"`
	EmailConfiguration            []EmailConfigurationState            `json:"email_configuration"`
	LambdaConfig                  []LambdaConfigState                  `json:"lambda_config"`
	PasswordPolicy                []PasswordPolicyState                `json:"password_policy"`
	Schema                        []SchemaState                        `json:"schema"`
	SmsConfiguration              []SmsConfigurationState              `json:"sms_configuration"`
	SoftwareTokenMfaConfiguration []SoftwareTokenMfaConfigurationState `json:"software_token_mfa_configuration"`
	UserAttributeUpdateSettings   []UserAttributeUpdateSettingsState   `json:"user_attribute_update_settings"`
	UserPoolAddOns                []UserPoolAddOnsState                `json:"user_pool_add_ons"`
	UsernameConfiguration         []UsernameConfigurationState         `json:"username_configuration"`
	VerificationMessageTemplate   []VerificationMessageTemplateState   `json:"verification_message_template"`
}
