// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kms_custom_key_store

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_kms_custom_key_store.
type Resource struct {
	Name      string
	Args      Args
	state     *awsKmsCustomKeyStoreState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (akcks *Resource) Type() string {
	return "aws_kms_custom_key_store"
}

// LocalName returns the local name for [Resource].
func (akcks *Resource) LocalName() string {
	return akcks.Name
}

// Configuration returns the configuration (args) for [Resource].
func (akcks *Resource) Configuration() interface{} {
	return akcks.Args
}

// DependOn is used for other resources to depend on [Resource].
func (akcks *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(akcks)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (akcks *Resource) Dependencies() terra.Dependencies {
	return akcks.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (akcks *Resource) LifecycleManagement() *terra.Lifecycle {
	return akcks.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (akcks *Resource) Attributes() awsKmsCustomKeyStoreAttributes {
	return awsKmsCustomKeyStoreAttributes{ref: terra.ReferenceResource(akcks)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (akcks *Resource) ImportState(state io.Reader) error {
	akcks.state = &awsKmsCustomKeyStoreState{}
	if err := json.NewDecoder(state).Decode(akcks.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", akcks.Type(), akcks.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (akcks *Resource) State() (*awsKmsCustomKeyStoreState, bool) {
	return akcks.state, akcks.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (akcks *Resource) StateMust() *awsKmsCustomKeyStoreState {
	if akcks.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", akcks.Type(), akcks.LocalName()))
	}
	return akcks.state
}

// Args contains the configurations for aws_kms_custom_key_store.
type Args struct {
	// CloudHsmClusterId: string, required
	CloudHsmClusterId terra.StringValue `hcl:"cloud_hsm_cluster_id,attr" validate:"required"`
	// CustomKeyStoreName: string, required
	CustomKeyStoreName terra.StringValue `hcl:"custom_key_store_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyStorePassword: string, required
	KeyStorePassword terra.StringValue `hcl:"key_store_password,attr" validate:"required"`
	// TrustAnchorCertificate: string, required
	TrustAnchorCertificate terra.StringValue `hcl:"trust_anchor_certificate,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsKmsCustomKeyStoreAttributes struct {
	ref terra.Reference
}

// CloudHsmClusterId returns a reference to field cloud_hsm_cluster_id of aws_kms_custom_key_store.
func (akcks awsKmsCustomKeyStoreAttributes) CloudHsmClusterId() terra.StringValue {
	return terra.ReferenceAsString(akcks.ref.Append("cloud_hsm_cluster_id"))
}

// CustomKeyStoreName returns a reference to field custom_key_store_name of aws_kms_custom_key_store.
func (akcks awsKmsCustomKeyStoreAttributes) CustomKeyStoreName() terra.StringValue {
	return terra.ReferenceAsString(akcks.ref.Append("custom_key_store_name"))
}

// Id returns a reference to field id of aws_kms_custom_key_store.
func (akcks awsKmsCustomKeyStoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akcks.ref.Append("id"))
}

// KeyStorePassword returns a reference to field key_store_password of aws_kms_custom_key_store.
func (akcks awsKmsCustomKeyStoreAttributes) KeyStorePassword() terra.StringValue {
	return terra.ReferenceAsString(akcks.ref.Append("key_store_password"))
}

// TrustAnchorCertificate returns a reference to field trust_anchor_certificate of aws_kms_custom_key_store.
func (akcks awsKmsCustomKeyStoreAttributes) TrustAnchorCertificate() terra.StringValue {
	return terra.ReferenceAsString(akcks.ref.Append("trust_anchor_certificate"))
}

func (akcks awsKmsCustomKeyStoreAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](akcks.ref.Append("timeouts"))
}

type awsKmsCustomKeyStoreState struct {
	CloudHsmClusterId      string         `json:"cloud_hsm_cluster_id"`
	CustomKeyStoreName     string         `json:"custom_key_store_name"`
	Id                     string         `json:"id"`
	KeyStorePassword       string         `json:"key_store_password"`
	TrustAnchorCertificate string         `json:"trust_anchor_certificate"`
	Timeouts               *TimeoutsState `json:"timeouts"`
}
