// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lexv2models_intent

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lexv2models_intent.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLexv2ModelsIntentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ali *Resource) Type() string {
	return "aws_lexv2models_intent"
}

// LocalName returns the local name for [Resource].
func (ali *Resource) LocalName() string {
	return ali.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ali *Resource) Configuration() interface{} {
	return ali.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ali *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ali)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ali *Resource) Dependencies() terra.Dependencies {
	return ali.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ali *Resource) LifecycleManagement() *terra.Lifecycle {
	return ali.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ali *Resource) Attributes() awsLexv2ModelsIntentAttributes {
	return awsLexv2ModelsIntentAttributes{ref: terra.ReferenceResource(ali)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ali *Resource) ImportState(state io.Reader) error {
	ali.state = &awsLexv2ModelsIntentState{}
	if err := json.NewDecoder(state).Decode(ali.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ali.Type(), ali.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ali *Resource) State() (*awsLexv2ModelsIntentState, bool) {
	return ali.state, ali.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ali *Resource) StateMust() *awsLexv2ModelsIntentState {
	if ali.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ali.Type(), ali.LocalName()))
	}
	return ali.state
}

// Args contains the configurations for aws_lexv2models_intent.
type Args struct {
	// BotId: string, required
	BotId terra.StringValue `hcl:"bot_id,attr" validate:"required"`
	// BotVersion: string, required
	BotVersion terra.StringValue `hcl:"bot_version,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// LocaleId: string, required
	LocaleId terra.StringValue `hcl:"locale_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ParentIntentSignature: string, optional
	ParentIntentSignature terra.StringValue `hcl:"parent_intent_signature,attr"`
	// ClosingSetting: min=0
	ClosingSetting []ClosingSetting `hcl:"closing_setting,block" validate:"min=0"`
	// ConfirmationSetting: min=0
	ConfirmationSetting []ConfirmationSetting `hcl:"confirmation_setting,block" validate:"min=0"`
	// DialogCodeHook: min=0
	DialogCodeHook []DialogCodeHook `hcl:"dialog_code_hook,block" validate:"min=0"`
	// FulfillmentCodeHook: min=0
	FulfillmentCodeHook []FulfillmentCodeHook `hcl:"fulfillment_code_hook,block" validate:"min=0"`
	// InitialResponseSetting: min=0
	InitialResponseSetting []InitialResponseSetting `hcl:"initial_response_setting,block" validate:"min=0"`
	// InputContext: min=0
	InputContext []InputContext `hcl:"input_context,block" validate:"min=0"`
	// KendraConfiguration: min=0
	KendraConfiguration []KendraConfiguration `hcl:"kendra_configuration,block" validate:"min=0"`
	// OutputContext: min=0
	OutputContext []OutputContext `hcl:"output_context,block" validate:"min=0"`
	// SampleUtterance: min=0
	SampleUtterance []SampleUtterance `hcl:"sample_utterance,block" validate:"min=0"`
	// SlotPriority: min=0
	SlotPriority []SlotPriority `hcl:"slot_priority,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsLexv2ModelsIntentAttributes struct {
	ref terra.Reference
}

// BotId returns a reference to field bot_id of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) BotId() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("bot_id"))
}

// BotVersion returns a reference to field bot_version of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) BotVersion() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("bot_version"))
}

// CreationDateTime returns a reference to field creation_date_time of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) CreationDateTime() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("creation_date_time"))
}

// Description returns a reference to field description of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("description"))
}

// Id returns a reference to field id of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("id"))
}

// IntentId returns a reference to field intent_id of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) IntentId() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("intent_id"))
}

// LastUpdatedDateTime returns a reference to field last_updated_date_time of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) LastUpdatedDateTime() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("last_updated_date_time"))
}

// LocaleId returns a reference to field locale_id of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) LocaleId() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("locale_id"))
}

// Name returns a reference to field name of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("name"))
}

// ParentIntentSignature returns a reference to field parent_intent_signature of aws_lexv2models_intent.
func (ali awsLexv2ModelsIntentAttributes) ParentIntentSignature() terra.StringValue {
	return terra.ReferenceAsString(ali.ref.Append("parent_intent_signature"))
}

func (ali awsLexv2ModelsIntentAttributes) ClosingSetting() terra.ListValue[ClosingSettingAttributes] {
	return terra.ReferenceAsList[ClosingSettingAttributes](ali.ref.Append("closing_setting"))
}

func (ali awsLexv2ModelsIntentAttributes) ConfirmationSetting() terra.ListValue[ConfirmationSettingAttributes] {
	return terra.ReferenceAsList[ConfirmationSettingAttributes](ali.ref.Append("confirmation_setting"))
}

func (ali awsLexv2ModelsIntentAttributes) DialogCodeHook() terra.ListValue[DialogCodeHookAttributes] {
	return terra.ReferenceAsList[DialogCodeHookAttributes](ali.ref.Append("dialog_code_hook"))
}

func (ali awsLexv2ModelsIntentAttributes) FulfillmentCodeHook() terra.ListValue[FulfillmentCodeHookAttributes] {
	return terra.ReferenceAsList[FulfillmentCodeHookAttributes](ali.ref.Append("fulfillment_code_hook"))
}

func (ali awsLexv2ModelsIntentAttributes) InitialResponseSetting() terra.ListValue[InitialResponseSettingAttributes] {
	return terra.ReferenceAsList[InitialResponseSettingAttributes](ali.ref.Append("initial_response_setting"))
}

func (ali awsLexv2ModelsIntentAttributes) InputContext() terra.ListValue[InputContextAttributes] {
	return terra.ReferenceAsList[InputContextAttributes](ali.ref.Append("input_context"))
}

func (ali awsLexv2ModelsIntentAttributes) KendraConfiguration() terra.ListValue[KendraConfigurationAttributes] {
	return terra.ReferenceAsList[KendraConfigurationAttributes](ali.ref.Append("kendra_configuration"))
}

func (ali awsLexv2ModelsIntentAttributes) OutputContext() terra.ListValue[OutputContextAttributes] {
	return terra.ReferenceAsList[OutputContextAttributes](ali.ref.Append("output_context"))
}

func (ali awsLexv2ModelsIntentAttributes) SampleUtterance() terra.ListValue[SampleUtteranceAttributes] {
	return terra.ReferenceAsList[SampleUtteranceAttributes](ali.ref.Append("sample_utterance"))
}

func (ali awsLexv2ModelsIntentAttributes) SlotPriority() terra.ListValue[SlotPriorityAttributes] {
	return terra.ReferenceAsList[SlotPriorityAttributes](ali.ref.Append("slot_priority"))
}

func (ali awsLexv2ModelsIntentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ali.ref.Append("timeouts"))
}

type awsLexv2ModelsIntentState struct {
	BotId                  string                        `json:"bot_id"`
	BotVersion             string                        `json:"bot_version"`
	CreationDateTime       string                        `json:"creation_date_time"`
	Description            string                        `json:"description"`
	Id                     string                        `json:"id"`
	IntentId               string                        `json:"intent_id"`
	LastUpdatedDateTime    string                        `json:"last_updated_date_time"`
	LocaleId               string                        `json:"locale_id"`
	Name                   string                        `json:"name"`
	ParentIntentSignature  string                        `json:"parent_intent_signature"`
	ClosingSetting         []ClosingSettingState         `json:"closing_setting"`
	ConfirmationSetting    []ConfirmationSettingState    `json:"confirmation_setting"`
	DialogCodeHook         []DialogCodeHookState         `json:"dialog_code_hook"`
	FulfillmentCodeHook    []FulfillmentCodeHookState    `json:"fulfillment_code_hook"`
	InitialResponseSetting []InitialResponseSettingState `json:"initial_response_setting"`
	InputContext           []InputContextState           `json:"input_context"`
	KendraConfiguration    []KendraConfigurationState    `json:"kendra_configuration"`
	OutputContext          []OutputContextState          `json:"output_context"`
	SampleUtterance        []SampleUtteranceState        `json:"sample_utterance"`
	SlotPriority           []SlotPriorityState           `json:"slot_priority"`
	Timeouts               *TimeoutsState                `json:"timeouts"`
}
