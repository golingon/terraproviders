// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_identitystore_user

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_identitystore_user.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aiu *DataSource) DataSource() string {
	return "aws_identitystore_user"
}

// LocalName returns the local name for [DataSource].
func (aiu *DataSource) LocalName() string {
	return aiu.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aiu *DataSource) Configuration() interface{} {
	return aiu.Args
}

// Attributes returns the attributes for [DataSource].
func (aiu *DataSource) Attributes() dataAwsIdentitystoreUserAttributes {
	return dataAwsIdentitystoreUserAttributes{ref: terra.ReferenceDataSource(aiu)}
}

// DataArgs contains the configurations for aws_identitystore_user.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityStoreId: string, required
	IdentityStoreId terra.StringValue `hcl:"identity_store_id,attr" validate:"required"`
	// UserId: string, optional
	UserId terra.StringValue `hcl:"user_id,attr"`
	// AlternateIdentifier: optional
	AlternateIdentifier *DataAlternateIdentifier `hcl:"alternate_identifier,block"`
	// Filter: optional
	Filter *DataFilter `hcl:"filter,block"`
}

type dataAwsIdentitystoreUserAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("display_name"))
}

// Id returns a reference to field id of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("id"))
}

// IdentityStoreId returns a reference to field identity_store_id of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) IdentityStoreId() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("identity_store_id"))
}

// Locale returns a reference to field locale of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) Locale() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("locale"))
}

// Nickname returns a reference to field nickname of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) Nickname() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("nickname"))
}

// PreferredLanguage returns a reference to field preferred_language of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) PreferredLanguage() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("preferred_language"))
}

// ProfileUrl returns a reference to field profile_url of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) ProfileUrl() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("profile_url"))
}

// Timezone returns a reference to field timezone of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) Timezone() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("timezone"))
}

// Title returns a reference to field title of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("title"))
}

// UserId returns a reference to field user_id of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("user_id"))
}

// UserName returns a reference to field user_name of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) UserName() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("user_name"))
}

// UserType returns a reference to field user_type of aws_identitystore_user.
func (aiu dataAwsIdentitystoreUserAttributes) UserType() terra.StringValue {
	return terra.ReferenceAsString(aiu.ref.Append("user_type"))
}

func (aiu dataAwsIdentitystoreUserAttributes) Addresses() terra.ListValue[DataAddressesAttributes] {
	return terra.ReferenceAsList[DataAddressesAttributes](aiu.ref.Append("addresses"))
}

func (aiu dataAwsIdentitystoreUserAttributes) Emails() terra.ListValue[DataEmailsAttributes] {
	return terra.ReferenceAsList[DataEmailsAttributes](aiu.ref.Append("emails"))
}

func (aiu dataAwsIdentitystoreUserAttributes) ExternalIds() terra.ListValue[DataExternalIdsAttributes] {
	return terra.ReferenceAsList[DataExternalIdsAttributes](aiu.ref.Append("external_ids"))
}

func (aiu dataAwsIdentitystoreUserAttributes) Name() terra.ListValue[DataNameAttributes] {
	return terra.ReferenceAsList[DataNameAttributes](aiu.ref.Append("name"))
}

func (aiu dataAwsIdentitystoreUserAttributes) PhoneNumbers() terra.ListValue[DataPhoneNumbersAttributes] {
	return terra.ReferenceAsList[DataPhoneNumbersAttributes](aiu.ref.Append("phone_numbers"))
}

func (aiu dataAwsIdentitystoreUserAttributes) AlternateIdentifier() terra.ListValue[DataAlternateIdentifierAttributes] {
	return terra.ReferenceAsList[DataAlternateIdentifierAttributes](aiu.ref.Append("alternate_identifier"))
}

func (aiu dataAwsIdentitystoreUserAttributes) Filter() terra.ListValue[DataFilterAttributes] {
	return terra.ReferenceAsList[DataFilterAttributes](aiu.ref.Append("filter"))
}
