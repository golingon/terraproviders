// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_guardduty_member

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_guardduty_member.
type Resource struct {
	Name      string
	Args      Args
	state     *awsGuarddutyMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (agm *Resource) Type() string {
	return "aws_guardduty_member"
}

// LocalName returns the local name for [Resource].
func (agm *Resource) LocalName() string {
	return agm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (agm *Resource) Configuration() interface{} {
	return agm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (agm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(agm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (agm *Resource) Dependencies() terra.Dependencies {
	return agm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (agm *Resource) LifecycleManagement() *terra.Lifecycle {
	return agm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (agm *Resource) Attributes() awsGuarddutyMemberAttributes {
	return awsGuarddutyMemberAttributes{ref: terra.ReferenceResource(agm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (agm *Resource) ImportState(state io.Reader) error {
	agm.state = &awsGuarddutyMemberState{}
	if err := json.NewDecoder(state).Decode(agm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agm.Type(), agm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (agm *Resource) State() (*awsGuarddutyMemberState, bool) {
	return agm.state, agm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (agm *Resource) StateMust() *awsGuarddutyMemberState {
	if agm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agm.Type(), agm.LocalName()))
	}
	return agm.state
}

// Args contains the configurations for aws_guardduty_member.
type Args struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// DetectorId: string, required
	DetectorId terra.StringValue `hcl:"detector_id,attr" validate:"required"`
	// DisableEmailNotification: bool, optional
	DisableEmailNotification terra.BoolValue `hcl:"disable_email_notification,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InvitationMessage: string, optional
	InvitationMessage terra.StringValue `hcl:"invitation_message,attr"`
	// Invite: bool, optional
	Invite terra.BoolValue `hcl:"invite,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsGuarddutyMemberAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(agm.ref.Append("account_id"))
}

// DetectorId returns a reference to field detector_id of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) DetectorId() terra.StringValue {
	return terra.ReferenceAsString(agm.ref.Append("detector_id"))
}

// DisableEmailNotification returns a reference to field disable_email_notification of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) DisableEmailNotification() terra.BoolValue {
	return terra.ReferenceAsBool(agm.ref.Append("disable_email_notification"))
}

// Email returns a reference to field email of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(agm.ref.Append("email"))
}

// Id returns a reference to field id of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(agm.ref.Append("id"))
}

// InvitationMessage returns a reference to field invitation_message of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) InvitationMessage() terra.StringValue {
	return terra.ReferenceAsString(agm.ref.Append("invitation_message"))
}

// Invite returns a reference to field invite of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) Invite() terra.BoolValue {
	return terra.ReferenceAsBool(agm.ref.Append("invite"))
}

// RelationshipStatus returns a reference to field relationship_status of aws_guardduty_member.
func (agm awsGuarddutyMemberAttributes) RelationshipStatus() terra.StringValue {
	return terra.ReferenceAsString(agm.ref.Append("relationship_status"))
}

func (agm awsGuarddutyMemberAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](agm.ref.Append("timeouts"))
}

type awsGuarddutyMemberState struct {
	AccountId                string         `json:"account_id"`
	DetectorId               string         `json:"detector_id"`
	DisableEmailNotification bool           `json:"disable_email_notification"`
	Email                    string         `json:"email"`
	Id                       string         `json:"id"`
	InvitationMessage        string         `json:"invitation_message"`
	Invite                   bool           `json:"invite"`
	RelationshipStatus       string         `json:"relationship_status"`
	Timeouts                 *TimeoutsState `json:"timeouts"`
}
