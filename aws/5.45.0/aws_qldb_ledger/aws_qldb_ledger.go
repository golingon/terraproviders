// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_qldb_ledger

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_qldb_ledger.
type Resource struct {
	Name      string
	Args      Args
	state     *awsQldbLedgerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aql *Resource) Type() string {
	return "aws_qldb_ledger"
}

// LocalName returns the local name for [Resource].
func (aql *Resource) LocalName() string {
	return aql.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aql *Resource) Configuration() interface{} {
	return aql.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aql *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aql)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aql *Resource) Dependencies() terra.Dependencies {
	return aql.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aql *Resource) LifecycleManagement() *terra.Lifecycle {
	return aql.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aql *Resource) Attributes() awsQldbLedgerAttributes {
	return awsQldbLedgerAttributes{ref: terra.ReferenceResource(aql)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aql *Resource) ImportState(state io.Reader) error {
	aql.state = &awsQldbLedgerState{}
	if err := json.NewDecoder(state).Decode(aql.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aql.Type(), aql.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aql *Resource) State() (*awsQldbLedgerState, bool) {
	return aql.state, aql.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aql *Resource) StateMust() *awsQldbLedgerState {
	if aql.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aql.Type(), aql.LocalName()))
	}
	return aql.state
}

// Args contains the configurations for aws_qldb_ledger.
type Args struct {
	// DeletionProtection: bool, optional
	DeletionProtection terra.BoolValue `hcl:"deletion_protection,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKey: string, optional
	KmsKey terra.StringValue `hcl:"kms_key,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// PermissionsMode: string, required
	PermissionsMode terra.StringValue `hcl:"permissions_mode,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsQldbLedgerAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aql.ref.Append("arn"))
}

// DeletionProtection returns a reference to field deletion_protection of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(aql.ref.Append("deletion_protection"))
}

// Id returns a reference to field id of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aql.ref.Append("id"))
}

// KmsKey returns a reference to field kms_key of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) KmsKey() terra.StringValue {
	return terra.ReferenceAsString(aql.ref.Append("kms_key"))
}

// Name returns a reference to field name of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aql.ref.Append("name"))
}

// PermissionsMode returns a reference to field permissions_mode of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) PermissionsMode() terra.StringValue {
	return terra.ReferenceAsString(aql.ref.Append("permissions_mode"))
}

// Tags returns a reference to field tags of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aql.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_qldb_ledger.
func (aql awsQldbLedgerAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aql.ref.Append("tags_all"))
}

func (aql awsQldbLedgerAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aql.ref.Append("timeouts"))
}

type awsQldbLedgerState struct {
	Arn                string            `json:"arn"`
	DeletionProtection bool              `json:"deletion_protection"`
	Id                 string            `json:"id"`
	KmsKey             string            `json:"kms_key"`
	Name               string            `json:"name"`
	PermissionsMode    string            `json:"permissions_mode"`
	Tags               map[string]string `json:"tags"`
	TagsAll            map[string]string `json:"tags_all"`
	Timeouts           *TimeoutsState    `json:"timeouts"`
}
