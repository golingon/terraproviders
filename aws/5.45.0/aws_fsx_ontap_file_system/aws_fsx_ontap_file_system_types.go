// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_ontap_file_system

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DiskIopsConfiguration struct {
	// Iops: number, optional
	Iops terra.NumberValue `hcl:"iops,attr"`
	// Mode: string, optional
	Mode terra.StringValue `hcl:"mode,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type EndpointsAttributes struct {
	ref terra.Reference
}

func (e EndpointsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e EndpointsAttributes) InternalWithRef(ref terra.Reference) EndpointsAttributes {
	return EndpointsAttributes{ref: ref}
}

func (e EndpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e EndpointsAttributes) Intercluster() terra.ListValue[EndpointsInterclusterAttributes] {
	return terra.ReferenceAsList[EndpointsInterclusterAttributes](e.ref.Append("intercluster"))
}

func (e EndpointsAttributes) Management() terra.ListValue[EndpointsManagementAttributes] {
	return terra.ReferenceAsList[EndpointsManagementAttributes](e.ref.Append("management"))
}

type EndpointsInterclusterAttributes struct {
	ref terra.Reference
}

func (i EndpointsInterclusterAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i EndpointsInterclusterAttributes) InternalWithRef(ref terra.Reference) EndpointsInterclusterAttributes {
	return EndpointsInterclusterAttributes{ref: ref}
}

func (i EndpointsInterclusterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i EndpointsInterclusterAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("dns_name"))
}

func (i EndpointsInterclusterAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("ip_addresses"))
}

type EndpointsManagementAttributes struct {
	ref terra.Reference
}

func (m EndpointsManagementAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m EndpointsManagementAttributes) InternalWithRef(ref terra.Reference) EndpointsManagementAttributes {
	return EndpointsManagementAttributes{ref: ref}
}

func (m EndpointsManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m EndpointsManagementAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("dns_name"))
}

func (m EndpointsManagementAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("ip_addresses"))
}

type DiskIopsConfigurationAttributes struct {
	ref terra.Reference
}

func (dic DiskIopsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return dic.ref, nil
}

func (dic DiskIopsConfigurationAttributes) InternalWithRef(ref terra.Reference) DiskIopsConfigurationAttributes {
	return DiskIopsConfigurationAttributes{ref: ref}
}

func (dic DiskIopsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dic.ref.InternalTokens()
}

func (dic DiskIopsConfigurationAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(dic.ref.Append("iops"))
}

func (dic DiskIopsConfigurationAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(dic.ref.Append("mode"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type EndpointsState struct {
	Intercluster []EndpointsInterclusterState `json:"intercluster"`
	Management   []EndpointsManagementState   `json:"management"`
}

type EndpointsInterclusterState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type EndpointsManagementState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type DiskIopsConfigurationState struct {
	Iops float64 `json:"iops"`
	Mode string  `json:"mode"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
