// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_eks_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccessConfig struct {
	// AuthenticationMode: string, optional
	AuthenticationMode terra.StringValue `hcl:"authentication_mode,attr"`
	// BootstrapClusterCreatorAdminPermissions: bool, optional
	BootstrapClusterCreatorAdminPermissions terra.BoolValue `hcl:"bootstrap_cluster_creator_admin_permissions,attr"`
}

type EncryptionConfig struct {
	// Resources: set of string, required
	Resources terra.SetValue[terra.StringValue] `hcl:"resources,attr" validate:"required"`
	// EncryptionConfigProvider: required
	Provider *EncryptionConfigProvider `hcl:"provider,block" validate:"required"`
}

type EncryptionConfigProvider struct {
	// KeyArn: string, required
	KeyArn terra.StringValue `hcl:"key_arn,attr" validate:"required"`
}

type KubernetesNetworkConfig struct {
	// IpFamily: string, optional
	IpFamily terra.StringValue `hcl:"ip_family,attr"`
	// ServiceIpv4Cidr: string, optional
	ServiceIpv4Cidr terra.StringValue `hcl:"service_ipv4_cidr,attr"`
}

type OutpostConfig struct {
	// ControlPlaneInstanceType: string, required
	ControlPlaneInstanceType terra.StringValue `hcl:"control_plane_instance_type,attr" validate:"required"`
	// OutpostArns: set of string, required
	OutpostArns terra.SetValue[terra.StringValue] `hcl:"outpost_arns,attr" validate:"required"`
	// OutpostConfigControlPlanePlacement: optional
	ControlPlanePlacement *OutpostConfigControlPlanePlacement `hcl:"control_plane_placement,block"`
}

type OutpostConfigControlPlanePlacement struct {
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type VpcConfig struct {
	// EndpointPrivateAccess: bool, optional
	EndpointPrivateAccess terra.BoolValue `hcl:"endpoint_private_access,attr"`
	// EndpointPublicAccess: bool, optional
	EndpointPublicAccess terra.BoolValue `hcl:"endpoint_public_access,attr"`
	// PublicAccessCidrs: set of string, optional
	PublicAccessCidrs terra.SetValue[terra.StringValue] `hcl:"public_access_cidrs,attr"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type CertificateAuthorityAttributes struct {
	ref terra.Reference
}

func (ca CertificateAuthorityAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca CertificateAuthorityAttributes) InternalWithRef(ref terra.Reference) CertificateAuthorityAttributes {
	return CertificateAuthorityAttributes{ref: ref}
}

func (ca CertificateAuthorityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca CertificateAuthorityAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("data"))
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) Oidc() terra.ListValue[IdentityOidcAttributes] {
	return terra.ReferenceAsList[IdentityOidcAttributes](i.ref.Append("oidc"))
}

type IdentityOidcAttributes struct {
	ref terra.Reference
}

func (o IdentityOidcAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o IdentityOidcAttributes) InternalWithRef(ref terra.Reference) IdentityOidcAttributes {
	return IdentityOidcAttributes{ref: ref}
}

func (o IdentityOidcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o IdentityOidcAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("issuer"))
}

type AccessConfigAttributes struct {
	ref terra.Reference
}

func (ac AccessConfigAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac AccessConfigAttributes) InternalWithRef(ref terra.Reference) AccessConfigAttributes {
	return AccessConfigAttributes{ref: ref}
}

func (ac AccessConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac AccessConfigAttributes) AuthenticationMode() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("authentication_mode"))
}

func (ac AccessConfigAttributes) BootstrapClusterCreatorAdminPermissions() terra.BoolValue {
	return terra.ReferenceAsBool(ac.ref.Append("bootstrap_cluster_creator_admin_permissions"))
}

type EncryptionConfigAttributes struct {
	ref terra.Reference
}

func (ec EncryptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec EncryptionConfigAttributes) InternalWithRef(ref terra.Reference) EncryptionConfigAttributes {
	return EncryptionConfigAttributes{ref: ref}
}

func (ec EncryptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec EncryptionConfigAttributes) Resources() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ec.ref.Append("resources"))
}

func (ec EncryptionConfigAttributes) Provider() terra.ListValue[EncryptionConfigProviderAttributes] {
	return terra.ReferenceAsList[EncryptionConfigProviderAttributes](ec.ref.Append("provider"))
}

type EncryptionConfigProviderAttributes struct {
	ref terra.Reference
}

func (p EncryptionConfigProviderAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p EncryptionConfigProviderAttributes) InternalWithRef(ref terra.Reference) EncryptionConfigProviderAttributes {
	return EncryptionConfigProviderAttributes{ref: ref}
}

func (p EncryptionConfigProviderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p EncryptionConfigProviderAttributes) KeyArn() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("key_arn"))
}

type KubernetesNetworkConfigAttributes struct {
	ref terra.Reference
}

func (knc KubernetesNetworkConfigAttributes) InternalRef() (terra.Reference, error) {
	return knc.ref, nil
}

func (knc KubernetesNetworkConfigAttributes) InternalWithRef(ref terra.Reference) KubernetesNetworkConfigAttributes {
	return KubernetesNetworkConfigAttributes{ref: ref}
}

func (knc KubernetesNetworkConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return knc.ref.InternalTokens()
}

func (knc KubernetesNetworkConfigAttributes) IpFamily() terra.StringValue {
	return terra.ReferenceAsString(knc.ref.Append("ip_family"))
}

func (knc KubernetesNetworkConfigAttributes) ServiceIpv4Cidr() terra.StringValue {
	return terra.ReferenceAsString(knc.ref.Append("service_ipv4_cidr"))
}

func (knc KubernetesNetworkConfigAttributes) ServiceIpv6Cidr() terra.StringValue {
	return terra.ReferenceAsString(knc.ref.Append("service_ipv6_cidr"))
}

type OutpostConfigAttributes struct {
	ref terra.Reference
}

func (oc OutpostConfigAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc OutpostConfigAttributes) InternalWithRef(ref terra.Reference) OutpostConfigAttributes {
	return OutpostConfigAttributes{ref: ref}
}

func (oc OutpostConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc OutpostConfigAttributes) ControlPlaneInstanceType() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("control_plane_instance_type"))
}

func (oc OutpostConfigAttributes) OutpostArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oc.ref.Append("outpost_arns"))
}

func (oc OutpostConfigAttributes) ControlPlanePlacement() terra.ListValue[OutpostConfigControlPlanePlacementAttributes] {
	return terra.ReferenceAsList[OutpostConfigControlPlanePlacementAttributes](oc.ref.Append("control_plane_placement"))
}

type OutpostConfigControlPlanePlacementAttributes struct {
	ref terra.Reference
}

func (cpp OutpostConfigControlPlanePlacementAttributes) InternalRef() (terra.Reference, error) {
	return cpp.ref, nil
}

func (cpp OutpostConfigControlPlanePlacementAttributes) InternalWithRef(ref terra.Reference) OutpostConfigControlPlanePlacementAttributes {
	return OutpostConfigControlPlanePlacementAttributes{ref: ref}
}

func (cpp OutpostConfigControlPlanePlacementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpp.ref.InternalTokens()
}

func (cpp OutpostConfigControlPlanePlacementAttributes) GroupName() terra.StringValue {
	return terra.ReferenceAsString(cpp.ref.Append("group_name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type VpcConfigAttributes struct {
	ref terra.Reference
}

func (vc VpcConfigAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc VpcConfigAttributes) InternalWithRef(ref terra.Reference) VpcConfigAttributes {
	return VpcConfigAttributes{ref: ref}
}

func (vc VpcConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc VpcConfigAttributes) ClusterSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("cluster_security_group_id"))
}

func (vc VpcConfigAttributes) EndpointPrivateAccess() terra.BoolValue {
	return terra.ReferenceAsBool(vc.ref.Append("endpoint_private_access"))
}

func (vc VpcConfigAttributes) EndpointPublicAccess() terra.BoolValue {
	return terra.ReferenceAsBool(vc.ref.Append("endpoint_public_access"))
}

func (vc VpcConfigAttributes) PublicAccessCidrs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("public_access_cidrs"))
}

func (vc VpcConfigAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc VpcConfigAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

func (vc VpcConfigAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_id"))
}

type CertificateAuthorityState struct {
	Data string `json:"data"`
}

type IdentityState struct {
	Oidc []IdentityOidcState `json:"oidc"`
}

type IdentityOidcState struct {
	Issuer string `json:"issuer"`
}

type AccessConfigState struct {
	AuthenticationMode                      string `json:"authentication_mode"`
	BootstrapClusterCreatorAdminPermissions bool   `json:"bootstrap_cluster_creator_admin_permissions"`
}

type EncryptionConfigState struct {
	Resources []string                        `json:"resources"`
	Provider  []EncryptionConfigProviderState `json:"provider"`
}

type EncryptionConfigProviderState struct {
	KeyArn string `json:"key_arn"`
}

type KubernetesNetworkConfigState struct {
	IpFamily        string `json:"ip_family"`
	ServiceIpv4Cidr string `json:"service_ipv4_cidr"`
	ServiceIpv6Cidr string `json:"service_ipv6_cidr"`
}

type OutpostConfigState struct {
	ControlPlaneInstanceType string                                    `json:"control_plane_instance_type"`
	OutpostArns              []string                                  `json:"outpost_arns"`
	ControlPlanePlacement    []OutpostConfigControlPlanePlacementState `json:"control_plane_placement"`
}

type OutpostConfigControlPlanePlacementState struct {
	GroupName string `json:"group_name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type VpcConfigState struct {
	ClusterSecurityGroupId string   `json:"cluster_security_group_id"`
	EndpointPrivateAccess  bool     `json:"endpoint_private_access"`
	EndpointPublicAccess   bool     `json:"endpoint_public_access"`
	PublicAccessCidrs      []string `json:"public_access_cidrs"`
	SecurityGroupIds       []string `json:"security_group_ids"`
	SubnetIds              []string `json:"subnet_ids"`
	VpcId                  string   `json:"vpc_id"`
}
