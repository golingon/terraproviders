// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudsearch_domain

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudsearch_domain.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudsearchDomainState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acd *Resource) Type() string {
	return "aws_cloudsearch_domain"
}

// LocalName returns the local name for [Resource].
func (acd *Resource) LocalName() string {
	return acd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acd *Resource) Configuration() interface{} {
	return acd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acd *Resource) Dependencies() terra.Dependencies {
	return acd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acd *Resource) LifecycleManagement() *terra.Lifecycle {
	return acd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acd *Resource) Attributes() awsCloudsearchDomainAttributes {
	return awsCloudsearchDomainAttributes{ref: terra.ReferenceResource(acd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acd *Resource) ImportState(state io.Reader) error {
	acd.state = &awsCloudsearchDomainState{}
	if err := json.NewDecoder(state).Decode(acd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acd.Type(), acd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acd *Resource) State() (*awsCloudsearchDomainState, bool) {
	return acd.state, acd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acd *Resource) StateMust() *awsCloudsearchDomainState {
	if acd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acd.Type(), acd.LocalName()))
	}
	return acd.state
}

// Args contains the configurations for aws_cloudsearch_domain.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MultiAz: bool, optional
	MultiAz terra.BoolValue `hcl:"multi_az,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// EndpointOptions: optional
	EndpointOptions *EndpointOptions `hcl:"endpoint_options,block"`
	// IndexField: min=0
	IndexField []IndexField `hcl:"index_field,block" validate:"min=0"`
	// ScalingParameters: optional
	ScalingParameters *ScalingParameters `hcl:"scaling_parameters,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsCloudsearchDomainAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("arn"))
}

// DocumentServiceEndpoint returns a reference to field document_service_endpoint of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) DocumentServiceEndpoint() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("document_service_endpoint"))
}

// DomainId returns a reference to field domain_id of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) DomainId() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("domain_id"))
}

// Id returns a reference to field id of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("id"))
}

// MultiAz returns a reference to field multi_az of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) MultiAz() terra.BoolValue {
	return terra.ReferenceAsBool(acd.ref.Append("multi_az"))
}

// Name returns a reference to field name of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("name"))
}

// SearchServiceEndpoint returns a reference to field search_service_endpoint of aws_cloudsearch_domain.
func (acd awsCloudsearchDomainAttributes) SearchServiceEndpoint() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("search_service_endpoint"))
}

func (acd awsCloudsearchDomainAttributes) EndpointOptions() terra.ListValue[EndpointOptionsAttributes] {
	return terra.ReferenceAsList[EndpointOptionsAttributes](acd.ref.Append("endpoint_options"))
}

func (acd awsCloudsearchDomainAttributes) IndexField() terra.SetValue[IndexFieldAttributes] {
	return terra.ReferenceAsSet[IndexFieldAttributes](acd.ref.Append("index_field"))
}

func (acd awsCloudsearchDomainAttributes) ScalingParameters() terra.ListValue[ScalingParametersAttributes] {
	return terra.ReferenceAsList[ScalingParametersAttributes](acd.ref.Append("scaling_parameters"))
}

func (acd awsCloudsearchDomainAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acd.ref.Append("timeouts"))
}

type awsCloudsearchDomainState struct {
	Arn                     string                   `json:"arn"`
	DocumentServiceEndpoint string                   `json:"document_service_endpoint"`
	DomainId                string                   `json:"domain_id"`
	Id                      string                   `json:"id"`
	MultiAz                 bool                     `json:"multi_az"`
	Name                    string                   `json:"name"`
	SearchServiceEndpoint   string                   `json:"search_service_endpoint"`
	EndpointOptions         []EndpointOptionsState   `json:"endpoint_options"`
	IndexField              []IndexFieldState        `json:"index_field"`
	ScalingParameters       []ScalingParametersState `json:"scaling_parameters"`
	Timeouts                *TimeoutsState           `json:"timeouts"`
}
