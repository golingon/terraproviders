// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_worklink_website_certificate_authority_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_worklink_website_certificate_authority_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsWorklinkWebsiteCertificateAuthorityAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awwcaa *Resource) Type() string {
	return "aws_worklink_website_certificate_authority_association"
}

// LocalName returns the local name for [Resource].
func (awwcaa *Resource) LocalName() string {
	return awwcaa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awwcaa *Resource) Configuration() interface{} {
	return awwcaa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awwcaa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awwcaa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awwcaa *Resource) Dependencies() terra.Dependencies {
	return awwcaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awwcaa *Resource) LifecycleManagement() *terra.Lifecycle {
	return awwcaa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awwcaa *Resource) Attributes() awsWorklinkWebsiteCertificateAuthorityAssociationAttributes {
	return awsWorklinkWebsiteCertificateAuthorityAssociationAttributes{ref: terra.ReferenceResource(awwcaa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awwcaa *Resource) ImportState(state io.Reader) error {
	awwcaa.state = &awsWorklinkWebsiteCertificateAuthorityAssociationState{}
	if err := json.NewDecoder(state).Decode(awwcaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awwcaa.Type(), awwcaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awwcaa *Resource) State() (*awsWorklinkWebsiteCertificateAuthorityAssociationState, bool) {
	return awwcaa.state, awwcaa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awwcaa *Resource) StateMust() *awsWorklinkWebsiteCertificateAuthorityAssociationState {
	if awwcaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awwcaa.Type(), awwcaa.LocalName()))
	}
	return awwcaa.state
}

// Args contains the configurations for aws_worklink_website_certificate_authority_association.
type Args struct {
	// Certificate: string, required
	Certificate terra.StringValue `hcl:"certificate,attr" validate:"required"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// FleetArn: string, required
	FleetArn terra.StringValue `hcl:"fleet_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type awsWorklinkWebsiteCertificateAuthorityAssociationAttributes struct {
	ref terra.Reference
}

// Certificate returns a reference to field certificate of aws_worklink_website_certificate_authority_association.
func (awwcaa awsWorklinkWebsiteCertificateAuthorityAssociationAttributes) Certificate() terra.StringValue {
	return terra.ReferenceAsString(awwcaa.ref.Append("certificate"))
}

// DisplayName returns a reference to field display_name of aws_worklink_website_certificate_authority_association.
func (awwcaa awsWorklinkWebsiteCertificateAuthorityAssociationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(awwcaa.ref.Append("display_name"))
}

// FleetArn returns a reference to field fleet_arn of aws_worklink_website_certificate_authority_association.
func (awwcaa awsWorklinkWebsiteCertificateAuthorityAssociationAttributes) FleetArn() terra.StringValue {
	return terra.ReferenceAsString(awwcaa.ref.Append("fleet_arn"))
}

// Id returns a reference to field id of aws_worklink_website_certificate_authority_association.
func (awwcaa awsWorklinkWebsiteCertificateAuthorityAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awwcaa.ref.Append("id"))
}

// WebsiteCaId returns a reference to field website_ca_id of aws_worklink_website_certificate_authority_association.
func (awwcaa awsWorklinkWebsiteCertificateAuthorityAssociationAttributes) WebsiteCaId() terra.StringValue {
	return terra.ReferenceAsString(awwcaa.ref.Append("website_ca_id"))
}

type awsWorklinkWebsiteCertificateAuthorityAssociationState struct {
	Certificate string `json:"certificate"`
	DisplayName string `json:"display_name"`
	FleetArn    string `json:"fleet_arn"`
	Id          string `json:"id"`
	WebsiteCaId string `json:"website_ca_id"`
}
