// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_wafregional_rule_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ActivatedRule struct {
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// RuleId: string, required
	RuleId terra.StringValue `hcl:"rule_id,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// ActivatedRuleAction: required
	Action *ActivatedRuleAction `hcl:"action,block" validate:"required"`
}

type ActivatedRuleAction struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type ActivatedRuleAttributes struct {
	ref terra.Reference
}

func (ar ActivatedRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar ActivatedRuleAttributes) InternalWithRef(ref terra.Reference) ActivatedRuleAttributes {
	return ActivatedRuleAttributes{ref: ref}
}

func (ar ActivatedRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar ActivatedRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("priority"))
}

func (ar ActivatedRuleAttributes) RuleId() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_id"))
}

func (ar ActivatedRuleAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("type"))
}

func (ar ActivatedRuleAttributes) Action() terra.ListValue[ActivatedRuleActionAttributes] {
	return terra.ReferenceAsList[ActivatedRuleActionAttributes](ar.ref.Append("action"))
}

type ActivatedRuleActionAttributes struct {
	ref terra.Reference
}

func (a ActivatedRuleActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a ActivatedRuleActionAttributes) InternalWithRef(ref terra.Reference) ActivatedRuleActionAttributes {
	return ActivatedRuleActionAttributes{ref: ref}
}

func (a ActivatedRuleActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a ActivatedRuleActionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

type ActivatedRuleState struct {
	Priority float64                    `json:"priority"`
	RuleId   string                     `json:"rule_id"`
	Type     string                     `json:"type"`
	Action   []ActivatedRuleActionState `json:"action"`
}

type ActivatedRuleActionState struct {
	Type string `json:"type"`
}
