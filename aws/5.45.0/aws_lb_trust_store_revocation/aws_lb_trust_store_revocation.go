// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lb_trust_store_revocation

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lb_trust_store_revocation.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLbTrustStoreRevocationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (altsr *Resource) Type() string {
	return "aws_lb_trust_store_revocation"
}

// LocalName returns the local name for [Resource].
func (altsr *Resource) LocalName() string {
	return altsr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (altsr *Resource) Configuration() interface{} {
	return altsr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (altsr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(altsr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (altsr *Resource) Dependencies() terra.Dependencies {
	return altsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (altsr *Resource) LifecycleManagement() *terra.Lifecycle {
	return altsr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (altsr *Resource) Attributes() awsLbTrustStoreRevocationAttributes {
	return awsLbTrustStoreRevocationAttributes{ref: terra.ReferenceResource(altsr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (altsr *Resource) ImportState(state io.Reader) error {
	altsr.state = &awsLbTrustStoreRevocationState{}
	if err := json.NewDecoder(state).Decode(altsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", altsr.Type(), altsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (altsr *Resource) State() (*awsLbTrustStoreRevocationState, bool) {
	return altsr.state, altsr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (altsr *Resource) StateMust() *awsLbTrustStoreRevocationState {
	if altsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", altsr.Type(), altsr.LocalName()))
	}
	return altsr.state
}

// Args contains the configurations for aws_lb_trust_store_revocation.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RevocationsS3Bucket: string, required
	RevocationsS3Bucket terra.StringValue `hcl:"revocations_s3_bucket,attr" validate:"required"`
	// RevocationsS3Key: string, required
	RevocationsS3Key terra.StringValue `hcl:"revocations_s3_key,attr" validate:"required"`
	// RevocationsS3ObjectVersion: string, optional
	RevocationsS3ObjectVersion terra.StringValue `hcl:"revocations_s3_object_version,attr"`
	// TrustStoreArn: string, required
	TrustStoreArn terra.StringValue `hcl:"trust_store_arn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsLbTrustStoreRevocationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_lb_trust_store_revocation.
func (altsr awsLbTrustStoreRevocationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(altsr.ref.Append("id"))
}

// RevocationId returns a reference to field revocation_id of aws_lb_trust_store_revocation.
func (altsr awsLbTrustStoreRevocationAttributes) RevocationId() terra.NumberValue {
	return terra.ReferenceAsNumber(altsr.ref.Append("revocation_id"))
}

// RevocationsS3Bucket returns a reference to field revocations_s3_bucket of aws_lb_trust_store_revocation.
func (altsr awsLbTrustStoreRevocationAttributes) RevocationsS3Bucket() terra.StringValue {
	return terra.ReferenceAsString(altsr.ref.Append("revocations_s3_bucket"))
}

// RevocationsS3Key returns a reference to field revocations_s3_key of aws_lb_trust_store_revocation.
func (altsr awsLbTrustStoreRevocationAttributes) RevocationsS3Key() terra.StringValue {
	return terra.ReferenceAsString(altsr.ref.Append("revocations_s3_key"))
}

// RevocationsS3ObjectVersion returns a reference to field revocations_s3_object_version of aws_lb_trust_store_revocation.
func (altsr awsLbTrustStoreRevocationAttributes) RevocationsS3ObjectVersion() terra.StringValue {
	return terra.ReferenceAsString(altsr.ref.Append("revocations_s3_object_version"))
}

// TrustStoreArn returns a reference to field trust_store_arn of aws_lb_trust_store_revocation.
func (altsr awsLbTrustStoreRevocationAttributes) TrustStoreArn() terra.StringValue {
	return terra.ReferenceAsString(altsr.ref.Append("trust_store_arn"))
}

func (altsr awsLbTrustStoreRevocationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](altsr.ref.Append("timeouts"))
}

type awsLbTrustStoreRevocationState struct {
	Id                         string         `json:"id"`
	RevocationId               float64        `json:"revocation_id"`
	RevocationsS3Bucket        string         `json:"revocations_s3_bucket"`
	RevocationsS3Key           string         `json:"revocations_s3_key"`
	RevocationsS3ObjectVersion string         `json:"revocations_s3_object_version"`
	TrustStoreArn              string         `json:"trust_store_arn"`
	Timeouts                   *TimeoutsState `json:"timeouts"`
}
