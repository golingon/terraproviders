// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_client_vpn_endpoint

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AuthenticationOptions struct {
	// ActiveDirectoryId: string, optional
	ActiveDirectoryId terra.StringValue `hcl:"active_directory_id,attr"`
	// RootCertificateChainArn: string, optional
	RootCertificateChainArn terra.StringValue `hcl:"root_certificate_chain_arn,attr"`
	// SamlProviderArn: string, optional
	SamlProviderArn terra.StringValue `hcl:"saml_provider_arn,attr"`
	// SelfServiceSamlProviderArn: string, optional
	SelfServiceSamlProviderArn terra.StringValue `hcl:"self_service_saml_provider_arn,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type ClientConnectOptions struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LambdaFunctionArn: string, optional
	LambdaFunctionArn terra.StringValue `hcl:"lambda_function_arn,attr"`
}

type ClientLoginBannerOptions struct {
	// BannerText: string, optional
	BannerText terra.StringValue `hcl:"banner_text,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type ConnectionLogOptions struct {
	// CloudwatchLogGroup: string, optional
	CloudwatchLogGroup terra.StringValue `hcl:"cloudwatch_log_group,attr"`
	// CloudwatchLogStream: string, optional
	CloudwatchLogStream terra.StringValue `hcl:"cloudwatch_log_stream,attr"`
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
}

type AuthenticationOptionsAttributes struct {
	ref terra.Reference
}

func (ao AuthenticationOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ao.ref, nil
}

func (ao AuthenticationOptionsAttributes) InternalWithRef(ref terra.Reference) AuthenticationOptionsAttributes {
	return AuthenticationOptionsAttributes{ref: ref}
}

func (ao AuthenticationOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ao.ref.InternalTokens()
}

func (ao AuthenticationOptionsAttributes) ActiveDirectoryId() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("active_directory_id"))
}

func (ao AuthenticationOptionsAttributes) RootCertificateChainArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("root_certificate_chain_arn"))
}

func (ao AuthenticationOptionsAttributes) SamlProviderArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("saml_provider_arn"))
}

func (ao AuthenticationOptionsAttributes) SelfServiceSamlProviderArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("self_service_saml_provider_arn"))
}

func (ao AuthenticationOptionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("type"))
}

type ClientConnectOptionsAttributes struct {
	ref terra.Reference
}

func (cco ClientConnectOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cco.ref, nil
}

func (cco ClientConnectOptionsAttributes) InternalWithRef(ref terra.Reference) ClientConnectOptionsAttributes {
	return ClientConnectOptionsAttributes{ref: ref}
}

func (cco ClientConnectOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cco.ref.InternalTokens()
}

func (cco ClientConnectOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cco.ref.Append("enabled"))
}

func (cco ClientConnectOptionsAttributes) LambdaFunctionArn() terra.StringValue {
	return terra.ReferenceAsString(cco.ref.Append("lambda_function_arn"))
}

type ClientLoginBannerOptionsAttributes struct {
	ref terra.Reference
}

func (clbo ClientLoginBannerOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clbo.ref, nil
}

func (clbo ClientLoginBannerOptionsAttributes) InternalWithRef(ref terra.Reference) ClientLoginBannerOptionsAttributes {
	return ClientLoginBannerOptionsAttributes{ref: ref}
}

func (clbo ClientLoginBannerOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clbo.ref.InternalTokens()
}

func (clbo ClientLoginBannerOptionsAttributes) BannerText() terra.StringValue {
	return terra.ReferenceAsString(clbo.ref.Append("banner_text"))
}

func (clbo ClientLoginBannerOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(clbo.ref.Append("enabled"))
}

type ConnectionLogOptionsAttributes struct {
	ref terra.Reference
}

func (clo ConnectionLogOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clo.ref, nil
}

func (clo ConnectionLogOptionsAttributes) InternalWithRef(ref terra.Reference) ConnectionLogOptionsAttributes {
	return ConnectionLogOptionsAttributes{ref: ref}
}

func (clo ConnectionLogOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clo.ref.InternalTokens()
}

func (clo ConnectionLogOptionsAttributes) CloudwatchLogGroup() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_log_group"))
}

func (clo ConnectionLogOptionsAttributes) CloudwatchLogStream() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_log_stream"))
}

func (clo ConnectionLogOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(clo.ref.Append("enabled"))
}

type AuthenticationOptionsState struct {
	ActiveDirectoryId          string `json:"active_directory_id"`
	RootCertificateChainArn    string `json:"root_certificate_chain_arn"`
	SamlProviderArn            string `json:"saml_provider_arn"`
	SelfServiceSamlProviderArn string `json:"self_service_saml_provider_arn"`
	Type                       string `json:"type"`
}

type ClientConnectOptionsState struct {
	Enabled           bool   `json:"enabled"`
	LambdaFunctionArn string `json:"lambda_function_arn"`
}

type ClientLoginBannerOptionsState struct {
	BannerText string `json:"banner_text"`
	Enabled    bool   `json:"enabled"`
}

type ConnectionLogOptionsState struct {
	CloudwatchLogGroup  string `json:"cloudwatch_log_group"`
	CloudwatchLogStream string `json:"cloudwatch_log_stream"`
	Enabled             bool   `json:"enabled"`
}
