// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_client_vpn_endpoint

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values: set of string, required
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAuthenticationOptionsAttributes struct {
	ref terra.Reference
}

func (ao DataAuthenticationOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ao.ref, nil
}

func (ao DataAuthenticationOptionsAttributes) InternalWithRef(ref terra.Reference) DataAuthenticationOptionsAttributes {
	return DataAuthenticationOptionsAttributes{ref: ref}
}

func (ao DataAuthenticationOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ao.ref.InternalTokens()
}

func (ao DataAuthenticationOptionsAttributes) ActiveDirectoryId() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("active_directory_id"))
}

func (ao DataAuthenticationOptionsAttributes) RootCertificateChainArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("root_certificate_chain_arn"))
}

func (ao DataAuthenticationOptionsAttributes) SamlProviderArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("saml_provider_arn"))
}

func (ao DataAuthenticationOptionsAttributes) SelfServiceSamlProviderArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("self_service_saml_provider_arn"))
}

func (ao DataAuthenticationOptionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("type"))
}

type DataClientConnectOptionsAttributes struct {
	ref terra.Reference
}

func (cco DataClientConnectOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cco.ref, nil
}

func (cco DataClientConnectOptionsAttributes) InternalWithRef(ref terra.Reference) DataClientConnectOptionsAttributes {
	return DataClientConnectOptionsAttributes{ref: ref}
}

func (cco DataClientConnectOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cco.ref.InternalTokens()
}

func (cco DataClientConnectOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cco.ref.Append("enabled"))
}

func (cco DataClientConnectOptionsAttributes) LambdaFunctionArn() terra.StringValue {
	return terra.ReferenceAsString(cco.ref.Append("lambda_function_arn"))
}

type DataClientLoginBannerOptionsAttributes struct {
	ref terra.Reference
}

func (clbo DataClientLoginBannerOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clbo.ref, nil
}

func (clbo DataClientLoginBannerOptionsAttributes) InternalWithRef(ref terra.Reference) DataClientLoginBannerOptionsAttributes {
	return DataClientLoginBannerOptionsAttributes{ref: ref}
}

func (clbo DataClientLoginBannerOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clbo.ref.InternalTokens()
}

func (clbo DataClientLoginBannerOptionsAttributes) BannerText() terra.StringValue {
	return terra.ReferenceAsString(clbo.ref.Append("banner_text"))
}

func (clbo DataClientLoginBannerOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(clbo.ref.Append("enabled"))
}

type DataConnectionLogOptionsAttributes struct {
	ref terra.Reference
}

func (clo DataConnectionLogOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clo.ref, nil
}

func (clo DataConnectionLogOptionsAttributes) InternalWithRef(ref terra.Reference) DataConnectionLogOptionsAttributes {
	return DataConnectionLogOptionsAttributes{ref: ref}
}

func (clo DataConnectionLogOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clo.ref.InternalTokens()
}

func (clo DataConnectionLogOptionsAttributes) CloudwatchLogGroup() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_log_group"))
}

func (clo DataConnectionLogOptionsAttributes) CloudwatchLogStream() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_log_stream"))
}

func (clo DataConnectionLogOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(clo.ref.Append("enabled"))
}

type DataFilterAttributes struct {
	ref terra.Reference
}

func (f DataFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFilterAttributes) InternalWithRef(ref terra.Reference) DataFilterAttributes {
	return DataFilterAttributes{ref: ref}
}

func (f DataFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DataFilterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](f.ref.Append("values"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAuthenticationOptionsState struct {
	ActiveDirectoryId          string `json:"active_directory_id"`
	RootCertificateChainArn    string `json:"root_certificate_chain_arn"`
	SamlProviderArn            string `json:"saml_provider_arn"`
	SelfServiceSamlProviderArn string `json:"self_service_saml_provider_arn"`
	Type                       string `json:"type"`
}

type DataClientConnectOptionsState struct {
	Enabled           bool   `json:"enabled"`
	LambdaFunctionArn string `json:"lambda_function_arn"`
}

type DataClientLoginBannerOptionsState struct {
	BannerText string `json:"banner_text"`
	Enabled    bool   `json:"enabled"`
}

type DataConnectionLogOptionsState struct {
	CloudwatchLogGroup  string `json:"cloudwatch_log_group"`
	CloudwatchLogStream string `json:"cloudwatch_log_stream"`
	Enabled             bool   `json:"enabled"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
