// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_local_gateway_route

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ec2_local_gateway_route.
type Resource struct {
	Name      string
	Args      Args
	state     *awsEc2LocalGatewayRouteState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aelgr *Resource) Type() string {
	return "aws_ec2_local_gateway_route"
}

// LocalName returns the local name for [Resource].
func (aelgr *Resource) LocalName() string {
	return aelgr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aelgr *Resource) Configuration() interface{} {
	return aelgr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aelgr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aelgr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aelgr *Resource) Dependencies() terra.Dependencies {
	return aelgr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aelgr *Resource) LifecycleManagement() *terra.Lifecycle {
	return aelgr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aelgr *Resource) Attributes() awsEc2LocalGatewayRouteAttributes {
	return awsEc2LocalGatewayRouteAttributes{ref: terra.ReferenceResource(aelgr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aelgr *Resource) ImportState(state io.Reader) error {
	aelgr.state = &awsEc2LocalGatewayRouteState{}
	if err := json.NewDecoder(state).Decode(aelgr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aelgr.Type(), aelgr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aelgr *Resource) State() (*awsEc2LocalGatewayRouteState, bool) {
	return aelgr.state, aelgr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aelgr *Resource) StateMust() *awsEc2LocalGatewayRouteState {
	if aelgr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aelgr.Type(), aelgr.LocalName()))
	}
	return aelgr.state
}

// Args contains the configurations for aws_ec2_local_gateway_route.
type Args struct {
	// DestinationCidrBlock: string, required
	DestinationCidrBlock terra.StringValue `hcl:"destination_cidr_block,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalGatewayRouteTableId: string, required
	LocalGatewayRouteTableId terra.StringValue `hcl:"local_gateway_route_table_id,attr" validate:"required"`
	// LocalGatewayVirtualInterfaceGroupId: string, required
	LocalGatewayVirtualInterfaceGroupId terra.StringValue `hcl:"local_gateway_virtual_interface_group_id,attr" validate:"required"`
}

type awsEc2LocalGatewayRouteAttributes struct {
	ref terra.Reference
}

// DestinationCidrBlock returns a reference to field destination_cidr_block of aws_ec2_local_gateway_route.
func (aelgr awsEc2LocalGatewayRouteAttributes) DestinationCidrBlock() terra.StringValue {
	return terra.ReferenceAsString(aelgr.ref.Append("destination_cidr_block"))
}

// Id returns a reference to field id of aws_ec2_local_gateway_route.
func (aelgr awsEc2LocalGatewayRouteAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aelgr.ref.Append("id"))
}

// LocalGatewayRouteTableId returns a reference to field local_gateway_route_table_id of aws_ec2_local_gateway_route.
func (aelgr awsEc2LocalGatewayRouteAttributes) LocalGatewayRouteTableId() terra.StringValue {
	return terra.ReferenceAsString(aelgr.ref.Append("local_gateway_route_table_id"))
}

// LocalGatewayVirtualInterfaceGroupId returns a reference to field local_gateway_virtual_interface_group_id of aws_ec2_local_gateway_route.
func (aelgr awsEc2LocalGatewayRouteAttributes) LocalGatewayVirtualInterfaceGroupId() terra.StringValue {
	return terra.ReferenceAsString(aelgr.ref.Append("local_gateway_virtual_interface_group_id"))
}

type awsEc2LocalGatewayRouteState struct {
	DestinationCidrBlock                string `json:"destination_cidr_block"`
	Id                                  string `json:"id"`
	LocalGatewayRouteTableId            string `json:"local_gateway_route_table_id"`
	LocalGatewayVirtualInterfaceGroupId string `json:"local_gateway_virtual_interface_group_id"`
}
