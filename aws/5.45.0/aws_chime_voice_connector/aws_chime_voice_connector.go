// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_chime_voice_connector

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_chime_voice_connector.
type Resource struct {
	Name      string
	Args      Args
	state     *awsChimeVoiceConnectorState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acvc *Resource) Type() string {
	return "aws_chime_voice_connector"
}

// LocalName returns the local name for [Resource].
func (acvc *Resource) LocalName() string {
	return acvc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acvc *Resource) Configuration() interface{} {
	return acvc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acvc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acvc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acvc *Resource) Dependencies() terra.Dependencies {
	return acvc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acvc *Resource) LifecycleManagement() *terra.Lifecycle {
	return acvc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acvc *Resource) Attributes() awsChimeVoiceConnectorAttributes {
	return awsChimeVoiceConnectorAttributes{ref: terra.ReferenceResource(acvc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acvc *Resource) ImportState(state io.Reader) error {
	acvc.state = &awsChimeVoiceConnectorState{}
	if err := json.NewDecoder(state).Decode(acvc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acvc.Type(), acvc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acvc *Resource) State() (*awsChimeVoiceConnectorState, bool) {
	return acvc.state, acvc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acvc *Resource) StateMust() *awsChimeVoiceConnectorState {
	if acvc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acvc.Type(), acvc.LocalName()))
	}
	return acvc.state
}

// Args contains the configurations for aws_chime_voice_connector.
type Args struct {
	// AwsRegion: string, optional
	AwsRegion terra.StringValue `hcl:"aws_region,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RequireEncryption: bool, required
	RequireEncryption terra.BoolValue `hcl:"require_encryption,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}

type awsChimeVoiceConnectorAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("arn"))
}

// AwsRegion returns a reference to field aws_region of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) AwsRegion() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("aws_region"))
}

// Id returns a reference to field id of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("id"))
}

// Name returns a reference to field name of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("name"))
}

// OutboundHostName returns a reference to field outbound_host_name of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) OutboundHostName() terra.StringValue {
	return terra.ReferenceAsString(acvc.ref.Append("outbound_host_name"))
}

// RequireEncryption returns a reference to field require_encryption of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) RequireEncryption() terra.BoolValue {
	return terra.ReferenceAsBool(acvc.ref.Append("require_encryption"))
}

// Tags returns a reference to field tags of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acvc.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_chime_voice_connector.
func (acvc awsChimeVoiceConnectorAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acvc.ref.Append("tags_all"))
}

type awsChimeVoiceConnectorState struct {
	Arn               string            `json:"arn"`
	AwsRegion         string            `json:"aws_region"`
	Id                string            `json:"id"`
	Name              string            `json:"name"`
	OutboundHostName  string            `json:"outbound_host_name"`
	RequireEncryption bool              `json:"require_encryption"`
	Tags              map[string]string `json:"tags"`
	TagsAll           map[string]string `json:"tags_all"`
}
