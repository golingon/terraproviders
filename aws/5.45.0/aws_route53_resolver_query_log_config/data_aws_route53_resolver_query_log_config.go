// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53_resolver_query_log_config

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_route53_resolver_query_log_config.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arrqlc *DataSource) DataSource() string {
	return "aws_route53_resolver_query_log_config"
}

// LocalName returns the local name for [DataSource].
func (arrqlc *DataSource) LocalName() string {
	return arrqlc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arrqlc *DataSource) Configuration() interface{} {
	return arrqlc.Args
}

// Attributes returns the attributes for [DataSource].
func (arrqlc *DataSource) Attributes() dataAwsRoute53ResolverQueryLogConfigAttributes {
	return dataAwsRoute53ResolverQueryLogConfigAttributes{ref: terra.ReferenceDataSource(arrqlc)}
}

// DataArgs contains the configurations for aws_route53_resolver_query_log_config.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ResolverQueryLogConfigId: string, optional
	ResolverQueryLogConfigId terra.StringValue `hcl:"resolver_query_log_config_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
}

type dataAwsRoute53ResolverQueryLogConfigAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("arn"))
}

// DestinationArn returns a reference to field destination_arn of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) DestinationArn() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("destination_arn"))
}

// Id returns a reference to field id of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("id"))
}

// Name returns a reference to field name of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("name"))
}

// OwnerId returns a reference to field owner_id of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("owner_id"))
}

// ResolverQueryLogConfigId returns a reference to field resolver_query_log_config_id of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) ResolverQueryLogConfigId() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("resolver_query_log_config_id"))
}

// ShareStatus returns a reference to field share_status of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) ShareStatus() terra.StringValue {
	return terra.ReferenceAsString(arrqlc.ref.Append("share_status"))
}

// Tags returns a reference to field tags of aws_route53_resolver_query_log_config.
func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](arrqlc.ref.Append("tags"))
}

func (arrqlc dataAwsRoute53ResolverQueryLogConfigAttributes) Filter() terra.SetValue[DataFilterAttributes] {
	return terra.ReferenceAsSet[DataFilterAttributes](arrqlc.ref.Append("filter"))
}
