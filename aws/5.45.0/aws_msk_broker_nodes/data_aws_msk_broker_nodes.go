// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_msk_broker_nodes

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_msk_broker_nodes.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ambn *DataSource) DataSource() string {
	return "aws_msk_broker_nodes"
}

// LocalName returns the local name for [DataSource].
func (ambn *DataSource) LocalName() string {
	return ambn.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ambn *DataSource) Configuration() interface{} {
	return ambn.Args
}

// Attributes returns the attributes for [DataSource].
func (ambn *DataSource) Attributes() dataAwsMskBrokerNodesAttributes {
	return dataAwsMskBrokerNodesAttributes{ref: terra.ReferenceDataSource(ambn)}
}

// DataArgs contains the configurations for aws_msk_broker_nodes.
type DataArgs struct {
	// ClusterArn: string, required
	ClusterArn terra.StringValue `hcl:"cluster_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsMskBrokerNodesAttributes struct {
	ref terra.Reference
}

// ClusterArn returns a reference to field cluster_arn of aws_msk_broker_nodes.
func (ambn dataAwsMskBrokerNodesAttributes) ClusterArn() terra.StringValue {
	return terra.ReferenceAsString(ambn.ref.Append("cluster_arn"))
}

// Id returns a reference to field id of aws_msk_broker_nodes.
func (ambn dataAwsMskBrokerNodesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ambn.ref.Append("id"))
}

func (ambn dataAwsMskBrokerNodesAttributes) NodeInfoList() terra.ListValue[DataNodeInfoListAttributes] {
	return terra.ReferenceAsList[DataNodeInfoListAttributes](ambn.ref.Append("node_info_list"))
}
