// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ses_receipt_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_ses_receipt_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSesReceiptRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asrr *Resource) Type() string {
	return "aws_ses_receipt_rule"
}

// LocalName returns the local name for [Resource].
func (asrr *Resource) LocalName() string {
	return asrr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asrr *Resource) Configuration() interface{} {
	return asrr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asrr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asrr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asrr *Resource) Dependencies() terra.Dependencies {
	return asrr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asrr *Resource) LifecycleManagement() *terra.Lifecycle {
	return asrr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asrr *Resource) Attributes() awsSesReceiptRuleAttributes {
	return awsSesReceiptRuleAttributes{ref: terra.ReferenceResource(asrr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asrr *Resource) ImportState(state io.Reader) error {
	asrr.state = &awsSesReceiptRuleState{}
	if err := json.NewDecoder(state).Decode(asrr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asrr.Type(), asrr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asrr *Resource) State() (*awsSesReceiptRuleState, bool) {
	return asrr.state, asrr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asrr *Resource) StateMust() *awsSesReceiptRuleState {
	if asrr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asrr.Type(), asrr.LocalName()))
	}
	return asrr.state
}

// Args contains the configurations for aws_ses_receipt_rule.
type Args struct {
	// After: string, optional
	After terra.StringValue `hcl:"after,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Recipients: set of string, optional
	Recipients terra.SetValue[terra.StringValue] `hcl:"recipients,attr"`
	// RuleSetName: string, required
	RuleSetName terra.StringValue `hcl:"rule_set_name,attr" validate:"required"`
	// ScanEnabled: bool, optional
	ScanEnabled terra.BoolValue `hcl:"scan_enabled,attr"`
	// TlsPolicy: string, optional
	TlsPolicy terra.StringValue `hcl:"tls_policy,attr"`
	// AddHeaderAction: min=0
	AddHeaderAction []AddHeaderAction `hcl:"add_header_action,block" validate:"min=0"`
	// BounceAction: min=0
	BounceAction []BounceAction `hcl:"bounce_action,block" validate:"min=0"`
	// LambdaAction: min=0
	LambdaAction []LambdaAction `hcl:"lambda_action,block" validate:"min=0"`
	// S3Action: min=0
	S3Action []S3Action `hcl:"s3_action,block" validate:"min=0"`
	// SnsAction: min=0
	SnsAction []SnsAction `hcl:"sns_action,block" validate:"min=0"`
	// StopAction: min=0
	StopAction []StopAction `hcl:"stop_action,block" validate:"min=0"`
	// WorkmailAction: min=0
	WorkmailAction []WorkmailAction `hcl:"workmail_action,block" validate:"min=0"`
}

type awsSesReceiptRuleAttributes struct {
	ref terra.Reference
}

// After returns a reference to field after of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) After() terra.StringValue {
	return terra.ReferenceAsString(asrr.ref.Append("after"))
}

// Arn returns a reference to field arn of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asrr.ref.Append("arn"))
}

// Enabled returns a reference to field enabled of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(asrr.ref.Append("enabled"))
}

// Id returns a reference to field id of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asrr.ref.Append("id"))
}

// Name returns a reference to field name of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asrr.ref.Append("name"))
}

// Recipients returns a reference to field recipients of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) Recipients() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asrr.ref.Append("recipients"))
}

// RuleSetName returns a reference to field rule_set_name of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) RuleSetName() terra.StringValue {
	return terra.ReferenceAsString(asrr.ref.Append("rule_set_name"))
}

// ScanEnabled returns a reference to field scan_enabled of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) ScanEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asrr.ref.Append("scan_enabled"))
}

// TlsPolicy returns a reference to field tls_policy of aws_ses_receipt_rule.
func (asrr awsSesReceiptRuleAttributes) TlsPolicy() terra.StringValue {
	return terra.ReferenceAsString(asrr.ref.Append("tls_policy"))
}

func (asrr awsSesReceiptRuleAttributes) AddHeaderAction() terra.SetValue[AddHeaderActionAttributes] {
	return terra.ReferenceAsSet[AddHeaderActionAttributes](asrr.ref.Append("add_header_action"))
}

func (asrr awsSesReceiptRuleAttributes) BounceAction() terra.SetValue[BounceActionAttributes] {
	return terra.ReferenceAsSet[BounceActionAttributes](asrr.ref.Append("bounce_action"))
}

func (asrr awsSesReceiptRuleAttributes) LambdaAction() terra.SetValue[LambdaActionAttributes] {
	return terra.ReferenceAsSet[LambdaActionAttributes](asrr.ref.Append("lambda_action"))
}

func (asrr awsSesReceiptRuleAttributes) S3Action() terra.SetValue[S3ActionAttributes] {
	return terra.ReferenceAsSet[S3ActionAttributes](asrr.ref.Append("s3_action"))
}

func (asrr awsSesReceiptRuleAttributes) SnsAction() terra.SetValue[SnsActionAttributes] {
	return terra.ReferenceAsSet[SnsActionAttributes](asrr.ref.Append("sns_action"))
}

func (asrr awsSesReceiptRuleAttributes) StopAction() terra.SetValue[StopActionAttributes] {
	return terra.ReferenceAsSet[StopActionAttributes](asrr.ref.Append("stop_action"))
}

func (asrr awsSesReceiptRuleAttributes) WorkmailAction() terra.SetValue[WorkmailActionAttributes] {
	return terra.ReferenceAsSet[WorkmailActionAttributes](asrr.ref.Append("workmail_action"))
}

type awsSesReceiptRuleState struct {
	After           string                 `json:"after"`
	Arn             string                 `json:"arn"`
	Enabled         bool                   `json:"enabled"`
	Id              string                 `json:"id"`
	Name            string                 `json:"name"`
	Recipients      []string               `json:"recipients"`
	RuleSetName     string                 `json:"rule_set_name"`
	ScanEnabled     bool                   `json:"scan_enabled"`
	TlsPolicy       string                 `json:"tls_policy"`
	AddHeaderAction []AddHeaderActionState `json:"add_header_action"`
	BounceAction    []BounceActionState    `json:"bounce_action"`
	LambdaAction    []LambdaActionState    `json:"lambda_action"`
	S3Action        []S3ActionState        `json:"s3_action"`
	SnsAction       []SnsActionState       `json:"sns_action"`
	StopAction      []StopActionState      `json:"stop_action"`
	WorkmailAction  []WorkmailActionState  `json:"workmail_action"`
}
