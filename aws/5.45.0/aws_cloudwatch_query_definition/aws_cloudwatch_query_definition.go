// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudwatch_query_definition

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudwatch_query_definition.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudwatchQueryDefinitionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acqd *Resource) Type() string {
	return "aws_cloudwatch_query_definition"
}

// LocalName returns the local name for [Resource].
func (acqd *Resource) LocalName() string {
	return acqd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acqd *Resource) Configuration() interface{} {
	return acqd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acqd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acqd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acqd *Resource) Dependencies() terra.Dependencies {
	return acqd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acqd *Resource) LifecycleManagement() *terra.Lifecycle {
	return acqd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acqd *Resource) Attributes() awsCloudwatchQueryDefinitionAttributes {
	return awsCloudwatchQueryDefinitionAttributes{ref: terra.ReferenceResource(acqd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acqd *Resource) ImportState(state io.Reader) error {
	acqd.state = &awsCloudwatchQueryDefinitionState{}
	if err := json.NewDecoder(state).Decode(acqd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acqd.Type(), acqd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acqd *Resource) State() (*awsCloudwatchQueryDefinitionState, bool) {
	return acqd.state, acqd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acqd *Resource) StateMust() *awsCloudwatchQueryDefinitionState {
	if acqd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acqd.Type(), acqd.LocalName()))
	}
	return acqd.state
}

// Args contains the configurations for aws_cloudwatch_query_definition.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogGroupNames: list of string, optional
	LogGroupNames terra.ListValue[terra.StringValue] `hcl:"log_group_names,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueryString: string, required
	QueryString terra.StringValue `hcl:"query_string,attr" validate:"required"`
}

type awsCloudwatchQueryDefinitionAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_cloudwatch_query_definition.
func (acqd awsCloudwatchQueryDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acqd.ref.Append("id"))
}

// LogGroupNames returns a reference to field log_group_names of aws_cloudwatch_query_definition.
func (acqd awsCloudwatchQueryDefinitionAttributes) LogGroupNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acqd.ref.Append("log_group_names"))
}

// Name returns a reference to field name of aws_cloudwatch_query_definition.
func (acqd awsCloudwatchQueryDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acqd.ref.Append("name"))
}

// QueryDefinitionId returns a reference to field query_definition_id of aws_cloudwatch_query_definition.
func (acqd awsCloudwatchQueryDefinitionAttributes) QueryDefinitionId() terra.StringValue {
	return terra.ReferenceAsString(acqd.ref.Append("query_definition_id"))
}

// QueryString returns a reference to field query_string of aws_cloudwatch_query_definition.
func (acqd awsCloudwatchQueryDefinitionAttributes) QueryString() terra.StringValue {
	return terra.ReferenceAsString(acqd.ref.Append("query_string"))
}

type awsCloudwatchQueryDefinitionState struct {
	Id                string   `json:"id"`
	LogGroupNames     []string `json:"log_group_names"`
	Name              string   `json:"name"`
	QueryDefinitionId string   `json:"query_definition_id"`
	QueryString       string   `json:"query_string"`
}
