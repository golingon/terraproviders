// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lightsail_container_service_deployment_version

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_lightsail_container_service_deployment_version.
type Resource struct {
	Name      string
	Args      Args
	state     *awsLightsailContainerServiceDeploymentVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alcsdv *Resource) Type() string {
	return "aws_lightsail_container_service_deployment_version"
}

// LocalName returns the local name for [Resource].
func (alcsdv *Resource) LocalName() string {
	return alcsdv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alcsdv *Resource) Configuration() interface{} {
	return alcsdv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alcsdv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alcsdv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alcsdv *Resource) Dependencies() terra.Dependencies {
	return alcsdv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alcsdv *Resource) LifecycleManagement() *terra.Lifecycle {
	return alcsdv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alcsdv *Resource) Attributes() awsLightsailContainerServiceDeploymentVersionAttributes {
	return awsLightsailContainerServiceDeploymentVersionAttributes{ref: terra.ReferenceResource(alcsdv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alcsdv *Resource) ImportState(state io.Reader) error {
	alcsdv.state = &awsLightsailContainerServiceDeploymentVersionState{}
	if err := json.NewDecoder(state).Decode(alcsdv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alcsdv.Type(), alcsdv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alcsdv *Resource) State() (*awsLightsailContainerServiceDeploymentVersionState, bool) {
	return alcsdv.state, alcsdv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alcsdv *Resource) StateMust() *awsLightsailContainerServiceDeploymentVersionState {
	if alcsdv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alcsdv.Type(), alcsdv.LocalName()))
	}
	return alcsdv.state
}

// Args contains the configurations for aws_lightsail_container_service_deployment_version.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// Container: min=1,max=53
	Container []Container `hcl:"container,block" validate:"min=1,max=53"`
	// PublicEndpoint: optional
	PublicEndpoint *PublicEndpoint `hcl:"public_endpoint,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsLightsailContainerServiceDeploymentVersionAttributes struct {
	ref terra.Reference
}

// CreatedAt returns a reference to field created_at of aws_lightsail_container_service_deployment_version.
func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(alcsdv.ref.Append("created_at"))
}

// Id returns a reference to field id of aws_lightsail_container_service_deployment_version.
func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alcsdv.ref.Append("id"))
}

// ServiceName returns a reference to field service_name of aws_lightsail_container_service_deployment_version.
func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(alcsdv.ref.Append("service_name"))
}

// State returns a reference to field state of aws_lightsail_container_service_deployment_version.
func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(alcsdv.ref.Append("state"))
}

// Version returns a reference to field version of aws_lightsail_container_service_deployment_version.
func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) Version() terra.NumberValue {
	return terra.ReferenceAsNumber(alcsdv.ref.Append("version"))
}

func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) Container() terra.SetValue[ContainerAttributes] {
	return terra.ReferenceAsSet[ContainerAttributes](alcsdv.ref.Append("container"))
}

func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) PublicEndpoint() terra.ListValue[PublicEndpointAttributes] {
	return terra.ReferenceAsList[PublicEndpointAttributes](alcsdv.ref.Append("public_endpoint"))
}

func (alcsdv awsLightsailContainerServiceDeploymentVersionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alcsdv.ref.Append("timeouts"))
}

type awsLightsailContainerServiceDeploymentVersionState struct {
	CreatedAt      string                `json:"created_at"`
	Id             string                `json:"id"`
	ServiceName    string                `json:"service_name"`
	State          string                `json:"state"`
	Version        float64               `json:"version"`
	Container      []ContainerState      `json:"container"`
	PublicEndpoint []PublicEndpointState `json:"public_endpoint"`
	Timeouts       *TimeoutsState        `json:"timeouts"`
}
