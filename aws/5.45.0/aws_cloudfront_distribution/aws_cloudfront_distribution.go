// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_distribution

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudfront_distribution.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudfrontDistributionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acd *Resource) Type() string {
	return "aws_cloudfront_distribution"
}

// LocalName returns the local name for [Resource].
func (acd *Resource) LocalName() string {
	return acd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acd *Resource) Configuration() interface{} {
	return acd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acd *Resource) Dependencies() terra.Dependencies {
	return acd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acd *Resource) LifecycleManagement() *terra.Lifecycle {
	return acd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acd *Resource) Attributes() awsCloudfrontDistributionAttributes {
	return awsCloudfrontDistributionAttributes{ref: terra.ReferenceResource(acd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acd *Resource) ImportState(state io.Reader) error {
	acd.state = &awsCloudfrontDistributionState{}
	if err := json.NewDecoder(state).Decode(acd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acd.Type(), acd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acd *Resource) State() (*awsCloudfrontDistributionState, bool) {
	return acd.state, acd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acd *Resource) StateMust() *awsCloudfrontDistributionState {
	if acd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acd.Type(), acd.LocalName()))
	}
	return acd.state
}

// Args contains the configurations for aws_cloudfront_distribution.
type Args struct {
	// Aliases: set of string, optional
	Aliases terra.SetValue[terra.StringValue] `hcl:"aliases,attr"`
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// ContinuousDeploymentPolicyId: string, optional
	ContinuousDeploymentPolicyId terra.StringValue `hcl:"continuous_deployment_policy_id,attr"`
	// DefaultRootObject: string, optional
	DefaultRootObject terra.StringValue `hcl:"default_root_object,attr"`
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// HttpVersion: string, optional
	HttpVersion terra.StringValue `hcl:"http_version,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IsIpv6Enabled: bool, optional
	IsIpv6Enabled terra.BoolValue `hcl:"is_ipv6_enabled,attr"`
	// PriceClass: string, optional
	PriceClass terra.StringValue `hcl:"price_class,attr"`
	// RetainOnDelete: bool, optional
	RetainOnDelete terra.BoolValue `hcl:"retain_on_delete,attr"`
	// Staging: bool, optional
	Staging terra.BoolValue `hcl:"staging,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// WaitForDeployment: bool, optional
	WaitForDeployment terra.BoolValue `hcl:"wait_for_deployment,attr"`
	// WebAclId: string, optional
	WebAclId terra.StringValue `hcl:"web_acl_id,attr"`
	// CustomErrorResponse: min=0
	CustomErrorResponse []CustomErrorResponse `hcl:"custom_error_response,block" validate:"min=0"`
	// DefaultCacheBehavior: required
	DefaultCacheBehavior *DefaultCacheBehavior `hcl:"default_cache_behavior,block" validate:"required"`
	// LoggingConfig: optional
	LoggingConfig *LoggingConfig `hcl:"logging_config,block"`
	// OrderedCacheBehavior: min=0
	OrderedCacheBehavior []OrderedCacheBehavior `hcl:"ordered_cache_behavior,block" validate:"min=0"`
	// Origin: min=1
	Origin []Origin `hcl:"origin,block" validate:"min=1"`
	// OriginGroup: min=0
	OriginGroup []OriginGroup `hcl:"origin_group,block" validate:"min=0"`
	// Restrictions: required
	Restrictions *Restrictions `hcl:"restrictions,block" validate:"required"`
	// ViewerCertificate: required
	ViewerCertificate *ViewerCertificate `hcl:"viewer_certificate,block" validate:"required"`
}

type awsCloudfrontDistributionAttributes struct {
	ref terra.Reference
}

// Aliases returns a reference to field aliases of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Aliases() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acd.ref.Append("aliases"))
}

// Arn returns a reference to field arn of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("arn"))
}

// CallerReference returns a reference to field caller_reference of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) CallerReference() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("caller_reference"))
}

// Comment returns a reference to field comment of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Comment() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("comment"))
}

// ContinuousDeploymentPolicyId returns a reference to field continuous_deployment_policy_id of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) ContinuousDeploymentPolicyId() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("continuous_deployment_policy_id"))
}

// DefaultRootObject returns a reference to field default_root_object of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) DefaultRootObject() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("default_root_object"))
}

// DomainName returns a reference to field domain_name of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("domain_name"))
}

// Enabled returns a reference to field enabled of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(acd.ref.Append("enabled"))
}

// Etag returns a reference to field etag of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("etag"))
}

// HostedZoneId returns a reference to field hosted_zone_id of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("hosted_zone_id"))
}

// HttpVersion returns a reference to field http_version of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) HttpVersion() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("http_version"))
}

// Id returns a reference to field id of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("id"))
}

// InProgressValidationBatches returns a reference to field in_progress_validation_batches of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) InProgressValidationBatches() terra.NumberValue {
	return terra.ReferenceAsNumber(acd.ref.Append("in_progress_validation_batches"))
}

// IsIpv6Enabled returns a reference to field is_ipv6_enabled of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) IsIpv6Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(acd.ref.Append("is_ipv6_enabled"))
}

// LastModifiedTime returns a reference to field last_modified_time of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) LastModifiedTime() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("last_modified_time"))
}

// PriceClass returns a reference to field price_class of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) PriceClass() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("price_class"))
}

// RetainOnDelete returns a reference to field retain_on_delete of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) RetainOnDelete() terra.BoolValue {
	return terra.ReferenceAsBool(acd.ref.Append("retain_on_delete"))
}

// Staging returns a reference to field staging of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Staging() terra.BoolValue {
	return terra.ReferenceAsBool(acd.ref.Append("staging"))
}

// Status returns a reference to field status of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acd.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acd.ref.Append("tags_all"))
}

// WaitForDeployment returns a reference to field wait_for_deployment of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) WaitForDeployment() terra.BoolValue {
	return terra.ReferenceAsBool(acd.ref.Append("wait_for_deployment"))
}

// WebAclId returns a reference to field web_acl_id of aws_cloudfront_distribution.
func (acd awsCloudfrontDistributionAttributes) WebAclId() terra.StringValue {
	return terra.ReferenceAsString(acd.ref.Append("web_acl_id"))
}

func (acd awsCloudfrontDistributionAttributes) TrustedKeyGroups() terra.ListValue[TrustedKeyGroupsAttributes] {
	return terra.ReferenceAsList[TrustedKeyGroupsAttributes](acd.ref.Append("trusted_key_groups"))
}

func (acd awsCloudfrontDistributionAttributes) TrustedSigners() terra.ListValue[TrustedSignersAttributes] {
	return terra.ReferenceAsList[TrustedSignersAttributes](acd.ref.Append("trusted_signers"))
}

func (acd awsCloudfrontDistributionAttributes) CustomErrorResponse() terra.SetValue[CustomErrorResponseAttributes] {
	return terra.ReferenceAsSet[CustomErrorResponseAttributes](acd.ref.Append("custom_error_response"))
}

func (acd awsCloudfrontDistributionAttributes) DefaultCacheBehavior() terra.ListValue[DefaultCacheBehaviorAttributes] {
	return terra.ReferenceAsList[DefaultCacheBehaviorAttributes](acd.ref.Append("default_cache_behavior"))
}

func (acd awsCloudfrontDistributionAttributes) LoggingConfig() terra.ListValue[LoggingConfigAttributes] {
	return terra.ReferenceAsList[LoggingConfigAttributes](acd.ref.Append("logging_config"))
}

func (acd awsCloudfrontDistributionAttributes) OrderedCacheBehavior() terra.ListValue[OrderedCacheBehaviorAttributes] {
	return terra.ReferenceAsList[OrderedCacheBehaviorAttributes](acd.ref.Append("ordered_cache_behavior"))
}

func (acd awsCloudfrontDistributionAttributes) Origin() terra.SetValue[OriginAttributes] {
	return terra.ReferenceAsSet[OriginAttributes](acd.ref.Append("origin"))
}

func (acd awsCloudfrontDistributionAttributes) OriginGroup() terra.SetValue[OriginGroupAttributes] {
	return terra.ReferenceAsSet[OriginGroupAttributes](acd.ref.Append("origin_group"))
}

func (acd awsCloudfrontDistributionAttributes) Restrictions() terra.ListValue[RestrictionsAttributes] {
	return terra.ReferenceAsList[RestrictionsAttributes](acd.ref.Append("restrictions"))
}

func (acd awsCloudfrontDistributionAttributes) ViewerCertificate() terra.ListValue[ViewerCertificateAttributes] {
	return terra.ReferenceAsList[ViewerCertificateAttributes](acd.ref.Append("viewer_certificate"))
}

type awsCloudfrontDistributionState struct {
	Aliases                      []string                    `json:"aliases"`
	Arn                          string                      `json:"arn"`
	CallerReference              string                      `json:"caller_reference"`
	Comment                      string                      `json:"comment"`
	ContinuousDeploymentPolicyId string                      `json:"continuous_deployment_policy_id"`
	DefaultRootObject            string                      `json:"default_root_object"`
	DomainName                   string                      `json:"domain_name"`
	Enabled                      bool                        `json:"enabled"`
	Etag                         string                      `json:"etag"`
	HostedZoneId                 string                      `json:"hosted_zone_id"`
	HttpVersion                  string                      `json:"http_version"`
	Id                           string                      `json:"id"`
	InProgressValidationBatches  float64                     `json:"in_progress_validation_batches"`
	IsIpv6Enabled                bool                        `json:"is_ipv6_enabled"`
	LastModifiedTime             string                      `json:"last_modified_time"`
	PriceClass                   string                      `json:"price_class"`
	RetainOnDelete               bool                        `json:"retain_on_delete"`
	Staging                      bool                        `json:"staging"`
	Status                       string                      `json:"status"`
	Tags                         map[string]string           `json:"tags"`
	TagsAll                      map[string]string           `json:"tags_all"`
	WaitForDeployment            bool                        `json:"wait_for_deployment"`
	WebAclId                     string                      `json:"web_acl_id"`
	TrustedKeyGroups             []TrustedKeyGroupsState     `json:"trusted_key_groups"`
	TrustedSigners               []TrustedSignersState       `json:"trusted_signers"`
	CustomErrorResponse          []CustomErrorResponseState  `json:"custom_error_response"`
	DefaultCacheBehavior         []DefaultCacheBehaviorState `json:"default_cache_behavior"`
	LoggingConfig                []LoggingConfigState        `json:"logging_config"`
	OrderedCacheBehavior         []OrderedCacheBehaviorState `json:"ordered_cache_behavior"`
	Origin                       []OriginState               `json:"origin"`
	OriginGroup                  []OriginGroupState          `json:"origin_group"`
	Restrictions                 []RestrictionsState         `json:"restrictions"`
	ViewerCertificate            []ViewerCertificateState    `json:"viewer_certificate"`
}
