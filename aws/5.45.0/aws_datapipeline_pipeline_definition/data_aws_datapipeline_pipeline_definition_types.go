// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_datapipeline_pipeline_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataParameterValue struct{}

type DataParameterObjectAttributes struct {
	ref terra.Reference
}

func (po DataParameterObjectAttributes) InternalRef() (terra.Reference, error) {
	return po.ref, nil
}

func (po DataParameterObjectAttributes) InternalWithRef(ref terra.Reference) DataParameterObjectAttributes {
	return DataParameterObjectAttributes{ref: ref}
}

func (po DataParameterObjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return po.ref.InternalTokens()
}

func (po DataParameterObjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("id"))
}

func (po DataParameterObjectAttributes) Attribute() terra.SetValue[DataParameterObjectAttributeAttributes] {
	return terra.ReferenceAsSet[DataParameterObjectAttributeAttributes](po.ref.Append("attribute"))
}

type DataParameterObjectAttributeAttributes struct {
	ref terra.Reference
}

func (a DataParameterObjectAttributeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataParameterObjectAttributeAttributes) InternalWithRef(ref terra.Reference) DataParameterObjectAttributeAttributes {
	return DataParameterObjectAttributeAttributes{ref: ref}
}

func (a DataParameterObjectAttributeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataParameterObjectAttributeAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("key"))
}

func (a DataParameterObjectAttributeAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("string_value"))
}

type DataPipelineObjectAttributes struct {
	ref terra.Reference
}

func (po DataPipelineObjectAttributes) InternalRef() (terra.Reference, error) {
	return po.ref, nil
}

func (po DataPipelineObjectAttributes) InternalWithRef(ref terra.Reference) DataPipelineObjectAttributes {
	return DataPipelineObjectAttributes{ref: ref}
}

func (po DataPipelineObjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return po.ref.InternalTokens()
}

func (po DataPipelineObjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("id"))
}

func (po DataPipelineObjectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("name"))
}

func (po DataPipelineObjectAttributes) Field() terra.SetValue[DataPipelineObjectFieldAttributes] {
	return terra.ReferenceAsSet[DataPipelineObjectFieldAttributes](po.ref.Append("field"))
}

type DataPipelineObjectFieldAttributes struct {
	ref terra.Reference
}

func (f DataPipelineObjectFieldAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataPipelineObjectFieldAttributes) InternalWithRef(ref terra.Reference) DataPipelineObjectFieldAttributes {
	return DataPipelineObjectFieldAttributes{ref: ref}
}

func (f DataPipelineObjectFieldAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataPipelineObjectFieldAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("key"))
}

func (f DataPipelineObjectFieldAttributes) RefValue() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("ref_value"))
}

func (f DataPipelineObjectFieldAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("string_value"))
}

type DataParameterValueAttributes struct {
	ref terra.Reference
}

func (pv DataParameterValueAttributes) InternalRef() (terra.Reference, error) {
	return pv.ref, nil
}

func (pv DataParameterValueAttributes) InternalWithRef(ref terra.Reference) DataParameterValueAttributes {
	return DataParameterValueAttributes{ref: ref}
}

func (pv DataParameterValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pv.ref.InternalTokens()
}

func (pv DataParameterValueAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pv.ref.Append("id"))
}

func (pv DataParameterValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(pv.ref.Append("string_value"))
}

type DataParameterObjectState struct {
	Id        string                              `json:"id"`
	Attribute []DataParameterObjectAttributeState `json:"attribute"`
}

type DataParameterObjectAttributeState struct {
	Key         string `json:"key"`
	StringValue string `json:"string_value"`
}

type DataPipelineObjectState struct {
	Id    string                         `json:"id"`
	Name  string                         `json:"name"`
	Field []DataPipelineObjectFieldState `json:"field"`
}

type DataPipelineObjectFieldState struct {
	Key         string `json:"key"`
	RefValue    string `json:"ref_value"`
	StringValue string `json:"string_value"`
}

type DataParameterValueState struct {
	Id          string `json:"id"`
	StringValue string `json:"string_value"`
}
