// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lambda_layer_version

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_lambda_layer_version.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (allv *DataSource) DataSource() string {
	return "aws_lambda_layer_version"
}

// LocalName returns the local name for [DataSource].
func (allv *DataSource) LocalName() string {
	return allv.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (allv *DataSource) Configuration() interface{} {
	return allv.Args
}

// Attributes returns the attributes for [DataSource].
func (allv *DataSource) Attributes() dataAwsLambdaLayerVersionAttributes {
	return dataAwsLambdaLayerVersionAttributes{ref: terra.ReferenceDataSource(allv)}
}

// DataArgs contains the configurations for aws_lambda_layer_version.
type DataArgs struct {
	// CompatibleArchitecture: string, optional
	CompatibleArchitecture terra.StringValue `hcl:"compatible_architecture,attr"`
	// CompatibleRuntime: string, optional
	CompatibleRuntime terra.StringValue `hcl:"compatible_runtime,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LayerName: string, required
	LayerName terra.StringValue `hcl:"layer_name,attr" validate:"required"`
	// Version: number, optional
	Version terra.NumberValue `hcl:"version,attr"`
}

type dataAwsLambdaLayerVersionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("arn"))
}

// CompatibleArchitecture returns a reference to field compatible_architecture of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) CompatibleArchitecture() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("compatible_architecture"))
}

// CompatibleArchitectures returns a reference to field compatible_architectures of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) CompatibleArchitectures() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](allv.ref.Append("compatible_architectures"))
}

// CompatibleRuntime returns a reference to field compatible_runtime of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) CompatibleRuntime() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("compatible_runtime"))
}

// CompatibleRuntimes returns a reference to field compatible_runtimes of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) CompatibleRuntimes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](allv.ref.Append("compatible_runtimes"))
}

// CreatedDate returns a reference to field created_date of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("created_date"))
}

// Description returns a reference to field description of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("description"))
}

// Id returns a reference to field id of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("id"))
}

// LayerArn returns a reference to field layer_arn of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) LayerArn() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("layer_arn"))
}

// LayerName returns a reference to field layer_name of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) LayerName() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("layer_name"))
}

// LicenseInfo returns a reference to field license_info of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) LicenseInfo() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("license_info"))
}

// SigningJobArn returns a reference to field signing_job_arn of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) SigningJobArn() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("signing_job_arn"))
}

// SigningProfileVersionArn returns a reference to field signing_profile_version_arn of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) SigningProfileVersionArn() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("signing_profile_version_arn"))
}

// SourceCodeHash returns a reference to field source_code_hash of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) SourceCodeHash() terra.StringValue {
	return terra.ReferenceAsString(allv.ref.Append("source_code_hash"))
}

// SourceCodeSize returns a reference to field source_code_size of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) SourceCodeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(allv.ref.Append("source_code_size"))
}

// Version returns a reference to field version of aws_lambda_layer_version.
func (allv dataAwsLambdaLayerVersionAttributes) Version() terra.NumberValue {
	return terra.ReferenceAsNumber(allv.ref.Append("version"))
}
