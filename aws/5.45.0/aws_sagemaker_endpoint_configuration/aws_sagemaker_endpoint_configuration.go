// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_endpoint_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_sagemaker_endpoint_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *awsSagemakerEndpointConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asec *Resource) Type() string {
	return "aws_sagemaker_endpoint_configuration"
}

// LocalName returns the local name for [Resource].
func (asec *Resource) LocalName() string {
	return asec.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asec *Resource) Configuration() interface{} {
	return asec.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asec *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asec)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asec *Resource) Dependencies() terra.Dependencies {
	return asec.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asec *Resource) LifecycleManagement() *terra.Lifecycle {
	return asec.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asec *Resource) Attributes() awsSagemakerEndpointConfigurationAttributes {
	return awsSagemakerEndpointConfigurationAttributes{ref: terra.ReferenceResource(asec)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asec *Resource) ImportState(state io.Reader) error {
	asec.state = &awsSagemakerEndpointConfigurationState{}
	if err := json.NewDecoder(state).Decode(asec.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asec.Type(), asec.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asec *Resource) State() (*awsSagemakerEndpointConfigurationState, bool) {
	return asec.state, asec.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asec *Resource) StateMust() *awsSagemakerEndpointConfigurationState {
	if asec.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asec.Type(), asec.LocalName()))
	}
	return asec.state
}

// Args contains the configurations for aws_sagemaker_endpoint_configuration.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyArn: string, optional
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// AsyncInferenceConfig: optional
	AsyncInferenceConfig *AsyncInferenceConfig `hcl:"async_inference_config,block"`
	// DataCaptureConfig: optional
	DataCaptureConfig *DataCaptureConfig `hcl:"data_capture_config,block"`
	// ProductionVariants: min=1,max=10
	ProductionVariants []ProductionVariants `hcl:"production_variants,block" validate:"min=1,max=10"`
	// ShadowProductionVariants: min=0,max=10
	ShadowProductionVariants []ShadowProductionVariants `hcl:"shadow_production_variants,block" validate:"min=0,max=10"`
}

type awsSagemakerEndpointConfigurationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asec.ref.Append("arn"))
}

// Id returns a reference to field id of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asec.ref.Append("id"))
}

// KmsKeyArn returns a reference to field kms_key_arn of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(asec.ref.Append("kms_key_arn"))
}

// Name returns a reference to field name of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asec.ref.Append("name"))
}

// NamePrefix returns a reference to field name_prefix of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(asec.ref.Append("name_prefix"))
}

// Tags returns a reference to field tags of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asec.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_sagemaker_endpoint_configuration.
func (asec awsSagemakerEndpointConfigurationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asec.ref.Append("tags_all"))
}

func (asec awsSagemakerEndpointConfigurationAttributes) AsyncInferenceConfig() terra.ListValue[AsyncInferenceConfigAttributes] {
	return terra.ReferenceAsList[AsyncInferenceConfigAttributes](asec.ref.Append("async_inference_config"))
}

func (asec awsSagemakerEndpointConfigurationAttributes) DataCaptureConfig() terra.ListValue[DataCaptureConfigAttributes] {
	return terra.ReferenceAsList[DataCaptureConfigAttributes](asec.ref.Append("data_capture_config"))
}

func (asec awsSagemakerEndpointConfigurationAttributes) ProductionVariants() terra.ListValue[ProductionVariantsAttributes] {
	return terra.ReferenceAsList[ProductionVariantsAttributes](asec.ref.Append("production_variants"))
}

func (asec awsSagemakerEndpointConfigurationAttributes) ShadowProductionVariants() terra.ListValue[ShadowProductionVariantsAttributes] {
	return terra.ReferenceAsList[ShadowProductionVariantsAttributes](asec.ref.Append("shadow_production_variants"))
}

type awsSagemakerEndpointConfigurationState struct {
	Arn                      string                          `json:"arn"`
	Id                       string                          `json:"id"`
	KmsKeyArn                string                          `json:"kms_key_arn"`
	Name                     string                          `json:"name"`
	NamePrefix               string                          `json:"name_prefix"`
	Tags                     map[string]string               `json:"tags"`
	TagsAll                  map[string]string               `json:"tags_all"`
	AsyncInferenceConfig     []AsyncInferenceConfigState     `json:"async_inference_config"`
	DataCaptureConfig        []DataCaptureConfigState        `json:"data_capture_config"`
	ProductionVariants       []ProductionVariantsState       `json:"production_variants"`
	ShadowProductionVariants []ShadowProductionVariantsState `json:"shadow_production_variants"`
}
