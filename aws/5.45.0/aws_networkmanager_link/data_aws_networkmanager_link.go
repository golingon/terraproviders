// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkmanager_link

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_networkmanager_link.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (anl *DataSource) DataSource() string {
	return "aws_networkmanager_link"
}

// LocalName returns the local name for [DataSource].
func (anl *DataSource) LocalName() string {
	return anl.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (anl *DataSource) Configuration() interface{} {
	return anl.Args
}

// Attributes returns the attributes for [DataSource].
func (anl *DataSource) Attributes() dataAwsNetworkmanagerLinkAttributes {
	return dataAwsNetworkmanagerLinkAttributes{ref: terra.ReferenceDataSource(anl)}
}

// DataArgs contains the configurations for aws_networkmanager_link.
type DataArgs struct {
	// GlobalNetworkId: string, required
	GlobalNetworkId terra.StringValue `hcl:"global_network_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LinkId: string, required
	LinkId terra.StringValue `hcl:"link_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsNetworkmanagerLinkAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("arn"))
}

// Description returns a reference to field description of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("description"))
}

// GlobalNetworkId returns a reference to field global_network_id of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) GlobalNetworkId() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("global_network_id"))
}

// Id returns a reference to field id of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("id"))
}

// LinkId returns a reference to field link_id of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) LinkId() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("link_id"))
}

// ProviderName returns a reference to field provider_name of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("provider_name"))
}

// SiteId returns a reference to field site_id of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) SiteId() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("site_id"))
}

// Tags returns a reference to field tags of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](anl.ref.Append("tags"))
}

// Type returns a reference to field type of aws_networkmanager_link.
func (anl dataAwsNetworkmanagerLinkAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(anl.ref.Append("type"))
}

func (anl dataAwsNetworkmanagerLinkAttributes) Bandwidth() terra.ListValue[DataBandwidthAttributes] {
	return terra.ReferenceAsList[DataBandwidthAttributes](anl.ref.Append("bandwidth"))
}
