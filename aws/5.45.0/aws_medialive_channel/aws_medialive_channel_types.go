// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_medialive_channel

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CdiInputSpecification struct {
	// Resolution: string, required
	Resolution terra.StringValue `hcl:"resolution,attr" validate:"required"`
}

type Destinations struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// DestinationsMediaPackageSettings: min=0
	MediaPackageSettings []DestinationsMediaPackageSettings `hcl:"media_package_settings,block" validate:"min=0"`
	// DestinationsMultiplexSettings: optional
	MultiplexSettings *DestinationsMultiplexSettings `hcl:"multiplex_settings,block"`
	// DestinationsSettings: min=0
	Settings []DestinationsSettings `hcl:"settings,block" validate:"min=0"`
}

type DestinationsMediaPackageSettings struct {
	// ChannelId: string, required
	ChannelId terra.StringValue `hcl:"channel_id,attr" validate:"required"`
}

type DestinationsMultiplexSettings struct {
	// MultiplexId: string, required
	MultiplexId terra.StringValue `hcl:"multiplex_id,attr" validate:"required"`
	// ProgramName: string, required
	ProgramName terra.StringValue `hcl:"program_name,attr" validate:"required"`
}

type DestinationsSettings struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// StreamName: string, optional
	StreamName terra.StringValue `hcl:"stream_name,attr"`
	// Url: string, optional
	Url terra.StringValue `hcl:"url,attr"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettings struct {
	// EncoderSettingsAudioDescriptions: min=0
	AudioDescriptions []EncoderSettingsAudioDescriptions `hcl:"audio_descriptions,block" validate:"min=0"`
	// EncoderSettingsAvailBlanking: optional
	AvailBlanking *EncoderSettingsAvailBlanking `hcl:"avail_blanking,block"`
	// EncoderSettingsCaptionDescriptions: min=0
	CaptionDescriptions []EncoderSettingsCaptionDescriptions `hcl:"caption_descriptions,block" validate:"min=0"`
	// EncoderSettingsGlobalConfiguration: optional
	GlobalConfiguration *EncoderSettingsGlobalConfiguration `hcl:"global_configuration,block"`
	// EncoderSettingsMotionGraphicsConfiguration: optional
	MotionGraphicsConfiguration *EncoderSettingsMotionGraphicsConfiguration `hcl:"motion_graphics_configuration,block"`
	// EncoderSettingsNielsenConfiguration: optional
	NielsenConfiguration *EncoderSettingsNielsenConfiguration `hcl:"nielsen_configuration,block"`
	// EncoderSettingsOutputGroups: min=1
	OutputGroups []EncoderSettingsOutputGroups `hcl:"output_groups,block" validate:"min=1"`
	// EncoderSettingsTimecodeConfig: required
	TimecodeConfig *EncoderSettingsTimecodeConfig `hcl:"timecode_config,block" validate:"required"`
	// EncoderSettingsVideoDescriptions: min=0
	VideoDescriptions []EncoderSettingsVideoDescriptions `hcl:"video_descriptions,block" validate:"min=0"`
}

type EncoderSettingsAudioDescriptions struct {
	// AudioSelectorName: string, required
	AudioSelectorName terra.StringValue `hcl:"audio_selector_name,attr" validate:"required"`
	// AudioType: string, optional
	AudioType terra.StringValue `hcl:"audio_type,attr"`
	// AudioTypeControl: string, optional
	AudioTypeControl terra.StringValue `hcl:"audio_type_control,attr"`
	// LanguageCode: string, optional
	LanguageCode terra.StringValue `hcl:"language_code,attr"`
	// LanguageCodeControl: string, optional
	LanguageCodeControl terra.StringValue `hcl:"language_code_control,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StreamName: string, optional
	StreamName terra.StringValue `hcl:"stream_name,attr"`
	// EncoderSettingsAudioDescriptionsAudioNormalizationSettings: optional
	AudioNormalizationSettings *EncoderSettingsAudioDescriptionsAudioNormalizationSettings `hcl:"audio_normalization_settings,block"`
	// EncoderSettingsAudioDescriptionsAudioWatermarkSettings: optional
	AudioWatermarkSettings *EncoderSettingsAudioDescriptionsAudioWatermarkSettings `hcl:"audio_watermark_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettings: optional
	CodecSettings *EncoderSettingsAudioDescriptionsCodecSettings `hcl:"codec_settings,block"`
	// EncoderSettingsAudioDescriptionsRemixSettings: optional
	RemixSettings *EncoderSettingsAudioDescriptionsRemixSettings `hcl:"remix_settings,block"`
}

type EncoderSettingsAudioDescriptionsAudioNormalizationSettings struct {
	// Algorithm: string, optional
	Algorithm terra.StringValue `hcl:"algorithm,attr"`
	// AlgorithmControl: string, optional
	AlgorithmControl terra.StringValue `hcl:"algorithm_control,attr"`
	// TargetLkfs: number, optional
	TargetLkfs terra.NumberValue `hcl:"target_lkfs,attr"`
}

type EncoderSettingsAudioDescriptionsAudioWatermarkSettings struct {
	// EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettings: optional
	NielsenWatermarksSettings *EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettings `hcl:"nielsen_watermarks_settings,block"`
}

type EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettings struct {
	// NielsenDistributionType: string, optional
	NielsenDistributionType terra.StringValue `hcl:"nielsen_distribution_type,attr"`
	// EncoderSettingsAudioDescriptions6C245389: optional
	NielsenCbetSettings *EncoderSettingsAudioDescriptions6C245389 `hcl:"nielsen_cbet_settings,block"`
	// EncoderSettingsAudioDescriptions30D774C5: min=0
	NielsenNaesIiNwSettings []EncoderSettingsAudioDescriptions30D774C5 `hcl:"nielsen_naes_ii_nw_settings,block" validate:"min=0"`
}

type EncoderSettingsAudioDescriptions6C245389 struct {
	// CbetCheckDigitString: string, required
	CbetCheckDigitString terra.StringValue `hcl:"cbet_check_digit_string,attr" validate:"required"`
	// CbetStepaside: string, required
	CbetStepaside terra.StringValue `hcl:"cbet_stepaside,attr" validate:"required"`
	// Csid: string, required
	Csid terra.StringValue `hcl:"csid,attr" validate:"required"`
}

type EncoderSettingsAudioDescriptions30D774C5 struct {
	// CheckDigitString: string, required
	CheckDigitString terra.StringValue `hcl:"check_digit_string,attr" validate:"required"`
	// Sid: number, required
	Sid terra.NumberValue `hcl:"sid,attr" validate:"required"`
}

type EncoderSettingsAudioDescriptionsCodecSettings struct {
	// EncoderSettingsAudioDescriptionsCodecSettingsAacSettings: optional
	AacSettings *EncoderSettingsAudioDescriptionsCodecSettingsAacSettings `hcl:"aac_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettingsAc3Settings: optional
	Ac3Settings *EncoderSettingsAudioDescriptionsCodecSettingsAc3Settings `hcl:"ac3_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettings: optional
	Eac3AtmosSettings *EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettings `hcl:"eac3_atmos_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettingsEac3Settings: optional
	Eac3Settings *EncoderSettingsAudioDescriptionsCodecSettingsEac3Settings `hcl:"eac3_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettingsMp2Settings: optional
	Mp2Settings *EncoderSettingsAudioDescriptionsCodecSettingsMp2Settings `hcl:"mp2_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettings: optional
	PassThroughSettings *EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettings `hcl:"pass_through_settings,block"`
	// EncoderSettingsAudioDescriptionsCodecSettingsWavSettings: optional
	WavSettings *EncoderSettingsAudioDescriptionsCodecSettingsWavSettings `hcl:"wav_settings,block"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsAacSettings struct {
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// CodingMode: string, optional
	CodingMode terra.StringValue `hcl:"coding_mode,attr"`
	// InputType: string, optional
	InputType terra.StringValue `hcl:"input_type,attr"`
	// Profile: string, optional
	Profile terra.StringValue `hcl:"profile,attr"`
	// RateControlMode: string, optional
	RateControlMode terra.StringValue `hcl:"rate_control_mode,attr"`
	// RawFormat: string, optional
	RawFormat terra.StringValue `hcl:"raw_format,attr"`
	// SampleRate: number, optional
	SampleRate terra.NumberValue `hcl:"sample_rate,attr"`
	// Spec: string, optional
	Spec terra.StringValue `hcl:"spec,attr"`
	// VbrQuality: string, optional
	VbrQuality terra.StringValue `hcl:"vbr_quality,attr"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsAc3Settings struct {
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// BitstreamMode: string, optional
	BitstreamMode terra.StringValue `hcl:"bitstream_mode,attr"`
	// CodingMode: string, optional
	CodingMode terra.StringValue `hcl:"coding_mode,attr"`
	// Dialnorm: number, optional
	Dialnorm terra.NumberValue `hcl:"dialnorm,attr"`
	// DrcProfile: string, optional
	DrcProfile terra.StringValue `hcl:"drc_profile,attr"`
	// LfeFilter: string, optional
	LfeFilter terra.StringValue `hcl:"lfe_filter,attr"`
	// MetadataControl: string, optional
	MetadataControl terra.StringValue `hcl:"metadata_control,attr"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettings struct {
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// CodingMode: string, optional
	CodingMode terra.StringValue `hcl:"coding_mode,attr"`
	// Dialnorm: number, optional
	Dialnorm terra.NumberValue `hcl:"dialnorm,attr"`
	// DrcLine: string, optional
	DrcLine terra.StringValue `hcl:"drc_line,attr"`
	// DrcRf: string, optional
	DrcRf terra.StringValue `hcl:"drc_rf,attr"`
	// HeightTrim: number, optional
	HeightTrim terra.NumberValue `hcl:"height_trim,attr"`
	// SurroundTrim: number, optional
	SurroundTrim terra.NumberValue `hcl:"surround_trim,attr"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsEac3Settings struct {
	// AttenuationControl: string, optional
	AttenuationControl terra.StringValue `hcl:"attenuation_control,attr"`
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// BitstreamMode: string, optional
	BitstreamMode terra.StringValue `hcl:"bitstream_mode,attr"`
	// CodingMode: string, optional
	CodingMode terra.StringValue `hcl:"coding_mode,attr"`
	// DcFilter: string, optional
	DcFilter terra.StringValue `hcl:"dc_filter,attr"`
	// Dialnorm: number, optional
	Dialnorm terra.NumberValue `hcl:"dialnorm,attr"`
	// DrcLine: string, optional
	DrcLine terra.StringValue `hcl:"drc_line,attr"`
	// DrcRf: string, optional
	DrcRf terra.StringValue `hcl:"drc_rf,attr"`
	// LfeControl: string, optional
	LfeControl terra.StringValue `hcl:"lfe_control,attr"`
	// LfeFilter: string, optional
	LfeFilter terra.StringValue `hcl:"lfe_filter,attr"`
	// LoRoCenterMixLevel: number, optional
	LoRoCenterMixLevel terra.NumberValue `hcl:"lo_ro_center_mix_level,attr"`
	// LoRoSurroundMixLevel: number, optional
	LoRoSurroundMixLevel terra.NumberValue `hcl:"lo_ro_surround_mix_level,attr"`
	// LtRtCenterMixLevel: number, optional
	LtRtCenterMixLevel terra.NumberValue `hcl:"lt_rt_center_mix_level,attr"`
	// LtRtSurroundMixLevel: number, optional
	LtRtSurroundMixLevel terra.NumberValue `hcl:"lt_rt_surround_mix_level,attr"`
	// MetadataControl: string, optional
	MetadataControl terra.StringValue `hcl:"metadata_control,attr"`
	// PassthroughControl: string, optional
	PassthroughControl terra.StringValue `hcl:"passthrough_control,attr"`
	// PhaseControl: string, optional
	PhaseControl terra.StringValue `hcl:"phase_control,attr"`
	// StereoDownmix: string, optional
	StereoDownmix terra.StringValue `hcl:"stereo_downmix,attr"`
	// SurroundExMode: string, optional
	SurroundExMode terra.StringValue `hcl:"surround_ex_mode,attr"`
	// SurroundMode: string, optional
	SurroundMode terra.StringValue `hcl:"surround_mode,attr"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsMp2Settings struct {
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// CodingMode: string, optional
	CodingMode terra.StringValue `hcl:"coding_mode,attr"`
	// SampleRate: number, optional
	SampleRate terra.NumberValue `hcl:"sample_rate,attr"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettings struct{}

type EncoderSettingsAudioDescriptionsCodecSettingsWavSettings struct {
	// BitDepth: number, optional
	BitDepth terra.NumberValue `hcl:"bit_depth,attr"`
	// CodingMode: string, optional
	CodingMode terra.StringValue `hcl:"coding_mode,attr"`
	// SampleRate: number, optional
	SampleRate terra.NumberValue `hcl:"sample_rate,attr"`
}

type EncoderSettingsAudioDescriptionsRemixSettings struct {
	// ChannelsIn: number, optional
	ChannelsIn terra.NumberValue `hcl:"channels_in,attr"`
	// ChannelsOut: number, optional
	ChannelsOut terra.NumberValue `hcl:"channels_out,attr"`
	// EncoderSettingsAudioDescriptionsRemixSettingsChannelMappings: min=1
	ChannelMappings []EncoderSettingsAudioDescriptionsRemixSettingsChannelMappings `hcl:"channel_mappings,block" validate:"min=1"`
}

type EncoderSettingsAudioDescriptionsRemixSettingsChannelMappings struct {
	// OutputChannel: number, required
	OutputChannel terra.NumberValue `hcl:"output_channel,attr" validate:"required"`
	// EncoderSettingsAudioDescriptionsA72D0F60: min=1
	InputChannelLevels []EncoderSettingsAudioDescriptionsA72D0F60 `hcl:"input_channel_levels,block" validate:"min=1"`
}

type EncoderSettingsAudioDescriptionsA72D0F60 struct {
	// Gain: number, required
	Gain terra.NumberValue `hcl:"gain,attr" validate:"required"`
	// InputChannel: number, required
	InputChannel terra.NumberValue `hcl:"input_channel,attr" validate:"required"`
}

type EncoderSettingsAvailBlanking struct {
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// EncoderSettingsAvailBlankingAvailBlankingImage: optional
	AvailBlankingImage *EncoderSettingsAvailBlankingAvailBlankingImage `hcl:"avail_blanking_image,block"`
}

type EncoderSettingsAvailBlankingAvailBlankingImage struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettingsCaptionDescriptions struct {
	// Accessibility: string, optional
	Accessibility terra.StringValue `hcl:"accessibility,attr"`
	// CaptionSelectorName: string, required
	CaptionSelectorName terra.StringValue `hcl:"caption_selector_name,attr" validate:"required"`
	// LanguageCode: string, optional
	LanguageCode terra.StringValue `hcl:"language_code,attr"`
	// LanguageDescription: string, optional
	LanguageDescription terra.StringValue `hcl:"language_description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// EncoderSettingsCaptionDescriptionsDestinationSettings: optional
	DestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettings `hcl:"destination_settings,block"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettings struct {
	// EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettings: optional
	AribDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettings `hcl:"arib_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettings: optional
	BurnInDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettings `hcl:"burn_in_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettings: optional
	DvbSubDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettings `hcl:"dvb_sub_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettings: optional
	EbuTtDDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettings `hcl:"ebu_tt_d_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettings: optional
	EmbeddedDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettings `hcl:"embedded_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettings: optional
	EmbeddedPlusScte20DestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettings `hcl:"embedded_plus_scte20_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettings: optional
	RtmpCaptionInfoDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettings `hcl:"rtmp_caption_info_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettings: optional
	Scte20PlusEmbeddedDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettings `hcl:"scte20_plus_embedded_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettings: optional
	Scte27DestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettings `hcl:"scte27_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettings: optional
	SmpteTtDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettings `hcl:"smpte_tt_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettings: optional
	TeletextDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettings `hcl:"teletext_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettings: optional
	TtmlDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettings `hcl:"ttml_destination_settings,block"`
	// EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettings: optional
	WebvttDestinationSettings *EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettings `hcl:"webvtt_destination_settings,block"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettings struct {
	// Alignment: string, optional
	Alignment terra.StringValue `hcl:"alignment,attr"`
	// BackgroundColor: string, optional
	BackgroundColor terra.StringValue `hcl:"background_color,attr"`
	// BackgroundOpacity: number, optional
	BackgroundOpacity terra.NumberValue `hcl:"background_opacity,attr"`
	// FontColor: string, optional
	FontColor terra.StringValue `hcl:"font_color,attr"`
	// FontOpacity: number, optional
	FontOpacity terra.NumberValue `hcl:"font_opacity,attr"`
	// FontResolution: number, optional
	FontResolution terra.NumberValue `hcl:"font_resolution,attr"`
	// FontSize: string, optional
	FontSize terra.StringValue `hcl:"font_size,attr"`
	// OutlineColor: string, required
	OutlineColor terra.StringValue `hcl:"outline_color,attr" validate:"required"`
	// OutlineSize: number, optional
	OutlineSize terra.NumberValue `hcl:"outline_size,attr"`
	// ShadowColor: string, optional
	ShadowColor terra.StringValue `hcl:"shadow_color,attr"`
	// ShadowOpacity: number, optional
	ShadowOpacity terra.NumberValue `hcl:"shadow_opacity,attr"`
	// ShadowXOffset: number, optional
	ShadowXOffset terra.NumberValue `hcl:"shadow_x_offset,attr"`
	// ShadowYOffset: number, optional
	ShadowYOffset terra.NumberValue `hcl:"shadow_y_offset,attr"`
	// TeletextGridControl: string, required
	TeletextGridControl terra.StringValue `hcl:"teletext_grid_control,attr" validate:"required"`
	// XPosition: number, optional
	XPosition terra.NumberValue `hcl:"x_position,attr"`
	// YPosition: number, optional
	YPosition terra.NumberValue `hcl:"y_position,attr"`
	// EncoderSettingsCaptionDescriptionsA154227A: optional
	Font *EncoderSettingsCaptionDescriptionsA154227A `hcl:"font,block"`
}

type EncoderSettingsCaptionDescriptionsA154227A struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettings struct {
	// Alignment: string, optional
	Alignment terra.StringValue `hcl:"alignment,attr"`
	// BackgroundColor: string, optional
	BackgroundColor terra.StringValue `hcl:"background_color,attr"`
	// BackgroundOpacity: number, optional
	BackgroundOpacity terra.NumberValue `hcl:"background_opacity,attr"`
	// FontColor: string, optional
	FontColor terra.StringValue `hcl:"font_color,attr"`
	// FontOpacity: number, optional
	FontOpacity terra.NumberValue `hcl:"font_opacity,attr"`
	// FontResolution: number, optional
	FontResolution terra.NumberValue `hcl:"font_resolution,attr"`
	// FontSize: string, optional
	FontSize terra.StringValue `hcl:"font_size,attr"`
	// OutlineColor: string, optional
	OutlineColor terra.StringValue `hcl:"outline_color,attr"`
	// OutlineSize: number, optional
	OutlineSize terra.NumberValue `hcl:"outline_size,attr"`
	// ShadowColor: string, optional
	ShadowColor terra.StringValue `hcl:"shadow_color,attr"`
	// ShadowOpacity: number, optional
	ShadowOpacity terra.NumberValue `hcl:"shadow_opacity,attr"`
	// ShadowXOffset: number, optional
	ShadowXOffset terra.NumberValue `hcl:"shadow_x_offset,attr"`
	// ShadowYOffset: number, optional
	ShadowYOffset terra.NumberValue `hcl:"shadow_y_offset,attr"`
	// TeletextGridControl: string, optional
	TeletextGridControl terra.StringValue `hcl:"teletext_grid_control,attr"`
	// XPosition: number, optional
	XPosition terra.NumberValue `hcl:"x_position,attr"`
	// YPosition: number, optional
	YPosition terra.NumberValue `hcl:"y_position,attr"`
	// EncoderSettingsCaptionDescriptions37F9F137: optional
	Font *EncoderSettingsCaptionDescriptions37F9F137 `hcl:"font,block"`
}

type EncoderSettingsCaptionDescriptions37F9F137 struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettings struct {
	// CopyrightHolder: string, optional
	CopyrightHolder terra.StringValue `hcl:"copyright_holder,attr"`
	// FillLineGap: string, optional
	FillLineGap terra.StringValue `hcl:"fill_line_gap,attr"`
	// FontFamily: string, optional
	FontFamily terra.StringValue `hcl:"font_family,attr"`
	// StyleControl: string, optional
	StyleControl terra.StringValue `hcl:"style_control,attr"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettings struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettings struct {
	// StyleControl: string, required
	StyleControl terra.StringValue `hcl:"style_control,attr" validate:"required"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettings struct {
	// StyleControl: string, required
	StyleControl terra.StringValue `hcl:"style_control,attr" validate:"required"`
}

type EncoderSettingsGlobalConfiguration struct {
	// InitialAudioGain: number, optional
	InitialAudioGain terra.NumberValue `hcl:"initial_audio_gain,attr"`
	// InputEndAction: string, optional
	InputEndAction terra.StringValue `hcl:"input_end_action,attr"`
	// OutputLockingMode: string, optional
	OutputLockingMode terra.StringValue `hcl:"output_locking_mode,attr"`
	// OutputTimingSource: string, optional
	OutputTimingSource terra.StringValue `hcl:"output_timing_source,attr"`
	// SupportLowFramerateInputs: string, optional
	SupportLowFramerateInputs terra.StringValue `hcl:"support_low_framerate_inputs,attr"`
	// EncoderSettingsGlobalConfigurationInputLossBehavior: optional
	InputLossBehavior *EncoderSettingsGlobalConfigurationInputLossBehavior `hcl:"input_loss_behavior,block"`
}

type EncoderSettingsGlobalConfigurationInputLossBehavior struct {
	// BlackFrameMsec: number, optional
	BlackFrameMsec terra.NumberValue `hcl:"black_frame_msec,attr"`
	// InputLossImageColor: string, optional
	InputLossImageColor terra.StringValue `hcl:"input_loss_image_color,attr"`
	// InputLossImageType: string, optional
	InputLossImageType terra.StringValue `hcl:"input_loss_image_type,attr"`
	// RepeatFrameMsec: number, optional
	RepeatFrameMsec terra.NumberValue `hcl:"repeat_frame_msec,attr"`
	// EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlate: optional
	InputLossImageSlate *EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlate `hcl:"input_loss_image_slate,block"`
}

type EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlate struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettingsMotionGraphicsConfiguration struct {
	// MotionGraphicsInsertion: string, optional
	MotionGraphicsInsertion terra.StringValue `hcl:"motion_graphics_insertion,attr"`
	// EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettings: required
	MotionGraphicsSettings *EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettings `hcl:"motion_graphics_settings,block" validate:"required"`
}

type EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettings struct {
	// EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettings: optional
	HtmlMotionGraphicsSettings *EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettings `hcl:"html_motion_graphics_settings,block"`
}

type EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettings struct{}

type EncoderSettingsNielsenConfiguration struct {
	// DistributorId: string, optional
	DistributorId terra.StringValue `hcl:"distributor_id,attr"`
	// NielsenPcmToId3Tagging: string, optional
	NielsenPcmToId3Tagging terra.StringValue `hcl:"nielsen_pcm_to_id3_tagging,attr"`
}

type EncoderSettingsOutputGroups struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// EncoderSettingsOutputGroupsOutputGroupSettings: required
	OutputGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettings `hcl:"output_group_settings,block" validate:"required"`
	// EncoderSettingsOutputGroupsOutputs: min=1
	Outputs []EncoderSettingsOutputGroupsOutputs `hcl:"outputs,block" validate:"min=1"`
}

type EncoderSettingsOutputGroupsOutputGroupSettings struct {
	// EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettings: min=0
	ArchiveGroupSettings []EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettings `hcl:"archive_group_settings,block" validate:"min=0"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettings: optional
	FrameCaptureGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettings `hcl:"frame_capture_group_settings,block"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettings: optional
	HlsGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettings `hcl:"hls_group_settings,block"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettings: optional
	MediaPackageGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettings `hcl:"media_package_group_settings,block"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettings: optional
	MsSmoothGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettings `hcl:"ms_smooth_group_settings,block"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettings: optional
	MultiplexGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettings `hcl:"multiplex_group_settings,block"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettings: optional
	RtmpGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettings `hcl:"rtmp_group_settings,block"`
	// EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettings: optional
	UdpGroupSettings *EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettings `hcl:"udp_group_settings,block"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettings struct {
	// RolloverInterval: number, optional
	RolloverInterval terra.NumberValue `hcl:"rollover_interval,attr"`
	// EncoderSettingsOutputGroups6Ca5830E: optional
	ArchiveCdnSettings *EncoderSettingsOutputGroups6Ca5830E `hcl:"archive_cdn_settings,block"`
	// EncoderSettingsOutputGroups946A5B94: required
	Destination *EncoderSettingsOutputGroups946A5B94 `hcl:"destination,block" validate:"required"`
}

type EncoderSettingsOutputGroups6Ca5830E struct {
	// EncoderSettingsOutputGroups8B1E8283: optional
	ArchiveS3Settings *EncoderSettingsOutputGroups8B1E8283 `hcl:"archive_s3_settings,block"`
}

type EncoderSettingsOutputGroups8B1E8283 struct {
	// CannedAcl: string, optional
	CannedAcl terra.StringValue `hcl:"canned_acl,attr"`
}

type EncoderSettingsOutputGroups946A5B94 struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettings struct {
	// EncoderSettingsOutputGroups0873Af26: required
	Destination *EncoderSettingsOutputGroups0873Af26 `hcl:"destination,block" validate:"required"`
	// EncoderSettingsOutputGroupsBecbf118: optional
	FrameCaptureCdnSettings *EncoderSettingsOutputGroupsBecbf118 `hcl:"frame_capture_cdn_settings,block"`
}

type EncoderSettingsOutputGroups0873Af26 struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsBecbf118 struct {
	// EncoderSettingsOutputGroups73Eaea20: optional
	FrameCaptureS3Settings *EncoderSettingsOutputGroups73Eaea20 `hcl:"frame_capture_s3_settings,block"`
}

type EncoderSettingsOutputGroups73Eaea20 struct {
	// CannedAcl: string, optional
	CannedAcl terra.StringValue `hcl:"canned_acl,attr"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettings struct {
	// AdMarkers: list of string, optional
	AdMarkers terra.ListValue[terra.StringValue] `hcl:"ad_markers,attr"`
	// BaseUrlContent: string, optional
	BaseUrlContent terra.StringValue `hcl:"base_url_content,attr"`
	// BaseUrlContent1: string, optional
	BaseUrlContent1 terra.StringValue `hcl:"base_url_content1,attr"`
	// BaseUrlManifest: string, optional
	BaseUrlManifest terra.StringValue `hcl:"base_url_manifest,attr"`
	// BaseUrlManifest1: string, optional
	BaseUrlManifest1 terra.StringValue `hcl:"base_url_manifest1,attr"`
	// CaptionLanguageSetting: string, optional
	CaptionLanguageSetting terra.StringValue `hcl:"caption_language_setting,attr"`
	// ClientCache: string, optional
	ClientCache terra.StringValue `hcl:"client_cache,attr"`
	// CodecSpecification: string, optional
	CodecSpecification terra.StringValue `hcl:"codec_specification,attr"`
	// ConstantIv: string, optional
	ConstantIv terra.StringValue `hcl:"constant_iv,attr"`
	// DirectoryStructure: string, optional
	DirectoryStructure terra.StringValue `hcl:"directory_structure,attr"`
	// DiscontinuityTags: string, optional
	DiscontinuityTags terra.StringValue `hcl:"discontinuity_tags,attr"`
	// EncryptionType: string, optional
	EncryptionType terra.StringValue `hcl:"encryption_type,attr"`
	// HlsId3SegmentTagging: string, optional
	HlsId3SegmentTagging terra.StringValue `hcl:"hls_id3_segment_tagging,attr"`
	// IframeOnlyPlaylists: string, optional
	IframeOnlyPlaylists terra.StringValue `hcl:"iframe_only_playlists,attr"`
	// IncompleteSegmentBehavior: string, optional
	IncompleteSegmentBehavior terra.StringValue `hcl:"incomplete_segment_behavior,attr"`
	// IndexNSegments: number, optional
	IndexNSegments terra.NumberValue `hcl:"index_n_segments,attr"`
	// InputLossAction: string, optional
	InputLossAction terra.StringValue `hcl:"input_loss_action,attr"`
	// IvInManifest: string, optional
	IvInManifest terra.StringValue `hcl:"iv_in_manifest,attr"`
	// IvSource: string, optional
	IvSource terra.StringValue `hcl:"iv_source,attr"`
	// KeepSegments: number, optional
	KeepSegments terra.NumberValue `hcl:"keep_segments,attr"`
	// KeyFormat: string, optional
	KeyFormat terra.StringValue `hcl:"key_format,attr"`
	// KeyFormatVersions: string, optional
	KeyFormatVersions terra.StringValue `hcl:"key_format_versions,attr"`
	// ManifestCompression: string, optional
	ManifestCompression terra.StringValue `hcl:"manifest_compression,attr"`
	// ManifestDurationFormat: string, optional
	ManifestDurationFormat terra.StringValue `hcl:"manifest_duration_format,attr"`
	// MinSegmentLength: number, optional
	MinSegmentLength terra.NumberValue `hcl:"min_segment_length,attr"`
	// Mode: string, optional
	Mode terra.StringValue `hcl:"mode,attr"`
	// OutputSelection: string, optional
	OutputSelection terra.StringValue `hcl:"output_selection,attr"`
	// ProgramDateTime: string, optional
	ProgramDateTime terra.StringValue `hcl:"program_date_time,attr"`
	// ProgramDateTimeClock: string, optional
	ProgramDateTimeClock terra.StringValue `hcl:"program_date_time_clock,attr"`
	// ProgramDateTimePeriod: number, optional
	ProgramDateTimePeriod terra.NumberValue `hcl:"program_date_time_period,attr"`
	// RedundantManifest: string, optional
	RedundantManifest terra.StringValue `hcl:"redundant_manifest,attr"`
	// SegmentLength: number, optional
	SegmentLength terra.NumberValue `hcl:"segment_length,attr"`
	// SegmentsPerSubdirectory: number, optional
	SegmentsPerSubdirectory terra.NumberValue `hcl:"segments_per_subdirectory,attr"`
	// StreamInfResolution: string, optional
	StreamInfResolution terra.StringValue `hcl:"stream_inf_resolution,attr"`
	// TimedMetadataId3Frame: string, optional
	TimedMetadataId3Frame terra.StringValue `hcl:"timed_metadata_id3_frame,attr"`
	// TimedMetadataId3Period: number, optional
	TimedMetadataId3Period terra.NumberValue `hcl:"timed_metadata_id3_period,attr"`
	// TimestampDeltaMilliseconds: number, optional
	TimestampDeltaMilliseconds terra.NumberValue `hcl:"timestamp_delta_milliseconds,attr"`
	// TsFileMode: string, optional
	TsFileMode terra.StringValue `hcl:"ts_file_mode,attr"`
	// EncoderSettingsOutputGroups56B1D910: min=0,max=4
	CaptionLanguageMappings []EncoderSettingsOutputGroups56B1D910 `hcl:"caption_language_mappings,block" validate:"min=0,max=4"`
	// EncoderSettingsOutputGroups51D9552A: required
	Destination *EncoderSettingsOutputGroups51D9552A `hcl:"destination,block" validate:"required"`
	// EncoderSettingsOutputGroupsDbdb908C: min=0
	HlsCdnSettings []EncoderSettingsOutputGroupsDbdb908C `hcl:"hls_cdn_settings,block" validate:"min=0"`
	// EncoderSettingsOutputGroups4A4032A1: optional
	KeyProviderSettings *EncoderSettingsOutputGroups4A4032A1 `hcl:"key_provider_settings,block"`
}

type EncoderSettingsOutputGroups56B1D910 struct {
	// CaptionChannel: number, required
	CaptionChannel terra.NumberValue `hcl:"caption_channel,attr" validate:"required"`
	// LanguageCode: string, required
	LanguageCode terra.StringValue `hcl:"language_code,attr" validate:"required"`
	// LanguageDescription: string, required
	LanguageDescription terra.StringValue `hcl:"language_description,attr" validate:"required"`
}

type EncoderSettingsOutputGroups51D9552A struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsDbdb908C struct {
	// EncoderSettingsOutputGroups366D79D0: optional
	HlsAkamaiSettings *EncoderSettingsOutputGroups366D79D0 `hcl:"hls_akamai_settings,block"`
	// EncoderSettingsOutputGroupsAfea95D2: optional
	HlsBasicPutSettings *EncoderSettingsOutputGroupsAfea95D2 `hcl:"hls_basic_put_settings,block"`
	// EncoderSettingsOutputGroups91A77976: optional
	HlsMediaStoreSettings *EncoderSettingsOutputGroups91A77976 `hcl:"hls_media_store_settings,block"`
	// EncoderSettingsOutputGroups72Ef1Fd3: optional
	HlsS3Settings *EncoderSettingsOutputGroups72Ef1Fd3 `hcl:"hls_s3_settings,block"`
	// EncoderSettingsOutputGroups6F55Eba5: optional
	HlsWebdavSettings *EncoderSettingsOutputGroups6F55Eba5 `hcl:"hls_webdav_settings,block"`
}

type EncoderSettingsOutputGroups366D79D0 struct {
	// ConnectionRetryInterval: number, optional
	ConnectionRetryInterval terra.NumberValue `hcl:"connection_retry_interval,attr"`
	// FilecacheDuration: number, optional
	FilecacheDuration terra.NumberValue `hcl:"filecache_duration,attr"`
	// HttpTransferMode: string, optional
	HttpTransferMode terra.StringValue `hcl:"http_transfer_mode,attr"`
	// NumRetries: number, optional
	NumRetries terra.NumberValue `hcl:"num_retries,attr"`
	// RestartDelay: number, optional
	RestartDelay terra.NumberValue `hcl:"restart_delay,attr"`
	// Salt: string, optional
	Salt terra.StringValue `hcl:"salt,attr"`
	// Token: string, optional
	Token terra.StringValue `hcl:"token,attr"`
}

type EncoderSettingsOutputGroupsAfea95D2 struct {
	// ConnectionRetryInterval: number, optional
	ConnectionRetryInterval terra.NumberValue `hcl:"connection_retry_interval,attr"`
	// FilecacheDuration: number, optional
	FilecacheDuration terra.NumberValue `hcl:"filecache_duration,attr"`
	// NumRetries: number, optional
	NumRetries terra.NumberValue `hcl:"num_retries,attr"`
	// RestartDelay: number, optional
	RestartDelay terra.NumberValue `hcl:"restart_delay,attr"`
}

type EncoderSettingsOutputGroups91A77976 struct {
	// ConnectionRetryInterval: number, optional
	ConnectionRetryInterval terra.NumberValue `hcl:"connection_retry_interval,attr"`
	// FilecacheDuration: number, optional
	FilecacheDuration terra.NumberValue `hcl:"filecache_duration,attr"`
	// MediaStoreStorageClass: string, optional
	MediaStoreStorageClass terra.StringValue `hcl:"media_store_storage_class,attr"`
	// NumRetries: number, optional
	NumRetries terra.NumberValue `hcl:"num_retries,attr"`
	// RestartDelay: number, optional
	RestartDelay terra.NumberValue `hcl:"restart_delay,attr"`
}

type EncoderSettingsOutputGroups72Ef1Fd3 struct {
	// CannedAcl: string, optional
	CannedAcl terra.StringValue `hcl:"canned_acl,attr"`
}

type EncoderSettingsOutputGroups6F55Eba5 struct {
	// ConnectionRetryInterval: number, optional
	ConnectionRetryInterval terra.NumberValue `hcl:"connection_retry_interval,attr"`
	// FilecacheDuration: number, optional
	FilecacheDuration terra.NumberValue `hcl:"filecache_duration,attr"`
	// HttpTransferMode: string, optional
	HttpTransferMode terra.StringValue `hcl:"http_transfer_mode,attr"`
	// NumRetries: number, optional
	NumRetries terra.NumberValue `hcl:"num_retries,attr"`
	// RestartDelay: number, optional
	RestartDelay terra.NumberValue `hcl:"restart_delay,attr"`
}

type EncoderSettingsOutputGroups4A4032A1 struct {
	// EncoderSettingsOutputGroupsEc1E7B06: min=0
	StaticKeySettings []EncoderSettingsOutputGroupsEc1E7B06 `hcl:"static_key_settings,block" validate:"min=0"`
}

type EncoderSettingsOutputGroupsEc1E7B06 struct {
	// StaticKeyValue: string, required
	StaticKeyValue terra.StringValue `hcl:"static_key_value,attr" validate:"required"`
	// EncoderSettingsOutputGroups9Fd5Ebb9: optional
	KeyProviderServer *EncoderSettingsOutputGroups9Fd5Ebb9 `hcl:"key_provider_server,block"`
}

type EncoderSettingsOutputGroups9Fd5Ebb9 struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettings struct {
	// EncoderSettingsOutputGroups99Abffdd: required
	Destination *EncoderSettingsOutputGroups99Abffdd `hcl:"destination,block" validate:"required"`
}

type EncoderSettingsOutputGroups99Abffdd struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettings struct {
	// AcquisitionPointId: string, optional
	AcquisitionPointId terra.StringValue `hcl:"acquisition_point_id,attr"`
	// AudioOnlyTimecodeControl: string, optional
	AudioOnlyTimecodeControl terra.StringValue `hcl:"audio_only_timecode_control,attr"`
	// CertificateMode: string, optional
	CertificateMode terra.StringValue `hcl:"certificate_mode,attr"`
	// ConnectionRetryInterval: number, optional
	ConnectionRetryInterval terra.NumberValue `hcl:"connection_retry_interval,attr"`
	// EventId: string, optional
	EventId terra.StringValue `hcl:"event_id,attr"`
	// EventIdMode: string, optional
	EventIdMode terra.StringValue `hcl:"event_id_mode,attr"`
	// EventStopBehavior: string, optional
	EventStopBehavior terra.StringValue `hcl:"event_stop_behavior,attr"`
	// FilecacheDuration: number, optional
	FilecacheDuration terra.NumberValue `hcl:"filecache_duration,attr"`
	// FragmentLength: number, optional
	FragmentLength terra.NumberValue `hcl:"fragment_length,attr"`
	// InputLossAction: string, optional
	InputLossAction terra.StringValue `hcl:"input_loss_action,attr"`
	// NumRetries: number, optional
	NumRetries terra.NumberValue `hcl:"num_retries,attr"`
	// RestartDelay: number, optional
	RestartDelay terra.NumberValue `hcl:"restart_delay,attr"`
	// SegmentationMode: string, optional
	SegmentationMode terra.StringValue `hcl:"segmentation_mode,attr"`
	// SendDelayMs: number, optional
	SendDelayMs terra.NumberValue `hcl:"send_delay_ms,attr"`
	// SparseTrackType: string, optional
	SparseTrackType terra.StringValue `hcl:"sparse_track_type,attr"`
	// StreamManifestBehavior: string, optional
	StreamManifestBehavior terra.StringValue `hcl:"stream_manifest_behavior,attr"`
	// TimestampOffset: string, optional
	TimestampOffset terra.StringValue `hcl:"timestamp_offset,attr"`
	// TimestampOffsetMode: string, optional
	TimestampOffsetMode terra.StringValue `hcl:"timestamp_offset_mode,attr"`
	// EncoderSettingsOutputGroupsE1E290Aa: required
	Destination *EncoderSettingsOutputGroupsE1E290Aa `hcl:"destination,block" validate:"required"`
}

type EncoderSettingsOutputGroupsE1E290Aa struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettings struct{}

type EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettings struct {
	// AdMarkers: list of string, optional
	AdMarkers terra.ListValue[terra.StringValue] `hcl:"ad_markers,attr"`
	// AuthenticationScheme: string, optional
	AuthenticationScheme terra.StringValue `hcl:"authentication_scheme,attr"`
	// CacheFullBehavior: string, optional
	CacheFullBehavior terra.StringValue `hcl:"cache_full_behavior,attr"`
	// CacheLength: number, optional
	CacheLength terra.NumberValue `hcl:"cache_length,attr"`
	// CaptionData: string, optional
	CaptionData terra.StringValue `hcl:"caption_data,attr"`
	// InputLossAction: string, optional
	InputLossAction terra.StringValue `hcl:"input_loss_action,attr"`
	// RestartDelay: number, optional
	RestartDelay terra.NumberValue `hcl:"restart_delay,attr"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettings struct {
	// InputLossAction: string, optional
	InputLossAction terra.StringValue `hcl:"input_loss_action,attr"`
	// TimedMetadataId3Frame: string, optional
	TimedMetadataId3Frame terra.StringValue `hcl:"timed_metadata_id3_frame,attr"`
	// TimedMetadataId3Period: number, optional
	TimedMetadataId3Period terra.NumberValue `hcl:"timed_metadata_id3_period,attr"`
}

type EncoderSettingsOutputGroupsOutputs struct {
	// AudioDescriptionNames: set of string, optional
	AudioDescriptionNames terra.SetValue[terra.StringValue] `hcl:"audio_description_names,attr"`
	// CaptionDescriptionNames: set of string, optional
	CaptionDescriptionNames terra.SetValue[terra.StringValue] `hcl:"caption_description_names,attr"`
	// OutputName: string, optional
	OutputName terra.StringValue `hcl:"output_name,attr"`
	// VideoDescriptionName: string, optional
	VideoDescriptionName terra.StringValue `hcl:"video_description_name,attr"`
	// EncoderSettingsOutputGroupsOutputsOutputSettings: required
	OutputSettings *EncoderSettingsOutputGroupsOutputsOutputSettings `hcl:"output_settings,block" validate:"required"`
}

type EncoderSettingsOutputGroupsOutputsOutputSettings struct {
	// EncoderSettingsOutputGroupsE85958Cd: optional
	ArchiveOutputSettings *EncoderSettingsOutputGroupsE85958Cd `hcl:"archive_output_settings,block"`
	// EncoderSettingsOutputGroups7E0D03D3: optional
	FrameCaptureOutputSettings *EncoderSettingsOutputGroups7E0D03D3 `hcl:"frame_capture_output_settings,block"`
	// EncoderSettingsOutputGroups2466Efb3: optional
	HlsOutputSettings *EncoderSettingsOutputGroups2466Efb3 `hcl:"hls_output_settings,block"`
	// EncoderSettingsOutputGroups8Fba9De4: optional
	MediaPackageOutputSettings *EncoderSettingsOutputGroups8Fba9De4 `hcl:"media_package_output_settings,block"`
	// EncoderSettingsOutputGroups2Ac24Ce4: optional
	MsSmoothOutputSettings *EncoderSettingsOutputGroups2Ac24Ce4 `hcl:"ms_smooth_output_settings,block"`
	// EncoderSettingsOutputGroups19A359Da: optional
	MultiplexOutputSettings *EncoderSettingsOutputGroups19A359Da `hcl:"multiplex_output_settings,block"`
	// EncoderSettingsOutputGroups87D0Bb71: optional
	RtmpOutputSettings *EncoderSettingsOutputGroups87D0Bb71 `hcl:"rtmp_output_settings,block"`
	// EncoderSettingsOutputGroupsE9Fe7E35: optional
	UdpOutputSettings *EncoderSettingsOutputGroupsE9Fe7E35 `hcl:"udp_output_settings,block"`
}

type EncoderSettingsOutputGroupsE85958Cd struct {
	// Extension: string, optional
	Extension terra.StringValue `hcl:"extension,attr"`
	// NameModifier: string, optional
	NameModifier terra.StringValue `hcl:"name_modifier,attr"`
	// EncoderSettingsOutputGroupsC361Ad84: optional
	ContainerSettings *EncoderSettingsOutputGroupsC361Ad84 `hcl:"container_settings,block"`
}

type EncoderSettingsOutputGroupsC361Ad84 struct {
	// EncoderSettingsOutputGroups682F5037: optional
	M2TsSettings *EncoderSettingsOutputGroups682F5037 `hcl:"m2ts_settings,block"`
	// EncoderSettingsOutputGroups6C7251C5: optional
	RawSettings *EncoderSettingsOutputGroups6C7251C5 `hcl:"raw_settings,block"`
}

type EncoderSettingsOutputGroups682F5037 struct {
	// AbsentInputAudioBehavior: string, optional
	AbsentInputAudioBehavior terra.StringValue `hcl:"absent_input_audio_behavior,attr"`
	// Arib: string, optional
	Arib terra.StringValue `hcl:"arib,attr"`
	// AribCaptionsPid: string, optional
	AribCaptionsPid terra.StringValue `hcl:"arib_captions_pid,attr"`
	// AribCaptionsPidControl: string, optional
	AribCaptionsPidControl terra.StringValue `hcl:"arib_captions_pid_control,attr"`
	// AudioBufferModel: string, optional
	AudioBufferModel terra.StringValue `hcl:"audio_buffer_model,attr"`
	// AudioFramesPerPes: number, optional
	AudioFramesPerPes terra.NumberValue `hcl:"audio_frames_per_pes,attr"`
	// AudioPids: string, optional
	AudioPids terra.StringValue `hcl:"audio_pids,attr"`
	// AudioStreamType: string, optional
	AudioStreamType terra.StringValue `hcl:"audio_stream_type,attr"`
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// BufferModel: string, optional
	BufferModel terra.StringValue `hcl:"buffer_model,attr"`
	// CcDescriptor: string, optional
	CcDescriptor terra.StringValue `hcl:"cc_descriptor,attr"`
	// DvbSubPids: string, optional
	DvbSubPids terra.StringValue `hcl:"dvb_sub_pids,attr"`
	// DvbTeletextPid: string, optional
	DvbTeletextPid terra.StringValue `hcl:"dvb_teletext_pid,attr"`
	// Ebif: string, optional
	Ebif terra.StringValue `hcl:"ebif,attr"`
	// EbpAudioInterval: string, optional
	EbpAudioInterval terra.StringValue `hcl:"ebp_audio_interval,attr"`
	// EbpLookaheadMs: number, optional
	EbpLookaheadMs terra.NumberValue `hcl:"ebp_lookahead_ms,attr"`
	// EbpPlacement: string, optional
	EbpPlacement terra.StringValue `hcl:"ebp_placement,attr"`
	// EcmPid: string, optional
	EcmPid terra.StringValue `hcl:"ecm_pid,attr"`
	// EsRateInPes: string, optional
	EsRateInPes terra.StringValue `hcl:"es_rate_in_pes,attr"`
	// EtvPlatformPid: string, optional
	EtvPlatformPid terra.StringValue `hcl:"etv_platform_pid,attr"`
	// EtvSignalPid: string, optional
	EtvSignalPid terra.StringValue `hcl:"etv_signal_pid,attr"`
	// FragmentTime: number, optional
	FragmentTime terra.NumberValue `hcl:"fragment_time,attr"`
	// Klv: string, optional
	Klv terra.StringValue `hcl:"klv,attr"`
	// KlvDataPids: string, optional
	KlvDataPids terra.StringValue `hcl:"klv_data_pids,attr"`
	// NielsenId3Behavior: string, optional
	NielsenId3Behavior terra.StringValue `hcl:"nielsen_id3_behavior,attr"`
	// NullPacketBitrate: number, optional
	NullPacketBitrate terra.NumberValue `hcl:"null_packet_bitrate,attr"`
	// PatInterval: number, optional
	PatInterval terra.NumberValue `hcl:"pat_interval,attr"`
	// PcrControl: string, optional
	PcrControl terra.StringValue `hcl:"pcr_control,attr"`
	// PcrPeriod: number, optional
	PcrPeriod terra.NumberValue `hcl:"pcr_period,attr"`
	// PcrPid: string, optional
	PcrPid terra.StringValue `hcl:"pcr_pid,attr"`
	// PmtInterval: number, optional
	PmtInterval terra.NumberValue `hcl:"pmt_interval,attr"`
	// PmtPid: string, optional
	PmtPid terra.StringValue `hcl:"pmt_pid,attr"`
	// ProgramNum: number, optional
	ProgramNum terra.NumberValue `hcl:"program_num,attr"`
	// RateMode: string, optional
	RateMode terra.StringValue `hcl:"rate_mode,attr"`
	// Scte27Pids: string, optional
	Scte27Pids terra.StringValue `hcl:"scte27_pids,attr"`
	// Scte35Control: string, optional
	Scte35Control terra.StringValue `hcl:"scte35_control,attr"`
	// Scte35Pid: string, optional
	Scte35Pid terra.StringValue `hcl:"scte35_pid,attr"`
	// SegmentationMarkers: string, optional
	SegmentationMarkers terra.StringValue `hcl:"segmentation_markers,attr"`
	// SegmentationStyle: string, optional
	SegmentationStyle terra.StringValue `hcl:"segmentation_style,attr"`
	// SegmentationTime: number, optional
	SegmentationTime terra.NumberValue `hcl:"segmentation_time,attr"`
	// TimedMetadataBehavior: string, optional
	TimedMetadataBehavior terra.StringValue `hcl:"timed_metadata_behavior,attr"`
	// TimedMetadataPid: string, optional
	TimedMetadataPid terra.StringValue `hcl:"timed_metadata_pid,attr"`
	// TransportStreamId: number, optional
	TransportStreamId terra.NumberValue `hcl:"transport_stream_id,attr"`
	// VideoPid: string, optional
	VideoPid terra.StringValue `hcl:"video_pid,attr"`
	// EncoderSettingsOutputGroupsAeda71A0: optional
	DvbNitSettings *EncoderSettingsOutputGroupsAeda71A0 `hcl:"dvb_nit_settings,block"`
	// EncoderSettingsOutputGroupsC528Ad2C: optional
	DvbSdtSettings *EncoderSettingsOutputGroupsC528Ad2C `hcl:"dvb_sdt_settings,block"`
	// EncoderSettingsOutputGroups1Cef98A5: optional
	DvbTdtSettings *EncoderSettingsOutputGroups1Cef98A5 `hcl:"dvb_tdt_settings,block"`
}

type EncoderSettingsOutputGroupsAeda71A0 struct {
	// NetworkId: number, required
	NetworkId terra.NumberValue `hcl:"network_id,attr" validate:"required"`
	// NetworkName: string, required
	NetworkName terra.StringValue `hcl:"network_name,attr" validate:"required"`
	// RepInterval: number, optional
	RepInterval terra.NumberValue `hcl:"rep_interval,attr"`
}

type EncoderSettingsOutputGroupsC528Ad2C struct {
	// OutputSdt: string, optional
	OutputSdt terra.StringValue `hcl:"output_sdt,attr"`
	// RepInterval: number, optional
	RepInterval terra.NumberValue `hcl:"rep_interval,attr"`
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// ServiceProviderName: string, optional
	ServiceProviderName terra.StringValue `hcl:"service_provider_name,attr"`
}

type EncoderSettingsOutputGroups1Cef98A5 struct {
	// RepInterval: number, optional
	RepInterval terra.NumberValue `hcl:"rep_interval,attr"`
}

type EncoderSettingsOutputGroups6C7251C5 struct{}

type EncoderSettingsOutputGroups7E0D03D3 struct {
	// NameModifier: string, optional
	NameModifier terra.StringValue `hcl:"name_modifier,attr"`
}

type EncoderSettingsOutputGroups2466Efb3 struct {
	// H265PackagingType: string, optional
	H265PackagingType terra.StringValue `hcl:"h265_packaging_type,attr"`
	// NameModifier: string, optional
	NameModifier terra.StringValue `hcl:"name_modifier,attr"`
	// SegmentModifier: string, optional
	SegmentModifier terra.StringValue `hcl:"segment_modifier,attr"`
	// EncoderSettingsOutputGroups84B14Bcf: required
	HlsSettings *EncoderSettingsOutputGroups84B14Bcf `hcl:"hls_settings,block" validate:"required"`
}

type EncoderSettingsOutputGroups84B14Bcf struct {
	// EncoderSettingsOutputGroups46A19Fa7: optional
	AudioOnlyHlsSettings *EncoderSettingsOutputGroups46A19Fa7 `hcl:"audio_only_hls_settings,block"`
	// EncoderSettingsOutputGroupsEbe8Fc53: optional
	Fmp4HlsSettings *EncoderSettingsOutputGroupsEbe8Fc53 `hcl:"fmp4_hls_settings,block"`
	// EncoderSettingsOutputGroupsE23Ce693: optional
	FrameCaptureHlsSettings *EncoderSettingsOutputGroupsE23Ce693 `hcl:"frame_capture_hls_settings,block"`
	// EncoderSettingsOutputGroups15Feab49: optional
	StandardHlsSettings *EncoderSettingsOutputGroups15Feab49 `hcl:"standard_hls_settings,block"`
}

type EncoderSettingsOutputGroups46A19Fa7 struct {
	// AudioGroupId: string, optional
	AudioGroupId terra.StringValue `hcl:"audio_group_id,attr"`
	// AudioTrackType: string, optional
	AudioTrackType terra.StringValue `hcl:"audio_track_type,attr"`
	// SegmentType: string, optional
	SegmentType terra.StringValue `hcl:"segment_type,attr"`
	// EncoderSettingsOutputGroups39B6C70C: optional
	AudioOnlyImage *EncoderSettingsOutputGroups39B6C70C `hcl:"audio_only_image,block"`
}

type EncoderSettingsOutputGroups39B6C70C struct {
	// PasswordParam: string, optional
	PasswordParam terra.StringValue `hcl:"password_param,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type EncoderSettingsOutputGroupsEbe8Fc53 struct {
	// AudioRenditionSets: string, optional
	AudioRenditionSets terra.StringValue `hcl:"audio_rendition_sets,attr"`
	// NielsenId3Behavior: string, optional
	NielsenId3Behavior terra.StringValue `hcl:"nielsen_id3_behavior,attr"`
	// TimedMetadataBehavior: string, optional
	TimedMetadataBehavior terra.StringValue `hcl:"timed_metadata_behavior,attr"`
}

type EncoderSettingsOutputGroupsE23Ce693 struct{}

type EncoderSettingsOutputGroups15Feab49 struct {
	// AudioRenditionSets: string, optional
	AudioRenditionSets terra.StringValue `hcl:"audio_rendition_sets,attr"`
	// EncoderSettingsOutputGroupsBa0C557E: required
	M3U8Settings *EncoderSettingsOutputGroupsBa0C557E `hcl:"m3u8_settings,block" validate:"required"`
}

type EncoderSettingsOutputGroupsBa0C557E struct {
	// AudioFramesPerPes: number, optional
	AudioFramesPerPes terra.NumberValue `hcl:"audio_frames_per_pes,attr"`
	// AudioPids: string, optional
	AudioPids terra.StringValue `hcl:"audio_pids,attr"`
	// EcmPid: string, optional
	EcmPid terra.StringValue `hcl:"ecm_pid,attr"`
	// NielsenId3Behavior: string, optional
	NielsenId3Behavior terra.StringValue `hcl:"nielsen_id3_behavior,attr"`
	// PatInterval: number, optional
	PatInterval terra.NumberValue `hcl:"pat_interval,attr"`
	// PcrControl: string, optional
	PcrControl terra.StringValue `hcl:"pcr_control,attr"`
	// PcrPeriod: number, optional
	PcrPeriod terra.NumberValue `hcl:"pcr_period,attr"`
	// PcrPid: string, optional
	PcrPid terra.StringValue `hcl:"pcr_pid,attr"`
	// PmtInterval: number, optional
	PmtInterval terra.NumberValue `hcl:"pmt_interval,attr"`
	// PmtPid: string, optional
	PmtPid terra.StringValue `hcl:"pmt_pid,attr"`
	// ProgramNum: number, optional
	ProgramNum terra.NumberValue `hcl:"program_num,attr"`
	// Scte35Behavior: string, optional
	Scte35Behavior terra.StringValue `hcl:"scte35_behavior,attr"`
	// Scte35Pid: string, optional
	Scte35Pid terra.StringValue `hcl:"scte35_pid,attr"`
	// TimedMetadataBehavior: string, optional
	TimedMetadataBehavior terra.StringValue `hcl:"timed_metadata_behavior,attr"`
	// TimedMetadataPid: string, optional
	TimedMetadataPid terra.StringValue `hcl:"timed_metadata_pid,attr"`
	// TransportStreamId: number, optional
	TransportStreamId terra.NumberValue `hcl:"transport_stream_id,attr"`
	// VideoPid: string, optional
	VideoPid terra.StringValue `hcl:"video_pid,attr"`
}

type EncoderSettingsOutputGroups8Fba9De4 struct{}

type EncoderSettingsOutputGroups2Ac24Ce4 struct {
	// H265PackagingType: string, optional
	H265PackagingType terra.StringValue `hcl:"h265_packaging_type,attr"`
	// NameModifier: string, optional
	NameModifier terra.StringValue `hcl:"name_modifier,attr"`
}

type EncoderSettingsOutputGroups19A359Da struct {
	// EncoderSettingsOutputGroups98E2175D: required
	Destination *EncoderSettingsOutputGroups98E2175D `hcl:"destination,block" validate:"required"`
}

type EncoderSettingsOutputGroups98E2175D struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroups87D0Bb71 struct {
	// CertificateMode: string, optional
	CertificateMode terra.StringValue `hcl:"certificate_mode,attr"`
	// ConnectionRetryInterval: number, optional
	ConnectionRetryInterval terra.NumberValue `hcl:"connection_retry_interval,attr"`
	// NumRetries: number, optional
	NumRetries terra.NumberValue `hcl:"num_retries,attr"`
	// EncoderSettingsOutputGroups096B1Fb0: required
	Destination *EncoderSettingsOutputGroups096B1Fb0 `hcl:"destination,block" validate:"required"`
}

type EncoderSettingsOutputGroups096B1Fb0 struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsE9Fe7E35 struct {
	// BufferMsec: number, optional
	BufferMsec terra.NumberValue `hcl:"buffer_msec,attr"`
	// EncoderSettingsOutputGroups5B4D9852: required
	ContainerSettings *EncoderSettingsOutputGroups5B4D9852 `hcl:"container_settings,block" validate:"required"`
	// EncoderSettingsOutputGroupsA199D051: required
	Destination *EncoderSettingsOutputGroupsA199D051 `hcl:"destination,block" validate:"required"`
	// EncoderSettingsOutputGroupsAbb6Dab5: optional
	FecOutputSettings *EncoderSettingsOutputGroupsAbb6Dab5 `hcl:"fec_output_settings,block"`
}

type EncoderSettingsOutputGroups5B4D9852 struct {
	// EncoderSettingsOutputGroupsF52F81Be: optional
	M2TsSettings *EncoderSettingsOutputGroupsF52F81Be `hcl:"m2ts_settings,block"`
}

type EncoderSettingsOutputGroupsF52F81Be struct {
	// AbsentInputAudioBehavior: string, optional
	AbsentInputAudioBehavior terra.StringValue `hcl:"absent_input_audio_behavior,attr"`
	// Arib: string, optional
	Arib terra.StringValue `hcl:"arib,attr"`
	// AribCaptionsPid: string, optional
	AribCaptionsPid terra.StringValue `hcl:"arib_captions_pid,attr"`
	// AribCaptionsPidControl: string, optional
	AribCaptionsPidControl terra.StringValue `hcl:"arib_captions_pid_control,attr"`
	// AudioBufferModel: string, optional
	AudioBufferModel terra.StringValue `hcl:"audio_buffer_model,attr"`
	// AudioFramesPerPes: number, optional
	AudioFramesPerPes terra.NumberValue `hcl:"audio_frames_per_pes,attr"`
	// AudioPids: string, optional
	AudioPids terra.StringValue `hcl:"audio_pids,attr"`
	// AudioStreamType: string, optional
	AudioStreamType terra.StringValue `hcl:"audio_stream_type,attr"`
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// BufferModel: string, optional
	BufferModel terra.StringValue `hcl:"buffer_model,attr"`
	// CcDescriptor: string, optional
	CcDescriptor terra.StringValue `hcl:"cc_descriptor,attr"`
	// DvbSubPids: string, optional
	DvbSubPids terra.StringValue `hcl:"dvb_sub_pids,attr"`
	// DvbTeletextPid: string, optional
	DvbTeletextPid terra.StringValue `hcl:"dvb_teletext_pid,attr"`
	// Ebif: string, optional
	Ebif terra.StringValue `hcl:"ebif,attr"`
	// EbpAudioInterval: string, optional
	EbpAudioInterval terra.StringValue `hcl:"ebp_audio_interval,attr"`
	// EbpLookaheadMs: number, optional
	EbpLookaheadMs terra.NumberValue `hcl:"ebp_lookahead_ms,attr"`
	// EbpPlacement: string, optional
	EbpPlacement terra.StringValue `hcl:"ebp_placement,attr"`
	// EcmPid: string, optional
	EcmPid terra.StringValue `hcl:"ecm_pid,attr"`
	// EsRateInPes: string, optional
	EsRateInPes terra.StringValue `hcl:"es_rate_in_pes,attr"`
	// EtvPlatformPid: string, optional
	EtvPlatformPid terra.StringValue `hcl:"etv_platform_pid,attr"`
	// EtvSignalPid: string, optional
	EtvSignalPid terra.StringValue `hcl:"etv_signal_pid,attr"`
	// FragmentTime: number, optional
	FragmentTime terra.NumberValue `hcl:"fragment_time,attr"`
	// Klv: string, optional
	Klv terra.StringValue `hcl:"klv,attr"`
	// KlvDataPids: string, optional
	KlvDataPids terra.StringValue `hcl:"klv_data_pids,attr"`
	// NielsenId3Behavior: string, optional
	NielsenId3Behavior terra.StringValue `hcl:"nielsen_id3_behavior,attr"`
	// NullPacketBitrate: number, optional
	NullPacketBitrate terra.NumberValue `hcl:"null_packet_bitrate,attr"`
	// PatInterval: number, optional
	PatInterval terra.NumberValue `hcl:"pat_interval,attr"`
	// PcrControl: string, optional
	PcrControl terra.StringValue `hcl:"pcr_control,attr"`
	// PcrPeriod: number, optional
	PcrPeriod terra.NumberValue `hcl:"pcr_period,attr"`
	// PcrPid: string, optional
	PcrPid terra.StringValue `hcl:"pcr_pid,attr"`
	// PmtInterval: number, optional
	PmtInterval terra.NumberValue `hcl:"pmt_interval,attr"`
	// PmtPid: string, optional
	PmtPid terra.StringValue `hcl:"pmt_pid,attr"`
	// ProgramNum: number, optional
	ProgramNum terra.NumberValue `hcl:"program_num,attr"`
	// RateMode: string, optional
	RateMode terra.StringValue `hcl:"rate_mode,attr"`
	// Scte27Pids: string, optional
	Scte27Pids terra.StringValue `hcl:"scte27_pids,attr"`
	// Scte35Control: string, optional
	Scte35Control terra.StringValue `hcl:"scte35_control,attr"`
	// Scte35Pid: string, optional
	Scte35Pid terra.StringValue `hcl:"scte35_pid,attr"`
	// SegmentationMarkers: string, optional
	SegmentationMarkers terra.StringValue `hcl:"segmentation_markers,attr"`
	// SegmentationStyle: string, optional
	SegmentationStyle terra.StringValue `hcl:"segmentation_style,attr"`
	// SegmentationTime: number, optional
	SegmentationTime terra.NumberValue `hcl:"segmentation_time,attr"`
	// TimedMetadataBehavior: string, optional
	TimedMetadataBehavior terra.StringValue `hcl:"timed_metadata_behavior,attr"`
	// TimedMetadataPid: string, optional
	TimedMetadataPid terra.StringValue `hcl:"timed_metadata_pid,attr"`
	// TransportStreamId: number, optional
	TransportStreamId terra.NumberValue `hcl:"transport_stream_id,attr"`
	// VideoPid: string, optional
	VideoPid terra.StringValue `hcl:"video_pid,attr"`
	// EncoderSettingsOutputGroups9Ab16061: optional
	DvbNitSettings *EncoderSettingsOutputGroups9Ab16061 `hcl:"dvb_nit_settings,block"`
	// EncoderSettingsOutputGroups6E0740B3: optional
	DvbSdtSettings *EncoderSettingsOutputGroups6E0740B3 `hcl:"dvb_sdt_settings,block"`
	// EncoderSettingsOutputGroups4271Ac49: optional
	DvbTdtSettings *EncoderSettingsOutputGroups4271Ac49 `hcl:"dvb_tdt_settings,block"`
}

type EncoderSettingsOutputGroups9Ab16061 struct {
	// NetworkId: number, required
	NetworkId terra.NumberValue `hcl:"network_id,attr" validate:"required"`
	// NetworkName: string, required
	NetworkName terra.StringValue `hcl:"network_name,attr" validate:"required"`
	// RepInterval: number, optional
	RepInterval terra.NumberValue `hcl:"rep_interval,attr"`
}

type EncoderSettingsOutputGroups6E0740B3 struct {
	// OutputSdt: string, optional
	OutputSdt terra.StringValue `hcl:"output_sdt,attr"`
	// RepInterval: number, optional
	RepInterval terra.NumberValue `hcl:"rep_interval,attr"`
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// ServiceProviderName: string, optional
	ServiceProviderName terra.StringValue `hcl:"service_provider_name,attr"`
}

type EncoderSettingsOutputGroups4271Ac49 struct {
	// RepInterval: number, optional
	RepInterval terra.NumberValue `hcl:"rep_interval,attr"`
}

type EncoderSettingsOutputGroupsA199D051 struct {
	// DestinationRefId: string, required
	DestinationRefId terra.StringValue `hcl:"destination_ref_id,attr" validate:"required"`
}

type EncoderSettingsOutputGroupsAbb6Dab5 struct {
	// ColumnDepth: number, optional
	ColumnDepth terra.NumberValue `hcl:"column_depth,attr"`
	// IncludeFec: string, optional
	IncludeFec terra.StringValue `hcl:"include_fec,attr"`
	// RowLength: number, optional
	RowLength terra.NumberValue `hcl:"row_length,attr"`
}

type EncoderSettingsTimecodeConfig struct {
	// Source: string, required
	Source terra.StringValue `hcl:"source,attr" validate:"required"`
	// SyncThreshold: number, optional
	SyncThreshold terra.NumberValue `hcl:"sync_threshold,attr"`
}

type EncoderSettingsVideoDescriptions struct {
	// Height: number, optional
	Height terra.NumberValue `hcl:"height,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RespondToAfd: string, optional
	RespondToAfd terra.StringValue `hcl:"respond_to_afd,attr"`
	// ScalingBehavior: string, optional
	ScalingBehavior terra.StringValue `hcl:"scaling_behavior,attr"`
	// Sharpness: number, optional
	Sharpness terra.NumberValue `hcl:"sharpness,attr"`
	// Width: number, optional
	Width terra.NumberValue `hcl:"width,attr"`
	// EncoderSettingsVideoDescriptionsCodecSettings: optional
	CodecSettings *EncoderSettingsVideoDescriptionsCodecSettings `hcl:"codec_settings,block"`
}

type EncoderSettingsVideoDescriptionsCodecSettings struct {
	// EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettings: optional
	FrameCaptureSettings *EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettings `hcl:"frame_capture_settings,block"`
	// EncoderSettingsVideoDescriptionsCodecSettingsH264Settings: optional
	H264Settings *EncoderSettingsVideoDescriptionsCodecSettingsH264Settings `hcl:"h264_settings,block"`
	// EncoderSettingsVideoDescriptionsCodecSettingsH265Settings: optional
	H265Settings *EncoderSettingsVideoDescriptionsCodecSettingsH265Settings `hcl:"h265_settings,block"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettings struct {
	// CaptureInterval: number, optional
	CaptureInterval terra.NumberValue `hcl:"capture_interval,attr"`
	// CaptureIntervalUnits: string, optional
	CaptureIntervalUnits terra.StringValue `hcl:"capture_interval_units,attr"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsH264Settings struct {
	// AdaptiveQuantization: string, optional
	AdaptiveQuantization terra.StringValue `hcl:"adaptive_quantization,attr"`
	// AfdSignaling: string, optional
	AfdSignaling terra.StringValue `hcl:"afd_signaling,attr"`
	// Bitrate: number, optional
	Bitrate terra.NumberValue `hcl:"bitrate,attr"`
	// BufFillPct: number, optional
	BufFillPct terra.NumberValue `hcl:"buf_fill_pct,attr"`
	// BufSize: number, optional
	BufSize terra.NumberValue `hcl:"buf_size,attr"`
	// ColorMetadata: string, optional
	ColorMetadata terra.StringValue `hcl:"color_metadata,attr"`
	// EntropyEncoding: string, optional
	EntropyEncoding terra.StringValue `hcl:"entropy_encoding,attr"`
	// FixedAfd: string, optional
	FixedAfd terra.StringValue `hcl:"fixed_afd,attr"`
	// FlickerAq: string, optional
	FlickerAq terra.StringValue `hcl:"flicker_aq,attr"`
	// ForceFieldPictures: string, optional
	ForceFieldPictures terra.StringValue `hcl:"force_field_pictures,attr"`
	// FramerateControl: string, optional
	FramerateControl terra.StringValue `hcl:"framerate_control,attr"`
	// FramerateDenominator: number, optional
	FramerateDenominator terra.NumberValue `hcl:"framerate_denominator,attr"`
	// FramerateNumerator: number, optional
	FramerateNumerator terra.NumberValue `hcl:"framerate_numerator,attr"`
	// GopBReference: string, optional
	GopBReference terra.StringValue `hcl:"gop_b_reference,attr"`
	// GopClosedCadence: number, optional
	GopClosedCadence terra.NumberValue `hcl:"gop_closed_cadence,attr"`
	// GopNumBFrames: number, optional
	GopNumBFrames terra.NumberValue `hcl:"gop_num_b_frames,attr"`
	// GopSize: number, optional
	GopSize terra.NumberValue `hcl:"gop_size,attr"`
	// GopSizeUnits: string, optional
	GopSizeUnits terra.StringValue `hcl:"gop_size_units,attr"`
	// Level: string, optional
	Level terra.StringValue `hcl:"level,attr"`
	// LookAheadRateControl: string, optional
	LookAheadRateControl terra.StringValue `hcl:"look_ahead_rate_control,attr"`
	// MaxBitrate: number, optional
	MaxBitrate terra.NumberValue `hcl:"max_bitrate,attr"`
	// MinIInterval: number, optional
	MinIInterval terra.NumberValue `hcl:"min_i_interval,attr"`
	// NumRefFrames: number, optional
	NumRefFrames terra.NumberValue `hcl:"num_ref_frames,attr"`
	// ParControl: string, optional
	ParControl terra.StringValue `hcl:"par_control,attr"`
	// ParDenominator: number, optional
	ParDenominator terra.NumberValue `hcl:"par_denominator,attr"`
	// ParNumerator: number, optional
	ParNumerator terra.NumberValue `hcl:"par_numerator,attr"`
	// Profile: string, optional
	Profile terra.StringValue `hcl:"profile,attr"`
	// QualityLevel: string, optional
	QualityLevel terra.StringValue `hcl:"quality_level,attr"`
	// QvbrQualityLevel: number, optional
	QvbrQualityLevel terra.NumberValue `hcl:"qvbr_quality_level,attr"`
	// RateControlMode: string, optional
	RateControlMode terra.StringValue `hcl:"rate_control_mode,attr"`
	// ScanType: string, optional
	ScanType terra.StringValue `hcl:"scan_type,attr"`
	// SceneChangeDetect: string, optional
	SceneChangeDetect terra.StringValue `hcl:"scene_change_detect,attr"`
	// Slices: number, optional
	Slices terra.NumberValue `hcl:"slices,attr"`
	// Softness: number, optional
	Softness terra.NumberValue `hcl:"softness,attr"`
	// SpatialAq: string, optional
	SpatialAq terra.StringValue `hcl:"spatial_aq,attr"`
	// SubgopLength: string, optional
	SubgopLength terra.StringValue `hcl:"subgop_length,attr"`
	// Syntax: string, optional
	Syntax terra.StringValue `hcl:"syntax,attr"`
	// TemporalAq: string, optional
	TemporalAq terra.StringValue `hcl:"temporal_aq,attr"`
	// TimecodeInsertion: string, optional
	TimecodeInsertion terra.StringValue `hcl:"timecode_insertion,attr"`
	// EncoderSettingsVideoDescriptions16C7052F: optional
	FilterSettings *EncoderSettingsVideoDescriptions16C7052F `hcl:"filter_settings,block"`
}

type EncoderSettingsVideoDescriptions16C7052F struct {
	// EncoderSettingsVideoDescriptions6D3116A4: optional
	TemporalFilterSettings *EncoderSettingsVideoDescriptions6D3116A4 `hcl:"temporal_filter_settings,block"`
}

type EncoderSettingsVideoDescriptions6D3116A4 struct {
	// PostFilterSharpening: string, optional
	PostFilterSharpening terra.StringValue `hcl:"post_filter_sharpening,attr"`
	// Strength: string, optional
	Strength terra.StringValue `hcl:"strength,attr"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsH265Settings struct {
	// AdaptiveQuantization: string, optional
	AdaptiveQuantization terra.StringValue `hcl:"adaptive_quantization,attr"`
	// AfdSignaling: string, optional
	AfdSignaling terra.StringValue `hcl:"afd_signaling,attr"`
	// AlternativeTransferFunction: string, optional
	AlternativeTransferFunction terra.StringValue `hcl:"alternative_transfer_function,attr"`
	// Bitrate: number, required
	Bitrate terra.NumberValue `hcl:"bitrate,attr" validate:"required"`
	// BufSize: number, optional
	BufSize terra.NumberValue `hcl:"buf_size,attr"`
	// ColorMetadata: string, optional
	ColorMetadata terra.StringValue `hcl:"color_metadata,attr"`
	// FixedAfd: string, optional
	FixedAfd terra.StringValue `hcl:"fixed_afd,attr"`
	// FlickerAq: string, optional
	FlickerAq terra.StringValue `hcl:"flicker_aq,attr"`
	// FramerateDenominator: number, required
	FramerateDenominator terra.NumberValue `hcl:"framerate_denominator,attr" validate:"required"`
	// FramerateNumerator: number, required
	FramerateNumerator terra.NumberValue `hcl:"framerate_numerator,attr" validate:"required"`
	// GopClosedCadence: number, optional
	GopClosedCadence terra.NumberValue `hcl:"gop_closed_cadence,attr"`
	// GopSize: number, optional
	GopSize terra.NumberValue `hcl:"gop_size,attr"`
	// GopSizeUnits: string, optional
	GopSizeUnits terra.StringValue `hcl:"gop_size_units,attr"`
	// Level: string, optional
	Level terra.StringValue `hcl:"level,attr"`
	// LookAheadRateControl: string, optional
	LookAheadRateControl terra.StringValue `hcl:"look_ahead_rate_control,attr"`
	// MaxBitrate: number, optional
	MaxBitrate terra.NumberValue `hcl:"max_bitrate,attr"`
	// MinIInterval: number, optional
	MinIInterval terra.NumberValue `hcl:"min_i_interval,attr"`
	// ParDenominator: number, optional
	ParDenominator terra.NumberValue `hcl:"par_denominator,attr"`
	// ParNumerator: number, optional
	ParNumerator terra.NumberValue `hcl:"par_numerator,attr"`
	// Profile: string, optional
	Profile terra.StringValue `hcl:"profile,attr"`
	// QvbrQualityLevel: number, optional
	QvbrQualityLevel terra.NumberValue `hcl:"qvbr_quality_level,attr"`
	// RateControlMode: string, optional
	RateControlMode terra.StringValue `hcl:"rate_control_mode,attr"`
	// ScanType: string, optional
	ScanType terra.StringValue `hcl:"scan_type,attr"`
	// SceneChangeDetect: string, optional
	SceneChangeDetect terra.StringValue `hcl:"scene_change_detect,attr"`
	// Slices: number, optional
	Slices terra.NumberValue `hcl:"slices,attr"`
	// Tier: string, optional
	Tier terra.StringValue `hcl:"tier,attr"`
	// TimecodeInsertion: string, optional
	TimecodeInsertion terra.StringValue `hcl:"timecode_insertion,attr"`
	// EncoderSettingsVideoDescriptions32Bafd78: optional
	ColorSpaceSettings *EncoderSettingsVideoDescriptions32Bafd78 `hcl:"color_space_settings,block"`
	// EncoderSettingsVideoDescriptions866F30C8: optional
	FilterSettings *EncoderSettingsVideoDescriptions866F30C8 `hcl:"filter_settings,block"`
	// EncoderSettingsVideoDescriptions6Ec21560: optional
	TimecodeBurninSettings *EncoderSettingsVideoDescriptions6Ec21560 `hcl:"timecode_burnin_settings,block"`
}

type EncoderSettingsVideoDescriptions32Bafd78 struct {
	// EncoderSettingsVideoDescriptions3B5Dc5F6: optional
	ColorSpacePassthroughSettings *EncoderSettingsVideoDescriptions3B5Dc5F6 `hcl:"color_space_passthrough_settings,block"`
	// EncoderSettingsVideoDescriptions91Ab172F: optional
	DolbyVision81Settings *EncoderSettingsVideoDescriptions91Ab172F `hcl:"dolby_vision81_settings,block"`
	// EncoderSettingsVideoDescriptions54Ced679: optional
	Hdr10Settings *EncoderSettingsVideoDescriptions54Ced679 `hcl:"hdr10_settings,block"`
	// EncoderSettingsVideoDescriptionsF12B29Ba: optional
	Rec601Settings *EncoderSettingsVideoDescriptionsF12B29Ba `hcl:"rec601_settings,block"`
	// EncoderSettingsVideoDescriptionsAeb56963: optional
	Rec709Settings *EncoderSettingsVideoDescriptionsAeb56963 `hcl:"rec709_settings,block"`
}

type EncoderSettingsVideoDescriptions3B5Dc5F6 struct{}

type EncoderSettingsVideoDescriptions91Ab172F struct{}

type EncoderSettingsVideoDescriptions54Ced679 struct {
	// MaxCll: number, optional
	MaxCll terra.NumberValue `hcl:"max_cll,attr"`
	// MaxFall: number, optional
	MaxFall terra.NumberValue `hcl:"max_fall,attr"`
}

type EncoderSettingsVideoDescriptionsF12B29Ba struct{}

type EncoderSettingsVideoDescriptionsAeb56963 struct{}

type EncoderSettingsVideoDescriptions866F30C8 struct {
	// EncoderSettingsVideoDescriptionsFc51Dd67: optional
	TemporalFilterSettings *EncoderSettingsVideoDescriptionsFc51Dd67 `hcl:"temporal_filter_settings,block"`
}

type EncoderSettingsVideoDescriptionsFc51Dd67 struct {
	// PostFilterSharpening: string, optional
	PostFilterSharpening terra.StringValue `hcl:"post_filter_sharpening,attr"`
	// Strength: string, optional
	Strength terra.StringValue `hcl:"strength,attr"`
}

type EncoderSettingsVideoDescriptions6Ec21560 struct {
	// Prefix: string, optional
	Prefix terra.StringValue `hcl:"prefix,attr"`
	// TimecodeBurninFontSize: string, optional
	TimecodeBurninFontSize terra.StringValue `hcl:"timecode_burnin_font_size,attr"`
	// TimecodeBurninPosition: string, optional
	TimecodeBurninPosition terra.StringValue `hcl:"timecode_burnin_position,attr"`
}

type InputAttachments struct {
	// InputAttachmentName: string, required
	InputAttachmentName terra.StringValue `hcl:"input_attachment_name,attr" validate:"required"`
	// InputId: string, required
	InputId terra.StringValue `hcl:"input_id,attr" validate:"required"`
	// InputAttachmentsAutomaticInputFailoverSettings: optional
	AutomaticInputFailoverSettings *InputAttachmentsAutomaticInputFailoverSettings `hcl:"automatic_input_failover_settings,block"`
	// InputAttachmentsInputSettings: optional
	InputSettings *InputAttachmentsInputSettings `hcl:"input_settings,block"`
}

type InputAttachmentsAutomaticInputFailoverSettings struct {
	// ErrorClearTimeMsec: number, optional
	ErrorClearTimeMsec terra.NumberValue `hcl:"error_clear_time_msec,attr"`
	// InputPreference: string, optional
	InputPreference terra.StringValue `hcl:"input_preference,attr"`
	// SecondaryInputId: string, required
	SecondaryInputId terra.StringValue `hcl:"secondary_input_id,attr" validate:"required"`
	// InputAttachmentsAutomaticInputFailoverSettingsFailoverCondition: min=0
	FailoverCondition []InputAttachmentsAutomaticInputFailoverSettingsFailoverCondition `hcl:"failover_condition,block" validate:"min=0"`
}

type InputAttachmentsAutomaticInputFailoverSettingsFailoverCondition struct {
	// InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings: optional
	FailoverConditionSettings *InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings `hcl:"failover_condition_settings,block"`
}

type InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings struct {
	// InputAttachmentsAutomaticInputFailoverSettings71D8493E: optional
	AudioSilenceSettings *InputAttachmentsAutomaticInputFailoverSettings71D8493E `hcl:"audio_silence_settings,block"`
	// InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69: optional
	InputLossSettings *InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69 `hcl:"input_loss_settings,block"`
	// InputAttachmentsAutomaticInputFailoverSettings8Dfd66Dc: optional
	VideoBlackSettings *InputAttachmentsAutomaticInputFailoverSettings8Dfd66Dc `hcl:"video_black_settings,block"`
}

type InputAttachmentsAutomaticInputFailoverSettings71D8493E struct {
	// AudioSelectorName: string, required
	AudioSelectorName terra.StringValue `hcl:"audio_selector_name,attr" validate:"required"`
	// AudioSilenceThresholdMsec: number, optional
	AudioSilenceThresholdMsec terra.NumberValue `hcl:"audio_silence_threshold_msec,attr"`
}

type InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69 struct {
	// InputLossThresholdMsec: number, optional
	InputLossThresholdMsec terra.NumberValue `hcl:"input_loss_threshold_msec,attr"`
}

type InputAttachmentsAutomaticInputFailoverSettings8Dfd66Dc struct {
	// BlackDetectThreshold: number, optional
	BlackDetectThreshold terra.NumberValue `hcl:"black_detect_threshold,attr"`
	// VideoBlackThresholdMsec: number, optional
	VideoBlackThresholdMsec terra.NumberValue `hcl:"video_black_threshold_msec,attr"`
}

type InputAttachmentsInputSettings struct {
	// DeblockFilter: string, optional
	DeblockFilter terra.StringValue `hcl:"deblock_filter,attr"`
	// DenoiseFilter: string, optional
	DenoiseFilter terra.StringValue `hcl:"denoise_filter,attr"`
	// FilterStrength: number, optional
	FilterStrength terra.NumberValue `hcl:"filter_strength,attr"`
	// InputFilter: string, optional
	InputFilter terra.StringValue `hcl:"input_filter,attr"`
	// Scte35Pid: number, optional
	Scte35Pid terra.NumberValue `hcl:"scte35_pid,attr"`
	// Smpte2038DataPreference: string, optional
	Smpte2038DataPreference terra.StringValue `hcl:"smpte2038_data_preference,attr"`
	// SourceEndBehavior: string, optional
	SourceEndBehavior terra.StringValue `hcl:"source_end_behavior,attr"`
	// InputAttachmentsInputSettingsAudioSelector: min=0
	AudioSelector []InputAttachmentsInputSettingsAudioSelector `hcl:"audio_selector,block" validate:"min=0"`
	// InputAttachmentsInputSettingsCaptionSelector: min=0
	CaptionSelector []InputAttachmentsInputSettingsCaptionSelector `hcl:"caption_selector,block" validate:"min=0"`
	// InputAttachmentsInputSettingsNetworkInputSettings: optional
	NetworkInputSettings *InputAttachmentsInputSettingsNetworkInputSettings `hcl:"network_input_settings,block"`
	// InputAttachmentsInputSettingsVideoSelector: optional
	VideoSelector *InputAttachmentsInputSettingsVideoSelector `hcl:"video_selector,block"`
}

type InputAttachmentsInputSettingsAudioSelector struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// InputAttachmentsInputSettingsAudioSelectorSelectorSettings: optional
	SelectorSettings *InputAttachmentsInputSettingsAudioSelectorSelectorSettings `hcl:"selector_settings,block"`
}

type InputAttachmentsInputSettingsAudioSelectorSelectorSettings struct {
	// InputAttachmentsInputSettingsFe539861: optional
	AudioHlsRenditionSelection *InputAttachmentsInputSettingsFe539861 `hcl:"audio_hls_rendition_selection,block"`
	// InputAttachmentsInputSettingsC1D0Ca7E: optional
	AudioLanguageSelection *InputAttachmentsInputSettingsC1D0Ca7E `hcl:"audio_language_selection,block"`
	// InputAttachmentsInputSettings5F997E5D: optional
	AudioPidSelection *InputAttachmentsInputSettings5F997E5D `hcl:"audio_pid_selection,block"`
	// InputAttachmentsInputSettingsF6Cce638: optional
	AudioTrackSelection *InputAttachmentsInputSettingsF6Cce638 `hcl:"audio_track_selection,block"`
}

type InputAttachmentsInputSettingsFe539861 struct {
	// GroupId: string, required
	GroupId terra.StringValue `hcl:"group_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type InputAttachmentsInputSettingsC1D0Ca7E struct {
	// LanguageCode: string, required
	LanguageCode terra.StringValue `hcl:"language_code,attr" validate:"required"`
	// LanguageSelectionPolicy: string, optional
	LanguageSelectionPolicy terra.StringValue `hcl:"language_selection_policy,attr"`
}

type InputAttachmentsInputSettings5F997E5D struct {
	// Pid: number, required
	Pid terra.NumberValue `hcl:"pid,attr" validate:"required"`
}

type InputAttachmentsInputSettingsF6Cce638 struct {
	// InputAttachmentsInputSettingsE92D8Fc6: optional
	DolbyEDecode *InputAttachmentsInputSettingsE92D8Fc6 `hcl:"dolby_e_decode,block"`
	// InputAttachmentsInputSettings57946D90: min=1
	Tracks []InputAttachmentsInputSettings57946D90 `hcl:"tracks,block" validate:"min=1"`
}

type InputAttachmentsInputSettingsE92D8Fc6 struct {
	// ProgramSelection: string, required
	ProgramSelection terra.StringValue `hcl:"program_selection,attr" validate:"required"`
}

type InputAttachmentsInputSettings57946D90 struct {
	// Track: number, required
	Track terra.NumberValue `hcl:"track,attr" validate:"required"`
}

type InputAttachmentsInputSettingsCaptionSelector struct {
	// LanguageCode: string, optional
	LanguageCode terra.StringValue `hcl:"language_code,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// InputAttachmentsInputSettingsCaptionSelectorSelectorSettings: optional
	SelectorSettings *InputAttachmentsInputSettingsCaptionSelectorSelectorSettings `hcl:"selector_settings,block"`
}

type InputAttachmentsInputSettingsCaptionSelectorSelectorSettings struct {
	// InputAttachmentsInputSettings2Ade7214: optional
	AncillarySourceSettings *InputAttachmentsInputSettings2Ade7214 `hcl:"ancillary_source_settings,block"`
	// InputAttachmentsInputSettings126Dc0Ee: optional
	AribSourceSettings *InputAttachmentsInputSettings126Dc0Ee `hcl:"arib_source_settings,block"`
	// InputAttachmentsInputSettings2Cf436B7: optional
	DvbSubSourceSettings *InputAttachmentsInputSettings2Cf436B7 `hcl:"dvb_sub_source_settings,block"`
	// InputAttachmentsInputSettings9Cff41Ad: optional
	EmbeddedSourceSettings *InputAttachmentsInputSettings9Cff41Ad `hcl:"embedded_source_settings,block"`
	// InputAttachmentsInputSettingsF42565Dc: optional
	Scte20SourceSettings *InputAttachmentsInputSettingsF42565Dc `hcl:"scte20_source_settings,block"`
	// InputAttachmentsInputSettingsA0F09701: optional
	Scte27SourceSettings *InputAttachmentsInputSettingsA0F09701 `hcl:"scte27_source_settings,block"`
	// InputAttachmentsInputSettings4B91Db51: optional
	TeletextSourceSettings *InputAttachmentsInputSettings4B91Db51 `hcl:"teletext_source_settings,block"`
}

type InputAttachmentsInputSettings2Ade7214 struct {
	// SourceAncillaryChannelNumber: number, optional
	SourceAncillaryChannelNumber terra.NumberValue `hcl:"source_ancillary_channel_number,attr"`
}

type InputAttachmentsInputSettings126Dc0Ee struct{}

type InputAttachmentsInputSettings2Cf436B7 struct {
	// OcrLanguage: string, optional
	OcrLanguage terra.StringValue `hcl:"ocr_language,attr"`
	// Pid: number, optional
	Pid terra.NumberValue `hcl:"pid,attr"`
}

type InputAttachmentsInputSettings9Cff41Ad struct {
	// Convert608To708: string, optional
	Convert608To708 terra.StringValue `hcl:"convert_608_to_708,attr"`
	// Scte20Detection: string, optional
	Scte20Detection terra.StringValue `hcl:"scte20_detection,attr"`
	// Source608ChannelNumber: number, optional
	Source608ChannelNumber terra.NumberValue `hcl:"source_608_channel_number,attr"`
}

type InputAttachmentsInputSettingsF42565Dc struct {
	// Convert608To708: string, optional
	Convert608To708 terra.StringValue `hcl:"convert_608_to_708,attr"`
	// Source608ChannelNumber: number, optional
	Source608ChannelNumber terra.NumberValue `hcl:"source_608_channel_number,attr"`
}

type InputAttachmentsInputSettingsA0F09701 struct {
	// OcrLanguage: string, optional
	OcrLanguage terra.StringValue `hcl:"ocr_language,attr"`
	// Pid: number, optional
	Pid terra.NumberValue `hcl:"pid,attr"`
}

type InputAttachmentsInputSettings4B91Db51 struct {
	// PageNumber: string, optional
	PageNumber terra.StringValue `hcl:"page_number,attr"`
	// InputAttachmentsInputSettingsAd174B9A: optional
	OutputRectangle *InputAttachmentsInputSettingsAd174B9A `hcl:"output_rectangle,block"`
}

type InputAttachmentsInputSettingsAd174B9A struct {
	// Height: number, required
	Height terra.NumberValue `hcl:"height,attr" validate:"required"`
	// LeftOffset: number, required
	LeftOffset terra.NumberValue `hcl:"left_offset,attr" validate:"required"`
	// TopOffset: number, required
	TopOffset terra.NumberValue `hcl:"top_offset,attr" validate:"required"`
	// Width: number, required
	Width terra.NumberValue `hcl:"width,attr" validate:"required"`
}

type InputAttachmentsInputSettingsNetworkInputSettings struct {
	// ServerValidation: string, optional
	ServerValidation terra.StringValue `hcl:"server_validation,attr"`
	// InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettings: optional
	HlsInputSettings *InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettings `hcl:"hls_input_settings,block"`
}

type InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettings struct {
	// Bandwidth: number, optional
	Bandwidth terra.NumberValue `hcl:"bandwidth,attr"`
	// BufferSegments: number, optional
	BufferSegments terra.NumberValue `hcl:"buffer_segments,attr"`
	// Retries: number, optional
	Retries terra.NumberValue `hcl:"retries,attr"`
	// RetryInterval: number, optional
	RetryInterval terra.NumberValue `hcl:"retry_interval,attr"`
	// Scte35Source: string, optional
	Scte35Source terra.StringValue `hcl:"scte35_source,attr"`
}

type InputAttachmentsInputSettingsVideoSelector struct {
	// ColorSpace: string, optional
	ColorSpace terra.StringValue `hcl:"color_space,attr"`
	// ColorSpaceUsage: string, optional
	ColorSpaceUsage terra.StringValue `hcl:"color_space_usage,attr"`
}

type InputSpecification struct {
	// Codec: string, required
	Codec terra.StringValue `hcl:"codec,attr" validate:"required"`
	// InputResolution: string, required
	InputResolution terra.StringValue `hcl:"input_resolution,attr" validate:"required"`
	// MaximumBitrate: string, required
	MaximumBitrate terra.StringValue `hcl:"maximum_bitrate,attr" validate:"required"`
}

type Maintenance struct {
	// MaintenanceDay: string, required
	MaintenanceDay terra.StringValue `hcl:"maintenance_day,attr" validate:"required"`
	// MaintenanceStartTime: string, required
	MaintenanceStartTime terra.StringValue `hcl:"maintenance_start_time,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type Vpc struct {
	// PublicAddressAllocationIds: list of string, required
	PublicAddressAllocationIds terra.ListValue[terra.StringValue] `hcl:"public_address_allocation_ids,attr" validate:"required"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type CdiInputSpecificationAttributes struct {
	ref terra.Reference
}

func (cis CdiInputSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return cis.ref, nil
}

func (cis CdiInputSpecificationAttributes) InternalWithRef(ref terra.Reference) CdiInputSpecificationAttributes {
	return CdiInputSpecificationAttributes{ref: ref}
}

func (cis CdiInputSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cis.ref.InternalTokens()
}

func (cis CdiInputSpecificationAttributes) Resolution() terra.StringValue {
	return terra.ReferenceAsString(cis.ref.Append("resolution"))
}

type DestinationsAttributes struct {
	ref terra.Reference
}

func (d DestinationsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DestinationsAttributes) InternalWithRef(ref terra.Reference) DestinationsAttributes {
	return DestinationsAttributes{ref: ref}
}

func (d DestinationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DestinationsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("id"))
}

func (d DestinationsAttributes) MediaPackageSettings() terra.SetValue[DestinationsMediaPackageSettingsAttributes] {
	return terra.ReferenceAsSet[DestinationsMediaPackageSettingsAttributes](d.ref.Append("media_package_settings"))
}

func (d DestinationsAttributes) MultiplexSettings() terra.ListValue[DestinationsMultiplexSettingsAttributes] {
	return terra.ReferenceAsList[DestinationsMultiplexSettingsAttributes](d.ref.Append("multiplex_settings"))
}

func (d DestinationsAttributes) Settings() terra.SetValue[DestinationsSettingsAttributes] {
	return terra.ReferenceAsSet[DestinationsSettingsAttributes](d.ref.Append("settings"))
}

type DestinationsMediaPackageSettingsAttributes struct {
	ref terra.Reference
}

func (mps DestinationsMediaPackageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mps.ref, nil
}

func (mps DestinationsMediaPackageSettingsAttributes) InternalWithRef(ref terra.Reference) DestinationsMediaPackageSettingsAttributes {
	return DestinationsMediaPackageSettingsAttributes{ref: ref}
}

func (mps DestinationsMediaPackageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mps.ref.InternalTokens()
}

func (mps DestinationsMediaPackageSettingsAttributes) ChannelId() terra.StringValue {
	return terra.ReferenceAsString(mps.ref.Append("channel_id"))
}

type DestinationsMultiplexSettingsAttributes struct {
	ref terra.Reference
}

func (ms DestinationsMultiplexSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms DestinationsMultiplexSettingsAttributes) InternalWithRef(ref terra.Reference) DestinationsMultiplexSettingsAttributes {
	return DestinationsMultiplexSettingsAttributes{ref: ref}
}

func (ms DestinationsMultiplexSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms DestinationsMultiplexSettingsAttributes) MultiplexId() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("multiplex_id"))
}

func (ms DestinationsMultiplexSettingsAttributes) ProgramName() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("program_name"))
}

type DestinationsSettingsAttributes struct {
	ref terra.Reference
}

func (s DestinationsSettingsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DestinationsSettingsAttributes) InternalWithRef(ref terra.Reference) DestinationsSettingsAttributes {
	return DestinationsSettingsAttributes{ref: ref}
}

func (s DestinationsSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DestinationsSettingsAttributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("password_param"))
}

func (s DestinationsSettingsAttributes) StreamName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("stream_name"))
}

func (s DestinationsSettingsAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("url"))
}

func (s DestinationsSettingsAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("username"))
}

type EncoderSettingsAttributes struct {
	ref terra.Reference
}

func (es EncoderSettingsAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es EncoderSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAttributes {
	return EncoderSettingsAttributes{ref: ref}
}

func (es EncoderSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es EncoderSettingsAttributes) AudioDescriptions() terra.SetValue[EncoderSettingsAudioDescriptionsAttributes] {
	return terra.ReferenceAsSet[EncoderSettingsAudioDescriptionsAttributes](es.ref.Append("audio_descriptions"))
}

func (es EncoderSettingsAttributes) AvailBlanking() terra.ListValue[EncoderSettingsAvailBlankingAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAvailBlankingAttributes](es.ref.Append("avail_blanking"))
}

func (es EncoderSettingsAttributes) CaptionDescriptions() terra.ListValue[EncoderSettingsCaptionDescriptionsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsAttributes](es.ref.Append("caption_descriptions"))
}

func (es EncoderSettingsAttributes) GlobalConfiguration() terra.ListValue[EncoderSettingsGlobalConfigurationAttributes] {
	return terra.ReferenceAsList[EncoderSettingsGlobalConfigurationAttributes](es.ref.Append("global_configuration"))
}

func (es EncoderSettingsAttributes) MotionGraphicsConfiguration() terra.ListValue[EncoderSettingsMotionGraphicsConfigurationAttributes] {
	return terra.ReferenceAsList[EncoderSettingsMotionGraphicsConfigurationAttributes](es.ref.Append("motion_graphics_configuration"))
}

func (es EncoderSettingsAttributes) NielsenConfiguration() terra.ListValue[EncoderSettingsNielsenConfigurationAttributes] {
	return terra.ReferenceAsList[EncoderSettingsNielsenConfigurationAttributes](es.ref.Append("nielsen_configuration"))
}

func (es EncoderSettingsAttributes) OutputGroups() terra.ListValue[EncoderSettingsOutputGroupsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsAttributes](es.ref.Append("output_groups"))
}

func (es EncoderSettingsAttributes) TimecodeConfig() terra.ListValue[EncoderSettingsTimecodeConfigAttributes] {
	return terra.ReferenceAsList[EncoderSettingsTimecodeConfigAttributes](es.ref.Append("timecode_config"))
}

func (es EncoderSettingsAttributes) VideoDescriptions() terra.ListValue[EncoderSettingsVideoDescriptionsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsAttributes](es.ref.Append("video_descriptions"))
}

type EncoderSettingsAudioDescriptionsAttributes struct {
	ref terra.Reference
}

func (ad EncoderSettingsAudioDescriptionsAttributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad EncoderSettingsAudioDescriptionsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsAttributes {
	return EncoderSettingsAudioDescriptionsAttributes{ref: ref}
}

func (ad EncoderSettingsAudioDescriptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ad.ref.InternalTokens()
}

func (ad EncoderSettingsAudioDescriptionsAttributes) AudioSelectorName() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("audio_selector_name"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) AudioType() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("audio_type"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) AudioTypeControl() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("audio_type_control"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("language_code"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) LanguageCodeControl() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("language_code_control"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("name"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) StreamName() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("stream_name"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) AudioNormalizationSettings() terra.ListValue[EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes](ad.ref.Append("audio_normalization_settings"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) AudioWatermarkSettings() terra.ListValue[EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes](ad.ref.Append("audio_watermark_settings"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) CodecSettings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsAttributes](ad.ref.Append("codec_settings"))
}

func (ad EncoderSettingsAudioDescriptionsAttributes) RemixSettings() terra.ListValue[EncoderSettingsAudioDescriptionsRemixSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsRemixSettingsAttributes](ad.ref.Append("remix_settings"))
}

type EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes struct {
	ref terra.Reference
}

func (ans EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ans.ref, nil
}

func (ans EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes {
	return EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes{ref: ref}
}

func (ans EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ans.ref.InternalTokens()
}

func (ans EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes) Algorithm() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("algorithm"))
}

func (ans EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes) AlgorithmControl() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("algorithm_control"))
}

func (ans EncoderSettingsAudioDescriptionsAudioNormalizationSettingsAttributes) TargetLkfs() terra.NumberValue {
	return terra.ReferenceAsNumber(ans.ref.Append("target_lkfs"))
}

type EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes struct {
	ref terra.Reference
}

func (aws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes) InternalRef() (terra.Reference, error) {
	return aws.ref, nil
}

func (aws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes {
	return EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes{ref: ref}
}

func (aws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aws.ref.InternalTokens()
}

func (aws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsAttributes) NielsenWatermarksSettings() terra.ListValue[EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes](aws.ref.Append("nielsen_watermarks_settings"))
}

type EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes struct {
	ref terra.Reference
}

func (nws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes) InternalRef() (terra.Reference, error) {
	return nws.ref, nil
}

func (nws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes {
	return EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes{ref: ref}
}

func (nws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nws.ref.InternalTokens()
}

func (nws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes) NielsenDistributionType() terra.StringValue {
	return terra.ReferenceAsString(nws.ref.Append("nielsen_distribution_type"))
}

func (nws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes) NielsenCbetSettings() terra.ListValue[EncoderSettingsAudioDescriptions6C245389Attributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptions6C245389Attributes](nws.ref.Append("nielsen_cbet_settings"))
}

func (nws EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsAttributes) NielsenNaesIiNwSettings() terra.ListValue[EncoderSettingsAudioDescriptions30D774C5Attributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptions30D774C5Attributes](nws.ref.Append("nielsen_naes_ii_nw_settings"))
}

type EncoderSettingsAudioDescriptions6C245389Attributes struct {
	ref terra.Reference
}

func (ncs EncoderSettingsAudioDescriptions6C245389Attributes) InternalRef() (terra.Reference, error) {
	return ncs.ref, nil
}

func (ncs EncoderSettingsAudioDescriptions6C245389Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptions6C245389Attributes {
	return EncoderSettingsAudioDescriptions6C245389Attributes{ref: ref}
}

func (ncs EncoderSettingsAudioDescriptions6C245389Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ncs.ref.InternalTokens()
}

func (ncs EncoderSettingsAudioDescriptions6C245389Attributes) CbetCheckDigitString() terra.StringValue {
	return terra.ReferenceAsString(ncs.ref.Append("cbet_check_digit_string"))
}

func (ncs EncoderSettingsAudioDescriptions6C245389Attributes) CbetStepaside() terra.StringValue {
	return terra.ReferenceAsString(ncs.ref.Append("cbet_stepaside"))
}

func (ncs EncoderSettingsAudioDescriptions6C245389Attributes) Csid() terra.StringValue {
	return terra.ReferenceAsString(ncs.ref.Append("csid"))
}

type EncoderSettingsAudioDescriptions30D774C5Attributes struct {
	ref terra.Reference
}

func (nnins EncoderSettingsAudioDescriptions30D774C5Attributes) InternalRef() (terra.Reference, error) {
	return nnins.ref, nil
}

func (nnins EncoderSettingsAudioDescriptions30D774C5Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptions30D774C5Attributes {
	return EncoderSettingsAudioDescriptions30D774C5Attributes{ref: ref}
}

func (nnins EncoderSettingsAudioDescriptions30D774C5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nnins.ref.InternalTokens()
}

func (nnins EncoderSettingsAudioDescriptions30D774C5Attributes) CheckDigitString() terra.StringValue {
	return terra.ReferenceAsString(nnins.ref.Append("check_digit_string"))
}

func (nnins EncoderSettingsAudioDescriptions30D774C5Attributes) Sid() terra.NumberValue {
	return terra.ReferenceAsNumber(nnins.ref.Append("sid"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsAttributes struct {
	ref terra.Reference
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsAttributes{ref: ref}
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) AacSettings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes](cs.ref.Append("aac_settings"))
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) Ac3Settings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes](cs.ref.Append("ac3_settings"))
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) Eac3AtmosSettings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes](cs.ref.Append("eac3_atmos_settings"))
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) Eac3Settings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes](cs.ref.Append("eac3_settings"))
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) Mp2Settings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes](cs.ref.Append("mp2_settings"))
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) PassThroughSettings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes](cs.ref.Append("pass_through_settings"))
}

func (cs EncoderSettingsAudioDescriptionsCodecSettingsAttributes) WavSettings() terra.ListValue[EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes](cs.ref.Append("wav_settings"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes struct {
	ref terra.Reference
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes{ref: ref}
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(as.ref.Append("bitrate"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) CodingMode() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("coding_mode"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) InputType() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("input_type"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) Profile() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("profile"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) RateControlMode() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("rate_control_mode"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) RawFormat() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("raw_format"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) SampleRate() terra.NumberValue {
	return terra.ReferenceAsNumber(as.ref.Append("sample_rate"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) Spec() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("spec"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsAttributes) VbrQuality() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("vbr_quality"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes struct {
	ref terra.Reference
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes{ref: ref}
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(as.ref.Append("bitrate"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) BitstreamMode() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("bitstream_mode"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) CodingMode() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("coding_mode"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) Dialnorm() terra.NumberValue {
	return terra.ReferenceAsNumber(as.ref.Append("dialnorm"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) DrcProfile() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("drc_profile"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) LfeFilter() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("lfe_filter"))
}

func (as EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsAttributes) MetadataControl() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("metadata_control"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes struct {
	ref terra.Reference
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) InternalRef() (terra.Reference, error) {
	return eas.ref, nil
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes{ref: ref}
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eas.ref.InternalTokens()
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(eas.ref.Append("bitrate"))
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) CodingMode() terra.StringValue {
	return terra.ReferenceAsString(eas.ref.Append("coding_mode"))
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) Dialnorm() terra.NumberValue {
	return terra.ReferenceAsNumber(eas.ref.Append("dialnorm"))
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) DrcLine() terra.StringValue {
	return terra.ReferenceAsString(eas.ref.Append("drc_line"))
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) DrcRf() terra.StringValue {
	return terra.ReferenceAsString(eas.ref.Append("drc_rf"))
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) HeightTrim() terra.NumberValue {
	return terra.ReferenceAsNumber(eas.ref.Append("height_trim"))
}

func (eas EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsAttributes) SurroundTrim() terra.NumberValue {
	return terra.ReferenceAsNumber(eas.ref.Append("surround_trim"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes struct {
	ref terra.Reference
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes{ref: ref}
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) AttenuationControl() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("attenuation_control"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("bitrate"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) BitstreamMode() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("bitstream_mode"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) CodingMode() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("coding_mode"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) DcFilter() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("dc_filter"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) Dialnorm() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("dialnorm"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) DrcLine() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("drc_line"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) DrcRf() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("drc_rf"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) LfeControl() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("lfe_control"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) LfeFilter() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("lfe_filter"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) LoRoCenterMixLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("lo_ro_center_mix_level"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) LoRoSurroundMixLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("lo_ro_surround_mix_level"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) LtRtCenterMixLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("lt_rt_center_mix_level"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) LtRtSurroundMixLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(es.ref.Append("lt_rt_surround_mix_level"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) MetadataControl() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("metadata_control"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) PassthroughControl() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("passthrough_control"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) PhaseControl() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("phase_control"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) StereoDownmix() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("stereo_downmix"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) SurroundExMode() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("surround_ex_mode"))
}

func (es EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsAttributes) SurroundMode() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("surround_mode"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes struct {
	ref terra.Reference
}

func (ms EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes{ref: ref}
}

func (ms EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("bitrate"))
}

func (ms EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes) CodingMode() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("coding_mode"))
}

func (ms EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsAttributes) SampleRate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("sample_rate"))
}

type EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes struct {
	ref terra.Reference
}

func (pts EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes) InternalRef() (terra.Reference, error) {
	return pts.ref, nil
}

func (pts EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes{ref: ref}
}

func (pts EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pts.ref.InternalTokens()
}

type EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes struct {
	ref terra.Reference
}

func (ws EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ws.ref, nil
}

func (ws EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes {
	return EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes{ref: ref}
}

func (ws EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ws.ref.InternalTokens()
}

func (ws EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes) BitDepth() terra.NumberValue {
	return terra.ReferenceAsNumber(ws.ref.Append("bit_depth"))
}

func (ws EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes) CodingMode() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("coding_mode"))
}

func (ws EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsAttributes) SampleRate() terra.NumberValue {
	return terra.ReferenceAsNumber(ws.ref.Append("sample_rate"))
}

type EncoderSettingsAudioDescriptionsRemixSettingsAttributes struct {
	ref terra.Reference
}

func (rs EncoderSettingsAudioDescriptionsRemixSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs EncoderSettingsAudioDescriptionsRemixSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsRemixSettingsAttributes {
	return EncoderSettingsAudioDescriptionsRemixSettingsAttributes{ref: ref}
}

func (rs EncoderSettingsAudioDescriptionsRemixSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs EncoderSettingsAudioDescriptionsRemixSettingsAttributes) ChannelsIn() terra.NumberValue {
	return terra.ReferenceAsNumber(rs.ref.Append("channels_in"))
}

func (rs EncoderSettingsAudioDescriptionsRemixSettingsAttributes) ChannelsOut() terra.NumberValue {
	return terra.ReferenceAsNumber(rs.ref.Append("channels_out"))
}

func (rs EncoderSettingsAudioDescriptionsRemixSettingsAttributes) ChannelMappings() terra.SetValue[EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes] {
	return terra.ReferenceAsSet[EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes](rs.ref.Append("channel_mappings"))
}

type EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes struct {
	ref terra.Reference
}

func (cm EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes) InternalRef() (terra.Reference, error) {
	return cm.ref, nil
}

func (cm EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes {
	return EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes{ref: ref}
}

func (cm EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cm.ref.InternalTokens()
}

func (cm EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes) OutputChannel() terra.NumberValue {
	return terra.ReferenceAsNumber(cm.ref.Append("output_channel"))
}

func (cm EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsAttributes) InputChannelLevels() terra.SetValue[EncoderSettingsAudioDescriptionsA72D0F60Attributes] {
	return terra.ReferenceAsSet[EncoderSettingsAudioDescriptionsA72D0F60Attributes](cm.ref.Append("input_channel_levels"))
}

type EncoderSettingsAudioDescriptionsA72D0F60Attributes struct {
	ref terra.Reference
}

func (icl EncoderSettingsAudioDescriptionsA72D0F60Attributes) InternalRef() (terra.Reference, error) {
	return icl.ref, nil
}

func (icl EncoderSettingsAudioDescriptionsA72D0F60Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsAudioDescriptionsA72D0F60Attributes {
	return EncoderSettingsAudioDescriptionsA72D0F60Attributes{ref: ref}
}

func (icl EncoderSettingsAudioDescriptionsA72D0F60Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return icl.ref.InternalTokens()
}

func (icl EncoderSettingsAudioDescriptionsA72D0F60Attributes) Gain() terra.NumberValue {
	return terra.ReferenceAsNumber(icl.ref.Append("gain"))
}

func (icl EncoderSettingsAudioDescriptionsA72D0F60Attributes) InputChannel() terra.NumberValue {
	return terra.ReferenceAsNumber(icl.ref.Append("input_channel"))
}

type EncoderSettingsAvailBlankingAttributes struct {
	ref terra.Reference
}

func (ab EncoderSettingsAvailBlankingAttributes) InternalRef() (terra.Reference, error) {
	return ab.ref, nil
}

func (ab EncoderSettingsAvailBlankingAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAvailBlankingAttributes {
	return EncoderSettingsAvailBlankingAttributes{ref: ref}
}

func (ab EncoderSettingsAvailBlankingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ab.ref.InternalTokens()
}

func (ab EncoderSettingsAvailBlankingAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ab.ref.Append("state"))
}

func (ab EncoderSettingsAvailBlankingAttributes) AvailBlankingImage() terra.ListValue[EncoderSettingsAvailBlankingAvailBlankingImageAttributes] {
	return terra.ReferenceAsList[EncoderSettingsAvailBlankingAvailBlankingImageAttributes](ab.ref.Append("avail_blanking_image"))
}

type EncoderSettingsAvailBlankingAvailBlankingImageAttributes struct {
	ref terra.Reference
}

func (abi EncoderSettingsAvailBlankingAvailBlankingImageAttributes) InternalRef() (terra.Reference, error) {
	return abi.ref, nil
}

func (abi EncoderSettingsAvailBlankingAvailBlankingImageAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsAvailBlankingAvailBlankingImageAttributes {
	return EncoderSettingsAvailBlankingAvailBlankingImageAttributes{ref: ref}
}

func (abi EncoderSettingsAvailBlankingAvailBlankingImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return abi.ref.InternalTokens()
}

func (abi EncoderSettingsAvailBlankingAvailBlankingImageAttributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(abi.ref.Append("password_param"))
}

func (abi EncoderSettingsAvailBlankingAvailBlankingImageAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(abi.ref.Append("uri"))
}

func (abi EncoderSettingsAvailBlankingAvailBlankingImageAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(abi.ref.Append("username"))
}

type EncoderSettingsCaptionDescriptionsAttributes struct {
	ref terra.Reference
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) InternalRef() (terra.Reference, error) {
	return cd.ref, nil
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsAttributes {
	return EncoderSettingsCaptionDescriptionsAttributes{ref: ref}
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cd.ref.InternalTokens()
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) Accessibility() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("accessibility"))
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) CaptionSelectorName() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("caption_selector_name"))
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("language_code"))
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) LanguageDescription() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("language_description"))
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("name"))
}

func (cd EncoderSettingsCaptionDescriptionsAttributes) DestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes](cd.ref.Append("destination_settings"))
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes{ref: ref}
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) AribDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes](ds.ref.Append("arib_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) BurnInDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes](ds.ref.Append("burn_in_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) DvbSubDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes](ds.ref.Append("dvb_sub_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) EbuTtDDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes](ds.ref.Append("ebu_tt_d_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) EmbeddedDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes](ds.ref.Append("embedded_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) EmbeddedPlusScte20DestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes](ds.ref.Append("embedded_plus_scte20_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) RtmpCaptionInfoDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes](ds.ref.Append("rtmp_caption_info_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) Scte20PlusEmbeddedDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes](ds.ref.Append("scte20_plus_embedded_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) Scte27DestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes](ds.ref.Append("scte27_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) SmpteTtDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes](ds.ref.Append("smpte_tt_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) TeletextDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes](ds.ref.Append("teletext_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) TtmlDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes](ds.ref.Append("ttml_destination_settings"))
}

func (ds EncoderSettingsCaptionDescriptionsDestinationSettingsAttributes) WebvttDestinationSettings() terra.ListValue[EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes](ds.ref.Append("webvtt_destination_settings"))
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (ads EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ads.ref, nil
}

func (ads EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes{ref: ref}
}

func (ads EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ads.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return bids.ref, nil
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes{ref: ref}
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bids.ref.InternalTokens()
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) Alignment() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("alignment"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) BackgroundColor() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("background_color"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) BackgroundOpacity() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("background_opacity"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) FontColor() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("font_color"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) FontOpacity() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("font_opacity"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) FontResolution() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("font_resolution"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) FontSize() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("font_size"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) OutlineColor() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("outline_color"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) OutlineSize() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("outline_size"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) ShadowColor() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("shadow_color"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) ShadowOpacity() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("shadow_opacity"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) ShadowXOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("shadow_x_offset"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) ShadowYOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("shadow_y_offset"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) TeletextGridControl() terra.StringValue {
	return terra.ReferenceAsString(bids.ref.Append("teletext_grid_control"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) XPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("x_position"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) YPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(bids.ref.Append("y_position"))
}

func (bids EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsAttributes) Font() terra.ListValue[EncoderSettingsCaptionDescriptionsA154227AAttributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptionsA154227AAttributes](bids.ref.Append("font"))
}

type EncoderSettingsCaptionDescriptionsA154227AAttributes struct {
	ref terra.Reference
}

func (f EncoderSettingsCaptionDescriptionsA154227AAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f EncoderSettingsCaptionDescriptionsA154227AAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsA154227AAttributes {
	return EncoderSettingsCaptionDescriptionsA154227AAttributes{ref: ref}
}

func (f EncoderSettingsCaptionDescriptionsA154227AAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f EncoderSettingsCaptionDescriptionsA154227AAttributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("password_param"))
}

func (f EncoderSettingsCaptionDescriptionsA154227AAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("uri"))
}

func (f EncoderSettingsCaptionDescriptionsA154227AAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("username"))
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dsds.ref, nil
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes{ref: ref}
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsds.ref.InternalTokens()
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) Alignment() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("alignment"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) BackgroundColor() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("background_color"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) BackgroundOpacity() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("background_opacity"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) FontColor() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("font_color"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) FontOpacity() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("font_opacity"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) FontResolution() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("font_resolution"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) FontSize() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("font_size"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) OutlineColor() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("outline_color"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) OutlineSize() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("outline_size"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) ShadowColor() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("shadow_color"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) ShadowOpacity() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("shadow_opacity"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) ShadowXOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("shadow_x_offset"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) ShadowYOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("shadow_y_offset"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) TeletextGridControl() terra.StringValue {
	return terra.ReferenceAsString(dsds.ref.Append("teletext_grid_control"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) XPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("x_position"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) YPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(dsds.ref.Append("y_position"))
}

func (dsds EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsAttributes) Font() terra.ListValue[EncoderSettingsCaptionDescriptions37F9F137Attributes] {
	return terra.ReferenceAsList[EncoderSettingsCaptionDescriptions37F9F137Attributes](dsds.ref.Append("font"))
}

type EncoderSettingsCaptionDescriptions37F9F137Attributes struct {
	ref terra.Reference
}

func (f EncoderSettingsCaptionDescriptions37F9F137Attributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f EncoderSettingsCaptionDescriptions37F9F137Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptions37F9F137Attributes {
	return EncoderSettingsCaptionDescriptions37F9F137Attributes{ref: ref}
}

func (f EncoderSettingsCaptionDescriptions37F9F137Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f EncoderSettingsCaptionDescriptions37F9F137Attributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("password_param"))
}

func (f EncoderSettingsCaptionDescriptions37F9F137Attributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("uri"))
}

func (f EncoderSettingsCaptionDescriptions37F9F137Attributes) Username() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("username"))
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return etdds.ref, nil
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes{ref: ref}
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return etdds.ref.InternalTokens()
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) CopyrightHolder() terra.StringValue {
	return terra.ReferenceAsString(etdds.ref.Append("copyright_holder"))
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) FillLineGap() terra.StringValue {
	return terra.ReferenceAsString(etdds.ref.Append("fill_line_gap"))
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) FontFamily() terra.StringValue {
	return terra.ReferenceAsString(etdds.ref.Append("font_family"))
}

func (etdds EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsAttributes) StyleControl() terra.StringValue {
	return terra.ReferenceAsString(etdds.ref.Append("style_control"))
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (eds EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return eds.ref, nil
}

func (eds EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes{ref: ref}
}

func (eds EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eds.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes struct {
	ref terra.Reference
}

func (epsds EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return epsds.ref, nil
}

func (epsds EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes{ref: ref}
}

func (epsds EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return epsds.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (rcids EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rcids.ref, nil
}

func (rcids EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes{ref: ref}
}

func (rcids EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcids.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (speds EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return speds.ref, nil
}

func (speds EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes{ref: ref}
}

func (speds EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return speds.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes struct {
	ref terra.Reference
}

func (sds EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return sds.ref, nil
}

func (sds EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes{ref: ref}
}

func (sds EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sds.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (stds EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return stds.ref, nil
}

func (stds EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes{ref: ref}
}

func (stds EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return stds.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tds.ref, nil
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes{ref: ref}
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tds.ref.InternalTokens()
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tds.ref, nil
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes{ref: ref}
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tds.ref.InternalTokens()
}

func (tds EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsAttributes) StyleControl() terra.StringValue {
	return terra.ReferenceAsString(tds.ref.Append("style_control"))
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes struct {
	ref terra.Reference
}

func (wds EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes) InternalRef() (terra.Reference, error) {
	return wds.ref, nil
}

func (wds EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes {
	return EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes{ref: ref}
}

func (wds EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wds.ref.InternalTokens()
}

func (wds EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsAttributes) StyleControl() terra.StringValue {
	return terra.ReferenceAsString(wds.ref.Append("style_control"))
}

type EncoderSettingsGlobalConfigurationAttributes struct {
	ref terra.Reference
}

func (gc EncoderSettingsGlobalConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return gc.ref, nil
}

func (gc EncoderSettingsGlobalConfigurationAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsGlobalConfigurationAttributes {
	return EncoderSettingsGlobalConfigurationAttributes{ref: ref}
}

func (gc EncoderSettingsGlobalConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gc.ref.InternalTokens()
}

func (gc EncoderSettingsGlobalConfigurationAttributes) InitialAudioGain() terra.NumberValue {
	return terra.ReferenceAsNumber(gc.ref.Append("initial_audio_gain"))
}

func (gc EncoderSettingsGlobalConfigurationAttributes) InputEndAction() terra.StringValue {
	return terra.ReferenceAsString(gc.ref.Append("input_end_action"))
}

func (gc EncoderSettingsGlobalConfigurationAttributes) OutputLockingMode() terra.StringValue {
	return terra.ReferenceAsString(gc.ref.Append("output_locking_mode"))
}

func (gc EncoderSettingsGlobalConfigurationAttributes) OutputTimingSource() terra.StringValue {
	return terra.ReferenceAsString(gc.ref.Append("output_timing_source"))
}

func (gc EncoderSettingsGlobalConfigurationAttributes) SupportLowFramerateInputs() terra.StringValue {
	return terra.ReferenceAsString(gc.ref.Append("support_low_framerate_inputs"))
}

func (gc EncoderSettingsGlobalConfigurationAttributes) InputLossBehavior() terra.ListValue[EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes] {
	return terra.ReferenceAsList[EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes](gc.ref.Append("input_loss_behavior"))
}

type EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes struct {
	ref terra.Reference
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) InternalRef() (terra.Reference, error) {
	return ilb.ref, nil
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes {
	return EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes{ref: ref}
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ilb.ref.InternalTokens()
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) BlackFrameMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(ilb.ref.Append("black_frame_msec"))
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) InputLossImageColor() terra.StringValue {
	return terra.ReferenceAsString(ilb.ref.Append("input_loss_image_color"))
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) InputLossImageType() terra.StringValue {
	return terra.ReferenceAsString(ilb.ref.Append("input_loss_image_type"))
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) RepeatFrameMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(ilb.ref.Append("repeat_frame_msec"))
}

func (ilb EncoderSettingsGlobalConfigurationInputLossBehaviorAttributes) InputLossImageSlate() terra.ListValue[EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes] {
	return terra.ReferenceAsList[EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes](ilb.ref.Append("input_loss_image_slate"))
}

type EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes struct {
	ref terra.Reference
}

func (ilis EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes) InternalRef() (terra.Reference, error) {
	return ilis.ref, nil
}

func (ilis EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes {
	return EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes{ref: ref}
}

func (ilis EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ilis.ref.InternalTokens()
}

func (ilis EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(ilis.ref.Append("password_param"))
}

func (ilis EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(ilis.ref.Append("uri"))
}

func (ilis EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(ilis.ref.Append("username"))
}

type EncoderSettingsMotionGraphicsConfigurationAttributes struct {
	ref terra.Reference
}

func (mgc EncoderSettingsMotionGraphicsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return mgc.ref, nil
}

func (mgc EncoderSettingsMotionGraphicsConfigurationAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsMotionGraphicsConfigurationAttributes {
	return EncoderSettingsMotionGraphicsConfigurationAttributes{ref: ref}
}

func (mgc EncoderSettingsMotionGraphicsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgc.ref.InternalTokens()
}

func (mgc EncoderSettingsMotionGraphicsConfigurationAttributes) MotionGraphicsInsertion() terra.StringValue {
	return terra.ReferenceAsString(mgc.ref.Append("motion_graphics_insertion"))
}

func (mgc EncoderSettingsMotionGraphicsConfigurationAttributes) MotionGraphicsSettings() terra.ListValue[EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes](mgc.ref.Append("motion_graphics_settings"))
}

type EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes struct {
	ref terra.Reference
}

func (mgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mgs.ref, nil
}

func (mgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes {
	return EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes{ref: ref}
}

func (mgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgs.ref.InternalTokens()
}

func (mgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsAttributes) HtmlMotionGraphicsSettings() terra.ListValue[EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes](mgs.ref.Append("html_motion_graphics_settings"))
}

type EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes struct {
	ref terra.Reference
}

func (hmgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes) InternalRef() (terra.Reference, error) {
	return hmgs.ref, nil
}

func (hmgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes {
	return EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes{ref: ref}
}

func (hmgs EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hmgs.ref.InternalTokens()
}

type EncoderSettingsNielsenConfigurationAttributes struct {
	ref terra.Reference
}

func (nc EncoderSettingsNielsenConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc EncoderSettingsNielsenConfigurationAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsNielsenConfigurationAttributes {
	return EncoderSettingsNielsenConfigurationAttributes{ref: ref}
}

func (nc EncoderSettingsNielsenConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc EncoderSettingsNielsenConfigurationAttributes) DistributorId() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("distributor_id"))
}

func (nc EncoderSettingsNielsenConfigurationAttributes) NielsenPcmToId3Tagging() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("nielsen_pcm_to_id3_tagging"))
}

type EncoderSettingsOutputGroupsAttributes struct {
	ref terra.Reference
}

func (og EncoderSettingsOutputGroupsAttributes) InternalRef() (terra.Reference, error) {
	return og.ref, nil
}

func (og EncoderSettingsOutputGroupsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsAttributes {
	return EncoderSettingsOutputGroupsAttributes{ref: ref}
}

func (og EncoderSettingsOutputGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return og.ref.InternalTokens()
}

func (og EncoderSettingsOutputGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(og.ref.Append("name"))
}

func (og EncoderSettingsOutputGroupsAttributes) OutputGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsAttributes](og.ref.Append("output_group_settings"))
}

func (og EncoderSettingsOutputGroupsAttributes) Outputs() terra.ListValue[EncoderSettingsOutputGroupsOutputsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputsAttributes](og.ref.Append("outputs"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsAttributes struct {
	ref terra.Reference
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ogs.ref, nil
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsAttributes{ref: ref}
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ogs.ref.InternalTokens()
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) ArchiveGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes](ogs.ref.Append("archive_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) FrameCaptureGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes](ogs.ref.Append("frame_capture_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) HlsGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes](ogs.ref.Append("hls_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) MediaPackageGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes](ogs.ref.Append("media_package_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) MsSmoothGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes](ogs.ref.Append("ms_smooth_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) MultiplexGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes](ogs.ref.Append("multiplex_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) RtmpGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes](ogs.ref.Append("rtmp_group_settings"))
}

func (ogs EncoderSettingsOutputGroupsOutputGroupSettingsAttributes) UdpGroupSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes](ogs.ref.Append("udp_group_settings"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes struct {
	ref terra.Reference
}

func (ags EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ags.ref, nil
}

func (ags EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes{ref: ref}
}

func (ags EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ags.ref.InternalTokens()
}

func (ags EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes) RolloverInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ags.ref.Append("rollover_interval"))
}

func (ags EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes) ArchiveCdnSettings() terra.ListValue[EncoderSettingsOutputGroups6Ca5830EAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups6Ca5830EAttributes](ags.ref.Append("archive_cdn_settings"))
}

func (ags EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsAttributes) Destination() terra.ListValue[EncoderSettingsOutputGroups946A5B94Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups946A5B94Attributes](ags.ref.Append("destination"))
}

type EncoderSettingsOutputGroups6Ca5830EAttributes struct {
	ref terra.Reference
}

func (acs EncoderSettingsOutputGroups6Ca5830EAttributes) InternalRef() (terra.Reference, error) {
	return acs.ref, nil
}

func (acs EncoderSettingsOutputGroups6Ca5830EAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups6Ca5830EAttributes {
	return EncoderSettingsOutputGroups6Ca5830EAttributes{ref: ref}
}

func (acs EncoderSettingsOutputGroups6Ca5830EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acs.ref.InternalTokens()
}

func (acs EncoderSettingsOutputGroups6Ca5830EAttributes) ArchiveS3Settings() terra.ListValue[EncoderSettingsOutputGroups8B1E8283Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups8B1E8283Attributes](acs.ref.Append("archive_s3_settings"))
}

type EncoderSettingsOutputGroups8B1E8283Attributes struct {
	ref terra.Reference
}

func (ass EncoderSettingsOutputGroups8B1E8283Attributes) InternalRef() (terra.Reference, error) {
	return ass.ref, nil
}

func (ass EncoderSettingsOutputGroups8B1E8283Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups8B1E8283Attributes {
	return EncoderSettingsOutputGroups8B1E8283Attributes{ref: ref}
}

func (ass EncoderSettingsOutputGroups8B1E8283Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ass.ref.InternalTokens()
}

func (ass EncoderSettingsOutputGroups8B1E8283Attributes) CannedAcl() terra.StringValue {
	return terra.ReferenceAsString(ass.ref.Append("canned_acl"))
}

type EncoderSettingsOutputGroups946A5B94Attributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroups946A5B94Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroups946A5B94Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups946A5B94Attributes {
	return EncoderSettingsOutputGroups946A5B94Attributes{ref: ref}
}

func (d EncoderSettingsOutputGroups946A5B94Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroups946A5B94Attributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes struct {
	ref terra.Reference
}

func (fcgs EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return fcgs.ref, nil
}

func (fcgs EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes{ref: ref}
}

func (fcgs EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fcgs.ref.InternalTokens()
}

func (fcgs EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes) Destination() terra.ListValue[EncoderSettingsOutputGroups0873Af26Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups0873Af26Attributes](fcgs.ref.Append("destination"))
}

func (fcgs EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsAttributes) FrameCaptureCdnSettings() terra.ListValue[EncoderSettingsOutputGroupsBecbf118Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsBecbf118Attributes](fcgs.ref.Append("frame_capture_cdn_settings"))
}

type EncoderSettingsOutputGroups0873Af26Attributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroups0873Af26Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroups0873Af26Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups0873Af26Attributes {
	return EncoderSettingsOutputGroups0873Af26Attributes{ref: ref}
}

func (d EncoderSettingsOutputGroups0873Af26Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroups0873Af26Attributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsBecbf118Attributes struct {
	ref terra.Reference
}

func (fccs EncoderSettingsOutputGroupsBecbf118Attributes) InternalRef() (terra.Reference, error) {
	return fccs.ref, nil
}

func (fccs EncoderSettingsOutputGroupsBecbf118Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsBecbf118Attributes {
	return EncoderSettingsOutputGroupsBecbf118Attributes{ref: ref}
}

func (fccs EncoderSettingsOutputGroupsBecbf118Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fccs.ref.InternalTokens()
}

func (fccs EncoderSettingsOutputGroupsBecbf118Attributes) FrameCaptureS3Settings() terra.ListValue[EncoderSettingsOutputGroups73Eaea20Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups73Eaea20Attributes](fccs.ref.Append("frame_capture_s3_settings"))
}

type EncoderSettingsOutputGroups73Eaea20Attributes struct {
	ref terra.Reference
}

func (fcss EncoderSettingsOutputGroups73Eaea20Attributes) InternalRef() (terra.Reference, error) {
	return fcss.ref, nil
}

func (fcss EncoderSettingsOutputGroups73Eaea20Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups73Eaea20Attributes {
	return EncoderSettingsOutputGroups73Eaea20Attributes{ref: ref}
}

func (fcss EncoderSettingsOutputGroups73Eaea20Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fcss.ref.InternalTokens()
}

func (fcss EncoderSettingsOutputGroups73Eaea20Attributes) CannedAcl() terra.StringValue {
	return terra.ReferenceAsString(fcss.ref.Append("canned_acl"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes struct {
	ref terra.Reference
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return hgs.ref, nil
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes{ref: ref}
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hgs.ref.InternalTokens()
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) AdMarkers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](hgs.ref.Append("ad_markers"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) BaseUrlContent() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("base_url_content"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) BaseUrlContent1() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("base_url_content1"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) BaseUrlManifest() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("base_url_manifest"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) BaseUrlManifest1() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("base_url_manifest1"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) CaptionLanguageSetting() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("caption_language_setting"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ClientCache() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("client_cache"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) CodecSpecification() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("codec_specification"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ConstantIv() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("constant_iv"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) DirectoryStructure() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("directory_structure"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) DiscontinuityTags() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("discontinuity_tags"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("encryption_type"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) HlsId3SegmentTagging() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("hls_id3_segment_tagging"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) IframeOnlyPlaylists() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("iframe_only_playlists"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) IncompleteSegmentBehavior() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("incomplete_segment_behavior"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) IndexNSegments() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("index_n_segments"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) InputLossAction() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("input_loss_action"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) IvInManifest() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("iv_in_manifest"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) IvSource() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("iv_source"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) KeepSegments() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("keep_segments"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) KeyFormat() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("key_format"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) KeyFormatVersions() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("key_format_versions"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ManifestCompression() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("manifest_compression"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ManifestDurationFormat() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("manifest_duration_format"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) MinSegmentLength() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("min_segment_length"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("mode"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) OutputSelection() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("output_selection"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ProgramDateTime() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("program_date_time"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ProgramDateTimeClock() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("program_date_time_clock"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) ProgramDateTimePeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("program_date_time_period"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) RedundantManifest() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("redundant_manifest"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) SegmentLength() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("segment_length"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) SegmentsPerSubdirectory() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("segments_per_subdirectory"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) StreamInfResolution() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("stream_inf_resolution"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) TimedMetadataId3Frame() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("timed_metadata_id3_frame"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) TimedMetadataId3Period() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("timed_metadata_id3_period"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) TimestampDeltaMilliseconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hgs.ref.Append("timestamp_delta_milliseconds"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) TsFileMode() terra.StringValue {
	return terra.ReferenceAsString(hgs.ref.Append("ts_file_mode"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) CaptionLanguageMappings() terra.SetValue[EncoderSettingsOutputGroups56B1D910Attributes] {
	return terra.ReferenceAsSet[EncoderSettingsOutputGroups56B1D910Attributes](hgs.ref.Append("caption_language_mappings"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) Destination() terra.ListValue[EncoderSettingsOutputGroups51D9552AAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups51D9552AAttributes](hgs.ref.Append("destination"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) HlsCdnSettings() terra.ListValue[EncoderSettingsOutputGroupsDbdb908CAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsDbdb908CAttributes](hgs.ref.Append("hls_cdn_settings"))
}

func (hgs EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAttributes) KeyProviderSettings() terra.ListValue[EncoderSettingsOutputGroups4A4032A1Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups4A4032A1Attributes](hgs.ref.Append("key_provider_settings"))
}

type EncoderSettingsOutputGroups56B1D910Attributes struct {
	ref terra.Reference
}

func (clm EncoderSettingsOutputGroups56B1D910Attributes) InternalRef() (terra.Reference, error) {
	return clm.ref, nil
}

func (clm EncoderSettingsOutputGroups56B1D910Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups56B1D910Attributes {
	return EncoderSettingsOutputGroups56B1D910Attributes{ref: ref}
}

func (clm EncoderSettingsOutputGroups56B1D910Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return clm.ref.InternalTokens()
}

func (clm EncoderSettingsOutputGroups56B1D910Attributes) CaptionChannel() terra.NumberValue {
	return terra.ReferenceAsNumber(clm.ref.Append("caption_channel"))
}

func (clm EncoderSettingsOutputGroups56B1D910Attributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(clm.ref.Append("language_code"))
}

func (clm EncoderSettingsOutputGroups56B1D910Attributes) LanguageDescription() terra.StringValue {
	return terra.ReferenceAsString(clm.ref.Append("language_description"))
}

type EncoderSettingsOutputGroups51D9552AAttributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroups51D9552AAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroups51D9552AAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups51D9552AAttributes {
	return EncoderSettingsOutputGroups51D9552AAttributes{ref: ref}
}

func (d EncoderSettingsOutputGroups51D9552AAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroups51D9552AAttributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsDbdb908CAttributes struct {
	ref terra.Reference
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) InternalRef() (terra.Reference, error) {
	return hcs.ref, nil
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsDbdb908CAttributes {
	return EncoderSettingsOutputGroupsDbdb908CAttributes{ref: ref}
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hcs.ref.InternalTokens()
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) HlsAkamaiSettings() terra.ListValue[EncoderSettingsOutputGroups366D79D0Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups366D79D0Attributes](hcs.ref.Append("hls_akamai_settings"))
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) HlsBasicPutSettings() terra.ListValue[EncoderSettingsOutputGroupsAfea95D2Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsAfea95D2Attributes](hcs.ref.Append("hls_basic_put_settings"))
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) HlsMediaStoreSettings() terra.ListValue[EncoderSettingsOutputGroups91A77976Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups91A77976Attributes](hcs.ref.Append("hls_media_store_settings"))
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) HlsS3Settings() terra.ListValue[EncoderSettingsOutputGroups72Ef1Fd3Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups72Ef1Fd3Attributes](hcs.ref.Append("hls_s3_settings"))
}

func (hcs EncoderSettingsOutputGroupsDbdb908CAttributes) HlsWebdavSettings() terra.ListValue[EncoderSettingsOutputGroups6F55Eba5Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups6F55Eba5Attributes](hcs.ref.Append("hls_webdav_settings"))
}

type EncoderSettingsOutputGroups366D79D0Attributes struct {
	ref terra.Reference
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) InternalRef() (terra.Reference, error) {
	return has.ref, nil
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups366D79D0Attributes {
	return EncoderSettingsOutputGroups366D79D0Attributes{ref: ref}
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return has.ref.InternalTokens()
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) ConnectionRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(has.ref.Append("connection_retry_interval"))
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) FilecacheDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(has.ref.Append("filecache_duration"))
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) HttpTransferMode() terra.StringValue {
	return terra.ReferenceAsString(has.ref.Append("http_transfer_mode"))
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) NumRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(has.ref.Append("num_retries"))
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) RestartDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(has.ref.Append("restart_delay"))
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) Salt() terra.StringValue {
	return terra.ReferenceAsString(has.ref.Append("salt"))
}

func (has EncoderSettingsOutputGroups366D79D0Attributes) Token() terra.StringValue {
	return terra.ReferenceAsString(has.ref.Append("token"))
}

type EncoderSettingsOutputGroupsAfea95D2Attributes struct {
	ref terra.Reference
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) InternalRef() (terra.Reference, error) {
	return hbps.ref, nil
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsAfea95D2Attributes {
	return EncoderSettingsOutputGroupsAfea95D2Attributes{ref: ref}
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hbps.ref.InternalTokens()
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) ConnectionRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(hbps.ref.Append("connection_retry_interval"))
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) FilecacheDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(hbps.ref.Append("filecache_duration"))
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) NumRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(hbps.ref.Append("num_retries"))
}

func (hbps EncoderSettingsOutputGroupsAfea95D2Attributes) RestartDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(hbps.ref.Append("restart_delay"))
}

type EncoderSettingsOutputGroups91A77976Attributes struct {
	ref terra.Reference
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) InternalRef() (terra.Reference, error) {
	return hmss.ref, nil
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups91A77976Attributes {
	return EncoderSettingsOutputGroups91A77976Attributes{ref: ref}
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hmss.ref.InternalTokens()
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) ConnectionRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(hmss.ref.Append("connection_retry_interval"))
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) FilecacheDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(hmss.ref.Append("filecache_duration"))
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) MediaStoreStorageClass() terra.StringValue {
	return terra.ReferenceAsString(hmss.ref.Append("media_store_storage_class"))
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) NumRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(hmss.ref.Append("num_retries"))
}

func (hmss EncoderSettingsOutputGroups91A77976Attributes) RestartDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(hmss.ref.Append("restart_delay"))
}

type EncoderSettingsOutputGroups72Ef1Fd3Attributes struct {
	ref terra.Reference
}

func (hss EncoderSettingsOutputGroups72Ef1Fd3Attributes) InternalRef() (terra.Reference, error) {
	return hss.ref, nil
}

func (hss EncoderSettingsOutputGroups72Ef1Fd3Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups72Ef1Fd3Attributes {
	return EncoderSettingsOutputGroups72Ef1Fd3Attributes{ref: ref}
}

func (hss EncoderSettingsOutputGroups72Ef1Fd3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hss.ref.InternalTokens()
}

func (hss EncoderSettingsOutputGroups72Ef1Fd3Attributes) CannedAcl() terra.StringValue {
	return terra.ReferenceAsString(hss.ref.Append("canned_acl"))
}

type EncoderSettingsOutputGroups6F55Eba5Attributes struct {
	ref terra.Reference
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) InternalRef() (terra.Reference, error) {
	return hws.ref, nil
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups6F55Eba5Attributes {
	return EncoderSettingsOutputGroups6F55Eba5Attributes{ref: ref}
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hws.ref.InternalTokens()
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) ConnectionRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(hws.ref.Append("connection_retry_interval"))
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) FilecacheDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(hws.ref.Append("filecache_duration"))
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) HttpTransferMode() terra.StringValue {
	return terra.ReferenceAsString(hws.ref.Append("http_transfer_mode"))
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) NumRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(hws.ref.Append("num_retries"))
}

func (hws EncoderSettingsOutputGroups6F55Eba5Attributes) RestartDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(hws.ref.Append("restart_delay"))
}

type EncoderSettingsOutputGroups4A4032A1Attributes struct {
	ref terra.Reference
}

func (kps EncoderSettingsOutputGroups4A4032A1Attributes) InternalRef() (terra.Reference, error) {
	return kps.ref, nil
}

func (kps EncoderSettingsOutputGroups4A4032A1Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups4A4032A1Attributes {
	return EncoderSettingsOutputGroups4A4032A1Attributes{ref: ref}
}

func (kps EncoderSettingsOutputGroups4A4032A1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return kps.ref.InternalTokens()
}

func (kps EncoderSettingsOutputGroups4A4032A1Attributes) StaticKeySettings() terra.ListValue[EncoderSettingsOutputGroupsEc1E7B06Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsEc1E7B06Attributes](kps.ref.Append("static_key_settings"))
}

type EncoderSettingsOutputGroupsEc1E7B06Attributes struct {
	ref terra.Reference
}

func (sks EncoderSettingsOutputGroupsEc1E7B06Attributes) InternalRef() (terra.Reference, error) {
	return sks.ref, nil
}

func (sks EncoderSettingsOutputGroupsEc1E7B06Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsEc1E7B06Attributes {
	return EncoderSettingsOutputGroupsEc1E7B06Attributes{ref: ref}
}

func (sks EncoderSettingsOutputGroupsEc1E7B06Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sks.ref.InternalTokens()
}

func (sks EncoderSettingsOutputGroupsEc1E7B06Attributes) StaticKeyValue() terra.StringValue {
	return terra.ReferenceAsString(sks.ref.Append("static_key_value"))
}

func (sks EncoderSettingsOutputGroupsEc1E7B06Attributes) KeyProviderServer() terra.ListValue[EncoderSettingsOutputGroups9Fd5Ebb9Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups9Fd5Ebb9Attributes](sks.ref.Append("key_provider_server"))
}

type EncoderSettingsOutputGroups9Fd5Ebb9Attributes struct {
	ref terra.Reference
}

func (kps EncoderSettingsOutputGroups9Fd5Ebb9Attributes) InternalRef() (terra.Reference, error) {
	return kps.ref, nil
}

func (kps EncoderSettingsOutputGroups9Fd5Ebb9Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups9Fd5Ebb9Attributes {
	return EncoderSettingsOutputGroups9Fd5Ebb9Attributes{ref: ref}
}

func (kps EncoderSettingsOutputGroups9Fd5Ebb9Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return kps.ref.InternalTokens()
}

func (kps EncoderSettingsOutputGroups9Fd5Ebb9Attributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(kps.ref.Append("password_param"))
}

func (kps EncoderSettingsOutputGroups9Fd5Ebb9Attributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(kps.ref.Append("uri"))
}

func (kps EncoderSettingsOutputGroups9Fd5Ebb9Attributes) Username() terra.StringValue {
	return terra.ReferenceAsString(kps.ref.Append("username"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes struct {
	ref terra.Reference
}

func (mpgs EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mpgs.ref, nil
}

func (mpgs EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes{ref: ref}
}

func (mpgs EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mpgs.ref.InternalTokens()
}

func (mpgs EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsAttributes) Destination() terra.ListValue[EncoderSettingsOutputGroups99AbffddAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups99AbffddAttributes](mpgs.ref.Append("destination"))
}

type EncoderSettingsOutputGroups99AbffddAttributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroups99AbffddAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroups99AbffddAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups99AbffddAttributes {
	return EncoderSettingsOutputGroups99AbffddAttributes{ref: ref}
}

func (d EncoderSettingsOutputGroups99AbffddAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroups99AbffddAttributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes struct {
	ref terra.Reference
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return msgs.ref, nil
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes{ref: ref}
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return msgs.ref.InternalTokens()
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) AcquisitionPointId() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("acquisition_point_id"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) AudioOnlyTimecodeControl() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("audio_only_timecode_control"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) CertificateMode() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("certificate_mode"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) ConnectionRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(msgs.ref.Append("connection_retry_interval"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) EventId() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("event_id"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) EventIdMode() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("event_id_mode"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) EventStopBehavior() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("event_stop_behavior"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) FilecacheDuration() terra.NumberValue {
	return terra.ReferenceAsNumber(msgs.ref.Append("filecache_duration"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) FragmentLength() terra.NumberValue {
	return terra.ReferenceAsNumber(msgs.ref.Append("fragment_length"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) InputLossAction() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("input_loss_action"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) NumRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(msgs.ref.Append("num_retries"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) RestartDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(msgs.ref.Append("restart_delay"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) SegmentationMode() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("segmentation_mode"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) SendDelayMs() terra.NumberValue {
	return terra.ReferenceAsNumber(msgs.ref.Append("send_delay_ms"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) SparseTrackType() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("sparse_track_type"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) StreamManifestBehavior() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("stream_manifest_behavior"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) TimestampOffset() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("timestamp_offset"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) TimestampOffsetMode() terra.StringValue {
	return terra.ReferenceAsString(msgs.ref.Append("timestamp_offset_mode"))
}

func (msgs EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAttributes) Destination() terra.ListValue[EncoderSettingsOutputGroupsE1E290AaAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsE1E290AaAttributes](msgs.ref.Append("destination"))
}

type EncoderSettingsOutputGroupsE1E290AaAttributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroupsE1E290AaAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroupsE1E290AaAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsE1E290AaAttributes {
	return EncoderSettingsOutputGroupsE1E290AaAttributes{ref: ref}
}

func (d EncoderSettingsOutputGroupsE1E290AaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroupsE1E290AaAttributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes struct {
	ref terra.Reference
}

func (mgs EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mgs.ref, nil
}

func (mgs EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes{ref: ref}
}

func (mgs EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgs.ref.InternalTokens()
}

type EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes struct {
	ref terra.Reference
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rgs.ref, nil
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes{ref: ref}
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rgs.ref.InternalTokens()
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) AdMarkers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](rgs.ref.Append("ad_markers"))
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) AuthenticationScheme() terra.StringValue {
	return terra.ReferenceAsString(rgs.ref.Append("authentication_scheme"))
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) CacheFullBehavior() terra.StringValue {
	return terra.ReferenceAsString(rgs.ref.Append("cache_full_behavior"))
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) CacheLength() terra.NumberValue {
	return terra.ReferenceAsNumber(rgs.ref.Append("cache_length"))
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) CaptionData() terra.StringValue {
	return terra.ReferenceAsString(rgs.ref.Append("caption_data"))
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) InputLossAction() terra.StringValue {
	return terra.ReferenceAsString(rgs.ref.Append("input_loss_action"))
}

func (rgs EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsAttributes) RestartDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(rgs.ref.Append("restart_delay"))
}

type EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes struct {
	ref terra.Reference
}

func (ugs EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ugs.ref, nil
}

func (ugs EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes{ref: ref}
}

func (ugs EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ugs.ref.InternalTokens()
}

func (ugs EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes) InputLossAction() terra.StringValue {
	return terra.ReferenceAsString(ugs.ref.Append("input_loss_action"))
}

func (ugs EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes) TimedMetadataId3Frame() terra.StringValue {
	return terra.ReferenceAsString(ugs.ref.Append("timed_metadata_id3_frame"))
}

func (ugs EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsAttributes) TimedMetadataId3Period() terra.NumberValue {
	return terra.ReferenceAsNumber(ugs.ref.Append("timed_metadata_id3_period"))
}

type EncoderSettingsOutputGroupsOutputsAttributes struct {
	ref terra.Reference
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputsAttributes {
	return EncoderSettingsOutputGroupsOutputsAttributes{ref: ref}
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) AudioDescriptionNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](o.ref.Append("audio_description_names"))
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) CaptionDescriptionNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](o.ref.Append("caption_description_names"))
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) OutputName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("output_name"))
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) VideoDescriptionName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("video_description_name"))
}

func (o EncoderSettingsOutputGroupsOutputsAttributes) OutputSettings() terra.ListValue[EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes](o.ref.Append("output_settings"))
}

type EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes struct {
	ref terra.Reference
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes {
	return EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes{ref: ref}
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) ArchiveOutputSettings() terra.ListValue[EncoderSettingsOutputGroupsE85958CdAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsE85958CdAttributes](os.ref.Append("archive_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) FrameCaptureOutputSettings() terra.ListValue[EncoderSettingsOutputGroups7E0D03D3Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups7E0D03D3Attributes](os.ref.Append("frame_capture_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) HlsOutputSettings() terra.ListValue[EncoderSettingsOutputGroups2466Efb3Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups2466Efb3Attributes](os.ref.Append("hls_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) MediaPackageOutputSettings() terra.ListValue[EncoderSettingsOutputGroups8Fba9De4Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups8Fba9De4Attributes](os.ref.Append("media_package_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) MsSmoothOutputSettings() terra.ListValue[EncoderSettingsOutputGroups2Ac24Ce4Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups2Ac24Ce4Attributes](os.ref.Append("ms_smooth_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) MultiplexOutputSettings() terra.ListValue[EncoderSettingsOutputGroups19A359DaAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups19A359DaAttributes](os.ref.Append("multiplex_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) RtmpOutputSettings() terra.ListValue[EncoderSettingsOutputGroups87D0Bb71Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups87D0Bb71Attributes](os.ref.Append("rtmp_output_settings"))
}

func (os EncoderSettingsOutputGroupsOutputsOutputSettingsAttributes) UdpOutputSettings() terra.ListValue[EncoderSettingsOutputGroupsE9Fe7E35Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsE9Fe7E35Attributes](os.ref.Append("udp_output_settings"))
}

type EncoderSettingsOutputGroupsE85958CdAttributes struct {
	ref terra.Reference
}

func (aos EncoderSettingsOutputGroupsE85958CdAttributes) InternalRef() (terra.Reference, error) {
	return aos.ref, nil
}

func (aos EncoderSettingsOutputGroupsE85958CdAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsE85958CdAttributes {
	return EncoderSettingsOutputGroupsE85958CdAttributes{ref: ref}
}

func (aos EncoderSettingsOutputGroupsE85958CdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aos.ref.InternalTokens()
}

func (aos EncoderSettingsOutputGroupsE85958CdAttributes) Extension() terra.StringValue {
	return terra.ReferenceAsString(aos.ref.Append("extension"))
}

func (aos EncoderSettingsOutputGroupsE85958CdAttributes) NameModifier() terra.StringValue {
	return terra.ReferenceAsString(aos.ref.Append("name_modifier"))
}

func (aos EncoderSettingsOutputGroupsE85958CdAttributes) ContainerSettings() terra.ListValue[EncoderSettingsOutputGroupsC361Ad84Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsC361Ad84Attributes](aos.ref.Append("container_settings"))
}

type EncoderSettingsOutputGroupsC361Ad84Attributes struct {
	ref terra.Reference
}

func (cs EncoderSettingsOutputGroupsC361Ad84Attributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs EncoderSettingsOutputGroupsC361Ad84Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsC361Ad84Attributes {
	return EncoderSettingsOutputGroupsC361Ad84Attributes{ref: ref}
}

func (cs EncoderSettingsOutputGroupsC361Ad84Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs EncoderSettingsOutputGroupsC361Ad84Attributes) M2TsSettings() terra.ListValue[EncoderSettingsOutputGroups682F5037Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups682F5037Attributes](cs.ref.Append("m2ts_settings"))
}

func (cs EncoderSettingsOutputGroupsC361Ad84Attributes) RawSettings() terra.ListValue[EncoderSettingsOutputGroups6C7251C5Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups6C7251C5Attributes](cs.ref.Append("raw_settings"))
}

type EncoderSettingsOutputGroups682F5037Attributes struct {
	ref terra.Reference
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups682F5037Attributes {
	return EncoderSettingsOutputGroups682F5037Attributes{ref: ref}
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AbsentInputAudioBehavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("absent_input_audio_behavior"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Arib() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("arib"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AribCaptionsPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("arib_captions_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AribCaptionsPidControl() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("arib_captions_pid_control"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AudioBufferModel() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_buffer_model"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AudioFramesPerPes() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("audio_frames_per_pes"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AudioPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_pids"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) AudioStreamType() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_stream_type"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("bitrate"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) BufferModel() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("buffer_model"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) CcDescriptor() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("cc_descriptor"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) DvbSubPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("dvb_sub_pids"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) DvbTeletextPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("dvb_teletext_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Ebif() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ebif"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EbpAudioInterval() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ebp_audio_interval"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EbpLookaheadMs() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("ebp_lookahead_ms"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EbpPlacement() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ebp_placement"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EcmPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ecm_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EsRateInPes() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("es_rate_in_pes"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EtvPlatformPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("etv_platform_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) EtvSignalPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("etv_signal_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) FragmentTime() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("fragment_time"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Klv() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("klv"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) KlvDataPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("klv_data_pids"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) NielsenId3Behavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("nielsen_id3_behavior"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) NullPacketBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("null_packet_bitrate"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) PatInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pat_interval"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) PcrControl() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pcr_control"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) PcrPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pcr_period"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) PcrPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pcr_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) PmtInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pmt_interval"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) PmtPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pmt_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) ProgramNum() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("program_num"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) RateMode() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("rate_mode"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Scte27Pids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte27_pids"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Scte35Control() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte35_control"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) Scte35Pid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte35_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) SegmentationMarkers() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("segmentation_markers"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) SegmentationStyle() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("segmentation_style"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) SegmentationTime() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("segmentation_time"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) TimedMetadataBehavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("timed_metadata_behavior"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) TimedMetadataPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("timed_metadata_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) TransportStreamId() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("transport_stream_id"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) VideoPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("video_pid"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) DvbNitSettings() terra.ListValue[EncoderSettingsOutputGroupsAeda71A0Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsAeda71A0Attributes](ms.ref.Append("dvb_nit_settings"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) DvbSdtSettings() terra.ListValue[EncoderSettingsOutputGroupsC528Ad2CAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsC528Ad2CAttributes](ms.ref.Append("dvb_sdt_settings"))
}

func (ms EncoderSettingsOutputGroups682F5037Attributes) DvbTdtSettings() terra.ListValue[EncoderSettingsOutputGroups1Cef98A5Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups1Cef98A5Attributes](ms.ref.Append("dvb_tdt_settings"))
}

type EncoderSettingsOutputGroupsAeda71A0Attributes struct {
	ref terra.Reference
}

func (dns EncoderSettingsOutputGroupsAeda71A0Attributes) InternalRef() (terra.Reference, error) {
	return dns.ref, nil
}

func (dns EncoderSettingsOutputGroupsAeda71A0Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsAeda71A0Attributes {
	return EncoderSettingsOutputGroupsAeda71A0Attributes{ref: ref}
}

func (dns EncoderSettingsOutputGroupsAeda71A0Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dns.ref.InternalTokens()
}

func (dns EncoderSettingsOutputGroupsAeda71A0Attributes) NetworkId() terra.NumberValue {
	return terra.ReferenceAsNumber(dns.ref.Append("network_id"))
}

func (dns EncoderSettingsOutputGroupsAeda71A0Attributes) NetworkName() terra.StringValue {
	return terra.ReferenceAsString(dns.ref.Append("network_name"))
}

func (dns EncoderSettingsOutputGroupsAeda71A0Attributes) RepInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(dns.ref.Append("rep_interval"))
}

type EncoderSettingsOutputGroupsC528Ad2CAttributes struct {
	ref terra.Reference
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) InternalRef() (terra.Reference, error) {
	return dss.ref, nil
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsC528Ad2CAttributes {
	return EncoderSettingsOutputGroupsC528Ad2CAttributes{ref: ref}
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dss.ref.InternalTokens()
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) OutputSdt() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("output_sdt"))
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) RepInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(dss.ref.Append("rep_interval"))
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("service_name"))
}

func (dss EncoderSettingsOutputGroupsC528Ad2CAttributes) ServiceProviderName() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("service_provider_name"))
}

type EncoderSettingsOutputGroups1Cef98A5Attributes struct {
	ref terra.Reference
}

func (dts EncoderSettingsOutputGroups1Cef98A5Attributes) InternalRef() (terra.Reference, error) {
	return dts.ref, nil
}

func (dts EncoderSettingsOutputGroups1Cef98A5Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups1Cef98A5Attributes {
	return EncoderSettingsOutputGroups1Cef98A5Attributes{ref: ref}
}

func (dts EncoderSettingsOutputGroups1Cef98A5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dts.ref.InternalTokens()
}

func (dts EncoderSettingsOutputGroups1Cef98A5Attributes) RepInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(dts.ref.Append("rep_interval"))
}

type EncoderSettingsOutputGroups6C7251C5Attributes struct {
	ref terra.Reference
}

func (rs EncoderSettingsOutputGroups6C7251C5Attributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs EncoderSettingsOutputGroups6C7251C5Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups6C7251C5Attributes {
	return EncoderSettingsOutputGroups6C7251C5Attributes{ref: ref}
}

func (rs EncoderSettingsOutputGroups6C7251C5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

type EncoderSettingsOutputGroups7E0D03D3Attributes struct {
	ref terra.Reference
}

func (fcos EncoderSettingsOutputGroups7E0D03D3Attributes) InternalRef() (terra.Reference, error) {
	return fcos.ref, nil
}

func (fcos EncoderSettingsOutputGroups7E0D03D3Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups7E0D03D3Attributes {
	return EncoderSettingsOutputGroups7E0D03D3Attributes{ref: ref}
}

func (fcos EncoderSettingsOutputGroups7E0D03D3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fcos.ref.InternalTokens()
}

func (fcos EncoderSettingsOutputGroups7E0D03D3Attributes) NameModifier() terra.StringValue {
	return terra.ReferenceAsString(fcos.ref.Append("name_modifier"))
}

type EncoderSettingsOutputGroups2466Efb3Attributes struct {
	ref terra.Reference
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) InternalRef() (terra.Reference, error) {
	return hos.ref, nil
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups2466Efb3Attributes {
	return EncoderSettingsOutputGroups2466Efb3Attributes{ref: ref}
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hos.ref.InternalTokens()
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) H265PackagingType() terra.StringValue {
	return terra.ReferenceAsString(hos.ref.Append("h265_packaging_type"))
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) NameModifier() terra.StringValue {
	return terra.ReferenceAsString(hos.ref.Append("name_modifier"))
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) SegmentModifier() terra.StringValue {
	return terra.ReferenceAsString(hos.ref.Append("segment_modifier"))
}

func (hos EncoderSettingsOutputGroups2466Efb3Attributes) HlsSettings() terra.ListValue[EncoderSettingsOutputGroups84B14BcfAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups84B14BcfAttributes](hos.ref.Append("hls_settings"))
}

type EncoderSettingsOutputGroups84B14BcfAttributes struct {
	ref terra.Reference
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) InternalRef() (terra.Reference, error) {
	return hs.ref, nil
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups84B14BcfAttributes {
	return EncoderSettingsOutputGroups84B14BcfAttributes{ref: ref}
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hs.ref.InternalTokens()
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) AudioOnlyHlsSettings() terra.ListValue[EncoderSettingsOutputGroups46A19Fa7Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups46A19Fa7Attributes](hs.ref.Append("audio_only_hls_settings"))
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) Fmp4HlsSettings() terra.ListValue[EncoderSettingsOutputGroupsEbe8Fc53Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsEbe8Fc53Attributes](hs.ref.Append("fmp4_hls_settings"))
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) FrameCaptureHlsSettings() terra.ListValue[EncoderSettingsOutputGroupsE23Ce693Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsE23Ce693Attributes](hs.ref.Append("frame_capture_hls_settings"))
}

func (hs EncoderSettingsOutputGroups84B14BcfAttributes) StandardHlsSettings() terra.ListValue[EncoderSettingsOutputGroups15Feab49Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups15Feab49Attributes](hs.ref.Append("standard_hls_settings"))
}

type EncoderSettingsOutputGroups46A19Fa7Attributes struct {
	ref terra.Reference
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) InternalRef() (terra.Reference, error) {
	return aohs.ref, nil
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups46A19Fa7Attributes {
	return EncoderSettingsOutputGroups46A19Fa7Attributes{ref: ref}
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return aohs.ref.InternalTokens()
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) AudioGroupId() terra.StringValue {
	return terra.ReferenceAsString(aohs.ref.Append("audio_group_id"))
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) AudioTrackType() terra.StringValue {
	return terra.ReferenceAsString(aohs.ref.Append("audio_track_type"))
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) SegmentType() terra.StringValue {
	return terra.ReferenceAsString(aohs.ref.Append("segment_type"))
}

func (aohs EncoderSettingsOutputGroups46A19Fa7Attributes) AudioOnlyImage() terra.ListValue[EncoderSettingsOutputGroups39B6C70CAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups39B6C70CAttributes](aohs.ref.Append("audio_only_image"))
}

type EncoderSettingsOutputGroups39B6C70CAttributes struct {
	ref terra.Reference
}

func (aoi EncoderSettingsOutputGroups39B6C70CAttributes) InternalRef() (terra.Reference, error) {
	return aoi.ref, nil
}

func (aoi EncoderSettingsOutputGroups39B6C70CAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups39B6C70CAttributes {
	return EncoderSettingsOutputGroups39B6C70CAttributes{ref: ref}
}

func (aoi EncoderSettingsOutputGroups39B6C70CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aoi.ref.InternalTokens()
}

func (aoi EncoderSettingsOutputGroups39B6C70CAttributes) PasswordParam() terra.StringValue {
	return terra.ReferenceAsString(aoi.ref.Append("password_param"))
}

func (aoi EncoderSettingsOutputGroups39B6C70CAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(aoi.ref.Append("uri"))
}

func (aoi EncoderSettingsOutputGroups39B6C70CAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(aoi.ref.Append("username"))
}

type EncoderSettingsOutputGroupsEbe8Fc53Attributes struct {
	ref terra.Reference
}

func (fhs EncoderSettingsOutputGroupsEbe8Fc53Attributes) InternalRef() (terra.Reference, error) {
	return fhs.ref, nil
}

func (fhs EncoderSettingsOutputGroupsEbe8Fc53Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsEbe8Fc53Attributes {
	return EncoderSettingsOutputGroupsEbe8Fc53Attributes{ref: ref}
}

func (fhs EncoderSettingsOutputGroupsEbe8Fc53Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fhs.ref.InternalTokens()
}

func (fhs EncoderSettingsOutputGroupsEbe8Fc53Attributes) AudioRenditionSets() terra.StringValue {
	return terra.ReferenceAsString(fhs.ref.Append("audio_rendition_sets"))
}

func (fhs EncoderSettingsOutputGroupsEbe8Fc53Attributes) NielsenId3Behavior() terra.StringValue {
	return terra.ReferenceAsString(fhs.ref.Append("nielsen_id3_behavior"))
}

func (fhs EncoderSettingsOutputGroupsEbe8Fc53Attributes) TimedMetadataBehavior() terra.StringValue {
	return terra.ReferenceAsString(fhs.ref.Append("timed_metadata_behavior"))
}

type EncoderSettingsOutputGroupsE23Ce693Attributes struct {
	ref terra.Reference
}

func (fchs EncoderSettingsOutputGroupsE23Ce693Attributes) InternalRef() (terra.Reference, error) {
	return fchs.ref, nil
}

func (fchs EncoderSettingsOutputGroupsE23Ce693Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsE23Ce693Attributes {
	return EncoderSettingsOutputGroupsE23Ce693Attributes{ref: ref}
}

func (fchs EncoderSettingsOutputGroupsE23Ce693Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fchs.ref.InternalTokens()
}

type EncoderSettingsOutputGroups15Feab49Attributes struct {
	ref terra.Reference
}

func (shs EncoderSettingsOutputGroups15Feab49Attributes) InternalRef() (terra.Reference, error) {
	return shs.ref, nil
}

func (shs EncoderSettingsOutputGroups15Feab49Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups15Feab49Attributes {
	return EncoderSettingsOutputGroups15Feab49Attributes{ref: ref}
}

func (shs EncoderSettingsOutputGroups15Feab49Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return shs.ref.InternalTokens()
}

func (shs EncoderSettingsOutputGroups15Feab49Attributes) AudioRenditionSets() terra.StringValue {
	return terra.ReferenceAsString(shs.ref.Append("audio_rendition_sets"))
}

func (shs EncoderSettingsOutputGroups15Feab49Attributes) M3U8Settings() terra.ListValue[EncoderSettingsOutputGroupsBa0C557EAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsBa0C557EAttributes](shs.ref.Append("m3u8_settings"))
}

type EncoderSettingsOutputGroupsBa0C557EAttributes struct {
	ref terra.Reference
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsBa0C557EAttributes {
	return EncoderSettingsOutputGroupsBa0C557EAttributes{ref: ref}
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) AudioFramesPerPes() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("audio_frames_per_pes"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) AudioPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_pids"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) EcmPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ecm_pid"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) NielsenId3Behavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("nielsen_id3_behavior"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) PatInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pat_interval"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) PcrControl() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pcr_control"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) PcrPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pcr_period"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) PcrPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pcr_pid"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) PmtInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pmt_interval"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) PmtPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pmt_pid"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) ProgramNum() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("program_num"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) Scte35Behavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte35_behavior"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) Scte35Pid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte35_pid"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) TimedMetadataBehavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("timed_metadata_behavior"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) TimedMetadataPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("timed_metadata_pid"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) TransportStreamId() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("transport_stream_id"))
}

func (ms EncoderSettingsOutputGroupsBa0C557EAttributes) VideoPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("video_pid"))
}

type EncoderSettingsOutputGroups8Fba9De4Attributes struct {
	ref terra.Reference
}

func (mpos EncoderSettingsOutputGroups8Fba9De4Attributes) InternalRef() (terra.Reference, error) {
	return mpos.ref, nil
}

func (mpos EncoderSettingsOutputGroups8Fba9De4Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups8Fba9De4Attributes {
	return EncoderSettingsOutputGroups8Fba9De4Attributes{ref: ref}
}

func (mpos EncoderSettingsOutputGroups8Fba9De4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mpos.ref.InternalTokens()
}

type EncoderSettingsOutputGroups2Ac24Ce4Attributes struct {
	ref terra.Reference
}

func (msos EncoderSettingsOutputGroups2Ac24Ce4Attributes) InternalRef() (terra.Reference, error) {
	return msos.ref, nil
}

func (msos EncoderSettingsOutputGroups2Ac24Ce4Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups2Ac24Ce4Attributes {
	return EncoderSettingsOutputGroups2Ac24Ce4Attributes{ref: ref}
}

func (msos EncoderSettingsOutputGroups2Ac24Ce4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return msos.ref.InternalTokens()
}

func (msos EncoderSettingsOutputGroups2Ac24Ce4Attributes) H265PackagingType() terra.StringValue {
	return terra.ReferenceAsString(msos.ref.Append("h265_packaging_type"))
}

func (msos EncoderSettingsOutputGroups2Ac24Ce4Attributes) NameModifier() terra.StringValue {
	return terra.ReferenceAsString(msos.ref.Append("name_modifier"))
}

type EncoderSettingsOutputGroups19A359DaAttributes struct {
	ref terra.Reference
}

func (mos EncoderSettingsOutputGroups19A359DaAttributes) InternalRef() (terra.Reference, error) {
	return mos.ref, nil
}

func (mos EncoderSettingsOutputGroups19A359DaAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups19A359DaAttributes {
	return EncoderSettingsOutputGroups19A359DaAttributes{ref: ref}
}

func (mos EncoderSettingsOutputGroups19A359DaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mos.ref.InternalTokens()
}

func (mos EncoderSettingsOutputGroups19A359DaAttributes) Destination() terra.ListValue[EncoderSettingsOutputGroups98E2175DAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups98E2175DAttributes](mos.ref.Append("destination"))
}

type EncoderSettingsOutputGroups98E2175DAttributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroups98E2175DAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroups98E2175DAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups98E2175DAttributes {
	return EncoderSettingsOutputGroups98E2175DAttributes{ref: ref}
}

func (d EncoderSettingsOutputGroups98E2175DAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroups98E2175DAttributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroups87D0Bb71Attributes struct {
	ref terra.Reference
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) InternalRef() (terra.Reference, error) {
	return ros.ref, nil
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups87D0Bb71Attributes {
	return EncoderSettingsOutputGroups87D0Bb71Attributes{ref: ref}
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ros.ref.InternalTokens()
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) CertificateMode() terra.StringValue {
	return terra.ReferenceAsString(ros.ref.Append("certificate_mode"))
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) ConnectionRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ros.ref.Append("connection_retry_interval"))
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) NumRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(ros.ref.Append("num_retries"))
}

func (ros EncoderSettingsOutputGroups87D0Bb71Attributes) Destination() terra.ListValue[EncoderSettingsOutputGroups096B1Fb0Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups096B1Fb0Attributes](ros.ref.Append("destination"))
}

type EncoderSettingsOutputGroups096B1Fb0Attributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroups096B1Fb0Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroups096B1Fb0Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups096B1Fb0Attributes {
	return EncoderSettingsOutputGroups096B1Fb0Attributes{ref: ref}
}

func (d EncoderSettingsOutputGroups096B1Fb0Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroups096B1Fb0Attributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsE9Fe7E35Attributes struct {
	ref terra.Reference
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) InternalRef() (terra.Reference, error) {
	return uos.ref, nil
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsE9Fe7E35Attributes {
	return EncoderSettingsOutputGroupsE9Fe7E35Attributes{ref: ref}
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return uos.ref.InternalTokens()
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) BufferMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(uos.ref.Append("buffer_msec"))
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) ContainerSettings() terra.ListValue[EncoderSettingsOutputGroups5B4D9852Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups5B4D9852Attributes](uos.ref.Append("container_settings"))
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) Destination() terra.ListValue[EncoderSettingsOutputGroupsA199D051Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsA199D051Attributes](uos.ref.Append("destination"))
}

func (uos EncoderSettingsOutputGroupsE9Fe7E35Attributes) FecOutputSettings() terra.ListValue[EncoderSettingsOutputGroupsAbb6Dab5Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsAbb6Dab5Attributes](uos.ref.Append("fec_output_settings"))
}

type EncoderSettingsOutputGroups5B4D9852Attributes struct {
	ref terra.Reference
}

func (cs EncoderSettingsOutputGroups5B4D9852Attributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs EncoderSettingsOutputGroups5B4D9852Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups5B4D9852Attributes {
	return EncoderSettingsOutputGroups5B4D9852Attributes{ref: ref}
}

func (cs EncoderSettingsOutputGroups5B4D9852Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs EncoderSettingsOutputGroups5B4D9852Attributes) M2TsSettings() terra.ListValue[EncoderSettingsOutputGroupsF52F81BeAttributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroupsF52F81BeAttributes](cs.ref.Append("m2ts_settings"))
}

type EncoderSettingsOutputGroupsF52F81BeAttributes struct {
	ref terra.Reference
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsF52F81BeAttributes {
	return EncoderSettingsOutputGroupsF52F81BeAttributes{ref: ref}
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AbsentInputAudioBehavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("absent_input_audio_behavior"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Arib() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("arib"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AribCaptionsPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("arib_captions_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AribCaptionsPidControl() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("arib_captions_pid_control"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AudioBufferModel() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_buffer_model"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AudioFramesPerPes() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("audio_frames_per_pes"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AudioPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_pids"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) AudioStreamType() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("audio_stream_type"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("bitrate"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) BufferModel() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("buffer_model"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) CcDescriptor() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("cc_descriptor"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) DvbSubPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("dvb_sub_pids"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) DvbTeletextPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("dvb_teletext_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Ebif() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ebif"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EbpAudioInterval() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ebp_audio_interval"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EbpLookaheadMs() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("ebp_lookahead_ms"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EbpPlacement() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ebp_placement"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EcmPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("ecm_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EsRateInPes() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("es_rate_in_pes"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EtvPlatformPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("etv_platform_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) EtvSignalPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("etv_signal_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) FragmentTime() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("fragment_time"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Klv() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("klv"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) KlvDataPids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("klv_data_pids"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) NielsenId3Behavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("nielsen_id3_behavior"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) NullPacketBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("null_packet_bitrate"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) PatInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pat_interval"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) PcrControl() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pcr_control"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) PcrPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pcr_period"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) PcrPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pcr_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) PmtInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("pmt_interval"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) PmtPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("pmt_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) ProgramNum() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("program_num"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) RateMode() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("rate_mode"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Scte27Pids() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte27_pids"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Scte35Control() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte35_control"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) Scte35Pid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("scte35_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) SegmentationMarkers() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("segmentation_markers"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) SegmentationStyle() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("segmentation_style"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) SegmentationTime() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("segmentation_time"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) TimedMetadataBehavior() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("timed_metadata_behavior"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) TimedMetadataPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("timed_metadata_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) TransportStreamId() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("transport_stream_id"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) VideoPid() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("video_pid"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) DvbNitSettings() terra.ListValue[EncoderSettingsOutputGroups9Ab16061Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups9Ab16061Attributes](ms.ref.Append("dvb_nit_settings"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) DvbSdtSettings() terra.ListValue[EncoderSettingsOutputGroups6E0740B3Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups6E0740B3Attributes](ms.ref.Append("dvb_sdt_settings"))
}

func (ms EncoderSettingsOutputGroupsF52F81BeAttributes) DvbTdtSettings() terra.ListValue[EncoderSettingsOutputGroups4271Ac49Attributes] {
	return terra.ReferenceAsList[EncoderSettingsOutputGroups4271Ac49Attributes](ms.ref.Append("dvb_tdt_settings"))
}

type EncoderSettingsOutputGroups9Ab16061Attributes struct {
	ref terra.Reference
}

func (dns EncoderSettingsOutputGroups9Ab16061Attributes) InternalRef() (terra.Reference, error) {
	return dns.ref, nil
}

func (dns EncoderSettingsOutputGroups9Ab16061Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups9Ab16061Attributes {
	return EncoderSettingsOutputGroups9Ab16061Attributes{ref: ref}
}

func (dns EncoderSettingsOutputGroups9Ab16061Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dns.ref.InternalTokens()
}

func (dns EncoderSettingsOutputGroups9Ab16061Attributes) NetworkId() terra.NumberValue {
	return terra.ReferenceAsNumber(dns.ref.Append("network_id"))
}

func (dns EncoderSettingsOutputGroups9Ab16061Attributes) NetworkName() terra.StringValue {
	return terra.ReferenceAsString(dns.ref.Append("network_name"))
}

func (dns EncoderSettingsOutputGroups9Ab16061Attributes) RepInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(dns.ref.Append("rep_interval"))
}

type EncoderSettingsOutputGroups6E0740B3Attributes struct {
	ref terra.Reference
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) InternalRef() (terra.Reference, error) {
	return dss.ref, nil
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups6E0740B3Attributes {
	return EncoderSettingsOutputGroups6E0740B3Attributes{ref: ref}
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dss.ref.InternalTokens()
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) OutputSdt() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("output_sdt"))
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) RepInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(dss.ref.Append("rep_interval"))
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("service_name"))
}

func (dss EncoderSettingsOutputGroups6E0740B3Attributes) ServiceProviderName() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("service_provider_name"))
}

type EncoderSettingsOutputGroups4271Ac49Attributes struct {
	ref terra.Reference
}

func (dts EncoderSettingsOutputGroups4271Ac49Attributes) InternalRef() (terra.Reference, error) {
	return dts.ref, nil
}

func (dts EncoderSettingsOutputGroups4271Ac49Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroups4271Ac49Attributes {
	return EncoderSettingsOutputGroups4271Ac49Attributes{ref: ref}
}

func (dts EncoderSettingsOutputGroups4271Ac49Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dts.ref.InternalTokens()
}

func (dts EncoderSettingsOutputGroups4271Ac49Attributes) RepInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(dts.ref.Append("rep_interval"))
}

type EncoderSettingsOutputGroupsA199D051Attributes struct {
	ref terra.Reference
}

func (d EncoderSettingsOutputGroupsA199D051Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d EncoderSettingsOutputGroupsA199D051Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsA199D051Attributes {
	return EncoderSettingsOutputGroupsA199D051Attributes{ref: ref}
}

func (d EncoderSettingsOutputGroupsA199D051Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d EncoderSettingsOutputGroupsA199D051Attributes) DestinationRefId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("destination_ref_id"))
}

type EncoderSettingsOutputGroupsAbb6Dab5Attributes struct {
	ref terra.Reference
}

func (fos EncoderSettingsOutputGroupsAbb6Dab5Attributes) InternalRef() (terra.Reference, error) {
	return fos.ref, nil
}

func (fos EncoderSettingsOutputGroupsAbb6Dab5Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsOutputGroupsAbb6Dab5Attributes {
	return EncoderSettingsOutputGroupsAbb6Dab5Attributes{ref: ref}
}

func (fos EncoderSettingsOutputGroupsAbb6Dab5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fos.ref.InternalTokens()
}

func (fos EncoderSettingsOutputGroupsAbb6Dab5Attributes) ColumnDepth() terra.NumberValue {
	return terra.ReferenceAsNumber(fos.ref.Append("column_depth"))
}

func (fos EncoderSettingsOutputGroupsAbb6Dab5Attributes) IncludeFec() terra.StringValue {
	return terra.ReferenceAsString(fos.ref.Append("include_fec"))
}

func (fos EncoderSettingsOutputGroupsAbb6Dab5Attributes) RowLength() terra.NumberValue {
	return terra.ReferenceAsNumber(fos.ref.Append("row_length"))
}

type EncoderSettingsTimecodeConfigAttributes struct {
	ref terra.Reference
}

func (tc EncoderSettingsTimecodeConfigAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc EncoderSettingsTimecodeConfigAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsTimecodeConfigAttributes {
	return EncoderSettingsTimecodeConfigAttributes{ref: ref}
}

func (tc EncoderSettingsTimecodeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc EncoderSettingsTimecodeConfigAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("source"))
}

func (tc EncoderSettingsTimecodeConfigAttributes) SyncThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(tc.ref.Append("sync_threshold"))
}

type EncoderSettingsVideoDescriptionsAttributes struct {
	ref terra.Reference
}

func (vd EncoderSettingsVideoDescriptionsAttributes) InternalRef() (terra.Reference, error) {
	return vd.ref, nil
}

func (vd EncoderSettingsVideoDescriptionsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsAttributes {
	return EncoderSettingsVideoDescriptionsAttributes{ref: ref}
}

func (vd EncoderSettingsVideoDescriptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vd.ref.InternalTokens()
}

func (vd EncoderSettingsVideoDescriptionsAttributes) Height() terra.NumberValue {
	return terra.ReferenceAsNumber(vd.ref.Append("height"))
}

func (vd EncoderSettingsVideoDescriptionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vd.ref.Append("name"))
}

func (vd EncoderSettingsVideoDescriptionsAttributes) RespondToAfd() terra.StringValue {
	return terra.ReferenceAsString(vd.ref.Append("respond_to_afd"))
}

func (vd EncoderSettingsVideoDescriptionsAttributes) ScalingBehavior() terra.StringValue {
	return terra.ReferenceAsString(vd.ref.Append("scaling_behavior"))
}

func (vd EncoderSettingsVideoDescriptionsAttributes) Sharpness() terra.NumberValue {
	return terra.ReferenceAsNumber(vd.ref.Append("sharpness"))
}

func (vd EncoderSettingsVideoDescriptionsAttributes) Width() terra.NumberValue {
	return terra.ReferenceAsNumber(vd.ref.Append("width"))
}

func (vd EncoderSettingsVideoDescriptionsAttributes) CodecSettings() terra.ListValue[EncoderSettingsVideoDescriptionsCodecSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsCodecSettingsAttributes](vd.ref.Append("codec_settings"))
}

type EncoderSettingsVideoDescriptionsCodecSettingsAttributes struct {
	ref terra.Reference
}

func (cs EncoderSettingsVideoDescriptionsCodecSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs EncoderSettingsVideoDescriptionsCodecSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsCodecSettingsAttributes {
	return EncoderSettingsVideoDescriptionsCodecSettingsAttributes{ref: ref}
}

func (cs EncoderSettingsVideoDescriptionsCodecSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs EncoderSettingsVideoDescriptionsCodecSettingsAttributes) FrameCaptureSettings() terra.ListValue[EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes](cs.ref.Append("frame_capture_settings"))
}

func (cs EncoderSettingsVideoDescriptionsCodecSettingsAttributes) H264Settings() terra.ListValue[EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes](cs.ref.Append("h264_settings"))
}

func (cs EncoderSettingsVideoDescriptionsCodecSettingsAttributes) H265Settings() terra.ListValue[EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes](cs.ref.Append("h265_settings"))
}

type EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes struct {
	ref terra.Reference
}

func (fcs EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes) InternalRef() (terra.Reference, error) {
	return fcs.ref, nil
}

func (fcs EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes {
	return EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes{ref: ref}
}

func (fcs EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fcs.ref.InternalTokens()
}

func (fcs EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes) CaptureInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(fcs.ref.Append("capture_interval"))
}

func (fcs EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsAttributes) CaptureIntervalUnits() terra.StringValue {
	return terra.ReferenceAsString(fcs.ref.Append("capture_interval_units"))
}

type EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes struct {
	ref terra.Reference
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) InternalRef() (terra.Reference, error) {
	return hs.ref, nil
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes {
	return EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes{ref: ref}
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hs.ref.InternalTokens()
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) AdaptiveQuantization() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("adaptive_quantization"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) AfdSignaling() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("afd_signaling"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("bitrate"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) BufFillPct() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("buf_fill_pct"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) BufSize() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("buf_size"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) ColorMetadata() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("color_metadata"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) EntropyEncoding() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("entropy_encoding"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) FixedAfd() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("fixed_afd"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) FlickerAq() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("flicker_aq"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) ForceFieldPictures() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("force_field_pictures"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) FramerateControl() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("framerate_control"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) FramerateDenominator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("framerate_denominator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) FramerateNumerator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("framerate_numerator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) GopBReference() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("gop_b_reference"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) GopClosedCadence() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("gop_closed_cadence"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) GopNumBFrames() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("gop_num_b_frames"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) GopSize() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("gop_size"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) GopSizeUnits() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("gop_size_units"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) Level() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("level"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) LookAheadRateControl() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("look_ahead_rate_control"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) MaxBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("max_bitrate"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) MinIInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("min_i_interval"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) NumRefFrames() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("num_ref_frames"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) ParControl() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("par_control"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) ParDenominator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("par_denominator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) ParNumerator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("par_numerator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) Profile() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("profile"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) QualityLevel() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("quality_level"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) QvbrQualityLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("qvbr_quality_level"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) RateControlMode() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("rate_control_mode"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) ScanType() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("scan_type"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) SceneChangeDetect() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("scene_change_detect"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) Slices() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("slices"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) Softness() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("softness"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) SpatialAq() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("spatial_aq"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) SubgopLength() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("subgop_length"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) Syntax() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("syntax"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) TemporalAq() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("temporal_aq"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) TimecodeInsertion() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("timecode_insertion"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsAttributes) FilterSettings() terra.ListValue[EncoderSettingsVideoDescriptions16C7052FAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions16C7052FAttributes](hs.ref.Append("filter_settings"))
}

type EncoderSettingsVideoDescriptions16C7052FAttributes struct {
	ref terra.Reference
}

func (fs EncoderSettingsVideoDescriptions16C7052FAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs EncoderSettingsVideoDescriptions16C7052FAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions16C7052FAttributes {
	return EncoderSettingsVideoDescriptions16C7052FAttributes{ref: ref}
}

func (fs EncoderSettingsVideoDescriptions16C7052FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs EncoderSettingsVideoDescriptions16C7052FAttributes) TemporalFilterSettings() terra.ListValue[EncoderSettingsVideoDescriptions6D3116A4Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions6D3116A4Attributes](fs.ref.Append("temporal_filter_settings"))
}

type EncoderSettingsVideoDescriptions6D3116A4Attributes struct {
	ref terra.Reference
}

func (tfs EncoderSettingsVideoDescriptions6D3116A4Attributes) InternalRef() (terra.Reference, error) {
	return tfs.ref, nil
}

func (tfs EncoderSettingsVideoDescriptions6D3116A4Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions6D3116A4Attributes {
	return EncoderSettingsVideoDescriptions6D3116A4Attributes{ref: ref}
}

func (tfs EncoderSettingsVideoDescriptions6D3116A4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tfs.ref.InternalTokens()
}

func (tfs EncoderSettingsVideoDescriptions6D3116A4Attributes) PostFilterSharpening() terra.StringValue {
	return terra.ReferenceAsString(tfs.ref.Append("post_filter_sharpening"))
}

func (tfs EncoderSettingsVideoDescriptions6D3116A4Attributes) Strength() terra.StringValue {
	return terra.ReferenceAsString(tfs.ref.Append("strength"))
}

type EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes struct {
	ref terra.Reference
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) InternalRef() (terra.Reference, error) {
	return hs.ref, nil
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes {
	return EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes{ref: ref}
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hs.ref.InternalTokens()
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) AdaptiveQuantization() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("adaptive_quantization"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) AfdSignaling() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("afd_signaling"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) AlternativeTransferFunction() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("alternative_transfer_function"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) Bitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("bitrate"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) BufSize() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("buf_size"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) ColorMetadata() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("color_metadata"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) FixedAfd() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("fixed_afd"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) FlickerAq() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("flicker_aq"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) FramerateDenominator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("framerate_denominator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) FramerateNumerator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("framerate_numerator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) GopClosedCadence() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("gop_closed_cadence"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) GopSize() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("gop_size"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) GopSizeUnits() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("gop_size_units"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) Level() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("level"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) LookAheadRateControl() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("look_ahead_rate_control"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) MaxBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("max_bitrate"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) MinIInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("min_i_interval"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) ParDenominator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("par_denominator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) ParNumerator() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("par_numerator"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) Profile() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("profile"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) QvbrQualityLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("qvbr_quality_level"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) RateControlMode() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("rate_control_mode"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) ScanType() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("scan_type"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) SceneChangeDetect() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("scene_change_detect"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) Slices() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("slices"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) Tier() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("tier"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) TimecodeInsertion() terra.StringValue {
	return terra.ReferenceAsString(hs.ref.Append("timecode_insertion"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) ColorSpaceSettings() terra.ListValue[EncoderSettingsVideoDescriptions32Bafd78Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions32Bafd78Attributes](hs.ref.Append("color_space_settings"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) FilterSettings() terra.ListValue[EncoderSettingsVideoDescriptions866F30C8Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions866F30C8Attributes](hs.ref.Append("filter_settings"))
}

func (hs EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsAttributes) TimecodeBurninSettings() terra.ListValue[EncoderSettingsVideoDescriptions6Ec21560Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions6Ec21560Attributes](hs.ref.Append("timecode_burnin_settings"))
}

type EncoderSettingsVideoDescriptions32Bafd78Attributes struct {
	ref terra.Reference
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) InternalRef() (terra.Reference, error) {
	return css.ref, nil
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions32Bafd78Attributes {
	return EncoderSettingsVideoDescriptions32Bafd78Attributes{ref: ref}
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return css.ref.InternalTokens()
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) ColorSpacePassthroughSettings() terra.ListValue[EncoderSettingsVideoDescriptions3B5Dc5F6Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions3B5Dc5F6Attributes](css.ref.Append("color_space_passthrough_settings"))
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) DolbyVision81Settings() terra.ListValue[EncoderSettingsVideoDescriptions91Ab172FAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions91Ab172FAttributes](css.ref.Append("dolby_vision81_settings"))
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) Hdr10Settings() terra.ListValue[EncoderSettingsVideoDescriptions54Ced679Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptions54Ced679Attributes](css.ref.Append("hdr10_settings"))
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) Rec601Settings() terra.ListValue[EncoderSettingsVideoDescriptionsF12B29BaAttributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsF12B29BaAttributes](css.ref.Append("rec601_settings"))
}

func (css EncoderSettingsVideoDescriptions32Bafd78Attributes) Rec709Settings() terra.ListValue[EncoderSettingsVideoDescriptionsAeb56963Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsAeb56963Attributes](css.ref.Append("rec709_settings"))
}

type EncoderSettingsVideoDescriptions3B5Dc5F6Attributes struct {
	ref terra.Reference
}

func (csps EncoderSettingsVideoDescriptions3B5Dc5F6Attributes) InternalRef() (terra.Reference, error) {
	return csps.ref, nil
}

func (csps EncoderSettingsVideoDescriptions3B5Dc5F6Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions3B5Dc5F6Attributes {
	return EncoderSettingsVideoDescriptions3B5Dc5F6Attributes{ref: ref}
}

func (csps EncoderSettingsVideoDescriptions3B5Dc5F6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return csps.ref.InternalTokens()
}

type EncoderSettingsVideoDescriptions91Ab172FAttributes struct {
	ref terra.Reference
}

func (dvs EncoderSettingsVideoDescriptions91Ab172FAttributes) InternalRef() (terra.Reference, error) {
	return dvs.ref, nil
}

func (dvs EncoderSettingsVideoDescriptions91Ab172FAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions91Ab172FAttributes {
	return EncoderSettingsVideoDescriptions91Ab172FAttributes{ref: ref}
}

func (dvs EncoderSettingsVideoDescriptions91Ab172FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dvs.ref.InternalTokens()
}

type EncoderSettingsVideoDescriptions54Ced679Attributes struct {
	ref terra.Reference
}

func (hs EncoderSettingsVideoDescriptions54Ced679Attributes) InternalRef() (terra.Reference, error) {
	return hs.ref, nil
}

func (hs EncoderSettingsVideoDescriptions54Ced679Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions54Ced679Attributes {
	return EncoderSettingsVideoDescriptions54Ced679Attributes{ref: ref}
}

func (hs EncoderSettingsVideoDescriptions54Ced679Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hs.ref.InternalTokens()
}

func (hs EncoderSettingsVideoDescriptions54Ced679Attributes) MaxCll() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("max_cll"))
}

func (hs EncoderSettingsVideoDescriptions54Ced679Attributes) MaxFall() terra.NumberValue {
	return terra.ReferenceAsNumber(hs.ref.Append("max_fall"))
}

type EncoderSettingsVideoDescriptionsF12B29BaAttributes struct {
	ref terra.Reference
}

func (rs EncoderSettingsVideoDescriptionsF12B29BaAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs EncoderSettingsVideoDescriptionsF12B29BaAttributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsF12B29BaAttributes {
	return EncoderSettingsVideoDescriptionsF12B29BaAttributes{ref: ref}
}

func (rs EncoderSettingsVideoDescriptionsF12B29BaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

type EncoderSettingsVideoDescriptionsAeb56963Attributes struct {
	ref terra.Reference
}

func (rs EncoderSettingsVideoDescriptionsAeb56963Attributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs EncoderSettingsVideoDescriptionsAeb56963Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsAeb56963Attributes {
	return EncoderSettingsVideoDescriptionsAeb56963Attributes{ref: ref}
}

func (rs EncoderSettingsVideoDescriptionsAeb56963Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

type EncoderSettingsVideoDescriptions866F30C8Attributes struct {
	ref terra.Reference
}

func (fs EncoderSettingsVideoDescriptions866F30C8Attributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs EncoderSettingsVideoDescriptions866F30C8Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions866F30C8Attributes {
	return EncoderSettingsVideoDescriptions866F30C8Attributes{ref: ref}
}

func (fs EncoderSettingsVideoDescriptions866F30C8Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs EncoderSettingsVideoDescriptions866F30C8Attributes) TemporalFilterSettings() terra.ListValue[EncoderSettingsVideoDescriptionsFc51Dd67Attributes] {
	return terra.ReferenceAsList[EncoderSettingsVideoDescriptionsFc51Dd67Attributes](fs.ref.Append("temporal_filter_settings"))
}

type EncoderSettingsVideoDescriptionsFc51Dd67Attributes struct {
	ref terra.Reference
}

func (tfs EncoderSettingsVideoDescriptionsFc51Dd67Attributes) InternalRef() (terra.Reference, error) {
	return tfs.ref, nil
}

func (tfs EncoderSettingsVideoDescriptionsFc51Dd67Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptionsFc51Dd67Attributes {
	return EncoderSettingsVideoDescriptionsFc51Dd67Attributes{ref: ref}
}

func (tfs EncoderSettingsVideoDescriptionsFc51Dd67Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tfs.ref.InternalTokens()
}

func (tfs EncoderSettingsVideoDescriptionsFc51Dd67Attributes) PostFilterSharpening() terra.StringValue {
	return terra.ReferenceAsString(tfs.ref.Append("post_filter_sharpening"))
}

func (tfs EncoderSettingsVideoDescriptionsFc51Dd67Attributes) Strength() terra.StringValue {
	return terra.ReferenceAsString(tfs.ref.Append("strength"))
}

type EncoderSettingsVideoDescriptions6Ec21560Attributes struct {
	ref terra.Reference
}

func (tbs EncoderSettingsVideoDescriptions6Ec21560Attributes) InternalRef() (terra.Reference, error) {
	return tbs.ref, nil
}

func (tbs EncoderSettingsVideoDescriptions6Ec21560Attributes) InternalWithRef(ref terra.Reference) EncoderSettingsVideoDescriptions6Ec21560Attributes {
	return EncoderSettingsVideoDescriptions6Ec21560Attributes{ref: ref}
}

func (tbs EncoderSettingsVideoDescriptions6Ec21560Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbs.ref.InternalTokens()
}

func (tbs EncoderSettingsVideoDescriptions6Ec21560Attributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(tbs.ref.Append("prefix"))
}

func (tbs EncoderSettingsVideoDescriptions6Ec21560Attributes) TimecodeBurninFontSize() terra.StringValue {
	return terra.ReferenceAsString(tbs.ref.Append("timecode_burnin_font_size"))
}

func (tbs EncoderSettingsVideoDescriptions6Ec21560Attributes) TimecodeBurninPosition() terra.StringValue {
	return terra.ReferenceAsString(tbs.ref.Append("timecode_burnin_position"))
}

type InputAttachmentsAttributes struct {
	ref terra.Reference
}

func (ia InputAttachmentsAttributes) InternalRef() (terra.Reference, error) {
	return ia.ref, nil
}

func (ia InputAttachmentsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsAttributes {
	return InputAttachmentsAttributes{ref: ref}
}

func (ia InputAttachmentsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ia.ref.InternalTokens()
}

func (ia InputAttachmentsAttributes) InputAttachmentName() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("input_attachment_name"))
}

func (ia InputAttachmentsAttributes) InputId() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("input_id"))
}

func (ia InputAttachmentsAttributes) AutomaticInputFailoverSettings() terra.ListValue[InputAttachmentsAutomaticInputFailoverSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsAutomaticInputFailoverSettingsAttributes](ia.ref.Append("automatic_input_failover_settings"))
}

func (ia InputAttachmentsAttributes) InputSettings() terra.ListValue[InputAttachmentsInputSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsAttributes](ia.ref.Append("input_settings"))
}

type InputAttachmentsAutomaticInputFailoverSettingsAttributes struct {
	ref terra.Reference
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) InternalRef() (terra.Reference, error) {
	return aifs.ref, nil
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsAutomaticInputFailoverSettingsAttributes {
	return InputAttachmentsAutomaticInputFailoverSettingsAttributes{ref: ref}
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aifs.ref.InternalTokens()
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) ErrorClearTimeMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(aifs.ref.Append("error_clear_time_msec"))
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) InputPreference() terra.StringValue {
	return terra.ReferenceAsString(aifs.ref.Append("input_preference"))
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) SecondaryInputId() terra.StringValue {
	return terra.ReferenceAsString(aifs.ref.Append("secondary_input_id"))
}

func (aifs InputAttachmentsAutomaticInputFailoverSettingsAttributes) FailoverCondition() terra.SetValue[InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes] {
	return terra.ReferenceAsSet[InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes](aifs.ref.Append("failover_condition"))
}

type InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes struct {
	ref terra.Reference
}

func (fc InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes) InternalRef() (terra.Reference, error) {
	return fc.ref, nil
}

func (fc InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes {
	return InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes{ref: ref}
}

func (fc InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fc.ref.InternalTokens()
}

func (fc InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionAttributes) FailoverConditionSettings() terra.ListValue[InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes](fc.ref.Append("failover_condition_settings"))
}

type InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes struct {
	ref terra.Reference
}

func (fcs InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes) InternalRef() (terra.Reference, error) {
	return fcs.ref, nil
}

func (fcs InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes {
	return InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes{ref: ref}
}

func (fcs InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fcs.ref.InternalTokens()
}

func (fcs InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes) AudioSilenceSettings() terra.ListValue[InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes] {
	return terra.ReferenceAsList[InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes](fcs.ref.Append("audio_silence_settings"))
}

func (fcs InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes) InputLossSettings() terra.ListValue[InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes] {
	return terra.ReferenceAsList[InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes](fcs.ref.Append("input_loss_settings"))
}

func (fcs InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAttributes) VideoBlackSettings() terra.ListValue[InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes] {
	return terra.ReferenceAsList[InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes](fcs.ref.Append("video_black_settings"))
}

type InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes struct {
	ref terra.Reference
}

func (ass InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes) InternalRef() (terra.Reference, error) {
	return ass.ref, nil
}

func (ass InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes {
	return InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes{ref: ref}
}

func (ass InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ass.ref.InternalTokens()
}

func (ass InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes) AudioSelectorName() terra.StringValue {
	return terra.ReferenceAsString(ass.ref.Append("audio_selector_name"))
}

func (ass InputAttachmentsAutomaticInputFailoverSettings71D8493EAttributes) AudioSilenceThresholdMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(ass.ref.Append("audio_silence_threshold_msec"))
}

type InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes struct {
	ref terra.Reference
}

func (ils InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes) InternalRef() (terra.Reference, error) {
	return ils.ref, nil
}

func (ils InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes {
	return InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes{ref: ref}
}

func (ils InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ils.ref.InternalTokens()
}

func (ils InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69Attributes) InputLossThresholdMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(ils.ref.Append("input_loss_threshold_msec"))
}

type InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes struct {
	ref terra.Reference
}

func (vbs InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes) InternalRef() (terra.Reference, error) {
	return vbs.ref, nil
}

func (vbs InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes {
	return InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes{ref: ref}
}

func (vbs InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vbs.ref.InternalTokens()
}

func (vbs InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes) BlackDetectThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(vbs.ref.Append("black_detect_threshold"))
}

func (vbs InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcAttributes) VideoBlackThresholdMsec() terra.NumberValue {
	return terra.ReferenceAsNumber(vbs.ref.Append("video_black_threshold_msec"))
}

type InputAttachmentsInputSettingsAttributes struct {
	ref terra.Reference
}

func (is InputAttachmentsInputSettingsAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is InputAttachmentsInputSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsAttributes {
	return InputAttachmentsInputSettingsAttributes{ref: ref}
}

func (is InputAttachmentsInputSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is InputAttachmentsInputSettingsAttributes) DeblockFilter() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("deblock_filter"))
}

func (is InputAttachmentsInputSettingsAttributes) DenoiseFilter() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("denoise_filter"))
}

func (is InputAttachmentsInputSettingsAttributes) FilterStrength() terra.NumberValue {
	return terra.ReferenceAsNumber(is.ref.Append("filter_strength"))
}

func (is InputAttachmentsInputSettingsAttributes) InputFilter() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("input_filter"))
}

func (is InputAttachmentsInputSettingsAttributes) Scte35Pid() terra.NumberValue {
	return terra.ReferenceAsNumber(is.ref.Append("scte35_pid"))
}

func (is InputAttachmentsInputSettingsAttributes) Smpte2038DataPreference() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("smpte2038_data_preference"))
}

func (is InputAttachmentsInputSettingsAttributes) SourceEndBehavior() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("source_end_behavior"))
}

func (is InputAttachmentsInputSettingsAttributes) AudioSelector() terra.ListValue[InputAttachmentsInputSettingsAudioSelectorAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsAudioSelectorAttributes](is.ref.Append("audio_selector"))
}

func (is InputAttachmentsInputSettingsAttributes) CaptionSelector() terra.ListValue[InputAttachmentsInputSettingsCaptionSelectorAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsCaptionSelectorAttributes](is.ref.Append("caption_selector"))
}

func (is InputAttachmentsInputSettingsAttributes) NetworkInputSettings() terra.ListValue[InputAttachmentsInputSettingsNetworkInputSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsNetworkInputSettingsAttributes](is.ref.Append("network_input_settings"))
}

func (is InputAttachmentsInputSettingsAttributes) VideoSelector() terra.ListValue[InputAttachmentsInputSettingsVideoSelectorAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsVideoSelectorAttributes](is.ref.Append("video_selector"))
}

type InputAttachmentsInputSettingsAudioSelectorAttributes struct {
	ref terra.Reference
}

func (as InputAttachmentsInputSettingsAudioSelectorAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as InputAttachmentsInputSettingsAudioSelectorAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsAudioSelectorAttributes {
	return InputAttachmentsInputSettingsAudioSelectorAttributes{ref: ref}
}

func (as InputAttachmentsInputSettingsAudioSelectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as InputAttachmentsInputSettingsAudioSelectorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("name"))
}

func (as InputAttachmentsInputSettingsAudioSelectorAttributes) SelectorSettings() terra.ListValue[InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes](as.ref.Append("selector_settings"))
}

type InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes struct {
	ref terra.Reference
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes {
	return InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes{ref: ref}
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) AudioHlsRenditionSelection() terra.ListValue[InputAttachmentsInputSettingsFe539861Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsFe539861Attributes](ss.ref.Append("audio_hls_rendition_selection"))
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) AudioLanguageSelection() terra.ListValue[InputAttachmentsInputSettingsC1D0Ca7EAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsC1D0Ca7EAttributes](ss.ref.Append("audio_language_selection"))
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) AudioPidSelection() terra.ListValue[InputAttachmentsInputSettings5F997E5DAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettings5F997E5DAttributes](ss.ref.Append("audio_pid_selection"))
}

func (ss InputAttachmentsInputSettingsAudioSelectorSelectorSettingsAttributes) AudioTrackSelection() terra.ListValue[InputAttachmentsInputSettingsF6Cce638Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsF6Cce638Attributes](ss.ref.Append("audio_track_selection"))
}

type InputAttachmentsInputSettingsFe539861Attributes struct {
	ref terra.Reference
}

func (ahrs InputAttachmentsInputSettingsFe539861Attributes) InternalRef() (terra.Reference, error) {
	return ahrs.ref, nil
}

func (ahrs InputAttachmentsInputSettingsFe539861Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsFe539861Attributes {
	return InputAttachmentsInputSettingsFe539861Attributes{ref: ref}
}

func (ahrs InputAttachmentsInputSettingsFe539861Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ahrs.ref.InternalTokens()
}

func (ahrs InputAttachmentsInputSettingsFe539861Attributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(ahrs.ref.Append("group_id"))
}

func (ahrs InputAttachmentsInputSettingsFe539861Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ahrs.ref.Append("name"))
}

type InputAttachmentsInputSettingsC1D0Ca7EAttributes struct {
	ref terra.Reference
}

func (als InputAttachmentsInputSettingsC1D0Ca7EAttributes) InternalRef() (terra.Reference, error) {
	return als.ref, nil
}

func (als InputAttachmentsInputSettingsC1D0Ca7EAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsC1D0Ca7EAttributes {
	return InputAttachmentsInputSettingsC1D0Ca7EAttributes{ref: ref}
}

func (als InputAttachmentsInputSettingsC1D0Ca7EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return als.ref.InternalTokens()
}

func (als InputAttachmentsInputSettingsC1D0Ca7EAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(als.ref.Append("language_code"))
}

func (als InputAttachmentsInputSettingsC1D0Ca7EAttributes) LanguageSelectionPolicy() terra.StringValue {
	return terra.ReferenceAsString(als.ref.Append("language_selection_policy"))
}

type InputAttachmentsInputSettings5F997E5DAttributes struct {
	ref terra.Reference
}

func (aps InputAttachmentsInputSettings5F997E5DAttributes) InternalRef() (terra.Reference, error) {
	return aps.ref, nil
}

func (aps InputAttachmentsInputSettings5F997E5DAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings5F997E5DAttributes {
	return InputAttachmentsInputSettings5F997E5DAttributes{ref: ref}
}

func (aps InputAttachmentsInputSettings5F997E5DAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aps.ref.InternalTokens()
}

func (aps InputAttachmentsInputSettings5F997E5DAttributes) Pid() terra.NumberValue {
	return terra.ReferenceAsNumber(aps.ref.Append("pid"))
}

type InputAttachmentsInputSettingsF6Cce638Attributes struct {
	ref terra.Reference
}

func (ats InputAttachmentsInputSettingsF6Cce638Attributes) InternalRef() (terra.Reference, error) {
	return ats.ref, nil
}

func (ats InputAttachmentsInputSettingsF6Cce638Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsF6Cce638Attributes {
	return InputAttachmentsInputSettingsF6Cce638Attributes{ref: ref}
}

func (ats InputAttachmentsInputSettingsF6Cce638Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ats.ref.InternalTokens()
}

func (ats InputAttachmentsInputSettingsF6Cce638Attributes) DolbyEDecode() terra.ListValue[InputAttachmentsInputSettingsE92D8Fc6Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsE92D8Fc6Attributes](ats.ref.Append("dolby_e_decode"))
}

func (ats InputAttachmentsInputSettingsF6Cce638Attributes) Tracks() terra.SetValue[InputAttachmentsInputSettings57946D90Attributes] {
	return terra.ReferenceAsSet[InputAttachmentsInputSettings57946D90Attributes](ats.ref.Append("tracks"))
}

type InputAttachmentsInputSettingsE92D8Fc6Attributes struct {
	ref terra.Reference
}

func (ded InputAttachmentsInputSettingsE92D8Fc6Attributes) InternalRef() (terra.Reference, error) {
	return ded.ref, nil
}

func (ded InputAttachmentsInputSettingsE92D8Fc6Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsE92D8Fc6Attributes {
	return InputAttachmentsInputSettingsE92D8Fc6Attributes{ref: ref}
}

func (ded InputAttachmentsInputSettingsE92D8Fc6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ded.ref.InternalTokens()
}

func (ded InputAttachmentsInputSettingsE92D8Fc6Attributes) ProgramSelection() terra.StringValue {
	return terra.ReferenceAsString(ded.ref.Append("program_selection"))
}

type InputAttachmentsInputSettings57946D90Attributes struct {
	ref terra.Reference
}

func (t InputAttachmentsInputSettings57946D90Attributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t InputAttachmentsInputSettings57946D90Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings57946D90Attributes {
	return InputAttachmentsInputSettings57946D90Attributes{ref: ref}
}

func (t InputAttachmentsInputSettings57946D90Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t InputAttachmentsInputSettings57946D90Attributes) Track() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("track"))
}

type InputAttachmentsInputSettingsCaptionSelectorAttributes struct {
	ref terra.Reference
}

func (cs InputAttachmentsInputSettingsCaptionSelectorAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs InputAttachmentsInputSettingsCaptionSelectorAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsCaptionSelectorAttributes {
	return InputAttachmentsInputSettingsCaptionSelectorAttributes{ref: ref}
}

func (cs InputAttachmentsInputSettingsCaptionSelectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs InputAttachmentsInputSettingsCaptionSelectorAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("language_code"))
}

func (cs InputAttachmentsInputSettingsCaptionSelectorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("name"))
}

func (cs InputAttachmentsInputSettingsCaptionSelectorAttributes) SelectorSettings() terra.ListValue[InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes](cs.ref.Append("selector_settings"))
}

type InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes struct {
	ref terra.Reference
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes {
	return InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes{ref: ref}
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) AncillarySourceSettings() terra.ListValue[InputAttachmentsInputSettings2Ade7214Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettings2Ade7214Attributes](ss.ref.Append("ancillary_source_settings"))
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) AribSourceSettings() terra.ListValue[InputAttachmentsInputSettings126Dc0EeAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettings126Dc0EeAttributes](ss.ref.Append("arib_source_settings"))
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) DvbSubSourceSettings() terra.ListValue[InputAttachmentsInputSettings2Cf436B7Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettings2Cf436B7Attributes](ss.ref.Append("dvb_sub_source_settings"))
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) EmbeddedSourceSettings() terra.ListValue[InputAttachmentsInputSettings9Cff41AdAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettings9Cff41AdAttributes](ss.ref.Append("embedded_source_settings"))
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) Scte20SourceSettings() terra.ListValue[InputAttachmentsInputSettingsF42565DcAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsF42565DcAttributes](ss.ref.Append("scte20_source_settings"))
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) Scte27SourceSettings() terra.ListValue[InputAttachmentsInputSettingsA0F09701Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsA0F09701Attributes](ss.ref.Append("scte27_source_settings"))
}

func (ss InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsAttributes) TeletextSourceSettings() terra.ListValue[InputAttachmentsInputSettings4B91Db51Attributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettings4B91Db51Attributes](ss.ref.Append("teletext_source_settings"))
}

type InputAttachmentsInputSettings2Ade7214Attributes struct {
	ref terra.Reference
}

func (ass InputAttachmentsInputSettings2Ade7214Attributes) InternalRef() (terra.Reference, error) {
	return ass.ref, nil
}

func (ass InputAttachmentsInputSettings2Ade7214Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings2Ade7214Attributes {
	return InputAttachmentsInputSettings2Ade7214Attributes{ref: ref}
}

func (ass InputAttachmentsInputSettings2Ade7214Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ass.ref.InternalTokens()
}

func (ass InputAttachmentsInputSettings2Ade7214Attributes) SourceAncillaryChannelNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ass.ref.Append("source_ancillary_channel_number"))
}

type InputAttachmentsInputSettings126Dc0EeAttributes struct {
	ref terra.Reference
}

func (ass InputAttachmentsInputSettings126Dc0EeAttributes) InternalRef() (terra.Reference, error) {
	return ass.ref, nil
}

func (ass InputAttachmentsInputSettings126Dc0EeAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings126Dc0EeAttributes {
	return InputAttachmentsInputSettings126Dc0EeAttributes{ref: ref}
}

func (ass InputAttachmentsInputSettings126Dc0EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ass.ref.InternalTokens()
}

type InputAttachmentsInputSettings2Cf436B7Attributes struct {
	ref terra.Reference
}

func (dsss InputAttachmentsInputSettings2Cf436B7Attributes) InternalRef() (terra.Reference, error) {
	return dsss.ref, nil
}

func (dsss InputAttachmentsInputSettings2Cf436B7Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings2Cf436B7Attributes {
	return InputAttachmentsInputSettings2Cf436B7Attributes{ref: ref}
}

func (dsss InputAttachmentsInputSettings2Cf436B7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsss.ref.InternalTokens()
}

func (dsss InputAttachmentsInputSettings2Cf436B7Attributes) OcrLanguage() terra.StringValue {
	return terra.ReferenceAsString(dsss.ref.Append("ocr_language"))
}

func (dsss InputAttachmentsInputSettings2Cf436B7Attributes) Pid() terra.NumberValue {
	return terra.ReferenceAsNumber(dsss.ref.Append("pid"))
}

type InputAttachmentsInputSettings9Cff41AdAttributes struct {
	ref terra.Reference
}

func (ess InputAttachmentsInputSettings9Cff41AdAttributes) InternalRef() (terra.Reference, error) {
	return ess.ref, nil
}

func (ess InputAttachmentsInputSettings9Cff41AdAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings9Cff41AdAttributes {
	return InputAttachmentsInputSettings9Cff41AdAttributes{ref: ref}
}

func (ess InputAttachmentsInputSettings9Cff41AdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ess.ref.InternalTokens()
}

func (ess InputAttachmentsInputSettings9Cff41AdAttributes) Convert608To708() terra.StringValue {
	return terra.ReferenceAsString(ess.ref.Append("convert_608_to_708"))
}

func (ess InputAttachmentsInputSettings9Cff41AdAttributes) Scte20Detection() terra.StringValue {
	return terra.ReferenceAsString(ess.ref.Append("scte20_detection"))
}

func (ess InputAttachmentsInputSettings9Cff41AdAttributes) Source608ChannelNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ess.ref.Append("source_608_channel_number"))
}

type InputAttachmentsInputSettingsF42565DcAttributes struct {
	ref terra.Reference
}

func (sss InputAttachmentsInputSettingsF42565DcAttributes) InternalRef() (terra.Reference, error) {
	return sss.ref, nil
}

func (sss InputAttachmentsInputSettingsF42565DcAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsF42565DcAttributes {
	return InputAttachmentsInputSettingsF42565DcAttributes{ref: ref}
}

func (sss InputAttachmentsInputSettingsF42565DcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sss.ref.InternalTokens()
}

func (sss InputAttachmentsInputSettingsF42565DcAttributes) Convert608To708() terra.StringValue {
	return terra.ReferenceAsString(sss.ref.Append("convert_608_to_708"))
}

func (sss InputAttachmentsInputSettingsF42565DcAttributes) Source608ChannelNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(sss.ref.Append("source_608_channel_number"))
}

type InputAttachmentsInputSettingsA0F09701Attributes struct {
	ref terra.Reference
}

func (sss InputAttachmentsInputSettingsA0F09701Attributes) InternalRef() (terra.Reference, error) {
	return sss.ref, nil
}

func (sss InputAttachmentsInputSettingsA0F09701Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsA0F09701Attributes {
	return InputAttachmentsInputSettingsA0F09701Attributes{ref: ref}
}

func (sss InputAttachmentsInputSettingsA0F09701Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sss.ref.InternalTokens()
}

func (sss InputAttachmentsInputSettingsA0F09701Attributes) OcrLanguage() terra.StringValue {
	return terra.ReferenceAsString(sss.ref.Append("ocr_language"))
}

func (sss InputAttachmentsInputSettingsA0F09701Attributes) Pid() terra.NumberValue {
	return terra.ReferenceAsNumber(sss.ref.Append("pid"))
}

type InputAttachmentsInputSettings4B91Db51Attributes struct {
	ref terra.Reference
}

func (tss InputAttachmentsInputSettings4B91Db51Attributes) InternalRef() (terra.Reference, error) {
	return tss.ref, nil
}

func (tss InputAttachmentsInputSettings4B91Db51Attributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettings4B91Db51Attributes {
	return InputAttachmentsInputSettings4B91Db51Attributes{ref: ref}
}

func (tss InputAttachmentsInputSettings4B91Db51Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tss.ref.InternalTokens()
}

func (tss InputAttachmentsInputSettings4B91Db51Attributes) PageNumber() terra.StringValue {
	return terra.ReferenceAsString(tss.ref.Append("page_number"))
}

func (tss InputAttachmentsInputSettings4B91Db51Attributes) OutputRectangle() terra.ListValue[InputAttachmentsInputSettingsAd174B9AAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsAd174B9AAttributes](tss.ref.Append("output_rectangle"))
}

type InputAttachmentsInputSettingsAd174B9AAttributes struct {
	ref terra.Reference
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsAd174B9AAttributes {
	return InputAttachmentsInputSettingsAd174B9AAttributes{ref: ref}
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) Height() terra.NumberValue {
	return terra.ReferenceAsNumber(or.ref.Append("height"))
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) LeftOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(or.ref.Append("left_offset"))
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) TopOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(or.ref.Append("top_offset"))
}

func (or InputAttachmentsInputSettingsAd174B9AAttributes) Width() terra.NumberValue {
	return terra.ReferenceAsNumber(or.ref.Append("width"))
}

type InputAttachmentsInputSettingsNetworkInputSettingsAttributes struct {
	ref terra.Reference
}

func (nis InputAttachmentsInputSettingsNetworkInputSettingsAttributes) InternalRef() (terra.Reference, error) {
	return nis.ref, nil
}

func (nis InputAttachmentsInputSettingsNetworkInputSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsNetworkInputSettingsAttributes {
	return InputAttachmentsInputSettingsNetworkInputSettingsAttributes{ref: ref}
}

func (nis InputAttachmentsInputSettingsNetworkInputSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nis.ref.InternalTokens()
}

func (nis InputAttachmentsInputSettingsNetworkInputSettingsAttributes) ServerValidation() terra.StringValue {
	return terra.ReferenceAsString(nis.ref.Append("server_validation"))
}

func (nis InputAttachmentsInputSettingsNetworkInputSettingsAttributes) HlsInputSettings() terra.ListValue[InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes] {
	return terra.ReferenceAsList[InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes](nis.ref.Append("hls_input_settings"))
}

type InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes struct {
	ref terra.Reference
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) InternalRef() (terra.Reference, error) {
	return his.ref, nil
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes {
	return InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes{ref: ref}
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return his.ref.InternalTokens()
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) Bandwidth() terra.NumberValue {
	return terra.ReferenceAsNumber(his.ref.Append("bandwidth"))
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) BufferSegments() terra.NumberValue {
	return terra.ReferenceAsNumber(his.ref.Append("buffer_segments"))
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) Retries() terra.NumberValue {
	return terra.ReferenceAsNumber(his.ref.Append("retries"))
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) RetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(his.ref.Append("retry_interval"))
}

func (his InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsAttributes) Scte35Source() terra.StringValue {
	return terra.ReferenceAsString(his.ref.Append("scte35_source"))
}

type InputAttachmentsInputSettingsVideoSelectorAttributes struct {
	ref terra.Reference
}

func (vs InputAttachmentsInputSettingsVideoSelectorAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs InputAttachmentsInputSettingsVideoSelectorAttributes) InternalWithRef(ref terra.Reference) InputAttachmentsInputSettingsVideoSelectorAttributes {
	return InputAttachmentsInputSettingsVideoSelectorAttributes{ref: ref}
}

func (vs InputAttachmentsInputSettingsVideoSelectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs InputAttachmentsInputSettingsVideoSelectorAttributes) ColorSpace() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("color_space"))
}

func (vs InputAttachmentsInputSettingsVideoSelectorAttributes) ColorSpaceUsage() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("color_space_usage"))
}

type InputSpecificationAttributes struct {
	ref terra.Reference
}

func (is InputSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is InputSpecificationAttributes) InternalWithRef(ref terra.Reference) InputSpecificationAttributes {
	return InputSpecificationAttributes{ref: ref}
}

func (is InputSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is InputSpecificationAttributes) Codec() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("codec"))
}

func (is InputSpecificationAttributes) InputResolution() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("input_resolution"))
}

func (is InputSpecificationAttributes) MaximumBitrate() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("maximum_bitrate"))
}

type MaintenanceAttributes struct {
	ref terra.Reference
}

func (m MaintenanceAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m MaintenanceAttributes) InternalWithRef(ref terra.Reference) MaintenanceAttributes {
	return MaintenanceAttributes{ref: ref}
}

func (m MaintenanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m MaintenanceAttributes) MaintenanceDay() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("maintenance_day"))
}

func (m MaintenanceAttributes) MaintenanceStartTime() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("maintenance_start_time"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type VpcAttributes struct {
	ref terra.Reference
}

func (v VpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v VpcAttributes) InternalWithRef(ref terra.Reference) VpcAttributes {
	return VpcAttributes{ref: ref}
}

func (v VpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v VpcAttributes) AvailabilityZones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](v.ref.Append("availability_zones"))
}

func (v VpcAttributes) NetworkInterfaceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](v.ref.Append("network_interface_ids"))
}

func (v VpcAttributes) PublicAddressAllocationIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("public_address_allocation_ids"))
}

func (v VpcAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](v.ref.Append("security_group_ids"))
}

func (v VpcAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](v.ref.Append("subnet_ids"))
}

type CdiInputSpecificationState struct {
	Resolution string `json:"resolution"`
}

type DestinationsState struct {
	Id                   string                                  `json:"id"`
	MediaPackageSettings []DestinationsMediaPackageSettingsState `json:"media_package_settings"`
	MultiplexSettings    []DestinationsMultiplexSettingsState    `json:"multiplex_settings"`
	Settings             []DestinationsSettingsState             `json:"settings"`
}

type DestinationsMediaPackageSettingsState struct {
	ChannelId string `json:"channel_id"`
}

type DestinationsMultiplexSettingsState struct {
	MultiplexId string `json:"multiplex_id"`
	ProgramName string `json:"program_name"`
}

type DestinationsSettingsState struct {
	PasswordParam string `json:"password_param"`
	StreamName    string `json:"stream_name"`
	Url           string `json:"url"`
	Username      string `json:"username"`
}

type EncoderSettingsState struct {
	AudioDescriptions           []EncoderSettingsAudioDescriptionsState           `json:"audio_descriptions"`
	AvailBlanking               []EncoderSettingsAvailBlankingState               `json:"avail_blanking"`
	CaptionDescriptions         []EncoderSettingsCaptionDescriptionsState         `json:"caption_descriptions"`
	GlobalConfiguration         []EncoderSettingsGlobalConfigurationState         `json:"global_configuration"`
	MotionGraphicsConfiguration []EncoderSettingsMotionGraphicsConfigurationState `json:"motion_graphics_configuration"`
	NielsenConfiguration        []EncoderSettingsNielsenConfigurationState        `json:"nielsen_configuration"`
	OutputGroups                []EncoderSettingsOutputGroupsState                `json:"output_groups"`
	TimecodeConfig              []EncoderSettingsTimecodeConfigState              `json:"timecode_config"`
	VideoDescriptions           []EncoderSettingsVideoDescriptionsState           `json:"video_descriptions"`
}

type EncoderSettingsAudioDescriptionsState struct {
	AudioSelectorName          string                                                            `json:"audio_selector_name"`
	AudioType                  string                                                            `json:"audio_type"`
	AudioTypeControl           string                                                            `json:"audio_type_control"`
	LanguageCode               string                                                            `json:"language_code"`
	LanguageCodeControl        string                                                            `json:"language_code_control"`
	Name                       string                                                            `json:"name"`
	StreamName                 string                                                            `json:"stream_name"`
	AudioNormalizationSettings []EncoderSettingsAudioDescriptionsAudioNormalizationSettingsState `json:"audio_normalization_settings"`
	AudioWatermarkSettings     []EncoderSettingsAudioDescriptionsAudioWatermarkSettingsState     `json:"audio_watermark_settings"`
	CodecSettings              []EncoderSettingsAudioDescriptionsCodecSettingsState              `json:"codec_settings"`
	RemixSettings              []EncoderSettingsAudioDescriptionsRemixSettingsState              `json:"remix_settings"`
}

type EncoderSettingsAudioDescriptionsAudioNormalizationSettingsState struct {
	Algorithm        string  `json:"algorithm"`
	AlgorithmControl string  `json:"algorithm_control"`
	TargetLkfs       float64 `json:"target_lkfs"`
}

type EncoderSettingsAudioDescriptionsAudioWatermarkSettingsState struct {
	NielsenWatermarksSettings []EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsState `json:"nielsen_watermarks_settings"`
}

type EncoderSettingsAudioDescriptionsAudioWatermarkSettingsNielsenWatermarksSettingsState struct {
	NielsenDistributionType string                                          `json:"nielsen_distribution_type"`
	NielsenCbetSettings     []EncoderSettingsAudioDescriptions6C245389State `json:"nielsen_cbet_settings"`
	NielsenNaesIiNwSettings []EncoderSettingsAudioDescriptions30D774C5State `json:"nielsen_naes_ii_nw_settings"`
}

type EncoderSettingsAudioDescriptions6C245389State struct {
	CbetCheckDigitString string `json:"cbet_check_digit_string"`
	CbetStepaside        string `json:"cbet_stepaside"`
	Csid                 string `json:"csid"`
}

type EncoderSettingsAudioDescriptions30D774C5State struct {
	CheckDigitString string  `json:"check_digit_string"`
	Sid              float64 `json:"sid"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsState struct {
	AacSettings         []EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsState         `json:"aac_settings"`
	Ac3Settings         []EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsState         `json:"ac3_settings"`
	Eac3AtmosSettings   []EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsState   `json:"eac3_atmos_settings"`
	Eac3Settings        []EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsState        `json:"eac3_settings"`
	Mp2Settings         []EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsState         `json:"mp2_settings"`
	PassThroughSettings []EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsState `json:"pass_through_settings"`
	WavSettings         []EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsState         `json:"wav_settings"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsAacSettingsState struct {
	Bitrate         float64 `json:"bitrate"`
	CodingMode      string  `json:"coding_mode"`
	InputType       string  `json:"input_type"`
	Profile         string  `json:"profile"`
	RateControlMode string  `json:"rate_control_mode"`
	RawFormat       string  `json:"raw_format"`
	SampleRate      float64 `json:"sample_rate"`
	Spec            string  `json:"spec"`
	VbrQuality      string  `json:"vbr_quality"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsState struct {
	Bitrate         float64 `json:"bitrate"`
	BitstreamMode   string  `json:"bitstream_mode"`
	CodingMode      string  `json:"coding_mode"`
	Dialnorm        float64 `json:"dialnorm"`
	DrcProfile      string  `json:"drc_profile"`
	LfeFilter       string  `json:"lfe_filter"`
	MetadataControl string  `json:"metadata_control"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsState struct {
	Bitrate      float64 `json:"bitrate"`
	CodingMode   string  `json:"coding_mode"`
	Dialnorm     float64 `json:"dialnorm"`
	DrcLine      string  `json:"drc_line"`
	DrcRf        string  `json:"drc_rf"`
	HeightTrim   float64 `json:"height_trim"`
	SurroundTrim float64 `json:"surround_trim"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsState struct {
	AttenuationControl   string  `json:"attenuation_control"`
	Bitrate              float64 `json:"bitrate"`
	BitstreamMode        string  `json:"bitstream_mode"`
	CodingMode           string  `json:"coding_mode"`
	DcFilter             string  `json:"dc_filter"`
	Dialnorm             float64 `json:"dialnorm"`
	DrcLine              string  `json:"drc_line"`
	DrcRf                string  `json:"drc_rf"`
	LfeControl           string  `json:"lfe_control"`
	LfeFilter            string  `json:"lfe_filter"`
	LoRoCenterMixLevel   float64 `json:"lo_ro_center_mix_level"`
	LoRoSurroundMixLevel float64 `json:"lo_ro_surround_mix_level"`
	LtRtCenterMixLevel   float64 `json:"lt_rt_center_mix_level"`
	LtRtSurroundMixLevel float64 `json:"lt_rt_surround_mix_level"`
	MetadataControl      string  `json:"metadata_control"`
	PassthroughControl   string  `json:"passthrough_control"`
	PhaseControl         string  `json:"phase_control"`
	StereoDownmix        string  `json:"stereo_downmix"`
	SurroundExMode       string  `json:"surround_ex_mode"`
	SurroundMode         string  `json:"surround_mode"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsState struct {
	Bitrate    float64 `json:"bitrate"`
	CodingMode string  `json:"coding_mode"`
	SampleRate float64 `json:"sample_rate"`
}

type EncoderSettingsAudioDescriptionsCodecSettingsPassThroughSettingsState struct{}

type EncoderSettingsAudioDescriptionsCodecSettingsWavSettingsState struct {
	BitDepth   float64 `json:"bit_depth"`
	CodingMode string  `json:"coding_mode"`
	SampleRate float64 `json:"sample_rate"`
}

type EncoderSettingsAudioDescriptionsRemixSettingsState struct {
	ChannelsIn      float64                                                             `json:"channels_in"`
	ChannelsOut     float64                                                             `json:"channels_out"`
	ChannelMappings []EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsState `json:"channel_mappings"`
}

type EncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsState struct {
	OutputChannel      float64                                         `json:"output_channel"`
	InputChannelLevels []EncoderSettingsAudioDescriptionsA72D0F60State `json:"input_channel_levels"`
}

type EncoderSettingsAudioDescriptionsA72D0F60State struct {
	Gain         float64 `json:"gain"`
	InputChannel float64 `json:"input_channel"`
}

type EncoderSettingsAvailBlankingState struct {
	State              string                                                `json:"state"`
	AvailBlankingImage []EncoderSettingsAvailBlankingAvailBlankingImageState `json:"avail_blanking_image"`
}

type EncoderSettingsAvailBlankingAvailBlankingImageState struct {
	PasswordParam string `json:"password_param"`
	Uri           string `json:"uri"`
	Username      string `json:"username"`
}

type EncoderSettingsCaptionDescriptionsState struct {
	Accessibility       string                                                       `json:"accessibility"`
	CaptionSelectorName string                                                       `json:"caption_selector_name"`
	LanguageCode        string                                                       `json:"language_code"`
	LanguageDescription string                                                       `json:"language_description"`
	Name                string                                                       `json:"name"`
	DestinationSettings []EncoderSettingsCaptionDescriptionsDestinationSettingsState `json:"destination_settings"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsState struct {
	AribDestinationSettings               []EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsState               `json:"arib_destination_settings"`
	BurnInDestinationSettings             []EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsState             `json:"burn_in_destination_settings"`
	DvbSubDestinationSettings             []EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsState             `json:"dvb_sub_destination_settings"`
	EbuTtDDestinationSettings             []EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsState             `json:"ebu_tt_d_destination_settings"`
	EmbeddedDestinationSettings           []EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsState           `json:"embedded_destination_settings"`
	EmbeddedPlusScte20DestinationSettings []EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsState `json:"embedded_plus_scte20_destination_settings"`
	RtmpCaptionInfoDestinationSettings    []EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsState    `json:"rtmp_caption_info_destination_settings"`
	Scte20PlusEmbeddedDestinationSettings []EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsState `json:"scte20_plus_embedded_destination_settings"`
	Scte27DestinationSettings             []EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsState             `json:"scte27_destination_settings"`
	SmpteTtDestinationSettings            []EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsState            `json:"smpte_tt_destination_settings"`
	TeletextDestinationSettings           []EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsState           `json:"teletext_destination_settings"`
	TtmlDestinationSettings               []EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsState               `json:"ttml_destination_settings"`
	WebvttDestinationSettings             []EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsState             `json:"webvtt_destination_settings"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsAribDestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsState struct {
	Alignment           string                                            `json:"alignment"`
	BackgroundColor     string                                            `json:"background_color"`
	BackgroundOpacity   float64                                           `json:"background_opacity"`
	FontColor           string                                            `json:"font_color"`
	FontOpacity         float64                                           `json:"font_opacity"`
	FontResolution      float64                                           `json:"font_resolution"`
	FontSize            string                                            `json:"font_size"`
	OutlineColor        string                                            `json:"outline_color"`
	OutlineSize         float64                                           `json:"outline_size"`
	ShadowColor         string                                            `json:"shadow_color"`
	ShadowOpacity       float64                                           `json:"shadow_opacity"`
	ShadowXOffset       float64                                           `json:"shadow_x_offset"`
	ShadowYOffset       float64                                           `json:"shadow_y_offset"`
	TeletextGridControl string                                            `json:"teletext_grid_control"`
	XPosition           float64                                           `json:"x_position"`
	YPosition           float64                                           `json:"y_position"`
	Font                []EncoderSettingsCaptionDescriptionsA154227AState `json:"font"`
}

type EncoderSettingsCaptionDescriptionsA154227AState struct {
	PasswordParam string `json:"password_param"`
	Uri           string `json:"uri"`
	Username      string `json:"username"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsState struct {
	Alignment           string                                            `json:"alignment"`
	BackgroundColor     string                                            `json:"background_color"`
	BackgroundOpacity   float64                                           `json:"background_opacity"`
	FontColor           string                                            `json:"font_color"`
	FontOpacity         float64                                           `json:"font_opacity"`
	FontResolution      float64                                           `json:"font_resolution"`
	FontSize            string                                            `json:"font_size"`
	OutlineColor        string                                            `json:"outline_color"`
	OutlineSize         float64                                           `json:"outline_size"`
	ShadowColor         string                                            `json:"shadow_color"`
	ShadowOpacity       float64                                           `json:"shadow_opacity"`
	ShadowXOffset       float64                                           `json:"shadow_x_offset"`
	ShadowYOffset       float64                                           `json:"shadow_y_offset"`
	TeletextGridControl string                                            `json:"teletext_grid_control"`
	XPosition           float64                                           `json:"x_position"`
	YPosition           float64                                           `json:"y_position"`
	Font                []EncoderSettingsCaptionDescriptions37F9F137State `json:"font"`
}

type EncoderSettingsCaptionDescriptions37F9F137State struct {
	PasswordParam string `json:"password_param"`
	Uri           string `json:"uri"`
	Username      string `json:"username"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEbuTtDDestinationSettingsState struct {
	CopyrightHolder string `json:"copyright_holder"`
	FillLineGap     string `json:"fill_line_gap"`
	FontFamily      string `json:"font_family"`
	StyleControl    string `json:"style_control"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsEmbeddedPlusScte20DestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsRtmpCaptionInfoDestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsScte20PlusEmbeddedDestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsScte27DestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsSmpteTtDestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsState struct{}

type EncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsState struct {
	StyleControl string `json:"style_control"`
}

type EncoderSettingsCaptionDescriptionsDestinationSettingsWebvttDestinationSettingsState struct {
	StyleControl string `json:"style_control"`
}

type EncoderSettingsGlobalConfigurationState struct {
	InitialAudioGain          float64                                                    `json:"initial_audio_gain"`
	InputEndAction            string                                                     `json:"input_end_action"`
	OutputLockingMode         string                                                     `json:"output_locking_mode"`
	OutputTimingSource        string                                                     `json:"output_timing_source"`
	SupportLowFramerateInputs string                                                     `json:"support_low_framerate_inputs"`
	InputLossBehavior         []EncoderSettingsGlobalConfigurationInputLossBehaviorState `json:"input_loss_behavior"`
}

type EncoderSettingsGlobalConfigurationInputLossBehaviorState struct {
	BlackFrameMsec      float64                                                                       `json:"black_frame_msec"`
	InputLossImageColor string                                                                        `json:"input_loss_image_color"`
	InputLossImageType  string                                                                        `json:"input_loss_image_type"`
	RepeatFrameMsec     float64                                                                       `json:"repeat_frame_msec"`
	InputLossImageSlate []EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateState `json:"input_loss_image_slate"`
}

type EncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateState struct {
	PasswordParam string `json:"password_param"`
	Uri           string `json:"uri"`
	Username      string `json:"username"`
}

type EncoderSettingsMotionGraphicsConfigurationState struct {
	MotionGraphicsInsertion string                                                                  `json:"motion_graphics_insertion"`
	MotionGraphicsSettings  []EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsState `json:"motion_graphics_settings"`
}

type EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsState struct {
	HtmlMotionGraphicsSettings []EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsState `json:"html_motion_graphics_settings"`
}

type EncoderSettingsMotionGraphicsConfigurationMotionGraphicsSettingsHtmlMotionGraphicsSettingsState struct{}

type EncoderSettingsNielsenConfigurationState struct {
	DistributorId          string `json:"distributor_id"`
	NielsenPcmToId3Tagging string `json:"nielsen_pcm_to_id3_tagging"`
}

type EncoderSettingsOutputGroupsState struct {
	Name                string                                                `json:"name"`
	OutputGroupSettings []EncoderSettingsOutputGroupsOutputGroupSettingsState `json:"output_group_settings"`
	Outputs             []EncoderSettingsOutputGroupsOutputsState             `json:"outputs"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsState struct {
	ArchiveGroupSettings      []EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsState      `json:"archive_group_settings"`
	FrameCaptureGroupSettings []EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsState `json:"frame_capture_group_settings"`
	HlsGroupSettings          []EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsState          `json:"hls_group_settings"`
	MediaPackageGroupSettings []EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsState `json:"media_package_group_settings"`
	MsSmoothGroupSettings     []EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsState     `json:"ms_smooth_group_settings"`
	MultiplexGroupSettings    []EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsState    `json:"multiplex_group_settings"`
	RtmpGroupSettings         []EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsState         `json:"rtmp_group_settings"`
	UdpGroupSettings          []EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsState          `json:"udp_group_settings"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsState struct {
	RolloverInterval   float64                                    `json:"rollover_interval"`
	ArchiveCdnSettings []EncoderSettingsOutputGroups6Ca5830EState `json:"archive_cdn_settings"`
	Destination        []EncoderSettingsOutputGroups946A5B94State `json:"destination"`
}

type EncoderSettingsOutputGroups6Ca5830EState struct {
	ArchiveS3Settings []EncoderSettingsOutputGroups8B1E8283State `json:"archive_s3_settings"`
}

type EncoderSettingsOutputGroups8B1E8283State struct {
	CannedAcl string `json:"canned_acl"`
}

type EncoderSettingsOutputGroups946A5B94State struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsState struct {
	Destination             []EncoderSettingsOutputGroups0873Af26State `json:"destination"`
	FrameCaptureCdnSettings []EncoderSettingsOutputGroupsBecbf118State `json:"frame_capture_cdn_settings"`
}

type EncoderSettingsOutputGroups0873Af26State struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsBecbf118State struct {
	FrameCaptureS3Settings []EncoderSettingsOutputGroups73Eaea20State `json:"frame_capture_s3_settings"`
}

type EncoderSettingsOutputGroups73Eaea20State struct {
	CannedAcl string `json:"canned_acl"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsState struct {
	AdMarkers                  []string                                   `json:"ad_markers"`
	BaseUrlContent             string                                     `json:"base_url_content"`
	BaseUrlContent1            string                                     `json:"base_url_content1"`
	BaseUrlManifest            string                                     `json:"base_url_manifest"`
	BaseUrlManifest1           string                                     `json:"base_url_manifest1"`
	CaptionLanguageSetting     string                                     `json:"caption_language_setting"`
	ClientCache                string                                     `json:"client_cache"`
	CodecSpecification         string                                     `json:"codec_specification"`
	ConstantIv                 string                                     `json:"constant_iv"`
	DirectoryStructure         string                                     `json:"directory_structure"`
	DiscontinuityTags          string                                     `json:"discontinuity_tags"`
	EncryptionType             string                                     `json:"encryption_type"`
	HlsId3SegmentTagging       string                                     `json:"hls_id3_segment_tagging"`
	IframeOnlyPlaylists        string                                     `json:"iframe_only_playlists"`
	IncompleteSegmentBehavior  string                                     `json:"incomplete_segment_behavior"`
	IndexNSegments             float64                                    `json:"index_n_segments"`
	InputLossAction            string                                     `json:"input_loss_action"`
	IvInManifest               string                                     `json:"iv_in_manifest"`
	IvSource                   string                                     `json:"iv_source"`
	KeepSegments               float64                                    `json:"keep_segments"`
	KeyFormat                  string                                     `json:"key_format"`
	KeyFormatVersions          string                                     `json:"key_format_versions"`
	ManifestCompression        string                                     `json:"manifest_compression"`
	ManifestDurationFormat     string                                     `json:"manifest_duration_format"`
	MinSegmentLength           float64                                    `json:"min_segment_length"`
	Mode                       string                                     `json:"mode"`
	OutputSelection            string                                     `json:"output_selection"`
	ProgramDateTime            string                                     `json:"program_date_time"`
	ProgramDateTimeClock       string                                     `json:"program_date_time_clock"`
	ProgramDateTimePeriod      float64                                    `json:"program_date_time_period"`
	RedundantManifest          string                                     `json:"redundant_manifest"`
	SegmentLength              float64                                    `json:"segment_length"`
	SegmentsPerSubdirectory    float64                                    `json:"segments_per_subdirectory"`
	StreamInfResolution        string                                     `json:"stream_inf_resolution"`
	TimedMetadataId3Frame      string                                     `json:"timed_metadata_id3_frame"`
	TimedMetadataId3Period     float64                                    `json:"timed_metadata_id3_period"`
	TimestampDeltaMilliseconds float64                                    `json:"timestamp_delta_milliseconds"`
	TsFileMode                 string                                     `json:"ts_file_mode"`
	CaptionLanguageMappings    []EncoderSettingsOutputGroups56B1D910State `json:"caption_language_mappings"`
	Destination                []EncoderSettingsOutputGroups51D9552AState `json:"destination"`
	HlsCdnSettings             []EncoderSettingsOutputGroupsDbdb908CState `json:"hls_cdn_settings"`
	KeyProviderSettings        []EncoderSettingsOutputGroups4A4032A1State `json:"key_provider_settings"`
}

type EncoderSettingsOutputGroups56B1D910State struct {
	CaptionChannel      float64 `json:"caption_channel"`
	LanguageCode        string  `json:"language_code"`
	LanguageDescription string  `json:"language_description"`
}

type EncoderSettingsOutputGroups51D9552AState struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsDbdb908CState struct {
	HlsAkamaiSettings     []EncoderSettingsOutputGroups366D79D0State `json:"hls_akamai_settings"`
	HlsBasicPutSettings   []EncoderSettingsOutputGroupsAfea95D2State `json:"hls_basic_put_settings"`
	HlsMediaStoreSettings []EncoderSettingsOutputGroups91A77976State `json:"hls_media_store_settings"`
	HlsS3Settings         []EncoderSettingsOutputGroups72Ef1Fd3State `json:"hls_s3_settings"`
	HlsWebdavSettings     []EncoderSettingsOutputGroups6F55Eba5State `json:"hls_webdav_settings"`
}

type EncoderSettingsOutputGroups366D79D0State struct {
	ConnectionRetryInterval float64 `json:"connection_retry_interval"`
	FilecacheDuration       float64 `json:"filecache_duration"`
	HttpTransferMode        string  `json:"http_transfer_mode"`
	NumRetries              float64 `json:"num_retries"`
	RestartDelay            float64 `json:"restart_delay"`
	Salt                    string  `json:"salt"`
	Token                   string  `json:"token"`
}

type EncoderSettingsOutputGroupsAfea95D2State struct {
	ConnectionRetryInterval float64 `json:"connection_retry_interval"`
	FilecacheDuration       float64 `json:"filecache_duration"`
	NumRetries              float64 `json:"num_retries"`
	RestartDelay            float64 `json:"restart_delay"`
}

type EncoderSettingsOutputGroups91A77976State struct {
	ConnectionRetryInterval float64 `json:"connection_retry_interval"`
	FilecacheDuration       float64 `json:"filecache_duration"`
	MediaStoreStorageClass  string  `json:"media_store_storage_class"`
	NumRetries              float64 `json:"num_retries"`
	RestartDelay            float64 `json:"restart_delay"`
}

type EncoderSettingsOutputGroups72Ef1Fd3State struct {
	CannedAcl string `json:"canned_acl"`
}

type EncoderSettingsOutputGroups6F55Eba5State struct {
	ConnectionRetryInterval float64 `json:"connection_retry_interval"`
	FilecacheDuration       float64 `json:"filecache_duration"`
	HttpTransferMode        string  `json:"http_transfer_mode"`
	NumRetries              float64 `json:"num_retries"`
	RestartDelay            float64 `json:"restart_delay"`
}

type EncoderSettingsOutputGroups4A4032A1State struct {
	StaticKeySettings []EncoderSettingsOutputGroupsEc1E7B06State `json:"static_key_settings"`
}

type EncoderSettingsOutputGroupsEc1E7B06State struct {
	StaticKeyValue    string                                     `json:"static_key_value"`
	KeyProviderServer []EncoderSettingsOutputGroups9Fd5Ebb9State `json:"key_provider_server"`
}

type EncoderSettingsOutputGroups9Fd5Ebb9State struct {
	PasswordParam string `json:"password_param"`
	Uri           string `json:"uri"`
	Username      string `json:"username"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsState struct {
	Destination []EncoderSettingsOutputGroups99AbffddState `json:"destination"`
}

type EncoderSettingsOutputGroups99AbffddState struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsState struct {
	AcquisitionPointId       string                                     `json:"acquisition_point_id"`
	AudioOnlyTimecodeControl string                                     `json:"audio_only_timecode_control"`
	CertificateMode          string                                     `json:"certificate_mode"`
	ConnectionRetryInterval  float64                                    `json:"connection_retry_interval"`
	EventId                  string                                     `json:"event_id"`
	EventIdMode              string                                     `json:"event_id_mode"`
	EventStopBehavior        string                                     `json:"event_stop_behavior"`
	FilecacheDuration        float64                                    `json:"filecache_duration"`
	FragmentLength           float64                                    `json:"fragment_length"`
	InputLossAction          string                                     `json:"input_loss_action"`
	NumRetries               float64                                    `json:"num_retries"`
	RestartDelay             float64                                    `json:"restart_delay"`
	SegmentationMode         string                                     `json:"segmentation_mode"`
	SendDelayMs              float64                                    `json:"send_delay_ms"`
	SparseTrackType          string                                     `json:"sparse_track_type"`
	StreamManifestBehavior   string                                     `json:"stream_manifest_behavior"`
	TimestampOffset          string                                     `json:"timestamp_offset"`
	TimestampOffsetMode      string                                     `json:"timestamp_offset_mode"`
	Destination              []EncoderSettingsOutputGroupsE1E290AaState `json:"destination"`
}

type EncoderSettingsOutputGroupsE1E290AaState struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsMultiplexGroupSettingsState struct{}

type EncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsState struct {
	AdMarkers            []string `json:"ad_markers"`
	AuthenticationScheme string   `json:"authentication_scheme"`
	CacheFullBehavior    string   `json:"cache_full_behavior"`
	CacheLength          float64  `json:"cache_length"`
	CaptionData          string   `json:"caption_data"`
	InputLossAction      string   `json:"input_loss_action"`
	RestartDelay         float64  `json:"restart_delay"`
}

type EncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsState struct {
	InputLossAction        string  `json:"input_loss_action"`
	TimedMetadataId3Frame  string  `json:"timed_metadata_id3_frame"`
	TimedMetadataId3Period float64 `json:"timed_metadata_id3_period"`
}

type EncoderSettingsOutputGroupsOutputsState struct {
	AudioDescriptionNames   []string                                                `json:"audio_description_names"`
	CaptionDescriptionNames []string                                                `json:"caption_description_names"`
	OutputName              string                                                  `json:"output_name"`
	VideoDescriptionName    string                                                  `json:"video_description_name"`
	OutputSettings          []EncoderSettingsOutputGroupsOutputsOutputSettingsState `json:"output_settings"`
}

type EncoderSettingsOutputGroupsOutputsOutputSettingsState struct {
	ArchiveOutputSettings      []EncoderSettingsOutputGroupsE85958CdState `json:"archive_output_settings"`
	FrameCaptureOutputSettings []EncoderSettingsOutputGroups7E0D03D3State `json:"frame_capture_output_settings"`
	HlsOutputSettings          []EncoderSettingsOutputGroups2466Efb3State `json:"hls_output_settings"`
	MediaPackageOutputSettings []EncoderSettingsOutputGroups8Fba9De4State `json:"media_package_output_settings"`
	MsSmoothOutputSettings     []EncoderSettingsOutputGroups2Ac24Ce4State `json:"ms_smooth_output_settings"`
	MultiplexOutputSettings    []EncoderSettingsOutputGroups19A359DaState `json:"multiplex_output_settings"`
	RtmpOutputSettings         []EncoderSettingsOutputGroups87D0Bb71State `json:"rtmp_output_settings"`
	UdpOutputSettings          []EncoderSettingsOutputGroupsE9Fe7E35State `json:"udp_output_settings"`
}

type EncoderSettingsOutputGroupsE85958CdState struct {
	Extension         string                                     `json:"extension"`
	NameModifier      string                                     `json:"name_modifier"`
	ContainerSettings []EncoderSettingsOutputGroupsC361Ad84State `json:"container_settings"`
}

type EncoderSettingsOutputGroupsC361Ad84State struct {
	M2TsSettings []EncoderSettingsOutputGroups682F5037State `json:"m2ts_settings"`
	RawSettings  []EncoderSettingsOutputGroups6C7251C5State `json:"raw_settings"`
}

type EncoderSettingsOutputGroups682F5037State struct {
	AbsentInputAudioBehavior string                                     `json:"absent_input_audio_behavior"`
	Arib                     string                                     `json:"arib"`
	AribCaptionsPid          string                                     `json:"arib_captions_pid"`
	AribCaptionsPidControl   string                                     `json:"arib_captions_pid_control"`
	AudioBufferModel         string                                     `json:"audio_buffer_model"`
	AudioFramesPerPes        float64                                    `json:"audio_frames_per_pes"`
	AudioPids                string                                     `json:"audio_pids"`
	AudioStreamType          string                                     `json:"audio_stream_type"`
	Bitrate                  float64                                    `json:"bitrate"`
	BufferModel              string                                     `json:"buffer_model"`
	CcDescriptor             string                                     `json:"cc_descriptor"`
	DvbSubPids               string                                     `json:"dvb_sub_pids"`
	DvbTeletextPid           string                                     `json:"dvb_teletext_pid"`
	Ebif                     string                                     `json:"ebif"`
	EbpAudioInterval         string                                     `json:"ebp_audio_interval"`
	EbpLookaheadMs           float64                                    `json:"ebp_lookahead_ms"`
	EbpPlacement             string                                     `json:"ebp_placement"`
	EcmPid                   string                                     `json:"ecm_pid"`
	EsRateInPes              string                                     `json:"es_rate_in_pes"`
	EtvPlatformPid           string                                     `json:"etv_platform_pid"`
	EtvSignalPid             string                                     `json:"etv_signal_pid"`
	FragmentTime             float64                                    `json:"fragment_time"`
	Klv                      string                                     `json:"klv"`
	KlvDataPids              string                                     `json:"klv_data_pids"`
	NielsenId3Behavior       string                                     `json:"nielsen_id3_behavior"`
	NullPacketBitrate        float64                                    `json:"null_packet_bitrate"`
	PatInterval              float64                                    `json:"pat_interval"`
	PcrControl               string                                     `json:"pcr_control"`
	PcrPeriod                float64                                    `json:"pcr_period"`
	PcrPid                   string                                     `json:"pcr_pid"`
	PmtInterval              float64                                    `json:"pmt_interval"`
	PmtPid                   string                                     `json:"pmt_pid"`
	ProgramNum               float64                                    `json:"program_num"`
	RateMode                 string                                     `json:"rate_mode"`
	Scte27Pids               string                                     `json:"scte27_pids"`
	Scte35Control            string                                     `json:"scte35_control"`
	Scte35Pid                string                                     `json:"scte35_pid"`
	SegmentationMarkers      string                                     `json:"segmentation_markers"`
	SegmentationStyle        string                                     `json:"segmentation_style"`
	SegmentationTime         float64                                    `json:"segmentation_time"`
	TimedMetadataBehavior    string                                     `json:"timed_metadata_behavior"`
	TimedMetadataPid         string                                     `json:"timed_metadata_pid"`
	TransportStreamId        float64                                    `json:"transport_stream_id"`
	VideoPid                 string                                     `json:"video_pid"`
	DvbNitSettings           []EncoderSettingsOutputGroupsAeda71A0State `json:"dvb_nit_settings"`
	DvbSdtSettings           []EncoderSettingsOutputGroupsC528Ad2CState `json:"dvb_sdt_settings"`
	DvbTdtSettings           []EncoderSettingsOutputGroups1Cef98A5State `json:"dvb_tdt_settings"`
}

type EncoderSettingsOutputGroupsAeda71A0State struct {
	NetworkId   float64 `json:"network_id"`
	NetworkName string  `json:"network_name"`
	RepInterval float64 `json:"rep_interval"`
}

type EncoderSettingsOutputGroupsC528Ad2CState struct {
	OutputSdt           string  `json:"output_sdt"`
	RepInterval         float64 `json:"rep_interval"`
	ServiceName         string  `json:"service_name"`
	ServiceProviderName string  `json:"service_provider_name"`
}

type EncoderSettingsOutputGroups1Cef98A5State struct {
	RepInterval float64 `json:"rep_interval"`
}

type EncoderSettingsOutputGroups6C7251C5State struct{}

type EncoderSettingsOutputGroups7E0D03D3State struct {
	NameModifier string `json:"name_modifier"`
}

type EncoderSettingsOutputGroups2466Efb3State struct {
	H265PackagingType string                                     `json:"h265_packaging_type"`
	NameModifier      string                                     `json:"name_modifier"`
	SegmentModifier   string                                     `json:"segment_modifier"`
	HlsSettings       []EncoderSettingsOutputGroups84B14BcfState `json:"hls_settings"`
}

type EncoderSettingsOutputGroups84B14BcfState struct {
	AudioOnlyHlsSettings    []EncoderSettingsOutputGroups46A19Fa7State `json:"audio_only_hls_settings"`
	Fmp4HlsSettings         []EncoderSettingsOutputGroupsEbe8Fc53State `json:"fmp4_hls_settings"`
	FrameCaptureHlsSettings []EncoderSettingsOutputGroupsE23Ce693State `json:"frame_capture_hls_settings"`
	StandardHlsSettings     []EncoderSettingsOutputGroups15Feab49State `json:"standard_hls_settings"`
}

type EncoderSettingsOutputGroups46A19Fa7State struct {
	AudioGroupId   string                                     `json:"audio_group_id"`
	AudioTrackType string                                     `json:"audio_track_type"`
	SegmentType    string                                     `json:"segment_type"`
	AudioOnlyImage []EncoderSettingsOutputGroups39B6C70CState `json:"audio_only_image"`
}

type EncoderSettingsOutputGroups39B6C70CState struct {
	PasswordParam string `json:"password_param"`
	Uri           string `json:"uri"`
	Username      string `json:"username"`
}

type EncoderSettingsOutputGroupsEbe8Fc53State struct {
	AudioRenditionSets    string `json:"audio_rendition_sets"`
	NielsenId3Behavior    string `json:"nielsen_id3_behavior"`
	TimedMetadataBehavior string `json:"timed_metadata_behavior"`
}

type EncoderSettingsOutputGroupsE23Ce693State struct{}

type EncoderSettingsOutputGroups15Feab49State struct {
	AudioRenditionSets string                                     `json:"audio_rendition_sets"`
	M3U8Settings       []EncoderSettingsOutputGroupsBa0C557EState `json:"m3u8_settings"`
}

type EncoderSettingsOutputGroupsBa0C557EState struct {
	AudioFramesPerPes     float64 `json:"audio_frames_per_pes"`
	AudioPids             string  `json:"audio_pids"`
	EcmPid                string  `json:"ecm_pid"`
	NielsenId3Behavior    string  `json:"nielsen_id3_behavior"`
	PatInterval           float64 `json:"pat_interval"`
	PcrControl            string  `json:"pcr_control"`
	PcrPeriod             float64 `json:"pcr_period"`
	PcrPid                string  `json:"pcr_pid"`
	PmtInterval           float64 `json:"pmt_interval"`
	PmtPid                string  `json:"pmt_pid"`
	ProgramNum            float64 `json:"program_num"`
	Scte35Behavior        string  `json:"scte35_behavior"`
	Scte35Pid             string  `json:"scte35_pid"`
	TimedMetadataBehavior string  `json:"timed_metadata_behavior"`
	TimedMetadataPid      string  `json:"timed_metadata_pid"`
	TransportStreamId     float64 `json:"transport_stream_id"`
	VideoPid              string  `json:"video_pid"`
}

type EncoderSettingsOutputGroups8Fba9De4State struct{}

type EncoderSettingsOutputGroups2Ac24Ce4State struct {
	H265PackagingType string `json:"h265_packaging_type"`
	NameModifier      string `json:"name_modifier"`
}

type EncoderSettingsOutputGroups19A359DaState struct {
	Destination []EncoderSettingsOutputGroups98E2175DState `json:"destination"`
}

type EncoderSettingsOutputGroups98E2175DState struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroups87D0Bb71State struct {
	CertificateMode         string                                     `json:"certificate_mode"`
	ConnectionRetryInterval float64                                    `json:"connection_retry_interval"`
	NumRetries              float64                                    `json:"num_retries"`
	Destination             []EncoderSettingsOutputGroups096B1Fb0State `json:"destination"`
}

type EncoderSettingsOutputGroups096B1Fb0State struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsE9Fe7E35State struct {
	BufferMsec        float64                                    `json:"buffer_msec"`
	ContainerSettings []EncoderSettingsOutputGroups5B4D9852State `json:"container_settings"`
	Destination       []EncoderSettingsOutputGroupsA199D051State `json:"destination"`
	FecOutputSettings []EncoderSettingsOutputGroupsAbb6Dab5State `json:"fec_output_settings"`
}

type EncoderSettingsOutputGroups5B4D9852State struct {
	M2TsSettings []EncoderSettingsOutputGroupsF52F81BeState `json:"m2ts_settings"`
}

type EncoderSettingsOutputGroupsF52F81BeState struct {
	AbsentInputAudioBehavior string                                     `json:"absent_input_audio_behavior"`
	Arib                     string                                     `json:"arib"`
	AribCaptionsPid          string                                     `json:"arib_captions_pid"`
	AribCaptionsPidControl   string                                     `json:"arib_captions_pid_control"`
	AudioBufferModel         string                                     `json:"audio_buffer_model"`
	AudioFramesPerPes        float64                                    `json:"audio_frames_per_pes"`
	AudioPids                string                                     `json:"audio_pids"`
	AudioStreamType          string                                     `json:"audio_stream_type"`
	Bitrate                  float64                                    `json:"bitrate"`
	BufferModel              string                                     `json:"buffer_model"`
	CcDescriptor             string                                     `json:"cc_descriptor"`
	DvbSubPids               string                                     `json:"dvb_sub_pids"`
	DvbTeletextPid           string                                     `json:"dvb_teletext_pid"`
	Ebif                     string                                     `json:"ebif"`
	EbpAudioInterval         string                                     `json:"ebp_audio_interval"`
	EbpLookaheadMs           float64                                    `json:"ebp_lookahead_ms"`
	EbpPlacement             string                                     `json:"ebp_placement"`
	EcmPid                   string                                     `json:"ecm_pid"`
	EsRateInPes              string                                     `json:"es_rate_in_pes"`
	EtvPlatformPid           string                                     `json:"etv_platform_pid"`
	EtvSignalPid             string                                     `json:"etv_signal_pid"`
	FragmentTime             float64                                    `json:"fragment_time"`
	Klv                      string                                     `json:"klv"`
	KlvDataPids              string                                     `json:"klv_data_pids"`
	NielsenId3Behavior       string                                     `json:"nielsen_id3_behavior"`
	NullPacketBitrate        float64                                    `json:"null_packet_bitrate"`
	PatInterval              float64                                    `json:"pat_interval"`
	PcrControl               string                                     `json:"pcr_control"`
	PcrPeriod                float64                                    `json:"pcr_period"`
	PcrPid                   string                                     `json:"pcr_pid"`
	PmtInterval              float64                                    `json:"pmt_interval"`
	PmtPid                   string                                     `json:"pmt_pid"`
	ProgramNum               float64                                    `json:"program_num"`
	RateMode                 string                                     `json:"rate_mode"`
	Scte27Pids               string                                     `json:"scte27_pids"`
	Scte35Control            string                                     `json:"scte35_control"`
	Scte35Pid                string                                     `json:"scte35_pid"`
	SegmentationMarkers      string                                     `json:"segmentation_markers"`
	SegmentationStyle        string                                     `json:"segmentation_style"`
	SegmentationTime         float64                                    `json:"segmentation_time"`
	TimedMetadataBehavior    string                                     `json:"timed_metadata_behavior"`
	TimedMetadataPid         string                                     `json:"timed_metadata_pid"`
	TransportStreamId        float64                                    `json:"transport_stream_id"`
	VideoPid                 string                                     `json:"video_pid"`
	DvbNitSettings           []EncoderSettingsOutputGroups9Ab16061State `json:"dvb_nit_settings"`
	DvbSdtSettings           []EncoderSettingsOutputGroups6E0740B3State `json:"dvb_sdt_settings"`
	DvbTdtSettings           []EncoderSettingsOutputGroups4271Ac49State `json:"dvb_tdt_settings"`
}

type EncoderSettingsOutputGroups9Ab16061State struct {
	NetworkId   float64 `json:"network_id"`
	NetworkName string  `json:"network_name"`
	RepInterval float64 `json:"rep_interval"`
}

type EncoderSettingsOutputGroups6E0740B3State struct {
	OutputSdt           string  `json:"output_sdt"`
	RepInterval         float64 `json:"rep_interval"`
	ServiceName         string  `json:"service_name"`
	ServiceProviderName string  `json:"service_provider_name"`
}

type EncoderSettingsOutputGroups4271Ac49State struct {
	RepInterval float64 `json:"rep_interval"`
}

type EncoderSettingsOutputGroupsA199D051State struct {
	DestinationRefId string `json:"destination_ref_id"`
}

type EncoderSettingsOutputGroupsAbb6Dab5State struct {
	ColumnDepth float64 `json:"column_depth"`
	IncludeFec  string  `json:"include_fec"`
	RowLength   float64 `json:"row_length"`
}

type EncoderSettingsTimecodeConfigState struct {
	Source        string  `json:"source"`
	SyncThreshold float64 `json:"sync_threshold"`
}

type EncoderSettingsVideoDescriptionsState struct {
	Height          float64                                              `json:"height"`
	Name            string                                               `json:"name"`
	RespondToAfd    string                                               `json:"respond_to_afd"`
	ScalingBehavior string                                               `json:"scaling_behavior"`
	Sharpness       float64                                              `json:"sharpness"`
	Width           float64                                              `json:"width"`
	CodecSettings   []EncoderSettingsVideoDescriptionsCodecSettingsState `json:"codec_settings"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsState struct {
	FrameCaptureSettings []EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsState `json:"frame_capture_settings"`
	H264Settings         []EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsState         `json:"h264_settings"`
	H265Settings         []EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsState         `json:"h265_settings"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsState struct {
	CaptureInterval      float64 `json:"capture_interval"`
	CaptureIntervalUnits string  `json:"capture_interval_units"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsH264SettingsState struct {
	AdaptiveQuantization string                                          `json:"adaptive_quantization"`
	AfdSignaling         string                                          `json:"afd_signaling"`
	Bitrate              float64                                         `json:"bitrate"`
	BufFillPct           float64                                         `json:"buf_fill_pct"`
	BufSize              float64                                         `json:"buf_size"`
	ColorMetadata        string                                          `json:"color_metadata"`
	EntropyEncoding      string                                          `json:"entropy_encoding"`
	FixedAfd             string                                          `json:"fixed_afd"`
	FlickerAq            string                                          `json:"flicker_aq"`
	ForceFieldPictures   string                                          `json:"force_field_pictures"`
	FramerateControl     string                                          `json:"framerate_control"`
	FramerateDenominator float64                                         `json:"framerate_denominator"`
	FramerateNumerator   float64                                         `json:"framerate_numerator"`
	GopBReference        string                                          `json:"gop_b_reference"`
	GopClosedCadence     float64                                         `json:"gop_closed_cadence"`
	GopNumBFrames        float64                                         `json:"gop_num_b_frames"`
	GopSize              float64                                         `json:"gop_size"`
	GopSizeUnits         string                                          `json:"gop_size_units"`
	Level                string                                          `json:"level"`
	LookAheadRateControl string                                          `json:"look_ahead_rate_control"`
	MaxBitrate           float64                                         `json:"max_bitrate"`
	MinIInterval         float64                                         `json:"min_i_interval"`
	NumRefFrames         float64                                         `json:"num_ref_frames"`
	ParControl           string                                          `json:"par_control"`
	ParDenominator       float64                                         `json:"par_denominator"`
	ParNumerator         float64                                         `json:"par_numerator"`
	Profile              string                                          `json:"profile"`
	QualityLevel         string                                          `json:"quality_level"`
	QvbrQualityLevel     float64                                         `json:"qvbr_quality_level"`
	RateControlMode      string                                          `json:"rate_control_mode"`
	ScanType             string                                          `json:"scan_type"`
	SceneChangeDetect    string                                          `json:"scene_change_detect"`
	Slices               float64                                         `json:"slices"`
	Softness             float64                                         `json:"softness"`
	SpatialAq            string                                          `json:"spatial_aq"`
	SubgopLength         string                                          `json:"subgop_length"`
	Syntax               string                                          `json:"syntax"`
	TemporalAq           string                                          `json:"temporal_aq"`
	TimecodeInsertion    string                                          `json:"timecode_insertion"`
	FilterSettings       []EncoderSettingsVideoDescriptions16C7052FState `json:"filter_settings"`
}

type EncoderSettingsVideoDescriptions16C7052FState struct {
	TemporalFilterSettings []EncoderSettingsVideoDescriptions6D3116A4State `json:"temporal_filter_settings"`
}

type EncoderSettingsVideoDescriptions6D3116A4State struct {
	PostFilterSharpening string `json:"post_filter_sharpening"`
	Strength             string `json:"strength"`
}

type EncoderSettingsVideoDescriptionsCodecSettingsH265SettingsState struct {
	AdaptiveQuantization        string                                          `json:"adaptive_quantization"`
	AfdSignaling                string                                          `json:"afd_signaling"`
	AlternativeTransferFunction string                                          `json:"alternative_transfer_function"`
	Bitrate                     float64                                         `json:"bitrate"`
	BufSize                     float64                                         `json:"buf_size"`
	ColorMetadata               string                                          `json:"color_metadata"`
	FixedAfd                    string                                          `json:"fixed_afd"`
	FlickerAq                   string                                          `json:"flicker_aq"`
	FramerateDenominator        float64                                         `json:"framerate_denominator"`
	FramerateNumerator          float64                                         `json:"framerate_numerator"`
	GopClosedCadence            float64                                         `json:"gop_closed_cadence"`
	GopSize                     float64                                         `json:"gop_size"`
	GopSizeUnits                string                                          `json:"gop_size_units"`
	Level                       string                                          `json:"level"`
	LookAheadRateControl        string                                          `json:"look_ahead_rate_control"`
	MaxBitrate                  float64                                         `json:"max_bitrate"`
	MinIInterval                float64                                         `json:"min_i_interval"`
	ParDenominator              float64                                         `json:"par_denominator"`
	ParNumerator                float64                                         `json:"par_numerator"`
	Profile                     string                                          `json:"profile"`
	QvbrQualityLevel            float64                                         `json:"qvbr_quality_level"`
	RateControlMode             string                                          `json:"rate_control_mode"`
	ScanType                    string                                          `json:"scan_type"`
	SceneChangeDetect           string                                          `json:"scene_change_detect"`
	Slices                      float64                                         `json:"slices"`
	Tier                        string                                          `json:"tier"`
	TimecodeInsertion           string                                          `json:"timecode_insertion"`
	ColorSpaceSettings          []EncoderSettingsVideoDescriptions32Bafd78State `json:"color_space_settings"`
	FilterSettings              []EncoderSettingsVideoDescriptions866F30C8State `json:"filter_settings"`
	TimecodeBurninSettings      []EncoderSettingsVideoDescriptions6Ec21560State `json:"timecode_burnin_settings"`
}

type EncoderSettingsVideoDescriptions32Bafd78State struct {
	ColorSpacePassthroughSettings []EncoderSettingsVideoDescriptions3B5Dc5F6State `json:"color_space_passthrough_settings"`
	DolbyVision81Settings         []EncoderSettingsVideoDescriptions91Ab172FState `json:"dolby_vision81_settings"`
	Hdr10Settings                 []EncoderSettingsVideoDescriptions54Ced679State `json:"hdr10_settings"`
	Rec601Settings                []EncoderSettingsVideoDescriptionsF12B29BaState `json:"rec601_settings"`
	Rec709Settings                []EncoderSettingsVideoDescriptionsAeb56963State `json:"rec709_settings"`
}

type EncoderSettingsVideoDescriptions3B5Dc5F6State struct{}

type EncoderSettingsVideoDescriptions91Ab172FState struct{}

type EncoderSettingsVideoDescriptions54Ced679State struct {
	MaxCll  float64 `json:"max_cll"`
	MaxFall float64 `json:"max_fall"`
}

type EncoderSettingsVideoDescriptionsF12B29BaState struct{}

type EncoderSettingsVideoDescriptionsAeb56963State struct{}

type EncoderSettingsVideoDescriptions866F30C8State struct {
	TemporalFilterSettings []EncoderSettingsVideoDescriptionsFc51Dd67State `json:"temporal_filter_settings"`
}

type EncoderSettingsVideoDescriptionsFc51Dd67State struct {
	PostFilterSharpening string `json:"post_filter_sharpening"`
	Strength             string `json:"strength"`
}

type EncoderSettingsVideoDescriptions6Ec21560State struct {
	Prefix                 string `json:"prefix"`
	TimecodeBurninFontSize string `json:"timecode_burnin_font_size"`
	TimecodeBurninPosition string `json:"timecode_burnin_position"`
}

type InputAttachmentsState struct {
	InputAttachmentName            string                                                `json:"input_attachment_name"`
	InputId                        string                                                `json:"input_id"`
	AutomaticInputFailoverSettings []InputAttachmentsAutomaticInputFailoverSettingsState `json:"automatic_input_failover_settings"`
	InputSettings                  []InputAttachmentsInputSettingsState                  `json:"input_settings"`
}

type InputAttachmentsAutomaticInputFailoverSettingsState struct {
	ErrorClearTimeMsec float64                                                                `json:"error_clear_time_msec"`
	InputPreference    string                                                                 `json:"input_preference"`
	SecondaryInputId   string                                                                 `json:"secondary_input_id"`
	FailoverCondition  []InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionState `json:"failover_condition"`
}

type InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionState struct {
	FailoverConditionSettings []InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsState `json:"failover_condition_settings"`
}

type InputAttachmentsAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsState struct {
	AudioSilenceSettings []InputAttachmentsAutomaticInputFailoverSettings71D8493EState `json:"audio_silence_settings"`
	InputLossSettings    []InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69State `json:"input_loss_settings"`
	VideoBlackSettings   []InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcState `json:"video_black_settings"`
}

type InputAttachmentsAutomaticInputFailoverSettings71D8493EState struct {
	AudioSelectorName         string  `json:"audio_selector_name"`
	AudioSilenceThresholdMsec float64 `json:"audio_silence_threshold_msec"`
}

type InputAttachmentsAutomaticInputFailoverSettings5Cfe7F69State struct {
	InputLossThresholdMsec float64 `json:"input_loss_threshold_msec"`
}

type InputAttachmentsAutomaticInputFailoverSettings8Dfd66DcState struct {
	BlackDetectThreshold    float64 `json:"black_detect_threshold"`
	VideoBlackThresholdMsec float64 `json:"video_black_threshold_msec"`
}

type InputAttachmentsInputSettingsState struct {
	DeblockFilter           string                                                   `json:"deblock_filter"`
	DenoiseFilter           string                                                   `json:"denoise_filter"`
	FilterStrength          float64                                                  `json:"filter_strength"`
	InputFilter             string                                                   `json:"input_filter"`
	Scte35Pid               float64                                                  `json:"scte35_pid"`
	Smpte2038DataPreference string                                                   `json:"smpte2038_data_preference"`
	SourceEndBehavior       string                                                   `json:"source_end_behavior"`
	AudioSelector           []InputAttachmentsInputSettingsAudioSelectorState        `json:"audio_selector"`
	CaptionSelector         []InputAttachmentsInputSettingsCaptionSelectorState      `json:"caption_selector"`
	NetworkInputSettings    []InputAttachmentsInputSettingsNetworkInputSettingsState `json:"network_input_settings"`
	VideoSelector           []InputAttachmentsInputSettingsVideoSelectorState        `json:"video_selector"`
}

type InputAttachmentsInputSettingsAudioSelectorState struct {
	Name             string                                                            `json:"name"`
	SelectorSettings []InputAttachmentsInputSettingsAudioSelectorSelectorSettingsState `json:"selector_settings"`
}

type InputAttachmentsInputSettingsAudioSelectorSelectorSettingsState struct {
	AudioHlsRenditionSelection []InputAttachmentsInputSettingsFe539861State `json:"audio_hls_rendition_selection"`
	AudioLanguageSelection     []InputAttachmentsInputSettingsC1D0Ca7EState `json:"audio_language_selection"`
	AudioPidSelection          []InputAttachmentsInputSettings5F997E5DState `json:"audio_pid_selection"`
	AudioTrackSelection        []InputAttachmentsInputSettingsF6Cce638State `json:"audio_track_selection"`
}

type InputAttachmentsInputSettingsFe539861State struct {
	GroupId string `json:"group_id"`
	Name    string `json:"name"`
}

type InputAttachmentsInputSettingsC1D0Ca7EState struct {
	LanguageCode            string `json:"language_code"`
	LanguageSelectionPolicy string `json:"language_selection_policy"`
}

type InputAttachmentsInputSettings5F997E5DState struct {
	Pid float64 `json:"pid"`
}

type InputAttachmentsInputSettingsF6Cce638State struct {
	DolbyEDecode []InputAttachmentsInputSettingsE92D8Fc6State `json:"dolby_e_decode"`
	Tracks       []InputAttachmentsInputSettings57946D90State `json:"tracks"`
}

type InputAttachmentsInputSettingsE92D8Fc6State struct {
	ProgramSelection string `json:"program_selection"`
}

type InputAttachmentsInputSettings57946D90State struct {
	Track float64 `json:"track"`
}

type InputAttachmentsInputSettingsCaptionSelectorState struct {
	LanguageCode     string                                                              `json:"language_code"`
	Name             string                                                              `json:"name"`
	SelectorSettings []InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsState `json:"selector_settings"`
}

type InputAttachmentsInputSettingsCaptionSelectorSelectorSettingsState struct {
	AncillarySourceSettings []InputAttachmentsInputSettings2Ade7214State `json:"ancillary_source_settings"`
	AribSourceSettings      []InputAttachmentsInputSettings126Dc0EeState `json:"arib_source_settings"`
	DvbSubSourceSettings    []InputAttachmentsInputSettings2Cf436B7State `json:"dvb_sub_source_settings"`
	EmbeddedSourceSettings  []InputAttachmentsInputSettings9Cff41AdState `json:"embedded_source_settings"`
	Scte20SourceSettings    []InputAttachmentsInputSettingsF42565DcState `json:"scte20_source_settings"`
	Scte27SourceSettings    []InputAttachmentsInputSettingsA0F09701State `json:"scte27_source_settings"`
	TeletextSourceSettings  []InputAttachmentsInputSettings4B91Db51State `json:"teletext_source_settings"`
}

type InputAttachmentsInputSettings2Ade7214State struct {
	SourceAncillaryChannelNumber float64 `json:"source_ancillary_channel_number"`
}

type InputAttachmentsInputSettings126Dc0EeState struct{}

type InputAttachmentsInputSettings2Cf436B7State struct {
	OcrLanguage string  `json:"ocr_language"`
	Pid         float64 `json:"pid"`
}

type InputAttachmentsInputSettings9Cff41AdState struct {
	Convert608To708        string  `json:"convert_608_to_708"`
	Scte20Detection        string  `json:"scte20_detection"`
	Source608ChannelNumber float64 `json:"source_608_channel_number"`
}

type InputAttachmentsInputSettingsF42565DcState struct {
	Convert608To708        string  `json:"convert_608_to_708"`
	Source608ChannelNumber float64 `json:"source_608_channel_number"`
}

type InputAttachmentsInputSettingsA0F09701State struct {
	OcrLanguage string  `json:"ocr_language"`
	Pid         float64 `json:"pid"`
}

type InputAttachmentsInputSettings4B91Db51State struct {
	PageNumber      string                                       `json:"page_number"`
	OutputRectangle []InputAttachmentsInputSettingsAd174B9AState `json:"output_rectangle"`
}

type InputAttachmentsInputSettingsAd174B9AState struct {
	Height     float64 `json:"height"`
	LeftOffset float64 `json:"left_offset"`
	TopOffset  float64 `json:"top_offset"`
	Width      float64 `json:"width"`
}

type InputAttachmentsInputSettingsNetworkInputSettingsState struct {
	ServerValidation string                                                                   `json:"server_validation"`
	HlsInputSettings []InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsState `json:"hls_input_settings"`
}

type InputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsState struct {
	Bandwidth      float64 `json:"bandwidth"`
	BufferSegments float64 `json:"buffer_segments"`
	Retries        float64 `json:"retries"`
	RetryInterval  float64 `json:"retry_interval"`
	Scte35Source   string  `json:"scte35_source"`
}

type InputAttachmentsInputSettingsVideoSelectorState struct {
	ColorSpace      string `json:"color_space"`
	ColorSpaceUsage string `json:"color_space_usage"`
}

type InputSpecificationState struct {
	Codec           string `json:"codec"`
	InputResolution string `json:"input_resolution"`
	MaximumBitrate  string `json:"maximum_bitrate"`
}

type MaintenanceState struct {
	MaintenanceDay       string `json:"maintenance_day"`
	MaintenanceStartTime string `json:"maintenance_start_time"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type VpcState struct {
	AvailabilityZones          []string `json:"availability_zones"`
	NetworkInterfaceIds        []string `json:"network_interface_ids"`
	PublicAddressAllocationIds []string `json:"public_address_allocation_ids"`
	SecurityGroupIds           []string `json:"security_group_ids"`
	SubnetIds                  []string `json:"subnet_ids"`
}
