// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_chime_voice_connector_origination

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_chime_voice_connector_origination.
type Resource struct {
	Name      string
	Args      Args
	state     *awsChimeVoiceConnectorOriginationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acvco *Resource) Type() string {
	return "aws_chime_voice_connector_origination"
}

// LocalName returns the local name for [Resource].
func (acvco *Resource) LocalName() string {
	return acvco.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acvco *Resource) Configuration() interface{} {
	return acvco.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acvco *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acvco)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acvco *Resource) Dependencies() terra.Dependencies {
	return acvco.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acvco *Resource) LifecycleManagement() *terra.Lifecycle {
	return acvco.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acvco *Resource) Attributes() awsChimeVoiceConnectorOriginationAttributes {
	return awsChimeVoiceConnectorOriginationAttributes{ref: terra.ReferenceResource(acvco)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acvco *Resource) ImportState(state io.Reader) error {
	acvco.state = &awsChimeVoiceConnectorOriginationState{}
	if err := json.NewDecoder(state).Decode(acvco.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acvco.Type(), acvco.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acvco *Resource) State() (*awsChimeVoiceConnectorOriginationState, bool) {
	return acvco.state, acvco.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acvco *Resource) StateMust() *awsChimeVoiceConnectorOriginationState {
	if acvco.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acvco.Type(), acvco.LocalName()))
	}
	return acvco.state
}

// Args contains the configurations for aws_chime_voice_connector_origination.
type Args struct {
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VoiceConnectorId: string, required
	VoiceConnectorId terra.StringValue `hcl:"voice_connector_id,attr" validate:"required"`
	// Route: min=1,max=20
	Route []Route `hcl:"route,block" validate:"min=1,max=20"`
}

type awsChimeVoiceConnectorOriginationAttributes struct {
	ref terra.Reference
}

// Disabled returns a reference to field disabled of aws_chime_voice_connector_origination.
func (acvco awsChimeVoiceConnectorOriginationAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(acvco.ref.Append("disabled"))
}

// Id returns a reference to field id of aws_chime_voice_connector_origination.
func (acvco awsChimeVoiceConnectorOriginationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acvco.ref.Append("id"))
}

// VoiceConnectorId returns a reference to field voice_connector_id of aws_chime_voice_connector_origination.
func (acvco awsChimeVoiceConnectorOriginationAttributes) VoiceConnectorId() terra.StringValue {
	return terra.ReferenceAsString(acvco.ref.Append("voice_connector_id"))
}

func (acvco awsChimeVoiceConnectorOriginationAttributes) Route() terra.SetValue[RouteAttributes] {
	return terra.ReferenceAsSet[RouteAttributes](acvco.ref.Append("route"))
}

type awsChimeVoiceConnectorOriginationState struct {
	Disabled         bool         `json:"disabled"`
	Id               string       `json:"id"`
	VoiceConnectorId string       `json:"voice_connector_id"`
	Route            []RouteState `json:"route"`
}
