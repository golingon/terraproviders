// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_ontap_storage_virtual_machine

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ActiveDirectoryConfiguration struct {
	// NetbiosName: string, optional
	NetbiosName terra.StringValue `hcl:"netbios_name,attr"`
	// ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration: optional
	SelfManagedActiveDirectoryConfiguration *ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration `hcl:"self_managed_active_directory_configuration,block"`
}

type ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration struct {
	// DnsIps: set of string, required
	DnsIps terra.SetValue[terra.StringValue] `hcl:"dns_ips,attr" validate:"required"`
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// FileSystemAdministratorsGroup: string, optional
	FileSystemAdministratorsGroup terra.StringValue `hcl:"file_system_administrators_group,attr"`
	// OrganizationalUnitDistinguishedName: string, optional
	OrganizationalUnitDistinguishedName terra.StringValue `hcl:"organizational_unit_distinguished_name,attr"`
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type EndpointsAttributes struct {
	ref terra.Reference
}

func (e EndpointsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e EndpointsAttributes) InternalWithRef(ref terra.Reference) EndpointsAttributes {
	return EndpointsAttributes{ref: ref}
}

func (e EndpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e EndpointsAttributes) Iscsi() terra.ListValue[EndpointsIscsiAttributes] {
	return terra.ReferenceAsList[EndpointsIscsiAttributes](e.ref.Append("iscsi"))
}

func (e EndpointsAttributes) Management() terra.ListValue[EndpointsManagementAttributes] {
	return terra.ReferenceAsList[EndpointsManagementAttributes](e.ref.Append("management"))
}

func (e EndpointsAttributes) Nfs() terra.ListValue[EndpointsNfsAttributes] {
	return terra.ReferenceAsList[EndpointsNfsAttributes](e.ref.Append("nfs"))
}

func (e EndpointsAttributes) Smb() terra.ListValue[EndpointsSmbAttributes] {
	return terra.ReferenceAsList[EndpointsSmbAttributes](e.ref.Append("smb"))
}

type EndpointsIscsiAttributes struct {
	ref terra.Reference
}

func (i EndpointsIscsiAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i EndpointsIscsiAttributes) InternalWithRef(ref terra.Reference) EndpointsIscsiAttributes {
	return EndpointsIscsiAttributes{ref: ref}
}

func (i EndpointsIscsiAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i EndpointsIscsiAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("dns_name"))
}

func (i EndpointsIscsiAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("ip_addresses"))
}

type EndpointsManagementAttributes struct {
	ref terra.Reference
}

func (m EndpointsManagementAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m EndpointsManagementAttributes) InternalWithRef(ref terra.Reference) EndpointsManagementAttributes {
	return EndpointsManagementAttributes{ref: ref}
}

func (m EndpointsManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m EndpointsManagementAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("dns_name"))
}

func (m EndpointsManagementAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("ip_addresses"))
}

type EndpointsNfsAttributes struct {
	ref terra.Reference
}

func (n EndpointsNfsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n EndpointsNfsAttributes) InternalWithRef(ref terra.Reference) EndpointsNfsAttributes {
	return EndpointsNfsAttributes{ref: ref}
}

func (n EndpointsNfsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n EndpointsNfsAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("dns_name"))
}

func (n EndpointsNfsAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](n.ref.Append("ip_addresses"))
}

type EndpointsSmbAttributes struct {
	ref terra.Reference
}

func (s EndpointsSmbAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s EndpointsSmbAttributes) InternalWithRef(ref terra.Reference) EndpointsSmbAttributes {
	return EndpointsSmbAttributes{ref: ref}
}

func (s EndpointsSmbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s EndpointsSmbAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("dns_name"))
}

func (s EndpointsSmbAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("ip_addresses"))
}

type ActiveDirectoryConfigurationAttributes struct {
	ref terra.Reference
}

func (adc ActiveDirectoryConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return adc.ref, nil
}

func (adc ActiveDirectoryConfigurationAttributes) InternalWithRef(ref terra.Reference) ActiveDirectoryConfigurationAttributes {
	return ActiveDirectoryConfigurationAttributes{ref: ref}
}

func (adc ActiveDirectoryConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return adc.ref.InternalTokens()
}

func (adc ActiveDirectoryConfigurationAttributes) NetbiosName() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("netbios_name"))
}

func (adc ActiveDirectoryConfigurationAttributes) SelfManagedActiveDirectoryConfiguration() terra.ListValue[ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes] {
	return terra.ReferenceAsList[ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes](adc.ref.Append("self_managed_active_directory_configuration"))
}

type ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes struct {
	ref terra.Reference
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return smadc.ref, nil
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) InternalWithRef(ref terra.Reference) ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes {
	return ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes{ref: ref}
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return smadc.ref.InternalTokens()
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) DnsIps() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](smadc.ref.Append("dns_ips"))
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("domain_name"))
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) FileSystemAdministratorsGroup() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("file_system_administrators_group"))
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) OrganizationalUnitDistinguishedName() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("organizational_unit_distinguished_name"))
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("password"))
}

func (smadc ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("username"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type EndpointsState struct {
	Iscsi      []EndpointsIscsiState      `json:"iscsi"`
	Management []EndpointsManagementState `json:"management"`
	Nfs        []EndpointsNfsState        `json:"nfs"`
	Smb        []EndpointsSmbState        `json:"smb"`
}

type EndpointsIscsiState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type EndpointsManagementState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type EndpointsNfsState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type EndpointsSmbState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type ActiveDirectoryConfigurationState struct {
	NetbiosName                             string                                                                     `json:"netbios_name"`
	SelfManagedActiveDirectoryConfiguration []ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationState `json:"self_managed_active_directory_configuration"`
}

type ActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationState struct {
	DnsIps                              []string `json:"dns_ips"`
	DomainName                          string   `json:"domain_name"`
	FileSystemAdministratorsGroup       string   `json:"file_system_administrators_group"`
	OrganizationalUnitDistinguishedName string   `json:"organizational_unit_distinguished_name"`
	Password                            string   `json:"password"`
	Username                            string   `json:"username"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
