// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_ontap_storage_virtual_machine

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataActiveDirectoryConfigurationAttributes struct {
	ref terra.Reference
}

func (adc DataActiveDirectoryConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return adc.ref, nil
}

func (adc DataActiveDirectoryConfigurationAttributes) InternalWithRef(ref terra.Reference) DataActiveDirectoryConfigurationAttributes {
	return DataActiveDirectoryConfigurationAttributes{ref: ref}
}

func (adc DataActiveDirectoryConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return adc.ref.InternalTokens()
}

func (adc DataActiveDirectoryConfigurationAttributes) NetbiosName() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("netbios_name"))
}

func (adc DataActiveDirectoryConfigurationAttributes) SelfManagedActiveDirectoryConfiguration() terra.ListValue[DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes] {
	return terra.ReferenceAsList[DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes](adc.ref.Append("self_managed_active_directory_configuration"))
}

type DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes struct {
	ref terra.Reference
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return smadc.ref, nil
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) InternalWithRef(ref terra.Reference) DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes {
	return DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes{ref: ref}
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return smadc.ref.InternalTokens()
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) DnsIps() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](smadc.ref.Append("dns_ips"))
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("domain_name"))
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) FileSystemAdministratorsGroup() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("file_system_administrators_group"))
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) OrganizationalUnitDistinguishedName() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("organizational_unit_distinguished_name"))
}

func (smadc DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(smadc.ref.Append("username"))
}

type DataEndpointsAttributes struct {
	ref terra.Reference
}

func (e DataEndpointsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataEndpointsAttributes) InternalWithRef(ref terra.Reference) DataEndpointsAttributes {
	return DataEndpointsAttributes{ref: ref}
}

func (e DataEndpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataEndpointsAttributes) Iscsi() terra.ListValue[DataEndpointsIscsiAttributes] {
	return terra.ReferenceAsList[DataEndpointsIscsiAttributes](e.ref.Append("iscsi"))
}

func (e DataEndpointsAttributes) Management() terra.ListValue[DataEndpointsManagementAttributes] {
	return terra.ReferenceAsList[DataEndpointsManagementAttributes](e.ref.Append("management"))
}

func (e DataEndpointsAttributes) Nfs() terra.ListValue[DataEndpointsNfsAttributes] {
	return terra.ReferenceAsList[DataEndpointsNfsAttributes](e.ref.Append("nfs"))
}

func (e DataEndpointsAttributes) Smb() terra.ListValue[DataEndpointsSmbAttributes] {
	return terra.ReferenceAsList[DataEndpointsSmbAttributes](e.ref.Append("smb"))
}

type DataEndpointsIscsiAttributes struct {
	ref terra.Reference
}

func (i DataEndpointsIscsiAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataEndpointsIscsiAttributes) InternalWithRef(ref terra.Reference) DataEndpointsIscsiAttributes {
	return DataEndpointsIscsiAttributes{ref: ref}
}

func (i DataEndpointsIscsiAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataEndpointsIscsiAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("dns_name"))
}

func (i DataEndpointsIscsiAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("ip_addresses"))
}

type DataEndpointsManagementAttributes struct {
	ref terra.Reference
}

func (m DataEndpointsManagementAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataEndpointsManagementAttributes) InternalWithRef(ref terra.Reference) DataEndpointsManagementAttributes {
	return DataEndpointsManagementAttributes{ref: ref}
}

func (m DataEndpointsManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataEndpointsManagementAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("dns_name"))
}

func (m DataEndpointsManagementAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("ip_addresses"))
}

type DataEndpointsNfsAttributes struct {
	ref terra.Reference
}

func (n DataEndpointsNfsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n DataEndpointsNfsAttributes) InternalWithRef(ref terra.Reference) DataEndpointsNfsAttributes {
	return DataEndpointsNfsAttributes{ref: ref}
}

func (n DataEndpointsNfsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n DataEndpointsNfsAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("dns_name"))
}

func (n DataEndpointsNfsAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](n.ref.Append("ip_addresses"))
}

type DataEndpointsSmbAttributes struct {
	ref terra.Reference
}

func (s DataEndpointsSmbAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataEndpointsSmbAttributes) InternalWithRef(ref terra.Reference) DataEndpointsSmbAttributes {
	return DataEndpointsSmbAttributes{ref: ref}
}

func (s DataEndpointsSmbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataEndpointsSmbAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("dns_name"))
}

func (s DataEndpointsSmbAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("ip_addresses"))
}

type DataLifecycleTransitionReasonAttributes struct {
	ref terra.Reference
}

func (ltr DataLifecycleTransitionReasonAttributes) InternalRef() (terra.Reference, error) {
	return ltr.ref, nil
}

func (ltr DataLifecycleTransitionReasonAttributes) InternalWithRef(ref terra.Reference) DataLifecycleTransitionReasonAttributes {
	return DataLifecycleTransitionReasonAttributes{ref: ref}
}

func (ltr DataLifecycleTransitionReasonAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ltr.ref.InternalTokens()
}

func (ltr DataLifecycleTransitionReasonAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(ltr.ref.Append("message"))
}

type DataFilterAttributes struct {
	ref terra.Reference
}

func (f DataFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFilterAttributes) InternalWithRef(ref terra.Reference) DataFilterAttributes {
	return DataFilterAttributes{ref: ref}
}

func (f DataFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DataFilterAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](f.ref.Append("values"))
}

type DataActiveDirectoryConfigurationState struct {
	NetbiosName                             string                                                                         `json:"netbios_name"`
	SelfManagedActiveDirectoryConfiguration []DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationState `json:"self_managed_active_directory_configuration"`
}

type DataActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationState struct {
	DnsIps                              []string `json:"dns_ips"`
	DomainName                          string   `json:"domain_name"`
	FileSystemAdministratorsGroup       string   `json:"file_system_administrators_group"`
	OrganizationalUnitDistinguishedName string   `json:"organizational_unit_distinguished_name"`
	Username                            string   `json:"username"`
}

type DataEndpointsState struct {
	Iscsi      []DataEndpointsIscsiState      `json:"iscsi"`
	Management []DataEndpointsManagementState `json:"management"`
	Nfs        []DataEndpointsNfsState        `json:"nfs"`
	Smb        []DataEndpointsSmbState        `json:"smb"`
}

type DataEndpointsIscsiState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type DataEndpointsManagementState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type DataEndpointsNfsState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type DataEndpointsSmbState struct {
	DnsName     string   `json:"dns_name"`
	IpAddresses []string `json:"ip_addresses"`
}

type DataLifecycleTransitionReasonState struct {
	Message string `json:"message"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}
