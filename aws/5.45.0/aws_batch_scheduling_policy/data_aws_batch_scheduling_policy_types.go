// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_batch_scheduling_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFairSharePolicyAttributes struct {
	ref terra.Reference
}

func (fsp DataFairSharePolicyAttributes) InternalRef() (terra.Reference, error) {
	return fsp.ref, nil
}

func (fsp DataFairSharePolicyAttributes) InternalWithRef(ref terra.Reference) DataFairSharePolicyAttributes {
	return DataFairSharePolicyAttributes{ref: ref}
}

func (fsp DataFairSharePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fsp.ref.InternalTokens()
}

func (fsp DataFairSharePolicyAttributes) ComputeReservation() terra.NumberValue {
	return terra.ReferenceAsNumber(fsp.ref.Append("compute_reservation"))
}

func (fsp DataFairSharePolicyAttributes) ShareDecaySeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(fsp.ref.Append("share_decay_seconds"))
}

func (fsp DataFairSharePolicyAttributes) ShareDistribution() terra.SetValue[DataFairSharePolicyShareDistributionAttributes] {
	return terra.ReferenceAsSet[DataFairSharePolicyShareDistributionAttributes](fsp.ref.Append("share_distribution"))
}

type DataFairSharePolicyShareDistributionAttributes struct {
	ref terra.Reference
}

func (sd DataFairSharePolicyShareDistributionAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd DataFairSharePolicyShareDistributionAttributes) InternalWithRef(ref terra.Reference) DataFairSharePolicyShareDistributionAttributes {
	return DataFairSharePolicyShareDistributionAttributes{ref: ref}
}

func (sd DataFairSharePolicyShareDistributionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd DataFairSharePolicyShareDistributionAttributes) ShareIdentifier() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("share_identifier"))
}

func (sd DataFairSharePolicyShareDistributionAttributes) WeightFactor() terra.NumberValue {
	return terra.ReferenceAsNumber(sd.ref.Append("weight_factor"))
}

type DataFairSharePolicyState struct {
	ComputeReservation float64                                     `json:"compute_reservation"`
	ShareDecaySeconds  float64                                     `json:"share_decay_seconds"`
	ShareDistribution  []DataFairSharePolicyShareDistributionState `json:"share_distribution"`
}

type DataFairSharePolicyShareDistributionState struct {
	ShareIdentifier string  `json:"share_identifier"`
	WeightFactor    float64 `json:"weight_factor"`
}
