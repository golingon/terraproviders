// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_user_profile

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type UserSettings struct {
	// DefaultLandingUri: string, optional
	DefaultLandingUri terra.StringValue `hcl:"default_landing_uri,attr"`
	// ExecutionRole: string, required
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups: set of string, optional
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// StudioWebPortal: string, optional
	StudioWebPortal terra.StringValue `hcl:"studio_web_portal,attr"`
	// UserSettingsCanvasAppSettings: optional
	CanvasAppSettings *UserSettingsCanvasAppSettings `hcl:"canvas_app_settings,block"`
	// UserSettingsCodeEditorAppSettings: optional
	CodeEditorAppSettings *UserSettingsCodeEditorAppSettings `hcl:"code_editor_app_settings,block"`
	// UserSettingsCustomFileSystemConfig: min=0
	CustomFileSystemConfig []UserSettingsCustomFileSystemConfig `hcl:"custom_file_system_config,block" validate:"min=0"`
	// UserSettingsCustomPosixUserConfig: optional
	CustomPosixUserConfig *UserSettingsCustomPosixUserConfig `hcl:"custom_posix_user_config,block"`
	// UserSettingsJupyterLabAppSettings: optional
	JupyterLabAppSettings *UserSettingsJupyterLabAppSettings `hcl:"jupyter_lab_app_settings,block"`
	// UserSettingsJupyterServerAppSettings: optional
	JupyterServerAppSettings *UserSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// UserSettingsKernelGatewayAppSettings: optional
	KernelGatewayAppSettings *UserSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
	// UserSettingsRSessionAppSettings: optional
	RSessionAppSettings *UserSettingsRSessionAppSettings `hcl:"r_session_app_settings,block"`
	// UserSettingsRStudioServerProAppSettings: optional
	RStudioServerProAppSettings *UserSettingsRStudioServerProAppSettings `hcl:"r_studio_server_pro_app_settings,block"`
	// UserSettingsSharingSettings: optional
	SharingSettings *UserSettingsSharingSettings `hcl:"sharing_settings,block"`
	// UserSettingsSpaceStorageSettings: optional
	SpaceStorageSettings *UserSettingsSpaceStorageSettings `hcl:"space_storage_settings,block"`
	// UserSettingsTensorBoardAppSettings: optional
	TensorBoardAppSettings *UserSettingsTensorBoardAppSettings `hcl:"tensor_board_app_settings,block"`
}

type UserSettingsCanvasAppSettings struct {
	// UserSettingsCanvasAppSettingsDirectDeploySettings: optional
	DirectDeploySettings *UserSettingsCanvasAppSettingsDirectDeploySettings `hcl:"direct_deploy_settings,block"`
	// UserSettingsCanvasAppSettingsIdentityProviderOauthSettings: min=0,max=20
	IdentityProviderOauthSettings []UserSettingsCanvasAppSettingsIdentityProviderOauthSettings `hcl:"identity_provider_oauth_settings,block" validate:"min=0,max=20"`
	// UserSettingsCanvasAppSettingsKendraSettings: optional
	KendraSettings *UserSettingsCanvasAppSettingsKendraSettings `hcl:"kendra_settings,block"`
	// UserSettingsCanvasAppSettingsModelRegisterSettings: optional
	ModelRegisterSettings *UserSettingsCanvasAppSettingsModelRegisterSettings `hcl:"model_register_settings,block"`
	// UserSettingsCanvasAppSettingsTimeSeriesForecastingSettings: optional
	TimeSeriesForecastingSettings *UserSettingsCanvasAppSettingsTimeSeriesForecastingSettings `hcl:"time_series_forecasting_settings,block"`
	// UserSettingsCanvasAppSettingsWorkspaceSettings: optional
	WorkspaceSettings *UserSettingsCanvasAppSettingsWorkspaceSettings `hcl:"workspace_settings,block"`
}

type UserSettingsCanvasAppSettingsDirectDeploySettings struct {
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsCanvasAppSettingsIdentityProviderOauthSettings struct {
	// DataSourceName: string, optional
	DataSourceName terra.StringValue `hcl:"data_source_name,attr"`
	// SecretArn: string, required
	SecretArn terra.StringValue `hcl:"secret_arn,attr" validate:"required"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsCanvasAppSettingsKendraSettings struct {
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsCanvasAppSettingsModelRegisterSettings struct {
	// CrossAccountModelRegisterRoleArn: string, optional
	CrossAccountModelRegisterRoleArn terra.StringValue `hcl:"cross_account_model_register_role_arn,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsCanvasAppSettingsTimeSeriesForecastingSettings struct {
	// AmazonForecastRoleArn: string, optional
	AmazonForecastRoleArn terra.StringValue `hcl:"amazon_forecast_role_arn,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsCanvasAppSettingsWorkspaceSettings struct {
	// S3ArtifactPath: string, optional
	S3ArtifactPath terra.StringValue `hcl:"s3_artifact_path,attr"`
	// S3KmsKeyId: string, optional
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
}

type UserSettingsCodeEditorAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// UserSettingsCodeEditorAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *UserSettingsCodeEditorAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsCodeEditorAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsCustomFileSystemConfig struct {
	// UserSettingsCustomFileSystemConfigEfsFileSystemConfig: min=0
	EfsFileSystemConfig []UserSettingsCustomFileSystemConfigEfsFileSystemConfig `hcl:"efs_file_system_config,block" validate:"min=0"`
}

type UserSettingsCustomFileSystemConfigEfsFileSystemConfig struct {
	// FileSystemId: string, required
	FileSystemId terra.StringValue `hcl:"file_system_id,attr" validate:"required"`
	// FileSystemPath: string, optional
	FileSystemPath terra.StringValue `hcl:"file_system_path,attr"`
}

type UserSettingsCustomPosixUserConfig struct {
	// Gid: number, required
	Gid terra.NumberValue `hcl:"gid,attr" validate:"required"`
	// Uid: number, required
	Uid terra.NumberValue `hcl:"uid,attr" validate:"required"`
}

type UserSettingsJupyterLabAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// UserSettingsJupyterLabAppSettingsCodeRepository: min=0,max=10
	CodeRepository []UserSettingsJupyterLabAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// UserSettingsJupyterLabAppSettingsCustomImage: min=0,max=200
	CustomImage []UserSettingsJupyterLabAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// UserSettingsJupyterLabAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *UserSettingsJupyterLabAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsJupyterLabAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type UserSettingsJupyterLabAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type UserSettingsJupyterLabAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// UserSettingsJupyterServerAppSettingsCodeRepository: min=0,max=10
	CodeRepository []UserSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// UserSettingsJupyterServerAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *UserSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type UserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// UserSettingsKernelGatewayAppSettingsCustomImage: min=0,max=200
	CustomImage []UserSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// UserSettingsKernelGatewayAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *UserSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsRSessionAppSettings struct {
	// UserSettingsRSessionAppSettingsCustomImage: min=0,max=200
	CustomImage []UserSettingsRSessionAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// UserSettingsRSessionAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *UserSettingsRSessionAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsRSessionAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type UserSettingsRSessionAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsRStudioServerProAppSettings struct {
	// AccessStatus: string, optional
	AccessStatus terra.StringValue `hcl:"access_status,attr"`
	// UserGroup: string, optional
	UserGroup terra.StringValue `hcl:"user_group,attr"`
}

type UserSettingsSharingSettings struct {
	// NotebookOutputOption: string, optional
	NotebookOutputOption terra.StringValue `hcl:"notebook_output_option,attr"`
	// S3KmsKeyId: string, optional
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
	// S3OutputPath: string, optional
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr"`
}

type UserSettingsSpaceStorageSettings struct {
	// UserSettingsSpaceStorageSettingsDefaultEbsStorageSettings: optional
	DefaultEbsStorageSettings *UserSettingsSpaceStorageSettingsDefaultEbsStorageSettings `hcl:"default_ebs_storage_settings,block"`
}

type UserSettingsSpaceStorageSettingsDefaultEbsStorageSettings struct {
	// DefaultEbsVolumeSizeInGb: number, required
	DefaultEbsVolumeSizeInGb terra.NumberValue `hcl:"default_ebs_volume_size_in_gb,attr" validate:"required"`
	// MaximumEbsVolumeSizeInGb: number, required
	MaximumEbsVolumeSizeInGb terra.NumberValue `hcl:"maximum_ebs_volume_size_in_gb,attr" validate:"required"`
}

type UserSettingsTensorBoardAppSettings struct {
	// UserSettingsTensorBoardAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *UserSettingsTensorBoardAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsAttributes struct {
	ref terra.Reference
}

func (us UserSettingsAttributes) InternalRef() (terra.Reference, error) {
	return us.ref, nil
}

func (us UserSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsAttributes {
	return UserSettingsAttributes{ref: ref}
}

func (us UserSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return us.ref.InternalTokens()
}

func (us UserSettingsAttributes) DefaultLandingUri() terra.StringValue {
	return terra.ReferenceAsString(us.ref.Append("default_landing_uri"))
}

func (us UserSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(us.ref.Append("execution_role"))
}

func (us UserSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](us.ref.Append("security_groups"))
}

func (us UserSettingsAttributes) StudioWebPortal() terra.StringValue {
	return terra.ReferenceAsString(us.ref.Append("studio_web_portal"))
}

func (us UserSettingsAttributes) CanvasAppSettings() terra.ListValue[UserSettingsCanvasAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsAttributes](us.ref.Append("canvas_app_settings"))
}

func (us UserSettingsAttributes) CodeEditorAppSettings() terra.ListValue[UserSettingsCodeEditorAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCodeEditorAppSettingsAttributes](us.ref.Append("code_editor_app_settings"))
}

func (us UserSettingsAttributes) CustomFileSystemConfig() terra.ListValue[UserSettingsCustomFileSystemConfigAttributes] {
	return terra.ReferenceAsList[UserSettingsCustomFileSystemConfigAttributes](us.ref.Append("custom_file_system_config"))
}

func (us UserSettingsAttributes) CustomPosixUserConfig() terra.ListValue[UserSettingsCustomPosixUserConfigAttributes] {
	return terra.ReferenceAsList[UserSettingsCustomPosixUserConfigAttributes](us.ref.Append("custom_posix_user_config"))
}

func (us UserSettingsAttributes) JupyterLabAppSettings() terra.ListValue[UserSettingsJupyterLabAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsJupyterLabAppSettingsAttributes](us.ref.Append("jupyter_lab_app_settings"))
}

func (us UserSettingsAttributes) JupyterServerAppSettings() terra.ListValue[UserSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsJupyterServerAppSettingsAttributes](us.ref.Append("jupyter_server_app_settings"))
}

func (us UserSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[UserSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsKernelGatewayAppSettingsAttributes](us.ref.Append("kernel_gateway_app_settings"))
}

func (us UserSettingsAttributes) RSessionAppSettings() terra.ListValue[UserSettingsRSessionAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsRSessionAppSettingsAttributes](us.ref.Append("r_session_app_settings"))
}

func (us UserSettingsAttributes) RStudioServerProAppSettings() terra.ListValue[UserSettingsRStudioServerProAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsRStudioServerProAppSettingsAttributes](us.ref.Append("r_studio_server_pro_app_settings"))
}

func (us UserSettingsAttributes) SharingSettings() terra.ListValue[UserSettingsSharingSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsSharingSettingsAttributes](us.ref.Append("sharing_settings"))
}

func (us UserSettingsAttributes) SpaceStorageSettings() terra.ListValue[UserSettingsSpaceStorageSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsSpaceStorageSettingsAttributes](us.ref.Append("space_storage_settings"))
}

func (us UserSettingsAttributes) TensorBoardAppSettings() terra.ListValue[UserSettingsTensorBoardAppSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsTensorBoardAppSettingsAttributes](us.ref.Append("tensor_board_app_settings"))
}

type UserSettingsCanvasAppSettingsAttributes struct {
	ref terra.Reference
}

func (cas UserSettingsCanvasAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cas.ref, nil
}

func (cas UserSettingsCanvasAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsAttributes {
	return UserSettingsCanvasAppSettingsAttributes{ref: ref}
}

func (cas UserSettingsCanvasAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cas.ref.InternalTokens()
}

func (cas UserSettingsCanvasAppSettingsAttributes) DirectDeploySettings() terra.ListValue[UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes](cas.ref.Append("direct_deploy_settings"))
}

func (cas UserSettingsCanvasAppSettingsAttributes) IdentityProviderOauthSettings() terra.ListValue[UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes](cas.ref.Append("identity_provider_oauth_settings"))
}

func (cas UserSettingsCanvasAppSettingsAttributes) KendraSettings() terra.ListValue[UserSettingsCanvasAppSettingsKendraSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsKendraSettingsAttributes](cas.ref.Append("kendra_settings"))
}

func (cas UserSettingsCanvasAppSettingsAttributes) ModelRegisterSettings() terra.ListValue[UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes](cas.ref.Append("model_register_settings"))
}

func (cas UserSettingsCanvasAppSettingsAttributes) TimeSeriesForecastingSettings() terra.ListValue[UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes](cas.ref.Append("time_series_forecasting_settings"))
}

func (cas UserSettingsCanvasAppSettingsAttributes) WorkspaceSettings() terra.ListValue[UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes](cas.ref.Append("workspace_settings"))
}

type UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes struct {
	ref terra.Reference
}

func (dds UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) InternalRef() (terra.Reference, error) {
	return dds.ref, nil
}

func (dds UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes {
	return UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes{ref: ref}
}

func (dds UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dds.ref.InternalTokens()
}

func (dds UserSettingsCanvasAppSettingsDirectDeploySettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(dds.ref.Append("status"))
}

type UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes struct {
	ref terra.Reference
}

func (ipos UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ipos.ref, nil
}

func (ipos UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes {
	return UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes{ref: ref}
}

func (ipos UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ipos.ref.InternalTokens()
}

func (ipos UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) DataSourceName() terra.StringValue {
	return terra.ReferenceAsString(ipos.ref.Append("data_source_name"))
}

func (ipos UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) SecretArn() terra.StringValue {
	return terra.ReferenceAsString(ipos.ref.Append("secret_arn"))
}

func (ipos UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ipos.ref.Append("status"))
}

type UserSettingsCanvasAppSettingsKendraSettingsAttributes struct {
	ref terra.Reference
}

func (ks UserSettingsCanvasAppSettingsKendraSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ks.ref, nil
}

func (ks UserSettingsCanvasAppSettingsKendraSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsKendraSettingsAttributes {
	return UserSettingsCanvasAppSettingsKendraSettingsAttributes{ref: ref}
}

func (ks UserSettingsCanvasAppSettingsKendraSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ks.ref.InternalTokens()
}

func (ks UserSettingsCanvasAppSettingsKendraSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ks.ref.Append("status"))
}

type UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes struct {
	ref terra.Reference
}

func (mrs UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mrs.ref, nil
}

func (mrs UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes {
	return UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes{ref: ref}
}

func (mrs UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrs.ref.InternalTokens()
}

func (mrs UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) CrossAccountModelRegisterRoleArn() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("cross_account_model_register_role_arn"))
}

func (mrs UserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("status"))
}

type UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes struct {
	ref terra.Reference
}

func (tsfs UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tsfs.ref, nil
}

func (tsfs UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes {
	return UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes{ref: ref}
}

func (tsfs UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsfs.ref.InternalTokens()
}

func (tsfs UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) AmazonForecastRoleArn() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("amazon_forecast_role_arn"))
}

func (tsfs UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("status"))
}

type UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes struct {
	ref terra.Reference
}

func (ws UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ws.ref, nil
}

func (ws UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes {
	return UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes{ref: ref}
}

func (ws UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ws.ref.InternalTokens()
}

func (ws UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) S3ArtifactPath() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("s3_artifact_path"))
}

func (ws UserSettingsCanvasAppSettingsWorkspaceSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("s3_kms_key_id"))
}

type UserSettingsCodeEditorAppSettingsAttributes struct {
	ref terra.Reference
}

func (ceas UserSettingsCodeEditorAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ceas.ref, nil
}

func (ceas UserSettingsCodeEditorAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsCodeEditorAppSettingsAttributes {
	return UserSettingsCodeEditorAppSettingsAttributes{ref: ref}
}

func (ceas UserSettingsCodeEditorAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ceas.ref.InternalTokens()
}

func (ceas UserSettingsCodeEditorAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ceas.ref.Append("lifecycle_config_arns"))
}

func (ceas UserSettingsCodeEditorAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes](ceas.ref.Append("default_resource_spec"))
}

type UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes {
	return UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs UserSettingsCodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsCustomFileSystemConfigAttributes struct {
	ref terra.Reference
}

func (cfsc UserSettingsCustomFileSystemConfigAttributes) InternalRef() (terra.Reference, error) {
	return cfsc.ref, nil
}

func (cfsc UserSettingsCustomFileSystemConfigAttributes) InternalWithRef(ref terra.Reference) UserSettingsCustomFileSystemConfigAttributes {
	return UserSettingsCustomFileSystemConfigAttributes{ref: ref}
}

func (cfsc UserSettingsCustomFileSystemConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cfsc.ref.InternalTokens()
}

func (cfsc UserSettingsCustomFileSystemConfigAttributes) EfsFileSystemConfig() terra.ListValue[UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes] {
	return terra.ReferenceAsList[UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes](cfsc.ref.Append("efs_file_system_config"))
}

type UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes struct {
	ref terra.Reference
}

func (efsc UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) InternalRef() (terra.Reference, error) {
	return efsc.ref, nil
}

func (efsc UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) InternalWithRef(ref terra.Reference) UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes {
	return UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes{ref: ref}
}

func (efsc UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efsc.ref.InternalTokens()
}

func (efsc UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efsc.ref.Append("file_system_id"))
}

func (efsc UserSettingsCustomFileSystemConfigEfsFileSystemConfigAttributes) FileSystemPath() terra.StringValue {
	return terra.ReferenceAsString(efsc.ref.Append("file_system_path"))
}

type UserSettingsCustomPosixUserConfigAttributes struct {
	ref terra.Reference
}

func (cpuc UserSettingsCustomPosixUserConfigAttributes) InternalRef() (terra.Reference, error) {
	return cpuc.ref, nil
}

func (cpuc UserSettingsCustomPosixUserConfigAttributes) InternalWithRef(ref terra.Reference) UserSettingsCustomPosixUserConfigAttributes {
	return UserSettingsCustomPosixUserConfigAttributes{ref: ref}
}

func (cpuc UserSettingsCustomPosixUserConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpuc.ref.InternalTokens()
}

func (cpuc UserSettingsCustomPosixUserConfigAttributes) Gid() terra.NumberValue {
	return terra.ReferenceAsNumber(cpuc.ref.Append("gid"))
}

func (cpuc UserSettingsCustomPosixUserConfigAttributes) Uid() terra.NumberValue {
	return terra.ReferenceAsNumber(cpuc.ref.Append("uid"))
}

type UserSettingsJupyterLabAppSettingsAttributes struct {
	ref terra.Reference
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jlas.ref, nil
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterLabAppSettingsAttributes {
	return UserSettingsJupyterLabAppSettingsAttributes{ref: ref}
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jlas.ref.InternalTokens()
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jlas.ref.Append("lifecycle_config_arns"))
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) CodeRepository() terra.SetValue[UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes](jlas.ref.Append("code_repository"))
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) CustomImage() terra.ListValue[UserSettingsJupyterLabAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[UserSettingsJupyterLabAppSettingsCustomImageAttributes](jlas.ref.Append("custom_image"))
}

func (jlas UserSettingsJupyterLabAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes](jlas.ref.Append("default_resource_spec"))
}

type UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes {
	return UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr UserSettingsJupyterLabAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type UserSettingsJupyterLabAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci UserSettingsJupyterLabAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci UserSettingsJupyterLabAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterLabAppSettingsCustomImageAttributes {
	return UserSettingsJupyterLabAppSettingsCustomImageAttributes{ref: ref}
}

func (ci UserSettingsJupyterLabAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci UserSettingsJupyterLabAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci UserSettingsJupyterLabAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci UserSettingsJupyterLabAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes {
	return UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs UserSettingsJupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas UserSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas UserSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterServerAppSettingsAttributes {
	return UserSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas UserSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas UserSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas UserSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas UserSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr UserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs UserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas UserSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas UserSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsKernelGatewayAppSettingsAttributes {
	return UserSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas UserSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas UserSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas UserSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[UserSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[UserSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas UserSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type UserSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci UserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci UserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) UserSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return UserSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci UserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci UserSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci UserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci UserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs UserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsRSessionAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsas UserSettingsRSessionAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsas.ref, nil
}

func (rsas UserSettingsRSessionAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsRSessionAppSettingsAttributes {
	return UserSettingsRSessionAppSettingsAttributes{ref: ref}
}

func (rsas UserSettingsRSessionAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsas.ref.InternalTokens()
}

func (rsas UserSettingsRSessionAppSettingsAttributes) CustomImage() terra.ListValue[UserSettingsRSessionAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[UserSettingsRSessionAppSettingsCustomImageAttributes](rsas.ref.Append("custom_image"))
}

func (rsas UserSettingsRSessionAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes](rsas.ref.Append("default_resource_spec"))
}

type UserSettingsRSessionAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci UserSettingsRSessionAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci UserSettingsRSessionAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) UserSettingsRSessionAppSettingsCustomImageAttributes {
	return UserSettingsRSessionAppSettingsCustomImageAttributes{ref: ref}
}

func (ci UserSettingsRSessionAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci UserSettingsRSessionAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci UserSettingsRSessionAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci UserSettingsRSessionAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes {
	return UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs UserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsRStudioServerProAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsspas UserSettingsRStudioServerProAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspas.ref, nil
}

func (rsspas UserSettingsRStudioServerProAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsRStudioServerProAppSettingsAttributes {
	return UserSettingsRStudioServerProAppSettingsAttributes{ref: ref}
}

func (rsspas UserSettingsRStudioServerProAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspas.ref.InternalTokens()
}

func (rsspas UserSettingsRStudioServerProAppSettingsAttributes) AccessStatus() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("access_status"))
}

func (rsspas UserSettingsRStudioServerProAppSettingsAttributes) UserGroup() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("user_group"))
}

type UserSettingsSharingSettingsAttributes struct {
	ref terra.Reference
}

func (ss UserSettingsSharingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss UserSettingsSharingSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsSharingSettingsAttributes {
	return UserSettingsSharingSettingsAttributes{ref: ref}
}

func (ss UserSettingsSharingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss UserSettingsSharingSettingsAttributes) NotebookOutputOption() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("notebook_output_option"))
}

func (ss UserSettingsSharingSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_kms_key_id"))
}

func (ss UserSettingsSharingSettingsAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_output_path"))
}

type UserSettingsSpaceStorageSettingsAttributes struct {
	ref terra.Reference
}

func (sss UserSettingsSpaceStorageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return sss.ref, nil
}

func (sss UserSettingsSpaceStorageSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsSpaceStorageSettingsAttributes {
	return UserSettingsSpaceStorageSettingsAttributes{ref: ref}
}

func (sss UserSettingsSpaceStorageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sss.ref.InternalTokens()
}

func (sss UserSettingsSpaceStorageSettingsAttributes) DefaultEbsStorageSettings() terra.ListValue[UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes] {
	return terra.ReferenceAsList[UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes](sss.ref.Append("default_ebs_storage_settings"))
}

type UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes struct {
	ref terra.Reference
}

func (dess UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dess.ref, nil
}

func (dess UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes {
	return UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes{ref: ref}
}

func (dess UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dess.ref.InternalTokens()
}

func (dess UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) DefaultEbsVolumeSizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(dess.ref.Append("default_ebs_volume_size_in_gb"))
}

func (dess UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsAttributes) MaximumEbsVolumeSizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(dess.ref.Append("maximum_ebs_volume_size_in_gb"))
}

type UserSettingsTensorBoardAppSettingsAttributes struct {
	ref terra.Reference
}

func (tbas UserSettingsTensorBoardAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tbas.ref, nil
}

func (tbas UserSettingsTensorBoardAppSettingsAttributes) InternalWithRef(ref terra.Reference) UserSettingsTensorBoardAppSettingsAttributes {
	return UserSettingsTensorBoardAppSettingsAttributes{ref: ref}
}

func (tbas UserSettingsTensorBoardAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbas.ref.InternalTokens()
}

func (tbas UserSettingsTensorBoardAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes](tbas.ref.Append("default_resource_spec"))
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes {
	return UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs UserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsState struct {
	DefaultLandingUri           string                                         `json:"default_landing_uri"`
	ExecutionRole               string                                         `json:"execution_role"`
	SecurityGroups              []string                                       `json:"security_groups"`
	StudioWebPortal             string                                         `json:"studio_web_portal"`
	CanvasAppSettings           []UserSettingsCanvasAppSettingsState           `json:"canvas_app_settings"`
	CodeEditorAppSettings       []UserSettingsCodeEditorAppSettingsState       `json:"code_editor_app_settings"`
	CustomFileSystemConfig      []UserSettingsCustomFileSystemConfigState      `json:"custom_file_system_config"`
	CustomPosixUserConfig       []UserSettingsCustomPosixUserConfigState       `json:"custom_posix_user_config"`
	JupyterLabAppSettings       []UserSettingsJupyterLabAppSettingsState       `json:"jupyter_lab_app_settings"`
	JupyterServerAppSettings    []UserSettingsJupyterServerAppSettingsState    `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings    []UserSettingsKernelGatewayAppSettingsState    `json:"kernel_gateway_app_settings"`
	RSessionAppSettings         []UserSettingsRSessionAppSettingsState         `json:"r_session_app_settings"`
	RStudioServerProAppSettings []UserSettingsRStudioServerProAppSettingsState `json:"r_studio_server_pro_app_settings"`
	SharingSettings             []UserSettingsSharingSettingsState             `json:"sharing_settings"`
	SpaceStorageSettings        []UserSettingsSpaceStorageSettingsState        `json:"space_storage_settings"`
	TensorBoardAppSettings      []UserSettingsTensorBoardAppSettingsState      `json:"tensor_board_app_settings"`
}

type UserSettingsCanvasAppSettingsState struct {
	DirectDeploySettings          []UserSettingsCanvasAppSettingsDirectDeploySettingsState          `json:"direct_deploy_settings"`
	IdentityProviderOauthSettings []UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsState `json:"identity_provider_oauth_settings"`
	KendraSettings                []UserSettingsCanvasAppSettingsKendraSettingsState                `json:"kendra_settings"`
	ModelRegisterSettings         []UserSettingsCanvasAppSettingsModelRegisterSettingsState         `json:"model_register_settings"`
	TimeSeriesForecastingSettings []UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState `json:"time_series_forecasting_settings"`
	WorkspaceSettings             []UserSettingsCanvasAppSettingsWorkspaceSettingsState             `json:"workspace_settings"`
}

type UserSettingsCanvasAppSettingsDirectDeploySettingsState struct {
	Status string `json:"status"`
}

type UserSettingsCanvasAppSettingsIdentityProviderOauthSettingsState struct {
	DataSourceName string `json:"data_source_name"`
	SecretArn      string `json:"secret_arn"`
	Status         string `json:"status"`
}

type UserSettingsCanvasAppSettingsKendraSettingsState struct {
	Status string `json:"status"`
}

type UserSettingsCanvasAppSettingsModelRegisterSettingsState struct {
	CrossAccountModelRegisterRoleArn string `json:"cross_account_model_register_role_arn"`
	Status                           string `json:"status"`
}

type UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState struct {
	AmazonForecastRoleArn string `json:"amazon_forecast_role_arn"`
	Status                string `json:"status"`
}

type UserSettingsCanvasAppSettingsWorkspaceSettingsState struct {
	S3ArtifactPath string `json:"s3_artifact_path"`
	S3KmsKeyId     string `json:"s3_kms_key_id"`
}

type UserSettingsCodeEditorAppSettingsState struct {
	LifecycleConfigArns []string                                                    `json:"lifecycle_config_arns"`
	DefaultResourceSpec []UserSettingsCodeEditorAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsCodeEditorAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type UserSettingsCustomFileSystemConfigState struct {
	EfsFileSystemConfig []UserSettingsCustomFileSystemConfigEfsFileSystemConfigState `json:"efs_file_system_config"`
}

type UserSettingsCustomFileSystemConfigEfsFileSystemConfigState struct {
	FileSystemId   string `json:"file_system_id"`
	FileSystemPath string `json:"file_system_path"`
}

type UserSettingsCustomPosixUserConfigState struct {
	Gid float64 `json:"gid"`
	Uid float64 `json:"uid"`
}

type UserSettingsJupyterLabAppSettingsState struct {
	LifecycleConfigArns []string                                                    `json:"lifecycle_config_arns"`
	CodeRepository      []UserSettingsJupyterLabAppSettingsCodeRepositoryState      `json:"code_repository"`
	CustomImage         []UserSettingsJupyterLabAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []UserSettingsJupyterLabAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsJupyterLabAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type UserSettingsJupyterLabAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type UserSettingsJupyterLabAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type UserSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                       `json:"lifecycle_config_arns"`
	CodeRepository      []UserSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []UserSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type UserSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type UserSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                       `json:"lifecycle_config_arns"`
	CustomImage         []UserSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []UserSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type UserSettingsRSessionAppSettingsState struct {
	CustomImage         []UserSettingsRSessionAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []UserSettingsRSessionAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsRSessionAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type UserSettingsRSessionAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type UserSettingsRStudioServerProAppSettingsState struct {
	AccessStatus string `json:"access_status"`
	UserGroup    string `json:"user_group"`
}

type UserSettingsSharingSettingsState struct {
	NotebookOutputOption string `json:"notebook_output_option"`
	S3KmsKeyId           string `json:"s3_kms_key_id"`
	S3OutputPath         string `json:"s3_output_path"`
}

type UserSettingsSpaceStorageSettingsState struct {
	DefaultEbsStorageSettings []UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsState `json:"default_ebs_storage_settings"`
}

type UserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsState struct {
	DefaultEbsVolumeSizeInGb float64 `json:"default_ebs_volume_size_in_gb"`
	MaximumEbsVolumeSizeInGb float64 `json:"maximum_ebs_volume_size_in_gb"`
}

type UserSettingsTensorBoardAppSettingsState struct {
	DefaultResourceSpec []UserSettingsTensorBoardAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}
