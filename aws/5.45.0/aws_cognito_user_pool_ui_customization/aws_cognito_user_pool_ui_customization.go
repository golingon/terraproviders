// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_user_pool_ui_customization

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cognito_user_pool_ui_customization.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCognitoUserPoolUiCustomizationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acupuc *Resource) Type() string {
	return "aws_cognito_user_pool_ui_customization"
}

// LocalName returns the local name for [Resource].
func (acupuc *Resource) LocalName() string {
	return acupuc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acupuc *Resource) Configuration() interface{} {
	return acupuc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acupuc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acupuc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acupuc *Resource) Dependencies() terra.Dependencies {
	return acupuc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acupuc *Resource) LifecycleManagement() *terra.Lifecycle {
	return acupuc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acupuc *Resource) Attributes() awsCognitoUserPoolUiCustomizationAttributes {
	return awsCognitoUserPoolUiCustomizationAttributes{ref: terra.ReferenceResource(acupuc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acupuc *Resource) ImportState(state io.Reader) error {
	acupuc.state = &awsCognitoUserPoolUiCustomizationState{}
	if err := json.NewDecoder(state).Decode(acupuc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acupuc.Type(), acupuc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acupuc *Resource) State() (*awsCognitoUserPoolUiCustomizationState, bool) {
	return acupuc.state, acupuc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acupuc *Resource) StateMust() *awsCognitoUserPoolUiCustomizationState {
	if acupuc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acupuc.Type(), acupuc.LocalName()))
	}
	return acupuc.state
}

// Args contains the configurations for aws_cognito_user_pool_ui_customization.
type Args struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// Css: string, optional
	Css terra.StringValue `hcl:"css,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImageFile: string, optional
	ImageFile terra.StringValue `hcl:"image_file,attr"`
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
}

type awsCognitoUserPoolUiCustomizationAttributes struct {
	ref terra.Reference
}

// ClientId returns a reference to field client_id of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("client_id"))
}

// CreationDate returns a reference to field creation_date of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) CreationDate() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("creation_date"))
}

// Css returns a reference to field css of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) Css() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("css"))
}

// CssVersion returns a reference to field css_version of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) CssVersion() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("css_version"))
}

// Id returns a reference to field id of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("id"))
}

// ImageFile returns a reference to field image_file of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) ImageFile() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("image_file"))
}

// ImageUrl returns a reference to field image_url of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) ImageUrl() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("image_url"))
}

// LastModifiedDate returns a reference to field last_modified_date of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) LastModifiedDate() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("last_modified_date"))
}

// UserPoolId returns a reference to field user_pool_id of aws_cognito_user_pool_ui_customization.
func (acupuc awsCognitoUserPoolUiCustomizationAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceAsString(acupuc.ref.Append("user_pool_id"))
}

type awsCognitoUserPoolUiCustomizationState struct {
	ClientId         string `json:"client_id"`
	CreationDate     string `json:"creation_date"`
	Css              string `json:"css"`
	CssVersion       string `json:"css_version"`
	Id               string `json:"id"`
	ImageFile        string `json:"image_file"`
	ImageUrl         string `json:"image_url"`
	LastModifiedDate string `json:"last_modified_date"`
	UserPoolId       string `json:"user_pool_id"`
}
