// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_securityhub_automation_rule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Actions struct {
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// ActionsFindingFieldsUpdate: min=0
	FindingFieldsUpdate []ActionsFindingFieldsUpdate `hcl:"finding_fields_update,block" validate:"min=0"`
}

type ActionsFindingFieldsUpdate struct {
	// Confidence: number, optional
	Confidence terra.NumberValue `hcl:"confidence,attr"`
	// Criticality: number, optional
	Criticality terra.NumberValue `hcl:"criticality,attr"`
	// Types: list of string, optional
	Types terra.ListValue[terra.StringValue] `hcl:"types,attr"`
	// UserDefinedFields: map of string, optional
	UserDefinedFields terra.MapValue[terra.StringValue] `hcl:"user_defined_fields,attr"`
	// VerificationState: string, optional
	VerificationState terra.StringValue `hcl:"verification_state,attr"`
	// ActionsFindingFieldsUpdateNote: min=0
	Note []ActionsFindingFieldsUpdateNote `hcl:"note,block" validate:"min=0"`
	// ActionsFindingFieldsUpdateRelatedFindings: min=0
	RelatedFindings []ActionsFindingFieldsUpdateRelatedFindings `hcl:"related_findings,block" validate:"min=0"`
	// ActionsFindingFieldsUpdateSeverity: min=0
	Severity []ActionsFindingFieldsUpdateSeverity `hcl:"severity,block" validate:"min=0"`
	// ActionsFindingFieldsUpdateWorkflow: min=0
	Workflow []ActionsFindingFieldsUpdateWorkflow `hcl:"workflow,block" validate:"min=0"`
}

type ActionsFindingFieldsUpdateNote struct {
	// Text: string, required
	Text terra.StringValue `hcl:"text,attr" validate:"required"`
	// UpdatedBy: string, required
	UpdatedBy terra.StringValue `hcl:"updated_by,attr" validate:"required"`
}

type ActionsFindingFieldsUpdateRelatedFindings struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// ProductArn: string, required
	ProductArn terra.StringValue `hcl:"product_arn,attr" validate:"required"`
}

type ActionsFindingFieldsUpdateSeverity struct {
	// Label: string, optional
	Label terra.StringValue `hcl:"label,attr"`
	// Product: number, optional
	Product terra.NumberValue `hcl:"product,attr"`
}

type ActionsFindingFieldsUpdateWorkflow struct {
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type Criteria struct {
	// CriteriaAwsAccountId: min=0
	AwsAccountId []CriteriaAwsAccountId `hcl:"aws_account_id,block" validate:"min=0"`
	// CriteriaAwsAccountName: min=0
	AwsAccountName []CriteriaAwsAccountName `hcl:"aws_account_name,block" validate:"min=0"`
	// CriteriaCompanyName: min=0
	CompanyName []CriteriaCompanyName `hcl:"company_name,block" validate:"min=0"`
	// CriteriaComplianceAssociatedStandardsId: min=0
	ComplianceAssociatedStandardsId []CriteriaComplianceAssociatedStandardsId `hcl:"compliance_associated_standards_id,block" validate:"min=0"`
	// CriteriaComplianceSecurityControlId: min=0
	ComplianceSecurityControlId []CriteriaComplianceSecurityControlId `hcl:"compliance_security_control_id,block" validate:"min=0"`
	// CriteriaComplianceStatus: min=0
	ComplianceStatus []CriteriaComplianceStatus `hcl:"compliance_status,block" validate:"min=0"`
	// CriteriaConfidence: min=0
	Confidence []CriteriaConfidence `hcl:"confidence,block" validate:"min=0"`
	// CriteriaCreatedAt: min=0
	CreatedAt []CriteriaCreatedAt `hcl:"created_at,block" validate:"min=0"`
	// CriteriaCriticality: min=0
	Criticality []CriteriaCriticality `hcl:"criticality,block" validate:"min=0"`
	// CriteriaDescription: min=0
	Description []CriteriaDescription `hcl:"description,block" validate:"min=0"`
	// CriteriaFirstObservedAt: min=0
	FirstObservedAt []CriteriaFirstObservedAt `hcl:"first_observed_at,block" validate:"min=0"`
	// CriteriaGeneratorId: min=0
	GeneratorId []CriteriaGeneratorId `hcl:"generator_id,block" validate:"min=0"`
	// CriteriaId: min=0
	Id []CriteriaId `hcl:"id,block" validate:"min=0"`
	// CriteriaLastObservedAt: min=0
	LastObservedAt []CriteriaLastObservedAt `hcl:"last_observed_at,block" validate:"min=0"`
	// CriteriaNoteText: min=0
	NoteText []CriteriaNoteText `hcl:"note_text,block" validate:"min=0"`
	// CriteriaNoteUpdatedAt: min=0
	NoteUpdatedAt []CriteriaNoteUpdatedAt `hcl:"note_updated_at,block" validate:"min=0"`
	// CriteriaNoteUpdatedBy: min=0
	NoteUpdatedBy []CriteriaNoteUpdatedBy `hcl:"note_updated_by,block" validate:"min=0"`
	// CriteriaProductArn: min=0
	ProductArn []CriteriaProductArn `hcl:"product_arn,block" validate:"min=0"`
	// CriteriaProductName: min=0
	ProductName []CriteriaProductName `hcl:"product_name,block" validate:"min=0"`
	// CriteriaRecordState: min=0
	RecordState []CriteriaRecordState `hcl:"record_state,block" validate:"min=0"`
	// CriteriaRelatedFindingsId: min=0
	RelatedFindingsId []CriteriaRelatedFindingsId `hcl:"related_findings_id,block" validate:"min=0"`
	// CriteriaRelatedFindingsProductArn: min=0
	RelatedFindingsProductArn []CriteriaRelatedFindingsProductArn `hcl:"related_findings_product_arn,block" validate:"min=0"`
	// CriteriaResourceApplicationArn: min=0
	ResourceApplicationArn []CriteriaResourceApplicationArn `hcl:"resource_application_arn,block" validate:"min=0"`
	// CriteriaResourceApplicationName: min=0
	ResourceApplicationName []CriteriaResourceApplicationName `hcl:"resource_application_name,block" validate:"min=0"`
	// CriteriaResourceDetailsOther: min=0
	ResourceDetailsOther []CriteriaResourceDetailsOther `hcl:"resource_details_other,block" validate:"min=0"`
	// CriteriaResourceId: min=0
	ResourceId []CriteriaResourceId `hcl:"resource_id,block" validate:"min=0"`
	// CriteriaResourcePartition: min=0
	ResourcePartition []CriteriaResourcePartition `hcl:"resource_partition,block" validate:"min=0"`
	// CriteriaResourceRegion: min=0
	ResourceRegion []CriteriaResourceRegion `hcl:"resource_region,block" validate:"min=0"`
	// CriteriaResourceTags: min=0
	ResourceTags []CriteriaResourceTags `hcl:"resource_tags,block" validate:"min=0"`
	// CriteriaResourceType: min=0
	ResourceType []CriteriaResourceType `hcl:"resource_type,block" validate:"min=0"`
	// CriteriaSeverityLabel: min=0
	SeverityLabel []CriteriaSeverityLabel `hcl:"severity_label,block" validate:"min=0"`
	// CriteriaSourceUrl: min=0
	SourceUrl []CriteriaSourceUrl `hcl:"source_url,block" validate:"min=0"`
	// CriteriaTitle: min=0
	Title []CriteriaTitle `hcl:"title,block" validate:"min=0"`
	// CriteriaType: min=0
	Type []CriteriaType `hcl:"type,block" validate:"min=0"`
	// CriteriaUpdatedAt: min=0
	UpdatedAt []CriteriaUpdatedAt `hcl:"updated_at,block" validate:"min=0"`
	// CriteriaUserDefinedFields: min=0
	UserDefinedFields []CriteriaUserDefinedFields `hcl:"user_defined_fields,block" validate:"min=0"`
	// CriteriaVerificationState: min=0
	VerificationState []CriteriaVerificationState `hcl:"verification_state,block" validate:"min=0"`
	// CriteriaWorkflowStatus: min=0
	WorkflowStatus []CriteriaWorkflowStatus `hcl:"workflow_status,block" validate:"min=0"`
}

type CriteriaAwsAccountId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaAwsAccountName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaCompanyName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaComplianceAssociatedStandardsId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaComplianceSecurityControlId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaComplianceStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaConfidence struct {
	// Eq: number, optional
	Eq terra.NumberValue `hcl:"eq,attr"`
	// Gt: number, optional
	Gt terra.NumberValue `hcl:"gt,attr"`
	// Gte: number, optional
	Gte terra.NumberValue `hcl:"gte,attr"`
	// Lt: number, optional
	Lt terra.NumberValue `hcl:"lt,attr"`
	// Lte: number, optional
	Lte terra.NumberValue `hcl:"lte,attr"`
}

type CriteriaCreatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// CriteriaCreatedAtDateRange: min=0
	DateRange []CriteriaCreatedAtDateRange `hcl:"date_range,block" validate:"min=0"`
}

type CriteriaCreatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type CriteriaCriticality struct {
	// Eq: number, optional
	Eq terra.NumberValue `hcl:"eq,attr"`
	// Gt: number, optional
	Gt terra.NumberValue `hcl:"gt,attr"`
	// Gte: number, optional
	Gte terra.NumberValue `hcl:"gte,attr"`
	// Lt: number, optional
	Lt terra.NumberValue `hcl:"lt,attr"`
	// Lte: number, optional
	Lte terra.NumberValue `hcl:"lte,attr"`
}

type CriteriaDescription struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaFirstObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// CriteriaFirstObservedAtDateRange: min=0
	DateRange []CriteriaFirstObservedAtDateRange `hcl:"date_range,block" validate:"min=0"`
}

type CriteriaFirstObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type CriteriaGeneratorId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaLastObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// CriteriaLastObservedAtDateRange: min=0
	DateRange []CriteriaLastObservedAtDateRange `hcl:"date_range,block" validate:"min=0"`
}

type CriteriaLastObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type CriteriaNoteText struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaNoteUpdatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// CriteriaNoteUpdatedAtDateRange: min=0
	DateRange []CriteriaNoteUpdatedAtDateRange `hcl:"date_range,block" validate:"min=0"`
}

type CriteriaNoteUpdatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type CriteriaNoteUpdatedBy struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaProductName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaRecordState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaRelatedFindingsId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaRelatedFindingsProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceApplicationArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceApplicationName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceDetailsOther struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourcePartition struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceRegion struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceTags struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaResourceType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaSeverityLabel struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaSourceUrl struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaTitle struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaUpdatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// CriteriaUpdatedAtDateRange: min=0
	DateRange []CriteriaUpdatedAtDateRange `hcl:"date_range,block" validate:"min=0"`
}

type CriteriaUpdatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type CriteriaUserDefinedFields struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaVerificationState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CriteriaWorkflowStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ActionsAttributes struct {
	ref terra.Reference
}

func (a ActionsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a ActionsAttributes) InternalWithRef(ref terra.Reference) ActionsAttributes {
	return ActionsAttributes{ref: ref}
}

func (a ActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a ActionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

func (a ActionsAttributes) FindingFieldsUpdate() terra.ListValue[ActionsFindingFieldsUpdateAttributes] {
	return terra.ReferenceAsList[ActionsFindingFieldsUpdateAttributes](a.ref.Append("finding_fields_update"))
}

type ActionsFindingFieldsUpdateAttributes struct {
	ref terra.Reference
}

func (ffu ActionsFindingFieldsUpdateAttributes) InternalRef() (terra.Reference, error) {
	return ffu.ref, nil
}

func (ffu ActionsFindingFieldsUpdateAttributes) InternalWithRef(ref terra.Reference) ActionsFindingFieldsUpdateAttributes {
	return ActionsFindingFieldsUpdateAttributes{ref: ref}
}

func (ffu ActionsFindingFieldsUpdateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ffu.ref.InternalTokens()
}

func (ffu ActionsFindingFieldsUpdateAttributes) Confidence() terra.NumberValue {
	return terra.ReferenceAsNumber(ffu.ref.Append("confidence"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) Criticality() terra.NumberValue {
	return terra.ReferenceAsNumber(ffu.ref.Append("criticality"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) Types() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ffu.ref.Append("types"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) UserDefinedFields() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ffu.ref.Append("user_defined_fields"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) VerificationState() terra.StringValue {
	return terra.ReferenceAsString(ffu.ref.Append("verification_state"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) Note() terra.ListValue[ActionsFindingFieldsUpdateNoteAttributes] {
	return terra.ReferenceAsList[ActionsFindingFieldsUpdateNoteAttributes](ffu.ref.Append("note"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) RelatedFindings() terra.SetValue[ActionsFindingFieldsUpdateRelatedFindingsAttributes] {
	return terra.ReferenceAsSet[ActionsFindingFieldsUpdateRelatedFindingsAttributes](ffu.ref.Append("related_findings"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) Severity() terra.ListValue[ActionsFindingFieldsUpdateSeverityAttributes] {
	return terra.ReferenceAsList[ActionsFindingFieldsUpdateSeverityAttributes](ffu.ref.Append("severity"))
}

func (ffu ActionsFindingFieldsUpdateAttributes) Workflow() terra.ListValue[ActionsFindingFieldsUpdateWorkflowAttributes] {
	return terra.ReferenceAsList[ActionsFindingFieldsUpdateWorkflowAttributes](ffu.ref.Append("workflow"))
}

type ActionsFindingFieldsUpdateNoteAttributes struct {
	ref terra.Reference
}

func (n ActionsFindingFieldsUpdateNoteAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n ActionsFindingFieldsUpdateNoteAttributes) InternalWithRef(ref terra.Reference) ActionsFindingFieldsUpdateNoteAttributes {
	return ActionsFindingFieldsUpdateNoteAttributes{ref: ref}
}

func (n ActionsFindingFieldsUpdateNoteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n ActionsFindingFieldsUpdateNoteAttributes) Text() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("text"))
}

func (n ActionsFindingFieldsUpdateNoteAttributes) UpdatedBy() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("updated_by"))
}

type ActionsFindingFieldsUpdateRelatedFindingsAttributes struct {
	ref terra.Reference
}

func (rf ActionsFindingFieldsUpdateRelatedFindingsAttributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf ActionsFindingFieldsUpdateRelatedFindingsAttributes) InternalWithRef(ref terra.Reference) ActionsFindingFieldsUpdateRelatedFindingsAttributes {
	return ActionsFindingFieldsUpdateRelatedFindingsAttributes{ref: ref}
}

func (rf ActionsFindingFieldsUpdateRelatedFindingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf ActionsFindingFieldsUpdateRelatedFindingsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("id"))
}

func (rf ActionsFindingFieldsUpdateRelatedFindingsAttributes) ProductArn() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("product_arn"))
}

type ActionsFindingFieldsUpdateSeverityAttributes struct {
	ref terra.Reference
}

func (s ActionsFindingFieldsUpdateSeverityAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ActionsFindingFieldsUpdateSeverityAttributes) InternalWithRef(ref terra.Reference) ActionsFindingFieldsUpdateSeverityAttributes {
	return ActionsFindingFieldsUpdateSeverityAttributes{ref: ref}
}

func (s ActionsFindingFieldsUpdateSeverityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ActionsFindingFieldsUpdateSeverityAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("label"))
}

func (s ActionsFindingFieldsUpdateSeverityAttributes) Product() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("product"))
}

type ActionsFindingFieldsUpdateWorkflowAttributes struct {
	ref terra.Reference
}

func (w ActionsFindingFieldsUpdateWorkflowAttributes) InternalRef() (terra.Reference, error) {
	return w.ref, nil
}

func (w ActionsFindingFieldsUpdateWorkflowAttributes) InternalWithRef(ref terra.Reference) ActionsFindingFieldsUpdateWorkflowAttributes {
	return ActionsFindingFieldsUpdateWorkflowAttributes{ref: ref}
}

func (w ActionsFindingFieldsUpdateWorkflowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return w.ref.InternalTokens()
}

func (w ActionsFindingFieldsUpdateWorkflowAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("status"))
}

type CriteriaAttributes struct {
	ref terra.Reference
}

func (c CriteriaAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c CriteriaAttributes) InternalWithRef(ref terra.Reference) CriteriaAttributes {
	return CriteriaAttributes{ref: ref}
}

func (c CriteriaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c CriteriaAttributes) AwsAccountId() terra.SetValue[CriteriaAwsAccountIdAttributes] {
	return terra.ReferenceAsSet[CriteriaAwsAccountIdAttributes](c.ref.Append("aws_account_id"))
}

func (c CriteriaAttributes) AwsAccountName() terra.SetValue[CriteriaAwsAccountNameAttributes] {
	return terra.ReferenceAsSet[CriteriaAwsAccountNameAttributes](c.ref.Append("aws_account_name"))
}

func (c CriteriaAttributes) CompanyName() terra.SetValue[CriteriaCompanyNameAttributes] {
	return terra.ReferenceAsSet[CriteriaCompanyNameAttributes](c.ref.Append("company_name"))
}

func (c CriteriaAttributes) ComplianceAssociatedStandardsId() terra.SetValue[CriteriaComplianceAssociatedStandardsIdAttributes] {
	return terra.ReferenceAsSet[CriteriaComplianceAssociatedStandardsIdAttributes](c.ref.Append("compliance_associated_standards_id"))
}

func (c CriteriaAttributes) ComplianceSecurityControlId() terra.SetValue[CriteriaComplianceSecurityControlIdAttributes] {
	return terra.ReferenceAsSet[CriteriaComplianceSecurityControlIdAttributes](c.ref.Append("compliance_security_control_id"))
}

func (c CriteriaAttributes) ComplianceStatus() terra.SetValue[CriteriaComplianceStatusAttributes] {
	return terra.ReferenceAsSet[CriteriaComplianceStatusAttributes](c.ref.Append("compliance_status"))
}

func (c CriteriaAttributes) Confidence() terra.SetValue[CriteriaConfidenceAttributes] {
	return terra.ReferenceAsSet[CriteriaConfidenceAttributes](c.ref.Append("confidence"))
}

func (c CriteriaAttributes) CreatedAt() terra.SetValue[CriteriaCreatedAtAttributes] {
	return terra.ReferenceAsSet[CriteriaCreatedAtAttributes](c.ref.Append("created_at"))
}

func (c CriteriaAttributes) Criticality() terra.SetValue[CriteriaCriticalityAttributes] {
	return terra.ReferenceAsSet[CriteriaCriticalityAttributes](c.ref.Append("criticality"))
}

func (c CriteriaAttributes) Description() terra.SetValue[CriteriaDescriptionAttributes] {
	return terra.ReferenceAsSet[CriteriaDescriptionAttributes](c.ref.Append("description"))
}

func (c CriteriaAttributes) FirstObservedAt() terra.SetValue[CriteriaFirstObservedAtAttributes] {
	return terra.ReferenceAsSet[CriteriaFirstObservedAtAttributes](c.ref.Append("first_observed_at"))
}

func (c CriteriaAttributes) GeneratorId() terra.SetValue[CriteriaGeneratorIdAttributes] {
	return terra.ReferenceAsSet[CriteriaGeneratorIdAttributes](c.ref.Append("generator_id"))
}

func (c CriteriaAttributes) Id() terra.SetValue[CriteriaIdAttributes] {
	return terra.ReferenceAsSet[CriteriaIdAttributes](c.ref.Append("id"))
}

func (c CriteriaAttributes) LastObservedAt() terra.SetValue[CriteriaLastObservedAtAttributes] {
	return terra.ReferenceAsSet[CriteriaLastObservedAtAttributes](c.ref.Append("last_observed_at"))
}

func (c CriteriaAttributes) NoteText() terra.SetValue[CriteriaNoteTextAttributes] {
	return terra.ReferenceAsSet[CriteriaNoteTextAttributes](c.ref.Append("note_text"))
}

func (c CriteriaAttributes) NoteUpdatedAt() terra.SetValue[CriteriaNoteUpdatedAtAttributes] {
	return terra.ReferenceAsSet[CriteriaNoteUpdatedAtAttributes](c.ref.Append("note_updated_at"))
}

func (c CriteriaAttributes) NoteUpdatedBy() terra.SetValue[CriteriaNoteUpdatedByAttributes] {
	return terra.ReferenceAsSet[CriteriaNoteUpdatedByAttributes](c.ref.Append("note_updated_by"))
}

func (c CriteriaAttributes) ProductArn() terra.SetValue[CriteriaProductArnAttributes] {
	return terra.ReferenceAsSet[CriteriaProductArnAttributes](c.ref.Append("product_arn"))
}

func (c CriteriaAttributes) ProductName() terra.SetValue[CriteriaProductNameAttributes] {
	return terra.ReferenceAsSet[CriteriaProductNameAttributes](c.ref.Append("product_name"))
}

func (c CriteriaAttributes) RecordState() terra.SetValue[CriteriaRecordStateAttributes] {
	return terra.ReferenceAsSet[CriteriaRecordStateAttributes](c.ref.Append("record_state"))
}

func (c CriteriaAttributes) RelatedFindingsId() terra.SetValue[CriteriaRelatedFindingsIdAttributes] {
	return terra.ReferenceAsSet[CriteriaRelatedFindingsIdAttributes](c.ref.Append("related_findings_id"))
}

func (c CriteriaAttributes) RelatedFindingsProductArn() terra.SetValue[CriteriaRelatedFindingsProductArnAttributes] {
	return terra.ReferenceAsSet[CriteriaRelatedFindingsProductArnAttributes](c.ref.Append("related_findings_product_arn"))
}

func (c CriteriaAttributes) ResourceApplicationArn() terra.SetValue[CriteriaResourceApplicationArnAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceApplicationArnAttributes](c.ref.Append("resource_application_arn"))
}

func (c CriteriaAttributes) ResourceApplicationName() terra.SetValue[CriteriaResourceApplicationNameAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceApplicationNameAttributes](c.ref.Append("resource_application_name"))
}

func (c CriteriaAttributes) ResourceDetailsOther() terra.SetValue[CriteriaResourceDetailsOtherAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceDetailsOtherAttributes](c.ref.Append("resource_details_other"))
}

func (c CriteriaAttributes) ResourceId() terra.SetValue[CriteriaResourceIdAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceIdAttributes](c.ref.Append("resource_id"))
}

func (c CriteriaAttributes) ResourcePartition() terra.SetValue[CriteriaResourcePartitionAttributes] {
	return terra.ReferenceAsSet[CriteriaResourcePartitionAttributes](c.ref.Append("resource_partition"))
}

func (c CriteriaAttributes) ResourceRegion() terra.SetValue[CriteriaResourceRegionAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceRegionAttributes](c.ref.Append("resource_region"))
}

func (c CriteriaAttributes) ResourceTags() terra.SetValue[CriteriaResourceTagsAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceTagsAttributes](c.ref.Append("resource_tags"))
}

func (c CriteriaAttributes) ResourceType() terra.SetValue[CriteriaResourceTypeAttributes] {
	return terra.ReferenceAsSet[CriteriaResourceTypeAttributes](c.ref.Append("resource_type"))
}

func (c CriteriaAttributes) SeverityLabel() terra.SetValue[CriteriaSeverityLabelAttributes] {
	return terra.ReferenceAsSet[CriteriaSeverityLabelAttributes](c.ref.Append("severity_label"))
}

func (c CriteriaAttributes) SourceUrl() terra.SetValue[CriteriaSourceUrlAttributes] {
	return terra.ReferenceAsSet[CriteriaSourceUrlAttributes](c.ref.Append("source_url"))
}

func (c CriteriaAttributes) Title() terra.SetValue[CriteriaTitleAttributes] {
	return terra.ReferenceAsSet[CriteriaTitleAttributes](c.ref.Append("title"))
}

func (c CriteriaAttributes) Type() terra.SetValue[CriteriaTypeAttributes] {
	return terra.ReferenceAsSet[CriteriaTypeAttributes](c.ref.Append("type"))
}

func (c CriteriaAttributes) UpdatedAt() terra.SetValue[CriteriaUpdatedAtAttributes] {
	return terra.ReferenceAsSet[CriteriaUpdatedAtAttributes](c.ref.Append("updated_at"))
}

func (c CriteriaAttributes) UserDefinedFields() terra.SetValue[CriteriaUserDefinedFieldsAttributes] {
	return terra.ReferenceAsSet[CriteriaUserDefinedFieldsAttributes](c.ref.Append("user_defined_fields"))
}

func (c CriteriaAttributes) VerificationState() terra.SetValue[CriteriaVerificationStateAttributes] {
	return terra.ReferenceAsSet[CriteriaVerificationStateAttributes](c.ref.Append("verification_state"))
}

func (c CriteriaAttributes) WorkflowStatus() terra.SetValue[CriteriaWorkflowStatusAttributes] {
	return terra.ReferenceAsSet[CriteriaWorkflowStatusAttributes](c.ref.Append("workflow_status"))
}

type CriteriaAwsAccountIdAttributes struct {
	ref terra.Reference
}

func (aai CriteriaAwsAccountIdAttributes) InternalRef() (terra.Reference, error) {
	return aai.ref, nil
}

func (aai CriteriaAwsAccountIdAttributes) InternalWithRef(ref terra.Reference) CriteriaAwsAccountIdAttributes {
	return CriteriaAwsAccountIdAttributes{ref: ref}
}

func (aai CriteriaAwsAccountIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aai.ref.InternalTokens()
}

func (aai CriteriaAwsAccountIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("comparison"))
}

func (aai CriteriaAwsAccountIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("value"))
}

type CriteriaAwsAccountNameAttributes struct {
	ref terra.Reference
}

func (aan CriteriaAwsAccountNameAttributes) InternalRef() (terra.Reference, error) {
	return aan.ref, nil
}

func (aan CriteriaAwsAccountNameAttributes) InternalWithRef(ref terra.Reference) CriteriaAwsAccountNameAttributes {
	return CriteriaAwsAccountNameAttributes{ref: ref}
}

func (aan CriteriaAwsAccountNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aan.ref.InternalTokens()
}

func (aan CriteriaAwsAccountNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(aan.ref.Append("comparison"))
}

func (aan CriteriaAwsAccountNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aan.ref.Append("value"))
}

type CriteriaCompanyNameAttributes struct {
	ref terra.Reference
}

func (cn CriteriaCompanyNameAttributes) InternalRef() (terra.Reference, error) {
	return cn.ref, nil
}

func (cn CriteriaCompanyNameAttributes) InternalWithRef(ref terra.Reference) CriteriaCompanyNameAttributes {
	return CriteriaCompanyNameAttributes{ref: ref}
}

func (cn CriteriaCompanyNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cn.ref.InternalTokens()
}

func (cn CriteriaCompanyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(cn.ref.Append("comparison"))
}

func (cn CriteriaCompanyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cn.ref.Append("value"))
}

type CriteriaComplianceAssociatedStandardsIdAttributes struct {
	ref terra.Reference
}

func (casi CriteriaComplianceAssociatedStandardsIdAttributes) InternalRef() (terra.Reference, error) {
	return casi.ref, nil
}

func (casi CriteriaComplianceAssociatedStandardsIdAttributes) InternalWithRef(ref terra.Reference) CriteriaComplianceAssociatedStandardsIdAttributes {
	return CriteriaComplianceAssociatedStandardsIdAttributes{ref: ref}
}

func (casi CriteriaComplianceAssociatedStandardsIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return casi.ref.InternalTokens()
}

func (casi CriteriaComplianceAssociatedStandardsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(casi.ref.Append("comparison"))
}

func (casi CriteriaComplianceAssociatedStandardsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(casi.ref.Append("value"))
}

type CriteriaComplianceSecurityControlIdAttributes struct {
	ref terra.Reference
}

func (csci CriteriaComplianceSecurityControlIdAttributes) InternalRef() (terra.Reference, error) {
	return csci.ref, nil
}

func (csci CriteriaComplianceSecurityControlIdAttributes) InternalWithRef(ref terra.Reference) CriteriaComplianceSecurityControlIdAttributes {
	return CriteriaComplianceSecurityControlIdAttributes{ref: ref}
}

func (csci CriteriaComplianceSecurityControlIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csci.ref.InternalTokens()
}

func (csci CriteriaComplianceSecurityControlIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(csci.ref.Append("comparison"))
}

func (csci CriteriaComplianceSecurityControlIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(csci.ref.Append("value"))
}

type CriteriaComplianceStatusAttributes struct {
	ref terra.Reference
}

func (cs CriteriaComplianceStatusAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs CriteriaComplianceStatusAttributes) InternalWithRef(ref terra.Reference) CriteriaComplianceStatusAttributes {
	return CriteriaComplianceStatusAttributes{ref: ref}
}

func (cs CriteriaComplianceStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs CriteriaComplianceStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("comparison"))
}

func (cs CriteriaComplianceStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("value"))
}

type CriteriaConfidenceAttributes struct {
	ref terra.Reference
}

func (c CriteriaConfidenceAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c CriteriaConfidenceAttributes) InternalWithRef(ref terra.Reference) CriteriaConfidenceAttributes {
	return CriteriaConfidenceAttributes{ref: ref}
}

func (c CriteriaConfidenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c CriteriaConfidenceAttributes) Eq() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("eq"))
}

func (c CriteriaConfidenceAttributes) Gt() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("gt"))
}

func (c CriteriaConfidenceAttributes) Gte() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("gte"))
}

func (c CriteriaConfidenceAttributes) Lt() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("lt"))
}

func (c CriteriaConfidenceAttributes) Lte() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("lte"))
}

type CriteriaCreatedAtAttributes struct {
	ref terra.Reference
}

func (ca CriteriaCreatedAtAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca CriteriaCreatedAtAttributes) InternalWithRef(ref terra.Reference) CriteriaCreatedAtAttributes {
	return CriteriaCreatedAtAttributes{ref: ref}
}

func (ca CriteriaCreatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca CriteriaCreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("end"))
}

func (ca CriteriaCreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("start"))
}

func (ca CriteriaCreatedAtAttributes) DateRange() terra.ListValue[CriteriaCreatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[CriteriaCreatedAtDateRangeAttributes](ca.ref.Append("date_range"))
}

type CriteriaCreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr CriteriaCreatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr CriteriaCreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) CriteriaCreatedAtDateRangeAttributes {
	return CriteriaCreatedAtDateRangeAttributes{ref: ref}
}

func (dr CriteriaCreatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr CriteriaCreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr CriteriaCreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type CriteriaCriticalityAttributes struct {
	ref terra.Reference
}

func (c CriteriaCriticalityAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c CriteriaCriticalityAttributes) InternalWithRef(ref terra.Reference) CriteriaCriticalityAttributes {
	return CriteriaCriticalityAttributes{ref: ref}
}

func (c CriteriaCriticalityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c CriteriaCriticalityAttributes) Eq() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("eq"))
}

func (c CriteriaCriticalityAttributes) Gt() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("gt"))
}

func (c CriteriaCriticalityAttributes) Gte() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("gte"))
}

func (c CriteriaCriticalityAttributes) Lt() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("lt"))
}

func (c CriteriaCriticalityAttributes) Lte() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("lte"))
}

type CriteriaDescriptionAttributes struct {
	ref terra.Reference
}

func (d CriteriaDescriptionAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d CriteriaDescriptionAttributes) InternalWithRef(ref terra.Reference) CriteriaDescriptionAttributes {
	return CriteriaDescriptionAttributes{ref: ref}
}

func (d CriteriaDescriptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d CriteriaDescriptionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("comparison"))
}

func (d CriteriaDescriptionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type CriteriaFirstObservedAtAttributes struct {
	ref terra.Reference
}

func (foa CriteriaFirstObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return foa.ref, nil
}

func (foa CriteriaFirstObservedAtAttributes) InternalWithRef(ref terra.Reference) CriteriaFirstObservedAtAttributes {
	return CriteriaFirstObservedAtAttributes{ref: ref}
}

func (foa CriteriaFirstObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return foa.ref.InternalTokens()
}

func (foa CriteriaFirstObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(foa.ref.Append("end"))
}

func (foa CriteriaFirstObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(foa.ref.Append("start"))
}

func (foa CriteriaFirstObservedAtAttributes) DateRange() terra.ListValue[CriteriaFirstObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[CriteriaFirstObservedAtDateRangeAttributes](foa.ref.Append("date_range"))
}

type CriteriaFirstObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr CriteriaFirstObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr CriteriaFirstObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) CriteriaFirstObservedAtDateRangeAttributes {
	return CriteriaFirstObservedAtDateRangeAttributes{ref: ref}
}

func (dr CriteriaFirstObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr CriteriaFirstObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr CriteriaFirstObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type CriteriaGeneratorIdAttributes struct {
	ref terra.Reference
}

func (gi CriteriaGeneratorIdAttributes) InternalRef() (terra.Reference, error) {
	return gi.ref, nil
}

func (gi CriteriaGeneratorIdAttributes) InternalWithRef(ref terra.Reference) CriteriaGeneratorIdAttributes {
	return CriteriaGeneratorIdAttributes{ref: ref}
}

func (gi CriteriaGeneratorIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gi.ref.InternalTokens()
}

func (gi CriteriaGeneratorIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(gi.ref.Append("comparison"))
}

func (gi CriteriaGeneratorIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(gi.ref.Append("value"))
}

type CriteriaIdAttributes struct {
	ref terra.Reference
}

func (i CriteriaIdAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i CriteriaIdAttributes) InternalWithRef(ref terra.Reference) CriteriaIdAttributes {
	return CriteriaIdAttributes{ref: ref}
}

func (i CriteriaIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i CriteriaIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("comparison"))
}

func (i CriteriaIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("value"))
}

type CriteriaLastObservedAtAttributes struct {
	ref terra.Reference
}

func (loa CriteriaLastObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return loa.ref, nil
}

func (loa CriteriaLastObservedAtAttributes) InternalWithRef(ref terra.Reference) CriteriaLastObservedAtAttributes {
	return CriteriaLastObservedAtAttributes{ref: ref}
}

func (loa CriteriaLastObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return loa.ref.InternalTokens()
}

func (loa CriteriaLastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(loa.ref.Append("end"))
}

func (loa CriteriaLastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(loa.ref.Append("start"))
}

func (loa CriteriaLastObservedAtAttributes) DateRange() terra.ListValue[CriteriaLastObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[CriteriaLastObservedAtDateRangeAttributes](loa.ref.Append("date_range"))
}

type CriteriaLastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr CriteriaLastObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr CriteriaLastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) CriteriaLastObservedAtDateRangeAttributes {
	return CriteriaLastObservedAtDateRangeAttributes{ref: ref}
}

func (dr CriteriaLastObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr CriteriaLastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr CriteriaLastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type CriteriaNoteTextAttributes struct {
	ref terra.Reference
}

func (nt CriteriaNoteTextAttributes) InternalRef() (terra.Reference, error) {
	return nt.ref, nil
}

func (nt CriteriaNoteTextAttributes) InternalWithRef(ref terra.Reference) CriteriaNoteTextAttributes {
	return CriteriaNoteTextAttributes{ref: ref}
}

func (nt CriteriaNoteTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nt.ref.InternalTokens()
}

func (nt CriteriaNoteTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("comparison"))
}

func (nt CriteriaNoteTextAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("value"))
}

type CriteriaNoteUpdatedAtAttributes struct {
	ref terra.Reference
}

func (nua CriteriaNoteUpdatedAtAttributes) InternalRef() (terra.Reference, error) {
	return nua.ref, nil
}

func (nua CriteriaNoteUpdatedAtAttributes) InternalWithRef(ref terra.Reference) CriteriaNoteUpdatedAtAttributes {
	return CriteriaNoteUpdatedAtAttributes{ref: ref}
}

func (nua CriteriaNoteUpdatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nua.ref.InternalTokens()
}

func (nua CriteriaNoteUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(nua.ref.Append("end"))
}

func (nua CriteriaNoteUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(nua.ref.Append("start"))
}

func (nua CriteriaNoteUpdatedAtAttributes) DateRange() terra.ListValue[CriteriaNoteUpdatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[CriteriaNoteUpdatedAtDateRangeAttributes](nua.ref.Append("date_range"))
}

type CriteriaNoteUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr CriteriaNoteUpdatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr CriteriaNoteUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) CriteriaNoteUpdatedAtDateRangeAttributes {
	return CriteriaNoteUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr CriteriaNoteUpdatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr CriteriaNoteUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr CriteriaNoteUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type CriteriaNoteUpdatedByAttributes struct {
	ref terra.Reference
}

func (nub CriteriaNoteUpdatedByAttributes) InternalRef() (terra.Reference, error) {
	return nub.ref, nil
}

func (nub CriteriaNoteUpdatedByAttributes) InternalWithRef(ref terra.Reference) CriteriaNoteUpdatedByAttributes {
	return CriteriaNoteUpdatedByAttributes{ref: ref}
}

func (nub CriteriaNoteUpdatedByAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nub.ref.InternalTokens()
}

func (nub CriteriaNoteUpdatedByAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nub.ref.Append("comparison"))
}

func (nub CriteriaNoteUpdatedByAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nub.ref.Append("value"))
}

type CriteriaProductArnAttributes struct {
	ref terra.Reference
}

func (pa CriteriaProductArnAttributes) InternalRef() (terra.Reference, error) {
	return pa.ref, nil
}

func (pa CriteriaProductArnAttributes) InternalWithRef(ref terra.Reference) CriteriaProductArnAttributes {
	return CriteriaProductArnAttributes{ref: ref}
}

func (pa CriteriaProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pa.ref.InternalTokens()
}

func (pa CriteriaProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("comparison"))
}

func (pa CriteriaProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("value"))
}

type CriteriaProductNameAttributes struct {
	ref terra.Reference
}

func (pn CriteriaProductNameAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn CriteriaProductNameAttributes) InternalWithRef(ref terra.Reference) CriteriaProductNameAttributes {
	return CriteriaProductNameAttributes{ref: ref}
}

func (pn CriteriaProductNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pn.ref.InternalTokens()
}

func (pn CriteriaProductNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("comparison"))
}

func (pn CriteriaProductNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("value"))
}

type CriteriaRecordStateAttributes struct {
	ref terra.Reference
}

func (rs CriteriaRecordStateAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs CriteriaRecordStateAttributes) InternalWithRef(ref terra.Reference) CriteriaRecordStateAttributes {
	return CriteriaRecordStateAttributes{ref: ref}
}

func (rs CriteriaRecordStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs CriteriaRecordStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("comparison"))
}

func (rs CriteriaRecordStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("value"))
}

type CriteriaRelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (rfi CriteriaRelatedFindingsIdAttributes) InternalRef() (terra.Reference, error) {
	return rfi.ref, nil
}

func (rfi CriteriaRelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) CriteriaRelatedFindingsIdAttributes {
	return CriteriaRelatedFindingsIdAttributes{ref: ref}
}

func (rfi CriteriaRelatedFindingsIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rfi.ref.InternalTokens()
}

func (rfi CriteriaRelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rfi.ref.Append("comparison"))
}

func (rfi CriteriaRelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rfi.ref.Append("value"))
}

type CriteriaRelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (rfpa CriteriaRelatedFindingsProductArnAttributes) InternalRef() (terra.Reference, error) {
	return rfpa.ref, nil
}

func (rfpa CriteriaRelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) CriteriaRelatedFindingsProductArnAttributes {
	return CriteriaRelatedFindingsProductArnAttributes{ref: ref}
}

func (rfpa CriteriaRelatedFindingsProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rfpa.ref.InternalTokens()
}

func (rfpa CriteriaRelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rfpa.ref.Append("comparison"))
}

func (rfpa CriteriaRelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rfpa.ref.Append("value"))
}

type CriteriaResourceApplicationArnAttributes struct {
	ref terra.Reference
}

func (raa CriteriaResourceApplicationArnAttributes) InternalRef() (terra.Reference, error) {
	return raa.ref, nil
}

func (raa CriteriaResourceApplicationArnAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceApplicationArnAttributes {
	return CriteriaResourceApplicationArnAttributes{ref: ref}
}

func (raa CriteriaResourceApplicationArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raa.ref.InternalTokens()
}

func (raa CriteriaResourceApplicationArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raa.ref.Append("comparison"))
}

func (raa CriteriaResourceApplicationArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raa.ref.Append("value"))
}

type CriteriaResourceApplicationNameAttributes struct {
	ref terra.Reference
}

func (ran CriteriaResourceApplicationNameAttributes) InternalRef() (terra.Reference, error) {
	return ran.ref, nil
}

func (ran CriteriaResourceApplicationNameAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceApplicationNameAttributes {
	return CriteriaResourceApplicationNameAttributes{ref: ref}
}

func (ran CriteriaResourceApplicationNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ran.ref.InternalTokens()
}

func (ran CriteriaResourceApplicationNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ran.ref.Append("comparison"))
}

func (ran CriteriaResourceApplicationNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ran.ref.Append("value"))
}

type CriteriaResourceDetailsOtherAttributes struct {
	ref terra.Reference
}

func (rdo CriteriaResourceDetailsOtherAttributes) InternalRef() (terra.Reference, error) {
	return rdo.ref, nil
}

func (rdo CriteriaResourceDetailsOtherAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceDetailsOtherAttributes {
	return CriteriaResourceDetailsOtherAttributes{ref: ref}
}

func (rdo CriteriaResourceDetailsOtherAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rdo.ref.InternalTokens()
}

func (rdo CriteriaResourceDetailsOtherAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("comparison"))
}

func (rdo CriteriaResourceDetailsOtherAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("key"))
}

func (rdo CriteriaResourceDetailsOtherAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("value"))
}

type CriteriaResourceIdAttributes struct {
	ref terra.Reference
}

func (ri CriteriaResourceIdAttributes) InternalRef() (terra.Reference, error) {
	return ri.ref, nil
}

func (ri CriteriaResourceIdAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceIdAttributes {
	return CriteriaResourceIdAttributes{ref: ref}
}

func (ri CriteriaResourceIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ri.ref.InternalTokens()
}

func (ri CriteriaResourceIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ri.ref.Append("comparison"))
}

func (ri CriteriaResourceIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ri.ref.Append("value"))
}

type CriteriaResourcePartitionAttributes struct {
	ref terra.Reference
}

func (rp CriteriaResourcePartitionAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp CriteriaResourcePartitionAttributes) InternalWithRef(ref terra.Reference) CriteriaResourcePartitionAttributes {
	return CriteriaResourcePartitionAttributes{ref: ref}
}

func (rp CriteriaResourcePartitionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp CriteriaResourcePartitionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("comparison"))
}

func (rp CriteriaResourcePartitionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("value"))
}

type CriteriaResourceRegionAttributes struct {
	ref terra.Reference
}

func (rr CriteriaResourceRegionAttributes) InternalRef() (terra.Reference, error) {
	return rr.ref, nil
}

func (rr CriteriaResourceRegionAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceRegionAttributes {
	return CriteriaResourceRegionAttributes{ref: ref}
}

func (rr CriteriaResourceRegionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rr.ref.InternalTokens()
}

func (rr CriteriaResourceRegionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("comparison"))
}

func (rr CriteriaResourceRegionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("value"))
}

type CriteriaResourceTagsAttributes struct {
	ref terra.Reference
}

func (rt CriteriaResourceTagsAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt CriteriaResourceTagsAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceTagsAttributes {
	return CriteriaResourceTagsAttributes{ref: ref}
}

func (rt CriteriaResourceTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt CriteriaResourceTagsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt CriteriaResourceTagsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("key"))
}

func (rt CriteriaResourceTagsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type CriteriaResourceTypeAttributes struct {
	ref terra.Reference
}

func (rt CriteriaResourceTypeAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt CriteriaResourceTypeAttributes) InternalWithRef(ref terra.Reference) CriteriaResourceTypeAttributes {
	return CriteriaResourceTypeAttributes{ref: ref}
}

func (rt CriteriaResourceTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt CriteriaResourceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt CriteriaResourceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type CriteriaSeverityLabelAttributes struct {
	ref terra.Reference
}

func (sl CriteriaSeverityLabelAttributes) InternalRef() (terra.Reference, error) {
	return sl.ref, nil
}

func (sl CriteriaSeverityLabelAttributes) InternalWithRef(ref terra.Reference) CriteriaSeverityLabelAttributes {
	return CriteriaSeverityLabelAttributes{ref: ref}
}

func (sl CriteriaSeverityLabelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sl.ref.InternalTokens()
}

func (sl CriteriaSeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("comparison"))
}

func (sl CriteriaSeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("value"))
}

type CriteriaSourceUrlAttributes struct {
	ref terra.Reference
}

func (su CriteriaSourceUrlAttributes) InternalRef() (terra.Reference, error) {
	return su.ref, nil
}

func (su CriteriaSourceUrlAttributes) InternalWithRef(ref terra.Reference) CriteriaSourceUrlAttributes {
	return CriteriaSourceUrlAttributes{ref: ref}
}

func (su CriteriaSourceUrlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return su.ref.InternalTokens()
}

func (su CriteriaSourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(su.ref.Append("comparison"))
}

func (su CriteriaSourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(su.ref.Append("value"))
}

type CriteriaTitleAttributes struct {
	ref terra.Reference
}

func (t CriteriaTitleAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t CriteriaTitleAttributes) InternalWithRef(ref terra.Reference) CriteriaTitleAttributes {
	return CriteriaTitleAttributes{ref: ref}
}

func (t CriteriaTitleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t CriteriaTitleAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("comparison"))
}

func (t CriteriaTitleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type CriteriaTypeAttributes struct {
	ref terra.Reference
}

func (t CriteriaTypeAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t CriteriaTypeAttributes) InternalWithRef(ref terra.Reference) CriteriaTypeAttributes {
	return CriteriaTypeAttributes{ref: ref}
}

func (t CriteriaTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t CriteriaTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("comparison"))
}

func (t CriteriaTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type CriteriaUpdatedAtAttributes struct {
	ref terra.Reference
}

func (ua CriteriaUpdatedAtAttributes) InternalRef() (terra.Reference, error) {
	return ua.ref, nil
}

func (ua CriteriaUpdatedAtAttributes) InternalWithRef(ref terra.Reference) CriteriaUpdatedAtAttributes {
	return CriteriaUpdatedAtAttributes{ref: ref}
}

func (ua CriteriaUpdatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ua.ref.InternalTokens()
}

func (ua CriteriaUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(ua.ref.Append("end"))
}

func (ua CriteriaUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ua.ref.Append("start"))
}

func (ua CriteriaUpdatedAtAttributes) DateRange() terra.ListValue[CriteriaUpdatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[CriteriaUpdatedAtDateRangeAttributes](ua.ref.Append("date_range"))
}

type CriteriaUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr CriteriaUpdatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr CriteriaUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) CriteriaUpdatedAtDateRangeAttributes {
	return CriteriaUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr CriteriaUpdatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr CriteriaUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr CriteriaUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type CriteriaUserDefinedFieldsAttributes struct {
	ref terra.Reference
}

func (udf CriteriaUserDefinedFieldsAttributes) InternalRef() (terra.Reference, error) {
	return udf.ref, nil
}

func (udf CriteriaUserDefinedFieldsAttributes) InternalWithRef(ref terra.Reference) CriteriaUserDefinedFieldsAttributes {
	return CriteriaUserDefinedFieldsAttributes{ref: ref}
}

func (udf CriteriaUserDefinedFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return udf.ref.InternalTokens()
}

func (udf CriteriaUserDefinedFieldsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(udf.ref.Append("comparison"))
}

func (udf CriteriaUserDefinedFieldsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(udf.ref.Append("key"))
}

func (udf CriteriaUserDefinedFieldsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(udf.ref.Append("value"))
}

type CriteriaVerificationStateAttributes struct {
	ref terra.Reference
}

func (vs CriteriaVerificationStateAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs CriteriaVerificationStateAttributes) InternalWithRef(ref terra.Reference) CriteriaVerificationStateAttributes {
	return CriteriaVerificationStateAttributes{ref: ref}
}

func (vs CriteriaVerificationStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs CriteriaVerificationStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("comparison"))
}

func (vs CriteriaVerificationStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("value"))
}

type CriteriaWorkflowStatusAttributes struct {
	ref terra.Reference
}

func (ws CriteriaWorkflowStatusAttributes) InternalRef() (terra.Reference, error) {
	return ws.ref, nil
}

func (ws CriteriaWorkflowStatusAttributes) InternalWithRef(ref terra.Reference) CriteriaWorkflowStatusAttributes {
	return CriteriaWorkflowStatusAttributes{ref: ref}
}

func (ws CriteriaWorkflowStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ws.ref.InternalTokens()
}

func (ws CriteriaWorkflowStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("comparison"))
}

func (ws CriteriaWorkflowStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("value"))
}

type ActionsState struct {
	Type                string                            `json:"type"`
	FindingFieldsUpdate []ActionsFindingFieldsUpdateState `json:"finding_fields_update"`
}

type ActionsFindingFieldsUpdateState struct {
	Confidence        float64                                          `json:"confidence"`
	Criticality       float64                                          `json:"criticality"`
	Types             []string                                         `json:"types"`
	UserDefinedFields map[string]string                                `json:"user_defined_fields"`
	VerificationState string                                           `json:"verification_state"`
	Note              []ActionsFindingFieldsUpdateNoteState            `json:"note"`
	RelatedFindings   []ActionsFindingFieldsUpdateRelatedFindingsState `json:"related_findings"`
	Severity          []ActionsFindingFieldsUpdateSeverityState        `json:"severity"`
	Workflow          []ActionsFindingFieldsUpdateWorkflowState        `json:"workflow"`
}

type ActionsFindingFieldsUpdateNoteState struct {
	Text      string `json:"text"`
	UpdatedBy string `json:"updated_by"`
}

type ActionsFindingFieldsUpdateRelatedFindingsState struct {
	Id         string `json:"id"`
	ProductArn string `json:"product_arn"`
}

type ActionsFindingFieldsUpdateSeverityState struct {
	Label   string  `json:"label"`
	Product float64 `json:"product"`
}

type ActionsFindingFieldsUpdateWorkflowState struct {
	Status string `json:"status"`
}

type CriteriaState struct {
	AwsAccountId                    []CriteriaAwsAccountIdState                    `json:"aws_account_id"`
	AwsAccountName                  []CriteriaAwsAccountNameState                  `json:"aws_account_name"`
	CompanyName                     []CriteriaCompanyNameState                     `json:"company_name"`
	ComplianceAssociatedStandardsId []CriteriaComplianceAssociatedStandardsIdState `json:"compliance_associated_standards_id"`
	ComplianceSecurityControlId     []CriteriaComplianceSecurityControlIdState     `json:"compliance_security_control_id"`
	ComplianceStatus                []CriteriaComplianceStatusState                `json:"compliance_status"`
	Confidence                      []CriteriaConfidenceState                      `json:"confidence"`
	CreatedAt                       []CriteriaCreatedAtState                       `json:"created_at"`
	Criticality                     []CriteriaCriticalityState                     `json:"criticality"`
	Description                     []CriteriaDescriptionState                     `json:"description"`
	FirstObservedAt                 []CriteriaFirstObservedAtState                 `json:"first_observed_at"`
	GeneratorId                     []CriteriaGeneratorIdState                     `json:"generator_id"`
	Id                              []CriteriaIdState                              `json:"id"`
	LastObservedAt                  []CriteriaLastObservedAtState                  `json:"last_observed_at"`
	NoteText                        []CriteriaNoteTextState                        `json:"note_text"`
	NoteUpdatedAt                   []CriteriaNoteUpdatedAtState                   `json:"note_updated_at"`
	NoteUpdatedBy                   []CriteriaNoteUpdatedByState                   `json:"note_updated_by"`
	ProductArn                      []CriteriaProductArnState                      `json:"product_arn"`
	ProductName                     []CriteriaProductNameState                     `json:"product_name"`
	RecordState                     []CriteriaRecordStateState                     `json:"record_state"`
	RelatedFindingsId               []CriteriaRelatedFindingsIdState               `json:"related_findings_id"`
	RelatedFindingsProductArn       []CriteriaRelatedFindingsProductArnState       `json:"related_findings_product_arn"`
	ResourceApplicationArn          []CriteriaResourceApplicationArnState          `json:"resource_application_arn"`
	ResourceApplicationName         []CriteriaResourceApplicationNameState         `json:"resource_application_name"`
	ResourceDetailsOther            []CriteriaResourceDetailsOtherState            `json:"resource_details_other"`
	ResourceId                      []CriteriaResourceIdState                      `json:"resource_id"`
	ResourcePartition               []CriteriaResourcePartitionState               `json:"resource_partition"`
	ResourceRegion                  []CriteriaResourceRegionState                  `json:"resource_region"`
	ResourceTags                    []CriteriaResourceTagsState                    `json:"resource_tags"`
	ResourceType                    []CriteriaResourceTypeState                    `json:"resource_type"`
	SeverityLabel                   []CriteriaSeverityLabelState                   `json:"severity_label"`
	SourceUrl                       []CriteriaSourceUrlState                       `json:"source_url"`
	Title                           []CriteriaTitleState                           `json:"title"`
	Type                            []CriteriaTypeState                            `json:"type"`
	UpdatedAt                       []CriteriaUpdatedAtState                       `json:"updated_at"`
	UserDefinedFields               []CriteriaUserDefinedFieldsState               `json:"user_defined_fields"`
	VerificationState               []CriteriaVerificationStateState               `json:"verification_state"`
	WorkflowStatus                  []CriteriaWorkflowStatusState                  `json:"workflow_status"`
}

type CriteriaAwsAccountIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaAwsAccountNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaCompanyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaComplianceAssociatedStandardsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaComplianceSecurityControlIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaComplianceStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaConfidenceState struct {
	Eq  float64 `json:"eq"`
	Gt  float64 `json:"gt"`
	Gte float64 `json:"gte"`
	Lt  float64 `json:"lt"`
	Lte float64 `json:"lte"`
}

type CriteriaCreatedAtState struct {
	End       string                            `json:"end"`
	Start     string                            `json:"start"`
	DateRange []CriteriaCreatedAtDateRangeState `json:"date_range"`
}

type CriteriaCreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type CriteriaCriticalityState struct {
	Eq  float64 `json:"eq"`
	Gt  float64 `json:"gt"`
	Gte float64 `json:"gte"`
	Lt  float64 `json:"lt"`
	Lte float64 `json:"lte"`
}

type CriteriaDescriptionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaFirstObservedAtState struct {
	End       string                                  `json:"end"`
	Start     string                                  `json:"start"`
	DateRange []CriteriaFirstObservedAtDateRangeState `json:"date_range"`
}

type CriteriaFirstObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type CriteriaGeneratorIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaLastObservedAtState struct {
	End       string                                 `json:"end"`
	Start     string                                 `json:"start"`
	DateRange []CriteriaLastObservedAtDateRangeState `json:"date_range"`
}

type CriteriaLastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type CriteriaNoteTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaNoteUpdatedAtState struct {
	End       string                                `json:"end"`
	Start     string                                `json:"start"`
	DateRange []CriteriaNoteUpdatedAtDateRangeState `json:"date_range"`
}

type CriteriaNoteUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type CriteriaNoteUpdatedByState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaProductNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaRecordStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaRelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaRelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaResourceApplicationArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaResourceApplicationNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaResourceDetailsOtherState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type CriteriaResourceIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaResourcePartitionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaResourceRegionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaResourceTagsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type CriteriaResourceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaSeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaSourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaTitleState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaUpdatedAtState struct {
	End       string                            `json:"end"`
	Start     string                            `json:"start"`
	DateRange []CriteriaUpdatedAtDateRangeState `json:"date_range"`
}

type CriteriaUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type CriteriaUserDefinedFieldsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type CriteriaVerificationStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CriteriaWorkflowStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}
