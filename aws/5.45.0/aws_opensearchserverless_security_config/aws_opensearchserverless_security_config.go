// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_opensearchserverless_security_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_opensearchserverless_security_config.
type Resource struct {
	Name      string
	Args      Args
	state     *awsOpensearchserverlessSecurityConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aosc *Resource) Type() string {
	return "aws_opensearchserverless_security_config"
}

// LocalName returns the local name for [Resource].
func (aosc *Resource) LocalName() string {
	return aosc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aosc *Resource) Configuration() interface{} {
	return aosc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aosc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aosc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aosc *Resource) Dependencies() terra.Dependencies {
	return aosc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aosc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aosc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aosc *Resource) Attributes() awsOpensearchserverlessSecurityConfigAttributes {
	return awsOpensearchserverlessSecurityConfigAttributes{ref: terra.ReferenceResource(aosc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aosc *Resource) ImportState(state io.Reader) error {
	aosc.state = &awsOpensearchserverlessSecurityConfigState{}
	if err := json.NewDecoder(state).Decode(aosc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aosc.Type(), aosc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aosc *Resource) State() (*awsOpensearchserverlessSecurityConfigState, bool) {
	return aosc.state, aosc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aosc *Resource) StateMust() *awsOpensearchserverlessSecurityConfigState {
	if aosc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aosc.Type(), aosc.LocalName()))
	}
	return aosc.state
}

// Args contains the configurations for aws_opensearchserverless_security_config.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// SamlOptions: optional
	SamlOptions *SamlOptions `hcl:"saml_options,block"`
}

type awsOpensearchserverlessSecurityConfigAttributes struct {
	ref terra.Reference
}

// ConfigVersion returns a reference to field config_version of aws_opensearchserverless_security_config.
func (aosc awsOpensearchserverlessSecurityConfigAttributes) ConfigVersion() terra.StringValue {
	return terra.ReferenceAsString(aosc.ref.Append("config_version"))
}

// Description returns a reference to field description of aws_opensearchserverless_security_config.
func (aosc awsOpensearchserverlessSecurityConfigAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aosc.ref.Append("description"))
}

// Id returns a reference to field id of aws_opensearchserverless_security_config.
func (aosc awsOpensearchserverlessSecurityConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aosc.ref.Append("id"))
}

// Name returns a reference to field name of aws_opensearchserverless_security_config.
func (aosc awsOpensearchserverlessSecurityConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aosc.ref.Append("name"))
}

// Type returns a reference to field type of aws_opensearchserverless_security_config.
func (aosc awsOpensearchserverlessSecurityConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aosc.ref.Append("type"))
}

func (aosc awsOpensearchserverlessSecurityConfigAttributes) SamlOptions() SamlOptionsAttributes {
	return terra.ReferenceAsSingle[SamlOptionsAttributes](aosc.ref.Append("saml_options"))
}

type awsOpensearchserverlessSecurityConfigState struct {
	ConfigVersion string            `json:"config_version"`
	Description   string            `json:"description"`
	Id            string            `json:"id"`
	Name          string            `json:"name"`
	Type          string            `json:"type"`
	SamlOptions   *SamlOptionsState `json:"saml_options"`
}
