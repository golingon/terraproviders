// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3control_multi_region_access_point

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_s3control_multi_region_access_point.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asmrap *DataSource) DataSource() string {
	return "aws_s3control_multi_region_access_point"
}

// LocalName returns the local name for [DataSource].
func (asmrap *DataSource) LocalName() string {
	return asmrap.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asmrap *DataSource) Configuration() interface{} {
	return asmrap.Args
}

// Attributes returns the attributes for [DataSource].
func (asmrap *DataSource) Attributes() dataAwsS3ControlMultiRegionAccessPointAttributes {
	return dataAwsS3ControlMultiRegionAccessPointAttributes{ref: terra.ReferenceDataSource(asmrap)}
}

// DataArgs contains the configurations for aws_s3control_multi_region_access_point.
type DataArgs struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type dataAwsS3ControlMultiRegionAccessPointAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("account_id"))
}

// Alias returns a reference to field alias of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) Alias() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("alias"))
}

// Arn returns a reference to field arn of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("arn"))
}

// CreatedAt returns a reference to field created_at of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("created_at"))
}

// DomainName returns a reference to field domain_name of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("domain_name"))
}

// Id returns a reference to field id of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("id"))
}

// Name returns a reference to field name of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("name"))
}

// Status returns a reference to field status of aws_s3control_multi_region_access_point.
func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(asmrap.ref.Append("status"))
}

func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) PublicAccessBlock() terra.ListValue[DataPublicAccessBlockAttributes] {
	return terra.ReferenceAsList[DataPublicAccessBlockAttributes](asmrap.ref.Append("public_access_block"))
}

func (asmrap dataAwsS3ControlMultiRegionAccessPointAttributes) Regions() terra.ListValue[DataRegionsAttributes] {
	return terra.ReferenceAsList[DataRegionsAttributes](asmrap.ref.Append("regions"))
}
