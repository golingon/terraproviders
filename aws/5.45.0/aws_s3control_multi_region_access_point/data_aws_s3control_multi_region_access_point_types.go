// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3control_multi_region_access_point

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataPublicAccessBlockAttributes struct {
	ref terra.Reference
}

func (pab DataPublicAccessBlockAttributes) InternalRef() (terra.Reference, error) {
	return pab.ref, nil
}

func (pab DataPublicAccessBlockAttributes) InternalWithRef(ref terra.Reference) DataPublicAccessBlockAttributes {
	return DataPublicAccessBlockAttributes{ref: ref}
}

func (pab DataPublicAccessBlockAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pab.ref.InternalTokens()
}

func (pab DataPublicAccessBlockAttributes) BlockPublicAcls() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("block_public_acls"))
}

func (pab DataPublicAccessBlockAttributes) BlockPublicPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("block_public_policy"))
}

func (pab DataPublicAccessBlockAttributes) IgnorePublicAcls() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("ignore_public_acls"))
}

func (pab DataPublicAccessBlockAttributes) RestrictPublicBuckets() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("restrict_public_buckets"))
}

type DataRegionsAttributes struct {
	ref terra.Reference
}

func (r DataRegionsAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataRegionsAttributes) InternalWithRef(ref terra.Reference) DataRegionsAttributes {
	return DataRegionsAttributes{ref: ref}
}

func (r DataRegionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataRegionsAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket"))
}

func (r DataRegionsAttributes) BucketAccountId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_account_id"))
}

func (r DataRegionsAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("region"))
}

type DataPublicAccessBlockState struct {
	BlockPublicAcls       bool `json:"block_public_acls"`
	BlockPublicPolicy     bool `json:"block_public_policy"`
	IgnorePublicAcls      bool `json:"ignore_public_acls"`
	RestrictPublicBuckets bool `json:"restrict_public_buckets"`
}

type DataRegionsState struct {
	Bucket          string `json:"bucket"`
	BucketAccountId string `json:"bucket_account_id"`
	Region          string `json:"region"`
}
