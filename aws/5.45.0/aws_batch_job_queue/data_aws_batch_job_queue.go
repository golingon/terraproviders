// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_batch_job_queue

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_batch_job_queue.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (abjq *DataSource) DataSource() string {
	return "aws_batch_job_queue"
}

// LocalName returns the local name for [DataSource].
func (abjq *DataSource) LocalName() string {
	return abjq.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (abjq *DataSource) Configuration() interface{} {
	return abjq.Args
}

// Attributes returns the attributes for [DataSource].
func (abjq *DataSource) Attributes() dataAwsBatchJobQueueAttributes {
	return dataAwsBatchJobQueueAttributes{ref: terra.ReferenceDataSource(abjq)}
}

// DataArgs contains the configurations for aws_batch_job_queue.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsBatchJobQueueAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("arn"))
}

// Id returns a reference to field id of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("id"))
}

// Name returns a reference to field name of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("name"))
}

// Priority returns a reference to field priority of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(abjq.ref.Append("priority"))
}

// SchedulingPolicyArn returns a reference to field scheduling_policy_arn of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) SchedulingPolicyArn() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("scheduling_policy_arn"))
}

// State returns a reference to field state of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("state"))
}

// Status returns a reference to field status of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("status"))
}

// StatusReason returns a reference to field status_reason of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) StatusReason() terra.StringValue {
	return terra.ReferenceAsString(abjq.ref.Append("status_reason"))
}

// Tags returns a reference to field tags of aws_batch_job_queue.
func (abjq dataAwsBatchJobQueueAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](abjq.ref.Append("tags"))
}

func (abjq dataAwsBatchJobQueueAttributes) ComputeEnvironmentOrder() terra.ListValue[DataComputeEnvironmentOrderAttributes] {
	return terra.ReferenceAsList[DataComputeEnvironmentOrderAttributes](abjq.ref.Append("compute_environment_order"))
}
