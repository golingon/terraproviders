// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_log_delivery_canonical_user_id

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource aws_cloudfront_log_delivery_canonical_user_id.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acldcui *DataSource) DataSource() string {
	return "aws_cloudfront_log_delivery_canonical_user_id"
}

// LocalName returns the local name for [DataSource].
func (acldcui *DataSource) LocalName() string {
	return acldcui.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acldcui *DataSource) Configuration() interface{} {
	return acldcui.Args
}

// Attributes returns the attributes for [DataSource].
func (acldcui *DataSource) Attributes() dataAwsCloudfrontLogDeliveryCanonicalUserIdAttributes {
	return dataAwsCloudfrontLogDeliveryCanonicalUserIdAttributes{ref: terra.ReferenceDataSource(acldcui)}
}

// DataArgs contains the configurations for aws_cloudfront_log_delivery_canonical_user_id.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type dataAwsCloudfrontLogDeliveryCanonicalUserIdAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_cloudfront_log_delivery_canonical_user_id.
func (acldcui dataAwsCloudfrontLogDeliveryCanonicalUserIdAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acldcui.ref.Append("id"))
}

// Region returns a reference to field region of aws_cloudfront_log_delivery_canonical_user_id.
func (acldcui dataAwsCloudfrontLogDeliveryCanonicalUserIdAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(acldcui.ref.Append("region"))
}
