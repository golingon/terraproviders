// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_shield_protection_health_check_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_shield_protection_health_check_association.
type Resource struct {
	Name      string
	Args      Args
	state     *awsShieldProtectionHealthCheckAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asphca *Resource) Type() string {
	return "aws_shield_protection_health_check_association"
}

// LocalName returns the local name for [Resource].
func (asphca *Resource) LocalName() string {
	return asphca.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asphca *Resource) Configuration() interface{} {
	return asphca.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asphca *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asphca)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asphca *Resource) Dependencies() terra.Dependencies {
	return asphca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asphca *Resource) LifecycleManagement() *terra.Lifecycle {
	return asphca.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asphca *Resource) Attributes() awsShieldProtectionHealthCheckAssociationAttributes {
	return awsShieldProtectionHealthCheckAssociationAttributes{ref: terra.ReferenceResource(asphca)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asphca *Resource) ImportState(state io.Reader) error {
	asphca.state = &awsShieldProtectionHealthCheckAssociationState{}
	if err := json.NewDecoder(state).Decode(asphca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asphca.Type(), asphca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asphca *Resource) State() (*awsShieldProtectionHealthCheckAssociationState, bool) {
	return asphca.state, asphca.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asphca *Resource) StateMust() *awsShieldProtectionHealthCheckAssociationState {
	if asphca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asphca.Type(), asphca.LocalName()))
	}
	return asphca.state
}

// Args contains the configurations for aws_shield_protection_health_check_association.
type Args struct {
	// HealthCheckArn: string, required
	HealthCheckArn terra.StringValue `hcl:"health_check_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ShieldProtectionId: string, required
	ShieldProtectionId terra.StringValue `hcl:"shield_protection_id,attr" validate:"required"`
}

type awsShieldProtectionHealthCheckAssociationAttributes struct {
	ref terra.Reference
}

// HealthCheckArn returns a reference to field health_check_arn of aws_shield_protection_health_check_association.
func (asphca awsShieldProtectionHealthCheckAssociationAttributes) HealthCheckArn() terra.StringValue {
	return terra.ReferenceAsString(asphca.ref.Append("health_check_arn"))
}

// Id returns a reference to field id of aws_shield_protection_health_check_association.
func (asphca awsShieldProtectionHealthCheckAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asphca.ref.Append("id"))
}

// ShieldProtectionId returns a reference to field shield_protection_id of aws_shield_protection_health_check_association.
func (asphca awsShieldProtectionHealthCheckAssociationAttributes) ShieldProtectionId() terra.StringValue {
	return terra.ReferenceAsString(asphca.ref.Append("shield_protection_id"))
}

type awsShieldProtectionHealthCheckAssociationState struct {
	HealthCheckArn     string `json:"health_check_arn"`
	Id                 string `json:"id"`
	ShieldProtectionId string `json:"shield_protection_id"`
}
