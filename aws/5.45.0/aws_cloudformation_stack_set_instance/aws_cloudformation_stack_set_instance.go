// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudformation_stack_set_instance

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource aws_cloudformation_stack_set_instance.
type Resource struct {
	Name      string
	Args      Args
	state     *awsCloudformationStackSetInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acssi *Resource) Type() string {
	return "aws_cloudformation_stack_set_instance"
}

// LocalName returns the local name for [Resource].
func (acssi *Resource) LocalName() string {
	return acssi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acssi *Resource) Configuration() interface{} {
	return acssi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acssi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acssi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acssi *Resource) Dependencies() terra.Dependencies {
	return acssi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acssi *Resource) LifecycleManagement() *terra.Lifecycle {
	return acssi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acssi *Resource) Attributes() awsCloudformationStackSetInstanceAttributes {
	return awsCloudformationStackSetInstanceAttributes{ref: terra.ReferenceResource(acssi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acssi *Resource) ImportState(state io.Reader) error {
	acssi.state = &awsCloudformationStackSetInstanceState{}
	if err := json.NewDecoder(state).Decode(acssi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acssi.Type(), acssi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acssi *Resource) State() (*awsCloudformationStackSetInstanceState, bool) {
	return acssi.state, acssi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acssi *Resource) StateMust() *awsCloudformationStackSetInstanceState {
	if acssi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acssi.Type(), acssi.LocalName()))
	}
	return acssi.state
}

// Args contains the configurations for aws_cloudformation_stack_set_instance.
type Args struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// CallAs: string, optional
	CallAs terra.StringValue `hcl:"call_as,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ParameterOverrides: map of string, optional
	ParameterOverrides terra.MapValue[terra.StringValue] `hcl:"parameter_overrides,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// RetainStack: bool, optional
	RetainStack terra.BoolValue `hcl:"retain_stack,attr"`
	// StackSetName: string, required
	StackSetName terra.StringValue `hcl:"stack_set_name,attr" validate:"required"`
	// DeploymentTargets: optional
	DeploymentTargets *DeploymentTargets `hcl:"deployment_targets,block"`
	// OperationPreferences: optional
	OperationPreferences *OperationPreferences `hcl:"operation_preferences,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsCloudformationStackSetInstanceAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("account_id"))
}

// CallAs returns a reference to field call_as of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) CallAs() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("call_as"))
}

// Id returns a reference to field id of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("id"))
}

// OrganizationalUnitId returns a reference to field organizational_unit_id of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) OrganizationalUnitId() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("organizational_unit_id"))
}

// ParameterOverrides returns a reference to field parameter_overrides of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) ParameterOverrides() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acssi.ref.Append("parameter_overrides"))
}

// Region returns a reference to field region of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("region"))
}

// RetainStack returns a reference to field retain_stack of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) RetainStack() terra.BoolValue {
	return terra.ReferenceAsBool(acssi.ref.Append("retain_stack"))
}

// StackId returns a reference to field stack_id of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) StackId() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("stack_id"))
}

// StackSetName returns a reference to field stack_set_name of aws_cloudformation_stack_set_instance.
func (acssi awsCloudformationStackSetInstanceAttributes) StackSetName() terra.StringValue {
	return terra.ReferenceAsString(acssi.ref.Append("stack_set_name"))
}

func (acssi awsCloudformationStackSetInstanceAttributes) StackInstanceSummaries() terra.ListValue[StackInstanceSummariesAttributes] {
	return terra.ReferenceAsList[StackInstanceSummariesAttributes](acssi.ref.Append("stack_instance_summaries"))
}

func (acssi awsCloudformationStackSetInstanceAttributes) DeploymentTargets() terra.ListValue[DeploymentTargetsAttributes] {
	return terra.ReferenceAsList[DeploymentTargetsAttributes](acssi.ref.Append("deployment_targets"))
}

func (acssi awsCloudformationStackSetInstanceAttributes) OperationPreferences() terra.ListValue[OperationPreferencesAttributes] {
	return terra.ReferenceAsList[OperationPreferencesAttributes](acssi.ref.Append("operation_preferences"))
}

func (acssi awsCloudformationStackSetInstanceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acssi.ref.Append("timeouts"))
}

type awsCloudformationStackSetInstanceState struct {
	AccountId              string                        `json:"account_id"`
	CallAs                 string                        `json:"call_as"`
	Id                     string                        `json:"id"`
	OrganizationalUnitId   string                        `json:"organizational_unit_id"`
	ParameterOverrides     map[string]string             `json:"parameter_overrides"`
	Region                 string                        `json:"region"`
	RetainStack            bool                          `json:"retain_stack"`
	StackId                string                        `json:"stack_id"`
	StackSetName           string                        `json:"stack_set_name"`
	StackInstanceSummaries []StackInstanceSummariesState `json:"stack_instance_summaries"`
	DeploymentTargets      []DeploymentTargetsState      `json:"deployment_targets"`
	OperationPreferences   []OperationPreferencesState   `json:"operation_preferences"`
	Timeouts               *TimeoutsState                `json:"timeouts"`
}
