// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewCloudfrontKeyGroup creates a new instance of [CloudfrontKeyGroup].
func NewCloudfrontKeyGroup(name string, args CloudfrontKeyGroupArgs) *CloudfrontKeyGroup {
	return &CloudfrontKeyGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudfrontKeyGroup)(nil)

// CloudfrontKeyGroup represents the Terraform resource aws_cloudfront_key_group.
type CloudfrontKeyGroup struct {
	Name      string
	Args      CloudfrontKeyGroupArgs
	state     *cloudfrontKeyGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CloudfrontKeyGroup].
func (ckg *CloudfrontKeyGroup) Type() string {
	return "aws_cloudfront_key_group"
}

// LocalName returns the local name for [CloudfrontKeyGroup].
func (ckg *CloudfrontKeyGroup) LocalName() string {
	return ckg.Name
}

// Configuration returns the configuration (args) for [CloudfrontKeyGroup].
func (ckg *CloudfrontKeyGroup) Configuration() interface{} {
	return ckg.Args
}

// DependOn is used for other resources to depend on [CloudfrontKeyGroup].
func (ckg *CloudfrontKeyGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(ckg)
}

// Dependencies returns the list of resources [CloudfrontKeyGroup] depends_on.
func (ckg *CloudfrontKeyGroup) Dependencies() terra.Dependencies {
	return ckg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CloudfrontKeyGroup].
func (ckg *CloudfrontKeyGroup) LifecycleManagement() *terra.Lifecycle {
	return ckg.Lifecycle
}

// Attributes returns the attributes for [CloudfrontKeyGroup].
func (ckg *CloudfrontKeyGroup) Attributes() cloudfrontKeyGroupAttributes {
	return cloudfrontKeyGroupAttributes{ref: terra.ReferenceResource(ckg)}
}

// ImportState imports the given attribute values into [CloudfrontKeyGroup]'s state.
func (ckg *CloudfrontKeyGroup) ImportState(av io.Reader) error {
	ckg.state = &cloudfrontKeyGroupState{}
	if err := json.NewDecoder(av).Decode(ckg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ckg.Type(), ckg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CloudfrontKeyGroup] has state.
func (ckg *CloudfrontKeyGroup) State() (*cloudfrontKeyGroupState, bool) {
	return ckg.state, ckg.state != nil
}

// StateMust returns the state for [CloudfrontKeyGroup]. Panics if the state is nil.
func (ckg *CloudfrontKeyGroup) StateMust() *cloudfrontKeyGroupState {
	if ckg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ckg.Type(), ckg.LocalName()))
	}
	return ckg.state
}

// CloudfrontKeyGroupArgs contains the configurations for aws_cloudfront_key_group.
type CloudfrontKeyGroupArgs struct {
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Items: set of string, required
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}
type cloudfrontKeyGroupAttributes struct {
	ref terra.Reference
}

// Comment returns a reference to field comment of aws_cloudfront_key_group.
func (ckg cloudfrontKeyGroupAttributes) Comment() terra.StringValue {
	return terra.ReferenceAsString(ckg.ref.Append("comment"))
}

// Etag returns a reference to field etag of aws_cloudfront_key_group.
func (ckg cloudfrontKeyGroupAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ckg.ref.Append("etag"))
}

// Id returns a reference to field id of aws_cloudfront_key_group.
func (ckg cloudfrontKeyGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ckg.ref.Append("id"))
}

// Items returns a reference to field items of aws_cloudfront_key_group.
func (ckg cloudfrontKeyGroupAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ckg.ref.Append("items"))
}

// Name returns a reference to field name of aws_cloudfront_key_group.
func (ckg cloudfrontKeyGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ckg.ref.Append("name"))
}

type cloudfrontKeyGroupState struct {
	Comment string   `json:"comment"`
	Etag    string   `json:"etag"`
	Id      string   `json:"id"`
	Items   []string `json:"items"`
	Name    string   `json:"name"`
}
