// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	shielddrtaccesslogbucketassociation "github.com/golingon/terraproviders/aws/5.21.0/shielddrtaccesslogbucketassociation"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewShieldDrtAccessLogBucketAssociation creates a new instance of [ShieldDrtAccessLogBucketAssociation].
func NewShieldDrtAccessLogBucketAssociation(name string, args ShieldDrtAccessLogBucketAssociationArgs) *ShieldDrtAccessLogBucketAssociation {
	return &ShieldDrtAccessLogBucketAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ShieldDrtAccessLogBucketAssociation)(nil)

// ShieldDrtAccessLogBucketAssociation represents the Terraform resource aws_shield_drt_access_log_bucket_association.
type ShieldDrtAccessLogBucketAssociation struct {
	Name      string
	Args      ShieldDrtAccessLogBucketAssociationArgs
	state     *shieldDrtAccessLogBucketAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ShieldDrtAccessLogBucketAssociation].
func (sdalba *ShieldDrtAccessLogBucketAssociation) Type() string {
	return "aws_shield_drt_access_log_bucket_association"
}

// LocalName returns the local name for [ShieldDrtAccessLogBucketAssociation].
func (sdalba *ShieldDrtAccessLogBucketAssociation) LocalName() string {
	return sdalba.Name
}

// Configuration returns the configuration (args) for [ShieldDrtAccessLogBucketAssociation].
func (sdalba *ShieldDrtAccessLogBucketAssociation) Configuration() interface{} {
	return sdalba.Args
}

// DependOn is used for other resources to depend on [ShieldDrtAccessLogBucketAssociation].
func (sdalba *ShieldDrtAccessLogBucketAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(sdalba)
}

// Dependencies returns the list of resources [ShieldDrtAccessLogBucketAssociation] depends_on.
func (sdalba *ShieldDrtAccessLogBucketAssociation) Dependencies() terra.Dependencies {
	return sdalba.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ShieldDrtAccessLogBucketAssociation].
func (sdalba *ShieldDrtAccessLogBucketAssociation) LifecycleManagement() *terra.Lifecycle {
	return sdalba.Lifecycle
}

// Attributes returns the attributes for [ShieldDrtAccessLogBucketAssociation].
func (sdalba *ShieldDrtAccessLogBucketAssociation) Attributes() shieldDrtAccessLogBucketAssociationAttributes {
	return shieldDrtAccessLogBucketAssociationAttributes{ref: terra.ReferenceResource(sdalba)}
}

// ImportState imports the given attribute values into [ShieldDrtAccessLogBucketAssociation]'s state.
func (sdalba *ShieldDrtAccessLogBucketAssociation) ImportState(av io.Reader) error {
	sdalba.state = &shieldDrtAccessLogBucketAssociationState{}
	if err := json.NewDecoder(av).Decode(sdalba.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdalba.Type(), sdalba.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ShieldDrtAccessLogBucketAssociation] has state.
func (sdalba *ShieldDrtAccessLogBucketAssociation) State() (*shieldDrtAccessLogBucketAssociationState, bool) {
	return sdalba.state, sdalba.state != nil
}

// StateMust returns the state for [ShieldDrtAccessLogBucketAssociation]. Panics if the state is nil.
func (sdalba *ShieldDrtAccessLogBucketAssociation) StateMust() *shieldDrtAccessLogBucketAssociationState {
	if sdalba.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdalba.Type(), sdalba.LocalName()))
	}
	return sdalba.state
}

// ShieldDrtAccessLogBucketAssociationArgs contains the configurations for aws_shield_drt_access_log_bucket_association.
type ShieldDrtAccessLogBucketAssociationArgs struct {
	// LogBucket: string, required
	LogBucket terra.StringValue `hcl:"log_bucket,attr" validate:"required"`
	// RoleArnAssociationId: string, required
	RoleArnAssociationId terra.StringValue `hcl:"role_arn_association_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *shielddrtaccesslogbucketassociation.Timeouts `hcl:"timeouts,block"`
}
type shieldDrtAccessLogBucketAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_shield_drt_access_log_bucket_association.
func (sdalba shieldDrtAccessLogBucketAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sdalba.ref.Append("id"))
}

// LogBucket returns a reference to field log_bucket of aws_shield_drt_access_log_bucket_association.
func (sdalba shieldDrtAccessLogBucketAssociationAttributes) LogBucket() terra.StringValue {
	return terra.ReferenceAsString(sdalba.ref.Append("log_bucket"))
}

// RoleArnAssociationId returns a reference to field role_arn_association_id of aws_shield_drt_access_log_bucket_association.
func (sdalba shieldDrtAccessLogBucketAssociationAttributes) RoleArnAssociationId() terra.StringValue {
	return terra.ReferenceAsString(sdalba.ref.Append("role_arn_association_id"))
}

func (sdalba shieldDrtAccessLogBucketAssociationAttributes) Timeouts() shielddrtaccesslogbucketassociation.TimeoutsAttributes {
	return terra.ReferenceAsSingle[shielddrtaccesslogbucketassociation.TimeoutsAttributes](sdalba.ref.Append("timeouts"))
}

type shieldDrtAccessLogBucketAssociationState struct {
	Id                   string                                             `json:"id"`
	LogBucket            string                                             `json:"log_bucket"`
	RoleArnAssociationId string                                             `json:"role_arn_association_id"`
	Timeouts             *shielddrtaccesslogbucketassociation.TimeoutsState `json:"timeouts"`
}
