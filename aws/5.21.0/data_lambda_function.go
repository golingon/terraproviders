// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datalambdafunction "github.com/golingon/terraproviders/aws/5.21.0/datalambdafunction"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataLambdaFunction creates a new instance of [DataLambdaFunction].
func NewDataLambdaFunction(name string, args DataLambdaFunctionArgs) *DataLambdaFunction {
	return &DataLambdaFunction{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLambdaFunction)(nil)

// DataLambdaFunction represents the Terraform data resource aws_lambda_function.
type DataLambdaFunction struct {
	Name string
	Args DataLambdaFunctionArgs
}

// DataSource returns the Terraform object type for [DataLambdaFunction].
func (lf *DataLambdaFunction) DataSource() string {
	return "aws_lambda_function"
}

// LocalName returns the local name for [DataLambdaFunction].
func (lf *DataLambdaFunction) LocalName() string {
	return lf.Name
}

// Configuration returns the configuration (args) for [DataLambdaFunction].
func (lf *DataLambdaFunction) Configuration() interface{} {
	return lf.Args
}

// Attributes returns the attributes for [DataLambdaFunction].
func (lf *DataLambdaFunction) Attributes() dataLambdaFunctionAttributes {
	return dataLambdaFunctionAttributes{ref: terra.ReferenceDataResource(lf)}
}

// DataLambdaFunctionArgs contains the configurations for aws_lambda_function.
type DataLambdaFunctionArgs struct {
	// FunctionName: string, required
	FunctionName terra.StringValue `hcl:"function_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Qualifier: string, optional
	Qualifier terra.StringValue `hcl:"qualifier,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// DeadLetterConfig: min=0
	DeadLetterConfig []datalambdafunction.DeadLetterConfig `hcl:"dead_letter_config,block" validate:"min=0"`
	// Environment: min=0
	Environment []datalambdafunction.Environment `hcl:"environment,block" validate:"min=0"`
	// EphemeralStorage: min=0
	EphemeralStorage []datalambdafunction.EphemeralStorage `hcl:"ephemeral_storage,block" validate:"min=0"`
	// FileSystemConfig: min=0
	FileSystemConfig []datalambdafunction.FileSystemConfig `hcl:"file_system_config,block" validate:"min=0"`
	// TracingConfig: min=0
	TracingConfig []datalambdafunction.TracingConfig `hcl:"tracing_config,block" validate:"min=0"`
	// VpcConfig: min=0
	VpcConfig []datalambdafunction.VpcConfig `hcl:"vpc_config,block" validate:"min=0"`
}
type dataLambdaFunctionAttributes struct {
	ref terra.Reference
}

// Architectures returns a reference to field architectures of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Architectures() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lf.ref.Append("architectures"))
}

// Arn returns a reference to field arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

// CodeSigningConfigArn returns a reference to field code_signing_config_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) CodeSigningConfigArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("code_signing_config_arn"))
}

// Description returns a reference to field description of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("description"))
}

// FunctionName returns a reference to field function_name of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) FunctionName() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("function_name"))
}

// Handler returns a reference to field handler of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Handler() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("handler"))
}

// Id returns a reference to field id of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

// ImageUri returns a reference to field image_uri of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) ImageUri() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("image_uri"))
}

// InvokeArn returns a reference to field invoke_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) InvokeArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("invoke_arn"))
}

// KmsKeyArn returns a reference to field kms_key_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("kms_key_arn"))
}

// LastModified returns a reference to field last_modified of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) LastModified() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("last_modified"))
}

// Layers returns a reference to field layers of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Layers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lf.ref.Append("layers"))
}

// MemorySize returns a reference to field memory_size of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) MemorySize() terra.NumberValue {
	return terra.ReferenceAsNumber(lf.ref.Append("memory_size"))
}

// QualifiedArn returns a reference to field qualified_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) QualifiedArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("qualified_arn"))
}

// QualifiedInvokeArn returns a reference to field qualified_invoke_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) QualifiedInvokeArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("qualified_invoke_arn"))
}

// Qualifier returns a reference to field qualifier of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Qualifier() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("qualifier"))
}

// ReservedConcurrentExecutions returns a reference to field reserved_concurrent_executions of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) ReservedConcurrentExecutions() terra.NumberValue {
	return terra.ReferenceAsNumber(lf.ref.Append("reserved_concurrent_executions"))
}

// Role returns a reference to field role of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("role"))
}

// Runtime returns a reference to field runtime of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Runtime() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("runtime"))
}

// SigningJobArn returns a reference to field signing_job_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) SigningJobArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("signing_job_arn"))
}

// SigningProfileVersionArn returns a reference to field signing_profile_version_arn of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) SigningProfileVersionArn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("signing_profile_version_arn"))
}

// SourceCodeHash returns a reference to field source_code_hash of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) SourceCodeHash() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("source_code_hash"))
}

// SourceCodeSize returns a reference to field source_code_size of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) SourceCodeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(lf.ref.Append("source_code_size"))
}

// Tags returns a reference to field tags of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](lf.ref.Append("tags"))
}

// Timeout returns a reference to field timeout of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Timeout() terra.NumberValue {
	return terra.ReferenceAsNumber(lf.ref.Append("timeout"))
}

// Version returns a reference to field version of aws_lambda_function.
func (lf dataLambdaFunctionAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("version"))
}

func (lf dataLambdaFunctionAttributes) DeadLetterConfig() terra.ListValue[datalambdafunction.DeadLetterConfigAttributes] {
	return terra.ReferenceAsList[datalambdafunction.DeadLetterConfigAttributes](lf.ref.Append("dead_letter_config"))
}

func (lf dataLambdaFunctionAttributes) Environment() terra.ListValue[datalambdafunction.EnvironmentAttributes] {
	return terra.ReferenceAsList[datalambdafunction.EnvironmentAttributes](lf.ref.Append("environment"))
}

func (lf dataLambdaFunctionAttributes) EphemeralStorage() terra.ListValue[datalambdafunction.EphemeralStorageAttributes] {
	return terra.ReferenceAsList[datalambdafunction.EphemeralStorageAttributes](lf.ref.Append("ephemeral_storage"))
}

func (lf dataLambdaFunctionAttributes) FileSystemConfig() terra.ListValue[datalambdafunction.FileSystemConfigAttributes] {
	return terra.ReferenceAsList[datalambdafunction.FileSystemConfigAttributes](lf.ref.Append("file_system_config"))
}

func (lf dataLambdaFunctionAttributes) TracingConfig() terra.ListValue[datalambdafunction.TracingConfigAttributes] {
	return terra.ReferenceAsList[datalambdafunction.TracingConfigAttributes](lf.ref.Append("tracing_config"))
}

func (lf dataLambdaFunctionAttributes) VpcConfig() terra.ListValue[datalambdafunction.VpcConfigAttributes] {
	return terra.ReferenceAsList[datalambdafunction.VpcConfigAttributes](lf.ref.Append("vpc_config"))
}
