// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datacecostcategory "github.com/golingon/terraproviders/aws/5.15.0/datacecostcategory"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataCeCostCategory creates a new instance of [DataCeCostCategory].
func NewDataCeCostCategory(name string, args DataCeCostCategoryArgs) *DataCeCostCategory {
	return &DataCeCostCategory{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCeCostCategory)(nil)

// DataCeCostCategory represents the Terraform data resource aws_ce_cost_category.
type DataCeCostCategory struct {
	Name string
	Args DataCeCostCategoryArgs
}

// DataSource returns the Terraform object type for [DataCeCostCategory].
func (ccc *DataCeCostCategory) DataSource() string {
	return "aws_ce_cost_category"
}

// LocalName returns the local name for [DataCeCostCategory].
func (ccc *DataCeCostCategory) LocalName() string {
	return ccc.Name
}

// Configuration returns the configuration (args) for [DataCeCostCategory].
func (ccc *DataCeCostCategory) Configuration() interface{} {
	return ccc.Args
}

// Attributes returns the attributes for [DataCeCostCategory].
func (ccc *DataCeCostCategory) Attributes() dataCeCostCategoryAttributes {
	return dataCeCostCategoryAttributes{ref: terra.ReferenceDataResource(ccc)}
}

// DataCeCostCategoryArgs contains the configurations for aws_ce_cost_category.
type DataCeCostCategoryArgs struct {
	// CostCategoryArn: string, required
	CostCategoryArn terra.StringValue `hcl:"cost_category_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Rule: min=0
	Rule []datacecostcategory.Rule `hcl:"rule,block" validate:"min=0"`
	// SplitChargeRule: min=0
	SplitChargeRule []datacecostcategory.SplitChargeRule `hcl:"split_charge_rule,block" validate:"min=0"`
}
type dataCeCostCategoryAttributes struct {
	ref terra.Reference
}

// CostCategoryArn returns a reference to field cost_category_arn of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) CostCategoryArn() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("cost_category_arn"))
}

// DefaultValue returns a reference to field default_value of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("default_value"))
}

// EffectiveEnd returns a reference to field effective_end of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) EffectiveEnd() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("effective_end"))
}

// EffectiveStart returns a reference to field effective_start of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) EffectiveStart() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("effective_start"))
}

// Id returns a reference to field id of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("id"))
}

// Name returns a reference to field name of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("name"))
}

// RuleVersion returns a reference to field rule_version of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) RuleVersion() terra.StringValue {
	return terra.ReferenceAsString(ccc.ref.Append("rule_version"))
}

// Tags returns a reference to field tags of aws_ce_cost_category.
func (ccc dataCeCostCategoryAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ccc.ref.Append("tags"))
}

func (ccc dataCeCostCategoryAttributes) Rule() terra.SetValue[datacecostcategory.RuleAttributes] {
	return terra.ReferenceAsSet[datacecostcategory.RuleAttributes](ccc.ref.Append("rule"))
}

func (ccc dataCeCostCategoryAttributes) SplitChargeRule() terra.SetValue[datacecostcategory.SplitChargeRuleAttributes] {
	return terra.ReferenceAsSet[datacecostcategory.SplitChargeRuleAttributes](ccc.ref.Append("split_charge_rule"))
}
