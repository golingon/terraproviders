// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datavpclatticeservice "github.com/golingon/terraproviders/aws/5.15.0/datavpclatticeservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataVpclatticeService creates a new instance of [DataVpclatticeService].
func NewDataVpclatticeService(name string, args DataVpclatticeServiceArgs) *DataVpclatticeService {
	return &DataVpclatticeService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVpclatticeService)(nil)

// DataVpclatticeService represents the Terraform data resource aws_vpclattice_service.
type DataVpclatticeService struct {
	Name string
	Args DataVpclatticeServiceArgs
}

// DataSource returns the Terraform object type for [DataVpclatticeService].
func (vs *DataVpclatticeService) DataSource() string {
	return "aws_vpclattice_service"
}

// LocalName returns the local name for [DataVpclatticeService].
func (vs *DataVpclatticeService) LocalName() string {
	return vs.Name
}

// Configuration returns the configuration (args) for [DataVpclatticeService].
func (vs *DataVpclatticeService) Configuration() interface{} {
	return vs.Args
}

// Attributes returns the attributes for [DataVpclatticeService].
func (vs *DataVpclatticeService) Attributes() dataVpclatticeServiceAttributes {
	return dataVpclatticeServiceAttributes{ref: terra.ReferenceDataResource(vs)}
}

// DataVpclatticeServiceArgs contains the configurations for aws_vpclattice_service.
type DataVpclatticeServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ServiceIdentifier: string, optional
	ServiceIdentifier terra.StringValue `hcl:"service_identifier,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// DnsEntry: min=0
	DnsEntry []datavpclatticeservice.DnsEntry `hcl:"dns_entry,block" validate:"min=0"`
}
type dataVpclatticeServiceAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("arn"))
}

// AuthType returns a reference to field auth_type of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) AuthType() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("auth_type"))
}

// CertificateArn returns a reference to field certificate_arn of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("certificate_arn"))
}

// CustomDomainName returns a reference to field custom_domain_name of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) CustomDomainName() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("custom_domain_name"))
}

// Id returns a reference to field id of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("id"))
}

// Name returns a reference to field name of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("name"))
}

// ServiceIdentifier returns a reference to field service_identifier of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) ServiceIdentifier() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("service_identifier"))
}

// Status returns a reference to field status of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_vpclattice_service.
func (vs dataVpclatticeServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vs.ref.Append("tags"))
}

func (vs dataVpclatticeServiceAttributes) DnsEntry() terra.ListValue[datavpclatticeservice.DnsEntryAttributes] {
	return terra.ReferenceAsList[datavpclatticeservice.DnsEntryAttributes](vs.ref.Append("dns_entry"))
}
