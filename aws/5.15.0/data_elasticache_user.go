// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataelasticacheuser "github.com/golingon/terraproviders/aws/5.15.0/dataelasticacheuser"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataElasticacheUser creates a new instance of [DataElasticacheUser].
func NewDataElasticacheUser(name string, args DataElasticacheUserArgs) *DataElasticacheUser {
	return &DataElasticacheUser{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataElasticacheUser)(nil)

// DataElasticacheUser represents the Terraform data resource aws_elasticache_user.
type DataElasticacheUser struct {
	Name string
	Args DataElasticacheUserArgs
}

// DataSource returns the Terraform object type for [DataElasticacheUser].
func (eu *DataElasticacheUser) DataSource() string {
	return "aws_elasticache_user"
}

// LocalName returns the local name for [DataElasticacheUser].
func (eu *DataElasticacheUser) LocalName() string {
	return eu.Name
}

// Configuration returns the configuration (args) for [DataElasticacheUser].
func (eu *DataElasticacheUser) Configuration() interface{} {
	return eu.Args
}

// Attributes returns the attributes for [DataElasticacheUser].
func (eu *DataElasticacheUser) Attributes() dataElasticacheUserAttributes {
	return dataElasticacheUserAttributes{ref: terra.ReferenceDataResource(eu)}
}

// DataElasticacheUserArgs contains the configurations for aws_elasticache_user.
type DataElasticacheUserArgs struct {
	// AccessString: string, optional
	AccessString terra.StringValue `hcl:"access_string,attr"`
	// Engine: string, optional
	Engine terra.StringValue `hcl:"engine,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NoPasswordRequired: bool, optional
	NoPasswordRequired terra.BoolValue `hcl:"no_password_required,attr"`
	// Passwords: set of string, optional
	Passwords terra.SetValue[terra.StringValue] `hcl:"passwords,attr"`
	// UserId: string, required
	UserId terra.StringValue `hcl:"user_id,attr" validate:"required"`
	// UserName: string, optional
	UserName terra.StringValue `hcl:"user_name,attr"`
	// AuthenticationMode: min=0
	AuthenticationMode []dataelasticacheuser.AuthenticationMode `hcl:"authentication_mode,block" validate:"min=0"`
}
type dataElasticacheUserAttributes struct {
	ref terra.Reference
}

// AccessString returns a reference to field access_string of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) AccessString() terra.StringValue {
	return terra.ReferenceAsString(eu.ref.Append("access_string"))
}

// Engine returns a reference to field engine of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) Engine() terra.StringValue {
	return terra.ReferenceAsString(eu.ref.Append("engine"))
}

// Id returns a reference to field id of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(eu.ref.Append("id"))
}

// NoPasswordRequired returns a reference to field no_password_required of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) NoPasswordRequired() terra.BoolValue {
	return terra.ReferenceAsBool(eu.ref.Append("no_password_required"))
}

// Passwords returns a reference to field passwords of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) Passwords() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](eu.ref.Append("passwords"))
}

// UserId returns a reference to field user_id of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(eu.ref.Append("user_id"))
}

// UserName returns a reference to field user_name of aws_elasticache_user.
func (eu dataElasticacheUserAttributes) UserName() terra.StringValue {
	return terra.ReferenceAsString(eu.ref.Append("user_name"))
}

func (eu dataElasticacheUserAttributes) AuthenticationMode() terra.ListValue[dataelasticacheuser.AuthenticationModeAttributes] {
	return terra.ReferenceAsList[dataelasticacheuser.AuthenticationModeAttributes](eu.ref.Append("authentication_mode"))
}
