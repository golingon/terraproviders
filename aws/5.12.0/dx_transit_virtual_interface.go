// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	dxtransitvirtualinterface "github.com/golingon/terraproviders/aws/5.12.0/dxtransitvirtualinterface"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDxTransitVirtualInterface creates a new instance of [DxTransitVirtualInterface].
func NewDxTransitVirtualInterface(name string, args DxTransitVirtualInterfaceArgs) *DxTransitVirtualInterface {
	return &DxTransitVirtualInterface{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DxTransitVirtualInterface)(nil)

// DxTransitVirtualInterface represents the Terraform resource aws_dx_transit_virtual_interface.
type DxTransitVirtualInterface struct {
	Name      string
	Args      DxTransitVirtualInterfaceArgs
	state     *dxTransitVirtualInterfaceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DxTransitVirtualInterface].
func (dtvi *DxTransitVirtualInterface) Type() string {
	return "aws_dx_transit_virtual_interface"
}

// LocalName returns the local name for [DxTransitVirtualInterface].
func (dtvi *DxTransitVirtualInterface) LocalName() string {
	return dtvi.Name
}

// Configuration returns the configuration (args) for [DxTransitVirtualInterface].
func (dtvi *DxTransitVirtualInterface) Configuration() interface{} {
	return dtvi.Args
}

// DependOn is used for other resources to depend on [DxTransitVirtualInterface].
func (dtvi *DxTransitVirtualInterface) DependOn() terra.Reference {
	return terra.ReferenceResource(dtvi)
}

// Dependencies returns the list of resources [DxTransitVirtualInterface] depends_on.
func (dtvi *DxTransitVirtualInterface) Dependencies() terra.Dependencies {
	return dtvi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DxTransitVirtualInterface].
func (dtvi *DxTransitVirtualInterface) LifecycleManagement() *terra.Lifecycle {
	return dtvi.Lifecycle
}

// Attributes returns the attributes for [DxTransitVirtualInterface].
func (dtvi *DxTransitVirtualInterface) Attributes() dxTransitVirtualInterfaceAttributes {
	return dxTransitVirtualInterfaceAttributes{ref: terra.ReferenceResource(dtvi)}
}

// ImportState imports the given attribute values into [DxTransitVirtualInterface]'s state.
func (dtvi *DxTransitVirtualInterface) ImportState(av io.Reader) error {
	dtvi.state = &dxTransitVirtualInterfaceState{}
	if err := json.NewDecoder(av).Decode(dtvi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dtvi.Type(), dtvi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DxTransitVirtualInterface] has state.
func (dtvi *DxTransitVirtualInterface) State() (*dxTransitVirtualInterfaceState, bool) {
	return dtvi.state, dtvi.state != nil
}

// StateMust returns the state for [DxTransitVirtualInterface]. Panics if the state is nil.
func (dtvi *DxTransitVirtualInterface) StateMust() *dxTransitVirtualInterfaceState {
	if dtvi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dtvi.Type(), dtvi.LocalName()))
	}
	return dtvi.state
}

// DxTransitVirtualInterfaceArgs contains the configurations for aws_dx_transit_virtual_interface.
type DxTransitVirtualInterfaceArgs struct {
	// AddressFamily: string, required
	AddressFamily terra.StringValue `hcl:"address_family,attr" validate:"required"`
	// AmazonAddress: string, optional
	AmazonAddress terra.StringValue `hcl:"amazon_address,attr"`
	// BgpAsn: number, required
	BgpAsn terra.NumberValue `hcl:"bgp_asn,attr" validate:"required"`
	// BgpAuthKey: string, optional
	BgpAuthKey terra.StringValue `hcl:"bgp_auth_key,attr"`
	// ConnectionId: string, required
	ConnectionId terra.StringValue `hcl:"connection_id,attr" validate:"required"`
	// CustomerAddress: string, optional
	CustomerAddress terra.StringValue `hcl:"customer_address,attr"`
	// DxGatewayId: string, required
	DxGatewayId terra.StringValue `hcl:"dx_gateway_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mtu: number, optional
	Mtu terra.NumberValue `hcl:"mtu,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SitelinkEnabled: bool, optional
	SitelinkEnabled terra.BoolValue `hcl:"sitelink_enabled,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Vlan: number, required
	Vlan terra.NumberValue `hcl:"vlan,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dxtransitvirtualinterface.Timeouts `hcl:"timeouts,block"`
}
type dxTransitVirtualInterfaceAttributes struct {
	ref terra.Reference
}

// AddressFamily returns a reference to field address_family of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) AddressFamily() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("address_family"))
}

// AmazonAddress returns a reference to field amazon_address of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) AmazonAddress() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("amazon_address"))
}

// AmazonSideAsn returns a reference to field amazon_side_asn of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) AmazonSideAsn() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("amazon_side_asn"))
}

// Arn returns a reference to field arn of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("arn"))
}

// AwsDevice returns a reference to field aws_device of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) AwsDevice() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("aws_device"))
}

// BgpAsn returns a reference to field bgp_asn of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) BgpAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(dtvi.ref.Append("bgp_asn"))
}

// BgpAuthKey returns a reference to field bgp_auth_key of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) BgpAuthKey() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("bgp_auth_key"))
}

// ConnectionId returns a reference to field connection_id of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) ConnectionId() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("connection_id"))
}

// CustomerAddress returns a reference to field customer_address of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) CustomerAddress() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("customer_address"))
}

// DxGatewayId returns a reference to field dx_gateway_id of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) DxGatewayId() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("dx_gateway_id"))
}

// Id returns a reference to field id of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("id"))
}

// JumboFrameCapable returns a reference to field jumbo_frame_capable of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) JumboFrameCapable() terra.BoolValue {
	return terra.ReferenceAsBool(dtvi.ref.Append("jumbo_frame_capable"))
}

// Mtu returns a reference to field mtu of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) Mtu() terra.NumberValue {
	return terra.ReferenceAsNumber(dtvi.ref.Append("mtu"))
}

// Name returns a reference to field name of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dtvi.ref.Append("name"))
}

// SitelinkEnabled returns a reference to field sitelink_enabled of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) SitelinkEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(dtvi.ref.Append("sitelink_enabled"))
}

// Tags returns a reference to field tags of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dtvi.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dtvi.ref.Append("tags_all"))
}

// Vlan returns a reference to field vlan of aws_dx_transit_virtual_interface.
func (dtvi dxTransitVirtualInterfaceAttributes) Vlan() terra.NumberValue {
	return terra.ReferenceAsNumber(dtvi.ref.Append("vlan"))
}

func (dtvi dxTransitVirtualInterfaceAttributes) Timeouts() dxtransitvirtualinterface.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dxtransitvirtualinterface.TimeoutsAttributes](dtvi.ref.Append("timeouts"))
}

type dxTransitVirtualInterfaceState struct {
	AddressFamily     string                                   `json:"address_family"`
	AmazonAddress     string                                   `json:"amazon_address"`
	AmazonSideAsn     string                                   `json:"amazon_side_asn"`
	Arn               string                                   `json:"arn"`
	AwsDevice         string                                   `json:"aws_device"`
	BgpAsn            float64                                  `json:"bgp_asn"`
	BgpAuthKey        string                                   `json:"bgp_auth_key"`
	ConnectionId      string                                   `json:"connection_id"`
	CustomerAddress   string                                   `json:"customer_address"`
	DxGatewayId       string                                   `json:"dx_gateway_id"`
	Id                string                                   `json:"id"`
	JumboFrameCapable bool                                     `json:"jumbo_frame_capable"`
	Mtu               float64                                  `json:"mtu"`
	Name              string                                   `json:"name"`
	SitelinkEnabled   bool                                     `json:"sitelink_enabled"`
	Tags              map[string]string                        `json:"tags"`
	TagsAll           map[string]string                        `json:"tags_all"`
	Vlan              float64                                  `json:"vlan"`
	Timeouts          *dxtransitvirtualinterface.TimeoutsState `json:"timeouts"`
}
