// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datasynclocationfsxontapfilesystem

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Protocol struct {
	// Nfs: optional
	Nfs *Nfs `hcl:"nfs,block"`
	// Smb: optional
	Smb *Smb `hcl:"smb,block"`
}

type Nfs struct {
	// NfsMountOptions: required
	MountOptions *NfsMountOptions `hcl:"mount_options,block" validate:"required"`
}

type NfsMountOptions struct {
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type Smb struct {
	// Domain: string, optional
	Domain terra.StringValue `hcl:"domain,attr"`
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// User: string, required
	User terra.StringValue `hcl:"user,attr" validate:"required"`
	// SmbMountOptions: required
	MountOptions *SmbMountOptions `hcl:"mount_options,block" validate:"required"`
}

type SmbMountOptions struct {
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type ProtocolAttributes struct {
	ref terra.Reference
}

func (p ProtocolAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p ProtocolAttributes) InternalWithRef(ref terra.Reference) ProtocolAttributes {
	return ProtocolAttributes{ref: ref}
}

func (p ProtocolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p ProtocolAttributes) Nfs() terra.ListValue[NfsAttributes] {
	return terra.ReferenceAsList[NfsAttributes](p.ref.Append("nfs"))
}

func (p ProtocolAttributes) Smb() terra.ListValue[SmbAttributes] {
	return terra.ReferenceAsList[SmbAttributes](p.ref.Append("smb"))
}

type NfsAttributes struct {
	ref terra.Reference
}

func (n NfsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n NfsAttributes) InternalWithRef(ref terra.Reference) NfsAttributes {
	return NfsAttributes{ref: ref}
}

func (n NfsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n NfsAttributes) MountOptions() terra.ListValue[NfsMountOptionsAttributes] {
	return terra.ReferenceAsList[NfsMountOptionsAttributes](n.ref.Append("mount_options"))
}

type NfsMountOptionsAttributes struct {
	ref terra.Reference
}

func (mo NfsMountOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo NfsMountOptionsAttributes) InternalWithRef(ref terra.Reference) NfsMountOptionsAttributes {
	return NfsMountOptionsAttributes{ref: ref}
}

func (mo NfsMountOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo NfsMountOptionsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("version"))
}

type SmbAttributes struct {
	ref terra.Reference
}

func (s SmbAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SmbAttributes) InternalWithRef(ref terra.Reference) SmbAttributes {
	return SmbAttributes{ref: ref}
}

func (s SmbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SmbAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("domain"))
}

func (s SmbAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("password"))
}

func (s SmbAttributes) User() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("user"))
}

func (s SmbAttributes) MountOptions() terra.ListValue[SmbMountOptionsAttributes] {
	return terra.ReferenceAsList[SmbMountOptionsAttributes](s.ref.Append("mount_options"))
}

type SmbMountOptionsAttributes struct {
	ref terra.Reference
}

func (mo SmbMountOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo SmbMountOptionsAttributes) InternalWithRef(ref terra.Reference) SmbMountOptionsAttributes {
	return SmbMountOptionsAttributes{ref: ref}
}

func (mo SmbMountOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo SmbMountOptionsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("version"))
}

type ProtocolState struct {
	Nfs []NfsState `json:"nfs"`
	Smb []SmbState `json:"smb"`
}

type NfsState struct {
	MountOptions []NfsMountOptionsState `json:"mount_options"`
}

type NfsMountOptionsState struct {
	Version string `json:"version"`
}

type SmbState struct {
	Domain       string                 `json:"domain"`
	Password     string                 `json:"password"`
	User         string                 `json:"user"`
	MountOptions []SmbMountOptionsState `json:"mount_options"`
}

type SmbMountOptionsState struct {
	Version string `json:"version"`
}
