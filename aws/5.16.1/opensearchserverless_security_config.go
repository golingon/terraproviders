// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	opensearchserverlesssecurityconfig "github.com/golingon/terraproviders/aws/5.16.1/opensearchserverlesssecurityconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewOpensearchserverlessSecurityConfig creates a new instance of [OpensearchserverlessSecurityConfig].
func NewOpensearchserverlessSecurityConfig(name string, args OpensearchserverlessSecurityConfigArgs) *OpensearchserverlessSecurityConfig {
	return &OpensearchserverlessSecurityConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OpensearchserverlessSecurityConfig)(nil)

// OpensearchserverlessSecurityConfig represents the Terraform resource aws_opensearchserverless_security_config.
type OpensearchserverlessSecurityConfig struct {
	Name      string
	Args      OpensearchserverlessSecurityConfigArgs
	state     *opensearchserverlessSecurityConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OpensearchserverlessSecurityConfig].
func (osc *OpensearchserverlessSecurityConfig) Type() string {
	return "aws_opensearchserverless_security_config"
}

// LocalName returns the local name for [OpensearchserverlessSecurityConfig].
func (osc *OpensearchserverlessSecurityConfig) LocalName() string {
	return osc.Name
}

// Configuration returns the configuration (args) for [OpensearchserverlessSecurityConfig].
func (osc *OpensearchserverlessSecurityConfig) Configuration() interface{} {
	return osc.Args
}

// DependOn is used for other resources to depend on [OpensearchserverlessSecurityConfig].
func (osc *OpensearchserverlessSecurityConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(osc)
}

// Dependencies returns the list of resources [OpensearchserverlessSecurityConfig] depends_on.
func (osc *OpensearchserverlessSecurityConfig) Dependencies() terra.Dependencies {
	return osc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OpensearchserverlessSecurityConfig].
func (osc *OpensearchserverlessSecurityConfig) LifecycleManagement() *terra.Lifecycle {
	return osc.Lifecycle
}

// Attributes returns the attributes for [OpensearchserverlessSecurityConfig].
func (osc *OpensearchserverlessSecurityConfig) Attributes() opensearchserverlessSecurityConfigAttributes {
	return opensearchserverlessSecurityConfigAttributes{ref: terra.ReferenceResource(osc)}
}

// ImportState imports the given attribute values into [OpensearchserverlessSecurityConfig]'s state.
func (osc *OpensearchserverlessSecurityConfig) ImportState(av io.Reader) error {
	osc.state = &opensearchserverlessSecurityConfigState{}
	if err := json.NewDecoder(av).Decode(osc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", osc.Type(), osc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OpensearchserverlessSecurityConfig] has state.
func (osc *OpensearchserverlessSecurityConfig) State() (*opensearchserverlessSecurityConfigState, bool) {
	return osc.state, osc.state != nil
}

// StateMust returns the state for [OpensearchserverlessSecurityConfig]. Panics if the state is nil.
func (osc *OpensearchserverlessSecurityConfig) StateMust() *opensearchserverlessSecurityConfigState {
	if osc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", osc.Type(), osc.LocalName()))
	}
	return osc.state
}

// OpensearchserverlessSecurityConfigArgs contains the configurations for aws_opensearchserverless_security_config.
type OpensearchserverlessSecurityConfigArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// SamlOptions: optional
	SamlOptions *opensearchserverlesssecurityconfig.SamlOptions `hcl:"saml_options,block"`
}
type opensearchserverlessSecurityConfigAttributes struct {
	ref terra.Reference
}

// ConfigVersion returns a reference to field config_version of aws_opensearchserverless_security_config.
func (osc opensearchserverlessSecurityConfigAttributes) ConfigVersion() terra.StringValue {
	return terra.ReferenceAsString(osc.ref.Append("config_version"))
}

// Description returns a reference to field description of aws_opensearchserverless_security_config.
func (osc opensearchserverlessSecurityConfigAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(osc.ref.Append("description"))
}

// Id returns a reference to field id of aws_opensearchserverless_security_config.
func (osc opensearchserverlessSecurityConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(osc.ref.Append("id"))
}

// Name returns a reference to field name of aws_opensearchserverless_security_config.
func (osc opensearchserverlessSecurityConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(osc.ref.Append("name"))
}

// Type returns a reference to field type of aws_opensearchserverless_security_config.
func (osc opensearchserverlessSecurityConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(osc.ref.Append("type"))
}

func (osc opensearchserverlessSecurityConfigAttributes) SamlOptions() opensearchserverlesssecurityconfig.SamlOptionsAttributes {
	return terra.ReferenceAsSingle[opensearchserverlesssecurityconfig.SamlOptionsAttributes](osc.ref.Append("saml_options"))
}

type opensearchserverlessSecurityConfigState struct {
	ConfigVersion string                                               `json:"config_version"`
	Description   string                                               `json:"description"`
	Id            string                                               `json:"id"`
	Name          string                                               `json:"name"`
	Type          string                                               `json:"type"`
	SamlOptions   *opensearchserverlesssecurityconfig.SamlOptionsState `json:"saml_options"`
}
