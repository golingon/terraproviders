// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	inspector2delegatedadminaccount "github.com/golingon/terraproviders/aws/5.16.1/inspector2delegatedadminaccount"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewInspector2DelegatedAdminAccount creates a new instance of [Inspector2DelegatedAdminAccount].
func NewInspector2DelegatedAdminAccount(name string, args Inspector2DelegatedAdminAccountArgs) *Inspector2DelegatedAdminAccount {
	return &Inspector2DelegatedAdminAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Inspector2DelegatedAdminAccount)(nil)

// Inspector2DelegatedAdminAccount represents the Terraform resource aws_inspector2_delegated_admin_account.
type Inspector2DelegatedAdminAccount struct {
	Name      string
	Args      Inspector2DelegatedAdminAccountArgs
	state     *inspector2DelegatedAdminAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Inspector2DelegatedAdminAccount].
func (idaa *Inspector2DelegatedAdminAccount) Type() string {
	return "aws_inspector2_delegated_admin_account"
}

// LocalName returns the local name for [Inspector2DelegatedAdminAccount].
func (idaa *Inspector2DelegatedAdminAccount) LocalName() string {
	return idaa.Name
}

// Configuration returns the configuration (args) for [Inspector2DelegatedAdminAccount].
func (idaa *Inspector2DelegatedAdminAccount) Configuration() interface{} {
	return idaa.Args
}

// DependOn is used for other resources to depend on [Inspector2DelegatedAdminAccount].
func (idaa *Inspector2DelegatedAdminAccount) DependOn() terra.Reference {
	return terra.ReferenceResource(idaa)
}

// Dependencies returns the list of resources [Inspector2DelegatedAdminAccount] depends_on.
func (idaa *Inspector2DelegatedAdminAccount) Dependencies() terra.Dependencies {
	return idaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Inspector2DelegatedAdminAccount].
func (idaa *Inspector2DelegatedAdminAccount) LifecycleManagement() *terra.Lifecycle {
	return idaa.Lifecycle
}

// Attributes returns the attributes for [Inspector2DelegatedAdminAccount].
func (idaa *Inspector2DelegatedAdminAccount) Attributes() inspector2DelegatedAdminAccountAttributes {
	return inspector2DelegatedAdminAccountAttributes{ref: terra.ReferenceResource(idaa)}
}

// ImportState imports the given attribute values into [Inspector2DelegatedAdminAccount]'s state.
func (idaa *Inspector2DelegatedAdminAccount) ImportState(av io.Reader) error {
	idaa.state = &inspector2DelegatedAdminAccountState{}
	if err := json.NewDecoder(av).Decode(idaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", idaa.Type(), idaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Inspector2DelegatedAdminAccount] has state.
func (idaa *Inspector2DelegatedAdminAccount) State() (*inspector2DelegatedAdminAccountState, bool) {
	return idaa.state, idaa.state != nil
}

// StateMust returns the state for [Inspector2DelegatedAdminAccount]. Panics if the state is nil.
func (idaa *Inspector2DelegatedAdminAccount) StateMust() *inspector2DelegatedAdminAccountState {
	if idaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", idaa.Type(), idaa.LocalName()))
	}
	return idaa.state
}

// Inspector2DelegatedAdminAccountArgs contains the configurations for aws_inspector2_delegated_admin_account.
type Inspector2DelegatedAdminAccountArgs struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *inspector2delegatedadminaccount.Timeouts `hcl:"timeouts,block"`
}
type inspector2DelegatedAdminAccountAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_inspector2_delegated_admin_account.
func (idaa inspector2DelegatedAdminAccountAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(idaa.ref.Append("account_id"))
}

// Id returns a reference to field id of aws_inspector2_delegated_admin_account.
func (idaa inspector2DelegatedAdminAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(idaa.ref.Append("id"))
}

// RelationshipStatus returns a reference to field relationship_status of aws_inspector2_delegated_admin_account.
func (idaa inspector2DelegatedAdminAccountAttributes) RelationshipStatus() terra.StringValue {
	return terra.ReferenceAsString(idaa.ref.Append("relationship_status"))
}

func (idaa inspector2DelegatedAdminAccountAttributes) Timeouts() inspector2delegatedadminaccount.TimeoutsAttributes {
	return terra.ReferenceAsSingle[inspector2delegatedadminaccount.TimeoutsAttributes](idaa.ref.Append("timeouts"))
}

type inspector2DelegatedAdminAccountState struct {
	AccountId          string                                         `json:"account_id"`
	Id                 string                                         `json:"id"`
	RelationshipStatus string                                         `json:"relationship_status"`
	Timeouts           *inspector2delegatedadminaccount.TimeoutsState `json:"timeouts"`
}
