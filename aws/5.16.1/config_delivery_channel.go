// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	configdeliverychannel "github.com/golingon/terraproviders/aws/5.16.1/configdeliverychannel"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewConfigDeliveryChannel creates a new instance of [ConfigDeliveryChannel].
func NewConfigDeliveryChannel(name string, args ConfigDeliveryChannelArgs) *ConfigDeliveryChannel {
	return &ConfigDeliveryChannel{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ConfigDeliveryChannel)(nil)

// ConfigDeliveryChannel represents the Terraform resource aws_config_delivery_channel.
type ConfigDeliveryChannel struct {
	Name      string
	Args      ConfigDeliveryChannelArgs
	state     *configDeliveryChannelState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ConfigDeliveryChannel].
func (cdc *ConfigDeliveryChannel) Type() string {
	return "aws_config_delivery_channel"
}

// LocalName returns the local name for [ConfigDeliveryChannel].
func (cdc *ConfigDeliveryChannel) LocalName() string {
	return cdc.Name
}

// Configuration returns the configuration (args) for [ConfigDeliveryChannel].
func (cdc *ConfigDeliveryChannel) Configuration() interface{} {
	return cdc.Args
}

// DependOn is used for other resources to depend on [ConfigDeliveryChannel].
func (cdc *ConfigDeliveryChannel) DependOn() terra.Reference {
	return terra.ReferenceResource(cdc)
}

// Dependencies returns the list of resources [ConfigDeliveryChannel] depends_on.
func (cdc *ConfigDeliveryChannel) Dependencies() terra.Dependencies {
	return cdc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ConfigDeliveryChannel].
func (cdc *ConfigDeliveryChannel) LifecycleManagement() *terra.Lifecycle {
	return cdc.Lifecycle
}

// Attributes returns the attributes for [ConfigDeliveryChannel].
func (cdc *ConfigDeliveryChannel) Attributes() configDeliveryChannelAttributes {
	return configDeliveryChannelAttributes{ref: terra.ReferenceResource(cdc)}
}

// ImportState imports the given attribute values into [ConfigDeliveryChannel]'s state.
func (cdc *ConfigDeliveryChannel) ImportState(av io.Reader) error {
	cdc.state = &configDeliveryChannelState{}
	if err := json.NewDecoder(av).Decode(cdc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cdc.Type(), cdc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ConfigDeliveryChannel] has state.
func (cdc *ConfigDeliveryChannel) State() (*configDeliveryChannelState, bool) {
	return cdc.state, cdc.state != nil
}

// StateMust returns the state for [ConfigDeliveryChannel]. Panics if the state is nil.
func (cdc *ConfigDeliveryChannel) StateMust() *configDeliveryChannelState {
	if cdc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cdc.Type(), cdc.LocalName()))
	}
	return cdc.state
}

// ConfigDeliveryChannelArgs contains the configurations for aws_config_delivery_channel.
type ConfigDeliveryChannelArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// S3BucketName: string, required
	S3BucketName terra.StringValue `hcl:"s3_bucket_name,attr" validate:"required"`
	// S3KeyPrefix: string, optional
	S3KeyPrefix terra.StringValue `hcl:"s3_key_prefix,attr"`
	// S3KmsKeyArn: string, optional
	S3KmsKeyArn terra.StringValue `hcl:"s3_kms_key_arn,attr"`
	// SnsTopicArn: string, optional
	SnsTopicArn terra.StringValue `hcl:"sns_topic_arn,attr"`
	// SnapshotDeliveryProperties: optional
	SnapshotDeliveryProperties *configdeliverychannel.SnapshotDeliveryProperties `hcl:"snapshot_delivery_properties,block"`
}
type configDeliveryChannelAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_config_delivery_channel.
func (cdc configDeliveryChannelAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("id"))
}

// Name returns a reference to field name of aws_config_delivery_channel.
func (cdc configDeliveryChannelAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("name"))
}

// S3BucketName returns a reference to field s3_bucket_name of aws_config_delivery_channel.
func (cdc configDeliveryChannelAttributes) S3BucketName() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("s3_bucket_name"))
}

// S3KeyPrefix returns a reference to field s3_key_prefix of aws_config_delivery_channel.
func (cdc configDeliveryChannelAttributes) S3KeyPrefix() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("s3_key_prefix"))
}

// S3KmsKeyArn returns a reference to field s3_kms_key_arn of aws_config_delivery_channel.
func (cdc configDeliveryChannelAttributes) S3KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("s3_kms_key_arn"))
}

// SnsTopicArn returns a reference to field sns_topic_arn of aws_config_delivery_channel.
func (cdc configDeliveryChannelAttributes) SnsTopicArn() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("sns_topic_arn"))
}

func (cdc configDeliveryChannelAttributes) SnapshotDeliveryProperties() terra.ListValue[configdeliverychannel.SnapshotDeliveryPropertiesAttributes] {
	return terra.ReferenceAsList[configdeliverychannel.SnapshotDeliveryPropertiesAttributes](cdc.ref.Append("snapshot_delivery_properties"))
}

type configDeliveryChannelState struct {
	Id                         string                                                  `json:"id"`
	Name                       string                                                  `json:"name"`
	S3BucketName               string                                                  `json:"s3_bucket_name"`
	S3KeyPrefix                string                                                  `json:"s3_key_prefix"`
	S3KmsKeyArn                string                                                  `json:"s3_kms_key_arn"`
	SnsTopicArn                string                                                  `json:"sns_topic_arn"`
	SnapshotDeliveryProperties []configdeliverychannel.SnapshotDeliveryPropertiesState `json:"snapshot_delivery_properties"`
}
