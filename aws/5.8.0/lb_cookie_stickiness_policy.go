// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewLbCookieStickinessPolicy creates a new instance of [LbCookieStickinessPolicy].
func NewLbCookieStickinessPolicy(name string, args LbCookieStickinessPolicyArgs) *LbCookieStickinessPolicy {
	return &LbCookieStickinessPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LbCookieStickinessPolicy)(nil)

// LbCookieStickinessPolicy represents the Terraform resource aws_lb_cookie_stickiness_policy.
type LbCookieStickinessPolicy struct {
	Name      string
	Args      LbCookieStickinessPolicyArgs
	state     *lbCookieStickinessPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LbCookieStickinessPolicy].
func (lcsp *LbCookieStickinessPolicy) Type() string {
	return "aws_lb_cookie_stickiness_policy"
}

// LocalName returns the local name for [LbCookieStickinessPolicy].
func (lcsp *LbCookieStickinessPolicy) LocalName() string {
	return lcsp.Name
}

// Configuration returns the configuration (args) for [LbCookieStickinessPolicy].
func (lcsp *LbCookieStickinessPolicy) Configuration() interface{} {
	return lcsp.Args
}

// DependOn is used for other resources to depend on [LbCookieStickinessPolicy].
func (lcsp *LbCookieStickinessPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(lcsp)
}

// Dependencies returns the list of resources [LbCookieStickinessPolicy] depends_on.
func (lcsp *LbCookieStickinessPolicy) Dependencies() terra.Dependencies {
	return lcsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LbCookieStickinessPolicy].
func (lcsp *LbCookieStickinessPolicy) LifecycleManagement() *terra.Lifecycle {
	return lcsp.Lifecycle
}

// Attributes returns the attributes for [LbCookieStickinessPolicy].
func (lcsp *LbCookieStickinessPolicy) Attributes() lbCookieStickinessPolicyAttributes {
	return lbCookieStickinessPolicyAttributes{ref: terra.ReferenceResource(lcsp)}
}

// ImportState imports the given attribute values into [LbCookieStickinessPolicy]'s state.
func (lcsp *LbCookieStickinessPolicy) ImportState(av io.Reader) error {
	lcsp.state = &lbCookieStickinessPolicyState{}
	if err := json.NewDecoder(av).Decode(lcsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lcsp.Type(), lcsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LbCookieStickinessPolicy] has state.
func (lcsp *LbCookieStickinessPolicy) State() (*lbCookieStickinessPolicyState, bool) {
	return lcsp.state, lcsp.state != nil
}

// StateMust returns the state for [LbCookieStickinessPolicy]. Panics if the state is nil.
func (lcsp *LbCookieStickinessPolicy) StateMust() *lbCookieStickinessPolicyState {
	if lcsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lcsp.Type(), lcsp.LocalName()))
	}
	return lcsp.state
}

// LbCookieStickinessPolicyArgs contains the configurations for aws_lb_cookie_stickiness_policy.
type LbCookieStickinessPolicyArgs struct {
	// CookieExpirationPeriod: number, optional
	CookieExpirationPeriod terra.NumberValue `hcl:"cookie_expiration_period,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LbPort: number, required
	LbPort terra.NumberValue `hcl:"lb_port,attr" validate:"required"`
	// LoadBalancer: string, required
	LoadBalancer terra.StringValue `hcl:"load_balancer,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}
type lbCookieStickinessPolicyAttributes struct {
	ref terra.Reference
}

// CookieExpirationPeriod returns a reference to field cookie_expiration_period of aws_lb_cookie_stickiness_policy.
func (lcsp lbCookieStickinessPolicyAttributes) CookieExpirationPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(lcsp.ref.Append("cookie_expiration_period"))
}

// Id returns a reference to field id of aws_lb_cookie_stickiness_policy.
func (lcsp lbCookieStickinessPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lcsp.ref.Append("id"))
}

// LbPort returns a reference to field lb_port of aws_lb_cookie_stickiness_policy.
func (lcsp lbCookieStickinessPolicyAttributes) LbPort() terra.NumberValue {
	return terra.ReferenceAsNumber(lcsp.ref.Append("lb_port"))
}

// LoadBalancer returns a reference to field load_balancer of aws_lb_cookie_stickiness_policy.
func (lcsp lbCookieStickinessPolicyAttributes) LoadBalancer() terra.StringValue {
	return terra.ReferenceAsString(lcsp.ref.Append("load_balancer"))
}

// Name returns a reference to field name of aws_lb_cookie_stickiness_policy.
func (lcsp lbCookieStickinessPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lcsp.ref.Append("name"))
}

type lbCookieStickinessPolicyState struct {
	CookieExpirationPeriod float64 `json:"cookie_expiration_period"`
	Id                     string  `json:"id"`
	LbPort                 float64 `json:"lb_port"`
	LoadBalancer           string  `json:"load_balancer"`
	Name                   string  `json:"name"`
}
