// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	lightsaildistribution "github.com/golingon/terraproviders/aws/5.8.0/lightsaildistribution"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewLightsailDistribution creates a new instance of [LightsailDistribution].
func NewLightsailDistribution(name string, args LightsailDistributionArgs) *LightsailDistribution {
	return &LightsailDistribution{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailDistribution)(nil)

// LightsailDistribution represents the Terraform resource aws_lightsail_distribution.
type LightsailDistribution struct {
	Name      string
	Args      LightsailDistributionArgs
	state     *lightsailDistributionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LightsailDistribution].
func (ld *LightsailDistribution) Type() string {
	return "aws_lightsail_distribution"
}

// LocalName returns the local name for [LightsailDistribution].
func (ld *LightsailDistribution) LocalName() string {
	return ld.Name
}

// Configuration returns the configuration (args) for [LightsailDistribution].
func (ld *LightsailDistribution) Configuration() interface{} {
	return ld.Args
}

// DependOn is used for other resources to depend on [LightsailDistribution].
func (ld *LightsailDistribution) DependOn() terra.Reference {
	return terra.ReferenceResource(ld)
}

// Dependencies returns the list of resources [LightsailDistribution] depends_on.
func (ld *LightsailDistribution) Dependencies() terra.Dependencies {
	return ld.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LightsailDistribution].
func (ld *LightsailDistribution) LifecycleManagement() *terra.Lifecycle {
	return ld.Lifecycle
}

// Attributes returns the attributes for [LightsailDistribution].
func (ld *LightsailDistribution) Attributes() lightsailDistributionAttributes {
	return lightsailDistributionAttributes{ref: terra.ReferenceResource(ld)}
}

// ImportState imports the given attribute values into [LightsailDistribution]'s state.
func (ld *LightsailDistribution) ImportState(av io.Reader) error {
	ld.state = &lightsailDistributionState{}
	if err := json.NewDecoder(av).Decode(ld.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ld.Type(), ld.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LightsailDistribution] has state.
func (ld *LightsailDistribution) State() (*lightsailDistributionState, bool) {
	return ld.state, ld.state != nil
}

// StateMust returns the state for [LightsailDistribution]. Panics if the state is nil.
func (ld *LightsailDistribution) StateMust() *lightsailDistributionState {
	if ld.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ld.Type(), ld.LocalName()))
	}
	return ld.state
}

// LightsailDistributionArgs contains the configurations for aws_lightsail_distribution.
type LightsailDistributionArgs struct {
	// BundleId: string, required
	BundleId terra.StringValue `hcl:"bundle_id,attr" validate:"required"`
	// CertificateName: string, optional
	CertificateName terra.StringValue `hcl:"certificate_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpAddressType: string, optional
	IpAddressType terra.StringValue `hcl:"ip_address_type,attr"`
	// IsEnabled: bool, optional
	IsEnabled terra.BoolValue `hcl:"is_enabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Location: min=0
	Location []lightsaildistribution.Location `hcl:"location,block" validate:"min=0"`
	// CacheBehavior: min=0
	CacheBehavior []lightsaildistribution.CacheBehavior `hcl:"cache_behavior,block" validate:"min=0"`
	// CacheBehaviorSettings: optional
	CacheBehaviorSettings *lightsaildistribution.CacheBehaviorSettings `hcl:"cache_behavior_settings,block"`
	// DefaultCacheBehavior: required
	DefaultCacheBehavior *lightsaildistribution.DefaultCacheBehavior `hcl:"default_cache_behavior,block" validate:"required"`
	// Origin: required
	Origin *lightsaildistribution.Origin `hcl:"origin,block" validate:"required"`
	// Timeouts: optional
	Timeouts *lightsaildistribution.Timeouts `hcl:"timeouts,block"`
}
type lightsailDistributionAttributes struct {
	ref terra.Reference
}

// AlternativeDomainNames returns a reference to field alternative_domain_names of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) AlternativeDomainNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ld.ref.Append("alternative_domain_names"))
}

// Arn returns a reference to field arn of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("arn"))
}

// BundleId returns a reference to field bundle_id of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) BundleId() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("bundle_id"))
}

// CertificateName returns a reference to field certificate_name of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) CertificateName() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("certificate_name"))
}

// CreatedAt returns a reference to field created_at of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("created_at"))
}

// DomainName returns a reference to field domain_name of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("domain_name"))
}

// Id returns a reference to field id of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("id"))
}

// IpAddressType returns a reference to field ip_address_type of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) IpAddressType() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("ip_address_type"))
}

// IsEnabled returns a reference to field is_enabled of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) IsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ld.ref.Append("is_enabled"))
}

// Name returns a reference to field name of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("name"))
}

// OriginPublicDns returns a reference to field origin_public_dns of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) OriginPublicDns() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("origin_public_dns"))
}

// ResourceType returns a reference to field resource_type of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("resource_type"))
}

// Status returns a reference to field status of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("status"))
}

// SupportCode returns a reference to field support_code of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) SupportCode() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("support_code"))
}

// Tags returns a reference to field tags of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ld.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_lightsail_distribution.
func (ld lightsailDistributionAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ld.ref.Append("tags_all"))
}

func (ld lightsailDistributionAttributes) Location() terra.ListValue[lightsaildistribution.LocationAttributes] {
	return terra.ReferenceAsList[lightsaildistribution.LocationAttributes](ld.ref.Append("location"))
}

func (ld lightsailDistributionAttributes) CacheBehavior() terra.SetValue[lightsaildistribution.CacheBehaviorAttributes] {
	return terra.ReferenceAsSet[lightsaildistribution.CacheBehaviorAttributes](ld.ref.Append("cache_behavior"))
}

func (ld lightsailDistributionAttributes) CacheBehaviorSettings() terra.ListValue[lightsaildistribution.CacheBehaviorSettingsAttributes] {
	return terra.ReferenceAsList[lightsaildistribution.CacheBehaviorSettingsAttributes](ld.ref.Append("cache_behavior_settings"))
}

func (ld lightsailDistributionAttributes) DefaultCacheBehavior() terra.ListValue[lightsaildistribution.DefaultCacheBehaviorAttributes] {
	return terra.ReferenceAsList[lightsaildistribution.DefaultCacheBehaviorAttributes](ld.ref.Append("default_cache_behavior"))
}

func (ld lightsailDistributionAttributes) Origin() terra.ListValue[lightsaildistribution.OriginAttributes] {
	return terra.ReferenceAsList[lightsaildistribution.OriginAttributes](ld.ref.Append("origin"))
}

func (ld lightsailDistributionAttributes) Timeouts() lightsaildistribution.TimeoutsAttributes {
	return terra.ReferenceAsSingle[lightsaildistribution.TimeoutsAttributes](ld.ref.Append("timeouts"))
}

type lightsailDistributionState struct {
	AlternativeDomainNames []string                                           `json:"alternative_domain_names"`
	Arn                    string                                             `json:"arn"`
	BundleId               string                                             `json:"bundle_id"`
	CertificateName        string                                             `json:"certificate_name"`
	CreatedAt              string                                             `json:"created_at"`
	DomainName             string                                             `json:"domain_name"`
	Id                     string                                             `json:"id"`
	IpAddressType          string                                             `json:"ip_address_type"`
	IsEnabled              bool                                               `json:"is_enabled"`
	Name                   string                                             `json:"name"`
	OriginPublicDns        string                                             `json:"origin_public_dns"`
	ResourceType           string                                             `json:"resource_type"`
	Status                 string                                             `json:"status"`
	SupportCode            string                                             `json:"support_code"`
	Tags                   map[string]string                                  `json:"tags"`
	TagsAll                map[string]string                                  `json:"tags_all"`
	Location               []lightsaildistribution.LocationState              `json:"location"`
	CacheBehavior          []lightsaildistribution.CacheBehaviorState         `json:"cache_behavior"`
	CacheBehaviorSettings  []lightsaildistribution.CacheBehaviorSettingsState `json:"cache_behavior_settings"`
	DefaultCacheBehavior   []lightsaildistribution.DefaultCacheBehaviorState  `json:"default_cache_behavior"`
	Origin                 []lightsaildistribution.OriginState                `json:"origin"`
	Timeouts               *lightsaildistribution.TimeoutsState               `json:"timeouts"`
}
