// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewServicequotasTemplate creates a new instance of [ServicequotasTemplate].
func NewServicequotasTemplate(name string, args ServicequotasTemplateArgs) *ServicequotasTemplate {
	return &ServicequotasTemplate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServicequotasTemplate)(nil)

// ServicequotasTemplate represents the Terraform resource aws_servicequotas_template.
type ServicequotasTemplate struct {
	Name      string
	Args      ServicequotasTemplateArgs
	state     *servicequotasTemplateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ServicequotasTemplate].
func (st *ServicequotasTemplate) Type() string {
	return "aws_servicequotas_template"
}

// LocalName returns the local name for [ServicequotasTemplate].
func (st *ServicequotasTemplate) LocalName() string {
	return st.Name
}

// Configuration returns the configuration (args) for [ServicequotasTemplate].
func (st *ServicequotasTemplate) Configuration() interface{} {
	return st.Args
}

// DependOn is used for other resources to depend on [ServicequotasTemplate].
func (st *ServicequotasTemplate) DependOn() terra.Reference {
	return terra.ReferenceResource(st)
}

// Dependencies returns the list of resources [ServicequotasTemplate] depends_on.
func (st *ServicequotasTemplate) Dependencies() terra.Dependencies {
	return st.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ServicequotasTemplate].
func (st *ServicequotasTemplate) LifecycleManagement() *terra.Lifecycle {
	return st.Lifecycle
}

// Attributes returns the attributes for [ServicequotasTemplate].
func (st *ServicequotasTemplate) Attributes() servicequotasTemplateAttributes {
	return servicequotasTemplateAttributes{ref: terra.ReferenceResource(st)}
}

// ImportState imports the given attribute values into [ServicequotasTemplate]'s state.
func (st *ServicequotasTemplate) ImportState(av io.Reader) error {
	st.state = &servicequotasTemplateState{}
	if err := json.NewDecoder(av).Decode(st.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", st.Type(), st.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ServicequotasTemplate] has state.
func (st *ServicequotasTemplate) State() (*servicequotasTemplateState, bool) {
	return st.state, st.state != nil
}

// StateMust returns the state for [ServicequotasTemplate]. Panics if the state is nil.
func (st *ServicequotasTemplate) StateMust() *servicequotasTemplateState {
	if st.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", st.Type(), st.LocalName()))
	}
	return st.state
}

// ServicequotasTemplateArgs contains the configurations for aws_servicequotas_template.
type ServicequotasTemplateArgs struct {
	// QuotaCode: string, required
	QuotaCode terra.StringValue `hcl:"quota_code,attr" validate:"required"`
	// Region: string, required
	Region terra.StringValue `hcl:"region,attr" validate:"required"`
	// ServiceCode: string, required
	ServiceCode terra.StringValue `hcl:"service_code,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}
type servicequotasTemplateAttributes struct {
	ref terra.Reference
}

// GlobalQuota returns a reference to field global_quota of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) GlobalQuota() terra.BoolValue {
	return terra.ReferenceAsBool(st.ref.Append("global_quota"))
}

// Id returns a reference to field id of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("id"))
}

// QuotaCode returns a reference to field quota_code of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) QuotaCode() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("quota_code"))
}

// QuotaName returns a reference to field quota_name of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) QuotaName() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("quota_name"))
}

// Region returns a reference to field region of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("region"))
}

// ServiceCode returns a reference to field service_code of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) ServiceCode() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("service_code"))
}

// ServiceName returns a reference to field service_name of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("service_name"))
}

// Unit returns a reference to field unit of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("unit"))
}

// Value returns a reference to field value of aws_servicequotas_template.
func (st servicequotasTemplateAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(st.ref.Append("value"))
}

type servicequotasTemplateState struct {
	GlobalQuota bool    `json:"global_quota"`
	Id          string  `json:"id"`
	QuotaCode   string  `json:"quota_code"`
	QuotaName   string  `json:"quota_name"`
	Region      string  `json:"region"`
	ServiceCode string  `json:"service_code"`
	ServiceName string  `json:"service_name"`
	Unit        string  `json:"unit"`
	Value       float64 `json:"value"`
}
