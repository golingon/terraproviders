// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package auditmanagerassessment

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Roles struct {
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// RoleType: string, optional
	RoleType terra.StringValue `hcl:"role_type,attr"`
}

type RolesAll struct{}

type AssessmentReportsDestination struct {
	// Destination: string, required
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// DestinationType: string, required
	DestinationType terra.StringValue `hcl:"destination_type,attr" validate:"required"`
}

type Scope struct {
	// AwsAccounts: min=0
	AwsAccounts []AwsAccounts `hcl:"aws_accounts,block" validate:"min=0"`
	// AwsServices: min=0
	AwsServices []AwsServices `hcl:"aws_services,block" validate:"min=0"`
}

type AwsAccounts struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
}

type AwsServices struct {
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
}

type RolesAttributes struct {
	ref terra.Reference
}

func (r RolesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RolesAttributes) InternalWithRef(ref terra.Reference) RolesAttributes {
	return RolesAttributes{ref: ref}
}

func (r RolesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RolesAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("role_arn"))
}

func (r RolesAttributes) RoleType() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("role_type"))
}

type RolesAllAttributes struct {
	ref terra.Reference
}

func (ra RolesAllAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra RolesAllAttributes) InternalWithRef(ref terra.Reference) RolesAllAttributes {
	return RolesAllAttributes{ref: ref}
}

func (ra RolesAllAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra RolesAllAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("role_arn"))
}

func (ra RolesAllAttributes) RoleType() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("role_type"))
}

type AssessmentReportsDestinationAttributes struct {
	ref terra.Reference
}

func (ard AssessmentReportsDestinationAttributes) InternalRef() (terra.Reference, error) {
	return ard.ref, nil
}

func (ard AssessmentReportsDestinationAttributes) InternalWithRef(ref terra.Reference) AssessmentReportsDestinationAttributes {
	return AssessmentReportsDestinationAttributes{ref: ref}
}

func (ard AssessmentReportsDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ard.ref.InternalTokens()
}

func (ard AssessmentReportsDestinationAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("destination"))
}

func (ard AssessmentReportsDestinationAttributes) DestinationType() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("destination_type"))
}

type ScopeAttributes struct {
	ref terra.Reference
}

func (s ScopeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ScopeAttributes) InternalWithRef(ref terra.Reference) ScopeAttributes {
	return ScopeAttributes{ref: ref}
}

func (s ScopeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ScopeAttributes) AwsAccounts() terra.SetValue[AwsAccountsAttributes] {
	return terra.ReferenceAsSet[AwsAccountsAttributes](s.ref.Append("aws_accounts"))
}

func (s ScopeAttributes) AwsServices() terra.SetValue[AwsServicesAttributes] {
	return terra.ReferenceAsSet[AwsServicesAttributes](s.ref.Append("aws_services"))
}

type AwsAccountsAttributes struct {
	ref terra.Reference
}

func (aa AwsAccountsAttributes) InternalRef() (terra.Reference, error) {
	return aa.ref, nil
}

func (aa AwsAccountsAttributes) InternalWithRef(ref terra.Reference) AwsAccountsAttributes {
	return AwsAccountsAttributes{ref: ref}
}

func (aa AwsAccountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aa.ref.InternalTokens()
}

func (aa AwsAccountsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aa.ref.Append("id"))
}

type AwsServicesAttributes struct {
	ref terra.Reference
}

func (as AwsServicesAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as AwsServicesAttributes) InternalWithRef(ref terra.Reference) AwsServicesAttributes {
	return AwsServicesAttributes{ref: ref}
}

func (as AwsServicesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as AwsServicesAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("service_name"))
}

type RolesState struct {
	RoleArn  string `json:"role_arn"`
	RoleType string `json:"role_type"`
}

type RolesAllState struct {
	RoleArn  string `json:"role_arn"`
	RoleType string `json:"role_type"`
}

type AssessmentReportsDestinationState struct {
	Destination     string `json:"destination"`
	DestinationType string `json:"destination_type"`
}

type ScopeState struct {
	AwsAccounts []AwsAccountsState `json:"aws_accounts"`
	AwsServices []AwsServicesState `json:"aws_services"`
}

type AwsAccountsState struct {
	Id string `json:"id"`
}

type AwsServicesState struct {
	ServiceName string `json:"service_name"`
}
