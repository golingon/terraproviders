// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	guarddutydetectorfeature "github.com/golingon/terraproviders/aws/5.22.0/guarddutydetectorfeature"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewGuarddutyDetectorFeature creates a new instance of [GuarddutyDetectorFeature].
func NewGuarddutyDetectorFeature(name string, args GuarddutyDetectorFeatureArgs) *GuarddutyDetectorFeature {
	return &GuarddutyDetectorFeature{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GuarddutyDetectorFeature)(nil)

// GuarddutyDetectorFeature represents the Terraform resource aws_guardduty_detector_feature.
type GuarddutyDetectorFeature struct {
	Name      string
	Args      GuarddutyDetectorFeatureArgs
	state     *guarddutyDetectorFeatureState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GuarddutyDetectorFeature].
func (gdf *GuarddutyDetectorFeature) Type() string {
	return "aws_guardduty_detector_feature"
}

// LocalName returns the local name for [GuarddutyDetectorFeature].
func (gdf *GuarddutyDetectorFeature) LocalName() string {
	return gdf.Name
}

// Configuration returns the configuration (args) for [GuarddutyDetectorFeature].
func (gdf *GuarddutyDetectorFeature) Configuration() interface{} {
	return gdf.Args
}

// DependOn is used for other resources to depend on [GuarddutyDetectorFeature].
func (gdf *GuarddutyDetectorFeature) DependOn() terra.Reference {
	return terra.ReferenceResource(gdf)
}

// Dependencies returns the list of resources [GuarddutyDetectorFeature] depends_on.
func (gdf *GuarddutyDetectorFeature) Dependencies() terra.Dependencies {
	return gdf.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GuarddutyDetectorFeature].
func (gdf *GuarddutyDetectorFeature) LifecycleManagement() *terra.Lifecycle {
	return gdf.Lifecycle
}

// Attributes returns the attributes for [GuarddutyDetectorFeature].
func (gdf *GuarddutyDetectorFeature) Attributes() guarddutyDetectorFeatureAttributes {
	return guarddutyDetectorFeatureAttributes{ref: terra.ReferenceResource(gdf)}
}

// ImportState imports the given attribute values into [GuarddutyDetectorFeature]'s state.
func (gdf *GuarddutyDetectorFeature) ImportState(av io.Reader) error {
	gdf.state = &guarddutyDetectorFeatureState{}
	if err := json.NewDecoder(av).Decode(gdf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdf.Type(), gdf.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GuarddutyDetectorFeature] has state.
func (gdf *GuarddutyDetectorFeature) State() (*guarddutyDetectorFeatureState, bool) {
	return gdf.state, gdf.state != nil
}

// StateMust returns the state for [GuarddutyDetectorFeature]. Panics if the state is nil.
func (gdf *GuarddutyDetectorFeature) StateMust() *guarddutyDetectorFeatureState {
	if gdf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdf.Type(), gdf.LocalName()))
	}
	return gdf.state
}

// GuarddutyDetectorFeatureArgs contains the configurations for aws_guardduty_detector_feature.
type GuarddutyDetectorFeatureArgs struct {
	// DetectorId: string, required
	DetectorId terra.StringValue `hcl:"detector_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Status: string, required
	Status terra.StringValue `hcl:"status,attr" validate:"required"`
	// AdditionalConfiguration: min=0
	AdditionalConfiguration []guarddutydetectorfeature.AdditionalConfiguration `hcl:"additional_configuration,block" validate:"min=0"`
}
type guarddutyDetectorFeatureAttributes struct {
	ref terra.Reference
}

// DetectorId returns a reference to field detector_id of aws_guardduty_detector_feature.
func (gdf guarddutyDetectorFeatureAttributes) DetectorId() terra.StringValue {
	return terra.ReferenceAsString(gdf.ref.Append("detector_id"))
}

// Id returns a reference to field id of aws_guardduty_detector_feature.
func (gdf guarddutyDetectorFeatureAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdf.ref.Append("id"))
}

// Name returns a reference to field name of aws_guardduty_detector_feature.
func (gdf guarddutyDetectorFeatureAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdf.ref.Append("name"))
}

// Status returns a reference to field status of aws_guardduty_detector_feature.
func (gdf guarddutyDetectorFeatureAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(gdf.ref.Append("status"))
}

func (gdf guarddutyDetectorFeatureAttributes) AdditionalConfiguration() terra.ListValue[guarddutydetectorfeature.AdditionalConfigurationAttributes] {
	return terra.ReferenceAsList[guarddutydetectorfeature.AdditionalConfigurationAttributes](gdf.ref.Append("additional_configuration"))
}

type guarddutyDetectorFeatureState struct {
	DetectorId              string                                                  `json:"detector_id"`
	Id                      string                                                  `json:"id"`
	Name                    string                                                  `json:"name"`
	Status                  string                                                  `json:"status"`
	AdditionalConfiguration []guarddutydetectorfeature.AdditionalConfigurationState `json:"additional_configuration"`
}
