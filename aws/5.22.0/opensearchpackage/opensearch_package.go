// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package opensearchpackage

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type PackageSource struct {
	// S3BucketName: string, required
	S3BucketName terra.StringValue `hcl:"s3_bucket_name,attr" validate:"required"`
	// S3Key: string, required
	S3Key terra.StringValue `hcl:"s3_key,attr" validate:"required"`
}

type PackageSourceAttributes struct {
	ref terra.Reference
}

func (ps PackageSourceAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps PackageSourceAttributes) InternalWithRef(ref terra.Reference) PackageSourceAttributes {
	return PackageSourceAttributes{ref: ref}
}

func (ps PackageSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps PackageSourceAttributes) S3BucketName() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("s3_bucket_name"))
}

func (ps PackageSourceAttributes) S3Key() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("s3_key"))
}

type PackageSourceState struct {
	S3BucketName string `json:"s3_bucket_name"`
	S3Key        string `json:"s3_key"`
}
