// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	finspacekxenvironment "github.com/golingon/terraproviders/aws/5.22.0/finspacekxenvironment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewFinspaceKxEnvironment creates a new instance of [FinspaceKxEnvironment].
func NewFinspaceKxEnvironment(name string, args FinspaceKxEnvironmentArgs) *FinspaceKxEnvironment {
	return &FinspaceKxEnvironment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*FinspaceKxEnvironment)(nil)

// FinspaceKxEnvironment represents the Terraform resource aws_finspace_kx_environment.
type FinspaceKxEnvironment struct {
	Name      string
	Args      FinspaceKxEnvironmentArgs
	state     *finspaceKxEnvironmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [FinspaceKxEnvironment].
func (fke *FinspaceKxEnvironment) Type() string {
	return "aws_finspace_kx_environment"
}

// LocalName returns the local name for [FinspaceKxEnvironment].
func (fke *FinspaceKxEnvironment) LocalName() string {
	return fke.Name
}

// Configuration returns the configuration (args) for [FinspaceKxEnvironment].
func (fke *FinspaceKxEnvironment) Configuration() interface{} {
	return fke.Args
}

// DependOn is used for other resources to depend on [FinspaceKxEnvironment].
func (fke *FinspaceKxEnvironment) DependOn() terra.Reference {
	return terra.ReferenceResource(fke)
}

// Dependencies returns the list of resources [FinspaceKxEnvironment] depends_on.
func (fke *FinspaceKxEnvironment) Dependencies() terra.Dependencies {
	return fke.DependsOn
}

// LifecycleManagement returns the lifecycle block for [FinspaceKxEnvironment].
func (fke *FinspaceKxEnvironment) LifecycleManagement() *terra.Lifecycle {
	return fke.Lifecycle
}

// Attributes returns the attributes for [FinspaceKxEnvironment].
func (fke *FinspaceKxEnvironment) Attributes() finspaceKxEnvironmentAttributes {
	return finspaceKxEnvironmentAttributes{ref: terra.ReferenceResource(fke)}
}

// ImportState imports the given attribute values into [FinspaceKxEnvironment]'s state.
func (fke *FinspaceKxEnvironment) ImportState(av io.Reader) error {
	fke.state = &finspaceKxEnvironmentState{}
	if err := json.NewDecoder(av).Decode(fke.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", fke.Type(), fke.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [FinspaceKxEnvironment] has state.
func (fke *FinspaceKxEnvironment) State() (*finspaceKxEnvironmentState, bool) {
	return fke.state, fke.state != nil
}

// StateMust returns the state for [FinspaceKxEnvironment]. Panics if the state is nil.
func (fke *FinspaceKxEnvironment) StateMust() *finspaceKxEnvironmentState {
	if fke.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", fke.Type(), fke.LocalName()))
	}
	return fke.state
}

// FinspaceKxEnvironmentArgs contains the configurations for aws_finspace_kx_environment.
type FinspaceKxEnvironmentArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// KmsKeyId: string, required
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// CustomDnsConfiguration: min=0
	CustomDnsConfiguration []finspacekxenvironment.CustomDnsConfiguration `hcl:"custom_dns_configuration,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *finspacekxenvironment.Timeouts `hcl:"timeouts,block"`
	// TransitGatewayConfiguration: optional
	TransitGatewayConfiguration *finspacekxenvironment.TransitGatewayConfiguration `hcl:"transit_gateway_configuration,block"`
}
type finspaceKxEnvironmentAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("arn"))
}

// AvailabilityZones returns a reference to field availability_zones of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) AvailabilityZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fke.ref.Append("availability_zones"))
}

// CreatedTimestamp returns a reference to field created_timestamp of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) CreatedTimestamp() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("created_timestamp"))
}

// Description returns a reference to field description of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("description"))
}

// Id returns a reference to field id of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("id"))
}

// InfrastructureAccountId returns a reference to field infrastructure_account_id of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) InfrastructureAccountId() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("infrastructure_account_id"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("kms_key_id"))
}

// LastModifiedTimestamp returns a reference to field last_modified_timestamp of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) LastModifiedTimestamp() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("last_modified_timestamp"))
}

// Name returns a reference to field name of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("name"))
}

// Status returns a reference to field status of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(fke.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](fke.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_finspace_kx_environment.
func (fke finspaceKxEnvironmentAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](fke.ref.Append("tags_all"))
}

func (fke finspaceKxEnvironmentAttributes) CustomDnsConfiguration() terra.ListValue[finspacekxenvironment.CustomDnsConfigurationAttributes] {
	return terra.ReferenceAsList[finspacekxenvironment.CustomDnsConfigurationAttributes](fke.ref.Append("custom_dns_configuration"))
}

func (fke finspaceKxEnvironmentAttributes) Timeouts() finspacekxenvironment.TimeoutsAttributes {
	return terra.ReferenceAsSingle[finspacekxenvironment.TimeoutsAttributes](fke.ref.Append("timeouts"))
}

func (fke finspaceKxEnvironmentAttributes) TransitGatewayConfiguration() terra.ListValue[finspacekxenvironment.TransitGatewayConfigurationAttributes] {
	return terra.ReferenceAsList[finspacekxenvironment.TransitGatewayConfigurationAttributes](fke.ref.Append("transit_gateway_configuration"))
}

type finspaceKxEnvironmentState struct {
	Arn                         string                                                   `json:"arn"`
	AvailabilityZones           []string                                                 `json:"availability_zones"`
	CreatedTimestamp            string                                                   `json:"created_timestamp"`
	Description                 string                                                   `json:"description"`
	Id                          string                                                   `json:"id"`
	InfrastructureAccountId     string                                                   `json:"infrastructure_account_id"`
	KmsKeyId                    string                                                   `json:"kms_key_id"`
	LastModifiedTimestamp       string                                                   `json:"last_modified_timestamp"`
	Name                        string                                                   `json:"name"`
	Status                      string                                                   `json:"status"`
	Tags                        map[string]string                                        `json:"tags"`
	TagsAll                     map[string]string                                        `json:"tags_all"`
	CustomDnsConfiguration      []finspacekxenvironment.CustomDnsConfigurationState      `json:"custom_dns_configuration"`
	Timeouts                    *finspacekxenvironment.TimeoutsState                     `json:"timeouts"`
	TransitGatewayConfiguration []finspacekxenvironment.TransitGatewayConfigurationState `json:"transit_gateway_configuration"`
}
