// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	elasticsearchvpcendpoint "github.com/golingon/terraproviders/aws/5.22.0/elasticsearchvpcendpoint"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewElasticsearchVpcEndpoint creates a new instance of [ElasticsearchVpcEndpoint].
func NewElasticsearchVpcEndpoint(name string, args ElasticsearchVpcEndpointArgs) *ElasticsearchVpcEndpoint {
	return &ElasticsearchVpcEndpoint{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ElasticsearchVpcEndpoint)(nil)

// ElasticsearchVpcEndpoint represents the Terraform resource aws_elasticsearch_vpc_endpoint.
type ElasticsearchVpcEndpoint struct {
	Name      string
	Args      ElasticsearchVpcEndpointArgs
	state     *elasticsearchVpcEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ElasticsearchVpcEndpoint].
func (eve *ElasticsearchVpcEndpoint) Type() string {
	return "aws_elasticsearch_vpc_endpoint"
}

// LocalName returns the local name for [ElasticsearchVpcEndpoint].
func (eve *ElasticsearchVpcEndpoint) LocalName() string {
	return eve.Name
}

// Configuration returns the configuration (args) for [ElasticsearchVpcEndpoint].
func (eve *ElasticsearchVpcEndpoint) Configuration() interface{} {
	return eve.Args
}

// DependOn is used for other resources to depend on [ElasticsearchVpcEndpoint].
func (eve *ElasticsearchVpcEndpoint) DependOn() terra.Reference {
	return terra.ReferenceResource(eve)
}

// Dependencies returns the list of resources [ElasticsearchVpcEndpoint] depends_on.
func (eve *ElasticsearchVpcEndpoint) Dependencies() terra.Dependencies {
	return eve.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ElasticsearchVpcEndpoint].
func (eve *ElasticsearchVpcEndpoint) LifecycleManagement() *terra.Lifecycle {
	return eve.Lifecycle
}

// Attributes returns the attributes for [ElasticsearchVpcEndpoint].
func (eve *ElasticsearchVpcEndpoint) Attributes() elasticsearchVpcEndpointAttributes {
	return elasticsearchVpcEndpointAttributes{ref: terra.ReferenceResource(eve)}
}

// ImportState imports the given attribute values into [ElasticsearchVpcEndpoint]'s state.
func (eve *ElasticsearchVpcEndpoint) ImportState(av io.Reader) error {
	eve.state = &elasticsearchVpcEndpointState{}
	if err := json.NewDecoder(av).Decode(eve.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", eve.Type(), eve.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ElasticsearchVpcEndpoint] has state.
func (eve *ElasticsearchVpcEndpoint) State() (*elasticsearchVpcEndpointState, bool) {
	return eve.state, eve.state != nil
}

// StateMust returns the state for [ElasticsearchVpcEndpoint]. Panics if the state is nil.
func (eve *ElasticsearchVpcEndpoint) StateMust() *elasticsearchVpcEndpointState {
	if eve.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", eve.Type(), eve.LocalName()))
	}
	return eve.state
}

// ElasticsearchVpcEndpointArgs contains the configurations for aws_elasticsearch_vpc_endpoint.
type ElasticsearchVpcEndpointArgs struct {
	// DomainArn: string, required
	DomainArn terra.StringValue `hcl:"domain_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *elasticsearchvpcendpoint.Timeouts `hcl:"timeouts,block"`
	// VpcOptions: required
	VpcOptions *elasticsearchvpcendpoint.VpcOptions `hcl:"vpc_options,block" validate:"required"`
}
type elasticsearchVpcEndpointAttributes struct {
	ref terra.Reference
}

// DomainArn returns a reference to field domain_arn of aws_elasticsearch_vpc_endpoint.
func (eve elasticsearchVpcEndpointAttributes) DomainArn() terra.StringValue {
	return terra.ReferenceAsString(eve.ref.Append("domain_arn"))
}

// Endpoint returns a reference to field endpoint of aws_elasticsearch_vpc_endpoint.
func (eve elasticsearchVpcEndpointAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(eve.ref.Append("endpoint"))
}

// Id returns a reference to field id of aws_elasticsearch_vpc_endpoint.
func (eve elasticsearchVpcEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(eve.ref.Append("id"))
}

func (eve elasticsearchVpcEndpointAttributes) Timeouts() elasticsearchvpcendpoint.TimeoutsAttributes {
	return terra.ReferenceAsSingle[elasticsearchvpcendpoint.TimeoutsAttributes](eve.ref.Append("timeouts"))
}

func (eve elasticsearchVpcEndpointAttributes) VpcOptions() terra.ListValue[elasticsearchvpcendpoint.VpcOptionsAttributes] {
	return terra.ReferenceAsList[elasticsearchvpcendpoint.VpcOptionsAttributes](eve.ref.Append("vpc_options"))
}

type elasticsearchVpcEndpointState struct {
	DomainArn  string                                     `json:"domain_arn"`
	Endpoint   string                                     `json:"endpoint"`
	Id         string                                     `json:"id"`
	Timeouts   *elasticsearchvpcendpoint.TimeoutsState    `json:"timeouts"`
	VpcOptions []elasticsearchvpcendpoint.VpcOptionsState `json:"vpc_options"`
}
