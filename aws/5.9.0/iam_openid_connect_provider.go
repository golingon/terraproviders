// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIamOpenidConnectProvider creates a new instance of [IamOpenidConnectProvider].
func NewIamOpenidConnectProvider(name string, args IamOpenidConnectProviderArgs) *IamOpenidConnectProvider {
	return &IamOpenidConnectProvider{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IamOpenidConnectProvider)(nil)

// IamOpenidConnectProvider represents the Terraform resource aws_iam_openid_connect_provider.
type IamOpenidConnectProvider struct {
	Name      string
	Args      IamOpenidConnectProviderArgs
	state     *iamOpenidConnectProviderState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IamOpenidConnectProvider].
func (iocp *IamOpenidConnectProvider) Type() string {
	return "aws_iam_openid_connect_provider"
}

// LocalName returns the local name for [IamOpenidConnectProvider].
func (iocp *IamOpenidConnectProvider) LocalName() string {
	return iocp.Name
}

// Configuration returns the configuration (args) for [IamOpenidConnectProvider].
func (iocp *IamOpenidConnectProvider) Configuration() interface{} {
	return iocp.Args
}

// DependOn is used for other resources to depend on [IamOpenidConnectProvider].
func (iocp *IamOpenidConnectProvider) DependOn() terra.Reference {
	return terra.ReferenceResource(iocp)
}

// Dependencies returns the list of resources [IamOpenidConnectProvider] depends_on.
func (iocp *IamOpenidConnectProvider) Dependencies() terra.Dependencies {
	return iocp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IamOpenidConnectProvider].
func (iocp *IamOpenidConnectProvider) LifecycleManagement() *terra.Lifecycle {
	return iocp.Lifecycle
}

// Attributes returns the attributes for [IamOpenidConnectProvider].
func (iocp *IamOpenidConnectProvider) Attributes() iamOpenidConnectProviderAttributes {
	return iamOpenidConnectProviderAttributes{ref: terra.ReferenceResource(iocp)}
}

// ImportState imports the given attribute values into [IamOpenidConnectProvider]'s state.
func (iocp *IamOpenidConnectProvider) ImportState(av io.Reader) error {
	iocp.state = &iamOpenidConnectProviderState{}
	if err := json.NewDecoder(av).Decode(iocp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iocp.Type(), iocp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IamOpenidConnectProvider] has state.
func (iocp *IamOpenidConnectProvider) State() (*iamOpenidConnectProviderState, bool) {
	return iocp.state, iocp.state != nil
}

// StateMust returns the state for [IamOpenidConnectProvider]. Panics if the state is nil.
func (iocp *IamOpenidConnectProvider) StateMust() *iamOpenidConnectProviderState {
	if iocp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iocp.Type(), iocp.LocalName()))
	}
	return iocp.state
}

// IamOpenidConnectProviderArgs contains the configurations for aws_iam_openid_connect_provider.
type IamOpenidConnectProviderArgs struct {
	// ClientIdList: set of string, required
	ClientIdList terra.SetValue[terra.StringValue] `hcl:"client_id_list,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// ThumbprintList: list of string, required
	ThumbprintList terra.ListValue[terra.StringValue] `hcl:"thumbprint_list,attr" validate:"required"`
	// Url: string, required
	Url terra.StringValue `hcl:"url,attr" validate:"required"`
}
type iamOpenidConnectProviderAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(iocp.ref.Append("arn"))
}

// ClientIdList returns a reference to field client_id_list of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) ClientIdList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](iocp.ref.Append("client_id_list"))
}

// Id returns a reference to field id of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iocp.ref.Append("id"))
}

// Tags returns a reference to field tags of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](iocp.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](iocp.ref.Append("tags_all"))
}

// ThumbprintList returns a reference to field thumbprint_list of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) ThumbprintList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](iocp.ref.Append("thumbprint_list"))
}

// Url returns a reference to field url of aws_iam_openid_connect_provider.
func (iocp iamOpenidConnectProviderAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(iocp.ref.Append("url"))
}

type iamOpenidConnectProviderState struct {
	Arn            string            `json:"arn"`
	ClientIdList   []string          `json:"client_id_list"`
	Id             string            `json:"id"`
	Tags           map[string]string `json:"tags"`
	TagsAll        map[string]string `json:"tags_all"`
	ThumbprintList []string          `json:"thumbprint_list"`
	Url            string            `json:"url"`
}
