// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	cloudcontrolapiresource "github.com/golingon/terraproviders/aws/5.9.0/cloudcontrolapiresource"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewCloudcontrolapiResource creates a new instance of [CloudcontrolapiResource].
func NewCloudcontrolapiResource(name string, args CloudcontrolapiResourceArgs) *CloudcontrolapiResource {
	return &CloudcontrolapiResource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudcontrolapiResource)(nil)

// CloudcontrolapiResource represents the Terraform resource aws_cloudcontrolapi_resource.
type CloudcontrolapiResource struct {
	Name      string
	Args      CloudcontrolapiResourceArgs
	state     *cloudcontrolapiResourceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CloudcontrolapiResource].
func (cr *CloudcontrolapiResource) Type() string {
	return "aws_cloudcontrolapi_resource"
}

// LocalName returns the local name for [CloudcontrolapiResource].
func (cr *CloudcontrolapiResource) LocalName() string {
	return cr.Name
}

// Configuration returns the configuration (args) for [CloudcontrolapiResource].
func (cr *CloudcontrolapiResource) Configuration() interface{} {
	return cr.Args
}

// DependOn is used for other resources to depend on [CloudcontrolapiResource].
func (cr *CloudcontrolapiResource) DependOn() terra.Reference {
	return terra.ReferenceResource(cr)
}

// Dependencies returns the list of resources [CloudcontrolapiResource] depends_on.
func (cr *CloudcontrolapiResource) Dependencies() terra.Dependencies {
	return cr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CloudcontrolapiResource].
func (cr *CloudcontrolapiResource) LifecycleManagement() *terra.Lifecycle {
	return cr.Lifecycle
}

// Attributes returns the attributes for [CloudcontrolapiResource].
func (cr *CloudcontrolapiResource) Attributes() cloudcontrolapiResourceAttributes {
	return cloudcontrolapiResourceAttributes{ref: terra.ReferenceResource(cr)}
}

// ImportState imports the given attribute values into [CloudcontrolapiResource]'s state.
func (cr *CloudcontrolapiResource) ImportState(av io.Reader) error {
	cr.state = &cloudcontrolapiResourceState{}
	if err := json.NewDecoder(av).Decode(cr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cr.Type(), cr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CloudcontrolapiResource] has state.
func (cr *CloudcontrolapiResource) State() (*cloudcontrolapiResourceState, bool) {
	return cr.state, cr.state != nil
}

// StateMust returns the state for [CloudcontrolapiResource]. Panics if the state is nil.
func (cr *CloudcontrolapiResource) StateMust() *cloudcontrolapiResourceState {
	if cr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cr.Type(), cr.LocalName()))
	}
	return cr.state
}

// CloudcontrolapiResourceArgs contains the configurations for aws_cloudcontrolapi_resource.
type CloudcontrolapiResourceArgs struct {
	// DesiredState: string, required
	DesiredState terra.StringValue `hcl:"desired_state,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// Schema: string, optional
	Schema terra.StringValue `hcl:"schema,attr"`
	// TypeName: string, required
	TypeName terra.StringValue `hcl:"type_name,attr" validate:"required"`
	// TypeVersionId: string, optional
	TypeVersionId terra.StringValue `hcl:"type_version_id,attr"`
	// Timeouts: optional
	Timeouts *cloudcontrolapiresource.Timeouts `hcl:"timeouts,block"`
}
type cloudcontrolapiResourceAttributes struct {
	ref terra.Reference
}

// DesiredState returns a reference to field desired_state of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) DesiredState() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("desired_state"))
}

// Id returns a reference to field id of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("id"))
}

// Properties returns a reference to field properties of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) Properties() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("properties"))
}

// RoleArn returns a reference to field role_arn of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("role_arn"))
}

// Schema returns a reference to field schema of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("schema"))
}

// TypeName returns a reference to field type_name of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("type_name"))
}

// TypeVersionId returns a reference to field type_version_id of aws_cloudcontrolapi_resource.
func (cr cloudcontrolapiResourceAttributes) TypeVersionId() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("type_version_id"))
}

func (cr cloudcontrolapiResourceAttributes) Timeouts() cloudcontrolapiresource.TimeoutsAttributes {
	return terra.ReferenceAsSingle[cloudcontrolapiresource.TimeoutsAttributes](cr.ref.Append("timeouts"))
}

type cloudcontrolapiResourceState struct {
	DesiredState  string                                 `json:"desired_state"`
	Id            string                                 `json:"id"`
	Properties    string                                 `json:"properties"`
	RoleArn       string                                 `json:"role_arn"`
	Schema        string                                 `json:"schema"`
	TypeName      string                                 `json:"type_name"`
	TypeVersionId string                                 `json:"type_version_id"`
	Timeouts      *cloudcontrolapiresource.TimeoutsState `json:"timeouts"`
}
