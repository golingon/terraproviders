// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	quicksightrefreshschedule "github.com/golingon/terraproviders/aws/5.9.0/quicksightrefreshschedule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewQuicksightRefreshSchedule creates a new instance of [QuicksightRefreshSchedule].
func NewQuicksightRefreshSchedule(name string, args QuicksightRefreshScheduleArgs) *QuicksightRefreshSchedule {
	return &QuicksightRefreshSchedule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*QuicksightRefreshSchedule)(nil)

// QuicksightRefreshSchedule represents the Terraform resource aws_quicksight_refresh_schedule.
type QuicksightRefreshSchedule struct {
	Name      string
	Args      QuicksightRefreshScheduleArgs
	state     *quicksightRefreshScheduleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [QuicksightRefreshSchedule].
func (qrs *QuicksightRefreshSchedule) Type() string {
	return "aws_quicksight_refresh_schedule"
}

// LocalName returns the local name for [QuicksightRefreshSchedule].
func (qrs *QuicksightRefreshSchedule) LocalName() string {
	return qrs.Name
}

// Configuration returns the configuration (args) for [QuicksightRefreshSchedule].
func (qrs *QuicksightRefreshSchedule) Configuration() interface{} {
	return qrs.Args
}

// DependOn is used for other resources to depend on [QuicksightRefreshSchedule].
func (qrs *QuicksightRefreshSchedule) DependOn() terra.Reference {
	return terra.ReferenceResource(qrs)
}

// Dependencies returns the list of resources [QuicksightRefreshSchedule] depends_on.
func (qrs *QuicksightRefreshSchedule) Dependencies() terra.Dependencies {
	return qrs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [QuicksightRefreshSchedule].
func (qrs *QuicksightRefreshSchedule) LifecycleManagement() *terra.Lifecycle {
	return qrs.Lifecycle
}

// Attributes returns the attributes for [QuicksightRefreshSchedule].
func (qrs *QuicksightRefreshSchedule) Attributes() quicksightRefreshScheduleAttributes {
	return quicksightRefreshScheduleAttributes{ref: terra.ReferenceResource(qrs)}
}

// ImportState imports the given attribute values into [QuicksightRefreshSchedule]'s state.
func (qrs *QuicksightRefreshSchedule) ImportState(av io.Reader) error {
	qrs.state = &quicksightRefreshScheduleState{}
	if err := json.NewDecoder(av).Decode(qrs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", qrs.Type(), qrs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [QuicksightRefreshSchedule] has state.
func (qrs *QuicksightRefreshSchedule) State() (*quicksightRefreshScheduleState, bool) {
	return qrs.state, qrs.state != nil
}

// StateMust returns the state for [QuicksightRefreshSchedule]. Panics if the state is nil.
func (qrs *QuicksightRefreshSchedule) StateMust() *quicksightRefreshScheduleState {
	if qrs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", qrs.Type(), qrs.LocalName()))
	}
	return qrs.state
}

// QuicksightRefreshScheduleArgs contains the configurations for aws_quicksight_refresh_schedule.
type QuicksightRefreshScheduleArgs struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// DataSetId: string, required
	DataSetId terra.StringValue `hcl:"data_set_id,attr" validate:"required"`
	// ScheduleId: string, required
	ScheduleId terra.StringValue `hcl:"schedule_id,attr" validate:"required"`
	// Schedule: min=0
	Schedule []quicksightrefreshschedule.Schedule `hcl:"schedule,block" validate:"min=0"`
}
type quicksightRefreshScheduleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_quicksight_refresh_schedule.
func (qrs quicksightRefreshScheduleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(qrs.ref.Append("arn"))
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_refresh_schedule.
func (qrs quicksightRefreshScheduleAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(qrs.ref.Append("aws_account_id"))
}

// DataSetId returns a reference to field data_set_id of aws_quicksight_refresh_schedule.
func (qrs quicksightRefreshScheduleAttributes) DataSetId() terra.StringValue {
	return terra.ReferenceAsString(qrs.ref.Append("data_set_id"))
}

// Id returns a reference to field id of aws_quicksight_refresh_schedule.
func (qrs quicksightRefreshScheduleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(qrs.ref.Append("id"))
}

// ScheduleId returns a reference to field schedule_id of aws_quicksight_refresh_schedule.
func (qrs quicksightRefreshScheduleAttributes) ScheduleId() terra.StringValue {
	return terra.ReferenceAsString(qrs.ref.Append("schedule_id"))
}

func (qrs quicksightRefreshScheduleAttributes) Schedule() terra.ListValue[quicksightrefreshschedule.ScheduleAttributes] {
	return terra.ReferenceAsList[quicksightrefreshschedule.ScheduleAttributes](qrs.ref.Append("schedule"))
}

type quicksightRefreshScheduleState struct {
	Arn          string                                    `json:"arn"`
	AwsAccountId string                                    `json:"aws_account_id"`
	DataSetId    string                                    `json:"data_set_id"`
	Id           string                                    `json:"id"`
	ScheduleId   string                                    `json:"schedule_id"`
	Schedule     []quicksightrefreshschedule.ScheduleState `json:"schedule"`
}
