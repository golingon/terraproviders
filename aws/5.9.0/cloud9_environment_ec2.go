// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewCloud9EnvironmentEc2 creates a new instance of [Cloud9EnvironmentEc2].
func NewCloud9EnvironmentEc2(name string, args Cloud9EnvironmentEc2Args) *Cloud9EnvironmentEc2 {
	return &Cloud9EnvironmentEc2{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Cloud9EnvironmentEc2)(nil)

// Cloud9EnvironmentEc2 represents the Terraform resource aws_cloud9_environment_ec2.
type Cloud9EnvironmentEc2 struct {
	Name      string
	Args      Cloud9EnvironmentEc2Args
	state     *cloud9EnvironmentEc2State
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Cloud9EnvironmentEc2].
func (cee *Cloud9EnvironmentEc2) Type() string {
	return "aws_cloud9_environment_ec2"
}

// LocalName returns the local name for [Cloud9EnvironmentEc2].
func (cee *Cloud9EnvironmentEc2) LocalName() string {
	return cee.Name
}

// Configuration returns the configuration (args) for [Cloud9EnvironmentEc2].
func (cee *Cloud9EnvironmentEc2) Configuration() interface{} {
	return cee.Args
}

// DependOn is used for other resources to depend on [Cloud9EnvironmentEc2].
func (cee *Cloud9EnvironmentEc2) DependOn() terra.Reference {
	return terra.ReferenceResource(cee)
}

// Dependencies returns the list of resources [Cloud9EnvironmentEc2] depends_on.
func (cee *Cloud9EnvironmentEc2) Dependencies() terra.Dependencies {
	return cee.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Cloud9EnvironmentEc2].
func (cee *Cloud9EnvironmentEc2) LifecycleManagement() *terra.Lifecycle {
	return cee.Lifecycle
}

// Attributes returns the attributes for [Cloud9EnvironmentEc2].
func (cee *Cloud9EnvironmentEc2) Attributes() cloud9EnvironmentEc2Attributes {
	return cloud9EnvironmentEc2Attributes{ref: terra.ReferenceResource(cee)}
}

// ImportState imports the given attribute values into [Cloud9EnvironmentEc2]'s state.
func (cee *Cloud9EnvironmentEc2) ImportState(av io.Reader) error {
	cee.state = &cloud9EnvironmentEc2State{}
	if err := json.NewDecoder(av).Decode(cee.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cee.Type(), cee.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Cloud9EnvironmentEc2] has state.
func (cee *Cloud9EnvironmentEc2) State() (*cloud9EnvironmentEc2State, bool) {
	return cee.state, cee.state != nil
}

// StateMust returns the state for [Cloud9EnvironmentEc2]. Panics if the state is nil.
func (cee *Cloud9EnvironmentEc2) StateMust() *cloud9EnvironmentEc2State {
	if cee.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cee.Type(), cee.LocalName()))
	}
	return cee.state
}

// Cloud9EnvironmentEc2Args contains the configurations for aws_cloud9_environment_ec2.
type Cloud9EnvironmentEc2Args struct {
	// AutomaticStopTimeMinutes: number, optional
	AutomaticStopTimeMinutes terra.NumberValue `hcl:"automatic_stop_time_minutes,attr"`
	// ConnectionType: string, optional
	ConnectionType terra.StringValue `hcl:"connection_type,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImageId: string, optional
	ImageId terra.StringValue `hcl:"image_id,attr"`
	// InstanceType: string, required
	InstanceType terra.StringValue `hcl:"instance_type,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OwnerArn: string, optional
	OwnerArn terra.StringValue `hcl:"owner_arn,attr"`
	// SubnetId: string, optional
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type cloud9EnvironmentEc2Attributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("arn"))
}

// AutomaticStopTimeMinutes returns a reference to field automatic_stop_time_minutes of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) AutomaticStopTimeMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(cee.ref.Append("automatic_stop_time_minutes"))
}

// ConnectionType returns a reference to field connection_type of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) ConnectionType() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("connection_type"))
}

// Description returns a reference to field description of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) Description() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("description"))
}

// Id returns a reference to field id of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("id"))
}

// ImageId returns a reference to field image_id of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) ImageId() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("image_id"))
}

// InstanceType returns a reference to field instance_type of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("instance_type"))
}

// Name returns a reference to field name of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("name"))
}

// OwnerArn returns a reference to field owner_arn of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) OwnerArn() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("owner_arn"))
}

// SubnetId returns a reference to field subnet_id of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("subnet_id"))
}

// Tags returns a reference to field tags of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cee.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cee.ref.Append("tags_all"))
}

// Type returns a reference to field type of aws_cloud9_environment_ec2.
func (cee cloud9EnvironmentEc2Attributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cee.ref.Append("type"))
}

type cloud9EnvironmentEc2State struct {
	Arn                      string            `json:"arn"`
	AutomaticStopTimeMinutes float64           `json:"automatic_stop_time_minutes"`
	ConnectionType           string            `json:"connection_type"`
	Description              string            `json:"description"`
	Id                       string            `json:"id"`
	ImageId                  string            `json:"image_id"`
	InstanceType             string            `json:"instance_type"`
	Name                     string            `json:"name"`
	OwnerArn                 string            `json:"owner_arn"`
	SubnetId                 string            `json:"subnet_id"`
	Tags                     map[string]string `json:"tags"`
	TagsAll                  map[string]string `json:"tags_all"`
	Type                     string            `json:"type"`
}
