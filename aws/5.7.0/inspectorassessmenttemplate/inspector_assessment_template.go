// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package inspectorassessmenttemplate

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type EventSubscription struct {
	// Event: string, required
	Event terra.StringValue `hcl:"event,attr" validate:"required"`
	// TopicArn: string, required
	TopicArn terra.StringValue `hcl:"topic_arn,attr" validate:"required"`
}

type EventSubscriptionAttributes struct {
	ref terra.Reference
}

func (es EventSubscriptionAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es EventSubscriptionAttributes) InternalWithRef(ref terra.Reference) EventSubscriptionAttributes {
	return EventSubscriptionAttributes{ref: ref}
}

func (es EventSubscriptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es EventSubscriptionAttributes) Event() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("event"))
}

func (es EventSubscriptionAttributes) TopicArn() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("topic_arn"))
}

type EventSubscriptionState struct {
	Event    string `json:"event"`
	TopicArn string `json:"topic_arn"`
}
