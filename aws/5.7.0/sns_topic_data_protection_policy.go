// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSnsTopicDataProtectionPolicy creates a new instance of [SnsTopicDataProtectionPolicy].
func NewSnsTopicDataProtectionPolicy(name string, args SnsTopicDataProtectionPolicyArgs) *SnsTopicDataProtectionPolicy {
	return &SnsTopicDataProtectionPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SnsTopicDataProtectionPolicy)(nil)

// SnsTopicDataProtectionPolicy represents the Terraform resource aws_sns_topic_data_protection_policy.
type SnsTopicDataProtectionPolicy struct {
	Name      string
	Args      SnsTopicDataProtectionPolicyArgs
	state     *snsTopicDataProtectionPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SnsTopicDataProtectionPolicy].
func (stdpp *SnsTopicDataProtectionPolicy) Type() string {
	return "aws_sns_topic_data_protection_policy"
}

// LocalName returns the local name for [SnsTopicDataProtectionPolicy].
func (stdpp *SnsTopicDataProtectionPolicy) LocalName() string {
	return stdpp.Name
}

// Configuration returns the configuration (args) for [SnsTopicDataProtectionPolicy].
func (stdpp *SnsTopicDataProtectionPolicy) Configuration() interface{} {
	return stdpp.Args
}

// DependOn is used for other resources to depend on [SnsTopicDataProtectionPolicy].
func (stdpp *SnsTopicDataProtectionPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(stdpp)
}

// Dependencies returns the list of resources [SnsTopicDataProtectionPolicy] depends_on.
func (stdpp *SnsTopicDataProtectionPolicy) Dependencies() terra.Dependencies {
	return stdpp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SnsTopicDataProtectionPolicy].
func (stdpp *SnsTopicDataProtectionPolicy) LifecycleManagement() *terra.Lifecycle {
	return stdpp.Lifecycle
}

// Attributes returns the attributes for [SnsTopicDataProtectionPolicy].
func (stdpp *SnsTopicDataProtectionPolicy) Attributes() snsTopicDataProtectionPolicyAttributes {
	return snsTopicDataProtectionPolicyAttributes{ref: terra.ReferenceResource(stdpp)}
}

// ImportState imports the given attribute values into [SnsTopicDataProtectionPolicy]'s state.
func (stdpp *SnsTopicDataProtectionPolicy) ImportState(av io.Reader) error {
	stdpp.state = &snsTopicDataProtectionPolicyState{}
	if err := json.NewDecoder(av).Decode(stdpp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", stdpp.Type(), stdpp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SnsTopicDataProtectionPolicy] has state.
func (stdpp *SnsTopicDataProtectionPolicy) State() (*snsTopicDataProtectionPolicyState, bool) {
	return stdpp.state, stdpp.state != nil
}

// StateMust returns the state for [SnsTopicDataProtectionPolicy]. Panics if the state is nil.
func (stdpp *SnsTopicDataProtectionPolicy) StateMust() *snsTopicDataProtectionPolicyState {
	if stdpp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", stdpp.Type(), stdpp.LocalName()))
	}
	return stdpp.state
}

// SnsTopicDataProtectionPolicyArgs contains the configurations for aws_sns_topic_data_protection_policy.
type SnsTopicDataProtectionPolicyArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
}
type snsTopicDataProtectionPolicyAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sns_topic_data_protection_policy.
func (stdpp snsTopicDataProtectionPolicyAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(stdpp.ref.Append("arn"))
}

// Id returns a reference to field id of aws_sns_topic_data_protection_policy.
func (stdpp snsTopicDataProtectionPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(stdpp.ref.Append("id"))
}

// Policy returns a reference to field policy of aws_sns_topic_data_protection_policy.
func (stdpp snsTopicDataProtectionPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(stdpp.ref.Append("policy"))
}

type snsTopicDataProtectionPolicyState struct {
	Arn    string `json:"arn"`
	Id     string `json:"id"`
	Policy string `json:"policy"`
}
