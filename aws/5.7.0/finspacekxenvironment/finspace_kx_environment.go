// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package finspacekxenvironment

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type CustomDnsConfiguration struct {
	// CustomDnsServerIp: string, required
	CustomDnsServerIp terra.StringValue `hcl:"custom_dns_server_ip,attr" validate:"required"`
	// CustomDnsServerName: string, required
	CustomDnsServerName terra.StringValue `hcl:"custom_dns_server_name,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type TransitGatewayConfiguration struct {
	// RoutableCidrSpace: string, required
	RoutableCidrSpace terra.StringValue `hcl:"routable_cidr_space,attr" validate:"required"`
	// TransitGatewayId: string, required
	TransitGatewayId terra.StringValue `hcl:"transit_gateway_id,attr" validate:"required"`
}

type CustomDnsConfigurationAttributes struct {
	ref terra.Reference
}

func (cdc CustomDnsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cdc.ref, nil
}

func (cdc CustomDnsConfigurationAttributes) InternalWithRef(ref terra.Reference) CustomDnsConfigurationAttributes {
	return CustomDnsConfigurationAttributes{ref: ref}
}

func (cdc CustomDnsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cdc.ref.InternalTokens()
}

func (cdc CustomDnsConfigurationAttributes) CustomDnsServerIp() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("custom_dns_server_ip"))
}

func (cdc CustomDnsConfigurationAttributes) CustomDnsServerName() terra.StringValue {
	return terra.ReferenceAsString(cdc.ref.Append("custom_dns_server_name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TransitGatewayConfigurationAttributes struct {
	ref terra.Reference
}

func (tgc TransitGatewayConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return tgc.ref, nil
}

func (tgc TransitGatewayConfigurationAttributes) InternalWithRef(ref terra.Reference) TransitGatewayConfigurationAttributes {
	return TransitGatewayConfigurationAttributes{ref: ref}
}

func (tgc TransitGatewayConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tgc.ref.InternalTokens()
}

func (tgc TransitGatewayConfigurationAttributes) RoutableCidrSpace() terra.StringValue {
	return terra.ReferenceAsString(tgc.ref.Append("routable_cidr_space"))
}

func (tgc TransitGatewayConfigurationAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(tgc.ref.Append("transit_gateway_id"))
}

type CustomDnsConfigurationState struct {
	CustomDnsServerIp   string `json:"custom_dns_server_ip"`
	CustomDnsServerName string `json:"custom_dns_server_name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type TransitGatewayConfigurationState struct {
	RoutableCidrSpace string `json:"routable_cidr_space"`
	TransitGatewayId  string `json:"transit_gateway_id"`
}
