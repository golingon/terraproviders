// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sagemakerdomain

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type DefaultSpaceSettings struct {
	// ExecutionRole: string, required
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups: set of string, optional
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// DefaultSpaceSettingsJupyterServerAppSettings: optional
	JupyterServerAppSettings *DefaultSpaceSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// DefaultSpaceSettingsKernelGatewayAppSettings: optional
	KernelGatewayAppSettings *DefaultSpaceSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
}

type DefaultSpaceSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository: min=0,max=10
	CodeRepository []DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultSpaceSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage: min=0,max=30
	CustomImage []DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettings struct {
	// ExecutionRole: string, required
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups: set of string, optional
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// CanvasAppSettings: optional
	CanvasAppSettings *CanvasAppSettings `hcl:"canvas_app_settings,block"`
	// DefaultUserSettingsJupyterServerAppSettings: optional
	JupyterServerAppSettings *DefaultUserSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// DefaultUserSettingsKernelGatewayAppSettings: optional
	KernelGatewayAppSettings *DefaultUserSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
	// RSessionAppSettings: optional
	RSessionAppSettings *RSessionAppSettings `hcl:"r_session_app_settings,block"`
	// RStudioServerProAppSettings: optional
	RStudioServerProAppSettings *RStudioServerProAppSettings `hcl:"r_studio_server_pro_app_settings,block"`
	// SharingSettings: optional
	SharingSettings *SharingSettings `hcl:"sharing_settings,block"`
	// TensorBoardAppSettings: optional
	TensorBoardAppSettings *TensorBoardAppSettings `hcl:"tensor_board_app_settings,block"`
}

type CanvasAppSettings struct {
	// ModelRegisterSettings: optional
	ModelRegisterSettings *ModelRegisterSettings `hcl:"model_register_settings,block"`
	// TimeSeriesForecastingSettings: optional
	TimeSeriesForecastingSettings *TimeSeriesForecastingSettings `hcl:"time_series_forecasting_settings,block"`
}

type ModelRegisterSettings struct {
	// CrossAccountModelRegisterRoleArn: string, optional
	CrossAccountModelRegisterRoleArn terra.StringValue `hcl:"cross_account_model_register_role_arn,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type TimeSeriesForecastingSettings struct {
	// AmazonForecastRoleArn: string, optional
	AmazonForecastRoleArn terra.StringValue `hcl:"amazon_forecast_role_arn,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsJupyterServerAppSettingsCodeRepository: min=0,max=10
	CodeRepository []DefaultUserSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsKernelGatewayAppSettingsCustomImage: min=0,max=30
	CustomImage []DefaultUserSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type RSessionAppSettings struct {
	// RSessionAppSettingsCustomImage: min=0,max=30
	CustomImage []RSessionAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// RSessionAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *RSessionAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type RSessionAppSettingsCustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type RSessionAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type RStudioServerProAppSettings struct {
	// AccessStatus: string, optional
	AccessStatus terra.StringValue `hcl:"access_status,attr"`
	// UserGroup: string, optional
	UserGroup terra.StringValue `hcl:"user_group,attr"`
}

type SharingSettings struct {
	// NotebookOutputOption: string, optional
	NotebookOutputOption terra.StringValue `hcl:"notebook_output_option,attr"`
	// S3KmsKeyId: string, optional
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
	// S3OutputPath: string, optional
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr"`
}

type TensorBoardAppSettings struct {
	// TensorBoardAppSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *TensorBoardAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type TensorBoardAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DomainSettings struct {
	// ExecutionRoleIdentityConfig: string, optional
	ExecutionRoleIdentityConfig terra.StringValue `hcl:"execution_role_identity_config,attr"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// RStudioServerProDomainSettings: optional
	RStudioServerProDomainSettings *RStudioServerProDomainSettings `hcl:"r_studio_server_pro_domain_settings,block"`
}

type RStudioServerProDomainSettings struct {
	// DomainExecutionRoleArn: string, required
	DomainExecutionRoleArn terra.StringValue `hcl:"domain_execution_role_arn,attr" validate:"required"`
	// RStudioConnectUrl: string, optional
	RStudioConnectUrl terra.StringValue `hcl:"r_studio_connect_url,attr"`
	// RStudioPackageManagerUrl: string, optional
	RStudioPackageManagerUrl terra.StringValue `hcl:"r_studio_package_manager_url,attr"`
	// RStudioServerProDomainSettingsDefaultResourceSpec: optional
	DefaultResourceSpec *RStudioServerProDomainSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type RStudioServerProDomainSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type RetentionPolicy struct {
	// HomeEfsFileSystem: string, optional
	HomeEfsFileSystem terra.StringValue `hcl:"home_efs_file_system,attr"`
}

type DefaultSpaceSettingsAttributes struct {
	ref terra.Reference
}

func (dss DefaultSpaceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dss.ref, nil
}

func (dss DefaultSpaceSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsAttributes {
	return DefaultSpaceSettingsAttributes{ref: ref}
}

func (dss DefaultSpaceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dss.ref.InternalTokens()
}

func (dss DefaultSpaceSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("execution_role"))
}

func (dss DefaultSpaceSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dss.ref.Append("security_groups"))
}

func (dss DefaultSpaceSettingsAttributes) JupyterServerAppSettings() terra.ListValue[DefaultSpaceSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsJupyterServerAppSettingsAttributes](dss.ref.Append("jupyter_server_app_settings"))
}

func (dss DefaultSpaceSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[DefaultSpaceSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsKernelGatewayAppSettingsAttributes](dss.ref.Append("kernel_gateway_app_settings"))
}

type DefaultSpaceSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsJupyterServerAppSettingsAttributes {
	return DefaultSpaceSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas DefaultSpaceSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultSpaceSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsKernelGatewayAppSettingsAttributes {
	return DefaultSpaceSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas DefaultSpaceSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsAttributes struct {
	ref terra.Reference
}

func (dus DefaultUserSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dus.ref, nil
}

func (dus DefaultUserSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsAttributes {
	return DefaultUserSettingsAttributes{ref: ref}
}

func (dus DefaultUserSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dus.ref.InternalTokens()
}

func (dus DefaultUserSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(dus.ref.Append("execution_role"))
}

func (dus DefaultUserSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dus.ref.Append("security_groups"))
}

func (dus DefaultUserSettingsAttributes) CanvasAppSettings() terra.ListValue[CanvasAppSettingsAttributes] {
	return terra.ReferenceAsList[CanvasAppSettingsAttributes](dus.ref.Append("canvas_app_settings"))
}

func (dus DefaultUserSettingsAttributes) JupyterServerAppSettings() terra.ListValue[DefaultUserSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterServerAppSettingsAttributes](dus.ref.Append("jupyter_server_app_settings"))
}

func (dus DefaultUserSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[DefaultUserSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsKernelGatewayAppSettingsAttributes](dus.ref.Append("kernel_gateway_app_settings"))
}

func (dus DefaultUserSettingsAttributes) RSessionAppSettings() terra.ListValue[RSessionAppSettingsAttributes] {
	return terra.ReferenceAsList[RSessionAppSettingsAttributes](dus.ref.Append("r_session_app_settings"))
}

func (dus DefaultUserSettingsAttributes) RStudioServerProAppSettings() terra.ListValue[RStudioServerProAppSettingsAttributes] {
	return terra.ReferenceAsList[RStudioServerProAppSettingsAttributes](dus.ref.Append("r_studio_server_pro_app_settings"))
}

func (dus DefaultUserSettingsAttributes) SharingSettings() terra.ListValue[SharingSettingsAttributes] {
	return terra.ReferenceAsList[SharingSettingsAttributes](dus.ref.Append("sharing_settings"))
}

func (dus DefaultUserSettingsAttributes) TensorBoardAppSettings() terra.ListValue[TensorBoardAppSettingsAttributes] {
	return terra.ReferenceAsList[TensorBoardAppSettingsAttributes](dus.ref.Append("tensor_board_app_settings"))
}

type CanvasAppSettingsAttributes struct {
	ref terra.Reference
}

func (cas CanvasAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cas.ref, nil
}

func (cas CanvasAppSettingsAttributes) InternalWithRef(ref terra.Reference) CanvasAppSettingsAttributes {
	return CanvasAppSettingsAttributes{ref: ref}
}

func (cas CanvasAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cas.ref.InternalTokens()
}

func (cas CanvasAppSettingsAttributes) ModelRegisterSettings() terra.ListValue[ModelRegisterSettingsAttributes] {
	return terra.ReferenceAsList[ModelRegisterSettingsAttributes](cas.ref.Append("model_register_settings"))
}

func (cas CanvasAppSettingsAttributes) TimeSeriesForecastingSettings() terra.ListValue[TimeSeriesForecastingSettingsAttributes] {
	return terra.ReferenceAsList[TimeSeriesForecastingSettingsAttributes](cas.ref.Append("time_series_forecasting_settings"))
}

type ModelRegisterSettingsAttributes struct {
	ref terra.Reference
}

func (mrs ModelRegisterSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mrs.ref, nil
}

func (mrs ModelRegisterSettingsAttributes) InternalWithRef(ref terra.Reference) ModelRegisterSettingsAttributes {
	return ModelRegisterSettingsAttributes{ref: ref}
}

func (mrs ModelRegisterSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrs.ref.InternalTokens()
}

func (mrs ModelRegisterSettingsAttributes) CrossAccountModelRegisterRoleArn() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("cross_account_model_register_role_arn"))
}

func (mrs ModelRegisterSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("status"))
}

type TimeSeriesForecastingSettingsAttributes struct {
	ref terra.Reference
}

func (tsfs TimeSeriesForecastingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tsfs.ref, nil
}

func (tsfs TimeSeriesForecastingSettingsAttributes) InternalWithRef(ref terra.Reference) TimeSeriesForecastingSettingsAttributes {
	return TimeSeriesForecastingSettingsAttributes{ref: ref}
}

func (tsfs TimeSeriesForecastingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsfs.ref.InternalTokens()
}

func (tsfs TimeSeriesForecastingSettingsAttributes) AmazonForecastRoleArn() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("amazon_forecast_role_arn"))
}

func (tsfs TimeSeriesForecastingSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("status"))
}

type DefaultUserSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterServerAppSettingsAttributes {
	return DefaultUserSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas DefaultUserSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DefaultUserSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsKernelGatewayAppSettingsAttributes {
	return DefaultUserSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas DefaultUserSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci DefaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type RSessionAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsas RSessionAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsas.ref, nil
}

func (rsas RSessionAppSettingsAttributes) InternalWithRef(ref terra.Reference) RSessionAppSettingsAttributes {
	return RSessionAppSettingsAttributes{ref: ref}
}

func (rsas RSessionAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsas.ref.InternalTokens()
}

func (rsas RSessionAppSettingsAttributes) CustomImage() terra.ListValue[RSessionAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[RSessionAppSettingsCustomImageAttributes](rsas.ref.Append("custom_image"))
}

func (rsas RSessionAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[RSessionAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[RSessionAppSettingsDefaultResourceSpecAttributes](rsas.ref.Append("default_resource_spec"))
}

type RSessionAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci RSessionAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci RSessionAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) RSessionAppSettingsCustomImageAttributes {
	return RSessionAppSettingsCustomImageAttributes{ref: ref}
}

func (ci RSessionAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci RSessionAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci RSessionAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci RSessionAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type RSessionAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) RSessionAppSettingsDefaultResourceSpecAttributes {
	return RSessionAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs RSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type RStudioServerProAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsspas RStudioServerProAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspas.ref, nil
}

func (rsspas RStudioServerProAppSettingsAttributes) InternalWithRef(ref terra.Reference) RStudioServerProAppSettingsAttributes {
	return RStudioServerProAppSettingsAttributes{ref: ref}
}

func (rsspas RStudioServerProAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspas.ref.InternalTokens()
}

func (rsspas RStudioServerProAppSettingsAttributes) AccessStatus() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("access_status"))
}

func (rsspas RStudioServerProAppSettingsAttributes) UserGroup() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("user_group"))
}

type SharingSettingsAttributes struct {
	ref terra.Reference
}

func (ss SharingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss SharingSettingsAttributes) InternalWithRef(ref terra.Reference) SharingSettingsAttributes {
	return SharingSettingsAttributes{ref: ref}
}

func (ss SharingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss SharingSettingsAttributes) NotebookOutputOption() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("notebook_output_option"))
}

func (ss SharingSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_kms_key_id"))
}

func (ss SharingSettingsAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_output_path"))
}

type TensorBoardAppSettingsAttributes struct {
	ref terra.Reference
}

func (tbas TensorBoardAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tbas.ref, nil
}

func (tbas TensorBoardAppSettingsAttributes) InternalWithRef(ref terra.Reference) TensorBoardAppSettingsAttributes {
	return TensorBoardAppSettingsAttributes{ref: ref}
}

func (tbas TensorBoardAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbas.ref.InternalTokens()
}

func (tbas TensorBoardAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[TensorBoardAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[TensorBoardAppSettingsDefaultResourceSpecAttributes](tbas.ref.Append("default_resource_spec"))
}

type TensorBoardAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) TensorBoardAppSettingsDefaultResourceSpecAttributes {
	return TensorBoardAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs TensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type DomainSettingsAttributes struct {
	ref terra.Reference
}

func (ds DomainSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds DomainSettingsAttributes) InternalWithRef(ref terra.Reference) DomainSettingsAttributes {
	return DomainSettingsAttributes{ref: ref}
}

func (ds DomainSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds DomainSettingsAttributes) ExecutionRoleIdentityConfig() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("execution_role_identity_config"))
}

func (ds DomainSettingsAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ds.ref.Append("security_group_ids"))
}

func (ds DomainSettingsAttributes) RStudioServerProDomainSettings() terra.ListValue[RStudioServerProDomainSettingsAttributes] {
	return terra.ReferenceAsList[RStudioServerProDomainSettingsAttributes](ds.ref.Append("r_studio_server_pro_domain_settings"))
}

type RStudioServerProDomainSettingsAttributes struct {
	ref terra.Reference
}

func (rsspds RStudioServerProDomainSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspds.ref, nil
}

func (rsspds RStudioServerProDomainSettingsAttributes) InternalWithRef(ref terra.Reference) RStudioServerProDomainSettingsAttributes {
	return RStudioServerProDomainSettingsAttributes{ref: ref}
}

func (rsspds RStudioServerProDomainSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspds.ref.InternalTokens()
}

func (rsspds RStudioServerProDomainSettingsAttributes) DomainExecutionRoleArn() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("domain_execution_role_arn"))
}

func (rsspds RStudioServerProDomainSettingsAttributes) RStudioConnectUrl() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("r_studio_connect_url"))
}

func (rsspds RStudioServerProDomainSettingsAttributes) RStudioPackageManagerUrl() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("r_studio_package_manager_url"))
}

func (rsspds RStudioServerProDomainSettingsAttributes) DefaultResourceSpec() terra.ListValue[RStudioServerProDomainSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[RStudioServerProDomainSettingsDefaultResourceSpecAttributes](rsspds.ref.Append("default_resource_spec"))
}

type RStudioServerProDomainSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) RStudioServerProDomainSettingsDefaultResourceSpecAttributes {
	return RStudioServerProDomainSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs RStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type RetentionPolicyAttributes struct {
	ref terra.Reference
}

func (rp RetentionPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp RetentionPolicyAttributes) InternalWithRef(ref terra.Reference) RetentionPolicyAttributes {
	return RetentionPolicyAttributes{ref: ref}
}

func (rp RetentionPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp RetentionPolicyAttributes) HomeEfsFileSystem() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("home_efs_file_system"))
}

type DefaultSpaceSettingsState struct {
	ExecutionRole            string                                              `json:"execution_role"`
	SecurityGroups           []string                                            `json:"security_groups"`
	JupyterServerAppSettings []DefaultSpaceSettingsJupyterServerAppSettingsState `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings []DefaultSpaceSettingsKernelGatewayAppSettingsState `json:"kernel_gateway_app_settings"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                               `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                               `json:"lifecycle_config_arns"`
	CustomImage         []DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsState struct {
	ExecutionRole               string                                             `json:"execution_role"`
	SecurityGroups              []string                                           `json:"security_groups"`
	CanvasAppSettings           []CanvasAppSettingsState                           `json:"canvas_app_settings"`
	JupyterServerAppSettings    []DefaultUserSettingsJupyterServerAppSettingsState `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings    []DefaultUserSettingsKernelGatewayAppSettingsState `json:"kernel_gateway_app_settings"`
	RSessionAppSettings         []RSessionAppSettingsState                         `json:"r_session_app_settings"`
	RStudioServerProAppSettings []RStudioServerProAppSettingsState                 `json:"r_studio_server_pro_app_settings"`
	SharingSettings             []SharingSettingsState                             `json:"sharing_settings"`
	TensorBoardAppSettings      []TensorBoardAppSettingsState                      `json:"tensor_board_app_settings"`
}

type CanvasAppSettingsState struct {
	ModelRegisterSettings         []ModelRegisterSettingsState         `json:"model_register_settings"`
	TimeSeriesForecastingSettings []TimeSeriesForecastingSettingsState `json:"time_series_forecasting_settings"`
}

type ModelRegisterSettingsState struct {
	CrossAccountModelRegisterRoleArn string `json:"cross_account_model_register_role_arn"`
	Status                           string `json:"status"`
}

type TimeSeriesForecastingSettingsState struct {
	AmazonForecastRoleArn string `json:"amazon_forecast_role_arn"`
	Status                string `json:"status"`
}

type DefaultUserSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                              `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                              `json:"lifecycle_config_arns"`
	CustomImage         []DefaultUserSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type RSessionAppSettingsState struct {
	CustomImage         []RSessionAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []RSessionAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type RSessionAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type RSessionAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type RStudioServerProAppSettingsState struct {
	AccessStatus string `json:"access_status"`
	UserGroup    string `json:"user_group"`
}

type SharingSettingsState struct {
	NotebookOutputOption string `json:"notebook_output_option"`
	S3KmsKeyId           string `json:"s3_kms_key_id"`
	S3OutputPath         string `json:"s3_output_path"`
}

type TensorBoardAppSettingsState struct {
	DefaultResourceSpec []TensorBoardAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type TensorBoardAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DomainSettingsState struct {
	ExecutionRoleIdentityConfig    string                                `json:"execution_role_identity_config"`
	SecurityGroupIds               []string                              `json:"security_group_ids"`
	RStudioServerProDomainSettings []RStudioServerProDomainSettingsState `json:"r_studio_server_pro_domain_settings"`
}

type RStudioServerProDomainSettingsState struct {
	DomainExecutionRoleArn   string                                                   `json:"domain_execution_role_arn"`
	RStudioConnectUrl        string                                                   `json:"r_studio_connect_url"`
	RStudioPackageManagerUrl string                                                   `json:"r_studio_package_manager_url"`
	DefaultResourceSpec      []RStudioServerProDomainSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type RStudioServerProDomainSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type RetentionPolicyState struct {
	HomeEfsFileSystem string `json:"home_efs_file_system"`
}
