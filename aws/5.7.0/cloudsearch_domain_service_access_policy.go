// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	cloudsearchdomainserviceaccesspolicy "github.com/golingon/terraproviders/aws/5.7.0/cloudsearchdomainserviceaccesspolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewCloudsearchDomainServiceAccessPolicy creates a new instance of [CloudsearchDomainServiceAccessPolicy].
func NewCloudsearchDomainServiceAccessPolicy(name string, args CloudsearchDomainServiceAccessPolicyArgs) *CloudsearchDomainServiceAccessPolicy {
	return &CloudsearchDomainServiceAccessPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudsearchDomainServiceAccessPolicy)(nil)

// CloudsearchDomainServiceAccessPolicy represents the Terraform resource aws_cloudsearch_domain_service_access_policy.
type CloudsearchDomainServiceAccessPolicy struct {
	Name      string
	Args      CloudsearchDomainServiceAccessPolicyArgs
	state     *cloudsearchDomainServiceAccessPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CloudsearchDomainServiceAccessPolicy].
func (cdsap *CloudsearchDomainServiceAccessPolicy) Type() string {
	return "aws_cloudsearch_domain_service_access_policy"
}

// LocalName returns the local name for [CloudsearchDomainServiceAccessPolicy].
func (cdsap *CloudsearchDomainServiceAccessPolicy) LocalName() string {
	return cdsap.Name
}

// Configuration returns the configuration (args) for [CloudsearchDomainServiceAccessPolicy].
func (cdsap *CloudsearchDomainServiceAccessPolicy) Configuration() interface{} {
	return cdsap.Args
}

// DependOn is used for other resources to depend on [CloudsearchDomainServiceAccessPolicy].
func (cdsap *CloudsearchDomainServiceAccessPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(cdsap)
}

// Dependencies returns the list of resources [CloudsearchDomainServiceAccessPolicy] depends_on.
func (cdsap *CloudsearchDomainServiceAccessPolicy) Dependencies() terra.Dependencies {
	return cdsap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CloudsearchDomainServiceAccessPolicy].
func (cdsap *CloudsearchDomainServiceAccessPolicy) LifecycleManagement() *terra.Lifecycle {
	return cdsap.Lifecycle
}

// Attributes returns the attributes for [CloudsearchDomainServiceAccessPolicy].
func (cdsap *CloudsearchDomainServiceAccessPolicy) Attributes() cloudsearchDomainServiceAccessPolicyAttributes {
	return cloudsearchDomainServiceAccessPolicyAttributes{ref: terra.ReferenceResource(cdsap)}
}

// ImportState imports the given attribute values into [CloudsearchDomainServiceAccessPolicy]'s state.
func (cdsap *CloudsearchDomainServiceAccessPolicy) ImportState(av io.Reader) error {
	cdsap.state = &cloudsearchDomainServiceAccessPolicyState{}
	if err := json.NewDecoder(av).Decode(cdsap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cdsap.Type(), cdsap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CloudsearchDomainServiceAccessPolicy] has state.
func (cdsap *CloudsearchDomainServiceAccessPolicy) State() (*cloudsearchDomainServiceAccessPolicyState, bool) {
	return cdsap.state, cdsap.state != nil
}

// StateMust returns the state for [CloudsearchDomainServiceAccessPolicy]. Panics if the state is nil.
func (cdsap *CloudsearchDomainServiceAccessPolicy) StateMust() *cloudsearchDomainServiceAccessPolicyState {
	if cdsap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cdsap.Type(), cdsap.LocalName()))
	}
	return cdsap.state
}

// CloudsearchDomainServiceAccessPolicyArgs contains the configurations for aws_cloudsearch_domain_service_access_policy.
type CloudsearchDomainServiceAccessPolicyArgs struct {
	// AccessPolicy: string, required
	AccessPolicy terra.StringValue `hcl:"access_policy,attr" validate:"required"`
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *cloudsearchdomainserviceaccesspolicy.Timeouts `hcl:"timeouts,block"`
}
type cloudsearchDomainServiceAccessPolicyAttributes struct {
	ref terra.Reference
}

// AccessPolicy returns a reference to field access_policy of aws_cloudsearch_domain_service_access_policy.
func (cdsap cloudsearchDomainServiceAccessPolicyAttributes) AccessPolicy() terra.StringValue {
	return terra.ReferenceAsString(cdsap.ref.Append("access_policy"))
}

// DomainName returns a reference to field domain_name of aws_cloudsearch_domain_service_access_policy.
func (cdsap cloudsearchDomainServiceAccessPolicyAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(cdsap.ref.Append("domain_name"))
}

// Id returns a reference to field id of aws_cloudsearch_domain_service_access_policy.
func (cdsap cloudsearchDomainServiceAccessPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cdsap.ref.Append("id"))
}

func (cdsap cloudsearchDomainServiceAccessPolicyAttributes) Timeouts() cloudsearchdomainserviceaccesspolicy.TimeoutsAttributes {
	return terra.ReferenceAsSingle[cloudsearchdomainserviceaccesspolicy.TimeoutsAttributes](cdsap.ref.Append("timeouts"))
}

type cloudsearchDomainServiceAccessPolicyState struct {
	AccessPolicy string                                              `json:"access_policy"`
	DomainName   string                                              `json:"domain_name"`
	Id           string                                              `json:"id"`
	Timeouts     *cloudsearchdomainserviceaccesspolicy.TimeoutsState `json:"timeouts"`
}
