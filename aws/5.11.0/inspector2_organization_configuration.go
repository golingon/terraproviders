// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	inspector2organizationconfiguration "github.com/golingon/terraproviders/aws/5.11.0/inspector2organizationconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewInspector2OrganizationConfiguration creates a new instance of [Inspector2OrganizationConfiguration].
func NewInspector2OrganizationConfiguration(name string, args Inspector2OrganizationConfigurationArgs) *Inspector2OrganizationConfiguration {
	return &Inspector2OrganizationConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Inspector2OrganizationConfiguration)(nil)

// Inspector2OrganizationConfiguration represents the Terraform resource aws_inspector2_organization_configuration.
type Inspector2OrganizationConfiguration struct {
	Name      string
	Args      Inspector2OrganizationConfigurationArgs
	state     *inspector2OrganizationConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Inspector2OrganizationConfiguration].
func (ioc *Inspector2OrganizationConfiguration) Type() string {
	return "aws_inspector2_organization_configuration"
}

// LocalName returns the local name for [Inspector2OrganizationConfiguration].
func (ioc *Inspector2OrganizationConfiguration) LocalName() string {
	return ioc.Name
}

// Configuration returns the configuration (args) for [Inspector2OrganizationConfiguration].
func (ioc *Inspector2OrganizationConfiguration) Configuration() interface{} {
	return ioc.Args
}

// DependOn is used for other resources to depend on [Inspector2OrganizationConfiguration].
func (ioc *Inspector2OrganizationConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(ioc)
}

// Dependencies returns the list of resources [Inspector2OrganizationConfiguration] depends_on.
func (ioc *Inspector2OrganizationConfiguration) Dependencies() terra.Dependencies {
	return ioc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Inspector2OrganizationConfiguration].
func (ioc *Inspector2OrganizationConfiguration) LifecycleManagement() *terra.Lifecycle {
	return ioc.Lifecycle
}

// Attributes returns the attributes for [Inspector2OrganizationConfiguration].
func (ioc *Inspector2OrganizationConfiguration) Attributes() inspector2OrganizationConfigurationAttributes {
	return inspector2OrganizationConfigurationAttributes{ref: terra.ReferenceResource(ioc)}
}

// ImportState imports the given attribute values into [Inspector2OrganizationConfiguration]'s state.
func (ioc *Inspector2OrganizationConfiguration) ImportState(av io.Reader) error {
	ioc.state = &inspector2OrganizationConfigurationState{}
	if err := json.NewDecoder(av).Decode(ioc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ioc.Type(), ioc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Inspector2OrganizationConfiguration] has state.
func (ioc *Inspector2OrganizationConfiguration) State() (*inspector2OrganizationConfigurationState, bool) {
	return ioc.state, ioc.state != nil
}

// StateMust returns the state for [Inspector2OrganizationConfiguration]. Panics if the state is nil.
func (ioc *Inspector2OrganizationConfiguration) StateMust() *inspector2OrganizationConfigurationState {
	if ioc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ioc.Type(), ioc.LocalName()))
	}
	return ioc.state
}

// Inspector2OrganizationConfigurationArgs contains the configurations for aws_inspector2_organization_configuration.
type Inspector2OrganizationConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// AutoEnable: required
	AutoEnable *inspector2organizationconfiguration.AutoEnable `hcl:"auto_enable,block" validate:"required"`
	// Timeouts: optional
	Timeouts *inspector2organizationconfiguration.Timeouts `hcl:"timeouts,block"`
}
type inspector2OrganizationConfigurationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_inspector2_organization_configuration.
func (ioc inspector2OrganizationConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ioc.ref.Append("id"))
}

// MaxAccountLimitReached returns a reference to field max_account_limit_reached of aws_inspector2_organization_configuration.
func (ioc inspector2OrganizationConfigurationAttributes) MaxAccountLimitReached() terra.BoolValue {
	return terra.ReferenceAsBool(ioc.ref.Append("max_account_limit_reached"))
}

func (ioc inspector2OrganizationConfigurationAttributes) AutoEnable() terra.ListValue[inspector2organizationconfiguration.AutoEnableAttributes] {
	return terra.ReferenceAsList[inspector2organizationconfiguration.AutoEnableAttributes](ioc.ref.Append("auto_enable"))
}

func (ioc inspector2OrganizationConfigurationAttributes) Timeouts() inspector2organizationconfiguration.TimeoutsAttributes {
	return terra.ReferenceAsSingle[inspector2organizationconfiguration.TimeoutsAttributes](ioc.ref.Append("timeouts"))
}

type inspector2OrganizationConfigurationState struct {
	Id                     string                                                `json:"id"`
	MaxAccountLimitReached bool                                                  `json:"max_account_limit_reached"`
	AutoEnable             []inspector2organizationconfiguration.AutoEnableState `json:"auto_enable"`
	Timeouts               *inspector2organizationconfiguration.TimeoutsState    `json:"timeouts"`
}
