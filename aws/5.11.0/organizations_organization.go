// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	organizationsorganization "github.com/golingon/terraproviders/aws/5.11.0/organizationsorganization"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewOrganizationsOrganization creates a new instance of [OrganizationsOrganization].
func NewOrganizationsOrganization(name string, args OrganizationsOrganizationArgs) *OrganizationsOrganization {
	return &OrganizationsOrganization{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OrganizationsOrganization)(nil)

// OrganizationsOrganization represents the Terraform resource aws_organizations_organization.
type OrganizationsOrganization struct {
	Name      string
	Args      OrganizationsOrganizationArgs
	state     *organizationsOrganizationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OrganizationsOrganization].
func (oo *OrganizationsOrganization) Type() string {
	return "aws_organizations_organization"
}

// LocalName returns the local name for [OrganizationsOrganization].
func (oo *OrganizationsOrganization) LocalName() string {
	return oo.Name
}

// Configuration returns the configuration (args) for [OrganizationsOrganization].
func (oo *OrganizationsOrganization) Configuration() interface{} {
	return oo.Args
}

// DependOn is used for other resources to depend on [OrganizationsOrganization].
func (oo *OrganizationsOrganization) DependOn() terra.Reference {
	return terra.ReferenceResource(oo)
}

// Dependencies returns the list of resources [OrganizationsOrganization] depends_on.
func (oo *OrganizationsOrganization) Dependencies() terra.Dependencies {
	return oo.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OrganizationsOrganization].
func (oo *OrganizationsOrganization) LifecycleManagement() *terra.Lifecycle {
	return oo.Lifecycle
}

// Attributes returns the attributes for [OrganizationsOrganization].
func (oo *OrganizationsOrganization) Attributes() organizationsOrganizationAttributes {
	return organizationsOrganizationAttributes{ref: terra.ReferenceResource(oo)}
}

// ImportState imports the given attribute values into [OrganizationsOrganization]'s state.
func (oo *OrganizationsOrganization) ImportState(av io.Reader) error {
	oo.state = &organizationsOrganizationState{}
	if err := json.NewDecoder(av).Decode(oo.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", oo.Type(), oo.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OrganizationsOrganization] has state.
func (oo *OrganizationsOrganization) State() (*organizationsOrganizationState, bool) {
	return oo.state, oo.state != nil
}

// StateMust returns the state for [OrganizationsOrganization]. Panics if the state is nil.
func (oo *OrganizationsOrganization) StateMust() *organizationsOrganizationState {
	if oo.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", oo.Type(), oo.LocalName()))
	}
	return oo.state
}

// OrganizationsOrganizationArgs contains the configurations for aws_organizations_organization.
type OrganizationsOrganizationArgs struct {
	// AwsServiceAccessPrincipals: set of string, optional
	AwsServiceAccessPrincipals terra.SetValue[terra.StringValue] `hcl:"aws_service_access_principals,attr"`
	// EnabledPolicyTypes: set of string, optional
	EnabledPolicyTypes terra.SetValue[terra.StringValue] `hcl:"enabled_policy_types,attr"`
	// FeatureSet: string, optional
	FeatureSet terra.StringValue `hcl:"feature_set,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Accounts: min=0
	Accounts []organizationsorganization.Accounts `hcl:"accounts,block" validate:"min=0"`
	// NonMasterAccounts: min=0
	NonMasterAccounts []organizationsorganization.NonMasterAccounts `hcl:"non_master_accounts,block" validate:"min=0"`
	// Roots: min=0
	Roots []organizationsorganization.Roots `hcl:"roots,block" validate:"min=0"`
}
type organizationsOrganizationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("arn"))
}

// AwsServiceAccessPrincipals returns a reference to field aws_service_access_principals of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) AwsServiceAccessPrincipals() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oo.ref.Append("aws_service_access_principals"))
}

// EnabledPolicyTypes returns a reference to field enabled_policy_types of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) EnabledPolicyTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oo.ref.Append("enabled_policy_types"))
}

// FeatureSet returns a reference to field feature_set of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) FeatureSet() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("feature_set"))
}

// Id returns a reference to field id of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("id"))
}

// MasterAccountArn returns a reference to field master_account_arn of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) MasterAccountArn() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("master_account_arn"))
}

// MasterAccountEmail returns a reference to field master_account_email of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) MasterAccountEmail() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("master_account_email"))
}

// MasterAccountId returns a reference to field master_account_id of aws_organizations_organization.
func (oo organizationsOrganizationAttributes) MasterAccountId() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("master_account_id"))
}

func (oo organizationsOrganizationAttributes) Accounts() terra.ListValue[organizationsorganization.AccountsAttributes] {
	return terra.ReferenceAsList[organizationsorganization.AccountsAttributes](oo.ref.Append("accounts"))
}

func (oo organizationsOrganizationAttributes) NonMasterAccounts() terra.ListValue[organizationsorganization.NonMasterAccountsAttributes] {
	return terra.ReferenceAsList[organizationsorganization.NonMasterAccountsAttributes](oo.ref.Append("non_master_accounts"))
}

func (oo organizationsOrganizationAttributes) Roots() terra.ListValue[organizationsorganization.RootsAttributes] {
	return terra.ReferenceAsList[organizationsorganization.RootsAttributes](oo.ref.Append("roots"))
}

type organizationsOrganizationState struct {
	Arn                        string                                             `json:"arn"`
	AwsServiceAccessPrincipals []string                                           `json:"aws_service_access_principals"`
	EnabledPolicyTypes         []string                                           `json:"enabled_policy_types"`
	FeatureSet                 string                                             `json:"feature_set"`
	Id                         string                                             `json:"id"`
	MasterAccountArn           string                                             `json:"master_account_arn"`
	MasterAccountEmail         string                                             `json:"master_account_email"`
	MasterAccountId            string                                             `json:"master_account_id"`
	Accounts                   []organizationsorganization.AccountsState          `json:"accounts"`
	NonMasterAccounts          []organizationsorganization.NonMasterAccountsState `json:"non_master_accounts"`
	Roots                      []organizationsorganization.RootsState             `json:"roots"`
}
