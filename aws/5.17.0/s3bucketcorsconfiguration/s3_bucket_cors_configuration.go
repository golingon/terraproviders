// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package s3bucketcorsconfiguration

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type CorsRule struct {
	// AllowedHeaders: set of string, optional
	AllowedHeaders terra.SetValue[terra.StringValue] `hcl:"allowed_headers,attr"`
	// AllowedMethods: set of string, required
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr" validate:"required"`
	// AllowedOrigins: set of string, required
	AllowedOrigins terra.SetValue[terra.StringValue] `hcl:"allowed_origins,attr" validate:"required"`
	// ExposeHeaders: set of string, optional
	ExposeHeaders terra.SetValue[terra.StringValue] `hcl:"expose_headers,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxAgeSeconds: number, optional
	MaxAgeSeconds terra.NumberValue `hcl:"max_age_seconds,attr"`
}

type CorsRuleAttributes struct {
	ref terra.Reference
}

func (cr CorsRuleAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr CorsRuleAttributes) InternalWithRef(ref terra.Reference) CorsRuleAttributes {
	return CorsRuleAttributes{ref: ref}
}

func (cr CorsRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr CorsRuleAttributes) AllowedHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("allowed_headers"))
}

func (cr CorsRuleAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("allowed_methods"))
}

func (cr CorsRuleAttributes) AllowedOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("allowed_origins"))
}

func (cr CorsRuleAttributes) ExposeHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("expose_headers"))
}

func (cr CorsRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("id"))
}

func (cr CorsRuleAttributes) MaxAgeSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(cr.ref.Append("max_age_seconds"))
}

type CorsRuleState struct {
	AllowedHeaders []string `json:"allowed_headers"`
	AllowedMethods []string `json:"allowed_methods"`
	AllowedOrigins []string `json:"allowed_origins"`
	ExposeHeaders  []string `json:"expose_headers"`
	Id             string   `json:"id"`
	MaxAgeSeconds  float64  `json:"max_age_seconds"`
}
