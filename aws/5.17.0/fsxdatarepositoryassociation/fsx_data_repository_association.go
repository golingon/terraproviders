// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package fsxdatarepositoryassociation

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type S3 struct {
	// AutoExportPolicy: optional
	AutoExportPolicy *AutoExportPolicy `hcl:"auto_export_policy,block"`
	// AutoImportPolicy: optional
	AutoImportPolicy *AutoImportPolicy `hcl:"auto_import_policy,block"`
}

type AutoExportPolicy struct {
	// Events: list of string, optional
	Events terra.ListValue[terra.StringValue] `hcl:"events,attr"`
}

type AutoImportPolicy struct {
	// Events: list of string, optional
	Events terra.ListValue[terra.StringValue] `hcl:"events,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type S3Attributes struct {
	ref terra.Reference
}

func (s S3Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s S3Attributes) InternalWithRef(ref terra.Reference) S3Attributes {
	return S3Attributes{ref: ref}
}

func (s S3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s S3Attributes) AutoExportPolicy() terra.ListValue[AutoExportPolicyAttributes] {
	return terra.ReferenceAsList[AutoExportPolicyAttributes](s.ref.Append("auto_export_policy"))
}

func (s S3Attributes) AutoImportPolicy() terra.ListValue[AutoImportPolicyAttributes] {
	return terra.ReferenceAsList[AutoImportPolicyAttributes](s.ref.Append("auto_import_policy"))
}

type AutoExportPolicyAttributes struct {
	ref terra.Reference
}

func (aep AutoExportPolicyAttributes) InternalRef() (terra.Reference, error) {
	return aep.ref, nil
}

func (aep AutoExportPolicyAttributes) InternalWithRef(ref terra.Reference) AutoExportPolicyAttributes {
	return AutoExportPolicyAttributes{ref: ref}
}

func (aep AutoExportPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aep.ref.InternalTokens()
}

func (aep AutoExportPolicyAttributes) Events() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aep.ref.Append("events"))
}

type AutoImportPolicyAttributes struct {
	ref terra.Reference
}

func (aip AutoImportPolicyAttributes) InternalRef() (terra.Reference, error) {
	return aip.ref, nil
}

func (aip AutoImportPolicyAttributes) InternalWithRef(ref terra.Reference) AutoImportPolicyAttributes {
	return AutoImportPolicyAttributes{ref: ref}
}

func (aip AutoImportPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aip.ref.InternalTokens()
}

func (aip AutoImportPolicyAttributes) Events() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aip.ref.Append("events"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type S3State struct {
	AutoExportPolicy []AutoExportPolicyState `json:"auto_export_policy"`
	AutoImportPolicy []AutoImportPolicyState `json:"auto_import_policy"`
}

type AutoExportPolicyState struct {
	Events []string `json:"events"`
}

type AutoImportPolicyState struct {
	Events []string `json:"events"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
