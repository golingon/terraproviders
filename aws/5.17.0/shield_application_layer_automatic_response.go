// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	shieldapplicationlayerautomaticresponse "github.com/golingon/terraproviders/aws/5.17.0/shieldapplicationlayerautomaticresponse"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewShieldApplicationLayerAutomaticResponse creates a new instance of [ShieldApplicationLayerAutomaticResponse].
func NewShieldApplicationLayerAutomaticResponse(name string, args ShieldApplicationLayerAutomaticResponseArgs) *ShieldApplicationLayerAutomaticResponse {
	return &ShieldApplicationLayerAutomaticResponse{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ShieldApplicationLayerAutomaticResponse)(nil)

// ShieldApplicationLayerAutomaticResponse represents the Terraform resource aws_shield_application_layer_automatic_response.
type ShieldApplicationLayerAutomaticResponse struct {
	Name      string
	Args      ShieldApplicationLayerAutomaticResponseArgs
	state     *shieldApplicationLayerAutomaticResponseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ShieldApplicationLayerAutomaticResponse].
func (salar *ShieldApplicationLayerAutomaticResponse) Type() string {
	return "aws_shield_application_layer_automatic_response"
}

// LocalName returns the local name for [ShieldApplicationLayerAutomaticResponse].
func (salar *ShieldApplicationLayerAutomaticResponse) LocalName() string {
	return salar.Name
}

// Configuration returns the configuration (args) for [ShieldApplicationLayerAutomaticResponse].
func (salar *ShieldApplicationLayerAutomaticResponse) Configuration() interface{} {
	return salar.Args
}

// DependOn is used for other resources to depend on [ShieldApplicationLayerAutomaticResponse].
func (salar *ShieldApplicationLayerAutomaticResponse) DependOn() terra.Reference {
	return terra.ReferenceResource(salar)
}

// Dependencies returns the list of resources [ShieldApplicationLayerAutomaticResponse] depends_on.
func (salar *ShieldApplicationLayerAutomaticResponse) Dependencies() terra.Dependencies {
	return salar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ShieldApplicationLayerAutomaticResponse].
func (salar *ShieldApplicationLayerAutomaticResponse) LifecycleManagement() *terra.Lifecycle {
	return salar.Lifecycle
}

// Attributes returns the attributes for [ShieldApplicationLayerAutomaticResponse].
func (salar *ShieldApplicationLayerAutomaticResponse) Attributes() shieldApplicationLayerAutomaticResponseAttributes {
	return shieldApplicationLayerAutomaticResponseAttributes{ref: terra.ReferenceResource(salar)}
}

// ImportState imports the given attribute values into [ShieldApplicationLayerAutomaticResponse]'s state.
func (salar *ShieldApplicationLayerAutomaticResponse) ImportState(av io.Reader) error {
	salar.state = &shieldApplicationLayerAutomaticResponseState{}
	if err := json.NewDecoder(av).Decode(salar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", salar.Type(), salar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ShieldApplicationLayerAutomaticResponse] has state.
func (salar *ShieldApplicationLayerAutomaticResponse) State() (*shieldApplicationLayerAutomaticResponseState, bool) {
	return salar.state, salar.state != nil
}

// StateMust returns the state for [ShieldApplicationLayerAutomaticResponse]. Panics if the state is nil.
func (salar *ShieldApplicationLayerAutomaticResponse) StateMust() *shieldApplicationLayerAutomaticResponseState {
	if salar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", salar.Type(), salar.LocalName()))
	}
	return salar.state
}

// ShieldApplicationLayerAutomaticResponseArgs contains the configurations for aws_shield_application_layer_automatic_response.
type ShieldApplicationLayerAutomaticResponseArgs struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *shieldapplicationlayerautomaticresponse.Timeouts `hcl:"timeouts,block"`
}
type shieldApplicationLayerAutomaticResponseAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of aws_shield_application_layer_automatic_response.
func (salar shieldApplicationLayerAutomaticResponseAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(salar.ref.Append("action"))
}

// Id returns a reference to field id of aws_shield_application_layer_automatic_response.
func (salar shieldApplicationLayerAutomaticResponseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(salar.ref.Append("id"))
}

// ResourceArn returns a reference to field resource_arn of aws_shield_application_layer_automatic_response.
func (salar shieldApplicationLayerAutomaticResponseAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(salar.ref.Append("resource_arn"))
}

func (salar shieldApplicationLayerAutomaticResponseAttributes) Timeouts() shieldapplicationlayerautomaticresponse.TimeoutsAttributes {
	return terra.ReferenceAsSingle[shieldapplicationlayerautomaticresponse.TimeoutsAttributes](salar.ref.Append("timeouts"))
}

type shieldApplicationLayerAutomaticResponseState struct {
	Action      string                                                 `json:"action"`
	Id          string                                                 `json:"id"`
	ResourceArn string                                                 `json:"resource_arn"`
	Timeouts    *shieldapplicationlayerautomaticresponse.TimeoutsState `json:"timeouts"`
}
