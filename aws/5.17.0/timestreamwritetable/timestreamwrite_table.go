// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package timestreamwritetable

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type MagneticStoreWriteProperties struct {
	// EnableMagneticStoreWrites: bool, optional
	EnableMagneticStoreWrites terra.BoolValue `hcl:"enable_magnetic_store_writes,attr"`
	// MagneticStoreRejectedDataLocation: optional
	MagneticStoreRejectedDataLocation *MagneticStoreRejectedDataLocation `hcl:"magnetic_store_rejected_data_location,block"`
}

type MagneticStoreRejectedDataLocation struct {
	// S3Configuration: optional
	S3Configuration *S3Configuration `hcl:"s3_configuration,block"`
}

type S3Configuration struct {
	// BucketName: string, optional
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// EncryptionOption: string, optional
	EncryptionOption terra.StringValue `hcl:"encryption_option,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// ObjectKeyPrefix: string, optional
	ObjectKeyPrefix terra.StringValue `hcl:"object_key_prefix,attr"`
}

type RetentionProperties struct {
	// MagneticStoreRetentionPeriodInDays: number, required
	MagneticStoreRetentionPeriodInDays terra.NumberValue `hcl:"magnetic_store_retention_period_in_days,attr" validate:"required"`
	// MemoryStoreRetentionPeriodInHours: number, required
	MemoryStoreRetentionPeriodInHours terra.NumberValue `hcl:"memory_store_retention_period_in_hours,attr" validate:"required"`
}

type Schema struct {
	// CompositePartitionKey: optional
	CompositePartitionKey *CompositePartitionKey `hcl:"composite_partition_key,block"`
}

type CompositePartitionKey struct {
	// EnforcementInRecord: string, optional
	EnforcementInRecord terra.StringValue `hcl:"enforcement_in_record,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type MagneticStoreWritePropertiesAttributes struct {
	ref terra.Reference
}

func (mswp MagneticStoreWritePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return mswp.ref, nil
}

func (mswp MagneticStoreWritePropertiesAttributes) InternalWithRef(ref terra.Reference) MagneticStoreWritePropertiesAttributes {
	return MagneticStoreWritePropertiesAttributes{ref: ref}
}

func (mswp MagneticStoreWritePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mswp.ref.InternalTokens()
}

func (mswp MagneticStoreWritePropertiesAttributes) EnableMagneticStoreWrites() terra.BoolValue {
	return terra.ReferenceAsBool(mswp.ref.Append("enable_magnetic_store_writes"))
}

func (mswp MagneticStoreWritePropertiesAttributes) MagneticStoreRejectedDataLocation() terra.ListValue[MagneticStoreRejectedDataLocationAttributes] {
	return terra.ReferenceAsList[MagneticStoreRejectedDataLocationAttributes](mswp.ref.Append("magnetic_store_rejected_data_location"))
}

type MagneticStoreRejectedDataLocationAttributes struct {
	ref terra.Reference
}

func (msrdl MagneticStoreRejectedDataLocationAttributes) InternalRef() (terra.Reference, error) {
	return msrdl.ref, nil
}

func (msrdl MagneticStoreRejectedDataLocationAttributes) InternalWithRef(ref terra.Reference) MagneticStoreRejectedDataLocationAttributes {
	return MagneticStoreRejectedDataLocationAttributes{ref: ref}
}

func (msrdl MagneticStoreRejectedDataLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return msrdl.ref.InternalTokens()
}

func (msrdl MagneticStoreRejectedDataLocationAttributes) S3Configuration() terra.ListValue[S3ConfigurationAttributes] {
	return terra.ReferenceAsList[S3ConfigurationAttributes](msrdl.ref.Append("s3_configuration"))
}

type S3ConfigurationAttributes struct {
	ref terra.Reference
}

func (sc S3ConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc S3ConfigurationAttributes) InternalWithRef(ref terra.Reference) S3ConfigurationAttributes {
	return S3ConfigurationAttributes{ref: ref}
}

func (sc S3ConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc S3ConfigurationAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("bucket_name"))
}

func (sc S3ConfigurationAttributes) EncryptionOption() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("encryption_option"))
}

func (sc S3ConfigurationAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("kms_key_id"))
}

func (sc S3ConfigurationAttributes) ObjectKeyPrefix() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("object_key_prefix"))
}

type RetentionPropertiesAttributes struct {
	ref terra.Reference
}

func (rp RetentionPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp RetentionPropertiesAttributes) InternalWithRef(ref terra.Reference) RetentionPropertiesAttributes {
	return RetentionPropertiesAttributes{ref: ref}
}

func (rp RetentionPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp RetentionPropertiesAttributes) MagneticStoreRetentionPeriodInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("magnetic_store_retention_period_in_days"))
}

func (rp RetentionPropertiesAttributes) MemoryStoreRetentionPeriodInHours() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("memory_store_retention_period_in_hours"))
}

type SchemaAttributes struct {
	ref terra.Reference
}

func (s SchemaAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SchemaAttributes) InternalWithRef(ref terra.Reference) SchemaAttributes {
	return SchemaAttributes{ref: ref}
}

func (s SchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SchemaAttributes) CompositePartitionKey() terra.ListValue[CompositePartitionKeyAttributes] {
	return terra.ReferenceAsList[CompositePartitionKeyAttributes](s.ref.Append("composite_partition_key"))
}

type CompositePartitionKeyAttributes struct {
	ref terra.Reference
}

func (cpk CompositePartitionKeyAttributes) InternalRef() (terra.Reference, error) {
	return cpk.ref, nil
}

func (cpk CompositePartitionKeyAttributes) InternalWithRef(ref terra.Reference) CompositePartitionKeyAttributes {
	return CompositePartitionKeyAttributes{ref: ref}
}

func (cpk CompositePartitionKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpk.ref.InternalTokens()
}

func (cpk CompositePartitionKeyAttributes) EnforcementInRecord() terra.StringValue {
	return terra.ReferenceAsString(cpk.ref.Append("enforcement_in_record"))
}

func (cpk CompositePartitionKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cpk.ref.Append("name"))
}

func (cpk CompositePartitionKeyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cpk.ref.Append("type"))
}

type MagneticStoreWritePropertiesState struct {
	EnableMagneticStoreWrites         bool                                     `json:"enable_magnetic_store_writes"`
	MagneticStoreRejectedDataLocation []MagneticStoreRejectedDataLocationState `json:"magnetic_store_rejected_data_location"`
}

type MagneticStoreRejectedDataLocationState struct {
	S3Configuration []S3ConfigurationState `json:"s3_configuration"`
}

type S3ConfigurationState struct {
	BucketName       string `json:"bucket_name"`
	EncryptionOption string `json:"encryption_option"`
	KmsKeyId         string `json:"kms_key_id"`
	ObjectKeyPrefix  string `json:"object_key_prefix"`
}

type RetentionPropertiesState struct {
	MagneticStoreRetentionPeriodInDays float64 `json:"magnetic_store_retention_period_in_days"`
	MemoryStoreRetentionPeriodInHours  float64 `json:"memory_store_retention_period_in_hours"`
}

type SchemaState struct {
	CompositePartitionKey []CompositePartitionKeyState `json:"composite_partition_key"`
}

type CompositePartitionKeyState struct {
	EnforcementInRecord string `json:"enforcement_in_record"`
	Name                string `json:"name"`
	Type                string `json:"type"`
}
