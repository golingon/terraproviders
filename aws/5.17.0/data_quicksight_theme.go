// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataquicksighttheme "github.com/golingon/terraproviders/aws/5.17.0/dataquicksighttheme"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataQuicksightTheme creates a new instance of [DataQuicksightTheme].
func NewDataQuicksightTheme(name string, args DataQuicksightThemeArgs) *DataQuicksightTheme {
	return &DataQuicksightTheme{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataQuicksightTheme)(nil)

// DataQuicksightTheme represents the Terraform data resource aws_quicksight_theme.
type DataQuicksightTheme struct {
	Name string
	Args DataQuicksightThemeArgs
}

// DataSource returns the Terraform object type for [DataQuicksightTheme].
func (qt *DataQuicksightTheme) DataSource() string {
	return "aws_quicksight_theme"
}

// LocalName returns the local name for [DataQuicksightTheme].
func (qt *DataQuicksightTheme) LocalName() string {
	return qt.Name
}

// Configuration returns the configuration (args) for [DataQuicksightTheme].
func (qt *DataQuicksightTheme) Configuration() interface{} {
	return qt.Args
}

// Attributes returns the attributes for [DataQuicksightTheme].
func (qt *DataQuicksightTheme) Attributes() dataQuicksightThemeAttributes {
	return dataQuicksightThemeAttributes{ref: terra.ReferenceDataResource(qt)}
}

// DataQuicksightThemeArgs contains the configurations for aws_quicksight_theme.
type DataQuicksightThemeArgs struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ThemeId: string, required
	ThemeId terra.StringValue `hcl:"theme_id,attr" validate:"required"`
	// Configuration: min=0
	Configuration []dataquicksighttheme.Configuration `hcl:"configuration,block" validate:"min=0"`
	// Permissions: min=0
	Permissions []dataquicksighttheme.Permissions `hcl:"permissions,block" validate:"min=0"`
}
type dataQuicksightThemeAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("arn"))
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("aws_account_id"))
}

// BaseThemeId returns a reference to field base_theme_id of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) BaseThemeId() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("base_theme_id"))
}

// CreatedTime returns a reference to field created_time of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("created_time"))
}

// Id returns a reference to field id of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("id"))
}

// LastUpdatedTime returns a reference to field last_updated_time of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) LastUpdatedTime() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("last_updated_time"))
}

// Name returns a reference to field name of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("name"))
}

// Status returns a reference to field status of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](qt.ref.Append("tags"))
}

// ThemeId returns a reference to field theme_id of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) ThemeId() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("theme_id"))
}

// VersionDescription returns a reference to field version_description of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) VersionDescription() terra.StringValue {
	return terra.ReferenceAsString(qt.ref.Append("version_description"))
}

// VersionNumber returns a reference to field version_number of aws_quicksight_theme.
func (qt dataQuicksightThemeAttributes) VersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(qt.ref.Append("version_number"))
}

func (qt dataQuicksightThemeAttributes) Configuration() terra.ListValue[dataquicksighttheme.ConfigurationAttributes] {
	return terra.ReferenceAsList[dataquicksighttheme.ConfigurationAttributes](qt.ref.Append("configuration"))
}

func (qt dataQuicksightThemeAttributes) Permissions() terra.ListValue[dataquicksighttheme.PermissionsAttributes] {
	return terra.ReferenceAsList[dataquicksighttheme.PermissionsAttributes](qt.ref.Append("permissions"))
}
