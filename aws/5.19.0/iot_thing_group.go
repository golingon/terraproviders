// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	iotthinggroup "github.com/golingon/terraproviders/aws/5.19.0/iotthinggroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIotThingGroup creates a new instance of [IotThingGroup].
func NewIotThingGroup(name string, args IotThingGroupArgs) *IotThingGroup {
	return &IotThingGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotThingGroup)(nil)

// IotThingGroup represents the Terraform resource aws_iot_thing_group.
type IotThingGroup struct {
	Name      string
	Args      IotThingGroupArgs
	state     *iotThingGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IotThingGroup].
func (itg *IotThingGroup) Type() string {
	return "aws_iot_thing_group"
}

// LocalName returns the local name for [IotThingGroup].
func (itg *IotThingGroup) LocalName() string {
	return itg.Name
}

// Configuration returns the configuration (args) for [IotThingGroup].
func (itg *IotThingGroup) Configuration() interface{} {
	return itg.Args
}

// DependOn is used for other resources to depend on [IotThingGroup].
func (itg *IotThingGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(itg)
}

// Dependencies returns the list of resources [IotThingGroup] depends_on.
func (itg *IotThingGroup) Dependencies() terra.Dependencies {
	return itg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IotThingGroup].
func (itg *IotThingGroup) LifecycleManagement() *terra.Lifecycle {
	return itg.Lifecycle
}

// Attributes returns the attributes for [IotThingGroup].
func (itg *IotThingGroup) Attributes() iotThingGroupAttributes {
	return iotThingGroupAttributes{ref: terra.ReferenceResource(itg)}
}

// ImportState imports the given attribute values into [IotThingGroup]'s state.
func (itg *IotThingGroup) ImportState(av io.Reader) error {
	itg.state = &iotThingGroupState{}
	if err := json.NewDecoder(av).Decode(itg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itg.Type(), itg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IotThingGroup] has state.
func (itg *IotThingGroup) State() (*iotThingGroupState, bool) {
	return itg.state, itg.state != nil
}

// StateMust returns the state for [IotThingGroup]. Panics if the state is nil.
func (itg *IotThingGroup) StateMust() *iotThingGroupState {
	if itg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itg.Type(), itg.LocalName()))
	}
	return itg.state
}

// IotThingGroupArgs contains the configurations for aws_iot_thing_group.
type IotThingGroupArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ParentGroupName: string, optional
	ParentGroupName terra.StringValue `hcl:"parent_group_name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Metadata: min=0
	Metadata []iotthinggroup.Metadata `hcl:"metadata,block" validate:"min=0"`
	// Properties: optional
	Properties *iotthinggroup.Properties `hcl:"properties,block"`
}
type iotThingGroupAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_iot_thing_group.
func (itg iotThingGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(itg.ref.Append("arn"))
}

// Id returns a reference to field id of aws_iot_thing_group.
func (itg iotThingGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(itg.ref.Append("id"))
}

// Name returns a reference to field name of aws_iot_thing_group.
func (itg iotThingGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(itg.ref.Append("name"))
}

// ParentGroupName returns a reference to field parent_group_name of aws_iot_thing_group.
func (itg iotThingGroupAttributes) ParentGroupName() terra.StringValue {
	return terra.ReferenceAsString(itg.ref.Append("parent_group_name"))
}

// Tags returns a reference to field tags of aws_iot_thing_group.
func (itg iotThingGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](itg.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_iot_thing_group.
func (itg iotThingGroupAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](itg.ref.Append("tags_all"))
}

// Version returns a reference to field version of aws_iot_thing_group.
func (itg iotThingGroupAttributes) Version() terra.NumberValue {
	return terra.ReferenceAsNumber(itg.ref.Append("version"))
}

func (itg iotThingGroupAttributes) Metadata() terra.ListValue[iotthinggroup.MetadataAttributes] {
	return terra.ReferenceAsList[iotthinggroup.MetadataAttributes](itg.ref.Append("metadata"))
}

func (itg iotThingGroupAttributes) Properties() terra.ListValue[iotthinggroup.PropertiesAttributes] {
	return terra.ReferenceAsList[iotthinggroup.PropertiesAttributes](itg.ref.Append("properties"))
}

type iotThingGroupState struct {
	Arn             string                          `json:"arn"`
	Id              string                          `json:"id"`
	Name            string                          `json:"name"`
	ParentGroupName string                          `json:"parent_group_name"`
	Tags            map[string]string               `json:"tags"`
	TagsAll         map[string]string               `json:"tags_all"`
	Version         float64                         `json:"version"`
	Metadata        []iotthinggroup.MetadataState   `json:"metadata"`
	Properties      []iotthinggroup.PropertiesState `json:"properties"`
}
