// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	opensearchserverlessvpcendpoint "github.com/golingon/terraproviders/aws/5.19.0/opensearchserverlessvpcendpoint"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewOpensearchserverlessVpcEndpoint creates a new instance of [OpensearchserverlessVpcEndpoint].
func NewOpensearchserverlessVpcEndpoint(name string, args OpensearchserverlessVpcEndpointArgs) *OpensearchserverlessVpcEndpoint {
	return &OpensearchserverlessVpcEndpoint{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OpensearchserverlessVpcEndpoint)(nil)

// OpensearchserverlessVpcEndpoint represents the Terraform resource aws_opensearchserverless_vpc_endpoint.
type OpensearchserverlessVpcEndpoint struct {
	Name      string
	Args      OpensearchserverlessVpcEndpointArgs
	state     *opensearchserverlessVpcEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OpensearchserverlessVpcEndpoint].
func (ove *OpensearchserverlessVpcEndpoint) Type() string {
	return "aws_opensearchserverless_vpc_endpoint"
}

// LocalName returns the local name for [OpensearchserverlessVpcEndpoint].
func (ove *OpensearchserverlessVpcEndpoint) LocalName() string {
	return ove.Name
}

// Configuration returns the configuration (args) for [OpensearchserverlessVpcEndpoint].
func (ove *OpensearchserverlessVpcEndpoint) Configuration() interface{} {
	return ove.Args
}

// DependOn is used for other resources to depend on [OpensearchserverlessVpcEndpoint].
func (ove *OpensearchserverlessVpcEndpoint) DependOn() terra.Reference {
	return terra.ReferenceResource(ove)
}

// Dependencies returns the list of resources [OpensearchserverlessVpcEndpoint] depends_on.
func (ove *OpensearchserverlessVpcEndpoint) Dependencies() terra.Dependencies {
	return ove.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OpensearchserverlessVpcEndpoint].
func (ove *OpensearchserverlessVpcEndpoint) LifecycleManagement() *terra.Lifecycle {
	return ove.Lifecycle
}

// Attributes returns the attributes for [OpensearchserverlessVpcEndpoint].
func (ove *OpensearchserverlessVpcEndpoint) Attributes() opensearchserverlessVpcEndpointAttributes {
	return opensearchserverlessVpcEndpointAttributes{ref: terra.ReferenceResource(ove)}
}

// ImportState imports the given attribute values into [OpensearchserverlessVpcEndpoint]'s state.
func (ove *OpensearchserverlessVpcEndpoint) ImportState(av io.Reader) error {
	ove.state = &opensearchserverlessVpcEndpointState{}
	if err := json.NewDecoder(av).Decode(ove.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ove.Type(), ove.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OpensearchserverlessVpcEndpoint] has state.
func (ove *OpensearchserverlessVpcEndpoint) State() (*opensearchserverlessVpcEndpointState, bool) {
	return ove.state, ove.state != nil
}

// StateMust returns the state for [OpensearchserverlessVpcEndpoint]. Panics if the state is nil.
func (ove *OpensearchserverlessVpcEndpoint) StateMust() *opensearchserverlessVpcEndpointState {
	if ove.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ove.Type(), ove.LocalName()))
	}
	return ove.state
}

// OpensearchserverlessVpcEndpointArgs contains the configurations for aws_opensearchserverless_vpc_endpoint.
type OpensearchserverlessVpcEndpointArgs struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *opensearchserverlessvpcendpoint.Timeouts `hcl:"timeouts,block"`
}
type opensearchserverlessVpcEndpointAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_opensearchserverless_vpc_endpoint.
func (ove opensearchserverlessVpcEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ove.ref.Append("id"))
}

// Name returns a reference to field name of aws_opensearchserverless_vpc_endpoint.
func (ove opensearchserverlessVpcEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ove.ref.Append("name"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_opensearchserverless_vpc_endpoint.
func (ove opensearchserverlessVpcEndpointAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ove.ref.Append("security_group_ids"))
}

// SubnetIds returns a reference to field subnet_ids of aws_opensearchserverless_vpc_endpoint.
func (ove opensearchserverlessVpcEndpointAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ove.ref.Append("subnet_ids"))
}

// VpcId returns a reference to field vpc_id of aws_opensearchserverless_vpc_endpoint.
func (ove opensearchserverlessVpcEndpointAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(ove.ref.Append("vpc_id"))
}

func (ove opensearchserverlessVpcEndpointAttributes) Timeouts() opensearchserverlessvpcendpoint.TimeoutsAttributes {
	return terra.ReferenceAsSingle[opensearchserverlessvpcendpoint.TimeoutsAttributes](ove.ref.Append("timeouts"))
}

type opensearchserverlessVpcEndpointState struct {
	Id               string                                         `json:"id"`
	Name             string                                         `json:"name"`
	SecurityGroupIds []string                                       `json:"security_group_ids"`
	SubnetIds        []string                                       `json:"subnet_ids"`
	VpcId            string                                         `json:"vpc_id"`
	Timeouts         *opensearchserverlessvpcendpoint.TimeoutsState `json:"timeouts"`
}
