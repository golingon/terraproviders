// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sagemakerendpoint

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type DeploymentConfig struct {
	// AutoRollbackConfiguration: optional
	AutoRollbackConfiguration *AutoRollbackConfiguration `hcl:"auto_rollback_configuration,block"`
	// BlueGreenUpdatePolicy: optional
	BlueGreenUpdatePolicy *BlueGreenUpdatePolicy `hcl:"blue_green_update_policy,block"`
	// RollingUpdatePolicy: optional
	RollingUpdatePolicy *RollingUpdatePolicy `hcl:"rolling_update_policy,block"`
}

type AutoRollbackConfiguration struct {
	// Alarms: min=0,max=10
	Alarms []Alarms `hcl:"alarms,block" validate:"min=0,max=10"`
}

type Alarms struct {
	// AlarmName: string, required
	AlarmName terra.StringValue `hcl:"alarm_name,attr" validate:"required"`
}

type BlueGreenUpdatePolicy struct {
	// MaximumExecutionTimeoutInSeconds: number, optional
	MaximumExecutionTimeoutInSeconds terra.NumberValue `hcl:"maximum_execution_timeout_in_seconds,attr"`
	// TerminationWaitInSeconds: number, optional
	TerminationWaitInSeconds terra.NumberValue `hcl:"termination_wait_in_seconds,attr"`
	// TrafficRoutingConfiguration: required
	TrafficRoutingConfiguration *TrafficRoutingConfiguration `hcl:"traffic_routing_configuration,block" validate:"required"`
}

type TrafficRoutingConfiguration struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// WaitIntervalInSeconds: number, required
	WaitIntervalInSeconds terra.NumberValue `hcl:"wait_interval_in_seconds,attr" validate:"required"`
	// CanarySize: optional
	CanarySize *CanarySize `hcl:"canary_size,block"`
	// LinearStepSize: optional
	LinearStepSize *LinearStepSize `hcl:"linear_step_size,block"`
}

type CanarySize struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type LinearStepSize struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type RollingUpdatePolicy struct {
	// MaximumExecutionTimeoutInSeconds: number, optional
	MaximumExecutionTimeoutInSeconds terra.NumberValue `hcl:"maximum_execution_timeout_in_seconds,attr"`
	// WaitIntervalInSeconds: number, required
	WaitIntervalInSeconds terra.NumberValue `hcl:"wait_interval_in_seconds,attr" validate:"required"`
	// MaximumBatchSize: required
	MaximumBatchSize *MaximumBatchSize `hcl:"maximum_batch_size,block" validate:"required"`
	// RollbackMaximumBatchSize: optional
	RollbackMaximumBatchSize *RollbackMaximumBatchSize `hcl:"rollback_maximum_batch_size,block"`
}

type MaximumBatchSize struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type RollbackMaximumBatchSize struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type DeploymentConfigAttributes struct {
	ref terra.Reference
}

func (dc DeploymentConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DeploymentConfigAttributes) InternalWithRef(ref terra.Reference) DeploymentConfigAttributes {
	return DeploymentConfigAttributes{ref: ref}
}

func (dc DeploymentConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DeploymentConfigAttributes) AutoRollbackConfiguration() terra.ListValue[AutoRollbackConfigurationAttributes] {
	return terra.ReferenceAsList[AutoRollbackConfigurationAttributes](dc.ref.Append("auto_rollback_configuration"))
}

func (dc DeploymentConfigAttributes) BlueGreenUpdatePolicy() terra.ListValue[BlueGreenUpdatePolicyAttributes] {
	return terra.ReferenceAsList[BlueGreenUpdatePolicyAttributes](dc.ref.Append("blue_green_update_policy"))
}

func (dc DeploymentConfigAttributes) RollingUpdatePolicy() terra.ListValue[RollingUpdatePolicyAttributes] {
	return terra.ReferenceAsList[RollingUpdatePolicyAttributes](dc.ref.Append("rolling_update_policy"))
}

type AutoRollbackConfigurationAttributes struct {
	ref terra.Reference
}

func (arc AutoRollbackConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return arc.ref, nil
}

func (arc AutoRollbackConfigurationAttributes) InternalWithRef(ref terra.Reference) AutoRollbackConfigurationAttributes {
	return AutoRollbackConfigurationAttributes{ref: ref}
}

func (arc AutoRollbackConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return arc.ref.InternalTokens()
}

func (arc AutoRollbackConfigurationAttributes) Alarms() terra.SetValue[AlarmsAttributes] {
	return terra.ReferenceAsSet[AlarmsAttributes](arc.ref.Append("alarms"))
}

type AlarmsAttributes struct {
	ref terra.Reference
}

func (a AlarmsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AlarmsAttributes) InternalWithRef(ref terra.Reference) AlarmsAttributes {
	return AlarmsAttributes{ref: ref}
}

func (a AlarmsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a AlarmsAttributes) AlarmName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("alarm_name"))
}

type BlueGreenUpdatePolicyAttributes struct {
	ref terra.Reference
}

func (bgup BlueGreenUpdatePolicyAttributes) InternalRef() (terra.Reference, error) {
	return bgup.ref, nil
}

func (bgup BlueGreenUpdatePolicyAttributes) InternalWithRef(ref terra.Reference) BlueGreenUpdatePolicyAttributes {
	return BlueGreenUpdatePolicyAttributes{ref: ref}
}

func (bgup BlueGreenUpdatePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bgup.ref.InternalTokens()
}

func (bgup BlueGreenUpdatePolicyAttributes) MaximumExecutionTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(bgup.ref.Append("maximum_execution_timeout_in_seconds"))
}

func (bgup BlueGreenUpdatePolicyAttributes) TerminationWaitInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(bgup.ref.Append("termination_wait_in_seconds"))
}

func (bgup BlueGreenUpdatePolicyAttributes) TrafficRoutingConfiguration() terra.ListValue[TrafficRoutingConfigurationAttributes] {
	return terra.ReferenceAsList[TrafficRoutingConfigurationAttributes](bgup.ref.Append("traffic_routing_configuration"))
}

type TrafficRoutingConfigurationAttributes struct {
	ref terra.Reference
}

func (trc TrafficRoutingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return trc.ref, nil
}

func (trc TrafficRoutingConfigurationAttributes) InternalWithRef(ref terra.Reference) TrafficRoutingConfigurationAttributes {
	return TrafficRoutingConfigurationAttributes{ref: ref}
}

func (trc TrafficRoutingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return trc.ref.InternalTokens()
}

func (trc TrafficRoutingConfigurationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(trc.ref.Append("type"))
}

func (trc TrafficRoutingConfigurationAttributes) WaitIntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(trc.ref.Append("wait_interval_in_seconds"))
}

func (trc TrafficRoutingConfigurationAttributes) CanarySize() terra.ListValue[CanarySizeAttributes] {
	return terra.ReferenceAsList[CanarySizeAttributes](trc.ref.Append("canary_size"))
}

func (trc TrafficRoutingConfigurationAttributes) LinearStepSize() terra.ListValue[LinearStepSizeAttributes] {
	return terra.ReferenceAsList[LinearStepSizeAttributes](trc.ref.Append("linear_step_size"))
}

type CanarySizeAttributes struct {
	ref terra.Reference
}

func (cs CanarySizeAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs CanarySizeAttributes) InternalWithRef(ref terra.Reference) CanarySizeAttributes {
	return CanarySizeAttributes{ref: ref}
}

func (cs CanarySizeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs CanarySizeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("type"))
}

func (cs CanarySizeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(cs.ref.Append("value"))
}

type LinearStepSizeAttributes struct {
	ref terra.Reference
}

func (lss LinearStepSizeAttributes) InternalRef() (terra.Reference, error) {
	return lss.ref, nil
}

func (lss LinearStepSizeAttributes) InternalWithRef(ref terra.Reference) LinearStepSizeAttributes {
	return LinearStepSizeAttributes{ref: ref}
}

func (lss LinearStepSizeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lss.ref.InternalTokens()
}

func (lss LinearStepSizeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(lss.ref.Append("type"))
}

func (lss LinearStepSizeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(lss.ref.Append("value"))
}

type RollingUpdatePolicyAttributes struct {
	ref terra.Reference
}

func (rup RollingUpdatePolicyAttributes) InternalRef() (terra.Reference, error) {
	return rup.ref, nil
}

func (rup RollingUpdatePolicyAttributes) InternalWithRef(ref terra.Reference) RollingUpdatePolicyAttributes {
	return RollingUpdatePolicyAttributes{ref: ref}
}

func (rup RollingUpdatePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rup.ref.InternalTokens()
}

func (rup RollingUpdatePolicyAttributes) MaximumExecutionTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(rup.ref.Append("maximum_execution_timeout_in_seconds"))
}

func (rup RollingUpdatePolicyAttributes) WaitIntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(rup.ref.Append("wait_interval_in_seconds"))
}

func (rup RollingUpdatePolicyAttributes) MaximumBatchSize() terra.ListValue[MaximumBatchSizeAttributes] {
	return terra.ReferenceAsList[MaximumBatchSizeAttributes](rup.ref.Append("maximum_batch_size"))
}

func (rup RollingUpdatePolicyAttributes) RollbackMaximumBatchSize() terra.ListValue[RollbackMaximumBatchSizeAttributes] {
	return terra.ReferenceAsList[RollbackMaximumBatchSizeAttributes](rup.ref.Append("rollback_maximum_batch_size"))
}

type MaximumBatchSizeAttributes struct {
	ref terra.Reference
}

func (mbs MaximumBatchSizeAttributes) InternalRef() (terra.Reference, error) {
	return mbs.ref, nil
}

func (mbs MaximumBatchSizeAttributes) InternalWithRef(ref terra.Reference) MaximumBatchSizeAttributes {
	return MaximumBatchSizeAttributes{ref: ref}
}

func (mbs MaximumBatchSizeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mbs.ref.InternalTokens()
}

func (mbs MaximumBatchSizeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(mbs.ref.Append("type"))
}

func (mbs MaximumBatchSizeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(mbs.ref.Append("value"))
}

type RollbackMaximumBatchSizeAttributes struct {
	ref terra.Reference
}

func (rmbs RollbackMaximumBatchSizeAttributes) InternalRef() (terra.Reference, error) {
	return rmbs.ref, nil
}

func (rmbs RollbackMaximumBatchSizeAttributes) InternalWithRef(ref terra.Reference) RollbackMaximumBatchSizeAttributes {
	return RollbackMaximumBatchSizeAttributes{ref: ref}
}

func (rmbs RollbackMaximumBatchSizeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rmbs.ref.InternalTokens()
}

func (rmbs RollbackMaximumBatchSizeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(rmbs.ref.Append("type"))
}

func (rmbs RollbackMaximumBatchSizeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(rmbs.ref.Append("value"))
}

type DeploymentConfigState struct {
	AutoRollbackConfiguration []AutoRollbackConfigurationState `json:"auto_rollback_configuration"`
	BlueGreenUpdatePolicy     []BlueGreenUpdatePolicyState     `json:"blue_green_update_policy"`
	RollingUpdatePolicy       []RollingUpdatePolicyState       `json:"rolling_update_policy"`
}

type AutoRollbackConfigurationState struct {
	Alarms []AlarmsState `json:"alarms"`
}

type AlarmsState struct {
	AlarmName string `json:"alarm_name"`
}

type BlueGreenUpdatePolicyState struct {
	MaximumExecutionTimeoutInSeconds float64                            `json:"maximum_execution_timeout_in_seconds"`
	TerminationWaitInSeconds         float64                            `json:"termination_wait_in_seconds"`
	TrafficRoutingConfiguration      []TrafficRoutingConfigurationState `json:"traffic_routing_configuration"`
}

type TrafficRoutingConfigurationState struct {
	Type                  string                `json:"type"`
	WaitIntervalInSeconds float64               `json:"wait_interval_in_seconds"`
	CanarySize            []CanarySizeState     `json:"canary_size"`
	LinearStepSize        []LinearStepSizeState `json:"linear_step_size"`
}

type CanarySizeState struct {
	Type  string  `json:"type"`
	Value float64 `json:"value"`
}

type LinearStepSizeState struct {
	Type  string  `json:"type"`
	Value float64 `json:"value"`
}

type RollingUpdatePolicyState struct {
	MaximumExecutionTimeoutInSeconds float64                         `json:"maximum_execution_timeout_in_seconds"`
	WaitIntervalInSeconds            float64                         `json:"wait_interval_in_seconds"`
	MaximumBatchSize                 []MaximumBatchSizeState         `json:"maximum_batch_size"`
	RollbackMaximumBatchSize         []RollbackMaximumBatchSizeState `json:"rollback_maximum_batch_size"`
}

type MaximumBatchSizeState struct {
	Type  string  `json:"type"`
	Value float64 `json:"value"`
}

type RollbackMaximumBatchSizeState struct {
	Type  string  `json:"type"`
	Value float64 `json:"value"`
}
