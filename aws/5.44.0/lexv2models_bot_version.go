// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	lexv2modelsbotversion "github.com/golingon/terraproviders/aws/5.44.0/lexv2modelsbotversion"
	"io"
)

// NewLexv2ModelsBotVersion creates a new instance of [Lexv2ModelsBotVersion].
func NewLexv2ModelsBotVersion(name string, args Lexv2ModelsBotVersionArgs) *Lexv2ModelsBotVersion {
	return &Lexv2ModelsBotVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Lexv2ModelsBotVersion)(nil)

// Lexv2ModelsBotVersion represents the Terraform resource aws_lexv2models_bot_version.
type Lexv2ModelsBotVersion struct {
	Name      string
	Args      Lexv2ModelsBotVersionArgs
	state     *lexv2ModelsBotVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Lexv2ModelsBotVersion].
func (lbv *Lexv2ModelsBotVersion) Type() string {
	return "aws_lexv2models_bot_version"
}

// LocalName returns the local name for [Lexv2ModelsBotVersion].
func (lbv *Lexv2ModelsBotVersion) LocalName() string {
	return lbv.Name
}

// Configuration returns the configuration (args) for [Lexv2ModelsBotVersion].
func (lbv *Lexv2ModelsBotVersion) Configuration() interface{} {
	return lbv.Args
}

// DependOn is used for other resources to depend on [Lexv2ModelsBotVersion].
func (lbv *Lexv2ModelsBotVersion) DependOn() terra.Reference {
	return terra.ReferenceResource(lbv)
}

// Dependencies returns the list of resources [Lexv2ModelsBotVersion] depends_on.
func (lbv *Lexv2ModelsBotVersion) Dependencies() terra.Dependencies {
	return lbv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Lexv2ModelsBotVersion].
func (lbv *Lexv2ModelsBotVersion) LifecycleManagement() *terra.Lifecycle {
	return lbv.Lifecycle
}

// Attributes returns the attributes for [Lexv2ModelsBotVersion].
func (lbv *Lexv2ModelsBotVersion) Attributes() lexv2ModelsBotVersionAttributes {
	return lexv2ModelsBotVersionAttributes{ref: terra.ReferenceResource(lbv)}
}

// ImportState imports the given attribute values into [Lexv2ModelsBotVersion]'s state.
func (lbv *Lexv2ModelsBotVersion) ImportState(av io.Reader) error {
	lbv.state = &lexv2ModelsBotVersionState{}
	if err := json.NewDecoder(av).Decode(lbv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lbv.Type(), lbv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Lexv2ModelsBotVersion] has state.
func (lbv *Lexv2ModelsBotVersion) State() (*lexv2ModelsBotVersionState, bool) {
	return lbv.state, lbv.state != nil
}

// StateMust returns the state for [Lexv2ModelsBotVersion]. Panics if the state is nil.
func (lbv *Lexv2ModelsBotVersion) StateMust() *lexv2ModelsBotVersionState {
	if lbv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lbv.Type(), lbv.LocalName()))
	}
	return lbv.state
}

// Lexv2ModelsBotVersionArgs contains the configurations for aws_lexv2models_bot_version.
type Lexv2ModelsBotVersionArgs struct {
	// BotId: string, required
	BotId terra.StringValue `hcl:"bot_id,attr" validate:"required"`
	// BotVersion: string, optional
	BotVersion terra.StringValue `hcl:"bot_version,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// LocaleSpecification: min=0
	LocaleSpecification []lexv2modelsbotversion.LocaleSpecification `hcl:"locale_specification,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *lexv2modelsbotversion.Timeouts `hcl:"timeouts,block"`
}
type lexv2ModelsBotVersionAttributes struct {
	ref terra.Reference
}

// BotId returns a reference to field bot_id of aws_lexv2models_bot_version.
func (lbv lexv2ModelsBotVersionAttributes) BotId() terra.StringValue {
	return terra.ReferenceAsString(lbv.ref.Append("bot_id"))
}

// BotVersion returns a reference to field bot_version of aws_lexv2models_bot_version.
func (lbv lexv2ModelsBotVersionAttributes) BotVersion() terra.StringValue {
	return terra.ReferenceAsString(lbv.ref.Append("bot_version"))
}

// Description returns a reference to field description of aws_lexv2models_bot_version.
func (lbv lexv2ModelsBotVersionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(lbv.ref.Append("description"))
}

// Id returns a reference to field id of aws_lexv2models_bot_version.
func (lbv lexv2ModelsBotVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lbv.ref.Append("id"))
}

func (lbv lexv2ModelsBotVersionAttributes) LocaleSpecification() terra.MapValue[lexv2modelsbotversion.LocaleSpecificationAttributes] {
	return terra.ReferenceAsMap[lexv2modelsbotversion.LocaleSpecificationAttributes](lbv.ref.Append("locale_specification"))
}

func (lbv lexv2ModelsBotVersionAttributes) Timeouts() lexv2modelsbotversion.TimeoutsAttributes {
	return terra.ReferenceAsSingle[lexv2modelsbotversion.TimeoutsAttributes](lbv.ref.Append("timeouts"))
}

type lexv2ModelsBotVersionState struct {
	BotId               string                                           `json:"bot_id"`
	BotVersion          string                                           `json:"bot_version"`
	Description         string                                           `json:"description"`
	Id                  string                                           `json:"id"`
	LocaleSpecification []lexv2modelsbotversion.LocaleSpecificationState `json:"locale_specification"`
	Timeouts            *lexv2modelsbotversion.TimeoutsState             `json:"timeouts"`
}
