// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	dataverifiedpermissionspolicystore "github.com/golingon/terraproviders/aws/5.44.0/dataverifiedpermissionspolicystore"
)

// NewDataVerifiedpermissionsPolicyStore creates a new instance of [DataVerifiedpermissionsPolicyStore].
func NewDataVerifiedpermissionsPolicyStore(name string, args DataVerifiedpermissionsPolicyStoreArgs) *DataVerifiedpermissionsPolicyStore {
	return &DataVerifiedpermissionsPolicyStore{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVerifiedpermissionsPolicyStore)(nil)

// DataVerifiedpermissionsPolicyStore represents the Terraform data resource aws_verifiedpermissions_policy_store.
type DataVerifiedpermissionsPolicyStore struct {
	Name string
	Args DataVerifiedpermissionsPolicyStoreArgs
}

// DataSource returns the Terraform object type for [DataVerifiedpermissionsPolicyStore].
func (vps *DataVerifiedpermissionsPolicyStore) DataSource() string {
	return "aws_verifiedpermissions_policy_store"
}

// LocalName returns the local name for [DataVerifiedpermissionsPolicyStore].
func (vps *DataVerifiedpermissionsPolicyStore) LocalName() string {
	return vps.Name
}

// Configuration returns the configuration (args) for [DataVerifiedpermissionsPolicyStore].
func (vps *DataVerifiedpermissionsPolicyStore) Configuration() interface{} {
	return vps.Args
}

// Attributes returns the attributes for [DataVerifiedpermissionsPolicyStore].
func (vps *DataVerifiedpermissionsPolicyStore) Attributes() dataVerifiedpermissionsPolicyStoreAttributes {
	return dataVerifiedpermissionsPolicyStoreAttributes{ref: terra.ReferenceDataResource(vps)}
}

// DataVerifiedpermissionsPolicyStoreArgs contains the configurations for aws_verifiedpermissions_policy_store.
type DataVerifiedpermissionsPolicyStoreArgs struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// ValidationSettings: min=0
	ValidationSettings []dataverifiedpermissionspolicystore.ValidationSettings `hcl:"validation_settings,block" validate:"min=0"`
}
type dataVerifiedpermissionsPolicyStoreAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_verifiedpermissions_policy_store.
func (vps dataVerifiedpermissionsPolicyStoreAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vps.ref.Append("arn"))
}

// CreatedDate returns a reference to field created_date of aws_verifiedpermissions_policy_store.
func (vps dataVerifiedpermissionsPolicyStoreAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceAsString(vps.ref.Append("created_date"))
}

// Description returns a reference to field description of aws_verifiedpermissions_policy_store.
func (vps dataVerifiedpermissionsPolicyStoreAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(vps.ref.Append("description"))
}

// Id returns a reference to field id of aws_verifiedpermissions_policy_store.
func (vps dataVerifiedpermissionsPolicyStoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vps.ref.Append("id"))
}

// LastUpdatedDate returns a reference to field last_updated_date of aws_verifiedpermissions_policy_store.
func (vps dataVerifiedpermissionsPolicyStoreAttributes) LastUpdatedDate() terra.StringValue {
	return terra.ReferenceAsString(vps.ref.Append("last_updated_date"))
}

func (vps dataVerifiedpermissionsPolicyStoreAttributes) ValidationSettings() terra.ListValue[dataverifiedpermissionspolicystore.ValidationSettingsAttributes] {
	return terra.ReferenceAsList[dataverifiedpermissionspolicystore.ValidationSettingsAttributes](vps.ref.Append("validation_settings"))
}
