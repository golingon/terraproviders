// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataS3BucketObjects creates a new instance of [DataS3BucketObjects].
func NewDataS3BucketObjects(name string, args DataS3BucketObjectsArgs) *DataS3BucketObjects {
	return &DataS3BucketObjects{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataS3BucketObjects)(nil)

// DataS3BucketObjects represents the Terraform data resource aws_s3_bucket_objects.
type DataS3BucketObjects struct {
	Name string
	Args DataS3BucketObjectsArgs
}

// DataSource returns the Terraform object type for [DataS3BucketObjects].
func (sbo *DataS3BucketObjects) DataSource() string {
	return "aws_s3_bucket_objects"
}

// LocalName returns the local name for [DataS3BucketObjects].
func (sbo *DataS3BucketObjects) LocalName() string {
	return sbo.Name
}

// Configuration returns the configuration (args) for [DataS3BucketObjects].
func (sbo *DataS3BucketObjects) Configuration() interface{} {
	return sbo.Args
}

// Attributes returns the attributes for [DataS3BucketObjects].
func (sbo *DataS3BucketObjects) Attributes() dataS3BucketObjectsAttributes {
	return dataS3BucketObjectsAttributes{ref: terra.ReferenceDataResource(sbo)}
}

// DataS3BucketObjectsArgs contains the configurations for aws_s3_bucket_objects.
type DataS3BucketObjectsArgs struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// Delimiter: string, optional
	Delimiter terra.StringValue `hcl:"delimiter,attr"`
	// EncodingType: string, optional
	EncodingType terra.StringValue `hcl:"encoding_type,attr"`
	// FetchOwner: bool, optional
	FetchOwner terra.BoolValue `hcl:"fetch_owner,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaxKeys: number, optional
	MaxKeys terra.NumberValue `hcl:"max_keys,attr"`
	// Prefix: string, optional
	Prefix terra.StringValue `hcl:"prefix,attr"`
	// StartAfter: string, optional
	StartAfter terra.StringValue `hcl:"start_after,attr"`
}
type dataS3BucketObjectsAttributes struct {
	ref terra.Reference
}

// Bucket returns a reference to field bucket of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(sbo.ref.Append("bucket"))
}

// CommonPrefixes returns a reference to field common_prefixes of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) CommonPrefixes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sbo.ref.Append("common_prefixes"))
}

// Delimiter returns a reference to field delimiter of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) Delimiter() terra.StringValue {
	return terra.ReferenceAsString(sbo.ref.Append("delimiter"))
}

// EncodingType returns a reference to field encoding_type of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) EncodingType() terra.StringValue {
	return terra.ReferenceAsString(sbo.ref.Append("encoding_type"))
}

// FetchOwner returns a reference to field fetch_owner of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) FetchOwner() terra.BoolValue {
	return terra.ReferenceAsBool(sbo.ref.Append("fetch_owner"))
}

// Id returns a reference to field id of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sbo.ref.Append("id"))
}

// Keys returns a reference to field keys of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) Keys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sbo.ref.Append("keys"))
}

// MaxKeys returns a reference to field max_keys of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) MaxKeys() terra.NumberValue {
	return terra.ReferenceAsNumber(sbo.ref.Append("max_keys"))
}

// Owners returns a reference to field owners of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) Owners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sbo.ref.Append("owners"))
}

// Prefix returns a reference to field prefix of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(sbo.ref.Append("prefix"))
}

// StartAfter returns a reference to field start_after of aws_s3_bucket_objects.
func (sbo dataS3BucketObjectsAttributes) StartAfter() terra.StringValue {
	return terra.ReferenceAsString(sbo.ref.Append("start_after"))
}
