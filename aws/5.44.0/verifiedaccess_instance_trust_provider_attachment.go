// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewVerifiedaccessInstanceTrustProviderAttachment creates a new instance of [VerifiedaccessInstanceTrustProviderAttachment].
func NewVerifiedaccessInstanceTrustProviderAttachment(name string, args VerifiedaccessInstanceTrustProviderAttachmentArgs) *VerifiedaccessInstanceTrustProviderAttachment {
	return &VerifiedaccessInstanceTrustProviderAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VerifiedaccessInstanceTrustProviderAttachment)(nil)

// VerifiedaccessInstanceTrustProviderAttachment represents the Terraform resource aws_verifiedaccess_instance_trust_provider_attachment.
type VerifiedaccessInstanceTrustProviderAttachment struct {
	Name      string
	Args      VerifiedaccessInstanceTrustProviderAttachmentArgs
	state     *verifiedaccessInstanceTrustProviderAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VerifiedaccessInstanceTrustProviderAttachment].
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) Type() string {
	return "aws_verifiedaccess_instance_trust_provider_attachment"
}

// LocalName returns the local name for [VerifiedaccessInstanceTrustProviderAttachment].
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) LocalName() string {
	return vitpa.Name
}

// Configuration returns the configuration (args) for [VerifiedaccessInstanceTrustProviderAttachment].
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) Configuration() interface{} {
	return vitpa.Args
}

// DependOn is used for other resources to depend on [VerifiedaccessInstanceTrustProviderAttachment].
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(vitpa)
}

// Dependencies returns the list of resources [VerifiedaccessInstanceTrustProviderAttachment] depends_on.
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) Dependencies() terra.Dependencies {
	return vitpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VerifiedaccessInstanceTrustProviderAttachment].
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) LifecycleManagement() *terra.Lifecycle {
	return vitpa.Lifecycle
}

// Attributes returns the attributes for [VerifiedaccessInstanceTrustProviderAttachment].
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) Attributes() verifiedaccessInstanceTrustProviderAttachmentAttributes {
	return verifiedaccessInstanceTrustProviderAttachmentAttributes{ref: terra.ReferenceResource(vitpa)}
}

// ImportState imports the given attribute values into [VerifiedaccessInstanceTrustProviderAttachment]'s state.
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) ImportState(av io.Reader) error {
	vitpa.state = &verifiedaccessInstanceTrustProviderAttachmentState{}
	if err := json.NewDecoder(av).Decode(vitpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vitpa.Type(), vitpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VerifiedaccessInstanceTrustProviderAttachment] has state.
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) State() (*verifiedaccessInstanceTrustProviderAttachmentState, bool) {
	return vitpa.state, vitpa.state != nil
}

// StateMust returns the state for [VerifiedaccessInstanceTrustProviderAttachment]. Panics if the state is nil.
func (vitpa *VerifiedaccessInstanceTrustProviderAttachment) StateMust() *verifiedaccessInstanceTrustProviderAttachmentState {
	if vitpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vitpa.Type(), vitpa.LocalName()))
	}
	return vitpa.state
}

// VerifiedaccessInstanceTrustProviderAttachmentArgs contains the configurations for aws_verifiedaccess_instance_trust_provider_attachment.
type VerifiedaccessInstanceTrustProviderAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VerifiedaccessInstanceId: string, required
	VerifiedaccessInstanceId terra.StringValue `hcl:"verifiedaccess_instance_id,attr" validate:"required"`
	// VerifiedaccessTrustProviderId: string, required
	VerifiedaccessTrustProviderId terra.StringValue `hcl:"verifiedaccess_trust_provider_id,attr" validate:"required"`
}
type verifiedaccessInstanceTrustProviderAttachmentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_verifiedaccess_instance_trust_provider_attachment.
func (vitpa verifiedaccessInstanceTrustProviderAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vitpa.ref.Append("id"))
}

// VerifiedaccessInstanceId returns a reference to field verifiedaccess_instance_id of aws_verifiedaccess_instance_trust_provider_attachment.
func (vitpa verifiedaccessInstanceTrustProviderAttachmentAttributes) VerifiedaccessInstanceId() terra.StringValue {
	return terra.ReferenceAsString(vitpa.ref.Append("verifiedaccess_instance_id"))
}

// VerifiedaccessTrustProviderId returns a reference to field verifiedaccess_trust_provider_id of aws_verifiedaccess_instance_trust_provider_attachment.
func (vitpa verifiedaccessInstanceTrustProviderAttachmentAttributes) VerifiedaccessTrustProviderId() terra.StringValue {
	return terra.ReferenceAsString(vitpa.ref.Append("verifiedaccess_trust_provider_id"))
}

type verifiedaccessInstanceTrustProviderAttachmentState struct {
	Id                            string `json:"id"`
	VerifiedaccessInstanceId      string `json:"verifiedaccess_instance_id"`
	VerifiedaccessTrustProviderId string `json:"verifiedaccess_trust_provider_id"`
}
