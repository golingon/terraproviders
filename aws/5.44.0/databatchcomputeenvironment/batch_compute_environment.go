// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package databatchcomputeenvironment

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type UpdatePolicy struct{}

type UpdatePolicyAttributes struct {
	ref terra.Reference
}

func (up UpdatePolicyAttributes) InternalRef() (terra.Reference, error) {
	return up.ref, nil
}

func (up UpdatePolicyAttributes) InternalWithRef(ref terra.Reference) UpdatePolicyAttributes {
	return UpdatePolicyAttributes{ref: ref}
}

func (up UpdatePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return up.ref.InternalTokens()
}

func (up UpdatePolicyAttributes) JobExecutionTimeoutMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(up.ref.Append("job_execution_timeout_minutes"))
}

func (up UpdatePolicyAttributes) TerminateJobsOnUpdate() terra.BoolValue {
	return terra.ReferenceAsBool(up.ref.Append("terminate_jobs_on_update"))
}

type UpdatePolicyState struct {
	JobExecutionTimeoutMinutes float64 `json:"job_execution_timeout_minutes"`
	TerminateJobsOnUpdate      bool    `json:"terminate_jobs_on_update"`
}
