// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewOrganizationsAccount creates a new instance of [OrganizationsAccount].
func NewOrganizationsAccount(name string, args OrganizationsAccountArgs) *OrganizationsAccount {
	return &OrganizationsAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OrganizationsAccount)(nil)

// OrganizationsAccount represents the Terraform resource aws_organizations_account.
type OrganizationsAccount struct {
	Name      string
	Args      OrganizationsAccountArgs
	state     *organizationsAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OrganizationsAccount].
func (oa *OrganizationsAccount) Type() string {
	return "aws_organizations_account"
}

// LocalName returns the local name for [OrganizationsAccount].
func (oa *OrganizationsAccount) LocalName() string {
	return oa.Name
}

// Configuration returns the configuration (args) for [OrganizationsAccount].
func (oa *OrganizationsAccount) Configuration() interface{} {
	return oa.Args
}

// DependOn is used for other resources to depend on [OrganizationsAccount].
func (oa *OrganizationsAccount) DependOn() terra.Reference {
	return terra.ReferenceResource(oa)
}

// Dependencies returns the list of resources [OrganizationsAccount] depends_on.
func (oa *OrganizationsAccount) Dependencies() terra.Dependencies {
	return oa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OrganizationsAccount].
func (oa *OrganizationsAccount) LifecycleManagement() *terra.Lifecycle {
	return oa.Lifecycle
}

// Attributes returns the attributes for [OrganizationsAccount].
func (oa *OrganizationsAccount) Attributes() organizationsAccountAttributes {
	return organizationsAccountAttributes{ref: terra.ReferenceResource(oa)}
}

// ImportState imports the given attribute values into [OrganizationsAccount]'s state.
func (oa *OrganizationsAccount) ImportState(av io.Reader) error {
	oa.state = &organizationsAccountState{}
	if err := json.NewDecoder(av).Decode(oa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", oa.Type(), oa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OrganizationsAccount] has state.
func (oa *OrganizationsAccount) State() (*organizationsAccountState, bool) {
	return oa.state, oa.state != nil
}

// StateMust returns the state for [OrganizationsAccount]. Panics if the state is nil.
func (oa *OrganizationsAccount) StateMust() *organizationsAccountState {
	if oa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", oa.Type(), oa.LocalName()))
	}
	return oa.state
}

// OrganizationsAccountArgs contains the configurations for aws_organizations_account.
type OrganizationsAccountArgs struct {
	// CloseOnDeletion: bool, optional
	CloseOnDeletion terra.BoolValue `hcl:"close_on_deletion,attr"`
	// CreateGovcloud: bool, optional
	CreateGovcloud terra.BoolValue `hcl:"create_govcloud,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
	// IamUserAccessToBilling: string, optional
	IamUserAccessToBilling terra.StringValue `hcl:"iam_user_access_to_billing,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ParentId: string, optional
	ParentId terra.StringValue `hcl:"parent_id,attr"`
	// RoleName: string, optional
	RoleName terra.StringValue `hcl:"role_name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type organizationsAccountAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_organizations_account.
func (oa organizationsAccountAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("arn"))
}

// CloseOnDeletion returns a reference to field close_on_deletion of aws_organizations_account.
func (oa organizationsAccountAttributes) CloseOnDeletion() terra.BoolValue {
	return terra.ReferenceAsBool(oa.ref.Append("close_on_deletion"))
}

// CreateGovcloud returns a reference to field create_govcloud of aws_organizations_account.
func (oa organizationsAccountAttributes) CreateGovcloud() terra.BoolValue {
	return terra.ReferenceAsBool(oa.ref.Append("create_govcloud"))
}

// Email returns a reference to field email of aws_organizations_account.
func (oa organizationsAccountAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("email"))
}

// GovcloudId returns a reference to field govcloud_id of aws_organizations_account.
func (oa organizationsAccountAttributes) GovcloudId() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("govcloud_id"))
}

// IamUserAccessToBilling returns a reference to field iam_user_access_to_billing of aws_organizations_account.
func (oa organizationsAccountAttributes) IamUserAccessToBilling() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("iam_user_access_to_billing"))
}

// Id returns a reference to field id of aws_organizations_account.
func (oa organizationsAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("id"))
}

// JoinedMethod returns a reference to field joined_method of aws_organizations_account.
func (oa organizationsAccountAttributes) JoinedMethod() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("joined_method"))
}

// JoinedTimestamp returns a reference to field joined_timestamp of aws_organizations_account.
func (oa organizationsAccountAttributes) JoinedTimestamp() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("joined_timestamp"))
}

// Name returns a reference to field name of aws_organizations_account.
func (oa organizationsAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("name"))
}

// ParentId returns a reference to field parent_id of aws_organizations_account.
func (oa organizationsAccountAttributes) ParentId() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("parent_id"))
}

// RoleName returns a reference to field role_name of aws_organizations_account.
func (oa organizationsAccountAttributes) RoleName() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("role_name"))
}

// Status returns a reference to field status of aws_organizations_account.
func (oa organizationsAccountAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(oa.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_organizations_account.
func (oa organizationsAccountAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](oa.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_organizations_account.
func (oa organizationsAccountAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](oa.ref.Append("tags_all"))
}

type organizationsAccountState struct {
	Arn                    string            `json:"arn"`
	CloseOnDeletion        bool              `json:"close_on_deletion"`
	CreateGovcloud         bool              `json:"create_govcloud"`
	Email                  string            `json:"email"`
	GovcloudId             string            `json:"govcloud_id"`
	IamUserAccessToBilling string            `json:"iam_user_access_to_billing"`
	Id                     string            `json:"id"`
	JoinedMethod           string            `json:"joined_method"`
	JoinedTimestamp        string            `json:"joined_timestamp"`
	Name                   string            `json:"name"`
	ParentId               string            `json:"parent_id"`
	RoleName               string            `json:"role_name"`
	Status                 string            `json:"status"`
	Tags                   map[string]string `json:"tags"`
	TagsAll                map[string]string `json:"tags_all"`
}
