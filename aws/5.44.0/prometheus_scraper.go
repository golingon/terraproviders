// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	prometheusscraper "github.com/golingon/terraproviders/aws/5.44.0/prometheusscraper"
	"io"
)

// NewPrometheusScraper creates a new instance of [PrometheusScraper].
func NewPrometheusScraper(name string, args PrometheusScraperArgs) *PrometheusScraper {
	return &PrometheusScraper{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PrometheusScraper)(nil)

// PrometheusScraper represents the Terraform resource aws_prometheus_scraper.
type PrometheusScraper struct {
	Name      string
	Args      PrometheusScraperArgs
	state     *prometheusScraperState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PrometheusScraper].
func (ps *PrometheusScraper) Type() string {
	return "aws_prometheus_scraper"
}

// LocalName returns the local name for [PrometheusScraper].
func (ps *PrometheusScraper) LocalName() string {
	return ps.Name
}

// Configuration returns the configuration (args) for [PrometheusScraper].
func (ps *PrometheusScraper) Configuration() interface{} {
	return ps.Args
}

// DependOn is used for other resources to depend on [PrometheusScraper].
func (ps *PrometheusScraper) DependOn() terra.Reference {
	return terra.ReferenceResource(ps)
}

// Dependencies returns the list of resources [PrometheusScraper] depends_on.
func (ps *PrometheusScraper) Dependencies() terra.Dependencies {
	return ps.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PrometheusScraper].
func (ps *PrometheusScraper) LifecycleManagement() *terra.Lifecycle {
	return ps.Lifecycle
}

// Attributes returns the attributes for [PrometheusScraper].
func (ps *PrometheusScraper) Attributes() prometheusScraperAttributes {
	return prometheusScraperAttributes{ref: terra.ReferenceResource(ps)}
}

// ImportState imports the given attribute values into [PrometheusScraper]'s state.
func (ps *PrometheusScraper) ImportState(av io.Reader) error {
	ps.state = &prometheusScraperState{}
	if err := json.NewDecoder(av).Decode(ps.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ps.Type(), ps.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PrometheusScraper] has state.
func (ps *PrometheusScraper) State() (*prometheusScraperState, bool) {
	return ps.state, ps.state != nil
}

// StateMust returns the state for [PrometheusScraper]. Panics if the state is nil.
func (ps *PrometheusScraper) StateMust() *prometheusScraperState {
	if ps.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ps.Type(), ps.LocalName()))
	}
	return ps.state
}

// PrometheusScraperArgs contains the configurations for aws_prometheus_scraper.
type PrometheusScraperArgs struct {
	// Alias: string, optional
	Alias terra.StringValue `hcl:"alias,attr"`
	// ScrapeConfiguration: string, required
	ScrapeConfiguration terra.StringValue `hcl:"scrape_configuration,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Destination: min=0
	Destination []prometheusscraper.Destination `hcl:"destination,block" validate:"min=0"`
	// Source: min=0
	Source []prometheusscraper.Source `hcl:"source,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *prometheusscraper.Timeouts `hcl:"timeouts,block"`
}
type prometheusScraperAttributes struct {
	ref terra.Reference
}

// Alias returns a reference to field alias of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) Alias() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("alias"))
}

// Arn returns a reference to field arn of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("arn"))
}

// Id returns a reference to field id of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("id"))
}

// RoleArn returns a reference to field role_arn of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("role_arn"))
}

// ScrapeConfiguration returns a reference to field scrape_configuration of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) ScrapeConfiguration() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("scrape_configuration"))
}

// Tags returns a reference to field tags of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ps.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_prometheus_scraper.
func (ps prometheusScraperAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ps.ref.Append("tags_all"))
}

func (ps prometheusScraperAttributes) Destination() terra.ListValue[prometheusscraper.DestinationAttributes] {
	return terra.ReferenceAsList[prometheusscraper.DestinationAttributes](ps.ref.Append("destination"))
}

func (ps prometheusScraperAttributes) Source() terra.ListValue[prometheusscraper.SourceAttributes] {
	return terra.ReferenceAsList[prometheusscraper.SourceAttributes](ps.ref.Append("source"))
}

func (ps prometheusScraperAttributes) Timeouts() prometheusscraper.TimeoutsAttributes {
	return terra.ReferenceAsSingle[prometheusscraper.TimeoutsAttributes](ps.ref.Append("timeouts"))
}

type prometheusScraperState struct {
	Alias               string                               `json:"alias"`
	Arn                 string                               `json:"arn"`
	Id                  string                               `json:"id"`
	RoleArn             string                               `json:"role_arn"`
	ScrapeConfiguration string                               `json:"scrape_configuration"`
	Tags                map[string]string                    `json:"tags"`
	TagsAll             map[string]string                    `json:"tags_all"`
	Destination         []prometheusscraper.DestinationState `json:"destination"`
	Source              []prometheusscraper.SourceState      `json:"source"`
	Timeouts            *prometheusscraper.TimeoutsState     `json:"timeouts"`
}
