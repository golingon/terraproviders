// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewOpensearchserverlessSecurityPolicy creates a new instance of [OpensearchserverlessSecurityPolicy].
func NewOpensearchserverlessSecurityPolicy(name string, args OpensearchserverlessSecurityPolicyArgs) *OpensearchserverlessSecurityPolicy {
	return &OpensearchserverlessSecurityPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OpensearchserverlessSecurityPolicy)(nil)

// OpensearchserverlessSecurityPolicy represents the Terraform resource aws_opensearchserverless_security_policy.
type OpensearchserverlessSecurityPolicy struct {
	Name      string
	Args      OpensearchserverlessSecurityPolicyArgs
	state     *opensearchserverlessSecurityPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OpensearchserverlessSecurityPolicy].
func (osp *OpensearchserverlessSecurityPolicy) Type() string {
	return "aws_opensearchserverless_security_policy"
}

// LocalName returns the local name for [OpensearchserverlessSecurityPolicy].
func (osp *OpensearchserverlessSecurityPolicy) LocalName() string {
	return osp.Name
}

// Configuration returns the configuration (args) for [OpensearchserverlessSecurityPolicy].
func (osp *OpensearchserverlessSecurityPolicy) Configuration() interface{} {
	return osp.Args
}

// DependOn is used for other resources to depend on [OpensearchserverlessSecurityPolicy].
func (osp *OpensearchserverlessSecurityPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(osp)
}

// Dependencies returns the list of resources [OpensearchserverlessSecurityPolicy] depends_on.
func (osp *OpensearchserverlessSecurityPolicy) Dependencies() terra.Dependencies {
	return osp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OpensearchserverlessSecurityPolicy].
func (osp *OpensearchserverlessSecurityPolicy) LifecycleManagement() *terra.Lifecycle {
	return osp.Lifecycle
}

// Attributes returns the attributes for [OpensearchserverlessSecurityPolicy].
func (osp *OpensearchserverlessSecurityPolicy) Attributes() opensearchserverlessSecurityPolicyAttributes {
	return opensearchserverlessSecurityPolicyAttributes{ref: terra.ReferenceResource(osp)}
}

// ImportState imports the given attribute values into [OpensearchserverlessSecurityPolicy]'s state.
func (osp *OpensearchserverlessSecurityPolicy) ImportState(av io.Reader) error {
	osp.state = &opensearchserverlessSecurityPolicyState{}
	if err := json.NewDecoder(av).Decode(osp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", osp.Type(), osp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OpensearchserverlessSecurityPolicy] has state.
func (osp *OpensearchserverlessSecurityPolicy) State() (*opensearchserverlessSecurityPolicyState, bool) {
	return osp.state, osp.state != nil
}

// StateMust returns the state for [OpensearchserverlessSecurityPolicy]. Panics if the state is nil.
func (osp *OpensearchserverlessSecurityPolicy) StateMust() *opensearchserverlessSecurityPolicyState {
	if osp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", osp.Type(), osp.LocalName()))
	}
	return osp.state
}

// OpensearchserverlessSecurityPolicyArgs contains the configurations for aws_opensearchserverless_security_policy.
type OpensearchserverlessSecurityPolicyArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}
type opensearchserverlessSecurityPolicyAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of aws_opensearchserverless_security_policy.
func (osp opensearchserverlessSecurityPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(osp.ref.Append("description"))
}

// Id returns a reference to field id of aws_opensearchserverless_security_policy.
func (osp opensearchserverlessSecurityPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(osp.ref.Append("id"))
}

// Name returns a reference to field name of aws_opensearchserverless_security_policy.
func (osp opensearchserverlessSecurityPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(osp.ref.Append("name"))
}

// Policy returns a reference to field policy of aws_opensearchserverless_security_policy.
func (osp opensearchserverlessSecurityPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(osp.ref.Append("policy"))
}

// PolicyVersion returns a reference to field policy_version of aws_opensearchserverless_security_policy.
func (osp opensearchserverlessSecurityPolicyAttributes) PolicyVersion() terra.StringValue {
	return terra.ReferenceAsString(osp.ref.Append("policy_version"))
}

// Type returns a reference to field type of aws_opensearchserverless_security_policy.
func (osp opensearchserverlessSecurityPolicyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(osp.ref.Append("type"))
}

type opensearchserverlessSecurityPolicyState struct {
	Description   string `json:"description"`
	Id            string `json:"id"`
	Name          string `json:"name"`
	Policy        string `json:"policy"`
	PolicyVersion string `json:"policy_version"`
	Type          string `json:"type"`
}
