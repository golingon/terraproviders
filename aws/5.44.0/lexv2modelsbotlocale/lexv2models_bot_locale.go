// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package lexv2modelsbotlocale

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type VoiceSettings struct {
	// Engine: string, optional
	Engine terra.StringValue `hcl:"engine,attr"`
	// VoiceId: string, required
	VoiceId terra.StringValue `hcl:"voice_id,attr" validate:"required"`
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type VoiceSettingsAttributes struct {
	ref terra.Reference
}

func (vs VoiceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs VoiceSettingsAttributes) InternalWithRef(ref terra.Reference) VoiceSettingsAttributes {
	return VoiceSettingsAttributes{ref: ref}
}

func (vs VoiceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs VoiceSettingsAttributes) Engine() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("engine"))
}

func (vs VoiceSettingsAttributes) VoiceId() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("voice_id"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type VoiceSettingsState struct {
	Engine  string `json:"engine"`
	VoiceId string `json:"voice_id"`
}
