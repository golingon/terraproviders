// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package sagemakerspace

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type OwnershipSettings struct {
	// OwnerUserProfileName: string, required
	OwnerUserProfileName terra.StringValue `hcl:"owner_user_profile_name,attr" validate:"required"`
}

type SpaceSettings struct {
	// AppType: string, optional
	AppType terra.StringValue `hcl:"app_type,attr"`
	// CodeEditorAppSettings: optional
	CodeEditorAppSettings *CodeEditorAppSettings `hcl:"code_editor_app_settings,block"`
	// CustomFileSystem: min=0
	CustomFileSystem []CustomFileSystem `hcl:"custom_file_system,block" validate:"min=0"`
	// JupyterLabAppSettings: optional
	JupyterLabAppSettings *JupyterLabAppSettings `hcl:"jupyter_lab_app_settings,block"`
	// JupyterServerAppSettings: optional
	JupyterServerAppSettings *JupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// KernelGatewayAppSettings: optional
	KernelGatewayAppSettings *KernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
	// SpaceStorageSettings: optional
	SpaceStorageSettings *SpaceStorageSettings `hcl:"space_storage_settings,block"`
}

type CodeEditorAppSettings struct {
	// CodeEditorAppSettingsDefaultResourceSpec: required
	DefaultResourceSpec *CodeEditorAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block" validate:"required"`
}

type CodeEditorAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type CustomFileSystem struct {
	// EfsFileSystem: required
	EfsFileSystem *EfsFileSystem `hcl:"efs_file_system,block" validate:"required"`
}

type EfsFileSystem struct {
	// FileSystemId: string, required
	FileSystemId terra.StringValue `hcl:"file_system_id,attr" validate:"required"`
}

type JupyterLabAppSettings struct {
	// JupyterLabAppSettingsCodeRepository: min=0,max=10
	CodeRepository []JupyterLabAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// JupyterLabAppSettingsDefaultResourceSpec: required
	DefaultResourceSpec *JupyterLabAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block" validate:"required"`
}

type JupyterLabAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type JupyterLabAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type JupyterServerAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// JupyterServerAppSettingsCodeRepository: min=0,max=10
	CodeRepository []JupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// JupyterServerAppSettingsDefaultResourceSpec: required
	DefaultResourceSpec *JupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block" validate:"required"`
}

type JupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type JupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type KernelGatewayAppSettings struct {
	// LifecycleConfigArns: set of string, optional
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// CustomImage: min=0,max=200
	CustomImage []CustomImage `hcl:"custom_image,block" validate:"min=0,max=200"`
	// KernelGatewayAppSettingsDefaultResourceSpec: required
	DefaultResourceSpec *KernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block" validate:"required"`
}

type CustomImage struct {
	// AppImageConfigName: string, required
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber: number, optional
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type KernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType: string, optional
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn: string, optional
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn: string, optional
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionAlias: string, optional
	SagemakerImageVersionAlias terra.StringValue `hcl:"sagemaker_image_version_alias,attr"`
	// SagemakerImageVersionArn: string, optional
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type SpaceStorageSettings struct {
	// EbsStorageSettings: required
	EbsStorageSettings *EbsStorageSettings `hcl:"ebs_storage_settings,block" validate:"required"`
}

type EbsStorageSettings struct {
	// EbsVolumeSizeInGb: number, required
	EbsVolumeSizeInGb terra.NumberValue `hcl:"ebs_volume_size_in_gb,attr" validate:"required"`
}

type SpaceSharingSettings struct {
	// SharingType: string, required
	SharingType terra.StringValue `hcl:"sharing_type,attr" validate:"required"`
}

type OwnershipSettingsAttributes struct {
	ref terra.Reference
}

func (os OwnershipSettingsAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os OwnershipSettingsAttributes) InternalWithRef(ref terra.Reference) OwnershipSettingsAttributes {
	return OwnershipSettingsAttributes{ref: ref}
}

func (os OwnershipSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os OwnershipSettingsAttributes) OwnerUserProfileName() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("owner_user_profile_name"))
}

type SpaceSettingsAttributes struct {
	ref terra.Reference
}

func (ss SpaceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss SpaceSettingsAttributes) InternalWithRef(ref terra.Reference) SpaceSettingsAttributes {
	return SpaceSettingsAttributes{ref: ref}
}

func (ss SpaceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss SpaceSettingsAttributes) AppType() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("app_type"))
}

func (ss SpaceSettingsAttributes) CodeEditorAppSettings() terra.ListValue[CodeEditorAppSettingsAttributes] {
	return terra.ReferenceAsList[CodeEditorAppSettingsAttributes](ss.ref.Append("code_editor_app_settings"))
}

func (ss SpaceSettingsAttributes) CustomFileSystem() terra.ListValue[CustomFileSystemAttributes] {
	return terra.ReferenceAsList[CustomFileSystemAttributes](ss.ref.Append("custom_file_system"))
}

func (ss SpaceSettingsAttributes) JupyterLabAppSettings() terra.ListValue[JupyterLabAppSettingsAttributes] {
	return terra.ReferenceAsList[JupyterLabAppSettingsAttributes](ss.ref.Append("jupyter_lab_app_settings"))
}

func (ss SpaceSettingsAttributes) JupyterServerAppSettings() terra.ListValue[JupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[JupyterServerAppSettingsAttributes](ss.ref.Append("jupyter_server_app_settings"))
}

func (ss SpaceSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[KernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[KernelGatewayAppSettingsAttributes](ss.ref.Append("kernel_gateway_app_settings"))
}

func (ss SpaceSettingsAttributes) SpaceStorageSettings() terra.ListValue[SpaceStorageSettingsAttributes] {
	return terra.ReferenceAsList[SpaceStorageSettingsAttributes](ss.ref.Append("space_storage_settings"))
}

type CodeEditorAppSettingsAttributes struct {
	ref terra.Reference
}

func (ceas CodeEditorAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ceas.ref, nil
}

func (ceas CodeEditorAppSettingsAttributes) InternalWithRef(ref terra.Reference) CodeEditorAppSettingsAttributes {
	return CodeEditorAppSettingsAttributes{ref: ref}
}

func (ceas CodeEditorAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ceas.ref.InternalTokens()
}

func (ceas CodeEditorAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[CodeEditorAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[CodeEditorAppSettingsDefaultResourceSpecAttributes](ceas.ref.Append("default_resource_spec"))
}

type CodeEditorAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) CodeEditorAppSettingsDefaultResourceSpecAttributes {
	return CodeEditorAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs CodeEditorAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type CustomFileSystemAttributes struct {
	ref terra.Reference
}

func (cfs CustomFileSystemAttributes) InternalRef() (terra.Reference, error) {
	return cfs.ref, nil
}

func (cfs CustomFileSystemAttributes) InternalWithRef(ref terra.Reference) CustomFileSystemAttributes {
	return CustomFileSystemAttributes{ref: ref}
}

func (cfs CustomFileSystemAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cfs.ref.InternalTokens()
}

func (cfs CustomFileSystemAttributes) EfsFileSystem() terra.ListValue[EfsFileSystemAttributes] {
	return terra.ReferenceAsList[EfsFileSystemAttributes](cfs.ref.Append("efs_file_system"))
}

type EfsFileSystemAttributes struct {
	ref terra.Reference
}

func (efs EfsFileSystemAttributes) InternalRef() (terra.Reference, error) {
	return efs.ref, nil
}

func (efs EfsFileSystemAttributes) InternalWithRef(ref terra.Reference) EfsFileSystemAttributes {
	return EfsFileSystemAttributes{ref: ref}
}

func (efs EfsFileSystemAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efs.ref.InternalTokens()
}

func (efs EfsFileSystemAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efs.ref.Append("file_system_id"))
}

type JupyterLabAppSettingsAttributes struct {
	ref terra.Reference
}

func (jlas JupyterLabAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jlas.ref, nil
}

func (jlas JupyterLabAppSettingsAttributes) InternalWithRef(ref terra.Reference) JupyterLabAppSettingsAttributes {
	return JupyterLabAppSettingsAttributes{ref: ref}
}

func (jlas JupyterLabAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jlas.ref.InternalTokens()
}

func (jlas JupyterLabAppSettingsAttributes) CodeRepository() terra.SetValue[JupyterLabAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[JupyterLabAppSettingsCodeRepositoryAttributes](jlas.ref.Append("code_repository"))
}

func (jlas JupyterLabAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[JupyterLabAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[JupyterLabAppSettingsDefaultResourceSpecAttributes](jlas.ref.Append("default_resource_spec"))
}

type JupyterLabAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr JupyterLabAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr JupyterLabAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) JupyterLabAppSettingsCodeRepositoryAttributes {
	return JupyterLabAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr JupyterLabAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr JupyterLabAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type JupyterLabAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) JupyterLabAppSettingsDefaultResourceSpecAttributes {
	return JupyterLabAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs JupyterLabAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type JupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas JupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas JupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) JupyterServerAppSettingsAttributes {
	return JupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas JupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas JupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas JupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[JupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[JupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas JupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[JupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[JupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type JupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr JupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr JupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) JupyterServerAppSettingsCodeRepositoryAttributes {
	return JupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr JupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr JupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type JupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) JupyterServerAppSettingsDefaultResourceSpecAttributes {
	return JupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs JupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type KernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas KernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas KernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) KernelGatewayAppSettingsAttributes {
	return KernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas KernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas KernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas KernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[CustomImageAttributes] {
	return terra.ReferenceAsList[CustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas KernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[KernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[KernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type CustomImageAttributes struct {
	ref terra.Reference
}

func (ci CustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci CustomImageAttributes) InternalWithRef(ref terra.Reference) CustomImageAttributes {
	return CustomImageAttributes{ref: ref}
}

func (ci CustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci CustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci CustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci CustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type KernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) KernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return KernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionAlias() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_alias"))
}

func (drs KernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type SpaceStorageSettingsAttributes struct {
	ref terra.Reference
}

func (sss SpaceStorageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return sss.ref, nil
}

func (sss SpaceStorageSettingsAttributes) InternalWithRef(ref terra.Reference) SpaceStorageSettingsAttributes {
	return SpaceStorageSettingsAttributes{ref: ref}
}

func (sss SpaceStorageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sss.ref.InternalTokens()
}

func (sss SpaceStorageSettingsAttributes) EbsStorageSettings() terra.ListValue[EbsStorageSettingsAttributes] {
	return terra.ReferenceAsList[EbsStorageSettingsAttributes](sss.ref.Append("ebs_storage_settings"))
}

type EbsStorageSettingsAttributes struct {
	ref terra.Reference
}

func (ess EbsStorageSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ess.ref, nil
}

func (ess EbsStorageSettingsAttributes) InternalWithRef(ref terra.Reference) EbsStorageSettingsAttributes {
	return EbsStorageSettingsAttributes{ref: ref}
}

func (ess EbsStorageSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ess.ref.InternalTokens()
}

func (ess EbsStorageSettingsAttributes) EbsVolumeSizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(ess.ref.Append("ebs_volume_size_in_gb"))
}

type SpaceSharingSettingsAttributes struct {
	ref terra.Reference
}

func (sss SpaceSharingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return sss.ref, nil
}

func (sss SpaceSharingSettingsAttributes) InternalWithRef(ref terra.Reference) SpaceSharingSettingsAttributes {
	return SpaceSharingSettingsAttributes{ref: ref}
}

func (sss SpaceSharingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sss.ref.InternalTokens()
}

func (sss SpaceSharingSettingsAttributes) SharingType() terra.StringValue {
	return terra.ReferenceAsString(sss.ref.Append("sharing_type"))
}

type OwnershipSettingsState struct {
	OwnerUserProfileName string `json:"owner_user_profile_name"`
}

type SpaceSettingsState struct {
	AppType                  string                          `json:"app_type"`
	CodeEditorAppSettings    []CodeEditorAppSettingsState    `json:"code_editor_app_settings"`
	CustomFileSystem         []CustomFileSystemState         `json:"custom_file_system"`
	JupyterLabAppSettings    []JupyterLabAppSettingsState    `json:"jupyter_lab_app_settings"`
	JupyterServerAppSettings []JupyterServerAppSettingsState `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings []KernelGatewayAppSettingsState `json:"kernel_gateway_app_settings"`
	SpaceStorageSettings     []SpaceStorageSettingsState     `json:"space_storage_settings"`
}

type CodeEditorAppSettingsState struct {
	DefaultResourceSpec []CodeEditorAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type CodeEditorAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type CustomFileSystemState struct {
	EfsFileSystem []EfsFileSystemState `json:"efs_file_system"`
}

type EfsFileSystemState struct {
	FileSystemId string `json:"file_system_id"`
}

type JupyterLabAppSettingsState struct {
	CodeRepository      []JupyterLabAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []JupyterLabAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type JupyterLabAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type JupyterLabAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type JupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                           `json:"lifecycle_config_arns"`
	CodeRepository      []JupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []JupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type JupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type JupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type KernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                           `json:"lifecycle_config_arns"`
	CustomImage         []CustomImageState                                 `json:"custom_image"`
	DefaultResourceSpec []KernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type CustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type KernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType               string `json:"instance_type"`
	LifecycleConfigArn         string `json:"lifecycle_config_arn"`
	SagemakerImageArn          string `json:"sagemaker_image_arn"`
	SagemakerImageVersionAlias string `json:"sagemaker_image_version_alias"`
	SagemakerImageVersionArn   string `json:"sagemaker_image_version_arn"`
}

type SpaceStorageSettingsState struct {
	EbsStorageSettings []EbsStorageSettingsState `json:"ebs_storage_settings"`
}

type EbsStorageSettingsState struct {
	EbsVolumeSizeInGb float64 `json:"ebs_volume_size_in_gb"`
}

type SpaceSharingSettingsState struct {
	SharingType string `json:"sharing_type"`
}
