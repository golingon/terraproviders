// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package securitylakesubscribernotification

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Configuration struct {
	// HttpsNotificationConfiguration: min=0
	HttpsNotificationConfiguration []HttpsNotificationConfiguration `hcl:"https_notification_configuration,block" validate:"min=0"`
	// SqsNotificationConfiguration: min=0
	SqsNotificationConfiguration []SqsNotificationConfiguration `hcl:"sqs_notification_configuration,block" validate:"min=0"`
}

type HttpsNotificationConfiguration struct {
	// AuthorizationApiKeyName: string, optional
	AuthorizationApiKeyName terra.StringValue `hcl:"authorization_api_key_name,attr"`
	// AuthorizationApiKeyValue: string, optional
	AuthorizationApiKeyValue terra.StringValue `hcl:"authorization_api_key_value,attr"`
	// Endpoint: string, optional
	Endpoint terra.StringValue `hcl:"endpoint,attr"`
	// HttpMethod: string, optional
	HttpMethod terra.StringValue `hcl:"http_method,attr"`
	// TargetRoleArn: string, optional
	TargetRoleArn terra.StringValue `hcl:"target_role_arn,attr"`
}

type SqsNotificationConfiguration struct{}

type ConfigurationAttributes struct {
	ref terra.Reference
}

func (c ConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ConfigurationAttributes) InternalWithRef(ref terra.Reference) ConfigurationAttributes {
	return ConfigurationAttributes{ref: ref}
}

func (c ConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ConfigurationAttributes) HttpsNotificationConfiguration() terra.ListValue[HttpsNotificationConfigurationAttributes] {
	return terra.ReferenceAsList[HttpsNotificationConfigurationAttributes](c.ref.Append("https_notification_configuration"))
}

func (c ConfigurationAttributes) SqsNotificationConfiguration() terra.ListValue[SqsNotificationConfigurationAttributes] {
	return terra.ReferenceAsList[SqsNotificationConfigurationAttributes](c.ref.Append("sqs_notification_configuration"))
}

type HttpsNotificationConfigurationAttributes struct {
	ref terra.Reference
}

func (hnc HttpsNotificationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return hnc.ref, nil
}

func (hnc HttpsNotificationConfigurationAttributes) InternalWithRef(ref terra.Reference) HttpsNotificationConfigurationAttributes {
	return HttpsNotificationConfigurationAttributes{ref: ref}
}

func (hnc HttpsNotificationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hnc.ref.InternalTokens()
}

func (hnc HttpsNotificationConfigurationAttributes) AuthorizationApiKeyName() terra.StringValue {
	return terra.ReferenceAsString(hnc.ref.Append("authorization_api_key_name"))
}

func (hnc HttpsNotificationConfigurationAttributes) AuthorizationApiKeyValue() terra.StringValue {
	return terra.ReferenceAsString(hnc.ref.Append("authorization_api_key_value"))
}

func (hnc HttpsNotificationConfigurationAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(hnc.ref.Append("endpoint"))
}

func (hnc HttpsNotificationConfigurationAttributes) HttpMethod() terra.StringValue {
	return terra.ReferenceAsString(hnc.ref.Append("http_method"))
}

func (hnc HttpsNotificationConfigurationAttributes) TargetRoleArn() terra.StringValue {
	return terra.ReferenceAsString(hnc.ref.Append("target_role_arn"))
}

type SqsNotificationConfigurationAttributes struct {
	ref terra.Reference
}

func (snc SqsNotificationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return snc.ref, nil
}

func (snc SqsNotificationConfigurationAttributes) InternalWithRef(ref terra.Reference) SqsNotificationConfigurationAttributes {
	return SqsNotificationConfigurationAttributes{ref: ref}
}

func (snc SqsNotificationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return snc.ref.InternalTokens()
}

type ConfigurationState struct {
	HttpsNotificationConfiguration []HttpsNotificationConfigurationState `json:"https_notification_configuration"`
	SqsNotificationConfiguration   []SqsNotificationConfigurationState   `json:"sqs_notification_configuration"`
}

type HttpsNotificationConfigurationState struct {
	AuthorizationApiKeyName  string `json:"authorization_api_key_name"`
	AuthorizationApiKeyValue string `json:"authorization_api_key_value"`
	Endpoint                 string `json:"endpoint"`
	HttpMethod               string `json:"http_method"`
	TargetRoleArn            string `json:"target_role_arn"`
}

type SqsNotificationConfigurationState struct{}
