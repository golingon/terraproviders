// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	efsreplicationconfiguration "github.com/golingon/terraproviders/aws/5.44.0/efsreplicationconfiguration"
	"io"
)

// NewEfsReplicationConfiguration creates a new instance of [EfsReplicationConfiguration].
func NewEfsReplicationConfiguration(name string, args EfsReplicationConfigurationArgs) *EfsReplicationConfiguration {
	return &EfsReplicationConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*EfsReplicationConfiguration)(nil)

// EfsReplicationConfiguration represents the Terraform resource aws_efs_replication_configuration.
type EfsReplicationConfiguration struct {
	Name      string
	Args      EfsReplicationConfigurationArgs
	state     *efsReplicationConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [EfsReplicationConfiguration].
func (erc *EfsReplicationConfiguration) Type() string {
	return "aws_efs_replication_configuration"
}

// LocalName returns the local name for [EfsReplicationConfiguration].
func (erc *EfsReplicationConfiguration) LocalName() string {
	return erc.Name
}

// Configuration returns the configuration (args) for [EfsReplicationConfiguration].
func (erc *EfsReplicationConfiguration) Configuration() interface{} {
	return erc.Args
}

// DependOn is used for other resources to depend on [EfsReplicationConfiguration].
func (erc *EfsReplicationConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(erc)
}

// Dependencies returns the list of resources [EfsReplicationConfiguration] depends_on.
func (erc *EfsReplicationConfiguration) Dependencies() terra.Dependencies {
	return erc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [EfsReplicationConfiguration].
func (erc *EfsReplicationConfiguration) LifecycleManagement() *terra.Lifecycle {
	return erc.Lifecycle
}

// Attributes returns the attributes for [EfsReplicationConfiguration].
func (erc *EfsReplicationConfiguration) Attributes() efsReplicationConfigurationAttributes {
	return efsReplicationConfigurationAttributes{ref: terra.ReferenceResource(erc)}
}

// ImportState imports the given attribute values into [EfsReplicationConfiguration]'s state.
func (erc *EfsReplicationConfiguration) ImportState(av io.Reader) error {
	erc.state = &efsReplicationConfigurationState{}
	if err := json.NewDecoder(av).Decode(erc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", erc.Type(), erc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [EfsReplicationConfiguration] has state.
func (erc *EfsReplicationConfiguration) State() (*efsReplicationConfigurationState, bool) {
	return erc.state, erc.state != nil
}

// StateMust returns the state for [EfsReplicationConfiguration]. Panics if the state is nil.
func (erc *EfsReplicationConfiguration) StateMust() *efsReplicationConfigurationState {
	if erc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", erc.Type(), erc.LocalName()))
	}
	return erc.state
}

// EfsReplicationConfigurationArgs contains the configurations for aws_efs_replication_configuration.
type EfsReplicationConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SourceFileSystemId: string, required
	SourceFileSystemId terra.StringValue `hcl:"source_file_system_id,attr" validate:"required"`
	// Destination: required
	Destination *efsreplicationconfiguration.Destination `hcl:"destination,block" validate:"required"`
	// Timeouts: optional
	Timeouts *efsreplicationconfiguration.Timeouts `hcl:"timeouts,block"`
}
type efsReplicationConfigurationAttributes struct {
	ref terra.Reference
}

// CreationTime returns a reference to field creation_time of aws_efs_replication_configuration.
func (erc efsReplicationConfigurationAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(erc.ref.Append("creation_time"))
}

// Id returns a reference to field id of aws_efs_replication_configuration.
func (erc efsReplicationConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(erc.ref.Append("id"))
}

// OriginalSourceFileSystemArn returns a reference to field original_source_file_system_arn of aws_efs_replication_configuration.
func (erc efsReplicationConfigurationAttributes) OriginalSourceFileSystemArn() terra.StringValue {
	return terra.ReferenceAsString(erc.ref.Append("original_source_file_system_arn"))
}

// SourceFileSystemArn returns a reference to field source_file_system_arn of aws_efs_replication_configuration.
func (erc efsReplicationConfigurationAttributes) SourceFileSystemArn() terra.StringValue {
	return terra.ReferenceAsString(erc.ref.Append("source_file_system_arn"))
}

// SourceFileSystemId returns a reference to field source_file_system_id of aws_efs_replication_configuration.
func (erc efsReplicationConfigurationAttributes) SourceFileSystemId() terra.StringValue {
	return terra.ReferenceAsString(erc.ref.Append("source_file_system_id"))
}

// SourceFileSystemRegion returns a reference to field source_file_system_region of aws_efs_replication_configuration.
func (erc efsReplicationConfigurationAttributes) SourceFileSystemRegion() terra.StringValue {
	return terra.ReferenceAsString(erc.ref.Append("source_file_system_region"))
}

func (erc efsReplicationConfigurationAttributes) Destination() terra.ListValue[efsreplicationconfiguration.DestinationAttributes] {
	return terra.ReferenceAsList[efsreplicationconfiguration.DestinationAttributes](erc.ref.Append("destination"))
}

func (erc efsReplicationConfigurationAttributes) Timeouts() efsreplicationconfiguration.TimeoutsAttributes {
	return terra.ReferenceAsSingle[efsreplicationconfiguration.TimeoutsAttributes](erc.ref.Append("timeouts"))
}

type efsReplicationConfigurationState struct {
	CreationTime                string                                         `json:"creation_time"`
	Id                          string                                         `json:"id"`
	OriginalSourceFileSystemArn string                                         `json:"original_source_file_system_arn"`
	SourceFileSystemArn         string                                         `json:"source_file_system_arn"`
	SourceFileSystemId          string                                         `json:"source_file_system_id"`
	SourceFileSystemRegion      string                                         `json:"source_file_system_region"`
	Destination                 []efsreplicationconfiguration.DestinationState `json:"destination"`
	Timeouts                    *efsreplicationconfiguration.TimeoutsState     `json:"timeouts"`
}
