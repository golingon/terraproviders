// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataappmeshvirtualgateway

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Spec struct {
	// BackendDefaults: min=0
	BackendDefaults []BackendDefaults `hcl:"backend_defaults,block" validate:"min=0"`
	// Listener: min=0
	Listener []Listener `hcl:"listener,block" validate:"min=0"`
	// Logging: min=0
	Logging []Logging `hcl:"logging,block" validate:"min=0"`
}

type BackendDefaults struct {
	// ClientPolicy: min=0
	ClientPolicy []ClientPolicy `hcl:"client_policy,block" validate:"min=0"`
}

type ClientPolicy struct {
	// ClientPolicyTls: min=0
	Tls []ClientPolicyTls `hcl:"tls,block" validate:"min=0"`
}

type ClientPolicyTls struct {
	// ClientPolicyTlsCertificate: min=0
	Certificate []ClientPolicyTlsCertificate `hcl:"certificate,block" validate:"min=0"`
	// ClientPolicyTlsValidation: min=0
	Validation []ClientPolicyTlsValidation `hcl:"validation,block" validate:"min=0"`
}

type ClientPolicyTlsCertificate struct {
	// ClientPolicyTlsCertificateFile: min=0
	File []ClientPolicyTlsCertificateFile `hcl:"file,block" validate:"min=0"`
	// ClientPolicyTlsCertificateSds: min=0
	Sds []ClientPolicyTlsCertificateSds `hcl:"sds,block" validate:"min=0"`
}

type ClientPolicyTlsCertificateFile struct{}

type ClientPolicyTlsCertificateSds struct{}

type ClientPolicyTlsValidation struct {
	// ClientPolicyTlsValidationSubjectAlternativeNames: min=0
	SubjectAlternativeNames []ClientPolicyTlsValidationSubjectAlternativeNames `hcl:"subject_alternative_names,block" validate:"min=0"`
	// ClientPolicyTlsValidationTrust: min=0
	Trust []ClientPolicyTlsValidationTrust `hcl:"trust,block" validate:"min=0"`
}

type ClientPolicyTlsValidationSubjectAlternativeNames struct {
	// ClientPolicyTlsValidationSubjectAlternativeNamesMatch: min=0
	Match []ClientPolicyTlsValidationSubjectAlternativeNamesMatch `hcl:"match,block" validate:"min=0"`
}

type ClientPolicyTlsValidationSubjectAlternativeNamesMatch struct{}

type ClientPolicyTlsValidationTrust struct {
	// TrustAcm: min=0
	Acm []TrustAcm `hcl:"acm,block" validate:"min=0"`
	// ClientPolicyTlsValidationTrustFile: min=0
	File []ClientPolicyTlsValidationTrustFile `hcl:"file,block" validate:"min=0"`
	// ClientPolicyTlsValidationTrustSds: min=0
	Sds []ClientPolicyTlsValidationTrustSds `hcl:"sds,block" validate:"min=0"`
}

type TrustAcm struct{}

type ClientPolicyTlsValidationTrustFile struct{}

type ClientPolicyTlsValidationTrustSds struct{}

type Listener struct {
	// ConnectionPool: min=0
	ConnectionPool []ConnectionPool `hcl:"connection_pool,block" validate:"min=0"`
	// HealthCheck: min=0
	HealthCheck []HealthCheck `hcl:"health_check,block" validate:"min=0"`
	// PortMapping: min=0
	PortMapping []PortMapping `hcl:"port_mapping,block" validate:"min=0"`
	// ListenerTls: min=0
	Tls []ListenerTls `hcl:"tls,block" validate:"min=0"`
}

type ConnectionPool struct {
	// Grpc: min=0
	Grpc []Grpc `hcl:"grpc,block" validate:"min=0"`
	// Http: min=0
	Http []Http `hcl:"http,block" validate:"min=0"`
	// Http2: min=0
	Http2 []Http2 `hcl:"http2,block" validate:"min=0"`
}

type Grpc struct{}

type Http struct{}

type Http2 struct{}

type HealthCheck struct{}

type PortMapping struct{}

type ListenerTls struct {
	// ListenerTlsCertificate: min=0
	Certificate []ListenerTlsCertificate `hcl:"certificate,block" validate:"min=0"`
	// ListenerTlsValidation: min=0
	Validation []ListenerTlsValidation `hcl:"validation,block" validate:"min=0"`
}

type ListenerTlsCertificate struct {
	// CertificateAcm: min=0
	Acm []CertificateAcm `hcl:"acm,block" validate:"min=0"`
	// ListenerTlsCertificateFile: min=0
	File []ListenerTlsCertificateFile `hcl:"file,block" validate:"min=0"`
	// ListenerTlsCertificateSds: min=0
	Sds []ListenerTlsCertificateSds `hcl:"sds,block" validate:"min=0"`
}

type CertificateAcm struct{}

type ListenerTlsCertificateFile struct{}

type ListenerTlsCertificateSds struct{}

type ListenerTlsValidation struct {
	// ListenerTlsValidationSubjectAlternativeNames: min=0
	SubjectAlternativeNames []ListenerTlsValidationSubjectAlternativeNames `hcl:"subject_alternative_names,block" validate:"min=0"`
	// ListenerTlsValidationTrust: min=0
	Trust []ListenerTlsValidationTrust `hcl:"trust,block" validate:"min=0"`
}

type ListenerTlsValidationSubjectAlternativeNames struct {
	// ListenerTlsValidationSubjectAlternativeNamesMatch: min=0
	Match []ListenerTlsValidationSubjectAlternativeNamesMatch `hcl:"match,block" validate:"min=0"`
}

type ListenerTlsValidationSubjectAlternativeNamesMatch struct{}

type ListenerTlsValidationTrust struct {
	// ListenerTlsValidationTrustFile: min=0
	File []ListenerTlsValidationTrustFile `hcl:"file,block" validate:"min=0"`
	// ListenerTlsValidationTrustSds: min=0
	Sds []ListenerTlsValidationTrustSds `hcl:"sds,block" validate:"min=0"`
}

type ListenerTlsValidationTrustFile struct{}

type ListenerTlsValidationTrustSds struct{}

type Logging struct {
	// AccessLog: min=0
	AccessLog []AccessLog `hcl:"access_log,block" validate:"min=0"`
}

type AccessLog struct {
	// AccessLogFile: min=0
	File []AccessLogFile `hcl:"file,block" validate:"min=0"`
}

type AccessLogFile struct {
	// Format: min=0
	Format []Format `hcl:"format,block" validate:"min=0"`
}

type Format struct {
	// Json: min=0
	Json []Json `hcl:"json,block" validate:"min=0"`
}

type Json struct{}

type SpecAttributes struct {
	ref terra.Reference
}

func (s SpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SpecAttributes) InternalWithRef(ref terra.Reference) SpecAttributes {
	return SpecAttributes{ref: ref}
}

func (s SpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SpecAttributes) BackendDefaults() terra.ListValue[BackendDefaultsAttributes] {
	return terra.ReferenceAsList[BackendDefaultsAttributes](s.ref.Append("backend_defaults"))
}

func (s SpecAttributes) Listener() terra.ListValue[ListenerAttributes] {
	return terra.ReferenceAsList[ListenerAttributes](s.ref.Append("listener"))
}

func (s SpecAttributes) Logging() terra.ListValue[LoggingAttributes] {
	return terra.ReferenceAsList[LoggingAttributes](s.ref.Append("logging"))
}

type BackendDefaultsAttributes struct {
	ref terra.Reference
}

func (bd BackendDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return bd.ref, nil
}

func (bd BackendDefaultsAttributes) InternalWithRef(ref terra.Reference) BackendDefaultsAttributes {
	return BackendDefaultsAttributes{ref: ref}
}

func (bd BackendDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bd.ref.InternalTokens()
}

func (bd BackendDefaultsAttributes) ClientPolicy() terra.ListValue[ClientPolicyAttributes] {
	return terra.ReferenceAsList[ClientPolicyAttributes](bd.ref.Append("client_policy"))
}

type ClientPolicyAttributes struct {
	ref terra.Reference
}

func (cp ClientPolicyAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp ClientPolicyAttributes) InternalWithRef(ref terra.Reference) ClientPolicyAttributes {
	return ClientPolicyAttributes{ref: ref}
}

func (cp ClientPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp ClientPolicyAttributes) Tls() terra.ListValue[ClientPolicyTlsAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsAttributes](cp.ref.Append("tls"))
}

type ClientPolicyTlsAttributes struct {
	ref terra.Reference
}

func (t ClientPolicyTlsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ClientPolicyTlsAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsAttributes {
	return ClientPolicyTlsAttributes{ref: ref}
}

func (t ClientPolicyTlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ClientPolicyTlsAttributes) Enforce() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("enforce"))
}

func (t ClientPolicyTlsAttributes) Ports() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](t.ref.Append("ports"))
}

func (t ClientPolicyTlsAttributes) Certificate() terra.ListValue[ClientPolicyTlsCertificateAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsCertificateAttributes](t.ref.Append("certificate"))
}

func (t ClientPolicyTlsAttributes) Validation() terra.ListValue[ClientPolicyTlsValidationAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsValidationAttributes](t.ref.Append("validation"))
}

type ClientPolicyTlsCertificateAttributes struct {
	ref terra.Reference
}

func (c ClientPolicyTlsCertificateAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ClientPolicyTlsCertificateAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsCertificateAttributes {
	return ClientPolicyTlsCertificateAttributes{ref: ref}
}

func (c ClientPolicyTlsCertificateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ClientPolicyTlsCertificateAttributes) File() terra.ListValue[ClientPolicyTlsCertificateFileAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsCertificateFileAttributes](c.ref.Append("file"))
}

func (c ClientPolicyTlsCertificateAttributes) Sds() terra.ListValue[ClientPolicyTlsCertificateSdsAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsCertificateSdsAttributes](c.ref.Append("sds"))
}

type ClientPolicyTlsCertificateFileAttributes struct {
	ref terra.Reference
}

func (f ClientPolicyTlsCertificateFileAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f ClientPolicyTlsCertificateFileAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsCertificateFileAttributes {
	return ClientPolicyTlsCertificateFileAttributes{ref: ref}
}

func (f ClientPolicyTlsCertificateFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f ClientPolicyTlsCertificateFileAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

func (f ClientPolicyTlsCertificateFileAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("private_key"))
}

type ClientPolicyTlsCertificateSdsAttributes struct {
	ref terra.Reference
}

func (s ClientPolicyTlsCertificateSdsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ClientPolicyTlsCertificateSdsAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsCertificateSdsAttributes {
	return ClientPolicyTlsCertificateSdsAttributes{ref: ref}
}

func (s ClientPolicyTlsCertificateSdsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ClientPolicyTlsCertificateSdsAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type ClientPolicyTlsValidationAttributes struct {
	ref terra.Reference
}

func (v ClientPolicyTlsValidationAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ClientPolicyTlsValidationAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsValidationAttributes {
	return ClientPolicyTlsValidationAttributes{ref: ref}
}

func (v ClientPolicyTlsValidationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v ClientPolicyTlsValidationAttributes) SubjectAlternativeNames() terra.ListValue[ClientPolicyTlsValidationSubjectAlternativeNamesAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsValidationSubjectAlternativeNamesAttributes](v.ref.Append("subject_alternative_names"))
}

func (v ClientPolicyTlsValidationAttributes) Trust() terra.ListValue[ClientPolicyTlsValidationTrustAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsValidationTrustAttributes](v.ref.Append("trust"))
}

type ClientPolicyTlsValidationSubjectAlternativeNamesAttributes struct {
	ref terra.Reference
}

func (san ClientPolicyTlsValidationSubjectAlternativeNamesAttributes) InternalRef() (terra.Reference, error) {
	return san.ref, nil
}

func (san ClientPolicyTlsValidationSubjectAlternativeNamesAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsValidationSubjectAlternativeNamesAttributes {
	return ClientPolicyTlsValidationSubjectAlternativeNamesAttributes{ref: ref}
}

func (san ClientPolicyTlsValidationSubjectAlternativeNamesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return san.ref.InternalTokens()
}

func (san ClientPolicyTlsValidationSubjectAlternativeNamesAttributes) Match() terra.ListValue[ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes](san.ref.Append("match"))
}

type ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes struct {
	ref terra.Reference
}

func (m ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes {
	return ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes{ref: ref}
}

func (m ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m ClientPolicyTlsValidationSubjectAlternativeNamesMatchAttributes) Exact() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("exact"))
}

type ClientPolicyTlsValidationTrustAttributes struct {
	ref terra.Reference
}

func (t ClientPolicyTlsValidationTrustAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ClientPolicyTlsValidationTrustAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsValidationTrustAttributes {
	return ClientPolicyTlsValidationTrustAttributes{ref: ref}
}

func (t ClientPolicyTlsValidationTrustAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ClientPolicyTlsValidationTrustAttributes) Acm() terra.ListValue[TrustAcmAttributes] {
	return terra.ReferenceAsList[TrustAcmAttributes](t.ref.Append("acm"))
}

func (t ClientPolicyTlsValidationTrustAttributes) File() terra.ListValue[ClientPolicyTlsValidationTrustFileAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsValidationTrustFileAttributes](t.ref.Append("file"))
}

func (t ClientPolicyTlsValidationTrustAttributes) Sds() terra.ListValue[ClientPolicyTlsValidationTrustSdsAttributes] {
	return terra.ReferenceAsList[ClientPolicyTlsValidationTrustSdsAttributes](t.ref.Append("sds"))
}

type TrustAcmAttributes struct {
	ref terra.Reference
}

func (a TrustAcmAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a TrustAcmAttributes) InternalWithRef(ref terra.Reference) TrustAcmAttributes {
	return TrustAcmAttributes{ref: ref}
}

func (a TrustAcmAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a TrustAcmAttributes) CertificateAuthorityArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("certificate_authority_arns"))
}

type ClientPolicyTlsValidationTrustFileAttributes struct {
	ref terra.Reference
}

func (f ClientPolicyTlsValidationTrustFileAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f ClientPolicyTlsValidationTrustFileAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsValidationTrustFileAttributes {
	return ClientPolicyTlsValidationTrustFileAttributes{ref: ref}
}

func (f ClientPolicyTlsValidationTrustFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f ClientPolicyTlsValidationTrustFileAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

type ClientPolicyTlsValidationTrustSdsAttributes struct {
	ref terra.Reference
}

func (s ClientPolicyTlsValidationTrustSdsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ClientPolicyTlsValidationTrustSdsAttributes) InternalWithRef(ref terra.Reference) ClientPolicyTlsValidationTrustSdsAttributes {
	return ClientPolicyTlsValidationTrustSdsAttributes{ref: ref}
}

func (s ClientPolicyTlsValidationTrustSdsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ClientPolicyTlsValidationTrustSdsAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type ListenerAttributes struct {
	ref terra.Reference
}

func (l ListenerAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l ListenerAttributes) InternalWithRef(ref terra.Reference) ListenerAttributes {
	return ListenerAttributes{ref: ref}
}

func (l ListenerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l ListenerAttributes) ConnectionPool() terra.ListValue[ConnectionPoolAttributes] {
	return terra.ReferenceAsList[ConnectionPoolAttributes](l.ref.Append("connection_pool"))
}

func (l ListenerAttributes) HealthCheck() terra.ListValue[HealthCheckAttributes] {
	return terra.ReferenceAsList[HealthCheckAttributes](l.ref.Append("health_check"))
}

func (l ListenerAttributes) PortMapping() terra.ListValue[PortMappingAttributes] {
	return terra.ReferenceAsList[PortMappingAttributes](l.ref.Append("port_mapping"))
}

func (l ListenerAttributes) Tls() terra.ListValue[ListenerTlsAttributes] {
	return terra.ReferenceAsList[ListenerTlsAttributes](l.ref.Append("tls"))
}

type ConnectionPoolAttributes struct {
	ref terra.Reference
}

func (cp ConnectionPoolAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp ConnectionPoolAttributes) InternalWithRef(ref terra.Reference) ConnectionPoolAttributes {
	return ConnectionPoolAttributes{ref: ref}
}

func (cp ConnectionPoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp ConnectionPoolAttributes) Grpc() terra.ListValue[GrpcAttributes] {
	return terra.ReferenceAsList[GrpcAttributes](cp.ref.Append("grpc"))
}

func (cp ConnectionPoolAttributes) Http() terra.ListValue[HttpAttributes] {
	return terra.ReferenceAsList[HttpAttributes](cp.ref.Append("http"))
}

func (cp ConnectionPoolAttributes) Http2() terra.ListValue[Http2Attributes] {
	return terra.ReferenceAsList[Http2Attributes](cp.ref.Append("http2"))
}

type GrpcAttributes struct {
	ref terra.Reference
}

func (g GrpcAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g GrpcAttributes) InternalWithRef(ref terra.Reference) GrpcAttributes {
	return GrpcAttributes{ref: ref}
}

func (g GrpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g GrpcAttributes) MaxRequests() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("max_requests"))
}

type HttpAttributes struct {
	ref terra.Reference
}

func (h HttpAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h HttpAttributes) InternalWithRef(ref terra.Reference) HttpAttributes {
	return HttpAttributes{ref: ref}
}

func (h HttpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h HttpAttributes) MaxConnections() terra.NumberValue {
	return terra.ReferenceAsNumber(h.ref.Append("max_connections"))
}

func (h HttpAttributes) MaxPendingRequests() terra.NumberValue {
	return terra.ReferenceAsNumber(h.ref.Append("max_pending_requests"))
}

type Http2Attributes struct {
	ref terra.Reference
}

func (h Http2Attributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h Http2Attributes) InternalWithRef(ref terra.Reference) Http2Attributes {
	return Http2Attributes{ref: ref}
}

func (h Http2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h Http2Attributes) MaxRequests() terra.NumberValue {
	return terra.ReferenceAsNumber(h.ref.Append("max_requests"))
}

type HealthCheckAttributes struct {
	ref terra.Reference
}

func (hc HealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc HealthCheckAttributes) InternalWithRef(ref terra.Reference) HealthCheckAttributes {
	return HealthCheckAttributes{ref: ref}
}

func (hc HealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc HealthCheckAttributes) HealthyThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("healthy_threshold"))
}

func (hc HealthCheckAttributes) IntervalMillis() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("interval_millis"))
}

func (hc HealthCheckAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("path"))
}

func (hc HealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("port"))
}

func (hc HealthCheckAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("protocol"))
}

func (hc HealthCheckAttributes) TimeoutMillis() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("timeout_millis"))
}

func (hc HealthCheckAttributes) UnhealthyThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("unhealthy_threshold"))
}

type PortMappingAttributes struct {
	ref terra.Reference
}

func (pm PortMappingAttributes) InternalRef() (terra.Reference, error) {
	return pm.ref, nil
}

func (pm PortMappingAttributes) InternalWithRef(ref terra.Reference) PortMappingAttributes {
	return PortMappingAttributes{ref: ref}
}

func (pm PortMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pm.ref.InternalTokens()
}

func (pm PortMappingAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(pm.ref.Append("port"))
}

func (pm PortMappingAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(pm.ref.Append("protocol"))
}

type ListenerTlsAttributes struct {
	ref terra.Reference
}

func (t ListenerTlsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ListenerTlsAttributes) InternalWithRef(ref terra.Reference) ListenerTlsAttributes {
	return ListenerTlsAttributes{ref: ref}
}

func (t ListenerTlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ListenerTlsAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("mode"))
}

func (t ListenerTlsAttributes) Certificate() terra.ListValue[ListenerTlsCertificateAttributes] {
	return terra.ReferenceAsList[ListenerTlsCertificateAttributes](t.ref.Append("certificate"))
}

func (t ListenerTlsAttributes) Validation() terra.ListValue[ListenerTlsValidationAttributes] {
	return terra.ReferenceAsList[ListenerTlsValidationAttributes](t.ref.Append("validation"))
}

type ListenerTlsCertificateAttributes struct {
	ref terra.Reference
}

func (c ListenerTlsCertificateAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ListenerTlsCertificateAttributes) InternalWithRef(ref terra.Reference) ListenerTlsCertificateAttributes {
	return ListenerTlsCertificateAttributes{ref: ref}
}

func (c ListenerTlsCertificateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ListenerTlsCertificateAttributes) Acm() terra.ListValue[CertificateAcmAttributes] {
	return terra.ReferenceAsList[CertificateAcmAttributes](c.ref.Append("acm"))
}

func (c ListenerTlsCertificateAttributes) File() terra.ListValue[ListenerTlsCertificateFileAttributes] {
	return terra.ReferenceAsList[ListenerTlsCertificateFileAttributes](c.ref.Append("file"))
}

func (c ListenerTlsCertificateAttributes) Sds() terra.ListValue[ListenerTlsCertificateSdsAttributes] {
	return terra.ReferenceAsList[ListenerTlsCertificateSdsAttributes](c.ref.Append("sds"))
}

type CertificateAcmAttributes struct {
	ref terra.Reference
}

func (a CertificateAcmAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a CertificateAcmAttributes) InternalWithRef(ref terra.Reference) CertificateAcmAttributes {
	return CertificateAcmAttributes{ref: ref}
}

func (a CertificateAcmAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a CertificateAcmAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("certificate_arn"))
}

type ListenerTlsCertificateFileAttributes struct {
	ref terra.Reference
}

func (f ListenerTlsCertificateFileAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f ListenerTlsCertificateFileAttributes) InternalWithRef(ref terra.Reference) ListenerTlsCertificateFileAttributes {
	return ListenerTlsCertificateFileAttributes{ref: ref}
}

func (f ListenerTlsCertificateFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f ListenerTlsCertificateFileAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

func (f ListenerTlsCertificateFileAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("private_key"))
}

type ListenerTlsCertificateSdsAttributes struct {
	ref terra.Reference
}

func (s ListenerTlsCertificateSdsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ListenerTlsCertificateSdsAttributes) InternalWithRef(ref terra.Reference) ListenerTlsCertificateSdsAttributes {
	return ListenerTlsCertificateSdsAttributes{ref: ref}
}

func (s ListenerTlsCertificateSdsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ListenerTlsCertificateSdsAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type ListenerTlsValidationAttributes struct {
	ref terra.Reference
}

func (v ListenerTlsValidationAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ListenerTlsValidationAttributes) InternalWithRef(ref terra.Reference) ListenerTlsValidationAttributes {
	return ListenerTlsValidationAttributes{ref: ref}
}

func (v ListenerTlsValidationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v ListenerTlsValidationAttributes) SubjectAlternativeNames() terra.ListValue[ListenerTlsValidationSubjectAlternativeNamesAttributes] {
	return terra.ReferenceAsList[ListenerTlsValidationSubjectAlternativeNamesAttributes](v.ref.Append("subject_alternative_names"))
}

func (v ListenerTlsValidationAttributes) Trust() terra.ListValue[ListenerTlsValidationTrustAttributes] {
	return terra.ReferenceAsList[ListenerTlsValidationTrustAttributes](v.ref.Append("trust"))
}

type ListenerTlsValidationSubjectAlternativeNamesAttributes struct {
	ref terra.Reference
}

func (san ListenerTlsValidationSubjectAlternativeNamesAttributes) InternalRef() (terra.Reference, error) {
	return san.ref, nil
}

func (san ListenerTlsValidationSubjectAlternativeNamesAttributes) InternalWithRef(ref terra.Reference) ListenerTlsValidationSubjectAlternativeNamesAttributes {
	return ListenerTlsValidationSubjectAlternativeNamesAttributes{ref: ref}
}

func (san ListenerTlsValidationSubjectAlternativeNamesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return san.ref.InternalTokens()
}

func (san ListenerTlsValidationSubjectAlternativeNamesAttributes) Match() terra.ListValue[ListenerTlsValidationSubjectAlternativeNamesMatchAttributes] {
	return terra.ReferenceAsList[ListenerTlsValidationSubjectAlternativeNamesMatchAttributes](san.ref.Append("match"))
}

type ListenerTlsValidationSubjectAlternativeNamesMatchAttributes struct {
	ref terra.Reference
}

func (m ListenerTlsValidationSubjectAlternativeNamesMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m ListenerTlsValidationSubjectAlternativeNamesMatchAttributes) InternalWithRef(ref terra.Reference) ListenerTlsValidationSubjectAlternativeNamesMatchAttributes {
	return ListenerTlsValidationSubjectAlternativeNamesMatchAttributes{ref: ref}
}

func (m ListenerTlsValidationSubjectAlternativeNamesMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m ListenerTlsValidationSubjectAlternativeNamesMatchAttributes) Exact() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("exact"))
}

type ListenerTlsValidationTrustAttributes struct {
	ref terra.Reference
}

func (t ListenerTlsValidationTrustAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ListenerTlsValidationTrustAttributes) InternalWithRef(ref terra.Reference) ListenerTlsValidationTrustAttributes {
	return ListenerTlsValidationTrustAttributes{ref: ref}
}

func (t ListenerTlsValidationTrustAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ListenerTlsValidationTrustAttributes) File() terra.ListValue[ListenerTlsValidationTrustFileAttributes] {
	return terra.ReferenceAsList[ListenerTlsValidationTrustFileAttributes](t.ref.Append("file"))
}

func (t ListenerTlsValidationTrustAttributes) Sds() terra.ListValue[ListenerTlsValidationTrustSdsAttributes] {
	return terra.ReferenceAsList[ListenerTlsValidationTrustSdsAttributes](t.ref.Append("sds"))
}

type ListenerTlsValidationTrustFileAttributes struct {
	ref terra.Reference
}

func (f ListenerTlsValidationTrustFileAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f ListenerTlsValidationTrustFileAttributes) InternalWithRef(ref terra.Reference) ListenerTlsValidationTrustFileAttributes {
	return ListenerTlsValidationTrustFileAttributes{ref: ref}
}

func (f ListenerTlsValidationTrustFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f ListenerTlsValidationTrustFileAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

type ListenerTlsValidationTrustSdsAttributes struct {
	ref terra.Reference
}

func (s ListenerTlsValidationTrustSdsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ListenerTlsValidationTrustSdsAttributes) InternalWithRef(ref terra.Reference) ListenerTlsValidationTrustSdsAttributes {
	return ListenerTlsValidationTrustSdsAttributes{ref: ref}
}

func (s ListenerTlsValidationTrustSdsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ListenerTlsValidationTrustSdsAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type LoggingAttributes struct {
	ref terra.Reference
}

func (l LoggingAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l LoggingAttributes) InternalWithRef(ref terra.Reference) LoggingAttributes {
	return LoggingAttributes{ref: ref}
}

func (l LoggingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l LoggingAttributes) AccessLog() terra.ListValue[AccessLogAttributes] {
	return terra.ReferenceAsList[AccessLogAttributes](l.ref.Append("access_log"))
}

type AccessLogAttributes struct {
	ref terra.Reference
}

func (al AccessLogAttributes) InternalRef() (terra.Reference, error) {
	return al.ref, nil
}

func (al AccessLogAttributes) InternalWithRef(ref terra.Reference) AccessLogAttributes {
	return AccessLogAttributes{ref: ref}
}

func (al AccessLogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return al.ref.InternalTokens()
}

func (al AccessLogAttributes) File() terra.ListValue[AccessLogFileAttributes] {
	return terra.ReferenceAsList[AccessLogFileAttributes](al.ref.Append("file"))
}

type AccessLogFileAttributes struct {
	ref terra.Reference
}

func (f AccessLogFileAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f AccessLogFileAttributes) InternalWithRef(ref terra.Reference) AccessLogFileAttributes {
	return AccessLogFileAttributes{ref: ref}
}

func (f AccessLogFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f AccessLogFileAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("path"))
}

func (f AccessLogFileAttributes) Format() terra.ListValue[FormatAttributes] {
	return terra.ReferenceAsList[FormatAttributes](f.ref.Append("format"))
}

type FormatAttributes struct {
	ref terra.Reference
}

func (f FormatAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f FormatAttributes) InternalWithRef(ref terra.Reference) FormatAttributes {
	return FormatAttributes{ref: ref}
}

func (f FormatAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f FormatAttributes) Text() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("text"))
}

func (f FormatAttributes) Json() terra.ListValue[JsonAttributes] {
	return terra.ReferenceAsList[JsonAttributes](f.ref.Append("json"))
}

type JsonAttributes struct {
	ref terra.Reference
}

func (j JsonAttributes) InternalRef() (terra.Reference, error) {
	return j.ref, nil
}

func (j JsonAttributes) InternalWithRef(ref terra.Reference) JsonAttributes {
	return JsonAttributes{ref: ref}
}

func (j JsonAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return j.ref.InternalTokens()
}

func (j JsonAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(j.ref.Append("key"))
}

func (j JsonAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(j.ref.Append("value"))
}

type SpecState struct {
	BackendDefaults []BackendDefaultsState `json:"backend_defaults"`
	Listener        []ListenerState        `json:"listener"`
	Logging         []LoggingState         `json:"logging"`
}

type BackendDefaultsState struct {
	ClientPolicy []ClientPolicyState `json:"client_policy"`
}

type ClientPolicyState struct {
	Tls []ClientPolicyTlsState `json:"tls"`
}

type ClientPolicyTlsState struct {
	Enforce     bool                              `json:"enforce"`
	Ports       []float64                         `json:"ports"`
	Certificate []ClientPolicyTlsCertificateState `json:"certificate"`
	Validation  []ClientPolicyTlsValidationState  `json:"validation"`
}

type ClientPolicyTlsCertificateState struct {
	File []ClientPolicyTlsCertificateFileState `json:"file"`
	Sds  []ClientPolicyTlsCertificateSdsState  `json:"sds"`
}

type ClientPolicyTlsCertificateFileState struct {
	CertificateChain string `json:"certificate_chain"`
	PrivateKey       string `json:"private_key"`
}

type ClientPolicyTlsCertificateSdsState struct {
	SecretName string `json:"secret_name"`
}

type ClientPolicyTlsValidationState struct {
	SubjectAlternativeNames []ClientPolicyTlsValidationSubjectAlternativeNamesState `json:"subject_alternative_names"`
	Trust                   []ClientPolicyTlsValidationTrustState                   `json:"trust"`
}

type ClientPolicyTlsValidationSubjectAlternativeNamesState struct {
	Match []ClientPolicyTlsValidationSubjectAlternativeNamesMatchState `json:"match"`
}

type ClientPolicyTlsValidationSubjectAlternativeNamesMatchState struct {
	Exact []string `json:"exact"`
}

type ClientPolicyTlsValidationTrustState struct {
	Acm  []TrustAcmState                           `json:"acm"`
	File []ClientPolicyTlsValidationTrustFileState `json:"file"`
	Sds  []ClientPolicyTlsValidationTrustSdsState  `json:"sds"`
}

type TrustAcmState struct {
	CertificateAuthorityArns []string `json:"certificate_authority_arns"`
}

type ClientPolicyTlsValidationTrustFileState struct {
	CertificateChain string `json:"certificate_chain"`
}

type ClientPolicyTlsValidationTrustSdsState struct {
	SecretName string `json:"secret_name"`
}

type ListenerState struct {
	ConnectionPool []ConnectionPoolState `json:"connection_pool"`
	HealthCheck    []HealthCheckState    `json:"health_check"`
	PortMapping    []PortMappingState    `json:"port_mapping"`
	Tls            []ListenerTlsState    `json:"tls"`
}

type ConnectionPoolState struct {
	Grpc  []GrpcState  `json:"grpc"`
	Http  []HttpState  `json:"http"`
	Http2 []Http2State `json:"http2"`
}

type GrpcState struct {
	MaxRequests float64 `json:"max_requests"`
}

type HttpState struct {
	MaxConnections     float64 `json:"max_connections"`
	MaxPendingRequests float64 `json:"max_pending_requests"`
}

type Http2State struct {
	MaxRequests float64 `json:"max_requests"`
}

type HealthCheckState struct {
	HealthyThreshold   float64 `json:"healthy_threshold"`
	IntervalMillis     float64 `json:"interval_millis"`
	Path               string  `json:"path"`
	Port               float64 `json:"port"`
	Protocol           string  `json:"protocol"`
	TimeoutMillis      float64 `json:"timeout_millis"`
	UnhealthyThreshold float64 `json:"unhealthy_threshold"`
}

type PortMappingState struct {
	Port     float64 `json:"port"`
	Protocol string  `json:"protocol"`
}

type ListenerTlsState struct {
	Mode        string                        `json:"mode"`
	Certificate []ListenerTlsCertificateState `json:"certificate"`
	Validation  []ListenerTlsValidationState  `json:"validation"`
}

type ListenerTlsCertificateState struct {
	Acm  []CertificateAcmState             `json:"acm"`
	File []ListenerTlsCertificateFileState `json:"file"`
	Sds  []ListenerTlsCertificateSdsState  `json:"sds"`
}

type CertificateAcmState struct {
	CertificateArn string `json:"certificate_arn"`
}

type ListenerTlsCertificateFileState struct {
	CertificateChain string `json:"certificate_chain"`
	PrivateKey       string `json:"private_key"`
}

type ListenerTlsCertificateSdsState struct {
	SecretName string `json:"secret_name"`
}

type ListenerTlsValidationState struct {
	SubjectAlternativeNames []ListenerTlsValidationSubjectAlternativeNamesState `json:"subject_alternative_names"`
	Trust                   []ListenerTlsValidationTrustState                   `json:"trust"`
}

type ListenerTlsValidationSubjectAlternativeNamesState struct {
	Match []ListenerTlsValidationSubjectAlternativeNamesMatchState `json:"match"`
}

type ListenerTlsValidationSubjectAlternativeNamesMatchState struct {
	Exact []string `json:"exact"`
}

type ListenerTlsValidationTrustState struct {
	File []ListenerTlsValidationTrustFileState `json:"file"`
	Sds  []ListenerTlsValidationTrustSdsState  `json:"sds"`
}

type ListenerTlsValidationTrustFileState struct {
	CertificateChain string `json:"certificate_chain"`
}

type ListenerTlsValidationTrustSdsState struct {
	SecretName string `json:"secret_name"`
}

type LoggingState struct {
	AccessLog []AccessLogState `json:"access_log"`
}

type AccessLogState struct {
	File []AccessLogFileState `json:"file"`
}

type AccessLogFileState struct {
	Path   string        `json:"path"`
	Format []FormatState `json:"format"`
}

type FormatState struct {
	Text string      `json:"text"`
	Json []JsonState `json:"json"`
}

type JsonState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
