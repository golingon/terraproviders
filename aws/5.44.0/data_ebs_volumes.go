// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	dataebsvolumes "github.com/golingon/terraproviders/aws/5.44.0/dataebsvolumes"
)

// NewDataEbsVolumes creates a new instance of [DataEbsVolumes].
func NewDataEbsVolumes(name string, args DataEbsVolumesArgs) *DataEbsVolumes {
	return &DataEbsVolumes{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEbsVolumes)(nil)

// DataEbsVolumes represents the Terraform data resource aws_ebs_volumes.
type DataEbsVolumes struct {
	Name string
	Args DataEbsVolumesArgs
}

// DataSource returns the Terraform object type for [DataEbsVolumes].
func (ev *DataEbsVolumes) DataSource() string {
	return "aws_ebs_volumes"
}

// LocalName returns the local name for [DataEbsVolumes].
func (ev *DataEbsVolumes) LocalName() string {
	return ev.Name
}

// Configuration returns the configuration (args) for [DataEbsVolumes].
func (ev *DataEbsVolumes) Configuration() interface{} {
	return ev.Args
}

// Attributes returns the attributes for [DataEbsVolumes].
func (ev *DataEbsVolumes) Attributes() dataEbsVolumesAttributes {
	return dataEbsVolumesAttributes{ref: terra.ReferenceDataResource(ev)}
}

// DataEbsVolumesArgs contains the configurations for aws_ebs_volumes.
type DataEbsVolumesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataebsvolumes.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataebsvolumes.Timeouts `hcl:"timeouts,block"`
}
type dataEbsVolumesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ebs_volumes.
func (ev dataEbsVolumesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ev.ref.Append("id"))
}

// Ids returns a reference to field ids of aws_ebs_volumes.
func (ev dataEbsVolumesAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ev.ref.Append("ids"))
}

// Tags returns a reference to field tags of aws_ebs_volumes.
func (ev dataEbsVolumesAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ev.ref.Append("tags"))
}

func (ev dataEbsVolumesAttributes) Filter() terra.SetValue[dataebsvolumes.FilterAttributes] {
	return terra.ReferenceAsSet[dataebsvolumes.FilterAttributes](ev.ref.Append("filter"))
}

func (ev dataEbsVolumesAttributes) Timeouts() dataebsvolumes.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataebsvolumes.TimeoutsAttributes](ev.ref.Append("timeouts"))
}
