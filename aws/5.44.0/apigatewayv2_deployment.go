// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewApigatewayv2Deployment creates a new instance of [Apigatewayv2Deployment].
func NewApigatewayv2Deployment(name string, args Apigatewayv2DeploymentArgs) *Apigatewayv2Deployment {
	return &Apigatewayv2Deployment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Apigatewayv2Deployment)(nil)

// Apigatewayv2Deployment represents the Terraform resource aws_apigatewayv2_deployment.
type Apigatewayv2Deployment struct {
	Name      string
	Args      Apigatewayv2DeploymentArgs
	state     *apigatewayv2DeploymentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Apigatewayv2Deployment].
func (ad *Apigatewayv2Deployment) Type() string {
	return "aws_apigatewayv2_deployment"
}

// LocalName returns the local name for [Apigatewayv2Deployment].
func (ad *Apigatewayv2Deployment) LocalName() string {
	return ad.Name
}

// Configuration returns the configuration (args) for [Apigatewayv2Deployment].
func (ad *Apigatewayv2Deployment) Configuration() interface{} {
	return ad.Args
}

// DependOn is used for other resources to depend on [Apigatewayv2Deployment].
func (ad *Apigatewayv2Deployment) DependOn() terra.Reference {
	return terra.ReferenceResource(ad)
}

// Dependencies returns the list of resources [Apigatewayv2Deployment] depends_on.
func (ad *Apigatewayv2Deployment) Dependencies() terra.Dependencies {
	return ad.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Apigatewayv2Deployment].
func (ad *Apigatewayv2Deployment) LifecycleManagement() *terra.Lifecycle {
	return ad.Lifecycle
}

// Attributes returns the attributes for [Apigatewayv2Deployment].
func (ad *Apigatewayv2Deployment) Attributes() apigatewayv2DeploymentAttributes {
	return apigatewayv2DeploymentAttributes{ref: terra.ReferenceResource(ad)}
}

// ImportState imports the given attribute values into [Apigatewayv2Deployment]'s state.
func (ad *Apigatewayv2Deployment) ImportState(av io.Reader) error {
	ad.state = &apigatewayv2DeploymentState{}
	if err := json.NewDecoder(av).Decode(ad.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ad.Type(), ad.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Apigatewayv2Deployment] has state.
func (ad *Apigatewayv2Deployment) State() (*apigatewayv2DeploymentState, bool) {
	return ad.state, ad.state != nil
}

// StateMust returns the state for [Apigatewayv2Deployment]. Panics if the state is nil.
func (ad *Apigatewayv2Deployment) StateMust() *apigatewayv2DeploymentState {
	if ad.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ad.Type(), ad.LocalName()))
	}
	return ad.state
}

// Apigatewayv2DeploymentArgs contains the configurations for aws_apigatewayv2_deployment.
type Apigatewayv2DeploymentArgs struct {
	// ApiId: string, required
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Triggers: map of string, optional
	Triggers terra.MapValue[terra.StringValue] `hcl:"triggers,attr"`
}
type apigatewayv2DeploymentAttributes struct {
	ref terra.Reference
}

// ApiId returns a reference to field api_id of aws_apigatewayv2_deployment.
func (ad apigatewayv2DeploymentAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("api_id"))
}

// AutoDeployed returns a reference to field auto_deployed of aws_apigatewayv2_deployment.
func (ad apigatewayv2DeploymentAttributes) AutoDeployed() terra.BoolValue {
	return terra.ReferenceAsBool(ad.ref.Append("auto_deployed"))
}

// Description returns a reference to field description of aws_apigatewayv2_deployment.
func (ad apigatewayv2DeploymentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("description"))
}

// Id returns a reference to field id of aws_apigatewayv2_deployment.
func (ad apigatewayv2DeploymentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("id"))
}

// Triggers returns a reference to field triggers of aws_apigatewayv2_deployment.
func (ad apigatewayv2DeploymentAttributes) Triggers() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ad.ref.Append("triggers"))
}

type apigatewayv2DeploymentState struct {
	ApiId        string            `json:"api_id"`
	AutoDeployed bool              `json:"auto_deployed"`
	Description  string            `json:"description"`
	Id           string            `json:"id"`
	Triggers     map[string]string `json:"triggers"`
}
