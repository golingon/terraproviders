// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewS3ControlAccessGrantsInstance creates a new instance of [S3ControlAccessGrantsInstance].
func NewS3ControlAccessGrantsInstance(name string, args S3ControlAccessGrantsInstanceArgs) *S3ControlAccessGrantsInstance {
	return &S3ControlAccessGrantsInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*S3ControlAccessGrantsInstance)(nil)

// S3ControlAccessGrantsInstance represents the Terraform resource aws_s3control_access_grants_instance.
type S3ControlAccessGrantsInstance struct {
	Name      string
	Args      S3ControlAccessGrantsInstanceArgs
	state     *s3ControlAccessGrantsInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [S3ControlAccessGrantsInstance].
func (sagi *S3ControlAccessGrantsInstance) Type() string {
	return "aws_s3control_access_grants_instance"
}

// LocalName returns the local name for [S3ControlAccessGrantsInstance].
func (sagi *S3ControlAccessGrantsInstance) LocalName() string {
	return sagi.Name
}

// Configuration returns the configuration (args) for [S3ControlAccessGrantsInstance].
func (sagi *S3ControlAccessGrantsInstance) Configuration() interface{} {
	return sagi.Args
}

// DependOn is used for other resources to depend on [S3ControlAccessGrantsInstance].
func (sagi *S3ControlAccessGrantsInstance) DependOn() terra.Reference {
	return terra.ReferenceResource(sagi)
}

// Dependencies returns the list of resources [S3ControlAccessGrantsInstance] depends_on.
func (sagi *S3ControlAccessGrantsInstance) Dependencies() terra.Dependencies {
	return sagi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [S3ControlAccessGrantsInstance].
func (sagi *S3ControlAccessGrantsInstance) LifecycleManagement() *terra.Lifecycle {
	return sagi.Lifecycle
}

// Attributes returns the attributes for [S3ControlAccessGrantsInstance].
func (sagi *S3ControlAccessGrantsInstance) Attributes() s3ControlAccessGrantsInstanceAttributes {
	return s3ControlAccessGrantsInstanceAttributes{ref: terra.ReferenceResource(sagi)}
}

// ImportState imports the given attribute values into [S3ControlAccessGrantsInstance]'s state.
func (sagi *S3ControlAccessGrantsInstance) ImportState(av io.Reader) error {
	sagi.state = &s3ControlAccessGrantsInstanceState{}
	if err := json.NewDecoder(av).Decode(sagi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sagi.Type(), sagi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [S3ControlAccessGrantsInstance] has state.
func (sagi *S3ControlAccessGrantsInstance) State() (*s3ControlAccessGrantsInstanceState, bool) {
	return sagi.state, sagi.state != nil
}

// StateMust returns the state for [S3ControlAccessGrantsInstance]. Panics if the state is nil.
func (sagi *S3ControlAccessGrantsInstance) StateMust() *s3ControlAccessGrantsInstanceState {
	if sagi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sagi.Type(), sagi.LocalName()))
	}
	return sagi.state
}

// S3ControlAccessGrantsInstanceArgs contains the configurations for aws_s3control_access_grants_instance.
type S3ControlAccessGrantsInstanceArgs struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// IdentityCenterArn: string, optional
	IdentityCenterArn terra.StringValue `hcl:"identity_center_arn,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}
type s3ControlAccessGrantsInstanceAttributes struct {
	ref terra.Reference
}

// AccessGrantsInstanceArn returns a reference to field access_grants_instance_arn of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) AccessGrantsInstanceArn() terra.StringValue {
	return terra.ReferenceAsString(sagi.ref.Append("access_grants_instance_arn"))
}

// AccessGrantsInstanceId returns a reference to field access_grants_instance_id of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) AccessGrantsInstanceId() terra.StringValue {
	return terra.ReferenceAsString(sagi.ref.Append("access_grants_instance_id"))
}

// AccountId returns a reference to field account_id of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(sagi.ref.Append("account_id"))
}

// Id returns a reference to field id of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sagi.ref.Append("id"))
}

// IdentityCenterApplicationArn returns a reference to field identity_center_application_arn of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) IdentityCenterApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(sagi.ref.Append("identity_center_application_arn"))
}

// IdentityCenterArn returns a reference to field identity_center_arn of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) IdentityCenterArn() terra.StringValue {
	return terra.ReferenceAsString(sagi.ref.Append("identity_center_arn"))
}

// Tags returns a reference to field tags of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sagi.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_s3control_access_grants_instance.
func (sagi s3ControlAccessGrantsInstanceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sagi.ref.Append("tags_all"))
}

type s3ControlAccessGrantsInstanceState struct {
	AccessGrantsInstanceArn      string            `json:"access_grants_instance_arn"`
	AccessGrantsInstanceId       string            `json:"access_grants_instance_id"`
	AccountId                    string            `json:"account_id"`
	Id                           string            `json:"id"`
	IdentityCenterApplicationArn string            `json:"identity_center_application_arn"`
	IdentityCenterArn            string            `json:"identity_center_arn"`
	Tags                         map[string]string `json:"tags"`
	TagsAll                      map[string]string `json:"tags_all"`
}
