// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewApprunnerDefaultAutoScalingConfigurationVersion creates a new instance of [ApprunnerDefaultAutoScalingConfigurationVersion].
func NewApprunnerDefaultAutoScalingConfigurationVersion(name string, args ApprunnerDefaultAutoScalingConfigurationVersionArgs) *ApprunnerDefaultAutoScalingConfigurationVersion {
	return &ApprunnerDefaultAutoScalingConfigurationVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApprunnerDefaultAutoScalingConfigurationVersion)(nil)

// ApprunnerDefaultAutoScalingConfigurationVersion represents the Terraform resource aws_apprunner_default_auto_scaling_configuration_version.
type ApprunnerDefaultAutoScalingConfigurationVersion struct {
	Name      string
	Args      ApprunnerDefaultAutoScalingConfigurationVersionArgs
	state     *apprunnerDefaultAutoScalingConfigurationVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApprunnerDefaultAutoScalingConfigurationVersion].
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) Type() string {
	return "aws_apprunner_default_auto_scaling_configuration_version"
}

// LocalName returns the local name for [ApprunnerDefaultAutoScalingConfigurationVersion].
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) LocalName() string {
	return adascv.Name
}

// Configuration returns the configuration (args) for [ApprunnerDefaultAutoScalingConfigurationVersion].
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) Configuration() interface{} {
	return adascv.Args
}

// DependOn is used for other resources to depend on [ApprunnerDefaultAutoScalingConfigurationVersion].
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) DependOn() terra.Reference {
	return terra.ReferenceResource(adascv)
}

// Dependencies returns the list of resources [ApprunnerDefaultAutoScalingConfigurationVersion] depends_on.
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) Dependencies() terra.Dependencies {
	return adascv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApprunnerDefaultAutoScalingConfigurationVersion].
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) LifecycleManagement() *terra.Lifecycle {
	return adascv.Lifecycle
}

// Attributes returns the attributes for [ApprunnerDefaultAutoScalingConfigurationVersion].
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) Attributes() apprunnerDefaultAutoScalingConfigurationVersionAttributes {
	return apprunnerDefaultAutoScalingConfigurationVersionAttributes{ref: terra.ReferenceResource(adascv)}
}

// ImportState imports the given attribute values into [ApprunnerDefaultAutoScalingConfigurationVersion]'s state.
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) ImportState(av io.Reader) error {
	adascv.state = &apprunnerDefaultAutoScalingConfigurationVersionState{}
	if err := json.NewDecoder(av).Decode(adascv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adascv.Type(), adascv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApprunnerDefaultAutoScalingConfigurationVersion] has state.
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) State() (*apprunnerDefaultAutoScalingConfigurationVersionState, bool) {
	return adascv.state, adascv.state != nil
}

// StateMust returns the state for [ApprunnerDefaultAutoScalingConfigurationVersion]. Panics if the state is nil.
func (adascv *ApprunnerDefaultAutoScalingConfigurationVersion) StateMust() *apprunnerDefaultAutoScalingConfigurationVersionState {
	if adascv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adascv.Type(), adascv.LocalName()))
	}
	return adascv.state
}

// ApprunnerDefaultAutoScalingConfigurationVersionArgs contains the configurations for aws_apprunner_default_auto_scaling_configuration_version.
type ApprunnerDefaultAutoScalingConfigurationVersionArgs struct {
	// AutoScalingConfigurationArn: string, required
	AutoScalingConfigurationArn terra.StringValue `hcl:"auto_scaling_configuration_arn,attr" validate:"required"`
}
type apprunnerDefaultAutoScalingConfigurationVersionAttributes struct {
	ref terra.Reference
}

// AutoScalingConfigurationArn returns a reference to field auto_scaling_configuration_arn of aws_apprunner_default_auto_scaling_configuration_version.
func (adascv apprunnerDefaultAutoScalingConfigurationVersionAttributes) AutoScalingConfigurationArn() terra.StringValue {
	return terra.ReferenceAsString(adascv.ref.Append("auto_scaling_configuration_arn"))
}

// Id returns a reference to field id of aws_apprunner_default_auto_scaling_configuration_version.
func (adascv apprunnerDefaultAutoScalingConfigurationVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adascv.ref.Append("id"))
}

type apprunnerDefaultAutoScalingConfigurationVersionState struct {
	AutoScalingConfigurationArn string `json:"auto_scaling_configuration_arn"`
	Id                          string `json:"id"`
}
