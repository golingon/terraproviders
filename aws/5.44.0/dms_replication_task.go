// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewDmsReplicationTask creates a new instance of [DmsReplicationTask].
func NewDmsReplicationTask(name string, args DmsReplicationTaskArgs) *DmsReplicationTask {
	return &DmsReplicationTask{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DmsReplicationTask)(nil)

// DmsReplicationTask represents the Terraform resource aws_dms_replication_task.
type DmsReplicationTask struct {
	Name      string
	Args      DmsReplicationTaskArgs
	state     *dmsReplicationTaskState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DmsReplicationTask].
func (drt *DmsReplicationTask) Type() string {
	return "aws_dms_replication_task"
}

// LocalName returns the local name for [DmsReplicationTask].
func (drt *DmsReplicationTask) LocalName() string {
	return drt.Name
}

// Configuration returns the configuration (args) for [DmsReplicationTask].
func (drt *DmsReplicationTask) Configuration() interface{} {
	return drt.Args
}

// DependOn is used for other resources to depend on [DmsReplicationTask].
func (drt *DmsReplicationTask) DependOn() terra.Reference {
	return terra.ReferenceResource(drt)
}

// Dependencies returns the list of resources [DmsReplicationTask] depends_on.
func (drt *DmsReplicationTask) Dependencies() terra.Dependencies {
	return drt.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DmsReplicationTask].
func (drt *DmsReplicationTask) LifecycleManagement() *terra.Lifecycle {
	return drt.Lifecycle
}

// Attributes returns the attributes for [DmsReplicationTask].
func (drt *DmsReplicationTask) Attributes() dmsReplicationTaskAttributes {
	return dmsReplicationTaskAttributes{ref: terra.ReferenceResource(drt)}
}

// ImportState imports the given attribute values into [DmsReplicationTask]'s state.
func (drt *DmsReplicationTask) ImportState(av io.Reader) error {
	drt.state = &dmsReplicationTaskState{}
	if err := json.NewDecoder(av).Decode(drt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", drt.Type(), drt.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DmsReplicationTask] has state.
func (drt *DmsReplicationTask) State() (*dmsReplicationTaskState, bool) {
	return drt.state, drt.state != nil
}

// StateMust returns the state for [DmsReplicationTask]. Panics if the state is nil.
func (drt *DmsReplicationTask) StateMust() *dmsReplicationTaskState {
	if drt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", drt.Type(), drt.LocalName()))
	}
	return drt.state
}

// DmsReplicationTaskArgs contains the configurations for aws_dms_replication_task.
type DmsReplicationTaskArgs struct {
	// CdcStartPosition: string, optional
	CdcStartPosition terra.StringValue `hcl:"cdc_start_position,attr"`
	// CdcStartTime: string, optional
	CdcStartTime terra.StringValue `hcl:"cdc_start_time,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MigrationType: string, required
	MigrationType terra.StringValue `hcl:"migration_type,attr" validate:"required"`
	// ReplicationInstanceArn: string, required
	ReplicationInstanceArn terra.StringValue `hcl:"replication_instance_arn,attr" validate:"required"`
	// ReplicationTaskId: string, required
	ReplicationTaskId terra.StringValue `hcl:"replication_task_id,attr" validate:"required"`
	// ReplicationTaskSettings: string, optional
	ReplicationTaskSettings terra.StringValue `hcl:"replication_task_settings,attr"`
	// SourceEndpointArn: string, required
	SourceEndpointArn terra.StringValue `hcl:"source_endpoint_arn,attr" validate:"required"`
	// StartReplicationTask: bool, optional
	StartReplicationTask terra.BoolValue `hcl:"start_replication_task,attr"`
	// TableMappings: string, required
	TableMappings terra.StringValue `hcl:"table_mappings,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// TargetEndpointArn: string, required
	TargetEndpointArn terra.StringValue `hcl:"target_endpoint_arn,attr" validate:"required"`
}
type dmsReplicationTaskAttributes struct {
	ref terra.Reference
}

// CdcStartPosition returns a reference to field cdc_start_position of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) CdcStartPosition() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("cdc_start_position"))
}

// CdcStartTime returns a reference to field cdc_start_time of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) CdcStartTime() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("cdc_start_time"))
}

// Id returns a reference to field id of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("id"))
}

// MigrationType returns a reference to field migration_type of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) MigrationType() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("migration_type"))
}

// ReplicationInstanceArn returns a reference to field replication_instance_arn of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) ReplicationInstanceArn() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("replication_instance_arn"))
}

// ReplicationTaskArn returns a reference to field replication_task_arn of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) ReplicationTaskArn() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("replication_task_arn"))
}

// ReplicationTaskId returns a reference to field replication_task_id of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) ReplicationTaskId() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("replication_task_id"))
}

// ReplicationTaskSettings returns a reference to field replication_task_settings of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) ReplicationTaskSettings() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("replication_task_settings"))
}

// SourceEndpointArn returns a reference to field source_endpoint_arn of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) SourceEndpointArn() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("source_endpoint_arn"))
}

// StartReplicationTask returns a reference to field start_replication_task of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) StartReplicationTask() terra.BoolValue {
	return terra.ReferenceAsBool(drt.ref.Append("start_replication_task"))
}

// Status returns a reference to field status of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("status"))
}

// TableMappings returns a reference to field table_mappings of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) TableMappings() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("table_mappings"))
}

// Tags returns a reference to field tags of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](drt.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](drt.ref.Append("tags_all"))
}

// TargetEndpointArn returns a reference to field target_endpoint_arn of aws_dms_replication_task.
func (drt dmsReplicationTaskAttributes) TargetEndpointArn() terra.StringValue {
	return terra.ReferenceAsString(drt.ref.Append("target_endpoint_arn"))
}

type dmsReplicationTaskState struct {
	CdcStartPosition        string            `json:"cdc_start_position"`
	CdcStartTime            string            `json:"cdc_start_time"`
	Id                      string            `json:"id"`
	MigrationType           string            `json:"migration_type"`
	ReplicationInstanceArn  string            `json:"replication_instance_arn"`
	ReplicationTaskArn      string            `json:"replication_task_arn"`
	ReplicationTaskId       string            `json:"replication_task_id"`
	ReplicationTaskSettings string            `json:"replication_task_settings"`
	SourceEndpointArn       string            `json:"source_endpoint_arn"`
	StartReplicationTask    bool              `json:"start_replication_task"`
	Status                  string            `json:"status"`
	TableMappings           string            `json:"table_mappings"`
	Tags                    map[string]string `json:"tags"`
	TagsAll                 map[string]string `json:"tags_all"`
	TargetEndpointArn       string            `json:"target_endpoint_arn"`
}
