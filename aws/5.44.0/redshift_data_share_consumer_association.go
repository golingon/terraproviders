// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewRedshiftDataShareConsumerAssociation creates a new instance of [RedshiftDataShareConsumerAssociation].
func NewRedshiftDataShareConsumerAssociation(name string, args RedshiftDataShareConsumerAssociationArgs) *RedshiftDataShareConsumerAssociation {
	return &RedshiftDataShareConsumerAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*RedshiftDataShareConsumerAssociation)(nil)

// RedshiftDataShareConsumerAssociation represents the Terraform resource aws_redshift_data_share_consumer_association.
type RedshiftDataShareConsumerAssociation struct {
	Name      string
	Args      RedshiftDataShareConsumerAssociationArgs
	state     *redshiftDataShareConsumerAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [RedshiftDataShareConsumerAssociation].
func (rdsca *RedshiftDataShareConsumerAssociation) Type() string {
	return "aws_redshift_data_share_consumer_association"
}

// LocalName returns the local name for [RedshiftDataShareConsumerAssociation].
func (rdsca *RedshiftDataShareConsumerAssociation) LocalName() string {
	return rdsca.Name
}

// Configuration returns the configuration (args) for [RedshiftDataShareConsumerAssociation].
func (rdsca *RedshiftDataShareConsumerAssociation) Configuration() interface{} {
	return rdsca.Args
}

// DependOn is used for other resources to depend on [RedshiftDataShareConsumerAssociation].
func (rdsca *RedshiftDataShareConsumerAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(rdsca)
}

// Dependencies returns the list of resources [RedshiftDataShareConsumerAssociation] depends_on.
func (rdsca *RedshiftDataShareConsumerAssociation) Dependencies() terra.Dependencies {
	return rdsca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [RedshiftDataShareConsumerAssociation].
func (rdsca *RedshiftDataShareConsumerAssociation) LifecycleManagement() *terra.Lifecycle {
	return rdsca.Lifecycle
}

// Attributes returns the attributes for [RedshiftDataShareConsumerAssociation].
func (rdsca *RedshiftDataShareConsumerAssociation) Attributes() redshiftDataShareConsumerAssociationAttributes {
	return redshiftDataShareConsumerAssociationAttributes{ref: terra.ReferenceResource(rdsca)}
}

// ImportState imports the given attribute values into [RedshiftDataShareConsumerAssociation]'s state.
func (rdsca *RedshiftDataShareConsumerAssociation) ImportState(av io.Reader) error {
	rdsca.state = &redshiftDataShareConsumerAssociationState{}
	if err := json.NewDecoder(av).Decode(rdsca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", rdsca.Type(), rdsca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [RedshiftDataShareConsumerAssociation] has state.
func (rdsca *RedshiftDataShareConsumerAssociation) State() (*redshiftDataShareConsumerAssociationState, bool) {
	return rdsca.state, rdsca.state != nil
}

// StateMust returns the state for [RedshiftDataShareConsumerAssociation]. Panics if the state is nil.
func (rdsca *RedshiftDataShareConsumerAssociation) StateMust() *redshiftDataShareConsumerAssociationState {
	if rdsca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", rdsca.Type(), rdsca.LocalName()))
	}
	return rdsca.state
}

// RedshiftDataShareConsumerAssociationArgs contains the configurations for aws_redshift_data_share_consumer_association.
type RedshiftDataShareConsumerAssociationArgs struct {
	// AllowWrites: bool, optional
	AllowWrites terra.BoolValue `hcl:"allow_writes,attr"`
	// AssociateEntireAccount: bool, optional
	AssociateEntireAccount terra.BoolValue `hcl:"associate_entire_account,attr"`
	// ConsumerArn: string, optional
	ConsumerArn terra.StringValue `hcl:"consumer_arn,attr"`
	// ConsumerRegion: string, optional
	ConsumerRegion terra.StringValue `hcl:"consumer_region,attr"`
	// DataShareArn: string, required
	DataShareArn terra.StringValue `hcl:"data_share_arn,attr" validate:"required"`
}
type redshiftDataShareConsumerAssociationAttributes struct {
	ref terra.Reference
}

// AllowWrites returns a reference to field allow_writes of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) AllowWrites() terra.BoolValue {
	return terra.ReferenceAsBool(rdsca.ref.Append("allow_writes"))
}

// AssociateEntireAccount returns a reference to field associate_entire_account of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) AssociateEntireAccount() terra.BoolValue {
	return terra.ReferenceAsBool(rdsca.ref.Append("associate_entire_account"))
}

// ConsumerArn returns a reference to field consumer_arn of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) ConsumerArn() terra.StringValue {
	return terra.ReferenceAsString(rdsca.ref.Append("consumer_arn"))
}

// ConsumerRegion returns a reference to field consumer_region of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) ConsumerRegion() terra.StringValue {
	return terra.ReferenceAsString(rdsca.ref.Append("consumer_region"))
}

// DataShareArn returns a reference to field data_share_arn of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) DataShareArn() terra.StringValue {
	return terra.ReferenceAsString(rdsca.ref.Append("data_share_arn"))
}

// Id returns a reference to field id of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rdsca.ref.Append("id"))
}

// ManagedBy returns a reference to field managed_by of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) ManagedBy() terra.StringValue {
	return terra.ReferenceAsString(rdsca.ref.Append("managed_by"))
}

// ProducerArn returns a reference to field producer_arn of aws_redshift_data_share_consumer_association.
func (rdsca redshiftDataShareConsumerAssociationAttributes) ProducerArn() terra.StringValue {
	return terra.ReferenceAsString(rdsca.ref.Append("producer_arn"))
}

type redshiftDataShareConsumerAssociationState struct {
	AllowWrites            bool   `json:"allow_writes"`
	AssociateEntireAccount bool   `json:"associate_entire_account"`
	ConsumerArn            string `json:"consumer_arn"`
	ConsumerRegion         string `json:"consumer_region"`
	DataShareArn           string `json:"data_share_arn"`
	Id                     string `json:"id"`
	ManagedBy              string `json:"managed_by"`
	ProducerArn            string `json:"producer_arn"`
}
