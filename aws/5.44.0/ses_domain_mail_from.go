// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSesDomainMailFrom creates a new instance of [SesDomainMailFrom].
func NewSesDomainMailFrom(name string, args SesDomainMailFromArgs) *SesDomainMailFrom {
	return &SesDomainMailFrom{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SesDomainMailFrom)(nil)

// SesDomainMailFrom represents the Terraform resource aws_ses_domain_mail_from.
type SesDomainMailFrom struct {
	Name      string
	Args      SesDomainMailFromArgs
	state     *sesDomainMailFromState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SesDomainMailFrom].
func (sdmf *SesDomainMailFrom) Type() string {
	return "aws_ses_domain_mail_from"
}

// LocalName returns the local name for [SesDomainMailFrom].
func (sdmf *SesDomainMailFrom) LocalName() string {
	return sdmf.Name
}

// Configuration returns the configuration (args) for [SesDomainMailFrom].
func (sdmf *SesDomainMailFrom) Configuration() interface{} {
	return sdmf.Args
}

// DependOn is used for other resources to depend on [SesDomainMailFrom].
func (sdmf *SesDomainMailFrom) DependOn() terra.Reference {
	return terra.ReferenceResource(sdmf)
}

// Dependencies returns the list of resources [SesDomainMailFrom] depends_on.
func (sdmf *SesDomainMailFrom) Dependencies() terra.Dependencies {
	return sdmf.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SesDomainMailFrom].
func (sdmf *SesDomainMailFrom) LifecycleManagement() *terra.Lifecycle {
	return sdmf.Lifecycle
}

// Attributes returns the attributes for [SesDomainMailFrom].
func (sdmf *SesDomainMailFrom) Attributes() sesDomainMailFromAttributes {
	return sesDomainMailFromAttributes{ref: terra.ReferenceResource(sdmf)}
}

// ImportState imports the given attribute values into [SesDomainMailFrom]'s state.
func (sdmf *SesDomainMailFrom) ImportState(av io.Reader) error {
	sdmf.state = &sesDomainMailFromState{}
	if err := json.NewDecoder(av).Decode(sdmf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdmf.Type(), sdmf.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SesDomainMailFrom] has state.
func (sdmf *SesDomainMailFrom) State() (*sesDomainMailFromState, bool) {
	return sdmf.state, sdmf.state != nil
}

// StateMust returns the state for [SesDomainMailFrom]. Panics if the state is nil.
func (sdmf *SesDomainMailFrom) StateMust() *sesDomainMailFromState {
	if sdmf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdmf.Type(), sdmf.LocalName()))
	}
	return sdmf.state
}

// SesDomainMailFromArgs contains the configurations for aws_ses_domain_mail_from.
type SesDomainMailFromArgs struct {
	// BehaviorOnMxFailure: string, optional
	BehaviorOnMxFailure terra.StringValue `hcl:"behavior_on_mx_failure,attr"`
	// Domain: string, required
	Domain terra.StringValue `hcl:"domain,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MailFromDomain: string, required
	MailFromDomain terra.StringValue `hcl:"mail_from_domain,attr" validate:"required"`
}
type sesDomainMailFromAttributes struct {
	ref terra.Reference
}

// BehaviorOnMxFailure returns a reference to field behavior_on_mx_failure of aws_ses_domain_mail_from.
func (sdmf sesDomainMailFromAttributes) BehaviorOnMxFailure() terra.StringValue {
	return terra.ReferenceAsString(sdmf.ref.Append("behavior_on_mx_failure"))
}

// Domain returns a reference to field domain of aws_ses_domain_mail_from.
func (sdmf sesDomainMailFromAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(sdmf.ref.Append("domain"))
}

// Id returns a reference to field id of aws_ses_domain_mail_from.
func (sdmf sesDomainMailFromAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sdmf.ref.Append("id"))
}

// MailFromDomain returns a reference to field mail_from_domain of aws_ses_domain_mail_from.
func (sdmf sesDomainMailFromAttributes) MailFromDomain() terra.StringValue {
	return terra.ReferenceAsString(sdmf.ref.Append("mail_from_domain"))
}

type sesDomainMailFromState struct {
	BehaviorOnMxFailure string `json:"behavior_on_mx_failure"`
	Domain              string `json:"domain"`
	Id                  string `json:"id"`
	MailFromDomain      string `json:"mail_from_domain"`
}
