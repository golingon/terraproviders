// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package codebuildreportgroup

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ExportConfig struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// S3Destination: optional
	S3Destination *S3Destination `hcl:"s3_destination,block"`
}

type S3Destination struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// EncryptionDisabled: bool, optional
	EncryptionDisabled terra.BoolValue `hcl:"encryption_disabled,attr"`
	// EncryptionKey: string, required
	EncryptionKey terra.StringValue `hcl:"encryption_key,attr" validate:"required"`
	// Packaging: string, optional
	Packaging terra.StringValue `hcl:"packaging,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
}

type ExportConfigAttributes struct {
	ref terra.Reference
}

func (ec ExportConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec ExportConfigAttributes) InternalWithRef(ref terra.Reference) ExportConfigAttributes {
	return ExportConfigAttributes{ref: ref}
}

func (ec ExportConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec ExportConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("type"))
}

func (ec ExportConfigAttributes) S3Destination() terra.ListValue[S3DestinationAttributes] {
	return terra.ReferenceAsList[S3DestinationAttributes](ec.ref.Append("s3_destination"))
}

type S3DestinationAttributes struct {
	ref terra.Reference
}

func (sd S3DestinationAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd S3DestinationAttributes) InternalWithRef(ref terra.Reference) S3DestinationAttributes {
	return S3DestinationAttributes{ref: ref}
}

func (sd S3DestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd S3DestinationAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("bucket"))
}

func (sd S3DestinationAttributes) EncryptionDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(sd.ref.Append("encryption_disabled"))
}

func (sd S3DestinationAttributes) EncryptionKey() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("encryption_key"))
}

func (sd S3DestinationAttributes) Packaging() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("packaging"))
}

func (sd S3DestinationAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("path"))
}

type ExportConfigState struct {
	Type          string               `json:"type"`
	S3Destination []S3DestinationState `json:"s3_destination"`
}

type S3DestinationState struct {
	Bucket             string `json:"bucket"`
	EncryptionDisabled bool   `json:"encryption_disabled"`
	EncryptionKey      string `json:"encryption_key"`
	Packaging          string `json:"packaging"`
	Path               string `json:"path"`
}
