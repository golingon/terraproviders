// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataservicecatalogportfolioconstraints

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Details struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DetailsAttributes struct {
	ref terra.Reference
}

func (d DetailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DetailsAttributes) InternalWithRef(ref terra.Reference) DetailsAttributes {
	return DetailsAttributes{ref: ref}
}

func (d DetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DetailsAttributes) ConstraintId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("constraint_id"))
}

func (d DetailsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("description"))
}

func (d DetailsAttributes) Owner() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("owner"))
}

func (d DetailsAttributes) PortfolioId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("portfolio_id"))
}

func (d DetailsAttributes) ProductId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("product_id"))
}

func (d DetailsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DetailsState struct {
	ConstraintId string `json:"constraint_id"`
	Description  string `json:"description"`
	Owner        string `json:"owner"`
	PortfolioId  string `json:"portfolio_id"`
	ProductId    string `json:"product_id"`
	Type         string `json:"type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
