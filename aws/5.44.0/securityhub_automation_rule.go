// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	securityhubautomationrule "github.com/golingon/terraproviders/aws/5.44.0/securityhubautomationrule"
	"io"
)

// NewSecurityhubAutomationRule creates a new instance of [SecurityhubAutomationRule].
func NewSecurityhubAutomationRule(name string, args SecurityhubAutomationRuleArgs) *SecurityhubAutomationRule {
	return &SecurityhubAutomationRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityhubAutomationRule)(nil)

// SecurityhubAutomationRule represents the Terraform resource aws_securityhub_automation_rule.
type SecurityhubAutomationRule struct {
	Name      string
	Args      SecurityhubAutomationRuleArgs
	state     *securityhubAutomationRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecurityhubAutomationRule].
func (sar *SecurityhubAutomationRule) Type() string {
	return "aws_securityhub_automation_rule"
}

// LocalName returns the local name for [SecurityhubAutomationRule].
func (sar *SecurityhubAutomationRule) LocalName() string {
	return sar.Name
}

// Configuration returns the configuration (args) for [SecurityhubAutomationRule].
func (sar *SecurityhubAutomationRule) Configuration() interface{} {
	return sar.Args
}

// DependOn is used for other resources to depend on [SecurityhubAutomationRule].
func (sar *SecurityhubAutomationRule) DependOn() terra.Reference {
	return terra.ReferenceResource(sar)
}

// Dependencies returns the list of resources [SecurityhubAutomationRule] depends_on.
func (sar *SecurityhubAutomationRule) Dependencies() terra.Dependencies {
	return sar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecurityhubAutomationRule].
func (sar *SecurityhubAutomationRule) LifecycleManagement() *terra.Lifecycle {
	return sar.Lifecycle
}

// Attributes returns the attributes for [SecurityhubAutomationRule].
func (sar *SecurityhubAutomationRule) Attributes() securityhubAutomationRuleAttributes {
	return securityhubAutomationRuleAttributes{ref: terra.ReferenceResource(sar)}
}

// ImportState imports the given attribute values into [SecurityhubAutomationRule]'s state.
func (sar *SecurityhubAutomationRule) ImportState(av io.Reader) error {
	sar.state = &securityhubAutomationRuleState{}
	if err := json.NewDecoder(av).Decode(sar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sar.Type(), sar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecurityhubAutomationRule] has state.
func (sar *SecurityhubAutomationRule) State() (*securityhubAutomationRuleState, bool) {
	return sar.state, sar.state != nil
}

// StateMust returns the state for [SecurityhubAutomationRule]. Panics if the state is nil.
func (sar *SecurityhubAutomationRule) StateMust() *securityhubAutomationRuleState {
	if sar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sar.Type(), sar.LocalName()))
	}
	return sar.state
}

// SecurityhubAutomationRuleArgs contains the configurations for aws_securityhub_automation_rule.
type SecurityhubAutomationRuleArgs struct {
	// Description: string, required
	Description terra.StringValue `hcl:"description,attr" validate:"required"`
	// IsTerminal: bool, optional
	IsTerminal terra.BoolValue `hcl:"is_terminal,attr"`
	// RuleName: string, required
	RuleName terra.StringValue `hcl:"rule_name,attr" validate:"required"`
	// RuleOrder: number, required
	RuleOrder terra.NumberValue `hcl:"rule_order,attr" validate:"required"`
	// RuleStatus: string, optional
	RuleStatus terra.StringValue `hcl:"rule_status,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Actions: min=0
	Actions []securityhubautomationrule.Actions `hcl:"actions,block" validate:"min=0"`
	// Criteria: min=0
	Criteria []securityhubautomationrule.Criteria `hcl:"criteria,block" validate:"min=0"`
}
type securityhubAutomationRuleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sar.ref.Append("arn"))
}

// Description returns a reference to field description of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sar.ref.Append("description"))
}

// Id returns a reference to field id of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sar.ref.Append("id"))
}

// IsTerminal returns a reference to field is_terminal of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) IsTerminal() terra.BoolValue {
	return terra.ReferenceAsBool(sar.ref.Append("is_terminal"))
}

// RuleName returns a reference to field rule_name of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) RuleName() terra.StringValue {
	return terra.ReferenceAsString(sar.ref.Append("rule_name"))
}

// RuleOrder returns a reference to field rule_order of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) RuleOrder() terra.NumberValue {
	return terra.ReferenceAsNumber(sar.ref.Append("rule_order"))
}

// RuleStatus returns a reference to field rule_status of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) RuleStatus() terra.StringValue {
	return terra.ReferenceAsString(sar.ref.Append("rule_status"))
}

// Tags returns a reference to field tags of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sar.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_securityhub_automation_rule.
func (sar securityhubAutomationRuleAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sar.ref.Append("tags_all"))
}

func (sar securityhubAutomationRuleAttributes) Actions() terra.SetValue[securityhubautomationrule.ActionsAttributes] {
	return terra.ReferenceAsSet[securityhubautomationrule.ActionsAttributes](sar.ref.Append("actions"))
}

func (sar securityhubAutomationRuleAttributes) Criteria() terra.ListValue[securityhubautomationrule.CriteriaAttributes] {
	return terra.ReferenceAsList[securityhubautomationrule.CriteriaAttributes](sar.ref.Append("criteria"))
}

type securityhubAutomationRuleState struct {
	Arn         string                                    `json:"arn"`
	Description string                                    `json:"description"`
	Id          string                                    `json:"id"`
	IsTerminal  bool                                      `json:"is_terminal"`
	RuleName    string                                    `json:"rule_name"`
	RuleOrder   float64                                   `json:"rule_order"`
	RuleStatus  string                                    `json:"rule_status"`
	Tags        map[string]string                         `json:"tags"`
	TagsAll     map[string]string                         `json:"tags_all"`
	Actions     []securityhubautomationrule.ActionsState  `json:"actions"`
	Criteria    []securityhubautomationrule.CriteriaState `json:"criteria"`
}
