// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package ssmincidentsresponseplan

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Action struct {
	// SsmAutomation: min=0
	SsmAutomation []SsmAutomation `hcl:"ssm_automation,block" validate:"min=0"`
}

type SsmAutomation struct {
	// DocumentName: string, required
	DocumentName terra.StringValue `hcl:"document_name,attr" validate:"required"`
	// DocumentVersion: string, optional
	DocumentVersion terra.StringValue `hcl:"document_version,attr"`
	// DynamicParameters: map of string, optional
	DynamicParameters terra.MapValue[terra.StringValue] `hcl:"dynamic_parameters,attr"`
	// RoleArn: string, required
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
	// TargetAccount: string, optional
	TargetAccount terra.StringValue `hcl:"target_account,attr"`
	// Parameter: min=0
	Parameter []Parameter `hcl:"parameter,block" validate:"min=0"`
}

type Parameter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values: set of string, required
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type IncidentTemplate struct {
	// DedupeString: string, optional
	DedupeString terra.StringValue `hcl:"dedupe_string,attr"`
	// Impact: number, required
	Impact terra.NumberValue `hcl:"impact,attr" validate:"required"`
	// IncidentTags: map of string, optional
	IncidentTags terra.MapValue[terra.StringValue] `hcl:"incident_tags,attr"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Title: string, required
	Title terra.StringValue `hcl:"title,attr" validate:"required"`
	// NotificationTarget: min=0
	NotificationTarget []NotificationTarget `hcl:"notification_target,block" validate:"min=0"`
}

type NotificationTarget struct {
	// SnsTopicArn: string, required
	SnsTopicArn terra.StringValue `hcl:"sns_topic_arn,attr" validate:"required"`
}

type Integration struct {
	// Pagerduty: min=0
	Pagerduty []Pagerduty `hcl:"pagerduty,block" validate:"min=0"`
}

type Pagerduty struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SecretId: string, required
	SecretId terra.StringValue `hcl:"secret_id,attr" validate:"required"`
	// ServiceId: string, required
	ServiceId terra.StringValue `hcl:"service_id,attr" validate:"required"`
}

type ActionAttributes struct {
	ref terra.Reference
}

func (a ActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a ActionAttributes) InternalWithRef(ref terra.Reference) ActionAttributes {
	return ActionAttributes{ref: ref}
}

func (a ActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a ActionAttributes) SsmAutomation() terra.ListValue[SsmAutomationAttributes] {
	return terra.ReferenceAsList[SsmAutomationAttributes](a.ref.Append("ssm_automation"))
}

type SsmAutomationAttributes struct {
	ref terra.Reference
}

func (sa SsmAutomationAttributes) InternalRef() (terra.Reference, error) {
	return sa.ref, nil
}

func (sa SsmAutomationAttributes) InternalWithRef(ref terra.Reference) SsmAutomationAttributes {
	return SsmAutomationAttributes{ref: ref}
}

func (sa SsmAutomationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sa.ref.InternalTokens()
}

func (sa SsmAutomationAttributes) DocumentName() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("document_name"))
}

func (sa SsmAutomationAttributes) DocumentVersion() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("document_version"))
}

func (sa SsmAutomationAttributes) DynamicParameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sa.ref.Append("dynamic_parameters"))
}

func (sa SsmAutomationAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("role_arn"))
}

func (sa SsmAutomationAttributes) TargetAccount() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("target_account"))
}

func (sa SsmAutomationAttributes) Parameter() terra.SetValue[ParameterAttributes] {
	return terra.ReferenceAsSet[ParameterAttributes](sa.ref.Append("parameter"))
}

type ParameterAttributes struct {
	ref terra.Reference
}

func (p ParameterAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p ParameterAttributes) InternalWithRef(ref terra.Reference) ParameterAttributes {
	return ParameterAttributes{ref: ref}
}

func (p ParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p ParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p ParameterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](p.ref.Append("values"))
}

type IncidentTemplateAttributes struct {
	ref terra.Reference
}

func (it IncidentTemplateAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it IncidentTemplateAttributes) InternalWithRef(ref terra.Reference) IncidentTemplateAttributes {
	return IncidentTemplateAttributes{ref: ref}
}

func (it IncidentTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it IncidentTemplateAttributes) DedupeString() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("dedupe_string"))
}

func (it IncidentTemplateAttributes) Impact() terra.NumberValue {
	return terra.ReferenceAsNumber(it.ref.Append("impact"))
}

func (it IncidentTemplateAttributes) IncidentTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](it.ref.Append("incident_tags"))
}

func (it IncidentTemplateAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("summary"))
}

func (it IncidentTemplateAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("title"))
}

func (it IncidentTemplateAttributes) NotificationTarget() terra.SetValue[NotificationTargetAttributes] {
	return terra.ReferenceAsSet[NotificationTargetAttributes](it.ref.Append("notification_target"))
}

type NotificationTargetAttributes struct {
	ref terra.Reference
}

func (nt NotificationTargetAttributes) InternalRef() (terra.Reference, error) {
	return nt.ref, nil
}

func (nt NotificationTargetAttributes) InternalWithRef(ref terra.Reference) NotificationTargetAttributes {
	return NotificationTargetAttributes{ref: ref}
}

func (nt NotificationTargetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nt.ref.InternalTokens()
}

func (nt NotificationTargetAttributes) SnsTopicArn() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("sns_topic_arn"))
}

type IntegrationAttributes struct {
	ref terra.Reference
}

func (i IntegrationAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IntegrationAttributes) InternalWithRef(ref terra.Reference) IntegrationAttributes {
	return IntegrationAttributes{ref: ref}
}

func (i IntegrationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IntegrationAttributes) Pagerduty() terra.ListValue[PagerdutyAttributes] {
	return terra.ReferenceAsList[PagerdutyAttributes](i.ref.Append("pagerduty"))
}

type PagerdutyAttributes struct {
	ref terra.Reference
}

func (p PagerdutyAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PagerdutyAttributes) InternalWithRef(ref terra.Reference) PagerdutyAttributes {
	return PagerdutyAttributes{ref: ref}
}

func (p PagerdutyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PagerdutyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p PagerdutyAttributes) SecretId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("secret_id"))
}

func (p PagerdutyAttributes) ServiceId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("service_id"))
}

type ActionState struct {
	SsmAutomation []SsmAutomationState `json:"ssm_automation"`
}

type SsmAutomationState struct {
	DocumentName      string            `json:"document_name"`
	DocumentVersion   string            `json:"document_version"`
	DynamicParameters map[string]string `json:"dynamic_parameters"`
	RoleArn           string            `json:"role_arn"`
	TargetAccount     string            `json:"target_account"`
	Parameter         []ParameterState  `json:"parameter"`
}

type ParameterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}

type IncidentTemplateState struct {
	DedupeString       string                    `json:"dedupe_string"`
	Impact             float64                   `json:"impact"`
	IncidentTags       map[string]string         `json:"incident_tags"`
	Summary            string                    `json:"summary"`
	Title              string                    `json:"title"`
	NotificationTarget []NotificationTargetState `json:"notification_target"`
}

type NotificationTargetState struct {
	SnsTopicArn string `json:"sns_topic_arn"`
}

type IntegrationState struct {
	Pagerduty []PagerdutyState `json:"pagerduty"`
}

type PagerdutyState struct {
	Name      string `json:"name"`
	SecretId  string `json:"secret_id"`
	ServiceId string `json:"service_id"`
}
