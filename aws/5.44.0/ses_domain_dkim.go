// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSesDomainDkim creates a new instance of [SesDomainDkim].
func NewSesDomainDkim(name string, args SesDomainDkimArgs) *SesDomainDkim {
	return &SesDomainDkim{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SesDomainDkim)(nil)

// SesDomainDkim represents the Terraform resource aws_ses_domain_dkim.
type SesDomainDkim struct {
	Name      string
	Args      SesDomainDkimArgs
	state     *sesDomainDkimState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SesDomainDkim].
func (sdd *SesDomainDkim) Type() string {
	return "aws_ses_domain_dkim"
}

// LocalName returns the local name for [SesDomainDkim].
func (sdd *SesDomainDkim) LocalName() string {
	return sdd.Name
}

// Configuration returns the configuration (args) for [SesDomainDkim].
func (sdd *SesDomainDkim) Configuration() interface{} {
	return sdd.Args
}

// DependOn is used for other resources to depend on [SesDomainDkim].
func (sdd *SesDomainDkim) DependOn() terra.Reference {
	return terra.ReferenceResource(sdd)
}

// Dependencies returns the list of resources [SesDomainDkim] depends_on.
func (sdd *SesDomainDkim) Dependencies() terra.Dependencies {
	return sdd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SesDomainDkim].
func (sdd *SesDomainDkim) LifecycleManagement() *terra.Lifecycle {
	return sdd.Lifecycle
}

// Attributes returns the attributes for [SesDomainDkim].
func (sdd *SesDomainDkim) Attributes() sesDomainDkimAttributes {
	return sesDomainDkimAttributes{ref: terra.ReferenceResource(sdd)}
}

// ImportState imports the given attribute values into [SesDomainDkim]'s state.
func (sdd *SesDomainDkim) ImportState(av io.Reader) error {
	sdd.state = &sesDomainDkimState{}
	if err := json.NewDecoder(av).Decode(sdd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdd.Type(), sdd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SesDomainDkim] has state.
func (sdd *SesDomainDkim) State() (*sesDomainDkimState, bool) {
	return sdd.state, sdd.state != nil
}

// StateMust returns the state for [SesDomainDkim]. Panics if the state is nil.
func (sdd *SesDomainDkim) StateMust() *sesDomainDkimState {
	if sdd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdd.Type(), sdd.LocalName()))
	}
	return sdd.state
}

// SesDomainDkimArgs contains the configurations for aws_ses_domain_dkim.
type SesDomainDkimArgs struct {
	// Domain: string, required
	Domain terra.StringValue `hcl:"domain,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}
type sesDomainDkimAttributes struct {
	ref terra.Reference
}

// DkimTokens returns a reference to field dkim_tokens of aws_ses_domain_dkim.
func (sdd sesDomainDkimAttributes) DkimTokens() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sdd.ref.Append("dkim_tokens"))
}

// Domain returns a reference to field domain of aws_ses_domain_dkim.
func (sdd sesDomainDkimAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(sdd.ref.Append("domain"))
}

// Id returns a reference to field id of aws_ses_domain_dkim.
func (sdd sesDomainDkimAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sdd.ref.Append("id"))
}

type sesDomainDkimState struct {
	DkimTokens []string `json:"dkim_tokens"`
	Domain     string   `json:"domain"`
	Id         string   `json:"id"`
}
