// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewCognitoUserGroup creates a new instance of [CognitoUserGroup].
func NewCognitoUserGroup(name string, args CognitoUserGroupArgs) *CognitoUserGroup {
	return &CognitoUserGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CognitoUserGroup)(nil)

// CognitoUserGroup represents the Terraform resource aws_cognito_user_group.
type CognitoUserGroup struct {
	Name      string
	Args      CognitoUserGroupArgs
	state     *cognitoUserGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CognitoUserGroup].
func (cug *CognitoUserGroup) Type() string {
	return "aws_cognito_user_group"
}

// LocalName returns the local name for [CognitoUserGroup].
func (cug *CognitoUserGroup) LocalName() string {
	return cug.Name
}

// Configuration returns the configuration (args) for [CognitoUserGroup].
func (cug *CognitoUserGroup) Configuration() interface{} {
	return cug.Args
}

// DependOn is used for other resources to depend on [CognitoUserGroup].
func (cug *CognitoUserGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(cug)
}

// Dependencies returns the list of resources [CognitoUserGroup] depends_on.
func (cug *CognitoUserGroup) Dependencies() terra.Dependencies {
	return cug.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CognitoUserGroup].
func (cug *CognitoUserGroup) LifecycleManagement() *terra.Lifecycle {
	return cug.Lifecycle
}

// Attributes returns the attributes for [CognitoUserGroup].
func (cug *CognitoUserGroup) Attributes() cognitoUserGroupAttributes {
	return cognitoUserGroupAttributes{ref: terra.ReferenceResource(cug)}
}

// ImportState imports the given attribute values into [CognitoUserGroup]'s state.
func (cug *CognitoUserGroup) ImportState(av io.Reader) error {
	cug.state = &cognitoUserGroupState{}
	if err := json.NewDecoder(av).Decode(cug.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cug.Type(), cug.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CognitoUserGroup] has state.
func (cug *CognitoUserGroup) State() (*cognitoUserGroupState, bool) {
	return cug.state, cug.state != nil
}

// StateMust returns the state for [CognitoUserGroup]. Panics if the state is nil.
func (cug *CognitoUserGroup) StateMust() *cognitoUserGroupState {
	if cug.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cug.Type(), cug.LocalName()))
	}
	return cug.state
}

// CognitoUserGroupArgs contains the configurations for aws_cognito_user_group.
type CognitoUserGroupArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Precedence: number, optional
	Precedence terra.NumberValue `hcl:"precedence,attr"`
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
}
type cognitoUserGroupAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of aws_cognito_user_group.
func (cug cognitoUserGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(cug.ref.Append("description"))
}

// Id returns a reference to field id of aws_cognito_user_group.
func (cug cognitoUserGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cug.ref.Append("id"))
}

// Name returns a reference to field name of aws_cognito_user_group.
func (cug cognitoUserGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cug.ref.Append("name"))
}

// Precedence returns a reference to field precedence of aws_cognito_user_group.
func (cug cognitoUserGroupAttributes) Precedence() terra.NumberValue {
	return terra.ReferenceAsNumber(cug.ref.Append("precedence"))
}

// RoleArn returns a reference to field role_arn of aws_cognito_user_group.
func (cug cognitoUserGroupAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(cug.ref.Append("role_arn"))
}

// UserPoolId returns a reference to field user_pool_id of aws_cognito_user_group.
func (cug cognitoUserGroupAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceAsString(cug.ref.Append("user_pool_id"))
}

type cognitoUserGroupState struct {
	Description string  `json:"description"`
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Precedence  float64 `json:"precedence"`
	RoleArn     string  `json:"role_arn"`
	UserPoolId  string  `json:"user_pool_id"`
}
