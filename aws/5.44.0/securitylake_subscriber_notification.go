// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	securitylakesubscribernotification "github.com/golingon/terraproviders/aws/5.44.0/securitylakesubscribernotification"
	"io"
)

// NewSecuritylakeSubscriberNotification creates a new instance of [SecuritylakeSubscriberNotification].
func NewSecuritylakeSubscriberNotification(name string, args SecuritylakeSubscriberNotificationArgs) *SecuritylakeSubscriberNotification {
	return &SecuritylakeSubscriberNotification{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecuritylakeSubscriberNotification)(nil)

// SecuritylakeSubscriberNotification represents the Terraform resource aws_securitylake_subscriber_notification.
type SecuritylakeSubscriberNotification struct {
	Name      string
	Args      SecuritylakeSubscriberNotificationArgs
	state     *securitylakeSubscriberNotificationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecuritylakeSubscriberNotification].
func (ssn *SecuritylakeSubscriberNotification) Type() string {
	return "aws_securitylake_subscriber_notification"
}

// LocalName returns the local name for [SecuritylakeSubscriberNotification].
func (ssn *SecuritylakeSubscriberNotification) LocalName() string {
	return ssn.Name
}

// Configuration returns the configuration (args) for [SecuritylakeSubscriberNotification].
func (ssn *SecuritylakeSubscriberNotification) Configuration() interface{} {
	return ssn.Args
}

// DependOn is used for other resources to depend on [SecuritylakeSubscriberNotification].
func (ssn *SecuritylakeSubscriberNotification) DependOn() terra.Reference {
	return terra.ReferenceResource(ssn)
}

// Dependencies returns the list of resources [SecuritylakeSubscriberNotification] depends_on.
func (ssn *SecuritylakeSubscriberNotification) Dependencies() terra.Dependencies {
	return ssn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecuritylakeSubscriberNotification].
func (ssn *SecuritylakeSubscriberNotification) LifecycleManagement() *terra.Lifecycle {
	return ssn.Lifecycle
}

// Attributes returns the attributes for [SecuritylakeSubscriberNotification].
func (ssn *SecuritylakeSubscriberNotification) Attributes() securitylakeSubscriberNotificationAttributes {
	return securitylakeSubscriberNotificationAttributes{ref: terra.ReferenceResource(ssn)}
}

// ImportState imports the given attribute values into [SecuritylakeSubscriberNotification]'s state.
func (ssn *SecuritylakeSubscriberNotification) ImportState(av io.Reader) error {
	ssn.state = &securitylakeSubscriberNotificationState{}
	if err := json.NewDecoder(av).Decode(ssn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssn.Type(), ssn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecuritylakeSubscriberNotification] has state.
func (ssn *SecuritylakeSubscriberNotification) State() (*securitylakeSubscriberNotificationState, bool) {
	return ssn.state, ssn.state != nil
}

// StateMust returns the state for [SecuritylakeSubscriberNotification]. Panics if the state is nil.
func (ssn *SecuritylakeSubscriberNotification) StateMust() *securitylakeSubscriberNotificationState {
	if ssn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssn.Type(), ssn.LocalName()))
	}
	return ssn.state
}

// SecuritylakeSubscriberNotificationArgs contains the configurations for aws_securitylake_subscriber_notification.
type SecuritylakeSubscriberNotificationArgs struct {
	// SubscriberId: string, required
	SubscriberId terra.StringValue `hcl:"subscriber_id,attr" validate:"required"`
	// Configuration: min=0
	Configuration []securitylakesubscribernotification.Configuration `hcl:"configuration,block" validate:"min=0"`
}
type securitylakeSubscriberNotificationAttributes struct {
	ref terra.Reference
}

// EndpointId returns a reference to field endpoint_id of aws_securitylake_subscriber_notification.
func (ssn securitylakeSubscriberNotificationAttributes) EndpointId() terra.StringValue {
	return terra.ReferenceAsString(ssn.ref.Append("endpoint_id"))
}

// Id returns a reference to field id of aws_securitylake_subscriber_notification.
func (ssn securitylakeSubscriberNotificationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssn.ref.Append("id"))
}

// SubscriberId returns a reference to field subscriber_id of aws_securitylake_subscriber_notification.
func (ssn securitylakeSubscriberNotificationAttributes) SubscriberId() terra.StringValue {
	return terra.ReferenceAsString(ssn.ref.Append("subscriber_id"))
}

func (ssn securitylakeSubscriberNotificationAttributes) Configuration() terra.ListValue[securitylakesubscribernotification.ConfigurationAttributes] {
	return terra.ReferenceAsList[securitylakesubscribernotification.ConfigurationAttributes](ssn.ref.Append("configuration"))
}

type securitylakeSubscriberNotificationState struct {
	EndpointId    string                                                  `json:"endpoint_id"`
	Id            string                                                  `json:"id"`
	SubscriberId  string                                                  `json:"subscriber_id"`
	Configuration []securitylakesubscribernotification.ConfigurationState `json:"configuration"`
}
