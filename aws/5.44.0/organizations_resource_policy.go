// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewOrganizationsResourcePolicy creates a new instance of [OrganizationsResourcePolicy].
func NewOrganizationsResourcePolicy(name string, args OrganizationsResourcePolicyArgs) *OrganizationsResourcePolicy {
	return &OrganizationsResourcePolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OrganizationsResourcePolicy)(nil)

// OrganizationsResourcePolicy represents the Terraform resource aws_organizations_resource_policy.
type OrganizationsResourcePolicy struct {
	Name      string
	Args      OrganizationsResourcePolicyArgs
	state     *organizationsResourcePolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OrganizationsResourcePolicy].
func (orp *OrganizationsResourcePolicy) Type() string {
	return "aws_organizations_resource_policy"
}

// LocalName returns the local name for [OrganizationsResourcePolicy].
func (orp *OrganizationsResourcePolicy) LocalName() string {
	return orp.Name
}

// Configuration returns the configuration (args) for [OrganizationsResourcePolicy].
func (orp *OrganizationsResourcePolicy) Configuration() interface{} {
	return orp.Args
}

// DependOn is used for other resources to depend on [OrganizationsResourcePolicy].
func (orp *OrganizationsResourcePolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(orp)
}

// Dependencies returns the list of resources [OrganizationsResourcePolicy] depends_on.
func (orp *OrganizationsResourcePolicy) Dependencies() terra.Dependencies {
	return orp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OrganizationsResourcePolicy].
func (orp *OrganizationsResourcePolicy) LifecycleManagement() *terra.Lifecycle {
	return orp.Lifecycle
}

// Attributes returns the attributes for [OrganizationsResourcePolicy].
func (orp *OrganizationsResourcePolicy) Attributes() organizationsResourcePolicyAttributes {
	return organizationsResourcePolicyAttributes{ref: terra.ReferenceResource(orp)}
}

// ImportState imports the given attribute values into [OrganizationsResourcePolicy]'s state.
func (orp *OrganizationsResourcePolicy) ImportState(av io.Reader) error {
	orp.state = &organizationsResourcePolicyState{}
	if err := json.NewDecoder(av).Decode(orp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", orp.Type(), orp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OrganizationsResourcePolicy] has state.
func (orp *OrganizationsResourcePolicy) State() (*organizationsResourcePolicyState, bool) {
	return orp.state, orp.state != nil
}

// StateMust returns the state for [OrganizationsResourcePolicy]. Panics if the state is nil.
func (orp *OrganizationsResourcePolicy) StateMust() *organizationsResourcePolicyState {
	if orp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", orp.Type(), orp.LocalName()))
	}
	return orp.state
}

// OrganizationsResourcePolicyArgs contains the configurations for aws_organizations_resource_policy.
type OrganizationsResourcePolicyArgs struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type organizationsResourcePolicyAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_organizations_resource_policy.
func (orp organizationsResourcePolicyAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(orp.ref.Append("arn"))
}

// Content returns a reference to field content of aws_organizations_resource_policy.
func (orp organizationsResourcePolicyAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(orp.ref.Append("content"))
}

// Id returns a reference to field id of aws_organizations_resource_policy.
func (orp organizationsResourcePolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(orp.ref.Append("id"))
}

// Tags returns a reference to field tags of aws_organizations_resource_policy.
func (orp organizationsResourcePolicyAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](orp.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_organizations_resource_policy.
func (orp organizationsResourcePolicyAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](orp.ref.Append("tags_all"))
}

type organizationsResourcePolicyState struct {
	Arn     string            `json:"arn"`
	Content string            `json:"content"`
	Id      string            `json:"id"`
	Tags    map[string]string `json:"tags"`
	TagsAll map[string]string `json:"tags_all"`
}
