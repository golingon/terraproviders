// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewConnectSecurityProfile creates a new instance of [ConnectSecurityProfile].
func NewConnectSecurityProfile(name string, args ConnectSecurityProfileArgs) *ConnectSecurityProfile {
	return &ConnectSecurityProfile{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ConnectSecurityProfile)(nil)

// ConnectSecurityProfile represents the Terraform resource aws_connect_security_profile.
type ConnectSecurityProfile struct {
	Name      string
	Args      ConnectSecurityProfileArgs
	state     *connectSecurityProfileState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ConnectSecurityProfile].
func (csp *ConnectSecurityProfile) Type() string {
	return "aws_connect_security_profile"
}

// LocalName returns the local name for [ConnectSecurityProfile].
func (csp *ConnectSecurityProfile) LocalName() string {
	return csp.Name
}

// Configuration returns the configuration (args) for [ConnectSecurityProfile].
func (csp *ConnectSecurityProfile) Configuration() interface{} {
	return csp.Args
}

// DependOn is used for other resources to depend on [ConnectSecurityProfile].
func (csp *ConnectSecurityProfile) DependOn() terra.Reference {
	return terra.ReferenceResource(csp)
}

// Dependencies returns the list of resources [ConnectSecurityProfile] depends_on.
func (csp *ConnectSecurityProfile) Dependencies() terra.Dependencies {
	return csp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ConnectSecurityProfile].
func (csp *ConnectSecurityProfile) LifecycleManagement() *terra.Lifecycle {
	return csp.Lifecycle
}

// Attributes returns the attributes for [ConnectSecurityProfile].
func (csp *ConnectSecurityProfile) Attributes() connectSecurityProfileAttributes {
	return connectSecurityProfileAttributes{ref: terra.ReferenceResource(csp)}
}

// ImportState imports the given attribute values into [ConnectSecurityProfile]'s state.
func (csp *ConnectSecurityProfile) ImportState(av io.Reader) error {
	csp.state = &connectSecurityProfileState{}
	if err := json.NewDecoder(av).Decode(csp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", csp.Type(), csp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ConnectSecurityProfile] has state.
func (csp *ConnectSecurityProfile) State() (*connectSecurityProfileState, bool) {
	return csp.state, csp.state != nil
}

// StateMust returns the state for [ConnectSecurityProfile]. Panics if the state is nil.
func (csp *ConnectSecurityProfile) StateMust() *connectSecurityProfileState {
	if csp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", csp.Type(), csp.LocalName()))
	}
	return csp.state
}

// ConnectSecurityProfileArgs contains the configurations for aws_connect_security_profile.
type ConnectSecurityProfileArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Permissions: set of string, optional
	Permissions terra.SetValue[terra.StringValue] `hcl:"permissions,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type connectSecurityProfileAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("arn"))
}

// Description returns a reference to field description of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("description"))
}

// Id returns a reference to field id of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("instance_id"))
}

// Name returns a reference to field name of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("name"))
}

// OrganizationResourceId returns a reference to field organization_resource_id of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) OrganizationResourceId() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("organization_resource_id"))
}

// Permissions returns a reference to field permissions of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) Permissions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](csp.ref.Append("permissions"))
}

// SecurityProfileId returns a reference to field security_profile_id of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) SecurityProfileId() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("security_profile_id"))
}

// Tags returns a reference to field tags of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](csp.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_connect_security_profile.
func (csp connectSecurityProfileAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](csp.ref.Append("tags_all"))
}

type connectSecurityProfileState struct {
	Arn                    string            `json:"arn"`
	Description            string            `json:"description"`
	Id                     string            `json:"id"`
	InstanceId             string            `json:"instance_id"`
	Name                   string            `json:"name"`
	OrganizationResourceId string            `json:"organization_resource_id"`
	Permissions            []string          `json:"permissions"`
	SecurityProfileId      string            `json:"security_profile_id"`
	Tags                   map[string]string `json:"tags"`
	TagsAll                map[string]string `json:"tags_all"`
}
