// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package appautoscalingpolicy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type StepScalingPolicyConfiguration struct {
	// AdjustmentType: string, optional
	AdjustmentType terra.StringValue `hcl:"adjustment_type,attr"`
	// Cooldown: number, optional
	Cooldown terra.NumberValue `hcl:"cooldown,attr"`
	// MetricAggregationType: string, optional
	MetricAggregationType terra.StringValue `hcl:"metric_aggregation_type,attr"`
	// MinAdjustmentMagnitude: number, optional
	MinAdjustmentMagnitude terra.NumberValue `hcl:"min_adjustment_magnitude,attr"`
	// StepAdjustment: min=0
	StepAdjustment []StepAdjustment `hcl:"step_adjustment,block" validate:"min=0"`
}

type StepAdjustment struct {
	// MetricIntervalLowerBound: string, optional
	MetricIntervalLowerBound terra.StringValue `hcl:"metric_interval_lower_bound,attr"`
	// MetricIntervalUpperBound: string, optional
	MetricIntervalUpperBound terra.StringValue `hcl:"metric_interval_upper_bound,attr"`
	// ScalingAdjustment: number, required
	ScalingAdjustment terra.NumberValue `hcl:"scaling_adjustment,attr" validate:"required"`
}

type TargetTrackingScalingPolicyConfiguration struct {
	// DisableScaleIn: bool, optional
	DisableScaleIn terra.BoolValue `hcl:"disable_scale_in,attr"`
	// ScaleInCooldown: number, optional
	ScaleInCooldown terra.NumberValue `hcl:"scale_in_cooldown,attr"`
	// ScaleOutCooldown: number, optional
	ScaleOutCooldown terra.NumberValue `hcl:"scale_out_cooldown,attr"`
	// TargetValue: number, required
	TargetValue terra.NumberValue `hcl:"target_value,attr" validate:"required"`
	// CustomizedMetricSpecification: optional
	CustomizedMetricSpecification *CustomizedMetricSpecification `hcl:"customized_metric_specification,block"`
	// PredefinedMetricSpecification: optional
	PredefinedMetricSpecification *PredefinedMetricSpecification `hcl:"predefined_metric_specification,block"`
}

type CustomizedMetricSpecification struct {
	// MetricName: string, optional
	MetricName terra.StringValue `hcl:"metric_name,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// Statistic: string, optional
	Statistic terra.StringValue `hcl:"statistic,attr"`
	// Unit: string, optional
	Unit terra.StringValue `hcl:"unit,attr"`
	// CustomizedMetricSpecificationDimensions: min=0
	Dimensions []CustomizedMetricSpecificationDimensions `hcl:"dimensions,block" validate:"min=0"`
	// Metrics: min=0
	Metrics []Metrics `hcl:"metrics,block" validate:"min=0"`
}

type CustomizedMetricSpecificationDimensions struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Metrics struct {
	// Expression: string, optional
	Expression terra.StringValue `hcl:"expression,attr"`
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Label: string, optional
	Label terra.StringValue `hcl:"label,attr"`
	// ReturnData: bool, optional
	ReturnData terra.BoolValue `hcl:"return_data,attr"`
	// MetricStat: optional
	MetricStat *MetricStat `hcl:"metric_stat,block"`
}

type MetricStat struct {
	// Stat: string, required
	Stat terra.StringValue `hcl:"stat,attr" validate:"required"`
	// Unit: string, optional
	Unit terra.StringValue `hcl:"unit,attr"`
	// Metric: required
	Metric *Metric `hcl:"metric,block" validate:"required"`
}

type Metric struct {
	// MetricName: string, required
	MetricName terra.StringValue `hcl:"metric_name,attr" validate:"required"`
	// Namespace: string, required
	Namespace terra.StringValue `hcl:"namespace,attr" validate:"required"`
	// MetricDimensions: min=0
	Dimensions []MetricDimensions `hcl:"dimensions,block" validate:"min=0"`
}

type MetricDimensions struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type PredefinedMetricSpecification struct {
	// PredefinedMetricType: string, required
	PredefinedMetricType terra.StringValue `hcl:"predefined_metric_type,attr" validate:"required"`
	// ResourceLabel: string, optional
	ResourceLabel terra.StringValue `hcl:"resource_label,attr"`
}

type StepScalingPolicyConfigurationAttributes struct {
	ref terra.Reference
}

func (sspc StepScalingPolicyConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sspc.ref, nil
}

func (sspc StepScalingPolicyConfigurationAttributes) InternalWithRef(ref terra.Reference) StepScalingPolicyConfigurationAttributes {
	return StepScalingPolicyConfigurationAttributes{ref: ref}
}

func (sspc StepScalingPolicyConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sspc.ref.InternalTokens()
}

func (sspc StepScalingPolicyConfigurationAttributes) AdjustmentType() terra.StringValue {
	return terra.ReferenceAsString(sspc.ref.Append("adjustment_type"))
}

func (sspc StepScalingPolicyConfigurationAttributes) Cooldown() terra.NumberValue {
	return terra.ReferenceAsNumber(sspc.ref.Append("cooldown"))
}

func (sspc StepScalingPolicyConfigurationAttributes) MetricAggregationType() terra.StringValue {
	return terra.ReferenceAsString(sspc.ref.Append("metric_aggregation_type"))
}

func (sspc StepScalingPolicyConfigurationAttributes) MinAdjustmentMagnitude() terra.NumberValue {
	return terra.ReferenceAsNumber(sspc.ref.Append("min_adjustment_magnitude"))
}

func (sspc StepScalingPolicyConfigurationAttributes) StepAdjustment() terra.SetValue[StepAdjustmentAttributes] {
	return terra.ReferenceAsSet[StepAdjustmentAttributes](sspc.ref.Append("step_adjustment"))
}

type StepAdjustmentAttributes struct {
	ref terra.Reference
}

func (sa StepAdjustmentAttributes) InternalRef() (terra.Reference, error) {
	return sa.ref, nil
}

func (sa StepAdjustmentAttributes) InternalWithRef(ref terra.Reference) StepAdjustmentAttributes {
	return StepAdjustmentAttributes{ref: ref}
}

func (sa StepAdjustmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sa.ref.InternalTokens()
}

func (sa StepAdjustmentAttributes) MetricIntervalLowerBound() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("metric_interval_lower_bound"))
}

func (sa StepAdjustmentAttributes) MetricIntervalUpperBound() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("metric_interval_upper_bound"))
}

func (sa StepAdjustmentAttributes) ScalingAdjustment() terra.NumberValue {
	return terra.ReferenceAsNumber(sa.ref.Append("scaling_adjustment"))
}

type TargetTrackingScalingPolicyConfigurationAttributes struct {
	ref terra.Reference
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ttspc.ref, nil
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) InternalWithRef(ref terra.Reference) TargetTrackingScalingPolicyConfigurationAttributes {
	return TargetTrackingScalingPolicyConfigurationAttributes{ref: ref}
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ttspc.ref.InternalTokens()
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) DisableScaleIn() terra.BoolValue {
	return terra.ReferenceAsBool(ttspc.ref.Append("disable_scale_in"))
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) ScaleInCooldown() terra.NumberValue {
	return terra.ReferenceAsNumber(ttspc.ref.Append("scale_in_cooldown"))
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) ScaleOutCooldown() terra.NumberValue {
	return terra.ReferenceAsNumber(ttspc.ref.Append("scale_out_cooldown"))
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) TargetValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ttspc.ref.Append("target_value"))
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) CustomizedMetricSpecification() terra.ListValue[CustomizedMetricSpecificationAttributes] {
	return terra.ReferenceAsList[CustomizedMetricSpecificationAttributes](ttspc.ref.Append("customized_metric_specification"))
}

func (ttspc TargetTrackingScalingPolicyConfigurationAttributes) PredefinedMetricSpecification() terra.ListValue[PredefinedMetricSpecificationAttributes] {
	return terra.ReferenceAsList[PredefinedMetricSpecificationAttributes](ttspc.ref.Append("predefined_metric_specification"))
}

type CustomizedMetricSpecificationAttributes struct {
	ref terra.Reference
}

func (cms CustomizedMetricSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return cms.ref, nil
}

func (cms CustomizedMetricSpecificationAttributes) InternalWithRef(ref terra.Reference) CustomizedMetricSpecificationAttributes {
	return CustomizedMetricSpecificationAttributes{ref: ref}
}

func (cms CustomizedMetricSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cms.ref.InternalTokens()
}

func (cms CustomizedMetricSpecificationAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(cms.ref.Append("metric_name"))
}

func (cms CustomizedMetricSpecificationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(cms.ref.Append("namespace"))
}

func (cms CustomizedMetricSpecificationAttributes) Statistic() terra.StringValue {
	return terra.ReferenceAsString(cms.ref.Append("statistic"))
}

func (cms CustomizedMetricSpecificationAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(cms.ref.Append("unit"))
}

func (cms CustomizedMetricSpecificationAttributes) Dimensions() terra.SetValue[CustomizedMetricSpecificationDimensionsAttributes] {
	return terra.ReferenceAsSet[CustomizedMetricSpecificationDimensionsAttributes](cms.ref.Append("dimensions"))
}

func (cms CustomizedMetricSpecificationAttributes) Metrics() terra.SetValue[MetricsAttributes] {
	return terra.ReferenceAsSet[MetricsAttributes](cms.ref.Append("metrics"))
}

type CustomizedMetricSpecificationDimensionsAttributes struct {
	ref terra.Reference
}

func (d CustomizedMetricSpecificationDimensionsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d CustomizedMetricSpecificationDimensionsAttributes) InternalWithRef(ref terra.Reference) CustomizedMetricSpecificationDimensionsAttributes {
	return CustomizedMetricSpecificationDimensionsAttributes{ref: ref}
}

func (d CustomizedMetricSpecificationDimensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d CustomizedMetricSpecificationDimensionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d CustomizedMetricSpecificationDimensionsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type MetricsAttributes struct {
	ref terra.Reference
}

func (m MetricsAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m MetricsAttributes) InternalWithRef(ref terra.Reference) MetricsAttributes {
	return MetricsAttributes{ref: ref}
}

func (m MetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m MetricsAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("expression"))
}

func (m MetricsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("id"))
}

func (m MetricsAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("label"))
}

func (m MetricsAttributes) ReturnData() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("return_data"))
}

func (m MetricsAttributes) MetricStat() terra.ListValue[MetricStatAttributes] {
	return terra.ReferenceAsList[MetricStatAttributes](m.ref.Append("metric_stat"))
}

type MetricStatAttributes struct {
	ref terra.Reference
}

func (ms MetricStatAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms MetricStatAttributes) InternalWithRef(ref terra.Reference) MetricStatAttributes {
	return MetricStatAttributes{ref: ref}
}

func (ms MetricStatAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms MetricStatAttributes) Stat() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("stat"))
}

func (ms MetricStatAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("unit"))
}

func (ms MetricStatAttributes) Metric() terra.ListValue[MetricAttributes] {
	return terra.ReferenceAsList[MetricAttributes](ms.ref.Append("metric"))
}

type MetricAttributes struct {
	ref terra.Reference
}

func (m MetricAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m MetricAttributes) InternalWithRef(ref terra.Reference) MetricAttributes {
	return MetricAttributes{ref: ref}
}

func (m MetricAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m MetricAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("metric_name"))
}

func (m MetricAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("namespace"))
}

func (m MetricAttributes) Dimensions() terra.SetValue[MetricDimensionsAttributes] {
	return terra.ReferenceAsSet[MetricDimensionsAttributes](m.ref.Append("dimensions"))
}

type MetricDimensionsAttributes struct {
	ref terra.Reference
}

func (d MetricDimensionsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d MetricDimensionsAttributes) InternalWithRef(ref terra.Reference) MetricDimensionsAttributes {
	return MetricDimensionsAttributes{ref: ref}
}

func (d MetricDimensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d MetricDimensionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d MetricDimensionsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type PredefinedMetricSpecificationAttributes struct {
	ref terra.Reference
}

func (pms PredefinedMetricSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return pms.ref, nil
}

func (pms PredefinedMetricSpecificationAttributes) InternalWithRef(ref terra.Reference) PredefinedMetricSpecificationAttributes {
	return PredefinedMetricSpecificationAttributes{ref: ref}
}

func (pms PredefinedMetricSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pms.ref.InternalTokens()
}

func (pms PredefinedMetricSpecificationAttributes) PredefinedMetricType() terra.StringValue {
	return terra.ReferenceAsString(pms.ref.Append("predefined_metric_type"))
}

func (pms PredefinedMetricSpecificationAttributes) ResourceLabel() terra.StringValue {
	return terra.ReferenceAsString(pms.ref.Append("resource_label"))
}

type StepScalingPolicyConfigurationState struct {
	AdjustmentType         string                `json:"adjustment_type"`
	Cooldown               float64               `json:"cooldown"`
	MetricAggregationType  string                `json:"metric_aggregation_type"`
	MinAdjustmentMagnitude float64               `json:"min_adjustment_magnitude"`
	StepAdjustment         []StepAdjustmentState `json:"step_adjustment"`
}

type StepAdjustmentState struct {
	MetricIntervalLowerBound string  `json:"metric_interval_lower_bound"`
	MetricIntervalUpperBound string  `json:"metric_interval_upper_bound"`
	ScalingAdjustment        float64 `json:"scaling_adjustment"`
}

type TargetTrackingScalingPolicyConfigurationState struct {
	DisableScaleIn                bool                                 `json:"disable_scale_in"`
	ScaleInCooldown               float64                              `json:"scale_in_cooldown"`
	ScaleOutCooldown              float64                              `json:"scale_out_cooldown"`
	TargetValue                   float64                              `json:"target_value"`
	CustomizedMetricSpecification []CustomizedMetricSpecificationState `json:"customized_metric_specification"`
	PredefinedMetricSpecification []PredefinedMetricSpecificationState `json:"predefined_metric_specification"`
}

type CustomizedMetricSpecificationState struct {
	MetricName string                                         `json:"metric_name"`
	Namespace  string                                         `json:"namespace"`
	Statistic  string                                         `json:"statistic"`
	Unit       string                                         `json:"unit"`
	Dimensions []CustomizedMetricSpecificationDimensionsState `json:"dimensions"`
	Metrics    []MetricsState                                 `json:"metrics"`
}

type CustomizedMetricSpecificationDimensionsState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type MetricsState struct {
	Expression string            `json:"expression"`
	Id         string            `json:"id"`
	Label      string            `json:"label"`
	ReturnData bool              `json:"return_data"`
	MetricStat []MetricStatState `json:"metric_stat"`
}

type MetricStatState struct {
	Stat   string        `json:"stat"`
	Unit   string        `json:"unit"`
	Metric []MetricState `json:"metric"`
}

type MetricState struct {
	MetricName string                  `json:"metric_name"`
	Namespace  string                  `json:"namespace"`
	Dimensions []MetricDimensionsState `json:"dimensions"`
}

type MetricDimensionsState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type PredefinedMetricSpecificationState struct {
	PredefinedMetricType string `json:"predefined_metric_type"`
	ResourceLabel        string `json:"resource_label"`
}
