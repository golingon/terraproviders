// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	devopsgururesourcecollection "github.com/golingon/terraproviders/aws/5.44.0/devopsgururesourcecollection"
	"io"
)

// NewDevopsguruResourceCollection creates a new instance of [DevopsguruResourceCollection].
func NewDevopsguruResourceCollection(name string, args DevopsguruResourceCollectionArgs) *DevopsguruResourceCollection {
	return &DevopsguruResourceCollection{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DevopsguruResourceCollection)(nil)

// DevopsguruResourceCollection represents the Terraform resource aws_devopsguru_resource_collection.
type DevopsguruResourceCollection struct {
	Name      string
	Args      DevopsguruResourceCollectionArgs
	state     *devopsguruResourceCollectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DevopsguruResourceCollection].
func (drc *DevopsguruResourceCollection) Type() string {
	return "aws_devopsguru_resource_collection"
}

// LocalName returns the local name for [DevopsguruResourceCollection].
func (drc *DevopsguruResourceCollection) LocalName() string {
	return drc.Name
}

// Configuration returns the configuration (args) for [DevopsguruResourceCollection].
func (drc *DevopsguruResourceCollection) Configuration() interface{} {
	return drc.Args
}

// DependOn is used for other resources to depend on [DevopsguruResourceCollection].
func (drc *DevopsguruResourceCollection) DependOn() terra.Reference {
	return terra.ReferenceResource(drc)
}

// Dependencies returns the list of resources [DevopsguruResourceCollection] depends_on.
func (drc *DevopsguruResourceCollection) Dependencies() terra.Dependencies {
	return drc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DevopsguruResourceCollection].
func (drc *DevopsguruResourceCollection) LifecycleManagement() *terra.Lifecycle {
	return drc.Lifecycle
}

// Attributes returns the attributes for [DevopsguruResourceCollection].
func (drc *DevopsguruResourceCollection) Attributes() devopsguruResourceCollectionAttributes {
	return devopsguruResourceCollectionAttributes{ref: terra.ReferenceResource(drc)}
}

// ImportState imports the given attribute values into [DevopsguruResourceCollection]'s state.
func (drc *DevopsguruResourceCollection) ImportState(av io.Reader) error {
	drc.state = &devopsguruResourceCollectionState{}
	if err := json.NewDecoder(av).Decode(drc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", drc.Type(), drc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DevopsguruResourceCollection] has state.
func (drc *DevopsguruResourceCollection) State() (*devopsguruResourceCollectionState, bool) {
	return drc.state, drc.state != nil
}

// StateMust returns the state for [DevopsguruResourceCollection]. Panics if the state is nil.
func (drc *DevopsguruResourceCollection) StateMust() *devopsguruResourceCollectionState {
	if drc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", drc.Type(), drc.LocalName()))
	}
	return drc.state
}

// DevopsguruResourceCollectionArgs contains the configurations for aws_devopsguru_resource_collection.
type DevopsguruResourceCollectionArgs struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Cloudformation: min=0
	Cloudformation []devopsgururesourcecollection.Cloudformation `hcl:"cloudformation,block" validate:"min=0"`
	// Tags: min=0
	Tags []devopsgururesourcecollection.Tags `hcl:"tags,block" validate:"min=0"`
}
type devopsguruResourceCollectionAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_devopsguru_resource_collection.
func (drc devopsguruResourceCollectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(drc.ref.Append("id"))
}

// Type returns a reference to field type of aws_devopsguru_resource_collection.
func (drc devopsguruResourceCollectionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(drc.ref.Append("type"))
}

func (drc devopsguruResourceCollectionAttributes) Cloudformation() terra.ListValue[devopsgururesourcecollection.CloudformationAttributes] {
	return terra.ReferenceAsList[devopsgururesourcecollection.CloudformationAttributes](drc.ref.Append("cloudformation"))
}

func (drc devopsguruResourceCollectionAttributes) Tags() terra.ListValue[devopsgururesourcecollection.TagsAttributes] {
	return terra.ReferenceAsList[devopsgururesourcecollection.TagsAttributes](drc.ref.Append("tags"))
}

type devopsguruResourceCollectionState struct {
	Id             string                                             `json:"id"`
	Type           string                                             `json:"type"`
	Cloudformation []devopsgururesourcecollection.CloudformationState `json:"cloudformation"`
	Tags           []devopsgururesourcecollection.TagsState           `json:"tags"`
}
