// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	customerprofilesprofile "github.com/golingon/terraproviders/aws/5.44.0/customerprofilesprofile"
	"io"
)

// NewCustomerprofilesProfile creates a new instance of [CustomerprofilesProfile].
func NewCustomerprofilesProfile(name string, args CustomerprofilesProfileArgs) *CustomerprofilesProfile {
	return &CustomerprofilesProfile{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CustomerprofilesProfile)(nil)

// CustomerprofilesProfile represents the Terraform resource aws_customerprofiles_profile.
type CustomerprofilesProfile struct {
	Name      string
	Args      CustomerprofilesProfileArgs
	state     *customerprofilesProfileState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CustomerprofilesProfile].
func (cp *CustomerprofilesProfile) Type() string {
	return "aws_customerprofiles_profile"
}

// LocalName returns the local name for [CustomerprofilesProfile].
func (cp *CustomerprofilesProfile) LocalName() string {
	return cp.Name
}

// Configuration returns the configuration (args) for [CustomerprofilesProfile].
func (cp *CustomerprofilesProfile) Configuration() interface{} {
	return cp.Args
}

// DependOn is used for other resources to depend on [CustomerprofilesProfile].
func (cp *CustomerprofilesProfile) DependOn() terra.Reference {
	return terra.ReferenceResource(cp)
}

// Dependencies returns the list of resources [CustomerprofilesProfile] depends_on.
func (cp *CustomerprofilesProfile) Dependencies() terra.Dependencies {
	return cp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CustomerprofilesProfile].
func (cp *CustomerprofilesProfile) LifecycleManagement() *terra.Lifecycle {
	return cp.Lifecycle
}

// Attributes returns the attributes for [CustomerprofilesProfile].
func (cp *CustomerprofilesProfile) Attributes() customerprofilesProfileAttributes {
	return customerprofilesProfileAttributes{ref: terra.ReferenceResource(cp)}
}

// ImportState imports the given attribute values into [CustomerprofilesProfile]'s state.
func (cp *CustomerprofilesProfile) ImportState(av io.Reader) error {
	cp.state = &customerprofilesProfileState{}
	if err := json.NewDecoder(av).Decode(cp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cp.Type(), cp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CustomerprofilesProfile] has state.
func (cp *CustomerprofilesProfile) State() (*customerprofilesProfileState, bool) {
	return cp.state, cp.state != nil
}

// StateMust returns the state for [CustomerprofilesProfile]. Panics if the state is nil.
func (cp *CustomerprofilesProfile) StateMust() *customerprofilesProfileState {
	if cp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cp.Type(), cp.LocalName()))
	}
	return cp.state
}

// CustomerprofilesProfileArgs contains the configurations for aws_customerprofiles_profile.
type CustomerprofilesProfileArgs struct {
	// AccountNumber: string, optional
	AccountNumber terra.StringValue `hcl:"account_number,attr"`
	// AdditionalInformation: string, optional
	AdditionalInformation terra.StringValue `hcl:"additional_information,attr"`
	// Attributes: map of string, optional
	Attributes terra.MapValue[terra.StringValue] `hcl:"attributes,attr"`
	// BirthDate: string, optional
	BirthDate terra.StringValue `hcl:"birth_date,attr"`
	// BusinessEmailAddress: string, optional
	BusinessEmailAddress terra.StringValue `hcl:"business_email_address,attr"`
	// BusinessName: string, optional
	BusinessName terra.StringValue `hcl:"business_name,attr"`
	// BusinessPhoneNumber: string, optional
	BusinessPhoneNumber terra.StringValue `hcl:"business_phone_number,attr"`
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// EmailAddress: string, optional
	EmailAddress terra.StringValue `hcl:"email_address,attr"`
	// FirstName: string, optional
	FirstName terra.StringValue `hcl:"first_name,attr"`
	// GenderString: string, optional
	GenderString terra.StringValue `hcl:"gender_string,attr"`
	// HomePhoneNumber: string, optional
	HomePhoneNumber terra.StringValue `hcl:"home_phone_number,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LastName: string, optional
	LastName terra.StringValue `hcl:"last_name,attr"`
	// MiddleName: string, optional
	MiddleName terra.StringValue `hcl:"middle_name,attr"`
	// MobilePhoneNumber: string, optional
	MobilePhoneNumber terra.StringValue `hcl:"mobile_phone_number,attr"`
	// PartyTypeString: string, optional
	PartyTypeString terra.StringValue `hcl:"party_type_string,attr"`
	// PersonalEmailAddress: string, optional
	PersonalEmailAddress terra.StringValue `hcl:"personal_email_address,attr"`
	// PhoneNumber: string, optional
	PhoneNumber terra.StringValue `hcl:"phone_number,attr"`
	// Address: optional
	Address *customerprofilesprofile.Address `hcl:"address,block"`
	// BillingAddress: optional
	BillingAddress *customerprofilesprofile.BillingAddress `hcl:"billing_address,block"`
	// MailingAddress: optional
	MailingAddress *customerprofilesprofile.MailingAddress `hcl:"mailing_address,block"`
	// ShippingAddress: optional
	ShippingAddress *customerprofilesprofile.ShippingAddress `hcl:"shipping_address,block"`
}
type customerprofilesProfileAttributes struct {
	ref terra.Reference
}

// AccountNumber returns a reference to field account_number of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) AccountNumber() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("account_number"))
}

// AdditionalInformation returns a reference to field additional_information of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) AdditionalInformation() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("additional_information"))
}

// Attributes returns a reference to field attributes of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) Attributes() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cp.ref.Append("attributes"))
}

// BirthDate returns a reference to field birth_date of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) BirthDate() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("birth_date"))
}

// BusinessEmailAddress returns a reference to field business_email_address of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) BusinessEmailAddress() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("business_email_address"))
}

// BusinessName returns a reference to field business_name of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) BusinessName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("business_name"))
}

// BusinessPhoneNumber returns a reference to field business_phone_number of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) BusinessPhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("business_phone_number"))
}

// DomainName returns a reference to field domain_name of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("domain_name"))
}

// EmailAddress returns a reference to field email_address of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) EmailAddress() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("email_address"))
}

// FirstName returns a reference to field first_name of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) FirstName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("first_name"))
}

// GenderString returns a reference to field gender_string of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) GenderString() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("gender_string"))
}

// HomePhoneNumber returns a reference to field home_phone_number of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) HomePhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("home_phone_number"))
}

// Id returns a reference to field id of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("id"))
}

// LastName returns a reference to field last_name of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) LastName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("last_name"))
}

// MiddleName returns a reference to field middle_name of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) MiddleName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("middle_name"))
}

// MobilePhoneNumber returns a reference to field mobile_phone_number of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) MobilePhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("mobile_phone_number"))
}

// PartyTypeString returns a reference to field party_type_string of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) PartyTypeString() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("party_type_string"))
}

// PersonalEmailAddress returns a reference to field personal_email_address of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) PersonalEmailAddress() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("personal_email_address"))
}

// PhoneNumber returns a reference to field phone_number of aws_customerprofiles_profile.
func (cp customerprofilesProfileAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("phone_number"))
}

func (cp customerprofilesProfileAttributes) Address() terra.ListValue[customerprofilesprofile.AddressAttributes] {
	return terra.ReferenceAsList[customerprofilesprofile.AddressAttributes](cp.ref.Append("address"))
}

func (cp customerprofilesProfileAttributes) BillingAddress() terra.ListValue[customerprofilesprofile.BillingAddressAttributes] {
	return terra.ReferenceAsList[customerprofilesprofile.BillingAddressAttributes](cp.ref.Append("billing_address"))
}

func (cp customerprofilesProfileAttributes) MailingAddress() terra.ListValue[customerprofilesprofile.MailingAddressAttributes] {
	return terra.ReferenceAsList[customerprofilesprofile.MailingAddressAttributes](cp.ref.Append("mailing_address"))
}

func (cp customerprofilesProfileAttributes) ShippingAddress() terra.ListValue[customerprofilesprofile.ShippingAddressAttributes] {
	return terra.ReferenceAsList[customerprofilesprofile.ShippingAddressAttributes](cp.ref.Append("shipping_address"))
}

type customerprofilesProfileState struct {
	AccountNumber         string                                         `json:"account_number"`
	AdditionalInformation string                                         `json:"additional_information"`
	Attributes            map[string]string                              `json:"attributes"`
	BirthDate             string                                         `json:"birth_date"`
	BusinessEmailAddress  string                                         `json:"business_email_address"`
	BusinessName          string                                         `json:"business_name"`
	BusinessPhoneNumber   string                                         `json:"business_phone_number"`
	DomainName            string                                         `json:"domain_name"`
	EmailAddress          string                                         `json:"email_address"`
	FirstName             string                                         `json:"first_name"`
	GenderString          string                                         `json:"gender_string"`
	HomePhoneNumber       string                                         `json:"home_phone_number"`
	Id                    string                                         `json:"id"`
	LastName              string                                         `json:"last_name"`
	MiddleName            string                                         `json:"middle_name"`
	MobilePhoneNumber     string                                         `json:"mobile_phone_number"`
	PartyTypeString       string                                         `json:"party_type_string"`
	PersonalEmailAddress  string                                         `json:"personal_email_address"`
	PhoneNumber           string                                         `json:"phone_number"`
	Address               []customerprofilesprofile.AddressState         `json:"address"`
	BillingAddress        []customerprofilesprofile.BillingAddressState  `json:"billing_address"`
	MailingAddress        []customerprofilesprofile.MailingAddressState  `json:"mailing_address"`
	ShippingAddress       []customerprofilesprofile.ShippingAddressState `json:"shipping_address"`
}
