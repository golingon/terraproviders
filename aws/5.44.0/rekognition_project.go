// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	rekognitionproject "github.com/golingon/terraproviders/aws/5.44.0/rekognitionproject"
	"io"
)

// NewRekognitionProject creates a new instance of [RekognitionProject].
func NewRekognitionProject(name string, args RekognitionProjectArgs) *RekognitionProject {
	return &RekognitionProject{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*RekognitionProject)(nil)

// RekognitionProject represents the Terraform resource aws_rekognition_project.
type RekognitionProject struct {
	Name      string
	Args      RekognitionProjectArgs
	state     *rekognitionProjectState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [RekognitionProject].
func (rp *RekognitionProject) Type() string {
	return "aws_rekognition_project"
}

// LocalName returns the local name for [RekognitionProject].
func (rp *RekognitionProject) LocalName() string {
	return rp.Name
}

// Configuration returns the configuration (args) for [RekognitionProject].
func (rp *RekognitionProject) Configuration() interface{} {
	return rp.Args
}

// DependOn is used for other resources to depend on [RekognitionProject].
func (rp *RekognitionProject) DependOn() terra.Reference {
	return terra.ReferenceResource(rp)
}

// Dependencies returns the list of resources [RekognitionProject] depends_on.
func (rp *RekognitionProject) Dependencies() terra.Dependencies {
	return rp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [RekognitionProject].
func (rp *RekognitionProject) LifecycleManagement() *terra.Lifecycle {
	return rp.Lifecycle
}

// Attributes returns the attributes for [RekognitionProject].
func (rp *RekognitionProject) Attributes() rekognitionProjectAttributes {
	return rekognitionProjectAttributes{ref: terra.ReferenceResource(rp)}
}

// ImportState imports the given attribute values into [RekognitionProject]'s state.
func (rp *RekognitionProject) ImportState(av io.Reader) error {
	rp.state = &rekognitionProjectState{}
	if err := json.NewDecoder(av).Decode(rp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", rp.Type(), rp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [RekognitionProject] has state.
func (rp *RekognitionProject) State() (*rekognitionProjectState, bool) {
	return rp.state, rp.state != nil
}

// StateMust returns the state for [RekognitionProject]. Panics if the state is nil.
func (rp *RekognitionProject) StateMust() *rekognitionProjectState {
	if rp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", rp.Type(), rp.LocalName()))
	}
	return rp.state
}

// RekognitionProjectArgs contains the configurations for aws_rekognition_project.
type RekognitionProjectArgs struct {
	// AutoUpdate: string, optional
	AutoUpdate terra.StringValue `hcl:"auto_update,attr"`
	// Feature: string, optional
	Feature terra.StringValue `hcl:"feature,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *rekognitionproject.Timeouts `hcl:"timeouts,block"`
}
type rekognitionProjectAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_rekognition_project.
func (rp rekognitionProjectAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("arn"))
}

// AutoUpdate returns a reference to field auto_update of aws_rekognition_project.
func (rp rekognitionProjectAttributes) AutoUpdate() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("auto_update"))
}

// Feature returns a reference to field feature of aws_rekognition_project.
func (rp rekognitionProjectAttributes) Feature() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("feature"))
}

// Id returns a reference to field id of aws_rekognition_project.
func (rp rekognitionProjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("id"))
}

// Name returns a reference to field name of aws_rekognition_project.
func (rp rekognitionProjectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("name"))
}

func (rp rekognitionProjectAttributes) Timeouts() rekognitionproject.TimeoutsAttributes {
	return terra.ReferenceAsSingle[rekognitionproject.TimeoutsAttributes](rp.ref.Append("timeouts"))
}

type rekognitionProjectState struct {
	Arn        string                            `json:"arn"`
	AutoUpdate string                            `json:"auto_update"`
	Feature    string                            `json:"feature"`
	Id         string                            `json:"id"`
	Name       string                            `json:"name"`
	Timeouts   *rekognitionproject.TimeoutsState `json:"timeouts"`
}
