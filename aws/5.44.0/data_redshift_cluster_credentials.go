// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataRedshiftClusterCredentials creates a new instance of [DataRedshiftClusterCredentials].
func NewDataRedshiftClusterCredentials(name string, args DataRedshiftClusterCredentialsArgs) *DataRedshiftClusterCredentials {
	return &DataRedshiftClusterCredentials{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedshiftClusterCredentials)(nil)

// DataRedshiftClusterCredentials represents the Terraform data resource aws_redshift_cluster_credentials.
type DataRedshiftClusterCredentials struct {
	Name string
	Args DataRedshiftClusterCredentialsArgs
}

// DataSource returns the Terraform object type for [DataRedshiftClusterCredentials].
func (rcc *DataRedshiftClusterCredentials) DataSource() string {
	return "aws_redshift_cluster_credentials"
}

// LocalName returns the local name for [DataRedshiftClusterCredentials].
func (rcc *DataRedshiftClusterCredentials) LocalName() string {
	return rcc.Name
}

// Configuration returns the configuration (args) for [DataRedshiftClusterCredentials].
func (rcc *DataRedshiftClusterCredentials) Configuration() interface{} {
	return rcc.Args
}

// Attributes returns the attributes for [DataRedshiftClusterCredentials].
func (rcc *DataRedshiftClusterCredentials) Attributes() dataRedshiftClusterCredentialsAttributes {
	return dataRedshiftClusterCredentialsAttributes{ref: terra.ReferenceDataResource(rcc)}
}

// DataRedshiftClusterCredentialsArgs contains the configurations for aws_redshift_cluster_credentials.
type DataRedshiftClusterCredentialsArgs struct {
	// AutoCreate: bool, optional
	AutoCreate terra.BoolValue `hcl:"auto_create,attr"`
	// ClusterIdentifier: string, required
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr" validate:"required"`
	// DbGroups: set of string, optional
	DbGroups terra.SetValue[terra.StringValue] `hcl:"db_groups,attr"`
	// DbName: string, optional
	DbName terra.StringValue `hcl:"db_name,attr"`
	// DbUser: string, required
	DbUser terra.StringValue `hcl:"db_user,attr" validate:"required"`
	// DurationSeconds: number, optional
	DurationSeconds terra.NumberValue `hcl:"duration_seconds,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}
type dataRedshiftClusterCredentialsAttributes struct {
	ref terra.Reference
}

// AutoCreate returns a reference to field auto_create of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) AutoCreate() terra.BoolValue {
	return terra.ReferenceAsBool(rcc.ref.Append("auto_create"))
}

// ClusterIdentifier returns a reference to field cluster_identifier of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(rcc.ref.Append("cluster_identifier"))
}

// DbGroups returns a reference to field db_groups of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) DbGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rcc.ref.Append("db_groups"))
}

// DbName returns a reference to field db_name of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) DbName() terra.StringValue {
	return terra.ReferenceAsString(rcc.ref.Append("db_name"))
}

// DbPassword returns a reference to field db_password of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) DbPassword() terra.StringValue {
	return terra.ReferenceAsString(rcc.ref.Append("db_password"))
}

// DbUser returns a reference to field db_user of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) DbUser() terra.StringValue {
	return terra.ReferenceAsString(rcc.ref.Append("db_user"))
}

// DurationSeconds returns a reference to field duration_seconds of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) DurationSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(rcc.ref.Append("duration_seconds"))
}

// Expiration returns a reference to field expiration of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) Expiration() terra.StringValue {
	return terra.ReferenceAsString(rcc.ref.Append("expiration"))
}

// Id returns a reference to field id of aws_redshift_cluster_credentials.
func (rcc dataRedshiftClusterCredentialsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rcc.ref.Append("id"))
}
