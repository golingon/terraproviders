// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataOutpostsOutposts creates a new instance of [DataOutpostsOutposts].
func NewDataOutpostsOutposts(name string, args DataOutpostsOutpostsArgs) *DataOutpostsOutposts {
	return &DataOutpostsOutposts{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataOutpostsOutposts)(nil)

// DataOutpostsOutposts represents the Terraform data resource aws_outposts_outposts.
type DataOutpostsOutposts struct {
	Name string
	Args DataOutpostsOutpostsArgs
}

// DataSource returns the Terraform object type for [DataOutpostsOutposts].
func (oo *DataOutpostsOutposts) DataSource() string {
	return "aws_outposts_outposts"
}

// LocalName returns the local name for [DataOutpostsOutposts].
func (oo *DataOutpostsOutposts) LocalName() string {
	return oo.Name
}

// Configuration returns the configuration (args) for [DataOutpostsOutposts].
func (oo *DataOutpostsOutposts) Configuration() interface{} {
	return oo.Args
}

// Attributes returns the attributes for [DataOutpostsOutposts].
func (oo *DataOutpostsOutposts) Attributes() dataOutpostsOutpostsAttributes {
	return dataOutpostsOutpostsAttributes{ref: terra.ReferenceDataResource(oo)}
}

// DataOutpostsOutpostsArgs contains the configurations for aws_outposts_outposts.
type DataOutpostsOutpostsArgs struct {
	// AvailabilityZone: string, optional
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// AvailabilityZoneId: string, optional
	AvailabilityZoneId terra.StringValue `hcl:"availability_zone_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OwnerId: string, optional
	OwnerId terra.StringValue `hcl:"owner_id,attr"`
	// SiteId: string, optional
	SiteId terra.StringValue `hcl:"site_id,attr"`
}
type dataOutpostsOutpostsAttributes struct {
	ref terra.Reference
}

// Arns returns a reference to field arns of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) Arns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oo.ref.Append("arns"))
}

// AvailabilityZone returns a reference to field availability_zone of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("availability_zone"))
}

// AvailabilityZoneId returns a reference to field availability_zone_id of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) AvailabilityZoneId() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("availability_zone_id"))
}

// Id returns a reference to field id of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("id"))
}

// Ids returns a reference to field ids of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) Ids() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oo.ref.Append("ids"))
}

// OwnerId returns a reference to field owner_id of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("owner_id"))
}

// SiteId returns a reference to field site_id of aws_outposts_outposts.
func (oo dataOutpostsOutpostsAttributes) SiteId() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("site_id"))
}
