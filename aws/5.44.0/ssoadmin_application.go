// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	ssoadminapplication "github.com/golingon/terraproviders/aws/5.44.0/ssoadminapplication"
	"io"
)

// NewSsoadminApplication creates a new instance of [SsoadminApplication].
func NewSsoadminApplication(name string, args SsoadminApplicationArgs) *SsoadminApplication {
	return &SsoadminApplication{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsoadminApplication)(nil)

// SsoadminApplication represents the Terraform resource aws_ssoadmin_application.
type SsoadminApplication struct {
	Name      string
	Args      SsoadminApplicationArgs
	state     *ssoadminApplicationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SsoadminApplication].
func (sa *SsoadminApplication) Type() string {
	return "aws_ssoadmin_application"
}

// LocalName returns the local name for [SsoadminApplication].
func (sa *SsoadminApplication) LocalName() string {
	return sa.Name
}

// Configuration returns the configuration (args) for [SsoadminApplication].
func (sa *SsoadminApplication) Configuration() interface{} {
	return sa.Args
}

// DependOn is used for other resources to depend on [SsoadminApplication].
func (sa *SsoadminApplication) DependOn() terra.Reference {
	return terra.ReferenceResource(sa)
}

// Dependencies returns the list of resources [SsoadminApplication] depends_on.
func (sa *SsoadminApplication) Dependencies() terra.Dependencies {
	return sa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SsoadminApplication].
func (sa *SsoadminApplication) LifecycleManagement() *terra.Lifecycle {
	return sa.Lifecycle
}

// Attributes returns the attributes for [SsoadminApplication].
func (sa *SsoadminApplication) Attributes() ssoadminApplicationAttributes {
	return ssoadminApplicationAttributes{ref: terra.ReferenceResource(sa)}
}

// ImportState imports the given attribute values into [SsoadminApplication]'s state.
func (sa *SsoadminApplication) ImportState(av io.Reader) error {
	sa.state = &ssoadminApplicationState{}
	if err := json.NewDecoder(av).Decode(sa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sa.Type(), sa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SsoadminApplication] has state.
func (sa *SsoadminApplication) State() (*ssoadminApplicationState, bool) {
	return sa.state, sa.state != nil
}

// StateMust returns the state for [SsoadminApplication]. Panics if the state is nil.
func (sa *SsoadminApplication) StateMust() *ssoadminApplicationState {
	if sa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sa.Type(), sa.LocalName()))
	}
	return sa.state
}

// SsoadminApplicationArgs contains the configurations for aws_ssoadmin_application.
type SsoadminApplicationArgs struct {
	// ApplicationProviderArn: string, required
	ApplicationProviderArn terra.StringValue `hcl:"application_provider_arn,attr" validate:"required"`
	// ClientToken: string, optional
	ClientToken terra.StringValue `hcl:"client_token,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// PortalOptions: min=0
	PortalOptions []ssoadminapplication.PortalOptions `hcl:"portal_options,block" validate:"min=0"`
}
type ssoadminApplicationAttributes struct {
	ref terra.Reference
}

// ApplicationAccount returns a reference to field application_account of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) ApplicationAccount() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("application_account"))
}

// ApplicationArn returns a reference to field application_arn of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) ApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("application_arn"))
}

// ApplicationProviderArn returns a reference to field application_provider_arn of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) ApplicationProviderArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("application_provider_arn"))
}

// ClientToken returns a reference to field client_token of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) ClientToken() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("client_token"))
}

// Description returns a reference to field description of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("description"))
}

// Id returns a reference to field id of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("id"))
}

// InstanceArn returns a reference to field instance_arn of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("instance_arn"))
}

// Name returns a reference to field name of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("name"))
}

// Status returns a reference to field status of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sa.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_ssoadmin_application.
func (sa ssoadminApplicationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sa.ref.Append("tags_all"))
}

func (sa ssoadminApplicationAttributes) PortalOptions() terra.ListValue[ssoadminapplication.PortalOptionsAttributes] {
	return terra.ReferenceAsList[ssoadminapplication.PortalOptionsAttributes](sa.ref.Append("portal_options"))
}

type ssoadminApplicationState struct {
	ApplicationAccount     string                                   `json:"application_account"`
	ApplicationArn         string                                   `json:"application_arn"`
	ApplicationProviderArn string                                   `json:"application_provider_arn"`
	ClientToken            string                                   `json:"client_token"`
	Description            string                                   `json:"description"`
	Id                     string                                   `json:"id"`
	InstanceArn            string                                   `json:"instance_arn"`
	Name                   string                                   `json:"name"`
	Status                 string                                   `json:"status"`
	Tags                   map[string]string                        `json:"tags"`
	TagsAll                map[string]string                        `json:"tags_all"`
	PortalOptions          []ssoadminapplication.PortalOptionsState `json:"portal_options"`
}
