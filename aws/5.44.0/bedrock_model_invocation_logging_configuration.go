// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	bedrockmodelinvocationloggingconfiguration "github.com/golingon/terraproviders/aws/5.44.0/bedrockmodelinvocationloggingconfiguration"
	"io"
)

// NewBedrockModelInvocationLoggingConfiguration creates a new instance of [BedrockModelInvocationLoggingConfiguration].
func NewBedrockModelInvocationLoggingConfiguration(name string, args BedrockModelInvocationLoggingConfigurationArgs) *BedrockModelInvocationLoggingConfiguration {
	return &BedrockModelInvocationLoggingConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BedrockModelInvocationLoggingConfiguration)(nil)

// BedrockModelInvocationLoggingConfiguration represents the Terraform resource aws_bedrock_model_invocation_logging_configuration.
type BedrockModelInvocationLoggingConfiguration struct {
	Name      string
	Args      BedrockModelInvocationLoggingConfigurationArgs
	state     *bedrockModelInvocationLoggingConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [BedrockModelInvocationLoggingConfiguration].
func (bmilc *BedrockModelInvocationLoggingConfiguration) Type() string {
	return "aws_bedrock_model_invocation_logging_configuration"
}

// LocalName returns the local name for [BedrockModelInvocationLoggingConfiguration].
func (bmilc *BedrockModelInvocationLoggingConfiguration) LocalName() string {
	return bmilc.Name
}

// Configuration returns the configuration (args) for [BedrockModelInvocationLoggingConfiguration].
func (bmilc *BedrockModelInvocationLoggingConfiguration) Configuration() interface{} {
	return bmilc.Args
}

// DependOn is used for other resources to depend on [BedrockModelInvocationLoggingConfiguration].
func (bmilc *BedrockModelInvocationLoggingConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(bmilc)
}

// Dependencies returns the list of resources [BedrockModelInvocationLoggingConfiguration] depends_on.
func (bmilc *BedrockModelInvocationLoggingConfiguration) Dependencies() terra.Dependencies {
	return bmilc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [BedrockModelInvocationLoggingConfiguration].
func (bmilc *BedrockModelInvocationLoggingConfiguration) LifecycleManagement() *terra.Lifecycle {
	return bmilc.Lifecycle
}

// Attributes returns the attributes for [BedrockModelInvocationLoggingConfiguration].
func (bmilc *BedrockModelInvocationLoggingConfiguration) Attributes() bedrockModelInvocationLoggingConfigurationAttributes {
	return bedrockModelInvocationLoggingConfigurationAttributes{ref: terra.ReferenceResource(bmilc)}
}

// ImportState imports the given attribute values into [BedrockModelInvocationLoggingConfiguration]'s state.
func (bmilc *BedrockModelInvocationLoggingConfiguration) ImportState(av io.Reader) error {
	bmilc.state = &bedrockModelInvocationLoggingConfigurationState{}
	if err := json.NewDecoder(av).Decode(bmilc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bmilc.Type(), bmilc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [BedrockModelInvocationLoggingConfiguration] has state.
func (bmilc *BedrockModelInvocationLoggingConfiguration) State() (*bedrockModelInvocationLoggingConfigurationState, bool) {
	return bmilc.state, bmilc.state != nil
}

// StateMust returns the state for [BedrockModelInvocationLoggingConfiguration]. Panics if the state is nil.
func (bmilc *BedrockModelInvocationLoggingConfiguration) StateMust() *bedrockModelInvocationLoggingConfigurationState {
	if bmilc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bmilc.Type(), bmilc.LocalName()))
	}
	return bmilc.state
}

// BedrockModelInvocationLoggingConfigurationArgs contains the configurations for aws_bedrock_model_invocation_logging_configuration.
type BedrockModelInvocationLoggingConfigurationArgs struct {
	// LoggingConfig: optional
	LoggingConfig *bedrockmodelinvocationloggingconfiguration.LoggingConfig `hcl:"logging_config,block"`
}
type bedrockModelInvocationLoggingConfigurationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_bedrock_model_invocation_logging_configuration.
func (bmilc bedrockModelInvocationLoggingConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bmilc.ref.Append("id"))
}

func (bmilc bedrockModelInvocationLoggingConfigurationAttributes) LoggingConfig() bedrockmodelinvocationloggingconfiguration.LoggingConfigAttributes {
	return terra.ReferenceAsSingle[bedrockmodelinvocationloggingconfiguration.LoggingConfigAttributes](bmilc.ref.Append("logging_config"))
}

type bedrockModelInvocationLoggingConfigurationState struct {
	Id            string                                                         `json:"id"`
	LoggingConfig *bedrockmodelinvocationloggingconfiguration.LoggingConfigState `json:"logging_config"`
}
