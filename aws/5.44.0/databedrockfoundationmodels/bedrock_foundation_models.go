// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package databedrockfoundationmodels

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ModelSummaries struct{}

type ModelSummariesAttributes struct {
	ref terra.Reference
}

func (ms ModelSummariesAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms ModelSummariesAttributes) InternalWithRef(ref terra.Reference) ModelSummariesAttributes {
	return ModelSummariesAttributes{ref: ref}
}

func (ms ModelSummariesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms ModelSummariesAttributes) CustomizationsSupported() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ms.ref.Append("customizations_supported"))
}

func (ms ModelSummariesAttributes) InferenceTypesSupported() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ms.ref.Append("inference_types_supported"))
}

func (ms ModelSummariesAttributes) InputModalities() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ms.ref.Append("input_modalities"))
}

func (ms ModelSummariesAttributes) ModelArn() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("model_arn"))
}

func (ms ModelSummariesAttributes) ModelId() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("model_id"))
}

func (ms ModelSummariesAttributes) ModelName() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("model_name"))
}

func (ms ModelSummariesAttributes) OutputModalities() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ms.ref.Append("output_modalities"))
}

func (ms ModelSummariesAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("provider_name"))
}

func (ms ModelSummariesAttributes) ResponseStreamingSupported() terra.BoolValue {
	return terra.ReferenceAsBool(ms.ref.Append("response_streaming_supported"))
}

type ModelSummariesState struct {
	CustomizationsSupported    []string `json:"customizations_supported"`
	InferenceTypesSupported    []string `json:"inference_types_supported"`
	InputModalities            []string `json:"input_modalities"`
	ModelArn                   string   `json:"model_arn"`
	ModelId                    string   `json:"model_id"`
	ModelName                  string   `json:"model_name"`
	OutputModalities           []string `json:"output_modalities"`
	ProviderName               string   `json:"provider_name"`
	ResponseStreamingSupported bool     `json:"response_streaming_supported"`
}
