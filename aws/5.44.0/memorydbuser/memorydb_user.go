// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package memorydbuser

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AuthenticationMode struct {
	// Passwords: set of string, required
	Passwords terra.SetValue[terra.StringValue] `hcl:"passwords,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type AuthenticationModeAttributes struct {
	ref terra.Reference
}

func (am AuthenticationModeAttributes) InternalRef() (terra.Reference, error) {
	return am.ref, nil
}

func (am AuthenticationModeAttributes) InternalWithRef(ref terra.Reference) AuthenticationModeAttributes {
	return AuthenticationModeAttributes{ref: ref}
}

func (am AuthenticationModeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return am.ref.InternalTokens()
}

func (am AuthenticationModeAttributes) PasswordCount() terra.NumberValue {
	return terra.ReferenceAsNumber(am.ref.Append("password_count"))
}

func (am AuthenticationModeAttributes) Passwords() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](am.ref.Append("passwords"))
}

func (am AuthenticationModeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(am.ref.Append("type"))
}

type AuthenticationModeState struct {
	PasswordCount float64  `json:"password_count"`
	Passwords     []string `json:"passwords"`
	Type          string   `json:"type"`
}
