// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewDynamodbResourcePolicy creates a new instance of [DynamodbResourcePolicy].
func NewDynamodbResourcePolicy(name string, args DynamodbResourcePolicyArgs) *DynamodbResourcePolicy {
	return &DynamodbResourcePolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DynamodbResourcePolicy)(nil)

// DynamodbResourcePolicy represents the Terraform resource aws_dynamodb_resource_policy.
type DynamodbResourcePolicy struct {
	Name      string
	Args      DynamodbResourcePolicyArgs
	state     *dynamodbResourcePolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DynamodbResourcePolicy].
func (drp *DynamodbResourcePolicy) Type() string {
	return "aws_dynamodb_resource_policy"
}

// LocalName returns the local name for [DynamodbResourcePolicy].
func (drp *DynamodbResourcePolicy) LocalName() string {
	return drp.Name
}

// Configuration returns the configuration (args) for [DynamodbResourcePolicy].
func (drp *DynamodbResourcePolicy) Configuration() interface{} {
	return drp.Args
}

// DependOn is used for other resources to depend on [DynamodbResourcePolicy].
func (drp *DynamodbResourcePolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(drp)
}

// Dependencies returns the list of resources [DynamodbResourcePolicy] depends_on.
func (drp *DynamodbResourcePolicy) Dependencies() terra.Dependencies {
	return drp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DynamodbResourcePolicy].
func (drp *DynamodbResourcePolicy) LifecycleManagement() *terra.Lifecycle {
	return drp.Lifecycle
}

// Attributes returns the attributes for [DynamodbResourcePolicy].
func (drp *DynamodbResourcePolicy) Attributes() dynamodbResourcePolicyAttributes {
	return dynamodbResourcePolicyAttributes{ref: terra.ReferenceResource(drp)}
}

// ImportState imports the given attribute values into [DynamodbResourcePolicy]'s state.
func (drp *DynamodbResourcePolicy) ImportState(av io.Reader) error {
	drp.state = &dynamodbResourcePolicyState{}
	if err := json.NewDecoder(av).Decode(drp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", drp.Type(), drp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DynamodbResourcePolicy] has state.
func (drp *DynamodbResourcePolicy) State() (*dynamodbResourcePolicyState, bool) {
	return drp.state, drp.state != nil
}

// StateMust returns the state for [DynamodbResourcePolicy]. Panics if the state is nil.
func (drp *DynamodbResourcePolicy) StateMust() *dynamodbResourcePolicyState {
	if drp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", drp.Type(), drp.LocalName()))
	}
	return drp.state
}

// DynamodbResourcePolicyArgs contains the configurations for aws_dynamodb_resource_policy.
type DynamodbResourcePolicyArgs struct {
	// ConfirmRemoveSelfResourceAccess: bool, optional
	ConfirmRemoveSelfResourceAccess terra.BoolValue `hcl:"confirm_remove_self_resource_access,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}
type dynamodbResourcePolicyAttributes struct {
	ref terra.Reference
}

// ConfirmRemoveSelfResourceAccess returns a reference to field confirm_remove_self_resource_access of aws_dynamodb_resource_policy.
func (drp dynamodbResourcePolicyAttributes) ConfirmRemoveSelfResourceAccess() terra.BoolValue {
	return terra.ReferenceAsBool(drp.ref.Append("confirm_remove_self_resource_access"))
}

// Id returns a reference to field id of aws_dynamodb_resource_policy.
func (drp dynamodbResourcePolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(drp.ref.Append("id"))
}

// Policy returns a reference to field policy of aws_dynamodb_resource_policy.
func (drp dynamodbResourcePolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(drp.ref.Append("policy"))
}

// ResourceArn returns a reference to field resource_arn of aws_dynamodb_resource_policy.
func (drp dynamodbResourcePolicyAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(drp.ref.Append("resource_arn"))
}

// RevisionId returns a reference to field revision_id of aws_dynamodb_resource_policy.
func (drp dynamodbResourcePolicyAttributes) RevisionId() terra.StringValue {
	return terra.ReferenceAsString(drp.ref.Append("revision_id"))
}

type dynamodbResourcePolicyState struct {
	ConfirmRemoveSelfResourceAccess bool   `json:"confirm_remove_self_resource_access"`
	Id                              string `json:"id"`
	Policy                          string `json:"policy"`
	ResourceArn                     string `json:"resource_arn"`
	RevisionId                      string `json:"revision_id"`
}
