// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	ebsfastsnapshotrestore "github.com/golingon/terraproviders/aws/5.44.0/ebsfastsnapshotrestore"
	"io"
)

// NewEbsFastSnapshotRestore creates a new instance of [EbsFastSnapshotRestore].
func NewEbsFastSnapshotRestore(name string, args EbsFastSnapshotRestoreArgs) *EbsFastSnapshotRestore {
	return &EbsFastSnapshotRestore{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*EbsFastSnapshotRestore)(nil)

// EbsFastSnapshotRestore represents the Terraform resource aws_ebs_fast_snapshot_restore.
type EbsFastSnapshotRestore struct {
	Name      string
	Args      EbsFastSnapshotRestoreArgs
	state     *ebsFastSnapshotRestoreState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [EbsFastSnapshotRestore].
func (efsr *EbsFastSnapshotRestore) Type() string {
	return "aws_ebs_fast_snapshot_restore"
}

// LocalName returns the local name for [EbsFastSnapshotRestore].
func (efsr *EbsFastSnapshotRestore) LocalName() string {
	return efsr.Name
}

// Configuration returns the configuration (args) for [EbsFastSnapshotRestore].
func (efsr *EbsFastSnapshotRestore) Configuration() interface{} {
	return efsr.Args
}

// DependOn is used for other resources to depend on [EbsFastSnapshotRestore].
func (efsr *EbsFastSnapshotRestore) DependOn() terra.Reference {
	return terra.ReferenceResource(efsr)
}

// Dependencies returns the list of resources [EbsFastSnapshotRestore] depends_on.
func (efsr *EbsFastSnapshotRestore) Dependencies() terra.Dependencies {
	return efsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [EbsFastSnapshotRestore].
func (efsr *EbsFastSnapshotRestore) LifecycleManagement() *terra.Lifecycle {
	return efsr.Lifecycle
}

// Attributes returns the attributes for [EbsFastSnapshotRestore].
func (efsr *EbsFastSnapshotRestore) Attributes() ebsFastSnapshotRestoreAttributes {
	return ebsFastSnapshotRestoreAttributes{ref: terra.ReferenceResource(efsr)}
}

// ImportState imports the given attribute values into [EbsFastSnapshotRestore]'s state.
func (efsr *EbsFastSnapshotRestore) ImportState(av io.Reader) error {
	efsr.state = &ebsFastSnapshotRestoreState{}
	if err := json.NewDecoder(av).Decode(efsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", efsr.Type(), efsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [EbsFastSnapshotRestore] has state.
func (efsr *EbsFastSnapshotRestore) State() (*ebsFastSnapshotRestoreState, bool) {
	return efsr.state, efsr.state != nil
}

// StateMust returns the state for [EbsFastSnapshotRestore]. Panics if the state is nil.
func (efsr *EbsFastSnapshotRestore) StateMust() *ebsFastSnapshotRestoreState {
	if efsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", efsr.Type(), efsr.LocalName()))
	}
	return efsr.state
}

// EbsFastSnapshotRestoreArgs contains the configurations for aws_ebs_fast_snapshot_restore.
type EbsFastSnapshotRestoreArgs struct {
	// AvailabilityZone: string, required
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr" validate:"required"`
	// SnapshotId: string, required
	SnapshotId terra.StringValue `hcl:"snapshot_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *ebsfastsnapshotrestore.Timeouts `hcl:"timeouts,block"`
}
type ebsFastSnapshotRestoreAttributes struct {
	ref terra.Reference
}

// AvailabilityZone returns a reference to field availability_zone of aws_ebs_fast_snapshot_restore.
func (efsr ebsFastSnapshotRestoreAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(efsr.ref.Append("availability_zone"))
}

// Id returns a reference to field id of aws_ebs_fast_snapshot_restore.
func (efsr ebsFastSnapshotRestoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(efsr.ref.Append("id"))
}

// SnapshotId returns a reference to field snapshot_id of aws_ebs_fast_snapshot_restore.
func (efsr ebsFastSnapshotRestoreAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(efsr.ref.Append("snapshot_id"))
}

// State returns a reference to field state of aws_ebs_fast_snapshot_restore.
func (efsr ebsFastSnapshotRestoreAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(efsr.ref.Append("state"))
}

func (efsr ebsFastSnapshotRestoreAttributes) Timeouts() ebsfastsnapshotrestore.TimeoutsAttributes {
	return terra.ReferenceAsSingle[ebsfastsnapshotrestore.TimeoutsAttributes](efsr.ref.Append("timeouts"))
}

type ebsFastSnapshotRestoreState struct {
	AvailabilityZone string                                `json:"availability_zone"`
	Id               string                                `json:"id"`
	SnapshotId       string                                `json:"snapshot_id"`
	State            string                                `json:"state"`
	Timeouts         *ebsfastsnapshotrestore.TimeoutsState `json:"timeouts"`
}
