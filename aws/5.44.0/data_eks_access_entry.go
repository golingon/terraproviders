// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataEksAccessEntry creates a new instance of [DataEksAccessEntry].
func NewDataEksAccessEntry(name string, args DataEksAccessEntryArgs) *DataEksAccessEntry {
	return &DataEksAccessEntry{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEksAccessEntry)(nil)

// DataEksAccessEntry represents the Terraform data resource aws_eks_access_entry.
type DataEksAccessEntry struct {
	Name string
	Args DataEksAccessEntryArgs
}

// DataSource returns the Terraform object type for [DataEksAccessEntry].
func (eae *DataEksAccessEntry) DataSource() string {
	return "aws_eks_access_entry"
}

// LocalName returns the local name for [DataEksAccessEntry].
func (eae *DataEksAccessEntry) LocalName() string {
	return eae.Name
}

// Configuration returns the configuration (args) for [DataEksAccessEntry].
func (eae *DataEksAccessEntry) Configuration() interface{} {
	return eae.Args
}

// Attributes returns the attributes for [DataEksAccessEntry].
func (eae *DataEksAccessEntry) Attributes() dataEksAccessEntryAttributes {
	return dataEksAccessEntryAttributes{ref: terra.ReferenceDataResource(eae)}
}

// DataEksAccessEntryArgs contains the configurations for aws_eks_access_entry.
type DataEksAccessEntryArgs struct {
	// ClusterName: string, required
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PrincipalArn: string, required
	PrincipalArn terra.StringValue `hcl:"principal_arn,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type dataEksAccessEntryAttributes struct {
	ref terra.Reference
}

// AccessEntryArn returns a reference to field access_entry_arn of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) AccessEntryArn() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("access_entry_arn"))
}

// ClusterName returns a reference to field cluster_name of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("cluster_name"))
}

// CreatedAt returns a reference to field created_at of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("created_at"))
}

// Id returns a reference to field id of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("id"))
}

// KubernetesGroups returns a reference to field kubernetes_groups of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) KubernetesGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](eae.ref.Append("kubernetes_groups"))
}

// ModifiedAt returns a reference to field modified_at of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) ModifiedAt() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("modified_at"))
}

// PrincipalArn returns a reference to field principal_arn of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) PrincipalArn() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("principal_arn"))
}

// Tags returns a reference to field tags of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](eae.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](eae.ref.Append("tags_all"))
}

// Type returns a reference to field type of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("type"))
}

// UserName returns a reference to field user_name of aws_eks_access_entry.
func (eae dataEksAccessEntryAttributes) UserName() terra.StringValue {
	return terra.ReferenceAsString(eae.ref.Append("user_name"))
}
