// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewQuicksightTemplateAlias creates a new instance of [QuicksightTemplateAlias].
func NewQuicksightTemplateAlias(name string, args QuicksightTemplateAliasArgs) *QuicksightTemplateAlias {
	return &QuicksightTemplateAlias{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*QuicksightTemplateAlias)(nil)

// QuicksightTemplateAlias represents the Terraform resource aws_quicksight_template_alias.
type QuicksightTemplateAlias struct {
	Name      string
	Args      QuicksightTemplateAliasArgs
	state     *quicksightTemplateAliasState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [QuicksightTemplateAlias].
func (qta *QuicksightTemplateAlias) Type() string {
	return "aws_quicksight_template_alias"
}

// LocalName returns the local name for [QuicksightTemplateAlias].
func (qta *QuicksightTemplateAlias) LocalName() string {
	return qta.Name
}

// Configuration returns the configuration (args) for [QuicksightTemplateAlias].
func (qta *QuicksightTemplateAlias) Configuration() interface{} {
	return qta.Args
}

// DependOn is used for other resources to depend on [QuicksightTemplateAlias].
func (qta *QuicksightTemplateAlias) DependOn() terra.Reference {
	return terra.ReferenceResource(qta)
}

// Dependencies returns the list of resources [QuicksightTemplateAlias] depends_on.
func (qta *QuicksightTemplateAlias) Dependencies() terra.Dependencies {
	return qta.DependsOn
}

// LifecycleManagement returns the lifecycle block for [QuicksightTemplateAlias].
func (qta *QuicksightTemplateAlias) LifecycleManagement() *terra.Lifecycle {
	return qta.Lifecycle
}

// Attributes returns the attributes for [QuicksightTemplateAlias].
func (qta *QuicksightTemplateAlias) Attributes() quicksightTemplateAliasAttributes {
	return quicksightTemplateAliasAttributes{ref: terra.ReferenceResource(qta)}
}

// ImportState imports the given attribute values into [QuicksightTemplateAlias]'s state.
func (qta *QuicksightTemplateAlias) ImportState(av io.Reader) error {
	qta.state = &quicksightTemplateAliasState{}
	if err := json.NewDecoder(av).Decode(qta.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", qta.Type(), qta.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [QuicksightTemplateAlias] has state.
func (qta *QuicksightTemplateAlias) State() (*quicksightTemplateAliasState, bool) {
	return qta.state, qta.state != nil
}

// StateMust returns the state for [QuicksightTemplateAlias]. Panics if the state is nil.
func (qta *QuicksightTemplateAlias) StateMust() *quicksightTemplateAliasState {
	if qta.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", qta.Type(), qta.LocalName()))
	}
	return qta.state
}

// QuicksightTemplateAliasArgs contains the configurations for aws_quicksight_template_alias.
type QuicksightTemplateAliasArgs struct {
	// AliasName: string, required
	AliasName terra.StringValue `hcl:"alias_name,attr" validate:"required"`
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// TemplateId: string, required
	TemplateId terra.StringValue `hcl:"template_id,attr" validate:"required"`
	// TemplateVersionNumber: number, required
	TemplateVersionNumber terra.NumberValue `hcl:"template_version_number,attr" validate:"required"`
}
type quicksightTemplateAliasAttributes struct {
	ref terra.Reference
}

// AliasName returns a reference to field alias_name of aws_quicksight_template_alias.
func (qta quicksightTemplateAliasAttributes) AliasName() terra.StringValue {
	return terra.ReferenceAsString(qta.ref.Append("alias_name"))
}

// Arn returns a reference to field arn of aws_quicksight_template_alias.
func (qta quicksightTemplateAliasAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(qta.ref.Append("arn"))
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_template_alias.
func (qta quicksightTemplateAliasAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(qta.ref.Append("aws_account_id"))
}

// Id returns a reference to field id of aws_quicksight_template_alias.
func (qta quicksightTemplateAliasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(qta.ref.Append("id"))
}

// TemplateId returns a reference to field template_id of aws_quicksight_template_alias.
func (qta quicksightTemplateAliasAttributes) TemplateId() terra.StringValue {
	return terra.ReferenceAsString(qta.ref.Append("template_id"))
}

// TemplateVersionNumber returns a reference to field template_version_number of aws_quicksight_template_alias.
func (qta quicksightTemplateAliasAttributes) TemplateVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(qta.ref.Append("template_version_number"))
}

type quicksightTemplateAliasState struct {
	AliasName             string  `json:"alias_name"`
	Arn                   string  `json:"arn"`
	AwsAccountId          string  `json:"aws_account_id"`
	Id                    string  `json:"id"`
	TemplateId            string  `json:"template_id"`
	TemplateVersionNumber float64 `json:"template_version_number"`
}
