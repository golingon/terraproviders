// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataec2publicipv4pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PoolAddressRanges struct{}

type PoolAddressRangesAttributes struct {
	ref terra.Reference
}

func (par PoolAddressRangesAttributes) InternalRef() (terra.Reference, error) {
	return par.ref, nil
}

func (par PoolAddressRangesAttributes) InternalWithRef(ref terra.Reference) PoolAddressRangesAttributes {
	return PoolAddressRangesAttributes{ref: ref}
}

func (par PoolAddressRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return par.ref.InternalTokens()
}

func (par PoolAddressRangesAttributes) AddressCount() terra.NumberValue {
	return terra.ReferenceAsNumber(par.ref.Append("address_count"))
}

func (par PoolAddressRangesAttributes) AvailableAddressCount() terra.NumberValue {
	return terra.ReferenceAsNumber(par.ref.Append("available_address_count"))
}

func (par PoolAddressRangesAttributes) FirstAddress() terra.StringValue {
	return terra.ReferenceAsString(par.ref.Append("first_address"))
}

func (par PoolAddressRangesAttributes) LastAddress() terra.StringValue {
	return terra.ReferenceAsString(par.ref.Append("last_address"))
}

type PoolAddressRangesState struct {
	AddressCount          float64 `json:"address_count"`
	AvailableAddressCount float64 `json:"available_address_count"`
	FirstAddress          string  `json:"first_address"`
	LastAddress           string  `json:"last_address"`
}
