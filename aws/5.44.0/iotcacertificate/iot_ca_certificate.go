// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package iotcacertificate

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Validity struct{}

type RegistrationConfig struct {
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// TemplateBody: string, optional
	TemplateBody terra.StringValue `hcl:"template_body,attr"`
	// TemplateName: string, optional
	TemplateName terra.StringValue `hcl:"template_name,attr"`
}

type ValidityAttributes struct {
	ref terra.Reference
}

func (v ValidityAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ValidityAttributes) InternalWithRef(ref terra.Reference) ValidityAttributes {
	return ValidityAttributes{ref: ref}
}

func (v ValidityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v ValidityAttributes) NotAfter() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("not_after"))
}

func (v ValidityAttributes) NotBefore() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("not_before"))
}

type RegistrationConfigAttributes struct {
	ref terra.Reference
}

func (rc RegistrationConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc RegistrationConfigAttributes) InternalWithRef(ref terra.Reference) RegistrationConfigAttributes {
	return RegistrationConfigAttributes{ref: ref}
}

func (rc RegistrationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc RegistrationConfigAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("role_arn"))
}

func (rc RegistrationConfigAttributes) TemplateBody() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("template_body"))
}

func (rc RegistrationConfigAttributes) TemplateName() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("template_name"))
}

type ValidityState struct {
	NotAfter  string `json:"not_after"`
	NotBefore string `json:"not_before"`
}

type RegistrationConfigState struct {
	RoleArn      string `json:"role_arn"`
	TemplateBody string `json:"template_body"`
	TemplateName string `json:"template_name"`
}
