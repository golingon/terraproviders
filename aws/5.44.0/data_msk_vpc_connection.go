// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataMskVpcConnection creates a new instance of [DataMskVpcConnection].
func NewDataMskVpcConnection(name string, args DataMskVpcConnectionArgs) *DataMskVpcConnection {
	return &DataMskVpcConnection{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMskVpcConnection)(nil)

// DataMskVpcConnection represents the Terraform data resource aws_msk_vpc_connection.
type DataMskVpcConnection struct {
	Name string
	Args DataMskVpcConnectionArgs
}

// DataSource returns the Terraform object type for [DataMskVpcConnection].
func (mvc *DataMskVpcConnection) DataSource() string {
	return "aws_msk_vpc_connection"
}

// LocalName returns the local name for [DataMskVpcConnection].
func (mvc *DataMskVpcConnection) LocalName() string {
	return mvc.Name
}

// Configuration returns the configuration (args) for [DataMskVpcConnection].
func (mvc *DataMskVpcConnection) Configuration() interface{} {
	return mvc.Args
}

// Attributes returns the attributes for [DataMskVpcConnection].
func (mvc *DataMskVpcConnection) Attributes() dataMskVpcConnectionAttributes {
	return dataMskVpcConnectionAttributes{ref: terra.ReferenceDataResource(mvc)}
}

// DataMskVpcConnectionArgs contains the configurations for aws_msk_vpc_connection.
type DataMskVpcConnectionArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}
type dataMskVpcConnectionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(mvc.ref.Append("arn"))
}

// Authentication returns a reference to field authentication of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) Authentication() terra.StringValue {
	return terra.ReferenceAsString(mvc.ref.Append("authentication"))
}

// ClientSubnets returns a reference to field client_subnets of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) ClientSubnets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](mvc.ref.Append("client_subnets"))
}

// Id returns a reference to field id of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mvc.ref.Append("id"))
}

// SecurityGroups returns a reference to field security_groups of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](mvc.ref.Append("security_groups"))
}

// Tags returns a reference to field tags of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mvc.ref.Append("tags"))
}

// TargetClusterArn returns a reference to field target_cluster_arn of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) TargetClusterArn() terra.StringValue {
	return terra.ReferenceAsString(mvc.ref.Append("target_cluster_arn"))
}

// VpcId returns a reference to field vpc_id of aws_msk_vpc_connection.
func (mvc dataMskVpcConnectionAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(mvc.ref.Append("vpc_id"))
}
