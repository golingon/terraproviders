// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package s3bucketobjectlockconfiguration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Rule struct {
	// DefaultRetention: required
	DefaultRetention *DefaultRetention `hcl:"default_retention,block" validate:"required"`
}

type DefaultRetention struct {
	// Days: number, optional
	Days terra.NumberValue `hcl:"days,attr"`
	// Mode: string, optional
	Mode terra.StringValue `hcl:"mode,attr"`
	// Years: number, optional
	Years terra.NumberValue `hcl:"years,attr"`
}

type RuleAttributes struct {
	ref terra.Reference
}

func (r RuleAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RuleAttributes) InternalWithRef(ref terra.Reference) RuleAttributes {
	return RuleAttributes{ref: ref}
}

func (r RuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RuleAttributes) DefaultRetention() terra.ListValue[DefaultRetentionAttributes] {
	return terra.ReferenceAsList[DefaultRetentionAttributes](r.ref.Append("default_retention"))
}

type DefaultRetentionAttributes struct {
	ref terra.Reference
}

func (dr DefaultRetentionAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr DefaultRetentionAttributes) InternalWithRef(ref terra.Reference) DefaultRetentionAttributes {
	return DefaultRetentionAttributes{ref: ref}
}

func (dr DefaultRetentionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr DefaultRetentionAttributes) Days() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("days"))
}

func (dr DefaultRetentionAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("mode"))
}

func (dr DefaultRetentionAttributes) Years() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("years"))
}

type RuleState struct {
	DefaultRetention []DefaultRetentionState `json:"default_retention"`
}

type DefaultRetentionState struct {
	Days  float64 `json:"days"`
	Mode  string  `json:"mode"`
	Years float64 `json:"years"`
}
