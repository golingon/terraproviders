// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package configconformancepack

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type InputParameter struct {
	// ParameterName: string, required
	ParameterName terra.StringValue `hcl:"parameter_name,attr" validate:"required"`
	// ParameterValue: string, required
	ParameterValue terra.StringValue `hcl:"parameter_value,attr" validate:"required"`
}

type InputParameterAttributes struct {
	ref terra.Reference
}

func (ip InputParameterAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip InputParameterAttributes) InternalWithRef(ref terra.Reference) InputParameterAttributes {
	return InputParameterAttributes{ref: ref}
}

func (ip InputParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip InputParameterAttributes) ParameterName() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("parameter_name"))
}

func (ip InputParameterAttributes) ParameterValue() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("parameter_value"))
}

type InputParameterState struct {
	ParameterName  string `json:"parameter_name"`
	ParameterValue string `json:"parameter_value"`
}
