// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	dataredshiftproducerdatashares "github.com/golingon/terraproviders/aws/5.44.0/dataredshiftproducerdatashares"
)

// NewDataRedshiftProducerDataShares creates a new instance of [DataRedshiftProducerDataShares].
func NewDataRedshiftProducerDataShares(name string, args DataRedshiftProducerDataSharesArgs) *DataRedshiftProducerDataShares {
	return &DataRedshiftProducerDataShares{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedshiftProducerDataShares)(nil)

// DataRedshiftProducerDataShares represents the Terraform data resource aws_redshift_producer_data_shares.
type DataRedshiftProducerDataShares struct {
	Name string
	Args DataRedshiftProducerDataSharesArgs
}

// DataSource returns the Terraform object type for [DataRedshiftProducerDataShares].
func (rpds *DataRedshiftProducerDataShares) DataSource() string {
	return "aws_redshift_producer_data_shares"
}

// LocalName returns the local name for [DataRedshiftProducerDataShares].
func (rpds *DataRedshiftProducerDataShares) LocalName() string {
	return rpds.Name
}

// Configuration returns the configuration (args) for [DataRedshiftProducerDataShares].
func (rpds *DataRedshiftProducerDataShares) Configuration() interface{} {
	return rpds.Args
}

// Attributes returns the attributes for [DataRedshiftProducerDataShares].
func (rpds *DataRedshiftProducerDataShares) Attributes() dataRedshiftProducerDataSharesAttributes {
	return dataRedshiftProducerDataSharesAttributes{ref: terra.ReferenceDataResource(rpds)}
}

// DataRedshiftProducerDataSharesArgs contains the configurations for aws_redshift_producer_data_shares.
type DataRedshiftProducerDataSharesArgs struct {
	// ProducerArn: string, required
	ProducerArn terra.StringValue `hcl:"producer_arn,attr" validate:"required"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
	// DataShares: min=0
	DataShares []dataredshiftproducerdatashares.DataShares `hcl:"data_shares,block" validate:"min=0"`
}
type dataRedshiftProducerDataSharesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_redshift_producer_data_shares.
func (rpds dataRedshiftProducerDataSharesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rpds.ref.Append("id"))
}

// ProducerArn returns a reference to field producer_arn of aws_redshift_producer_data_shares.
func (rpds dataRedshiftProducerDataSharesAttributes) ProducerArn() terra.StringValue {
	return terra.ReferenceAsString(rpds.ref.Append("producer_arn"))
}

// Status returns a reference to field status of aws_redshift_producer_data_shares.
func (rpds dataRedshiftProducerDataSharesAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(rpds.ref.Append("status"))
}

func (rpds dataRedshiftProducerDataSharesAttributes) DataShares() terra.ListValue[dataredshiftproducerdatashares.DataSharesAttributes] {
	return terra.ReferenceAsList[dataredshiftproducerdatashares.DataSharesAttributes](rpds.ref.Append("data_shares"))
}
