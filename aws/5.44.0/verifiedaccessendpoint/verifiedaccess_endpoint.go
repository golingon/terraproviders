// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package verifiedaccessendpoint

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LoadBalancerOptions struct {
	// LoadBalancerArn: string, optional
	LoadBalancerArn terra.StringValue `hcl:"load_balancer_arn,attr"`
	// Port: number, optional
	Port terra.NumberValue `hcl:"port,attr"`
	// Protocol: string, optional
	Protocol terra.StringValue `hcl:"protocol,attr"`
	// SubnetIds: set of string, optional
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr"`
}

type NetworkInterfaceOptions struct {
	// NetworkInterfaceId: string, optional
	NetworkInterfaceId terra.StringValue `hcl:"network_interface_id,attr"`
	// Port: number, optional
	Port terra.NumberValue `hcl:"port,attr"`
	// Protocol: string, optional
	Protocol terra.StringValue `hcl:"protocol,attr"`
}

type SseSpecification struct {
	// CustomerManagedKeyEnabled: bool, optional
	CustomerManagedKeyEnabled terra.BoolValue `hcl:"customer_managed_key_enabled,attr"`
	// KmsKeyArn: string, optional
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LoadBalancerOptionsAttributes struct {
	ref terra.Reference
}

func (lbo LoadBalancerOptionsAttributes) InternalRef() (terra.Reference, error) {
	return lbo.ref, nil
}

func (lbo LoadBalancerOptionsAttributes) InternalWithRef(ref terra.Reference) LoadBalancerOptionsAttributes {
	return LoadBalancerOptionsAttributes{ref: ref}
}

func (lbo LoadBalancerOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lbo.ref.InternalTokens()
}

func (lbo LoadBalancerOptionsAttributes) LoadBalancerArn() terra.StringValue {
	return terra.ReferenceAsString(lbo.ref.Append("load_balancer_arn"))
}

func (lbo LoadBalancerOptionsAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(lbo.ref.Append("port"))
}

func (lbo LoadBalancerOptionsAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(lbo.ref.Append("protocol"))
}

func (lbo LoadBalancerOptionsAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](lbo.ref.Append("subnet_ids"))
}

type NetworkInterfaceOptionsAttributes struct {
	ref terra.Reference
}

func (nio NetworkInterfaceOptionsAttributes) InternalRef() (terra.Reference, error) {
	return nio.ref, nil
}

func (nio NetworkInterfaceOptionsAttributes) InternalWithRef(ref terra.Reference) NetworkInterfaceOptionsAttributes {
	return NetworkInterfaceOptionsAttributes{ref: ref}
}

func (nio NetworkInterfaceOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nio.ref.InternalTokens()
}

func (nio NetworkInterfaceOptionsAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(nio.ref.Append("network_interface_id"))
}

func (nio NetworkInterfaceOptionsAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(nio.ref.Append("port"))
}

func (nio NetworkInterfaceOptionsAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(nio.ref.Append("protocol"))
}

type SseSpecificationAttributes struct {
	ref terra.Reference
}

func (ss SseSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss SseSpecificationAttributes) InternalWithRef(ref terra.Reference) SseSpecificationAttributes {
	return SseSpecificationAttributes{ref: ref}
}

func (ss SseSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss SseSpecificationAttributes) CustomerManagedKeyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ss.ref.Append("customer_managed_key_enabled"))
}

func (ss SseSpecificationAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("kms_key_arn"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LoadBalancerOptionsState struct {
	LoadBalancerArn string   `json:"load_balancer_arn"`
	Port            float64  `json:"port"`
	Protocol        string   `json:"protocol"`
	SubnetIds       []string `json:"subnet_ids"`
}

type NetworkInterfaceOptionsState struct {
	NetworkInterfaceId string  `json:"network_interface_id"`
	Port               float64 `json:"port"`
	Protocol           string  `json:"protocol"`
}

type SseSpecificationState struct {
	CustomerManagedKeyEnabled bool   `json:"customer_managed_key_enabled"`
	KmsKeyArn                 string `json:"kms_key_arn"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
