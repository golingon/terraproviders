// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewVpclatticeServiceNetwork creates a new instance of [VpclatticeServiceNetwork].
func NewVpclatticeServiceNetwork(name string, args VpclatticeServiceNetworkArgs) *VpclatticeServiceNetwork {
	return &VpclatticeServiceNetwork{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpclatticeServiceNetwork)(nil)

// VpclatticeServiceNetwork represents the Terraform resource aws_vpclattice_service_network.
type VpclatticeServiceNetwork struct {
	Name      string
	Args      VpclatticeServiceNetworkArgs
	state     *vpclatticeServiceNetworkState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VpclatticeServiceNetwork].
func (vsn *VpclatticeServiceNetwork) Type() string {
	return "aws_vpclattice_service_network"
}

// LocalName returns the local name for [VpclatticeServiceNetwork].
func (vsn *VpclatticeServiceNetwork) LocalName() string {
	return vsn.Name
}

// Configuration returns the configuration (args) for [VpclatticeServiceNetwork].
func (vsn *VpclatticeServiceNetwork) Configuration() interface{} {
	return vsn.Args
}

// DependOn is used for other resources to depend on [VpclatticeServiceNetwork].
func (vsn *VpclatticeServiceNetwork) DependOn() terra.Reference {
	return terra.ReferenceResource(vsn)
}

// Dependencies returns the list of resources [VpclatticeServiceNetwork] depends_on.
func (vsn *VpclatticeServiceNetwork) Dependencies() terra.Dependencies {
	return vsn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VpclatticeServiceNetwork].
func (vsn *VpclatticeServiceNetwork) LifecycleManagement() *terra.Lifecycle {
	return vsn.Lifecycle
}

// Attributes returns the attributes for [VpclatticeServiceNetwork].
func (vsn *VpclatticeServiceNetwork) Attributes() vpclatticeServiceNetworkAttributes {
	return vpclatticeServiceNetworkAttributes{ref: terra.ReferenceResource(vsn)}
}

// ImportState imports the given attribute values into [VpclatticeServiceNetwork]'s state.
func (vsn *VpclatticeServiceNetwork) ImportState(av io.Reader) error {
	vsn.state = &vpclatticeServiceNetworkState{}
	if err := json.NewDecoder(av).Decode(vsn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vsn.Type(), vsn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VpclatticeServiceNetwork] has state.
func (vsn *VpclatticeServiceNetwork) State() (*vpclatticeServiceNetworkState, bool) {
	return vsn.state, vsn.state != nil
}

// StateMust returns the state for [VpclatticeServiceNetwork]. Panics if the state is nil.
func (vsn *VpclatticeServiceNetwork) StateMust() *vpclatticeServiceNetworkState {
	if vsn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vsn.Type(), vsn.LocalName()))
	}
	return vsn.state
}

// VpclatticeServiceNetworkArgs contains the configurations for aws_vpclattice_service_network.
type VpclatticeServiceNetworkArgs struct {
	// AuthType: string, optional
	AuthType terra.StringValue `hcl:"auth_type,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type vpclatticeServiceNetworkAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_vpclattice_service_network.
func (vsn vpclatticeServiceNetworkAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vsn.ref.Append("arn"))
}

// AuthType returns a reference to field auth_type of aws_vpclattice_service_network.
func (vsn vpclatticeServiceNetworkAttributes) AuthType() terra.StringValue {
	return terra.ReferenceAsString(vsn.ref.Append("auth_type"))
}

// Id returns a reference to field id of aws_vpclattice_service_network.
func (vsn vpclatticeServiceNetworkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vsn.ref.Append("id"))
}

// Name returns a reference to field name of aws_vpclattice_service_network.
func (vsn vpclatticeServiceNetworkAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vsn.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_vpclattice_service_network.
func (vsn vpclatticeServiceNetworkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vsn.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_vpclattice_service_network.
func (vsn vpclatticeServiceNetworkAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vsn.ref.Append("tags_all"))
}

type vpclatticeServiceNetworkState struct {
	Arn      string            `json:"arn"`
	AuthType string            `json:"auth_type"`
	Id       string            `json:"id"`
	Name     string            `json:"name"`
	Tags     map[string]string `json:"tags"`
	TagsAll  map[string]string `json:"tags_all"`
}
