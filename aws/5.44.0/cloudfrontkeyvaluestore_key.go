// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewCloudfrontkeyvaluestoreKey creates a new instance of [CloudfrontkeyvaluestoreKey].
func NewCloudfrontkeyvaluestoreKey(name string, args CloudfrontkeyvaluestoreKeyArgs) *CloudfrontkeyvaluestoreKey {
	return &CloudfrontkeyvaluestoreKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudfrontkeyvaluestoreKey)(nil)

// CloudfrontkeyvaluestoreKey represents the Terraform resource aws_cloudfrontkeyvaluestore_key.
type CloudfrontkeyvaluestoreKey struct {
	Name      string
	Args      CloudfrontkeyvaluestoreKeyArgs
	state     *cloudfrontkeyvaluestoreKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CloudfrontkeyvaluestoreKey].
func (ck *CloudfrontkeyvaluestoreKey) Type() string {
	return "aws_cloudfrontkeyvaluestore_key"
}

// LocalName returns the local name for [CloudfrontkeyvaluestoreKey].
func (ck *CloudfrontkeyvaluestoreKey) LocalName() string {
	return ck.Name
}

// Configuration returns the configuration (args) for [CloudfrontkeyvaluestoreKey].
func (ck *CloudfrontkeyvaluestoreKey) Configuration() interface{} {
	return ck.Args
}

// DependOn is used for other resources to depend on [CloudfrontkeyvaluestoreKey].
func (ck *CloudfrontkeyvaluestoreKey) DependOn() terra.Reference {
	return terra.ReferenceResource(ck)
}

// Dependencies returns the list of resources [CloudfrontkeyvaluestoreKey] depends_on.
func (ck *CloudfrontkeyvaluestoreKey) Dependencies() terra.Dependencies {
	return ck.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CloudfrontkeyvaluestoreKey].
func (ck *CloudfrontkeyvaluestoreKey) LifecycleManagement() *terra.Lifecycle {
	return ck.Lifecycle
}

// Attributes returns the attributes for [CloudfrontkeyvaluestoreKey].
func (ck *CloudfrontkeyvaluestoreKey) Attributes() cloudfrontkeyvaluestoreKeyAttributes {
	return cloudfrontkeyvaluestoreKeyAttributes{ref: terra.ReferenceResource(ck)}
}

// ImportState imports the given attribute values into [CloudfrontkeyvaluestoreKey]'s state.
func (ck *CloudfrontkeyvaluestoreKey) ImportState(av io.Reader) error {
	ck.state = &cloudfrontkeyvaluestoreKeyState{}
	if err := json.NewDecoder(av).Decode(ck.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ck.Type(), ck.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CloudfrontkeyvaluestoreKey] has state.
func (ck *CloudfrontkeyvaluestoreKey) State() (*cloudfrontkeyvaluestoreKeyState, bool) {
	return ck.state, ck.state != nil
}

// StateMust returns the state for [CloudfrontkeyvaluestoreKey]. Panics if the state is nil.
func (ck *CloudfrontkeyvaluestoreKey) StateMust() *cloudfrontkeyvaluestoreKeyState {
	if ck.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ck.Type(), ck.LocalName()))
	}
	return ck.state
}

// CloudfrontkeyvaluestoreKeyArgs contains the configurations for aws_cloudfrontkeyvaluestore_key.
type CloudfrontkeyvaluestoreKeyArgs struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// KeyValueStoreArn: string, required
	KeyValueStoreArn terra.StringValue `hcl:"key_value_store_arn,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}
type cloudfrontkeyvaluestoreKeyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_cloudfrontkeyvaluestore_key.
func (ck cloudfrontkeyvaluestoreKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ck.ref.Append("id"))
}

// Key returns a reference to field key of aws_cloudfrontkeyvaluestore_key.
func (ck cloudfrontkeyvaluestoreKeyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ck.ref.Append("key"))
}

// KeyValueStoreArn returns a reference to field key_value_store_arn of aws_cloudfrontkeyvaluestore_key.
func (ck cloudfrontkeyvaluestoreKeyAttributes) KeyValueStoreArn() terra.StringValue {
	return terra.ReferenceAsString(ck.ref.Append("key_value_store_arn"))
}

// TotalSizeInBytes returns a reference to field total_size_in_bytes of aws_cloudfrontkeyvaluestore_key.
func (ck cloudfrontkeyvaluestoreKeyAttributes) TotalSizeInBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(ck.ref.Append("total_size_in_bytes"))
}

// Value returns a reference to field value of aws_cloudfrontkeyvaluestore_key.
func (ck cloudfrontkeyvaluestoreKeyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ck.ref.Append("value"))
}

type cloudfrontkeyvaluestoreKeyState struct {
	Id               string  `json:"id"`
	Key              string  `json:"key"`
	KeyValueStoreArn string  `json:"key_value_store_arn"`
	TotalSizeInBytes float64 `json:"total_size_in_bytes"`
	Value            string  `json:"value"`
}
