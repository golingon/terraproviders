// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	dataconnectinstancestorageconfig "github.com/golingon/terraproviders/aws/5.44.0/dataconnectinstancestorageconfig"
)

// NewDataConnectInstanceStorageConfig creates a new instance of [DataConnectInstanceStorageConfig].
func NewDataConnectInstanceStorageConfig(name string, args DataConnectInstanceStorageConfigArgs) *DataConnectInstanceStorageConfig {
	return &DataConnectInstanceStorageConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataConnectInstanceStorageConfig)(nil)

// DataConnectInstanceStorageConfig represents the Terraform data resource aws_connect_instance_storage_config.
type DataConnectInstanceStorageConfig struct {
	Name string
	Args DataConnectInstanceStorageConfigArgs
}

// DataSource returns the Terraform object type for [DataConnectInstanceStorageConfig].
func (cisc *DataConnectInstanceStorageConfig) DataSource() string {
	return "aws_connect_instance_storage_config"
}

// LocalName returns the local name for [DataConnectInstanceStorageConfig].
func (cisc *DataConnectInstanceStorageConfig) LocalName() string {
	return cisc.Name
}

// Configuration returns the configuration (args) for [DataConnectInstanceStorageConfig].
func (cisc *DataConnectInstanceStorageConfig) Configuration() interface{} {
	return cisc.Args
}

// Attributes returns the attributes for [DataConnectInstanceStorageConfig].
func (cisc *DataConnectInstanceStorageConfig) Attributes() dataConnectInstanceStorageConfigAttributes {
	return dataConnectInstanceStorageConfigAttributes{ref: terra.ReferenceDataResource(cisc)}
}

// DataConnectInstanceStorageConfigArgs contains the configurations for aws_connect_instance_storage_config.
type DataConnectInstanceStorageConfigArgs struct {
	// AssociationId: string, required
	AssociationId terra.StringValue `hcl:"association_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// ResourceType: string, required
	ResourceType terra.StringValue `hcl:"resource_type,attr" validate:"required"`
	// StorageConfig: min=0
	StorageConfig []dataconnectinstancestorageconfig.StorageConfig `hcl:"storage_config,block" validate:"min=0"`
}
type dataConnectInstanceStorageConfigAttributes struct {
	ref terra.Reference
}

// AssociationId returns a reference to field association_id of aws_connect_instance_storage_config.
func (cisc dataConnectInstanceStorageConfigAttributes) AssociationId() terra.StringValue {
	return terra.ReferenceAsString(cisc.ref.Append("association_id"))
}

// Id returns a reference to field id of aws_connect_instance_storage_config.
func (cisc dataConnectInstanceStorageConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cisc.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of aws_connect_instance_storage_config.
func (cisc dataConnectInstanceStorageConfigAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(cisc.ref.Append("instance_id"))
}

// ResourceType returns a reference to field resource_type of aws_connect_instance_storage_config.
func (cisc dataConnectInstanceStorageConfigAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(cisc.ref.Append("resource_type"))
}

func (cisc dataConnectInstanceStorageConfigAttributes) StorageConfig() terra.ListValue[dataconnectinstancestorageconfig.StorageConfigAttributes] {
	return terra.ReferenceAsList[dataconnectinstancestorageconfig.StorageConfigAttributes](cisc.ref.Append("storage_config"))
}
