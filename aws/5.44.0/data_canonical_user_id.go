// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataCanonicalUserId creates a new instance of [DataCanonicalUserId].
func NewDataCanonicalUserId(name string, args DataCanonicalUserIdArgs) *DataCanonicalUserId {
	return &DataCanonicalUserId{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCanonicalUserId)(nil)

// DataCanonicalUserId represents the Terraform data resource aws_canonical_user_id.
type DataCanonicalUserId struct {
	Name string
	Args DataCanonicalUserIdArgs
}

// DataSource returns the Terraform object type for [DataCanonicalUserId].
func (cui *DataCanonicalUserId) DataSource() string {
	return "aws_canonical_user_id"
}

// LocalName returns the local name for [DataCanonicalUserId].
func (cui *DataCanonicalUserId) LocalName() string {
	return cui.Name
}

// Configuration returns the configuration (args) for [DataCanonicalUserId].
func (cui *DataCanonicalUserId) Configuration() interface{} {
	return cui.Args
}

// Attributes returns the attributes for [DataCanonicalUserId].
func (cui *DataCanonicalUserId) Attributes() dataCanonicalUserIdAttributes {
	return dataCanonicalUserIdAttributes{ref: terra.ReferenceDataResource(cui)}
}

// DataCanonicalUserIdArgs contains the configurations for aws_canonical_user_id.
type DataCanonicalUserIdArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}
type dataCanonicalUserIdAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of aws_canonical_user_id.
func (cui dataCanonicalUserIdAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cui.ref.Append("display_name"))
}

// Id returns a reference to field id of aws_canonical_user_id.
func (cui dataCanonicalUserIdAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cui.ref.Append("id"))
}
