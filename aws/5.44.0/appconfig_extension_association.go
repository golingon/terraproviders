// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewAppconfigExtensionAssociation creates a new instance of [AppconfigExtensionAssociation].
func NewAppconfigExtensionAssociation(name string, args AppconfigExtensionAssociationArgs) *AppconfigExtensionAssociation {
	return &AppconfigExtensionAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AppconfigExtensionAssociation)(nil)

// AppconfigExtensionAssociation represents the Terraform resource aws_appconfig_extension_association.
type AppconfigExtensionAssociation struct {
	Name      string
	Args      AppconfigExtensionAssociationArgs
	state     *appconfigExtensionAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AppconfigExtensionAssociation].
func (aea *AppconfigExtensionAssociation) Type() string {
	return "aws_appconfig_extension_association"
}

// LocalName returns the local name for [AppconfigExtensionAssociation].
func (aea *AppconfigExtensionAssociation) LocalName() string {
	return aea.Name
}

// Configuration returns the configuration (args) for [AppconfigExtensionAssociation].
func (aea *AppconfigExtensionAssociation) Configuration() interface{} {
	return aea.Args
}

// DependOn is used for other resources to depend on [AppconfigExtensionAssociation].
func (aea *AppconfigExtensionAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(aea)
}

// Dependencies returns the list of resources [AppconfigExtensionAssociation] depends_on.
func (aea *AppconfigExtensionAssociation) Dependencies() terra.Dependencies {
	return aea.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AppconfigExtensionAssociation].
func (aea *AppconfigExtensionAssociation) LifecycleManagement() *terra.Lifecycle {
	return aea.Lifecycle
}

// Attributes returns the attributes for [AppconfigExtensionAssociation].
func (aea *AppconfigExtensionAssociation) Attributes() appconfigExtensionAssociationAttributes {
	return appconfigExtensionAssociationAttributes{ref: terra.ReferenceResource(aea)}
}

// ImportState imports the given attribute values into [AppconfigExtensionAssociation]'s state.
func (aea *AppconfigExtensionAssociation) ImportState(av io.Reader) error {
	aea.state = &appconfigExtensionAssociationState{}
	if err := json.NewDecoder(av).Decode(aea.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aea.Type(), aea.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AppconfigExtensionAssociation] has state.
func (aea *AppconfigExtensionAssociation) State() (*appconfigExtensionAssociationState, bool) {
	return aea.state, aea.state != nil
}

// StateMust returns the state for [AppconfigExtensionAssociation]. Panics if the state is nil.
func (aea *AppconfigExtensionAssociation) StateMust() *appconfigExtensionAssociationState {
	if aea.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aea.Type(), aea.LocalName()))
	}
	return aea.state
}

// AppconfigExtensionAssociationArgs contains the configurations for aws_appconfig_extension_association.
type AppconfigExtensionAssociationArgs struct {
	// ExtensionArn: string, required
	ExtensionArn terra.StringValue `hcl:"extension_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}
type appconfigExtensionAssociationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_appconfig_extension_association.
func (aea appconfigExtensionAssociationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aea.ref.Append("arn"))
}

// ExtensionArn returns a reference to field extension_arn of aws_appconfig_extension_association.
func (aea appconfigExtensionAssociationAttributes) ExtensionArn() terra.StringValue {
	return terra.ReferenceAsString(aea.ref.Append("extension_arn"))
}

// ExtensionVersion returns a reference to field extension_version of aws_appconfig_extension_association.
func (aea appconfigExtensionAssociationAttributes) ExtensionVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(aea.ref.Append("extension_version"))
}

// Id returns a reference to field id of aws_appconfig_extension_association.
func (aea appconfigExtensionAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aea.ref.Append("id"))
}

// Parameters returns a reference to field parameters of aws_appconfig_extension_association.
func (aea appconfigExtensionAssociationAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aea.ref.Append("parameters"))
}

// ResourceArn returns a reference to field resource_arn of aws_appconfig_extension_association.
func (aea appconfigExtensionAssociationAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(aea.ref.Append("resource_arn"))
}

type appconfigExtensionAssociationState struct {
	Arn              string            `json:"arn"`
	ExtensionArn     string            `json:"extension_arn"`
	ExtensionVersion float64           `json:"extension_version"`
	Id               string            `json:"id"`
	Parameters       map[string]string `json:"parameters"`
	ResourceArn      string            `json:"resource_arn"`
}
