// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	datassoadminapplication "github.com/golingon/terraproviders/aws/5.44.0/datassoadminapplication"
)

// NewDataSsoadminApplication creates a new instance of [DataSsoadminApplication].
func NewDataSsoadminApplication(name string, args DataSsoadminApplicationArgs) *DataSsoadminApplication {
	return &DataSsoadminApplication{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSsoadminApplication)(nil)

// DataSsoadminApplication represents the Terraform data resource aws_ssoadmin_application.
type DataSsoadminApplication struct {
	Name string
	Args DataSsoadminApplicationArgs
}

// DataSource returns the Terraform object type for [DataSsoadminApplication].
func (sa *DataSsoadminApplication) DataSource() string {
	return "aws_ssoadmin_application"
}

// LocalName returns the local name for [DataSsoadminApplication].
func (sa *DataSsoadminApplication) LocalName() string {
	return sa.Name
}

// Configuration returns the configuration (args) for [DataSsoadminApplication].
func (sa *DataSsoadminApplication) Configuration() interface{} {
	return sa.Args
}

// Attributes returns the attributes for [DataSsoadminApplication].
func (sa *DataSsoadminApplication) Attributes() dataSsoadminApplicationAttributes {
	return dataSsoadminApplicationAttributes{ref: terra.ReferenceDataResource(sa)}
}

// DataSsoadminApplicationArgs contains the configurations for aws_ssoadmin_application.
type DataSsoadminApplicationArgs struct {
	// ApplicationArn: string, required
	ApplicationArn terra.StringValue `hcl:"application_arn,attr" validate:"required"`
	// PortalOptions: min=0
	PortalOptions []datassoadminapplication.PortalOptions `hcl:"portal_options,block" validate:"min=0"`
}
type dataSsoadminApplicationAttributes struct {
	ref terra.Reference
}

// ApplicationAccount returns a reference to field application_account of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) ApplicationAccount() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("application_account"))
}

// ApplicationArn returns a reference to field application_arn of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) ApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("application_arn"))
}

// ApplicationProviderArn returns a reference to field application_provider_arn of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) ApplicationProviderArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("application_provider_arn"))
}

// Description returns a reference to field description of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("description"))
}

// Id returns a reference to field id of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("id"))
}

// InstanceArn returns a reference to field instance_arn of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("instance_arn"))
}

// Name returns a reference to field name of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("name"))
}

// Status returns a reference to field status of aws_ssoadmin_application.
func (sa dataSsoadminApplicationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("status"))
}

func (sa dataSsoadminApplicationAttributes) PortalOptions() terra.ListValue[datassoadminapplication.PortalOptionsAttributes] {
	return terra.ReferenceAsList[datassoadminapplication.PortalOptionsAttributes](sa.ref.Append("portal_options"))
}
