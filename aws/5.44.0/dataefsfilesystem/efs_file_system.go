// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataefsfilesystem

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LifecyclePolicy struct{}

type Protection struct{}

type LifecyclePolicyAttributes struct {
	ref terra.Reference
}

func (lp LifecyclePolicyAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp LifecyclePolicyAttributes) InternalWithRef(ref terra.Reference) LifecyclePolicyAttributes {
	return LifecyclePolicyAttributes{ref: ref}
}

func (lp LifecyclePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp LifecyclePolicyAttributes) TransitionToArchive() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("transition_to_archive"))
}

func (lp LifecyclePolicyAttributes) TransitionToIa() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("transition_to_ia"))
}

func (lp LifecyclePolicyAttributes) TransitionToPrimaryStorageClass() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("transition_to_primary_storage_class"))
}

type ProtectionAttributes struct {
	ref terra.Reference
}

func (p ProtectionAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p ProtectionAttributes) InternalWithRef(ref terra.Reference) ProtectionAttributes {
	return ProtectionAttributes{ref: ref}
}

func (p ProtectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p ProtectionAttributes) ReplicationOverwrite() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("replication_overwrite"))
}

type LifecyclePolicyState struct {
	TransitionToArchive             string `json:"transition_to_archive"`
	TransitionToIa                  string `json:"transition_to_ia"`
	TransitionToPrimaryStorageClass string `json:"transition_to_primary_storage_class"`
}

type ProtectionState struct {
	ReplicationOverwrite string `json:"replication_overwrite"`
}
