// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	datamedialiveinput "github.com/golingon/terraproviders/aws/5.44.0/datamedialiveinput"
)

// NewDataMedialiveInput creates a new instance of [DataMedialiveInput].
func NewDataMedialiveInput(name string, args DataMedialiveInputArgs) *DataMedialiveInput {
	return &DataMedialiveInput{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMedialiveInput)(nil)

// DataMedialiveInput represents the Terraform data resource aws_medialive_input.
type DataMedialiveInput struct {
	Name string
	Args DataMedialiveInputArgs
}

// DataSource returns the Terraform object type for [DataMedialiveInput].
func (mi *DataMedialiveInput) DataSource() string {
	return "aws_medialive_input"
}

// LocalName returns the local name for [DataMedialiveInput].
func (mi *DataMedialiveInput) LocalName() string {
	return mi.Name
}

// Configuration returns the configuration (args) for [DataMedialiveInput].
func (mi *DataMedialiveInput) Configuration() interface{} {
	return mi.Args
}

// Attributes returns the attributes for [DataMedialiveInput].
func (mi *DataMedialiveInput) Attributes() dataMedialiveInputAttributes {
	return dataMedialiveInputAttributes{ref: terra.ReferenceDataResource(mi)}
}

// DataMedialiveInputArgs contains the configurations for aws_medialive_input.
type DataMedialiveInputArgs struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Destinations: min=0
	Destinations []datamedialiveinput.Destinations `hcl:"destinations,block" validate:"min=0"`
	// InputDevices: min=0
	InputDevices []datamedialiveinput.InputDevices `hcl:"input_devices,block" validate:"min=0"`
	// MediaConnectFlows: min=0
	MediaConnectFlows []datamedialiveinput.MediaConnectFlows `hcl:"media_connect_flows,block" validate:"min=0"`
	// Sources: min=0
	Sources []datamedialiveinput.Sources `hcl:"sources,block" validate:"min=0"`
}
type dataMedialiveInputAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_medialive_input.
func (mi dataMedialiveInputAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("arn"))
}

// AttachedChannels returns a reference to field attached_channels of aws_medialive_input.
func (mi dataMedialiveInputAttributes) AttachedChannels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mi.ref.Append("attached_channels"))
}

// Id returns a reference to field id of aws_medialive_input.
func (mi dataMedialiveInputAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("id"))
}

// InputClass returns a reference to field input_class of aws_medialive_input.
func (mi dataMedialiveInputAttributes) InputClass() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("input_class"))
}

// InputPartnerIds returns a reference to field input_partner_ids of aws_medialive_input.
func (mi dataMedialiveInputAttributes) InputPartnerIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mi.ref.Append("input_partner_ids"))
}

// InputSourceType returns a reference to field input_source_type of aws_medialive_input.
func (mi dataMedialiveInputAttributes) InputSourceType() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("input_source_type"))
}

// Name returns a reference to field name of aws_medialive_input.
func (mi dataMedialiveInputAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("name"))
}

// RoleArn returns a reference to field role_arn of aws_medialive_input.
func (mi dataMedialiveInputAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("role_arn"))
}

// SecurityGroups returns a reference to field security_groups of aws_medialive_input.
func (mi dataMedialiveInputAttributes) SecurityGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mi.ref.Append("security_groups"))
}

// State returns a reference to field state of aws_medialive_input.
func (mi dataMedialiveInputAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("state"))
}

// Tags returns a reference to field tags of aws_medialive_input.
func (mi dataMedialiveInputAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mi.ref.Append("tags"))
}

// Type returns a reference to field type of aws_medialive_input.
func (mi dataMedialiveInputAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(mi.ref.Append("type"))
}

func (mi dataMedialiveInputAttributes) Destinations() terra.ListValue[datamedialiveinput.DestinationsAttributes] {
	return terra.ReferenceAsList[datamedialiveinput.DestinationsAttributes](mi.ref.Append("destinations"))
}

func (mi dataMedialiveInputAttributes) InputDevices() terra.ListValue[datamedialiveinput.InputDevicesAttributes] {
	return terra.ReferenceAsList[datamedialiveinput.InputDevicesAttributes](mi.ref.Append("input_devices"))
}

func (mi dataMedialiveInputAttributes) MediaConnectFlows() terra.ListValue[datamedialiveinput.MediaConnectFlowsAttributes] {
	return terra.ReferenceAsList[datamedialiveinput.MediaConnectFlowsAttributes](mi.ref.Append("media_connect_flows"))
}

func (mi dataMedialiveInputAttributes) Sources() terra.ListValue[datamedialiveinput.SourcesAttributes] {
	return terra.ReferenceAsList[datamedialiveinput.SourcesAttributes](mi.ref.Append("sources"))
}
