// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSagemakerNotebookInstanceLifecycleConfiguration creates a new instance of [SagemakerNotebookInstanceLifecycleConfiguration].
func NewSagemakerNotebookInstanceLifecycleConfiguration(name string, args SagemakerNotebookInstanceLifecycleConfigurationArgs) *SagemakerNotebookInstanceLifecycleConfiguration {
	return &SagemakerNotebookInstanceLifecycleConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SagemakerNotebookInstanceLifecycleConfiguration)(nil)

// SagemakerNotebookInstanceLifecycleConfiguration represents the Terraform resource aws_sagemaker_notebook_instance_lifecycle_configuration.
type SagemakerNotebookInstanceLifecycleConfiguration struct {
	Name      string
	Args      SagemakerNotebookInstanceLifecycleConfigurationArgs
	state     *sagemakerNotebookInstanceLifecycleConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SagemakerNotebookInstanceLifecycleConfiguration].
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Type() string {
	return "aws_sagemaker_notebook_instance_lifecycle_configuration"
}

// LocalName returns the local name for [SagemakerNotebookInstanceLifecycleConfiguration].
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) LocalName() string {
	return snilc.Name
}

// Configuration returns the configuration (args) for [SagemakerNotebookInstanceLifecycleConfiguration].
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Configuration() interface{} {
	return snilc.Args
}

// DependOn is used for other resources to depend on [SagemakerNotebookInstanceLifecycleConfiguration].
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(snilc)
}

// Dependencies returns the list of resources [SagemakerNotebookInstanceLifecycleConfiguration] depends_on.
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Dependencies() terra.Dependencies {
	return snilc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SagemakerNotebookInstanceLifecycleConfiguration].
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) LifecycleManagement() *terra.Lifecycle {
	return snilc.Lifecycle
}

// Attributes returns the attributes for [SagemakerNotebookInstanceLifecycleConfiguration].
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Attributes() sagemakerNotebookInstanceLifecycleConfigurationAttributes {
	return sagemakerNotebookInstanceLifecycleConfigurationAttributes{ref: terra.ReferenceResource(snilc)}
}

// ImportState imports the given attribute values into [SagemakerNotebookInstanceLifecycleConfiguration]'s state.
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) ImportState(av io.Reader) error {
	snilc.state = &sagemakerNotebookInstanceLifecycleConfigurationState{}
	if err := json.NewDecoder(av).Decode(snilc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", snilc.Type(), snilc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SagemakerNotebookInstanceLifecycleConfiguration] has state.
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) State() (*sagemakerNotebookInstanceLifecycleConfigurationState, bool) {
	return snilc.state, snilc.state != nil
}

// StateMust returns the state for [SagemakerNotebookInstanceLifecycleConfiguration]. Panics if the state is nil.
func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) StateMust() *sagemakerNotebookInstanceLifecycleConfigurationState {
	if snilc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", snilc.Type(), snilc.LocalName()))
	}
	return snilc.state
}

// SagemakerNotebookInstanceLifecycleConfigurationArgs contains the configurations for aws_sagemaker_notebook_instance_lifecycle_configuration.
type SagemakerNotebookInstanceLifecycleConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// OnCreate: string, optional
	OnCreate terra.StringValue `hcl:"on_create,attr"`
	// OnStart: string, optional
	OnStart terra.StringValue `hcl:"on_start,attr"`
}
type sagemakerNotebookInstanceLifecycleConfigurationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sagemaker_notebook_instance_lifecycle_configuration.
func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(snilc.ref.Append("arn"))
}

// Id returns a reference to field id of aws_sagemaker_notebook_instance_lifecycle_configuration.
func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(snilc.ref.Append("id"))
}

// Name returns a reference to field name of aws_sagemaker_notebook_instance_lifecycle_configuration.
func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(snilc.ref.Append("name"))
}

// OnCreate returns a reference to field on_create of aws_sagemaker_notebook_instance_lifecycle_configuration.
func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) OnCreate() terra.StringValue {
	return terra.ReferenceAsString(snilc.ref.Append("on_create"))
}

// OnStart returns a reference to field on_start of aws_sagemaker_notebook_instance_lifecycle_configuration.
func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) OnStart() terra.StringValue {
	return terra.ReferenceAsString(snilc.ref.Append("on_start"))
}

type sagemakerNotebookInstanceLifecycleConfigurationState struct {
	Arn      string `json:"arn"`
	Id       string `json:"id"`
	Name     string `json:"name"`
	OnCreate string `json:"on_create"`
	OnStart  string `json:"on_start"`
}
