// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"github.com/golingon/lingon/pkg/terra"
	databatchjobdefinition "github.com/golingon/terraproviders/aws/5.44.0/databatchjobdefinition"
)

// NewDataBatchJobDefinition creates a new instance of [DataBatchJobDefinition].
func NewDataBatchJobDefinition(name string, args DataBatchJobDefinitionArgs) *DataBatchJobDefinition {
	return &DataBatchJobDefinition{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataBatchJobDefinition)(nil)

// DataBatchJobDefinition represents the Terraform data resource aws_batch_job_definition.
type DataBatchJobDefinition struct {
	Name string
	Args DataBatchJobDefinitionArgs
}

// DataSource returns the Terraform object type for [DataBatchJobDefinition].
func (bjd *DataBatchJobDefinition) DataSource() string {
	return "aws_batch_job_definition"
}

// LocalName returns the local name for [DataBatchJobDefinition].
func (bjd *DataBatchJobDefinition) LocalName() string {
	return bjd.Name
}

// Configuration returns the configuration (args) for [DataBatchJobDefinition].
func (bjd *DataBatchJobDefinition) Configuration() interface{} {
	return bjd.Args
}

// Attributes returns the attributes for [DataBatchJobDefinition].
func (bjd *DataBatchJobDefinition) Attributes() dataBatchJobDefinitionAttributes {
	return dataBatchJobDefinitionAttributes{ref: terra.ReferenceDataResource(bjd)}
}

// DataBatchJobDefinitionArgs contains the configurations for aws_batch_job_definition.
type DataBatchJobDefinitionArgs struct {
	// Arn: string, optional
	Arn terra.StringValue `hcl:"arn,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Revision: number, optional
	Revision terra.NumberValue `hcl:"revision,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
	// EksProperties: min=0
	EksProperties []databatchjobdefinition.EksProperties `hcl:"eks_properties,block" validate:"min=0"`
	// NodeProperties: min=0
	NodeProperties []databatchjobdefinition.NodeProperties `hcl:"node_properties,block" validate:"min=0"`
	// RetryStrategy: min=0
	RetryStrategy []databatchjobdefinition.RetryStrategy `hcl:"retry_strategy,block" validate:"min=0"`
	// Timeout: min=0
	Timeout []databatchjobdefinition.Timeout `hcl:"timeout,block" validate:"min=0"`
}
type dataBatchJobDefinitionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("arn"))
}

// ArnPrefix returns a reference to field arn_prefix of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) ArnPrefix() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("arn_prefix"))
}

// ContainerOrchestrationType returns a reference to field container_orchestration_type of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) ContainerOrchestrationType() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("container_orchestration_type"))
}

// Id returns a reference to field id of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("id"))
}

// Name returns a reference to field name of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("name"))
}

// Revision returns a reference to field revision of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Revision() terra.NumberValue {
	return terra.ReferenceAsNumber(bjd.ref.Append("revision"))
}

// SchedulingPriority returns a reference to field scheduling_priority of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) SchedulingPriority() terra.NumberValue {
	return terra.ReferenceAsNumber(bjd.ref.Append("scheduling_priority"))
}

// Status returns a reference to field status of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("status"))
}

// Tags returns a reference to field tags of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](bjd.ref.Append("tags"))
}

// Type returns a reference to field type of aws_batch_job_definition.
func (bjd dataBatchJobDefinitionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(bjd.ref.Append("type"))
}

func (bjd dataBatchJobDefinitionAttributes) EksProperties() terra.ListValue[databatchjobdefinition.EksPropertiesAttributes] {
	return terra.ReferenceAsList[databatchjobdefinition.EksPropertiesAttributes](bjd.ref.Append("eks_properties"))
}

func (bjd dataBatchJobDefinitionAttributes) NodeProperties() terra.ListValue[databatchjobdefinition.NodePropertiesAttributes] {
	return terra.ReferenceAsList[databatchjobdefinition.NodePropertiesAttributes](bjd.ref.Append("node_properties"))
}

func (bjd dataBatchJobDefinitionAttributes) RetryStrategy() terra.ListValue[databatchjobdefinition.RetryStrategyAttributes] {
	return terra.ReferenceAsList[databatchjobdefinition.RetryStrategyAttributes](bjd.ref.Append("retry_strategy"))
}

func (bjd dataBatchJobDefinitionAttributes) Timeout() terra.ListValue[databatchjobdefinition.TimeoutAttributes] {
	return terra.ReferenceAsList[databatchjobdefinition.TimeoutAttributes](bjd.ref.Append("timeout"))
}
