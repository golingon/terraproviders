// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewEgressOnlyInternetGateway creates a new instance of [EgressOnlyInternetGateway].
func NewEgressOnlyInternetGateway(name string, args EgressOnlyInternetGatewayArgs) *EgressOnlyInternetGateway {
	return &EgressOnlyInternetGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*EgressOnlyInternetGateway)(nil)

// EgressOnlyInternetGateway represents the Terraform resource aws_egress_only_internet_gateway.
type EgressOnlyInternetGateway struct {
	Name      string
	Args      EgressOnlyInternetGatewayArgs
	state     *egressOnlyInternetGatewayState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [EgressOnlyInternetGateway].
func (eoig *EgressOnlyInternetGateway) Type() string {
	return "aws_egress_only_internet_gateway"
}

// LocalName returns the local name for [EgressOnlyInternetGateway].
func (eoig *EgressOnlyInternetGateway) LocalName() string {
	return eoig.Name
}

// Configuration returns the configuration (args) for [EgressOnlyInternetGateway].
func (eoig *EgressOnlyInternetGateway) Configuration() interface{} {
	return eoig.Args
}

// DependOn is used for other resources to depend on [EgressOnlyInternetGateway].
func (eoig *EgressOnlyInternetGateway) DependOn() terra.Reference {
	return terra.ReferenceResource(eoig)
}

// Dependencies returns the list of resources [EgressOnlyInternetGateway] depends_on.
func (eoig *EgressOnlyInternetGateway) Dependencies() terra.Dependencies {
	return eoig.DependsOn
}

// LifecycleManagement returns the lifecycle block for [EgressOnlyInternetGateway].
func (eoig *EgressOnlyInternetGateway) LifecycleManagement() *terra.Lifecycle {
	return eoig.Lifecycle
}

// Attributes returns the attributes for [EgressOnlyInternetGateway].
func (eoig *EgressOnlyInternetGateway) Attributes() egressOnlyInternetGatewayAttributes {
	return egressOnlyInternetGatewayAttributes{ref: terra.ReferenceResource(eoig)}
}

// ImportState imports the given attribute values into [EgressOnlyInternetGateway]'s state.
func (eoig *EgressOnlyInternetGateway) ImportState(av io.Reader) error {
	eoig.state = &egressOnlyInternetGatewayState{}
	if err := json.NewDecoder(av).Decode(eoig.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", eoig.Type(), eoig.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [EgressOnlyInternetGateway] has state.
func (eoig *EgressOnlyInternetGateway) State() (*egressOnlyInternetGatewayState, bool) {
	return eoig.state, eoig.state != nil
}

// StateMust returns the state for [EgressOnlyInternetGateway]. Panics if the state is nil.
func (eoig *EgressOnlyInternetGateway) StateMust() *egressOnlyInternetGatewayState {
	if eoig.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", eoig.Type(), eoig.LocalName()))
	}
	return eoig.state
}

// EgressOnlyInternetGatewayArgs contains the configurations for aws_egress_only_internet_gateway.
type EgressOnlyInternetGatewayArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
}
type egressOnlyInternetGatewayAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_egress_only_internet_gateway.
func (eoig egressOnlyInternetGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(eoig.ref.Append("id"))
}

// Tags returns a reference to field tags of aws_egress_only_internet_gateway.
func (eoig egressOnlyInternetGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](eoig.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_egress_only_internet_gateway.
func (eoig egressOnlyInternetGatewayAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](eoig.ref.Append("tags_all"))
}

// VpcId returns a reference to field vpc_id of aws_egress_only_internet_gateway.
func (eoig egressOnlyInternetGatewayAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(eoig.ref.Append("vpc_id"))
}

type egressOnlyInternetGatewayState struct {
	Id      string            `json:"id"`
	Tags    map[string]string `json:"tags"`
	TagsAll map[string]string `json:"tags_all"`
	VpcId   string            `json:"vpc_id"`
}
