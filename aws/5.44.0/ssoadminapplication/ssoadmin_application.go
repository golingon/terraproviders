// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package ssoadminapplication

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PortalOptions struct {
	// Visibility: string, optional
	Visibility terra.StringValue `hcl:"visibility,attr"`
	// SignInOptions: min=0
	SignInOptions []SignInOptions `hcl:"sign_in_options,block" validate:"min=0"`
}

type SignInOptions struct {
	// ApplicationUrl: string, optional
	ApplicationUrl terra.StringValue `hcl:"application_url,attr"`
	// Origin: string, required
	Origin terra.StringValue `hcl:"origin,attr" validate:"required"`
}

type PortalOptionsAttributes struct {
	ref terra.Reference
}

func (po PortalOptionsAttributes) InternalRef() (terra.Reference, error) {
	return po.ref, nil
}

func (po PortalOptionsAttributes) InternalWithRef(ref terra.Reference) PortalOptionsAttributes {
	return PortalOptionsAttributes{ref: ref}
}

func (po PortalOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return po.ref.InternalTokens()
}

func (po PortalOptionsAttributes) Visibility() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("visibility"))
}

func (po PortalOptionsAttributes) SignInOptions() terra.ListValue[SignInOptionsAttributes] {
	return terra.ReferenceAsList[SignInOptionsAttributes](po.ref.Append("sign_in_options"))
}

type SignInOptionsAttributes struct {
	ref terra.Reference
}

func (sio SignInOptionsAttributes) InternalRef() (terra.Reference, error) {
	return sio.ref, nil
}

func (sio SignInOptionsAttributes) InternalWithRef(ref terra.Reference) SignInOptionsAttributes {
	return SignInOptionsAttributes{ref: ref}
}

func (sio SignInOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sio.ref.InternalTokens()
}

func (sio SignInOptionsAttributes) ApplicationUrl() terra.StringValue {
	return terra.ReferenceAsString(sio.ref.Append("application_url"))
}

func (sio SignInOptionsAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(sio.ref.Append("origin"))
}

type PortalOptionsState struct {
	Visibility    string               `json:"visibility"`
	SignInOptions []SignInOptionsState `json:"sign_in_options"`
}

type SignInOptionsState struct {
	ApplicationUrl string `json:"application_url"`
	Origin         string `json:"origin"`
}
