// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewServicequotasTemplateAssociation creates a new instance of [ServicequotasTemplateAssociation].
func NewServicequotasTemplateAssociation(name string, args ServicequotasTemplateAssociationArgs) *ServicequotasTemplateAssociation {
	return &ServicequotasTemplateAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServicequotasTemplateAssociation)(nil)

// ServicequotasTemplateAssociation represents the Terraform resource aws_servicequotas_template_association.
type ServicequotasTemplateAssociation struct {
	Name      string
	Args      ServicequotasTemplateAssociationArgs
	state     *servicequotasTemplateAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ServicequotasTemplateAssociation].
func (sta *ServicequotasTemplateAssociation) Type() string {
	return "aws_servicequotas_template_association"
}

// LocalName returns the local name for [ServicequotasTemplateAssociation].
func (sta *ServicequotasTemplateAssociation) LocalName() string {
	return sta.Name
}

// Configuration returns the configuration (args) for [ServicequotasTemplateAssociation].
func (sta *ServicequotasTemplateAssociation) Configuration() interface{} {
	return sta.Args
}

// DependOn is used for other resources to depend on [ServicequotasTemplateAssociation].
func (sta *ServicequotasTemplateAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(sta)
}

// Dependencies returns the list of resources [ServicequotasTemplateAssociation] depends_on.
func (sta *ServicequotasTemplateAssociation) Dependencies() terra.Dependencies {
	return sta.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ServicequotasTemplateAssociation].
func (sta *ServicequotasTemplateAssociation) LifecycleManagement() *terra.Lifecycle {
	return sta.Lifecycle
}

// Attributes returns the attributes for [ServicequotasTemplateAssociation].
func (sta *ServicequotasTemplateAssociation) Attributes() servicequotasTemplateAssociationAttributes {
	return servicequotasTemplateAssociationAttributes{ref: terra.ReferenceResource(sta)}
}

// ImportState imports the given attribute values into [ServicequotasTemplateAssociation]'s state.
func (sta *ServicequotasTemplateAssociation) ImportState(av io.Reader) error {
	sta.state = &servicequotasTemplateAssociationState{}
	if err := json.NewDecoder(av).Decode(sta.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sta.Type(), sta.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ServicequotasTemplateAssociation] has state.
func (sta *ServicequotasTemplateAssociation) State() (*servicequotasTemplateAssociationState, bool) {
	return sta.state, sta.state != nil
}

// StateMust returns the state for [ServicequotasTemplateAssociation]. Panics if the state is nil.
func (sta *ServicequotasTemplateAssociation) StateMust() *servicequotasTemplateAssociationState {
	if sta.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sta.Type(), sta.LocalName()))
	}
	return sta.state
}

// ServicequotasTemplateAssociationArgs contains the configurations for aws_servicequotas_template_association.
type ServicequotasTemplateAssociationArgs struct {
	// SkipDestroy: bool, optional
	SkipDestroy terra.BoolValue `hcl:"skip_destroy,attr"`
}
type servicequotasTemplateAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_servicequotas_template_association.
func (sta servicequotasTemplateAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sta.ref.Append("id"))
}

// SkipDestroy returns a reference to field skip_destroy of aws_servicequotas_template_association.
func (sta servicequotasTemplateAssociationAttributes) SkipDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(sta.ref.Append("skip_destroy"))
}

// Status returns a reference to field status of aws_servicequotas_template_association.
func (sta servicequotasTemplateAssociationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(sta.ref.Append("status"))
}

type servicequotasTemplateAssociationState struct {
	Id          string `json:"id"`
	SkipDestroy bool   `json:"skip_destroy"`
	Status      string `json:"status"`
}
