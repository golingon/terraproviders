// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	lbtruststorerevocation "github.com/golingon/terraproviders/aws/5.44.0/lbtruststorerevocation"
	"io"
)

// NewLbTrustStoreRevocation creates a new instance of [LbTrustStoreRevocation].
func NewLbTrustStoreRevocation(name string, args LbTrustStoreRevocationArgs) *LbTrustStoreRevocation {
	return &LbTrustStoreRevocation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LbTrustStoreRevocation)(nil)

// LbTrustStoreRevocation represents the Terraform resource aws_lb_trust_store_revocation.
type LbTrustStoreRevocation struct {
	Name      string
	Args      LbTrustStoreRevocationArgs
	state     *lbTrustStoreRevocationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LbTrustStoreRevocation].
func (ltsr *LbTrustStoreRevocation) Type() string {
	return "aws_lb_trust_store_revocation"
}

// LocalName returns the local name for [LbTrustStoreRevocation].
func (ltsr *LbTrustStoreRevocation) LocalName() string {
	return ltsr.Name
}

// Configuration returns the configuration (args) for [LbTrustStoreRevocation].
func (ltsr *LbTrustStoreRevocation) Configuration() interface{} {
	return ltsr.Args
}

// DependOn is used for other resources to depend on [LbTrustStoreRevocation].
func (ltsr *LbTrustStoreRevocation) DependOn() terra.Reference {
	return terra.ReferenceResource(ltsr)
}

// Dependencies returns the list of resources [LbTrustStoreRevocation] depends_on.
func (ltsr *LbTrustStoreRevocation) Dependencies() terra.Dependencies {
	return ltsr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LbTrustStoreRevocation].
func (ltsr *LbTrustStoreRevocation) LifecycleManagement() *terra.Lifecycle {
	return ltsr.Lifecycle
}

// Attributes returns the attributes for [LbTrustStoreRevocation].
func (ltsr *LbTrustStoreRevocation) Attributes() lbTrustStoreRevocationAttributes {
	return lbTrustStoreRevocationAttributes{ref: terra.ReferenceResource(ltsr)}
}

// ImportState imports the given attribute values into [LbTrustStoreRevocation]'s state.
func (ltsr *LbTrustStoreRevocation) ImportState(av io.Reader) error {
	ltsr.state = &lbTrustStoreRevocationState{}
	if err := json.NewDecoder(av).Decode(ltsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ltsr.Type(), ltsr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LbTrustStoreRevocation] has state.
func (ltsr *LbTrustStoreRevocation) State() (*lbTrustStoreRevocationState, bool) {
	return ltsr.state, ltsr.state != nil
}

// StateMust returns the state for [LbTrustStoreRevocation]. Panics if the state is nil.
func (ltsr *LbTrustStoreRevocation) StateMust() *lbTrustStoreRevocationState {
	if ltsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ltsr.Type(), ltsr.LocalName()))
	}
	return ltsr.state
}

// LbTrustStoreRevocationArgs contains the configurations for aws_lb_trust_store_revocation.
type LbTrustStoreRevocationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RevocationsS3Bucket: string, required
	RevocationsS3Bucket terra.StringValue `hcl:"revocations_s3_bucket,attr" validate:"required"`
	// RevocationsS3Key: string, required
	RevocationsS3Key terra.StringValue `hcl:"revocations_s3_key,attr" validate:"required"`
	// RevocationsS3ObjectVersion: string, optional
	RevocationsS3ObjectVersion terra.StringValue `hcl:"revocations_s3_object_version,attr"`
	// TrustStoreArn: string, required
	TrustStoreArn terra.StringValue `hcl:"trust_store_arn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *lbtruststorerevocation.Timeouts `hcl:"timeouts,block"`
}
type lbTrustStoreRevocationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_lb_trust_store_revocation.
func (ltsr lbTrustStoreRevocationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ltsr.ref.Append("id"))
}

// RevocationId returns a reference to field revocation_id of aws_lb_trust_store_revocation.
func (ltsr lbTrustStoreRevocationAttributes) RevocationId() terra.NumberValue {
	return terra.ReferenceAsNumber(ltsr.ref.Append("revocation_id"))
}

// RevocationsS3Bucket returns a reference to field revocations_s3_bucket of aws_lb_trust_store_revocation.
func (ltsr lbTrustStoreRevocationAttributes) RevocationsS3Bucket() terra.StringValue {
	return terra.ReferenceAsString(ltsr.ref.Append("revocations_s3_bucket"))
}

// RevocationsS3Key returns a reference to field revocations_s3_key of aws_lb_trust_store_revocation.
func (ltsr lbTrustStoreRevocationAttributes) RevocationsS3Key() terra.StringValue {
	return terra.ReferenceAsString(ltsr.ref.Append("revocations_s3_key"))
}

// RevocationsS3ObjectVersion returns a reference to field revocations_s3_object_version of aws_lb_trust_store_revocation.
func (ltsr lbTrustStoreRevocationAttributes) RevocationsS3ObjectVersion() terra.StringValue {
	return terra.ReferenceAsString(ltsr.ref.Append("revocations_s3_object_version"))
}

// TrustStoreArn returns a reference to field trust_store_arn of aws_lb_trust_store_revocation.
func (ltsr lbTrustStoreRevocationAttributes) TrustStoreArn() terra.StringValue {
	return terra.ReferenceAsString(ltsr.ref.Append("trust_store_arn"))
}

func (ltsr lbTrustStoreRevocationAttributes) Timeouts() lbtruststorerevocation.TimeoutsAttributes {
	return terra.ReferenceAsSingle[lbtruststorerevocation.TimeoutsAttributes](ltsr.ref.Append("timeouts"))
}

type lbTrustStoreRevocationState struct {
	Id                         string                                `json:"id"`
	RevocationId               float64                               `json:"revocation_id"`
	RevocationsS3Bucket        string                                `json:"revocations_s3_bucket"`
	RevocationsS3Key           string                                `json:"revocations_s3_key"`
	RevocationsS3ObjectVersion string                                `json:"revocations_s3_object_version"`
	TrustStoreArn              string                                `json:"trust_store_arn"`
	Timeouts                   *lbtruststorerevocation.TimeoutsState `json:"timeouts"`
}
