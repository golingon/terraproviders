// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataredshiftproducerdatashares

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataShares struct{}

type DataSharesAttributes struct {
	ref terra.Reference
}

func (ds DataSharesAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds DataSharesAttributes) InternalWithRef(ref terra.Reference) DataSharesAttributes {
	return DataSharesAttributes{ref: ref}
}

func (ds DataSharesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds DataSharesAttributes) DataShareArn() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("data_share_arn"))
}

func (ds DataSharesAttributes) ManagedBy() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("managed_by"))
}

func (ds DataSharesAttributes) ProducerArn() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("producer_arn"))
}

type DataSharesState struct {
	DataShareArn string `json:"data_share_arn"`
	ManagedBy    string `json:"managed_by"`
	ProducerArn  string `json:"producer_arn"`
}
