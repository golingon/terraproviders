// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

// NewDataLbTrustStore creates a new instance of [DataLbTrustStore].
func NewDataLbTrustStore(name string, args DataLbTrustStoreArgs) *DataLbTrustStore {
	return &DataLbTrustStore{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLbTrustStore)(nil)

// DataLbTrustStore represents the Terraform data resource aws_lb_trust_store.
type DataLbTrustStore struct {
	Name string
	Args DataLbTrustStoreArgs
}

// DataSource returns the Terraform object type for [DataLbTrustStore].
func (lts *DataLbTrustStore) DataSource() string {
	return "aws_lb_trust_store"
}

// LocalName returns the local name for [DataLbTrustStore].
func (lts *DataLbTrustStore) LocalName() string {
	return lts.Name
}

// Configuration returns the configuration (args) for [DataLbTrustStore].
func (lts *DataLbTrustStore) Configuration() interface{} {
	return lts.Args
}

// Attributes returns the attributes for [DataLbTrustStore].
func (lts *DataLbTrustStore) Attributes() dataLbTrustStoreAttributes {
	return dataLbTrustStoreAttributes{ref: terra.ReferenceDataResource(lts)}
}

// DataLbTrustStoreArgs contains the configurations for aws_lb_trust_store.
type DataLbTrustStoreArgs struct {
	// Arn: string, optional
	Arn terra.StringValue `hcl:"arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}
type dataLbTrustStoreAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_lb_trust_store.
func (lts dataLbTrustStoreAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("arn"))
}

// Id returns a reference to field id of aws_lb_trust_store.
func (lts dataLbTrustStoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("id"))
}

// Name returns a reference to field name of aws_lb_trust_store.
func (lts dataLbTrustStoreAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("name"))
}
