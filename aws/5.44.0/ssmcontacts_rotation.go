// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	ssmcontactsrotation "github.com/golingon/terraproviders/aws/5.44.0/ssmcontactsrotation"
	"io"
)

// NewSsmcontactsRotation creates a new instance of [SsmcontactsRotation].
func NewSsmcontactsRotation(name string, args SsmcontactsRotationArgs) *SsmcontactsRotation {
	return &SsmcontactsRotation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsmcontactsRotation)(nil)

// SsmcontactsRotation represents the Terraform resource aws_ssmcontacts_rotation.
type SsmcontactsRotation struct {
	Name      string
	Args      SsmcontactsRotationArgs
	state     *ssmcontactsRotationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SsmcontactsRotation].
func (sr *SsmcontactsRotation) Type() string {
	return "aws_ssmcontacts_rotation"
}

// LocalName returns the local name for [SsmcontactsRotation].
func (sr *SsmcontactsRotation) LocalName() string {
	return sr.Name
}

// Configuration returns the configuration (args) for [SsmcontactsRotation].
func (sr *SsmcontactsRotation) Configuration() interface{} {
	return sr.Args
}

// DependOn is used for other resources to depend on [SsmcontactsRotation].
func (sr *SsmcontactsRotation) DependOn() terra.Reference {
	return terra.ReferenceResource(sr)
}

// Dependencies returns the list of resources [SsmcontactsRotation] depends_on.
func (sr *SsmcontactsRotation) Dependencies() terra.Dependencies {
	return sr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SsmcontactsRotation].
func (sr *SsmcontactsRotation) LifecycleManagement() *terra.Lifecycle {
	return sr.Lifecycle
}

// Attributes returns the attributes for [SsmcontactsRotation].
func (sr *SsmcontactsRotation) Attributes() ssmcontactsRotationAttributes {
	return ssmcontactsRotationAttributes{ref: terra.ReferenceResource(sr)}
}

// ImportState imports the given attribute values into [SsmcontactsRotation]'s state.
func (sr *SsmcontactsRotation) ImportState(av io.Reader) error {
	sr.state = &ssmcontactsRotationState{}
	if err := json.NewDecoder(av).Decode(sr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sr.Type(), sr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SsmcontactsRotation] has state.
func (sr *SsmcontactsRotation) State() (*ssmcontactsRotationState, bool) {
	return sr.state, sr.state != nil
}

// StateMust returns the state for [SsmcontactsRotation]. Panics if the state is nil.
func (sr *SsmcontactsRotation) StateMust() *ssmcontactsRotationState {
	if sr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sr.Type(), sr.LocalName()))
	}
	return sr.state
}

// SsmcontactsRotationArgs contains the configurations for aws_ssmcontacts_rotation.
type SsmcontactsRotationArgs struct {
	// ContactIds: list of string, required
	ContactIds terra.ListValue[terra.StringValue] `hcl:"contact_ids,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StartTime: string, optional
	StartTime terra.StringValue `hcl:"start_time,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TimeZoneId: string, required
	TimeZoneId terra.StringValue `hcl:"time_zone_id,attr" validate:"required"`
	// Recurrence: min=0
	Recurrence []ssmcontactsrotation.Recurrence `hcl:"recurrence,block" validate:"min=0"`
}
type ssmcontactsRotationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("arn"))
}

// ContactIds returns a reference to field contact_ids of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) ContactIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sr.ref.Append("contact_ids"))
}

// Id returns a reference to field id of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("id"))
}

// Name returns a reference to field name of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("name"))
}

// StartTime returns a reference to field start_time of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("start_time"))
}

// Tags returns a reference to field tags of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sr.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sr.ref.Append("tags_all"))
}

// TimeZoneId returns a reference to field time_zone_id of aws_ssmcontacts_rotation.
func (sr ssmcontactsRotationAttributes) TimeZoneId() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("time_zone_id"))
}

func (sr ssmcontactsRotationAttributes) Recurrence() terra.ListValue[ssmcontactsrotation.RecurrenceAttributes] {
	return terra.ReferenceAsList[ssmcontactsrotation.RecurrenceAttributes](sr.ref.Append("recurrence"))
}

type ssmcontactsRotationState struct {
	Arn        string                                `json:"arn"`
	ContactIds []string                              `json:"contact_ids"`
	Id         string                                `json:"id"`
	Name       string                                `json:"name"`
	StartTime  string                                `json:"start_time"`
	Tags       map[string]string                     `json:"tags"`
	TagsAll    map[string]string                     `json:"tags_all"`
	TimeZoneId string                                `json:"time_zone_id"`
	Recurrence []ssmcontactsrotation.RecurrenceState `json:"recurrence"`
}
