// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package route53domainsregistereddomain

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AdminContact struct {
	// AddressLine1: string, optional
	AddressLine1 terra.StringValue `hcl:"address_line_1,attr"`
	// AddressLine2: string, optional
	AddressLine2 terra.StringValue `hcl:"address_line_2,attr"`
	// City: string, optional
	City terra.StringValue `hcl:"city,attr"`
	// ContactType: string, optional
	ContactType terra.StringValue `hcl:"contact_type,attr"`
	// CountryCode: string, optional
	CountryCode terra.StringValue `hcl:"country_code,attr"`
	// Email: string, optional
	Email terra.StringValue `hcl:"email,attr"`
	// ExtraParams: map of string, optional
	ExtraParams terra.MapValue[terra.StringValue] `hcl:"extra_params,attr"`
	// Fax: string, optional
	Fax terra.StringValue `hcl:"fax,attr"`
	// FirstName: string, optional
	FirstName terra.StringValue `hcl:"first_name,attr"`
	// LastName: string, optional
	LastName terra.StringValue `hcl:"last_name,attr"`
	// OrganizationName: string, optional
	OrganizationName terra.StringValue `hcl:"organization_name,attr"`
	// PhoneNumber: string, optional
	PhoneNumber terra.StringValue `hcl:"phone_number,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// ZipCode: string, optional
	ZipCode terra.StringValue `hcl:"zip_code,attr"`
}

type BillingContact struct {
	// AddressLine1: string, optional
	AddressLine1 terra.StringValue `hcl:"address_line_1,attr"`
	// AddressLine2: string, optional
	AddressLine2 terra.StringValue `hcl:"address_line_2,attr"`
	// City: string, optional
	City terra.StringValue `hcl:"city,attr"`
	// ContactType: string, optional
	ContactType terra.StringValue `hcl:"contact_type,attr"`
	// CountryCode: string, optional
	CountryCode terra.StringValue `hcl:"country_code,attr"`
	// Email: string, optional
	Email terra.StringValue `hcl:"email,attr"`
	// ExtraParams: map of string, optional
	ExtraParams terra.MapValue[terra.StringValue] `hcl:"extra_params,attr"`
	// Fax: string, optional
	Fax terra.StringValue `hcl:"fax,attr"`
	// FirstName: string, optional
	FirstName terra.StringValue `hcl:"first_name,attr"`
	// LastName: string, optional
	LastName terra.StringValue `hcl:"last_name,attr"`
	// OrganizationName: string, optional
	OrganizationName terra.StringValue `hcl:"organization_name,attr"`
	// PhoneNumber: string, optional
	PhoneNumber terra.StringValue `hcl:"phone_number,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// ZipCode: string, optional
	ZipCode terra.StringValue `hcl:"zip_code,attr"`
}

type NameServer struct {
	// GlueIps: set of string, optional
	GlueIps terra.SetValue[terra.StringValue] `hcl:"glue_ips,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type RegistrantContact struct {
	// AddressLine1: string, optional
	AddressLine1 terra.StringValue `hcl:"address_line_1,attr"`
	// AddressLine2: string, optional
	AddressLine2 terra.StringValue `hcl:"address_line_2,attr"`
	// City: string, optional
	City terra.StringValue `hcl:"city,attr"`
	// ContactType: string, optional
	ContactType terra.StringValue `hcl:"contact_type,attr"`
	// CountryCode: string, optional
	CountryCode terra.StringValue `hcl:"country_code,attr"`
	// Email: string, optional
	Email terra.StringValue `hcl:"email,attr"`
	// ExtraParams: map of string, optional
	ExtraParams terra.MapValue[terra.StringValue] `hcl:"extra_params,attr"`
	// Fax: string, optional
	Fax terra.StringValue `hcl:"fax,attr"`
	// FirstName: string, optional
	FirstName terra.StringValue `hcl:"first_name,attr"`
	// LastName: string, optional
	LastName terra.StringValue `hcl:"last_name,attr"`
	// OrganizationName: string, optional
	OrganizationName terra.StringValue `hcl:"organization_name,attr"`
	// PhoneNumber: string, optional
	PhoneNumber terra.StringValue `hcl:"phone_number,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// ZipCode: string, optional
	ZipCode terra.StringValue `hcl:"zip_code,attr"`
}

type TechContact struct {
	// AddressLine1: string, optional
	AddressLine1 terra.StringValue `hcl:"address_line_1,attr"`
	// AddressLine2: string, optional
	AddressLine2 terra.StringValue `hcl:"address_line_2,attr"`
	// City: string, optional
	City terra.StringValue `hcl:"city,attr"`
	// ContactType: string, optional
	ContactType terra.StringValue `hcl:"contact_type,attr"`
	// CountryCode: string, optional
	CountryCode terra.StringValue `hcl:"country_code,attr"`
	// Email: string, optional
	Email terra.StringValue `hcl:"email,attr"`
	// ExtraParams: map of string, optional
	ExtraParams terra.MapValue[terra.StringValue] `hcl:"extra_params,attr"`
	// Fax: string, optional
	Fax terra.StringValue `hcl:"fax,attr"`
	// FirstName: string, optional
	FirstName terra.StringValue `hcl:"first_name,attr"`
	// LastName: string, optional
	LastName terra.StringValue `hcl:"last_name,attr"`
	// OrganizationName: string, optional
	OrganizationName terra.StringValue `hcl:"organization_name,attr"`
	// PhoneNumber: string, optional
	PhoneNumber terra.StringValue `hcl:"phone_number,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// ZipCode: string, optional
	ZipCode terra.StringValue `hcl:"zip_code,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AdminContactAttributes struct {
	ref terra.Reference
}

func (ac AdminContactAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac AdminContactAttributes) InternalWithRef(ref terra.Reference) AdminContactAttributes {
	return AdminContactAttributes{ref: ref}
}

func (ac AdminContactAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac AdminContactAttributes) AddressLine1() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("address_line_1"))
}

func (ac AdminContactAttributes) AddressLine2() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("address_line_2"))
}

func (ac AdminContactAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("city"))
}

func (ac AdminContactAttributes) ContactType() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("contact_type"))
}

func (ac AdminContactAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("country_code"))
}

func (ac AdminContactAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("email"))
}

func (ac AdminContactAttributes) ExtraParams() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ac.ref.Append("extra_params"))
}

func (ac AdminContactAttributes) Fax() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("fax"))
}

func (ac AdminContactAttributes) FirstName() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("first_name"))
}

func (ac AdminContactAttributes) LastName() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("last_name"))
}

func (ac AdminContactAttributes) OrganizationName() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("organization_name"))
}

func (ac AdminContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("phone_number"))
}

func (ac AdminContactAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("state"))
}

func (ac AdminContactAttributes) ZipCode() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("zip_code"))
}

type BillingContactAttributes struct {
	ref terra.Reference
}

func (bc BillingContactAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc BillingContactAttributes) InternalWithRef(ref terra.Reference) BillingContactAttributes {
	return BillingContactAttributes{ref: ref}
}

func (bc BillingContactAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc BillingContactAttributes) AddressLine1() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("address_line_1"))
}

func (bc BillingContactAttributes) AddressLine2() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("address_line_2"))
}

func (bc BillingContactAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("city"))
}

func (bc BillingContactAttributes) ContactType() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("contact_type"))
}

func (bc BillingContactAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("country_code"))
}

func (bc BillingContactAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("email"))
}

func (bc BillingContactAttributes) ExtraParams() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](bc.ref.Append("extra_params"))
}

func (bc BillingContactAttributes) Fax() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("fax"))
}

func (bc BillingContactAttributes) FirstName() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("first_name"))
}

func (bc BillingContactAttributes) LastName() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("last_name"))
}

func (bc BillingContactAttributes) OrganizationName() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("organization_name"))
}

func (bc BillingContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("phone_number"))
}

func (bc BillingContactAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("state"))
}

func (bc BillingContactAttributes) ZipCode() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("zip_code"))
}

type NameServerAttributes struct {
	ref terra.Reference
}

func (ns NameServerAttributes) InternalRef() (terra.Reference, error) {
	return ns.ref, nil
}

func (ns NameServerAttributes) InternalWithRef(ref terra.Reference) NameServerAttributes {
	return NameServerAttributes{ref: ref}
}

func (ns NameServerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ns.ref.InternalTokens()
}

func (ns NameServerAttributes) GlueIps() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ns.ref.Append("glue_ips"))
}

func (ns NameServerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ns.ref.Append("name"))
}

type RegistrantContactAttributes struct {
	ref terra.Reference
}

func (rc RegistrantContactAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc RegistrantContactAttributes) InternalWithRef(ref terra.Reference) RegistrantContactAttributes {
	return RegistrantContactAttributes{ref: ref}
}

func (rc RegistrantContactAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc RegistrantContactAttributes) AddressLine1() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("address_line_1"))
}

func (rc RegistrantContactAttributes) AddressLine2() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("address_line_2"))
}

func (rc RegistrantContactAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("city"))
}

func (rc RegistrantContactAttributes) ContactType() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("contact_type"))
}

func (rc RegistrantContactAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("country_code"))
}

func (rc RegistrantContactAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("email"))
}

func (rc RegistrantContactAttributes) ExtraParams() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](rc.ref.Append("extra_params"))
}

func (rc RegistrantContactAttributes) Fax() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("fax"))
}

func (rc RegistrantContactAttributes) FirstName() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("first_name"))
}

func (rc RegistrantContactAttributes) LastName() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("last_name"))
}

func (rc RegistrantContactAttributes) OrganizationName() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("organization_name"))
}

func (rc RegistrantContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("phone_number"))
}

func (rc RegistrantContactAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("state"))
}

func (rc RegistrantContactAttributes) ZipCode() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("zip_code"))
}

type TechContactAttributes struct {
	ref terra.Reference
}

func (tc TechContactAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc TechContactAttributes) InternalWithRef(ref terra.Reference) TechContactAttributes {
	return TechContactAttributes{ref: ref}
}

func (tc TechContactAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc TechContactAttributes) AddressLine1() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("address_line_1"))
}

func (tc TechContactAttributes) AddressLine2() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("address_line_2"))
}

func (tc TechContactAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("city"))
}

func (tc TechContactAttributes) ContactType() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("contact_type"))
}

func (tc TechContactAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("country_code"))
}

func (tc TechContactAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("email"))
}

func (tc TechContactAttributes) ExtraParams() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](tc.ref.Append("extra_params"))
}

func (tc TechContactAttributes) Fax() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("fax"))
}

func (tc TechContactAttributes) FirstName() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("first_name"))
}

func (tc TechContactAttributes) LastName() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("last_name"))
}

func (tc TechContactAttributes) OrganizationName() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("organization_name"))
}

func (tc TechContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("phone_number"))
}

func (tc TechContactAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("state"))
}

func (tc TechContactAttributes) ZipCode() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("zip_code"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AdminContactState struct {
	AddressLine1     string            `json:"address_line_1"`
	AddressLine2     string            `json:"address_line_2"`
	City             string            `json:"city"`
	ContactType      string            `json:"contact_type"`
	CountryCode      string            `json:"country_code"`
	Email            string            `json:"email"`
	ExtraParams      map[string]string `json:"extra_params"`
	Fax              string            `json:"fax"`
	FirstName        string            `json:"first_name"`
	LastName         string            `json:"last_name"`
	OrganizationName string            `json:"organization_name"`
	PhoneNumber      string            `json:"phone_number"`
	State            string            `json:"state"`
	ZipCode          string            `json:"zip_code"`
}

type BillingContactState struct {
	AddressLine1     string            `json:"address_line_1"`
	AddressLine2     string            `json:"address_line_2"`
	City             string            `json:"city"`
	ContactType      string            `json:"contact_type"`
	CountryCode      string            `json:"country_code"`
	Email            string            `json:"email"`
	ExtraParams      map[string]string `json:"extra_params"`
	Fax              string            `json:"fax"`
	FirstName        string            `json:"first_name"`
	LastName         string            `json:"last_name"`
	OrganizationName string            `json:"organization_name"`
	PhoneNumber      string            `json:"phone_number"`
	State            string            `json:"state"`
	ZipCode          string            `json:"zip_code"`
}

type NameServerState struct {
	GlueIps []string `json:"glue_ips"`
	Name    string   `json:"name"`
}

type RegistrantContactState struct {
	AddressLine1     string            `json:"address_line_1"`
	AddressLine2     string            `json:"address_line_2"`
	City             string            `json:"city"`
	ContactType      string            `json:"contact_type"`
	CountryCode      string            `json:"country_code"`
	Email            string            `json:"email"`
	ExtraParams      map[string]string `json:"extra_params"`
	Fax              string            `json:"fax"`
	FirstName        string            `json:"first_name"`
	LastName         string            `json:"last_name"`
	OrganizationName string            `json:"organization_name"`
	PhoneNumber      string            `json:"phone_number"`
	State            string            `json:"state"`
	ZipCode          string            `json:"zip_code"`
}

type TechContactState struct {
	AddressLine1     string            `json:"address_line_1"`
	AddressLine2     string            `json:"address_line_2"`
	City             string            `json:"city"`
	ContactType      string            `json:"contact_type"`
	CountryCode      string            `json:"country_code"`
	Email            string            `json:"email"`
	ExtraParams      map[string]string `json:"extra_params"`
	Fax              string            `json:"fax"`
	FirstName        string            `json:"first_name"`
	LastName         string            `json:"last_name"`
	OrganizationName string            `json:"organization_name"`
	PhoneNumber      string            `json:"phone_number"`
	State            string            `json:"state"`
	ZipCode          string            `json:"zip_code"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Update string `json:"update"`
}
