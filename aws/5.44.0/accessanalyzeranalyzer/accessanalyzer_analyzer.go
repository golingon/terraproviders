// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package accessanalyzeranalyzer

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Configuration struct {
	// UnusedAccess: optional
	UnusedAccess *UnusedAccess `hcl:"unused_access,block"`
}

type UnusedAccess struct {
	// UnusedAccessAge: number, optional
	UnusedAccessAge terra.NumberValue `hcl:"unused_access_age,attr"`
}

type ConfigurationAttributes struct {
	ref terra.Reference
}

func (c ConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ConfigurationAttributes) InternalWithRef(ref terra.Reference) ConfigurationAttributes {
	return ConfigurationAttributes{ref: ref}
}

func (c ConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ConfigurationAttributes) UnusedAccess() terra.ListValue[UnusedAccessAttributes] {
	return terra.ReferenceAsList[UnusedAccessAttributes](c.ref.Append("unused_access"))
}

type UnusedAccessAttributes struct {
	ref terra.Reference
}

func (ua UnusedAccessAttributes) InternalRef() (terra.Reference, error) {
	return ua.ref, nil
}

func (ua UnusedAccessAttributes) InternalWithRef(ref terra.Reference) UnusedAccessAttributes {
	return UnusedAccessAttributes{ref: ref}
}

func (ua UnusedAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ua.ref.InternalTokens()
}

func (ua UnusedAccessAttributes) UnusedAccessAge() terra.NumberValue {
	return terra.ReferenceAsNumber(ua.ref.Append("unused_access_age"))
}

type ConfigurationState struct {
	UnusedAccess []UnusedAccessState `json:"unused_access"`
}

type UnusedAccessState struct {
	UnusedAccessAge float64 `json:"unused_access_age"`
}
