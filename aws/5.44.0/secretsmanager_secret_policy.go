// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSecretsmanagerSecretPolicy creates a new instance of [SecretsmanagerSecretPolicy].
func NewSecretsmanagerSecretPolicy(name string, args SecretsmanagerSecretPolicyArgs) *SecretsmanagerSecretPolicy {
	return &SecretsmanagerSecretPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecretsmanagerSecretPolicy)(nil)

// SecretsmanagerSecretPolicy represents the Terraform resource aws_secretsmanager_secret_policy.
type SecretsmanagerSecretPolicy struct {
	Name      string
	Args      SecretsmanagerSecretPolicyArgs
	state     *secretsmanagerSecretPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecretsmanagerSecretPolicy].
func (ssp *SecretsmanagerSecretPolicy) Type() string {
	return "aws_secretsmanager_secret_policy"
}

// LocalName returns the local name for [SecretsmanagerSecretPolicy].
func (ssp *SecretsmanagerSecretPolicy) LocalName() string {
	return ssp.Name
}

// Configuration returns the configuration (args) for [SecretsmanagerSecretPolicy].
func (ssp *SecretsmanagerSecretPolicy) Configuration() interface{} {
	return ssp.Args
}

// DependOn is used for other resources to depend on [SecretsmanagerSecretPolicy].
func (ssp *SecretsmanagerSecretPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(ssp)
}

// Dependencies returns the list of resources [SecretsmanagerSecretPolicy] depends_on.
func (ssp *SecretsmanagerSecretPolicy) Dependencies() terra.Dependencies {
	return ssp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecretsmanagerSecretPolicy].
func (ssp *SecretsmanagerSecretPolicy) LifecycleManagement() *terra.Lifecycle {
	return ssp.Lifecycle
}

// Attributes returns the attributes for [SecretsmanagerSecretPolicy].
func (ssp *SecretsmanagerSecretPolicy) Attributes() secretsmanagerSecretPolicyAttributes {
	return secretsmanagerSecretPolicyAttributes{ref: terra.ReferenceResource(ssp)}
}

// ImportState imports the given attribute values into [SecretsmanagerSecretPolicy]'s state.
func (ssp *SecretsmanagerSecretPolicy) ImportState(av io.Reader) error {
	ssp.state = &secretsmanagerSecretPolicyState{}
	if err := json.NewDecoder(av).Decode(ssp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssp.Type(), ssp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecretsmanagerSecretPolicy] has state.
func (ssp *SecretsmanagerSecretPolicy) State() (*secretsmanagerSecretPolicyState, bool) {
	return ssp.state, ssp.state != nil
}

// StateMust returns the state for [SecretsmanagerSecretPolicy]. Panics if the state is nil.
func (ssp *SecretsmanagerSecretPolicy) StateMust() *secretsmanagerSecretPolicyState {
	if ssp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssp.Type(), ssp.LocalName()))
	}
	return ssp.state
}

// SecretsmanagerSecretPolicyArgs contains the configurations for aws_secretsmanager_secret_policy.
type SecretsmanagerSecretPolicyArgs struct {
	// BlockPublicPolicy: bool, optional
	BlockPublicPolicy terra.BoolValue `hcl:"block_public_policy,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// SecretArn: string, required
	SecretArn terra.StringValue `hcl:"secret_arn,attr" validate:"required"`
}
type secretsmanagerSecretPolicyAttributes struct {
	ref terra.Reference
}

// BlockPublicPolicy returns a reference to field block_public_policy of aws_secretsmanager_secret_policy.
func (ssp secretsmanagerSecretPolicyAttributes) BlockPublicPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(ssp.ref.Append("block_public_policy"))
}

// Id returns a reference to field id of aws_secretsmanager_secret_policy.
func (ssp secretsmanagerSecretPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssp.ref.Append("id"))
}

// Policy returns a reference to field policy of aws_secretsmanager_secret_policy.
func (ssp secretsmanagerSecretPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(ssp.ref.Append("policy"))
}

// SecretArn returns a reference to field secret_arn of aws_secretsmanager_secret_policy.
func (ssp secretsmanagerSecretPolicyAttributes) SecretArn() terra.StringValue {
	return terra.ReferenceAsString(ssp.ref.Append("secret_arn"))
}

type secretsmanagerSecretPolicyState struct {
	BlockPublicPolicy bool   `json:"block_public_policy"`
	Id                string `json:"id"`
	Policy            string `json:"policy"`
	SecretArn         string `json:"secret_arn"`
}
