// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSsmcontactsContact creates a new instance of [SsmcontactsContact].
func NewSsmcontactsContact(name string, args SsmcontactsContactArgs) *SsmcontactsContact {
	return &SsmcontactsContact{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsmcontactsContact)(nil)

// SsmcontactsContact represents the Terraform resource aws_ssmcontacts_contact.
type SsmcontactsContact struct {
	Name      string
	Args      SsmcontactsContactArgs
	state     *ssmcontactsContactState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SsmcontactsContact].
func (sc *SsmcontactsContact) Type() string {
	return "aws_ssmcontacts_contact"
}

// LocalName returns the local name for [SsmcontactsContact].
func (sc *SsmcontactsContact) LocalName() string {
	return sc.Name
}

// Configuration returns the configuration (args) for [SsmcontactsContact].
func (sc *SsmcontactsContact) Configuration() interface{} {
	return sc.Args
}

// DependOn is used for other resources to depend on [SsmcontactsContact].
func (sc *SsmcontactsContact) DependOn() terra.Reference {
	return terra.ReferenceResource(sc)
}

// Dependencies returns the list of resources [SsmcontactsContact] depends_on.
func (sc *SsmcontactsContact) Dependencies() terra.Dependencies {
	return sc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SsmcontactsContact].
func (sc *SsmcontactsContact) LifecycleManagement() *terra.Lifecycle {
	return sc.Lifecycle
}

// Attributes returns the attributes for [SsmcontactsContact].
func (sc *SsmcontactsContact) Attributes() ssmcontactsContactAttributes {
	return ssmcontactsContactAttributes{ref: terra.ReferenceResource(sc)}
}

// ImportState imports the given attribute values into [SsmcontactsContact]'s state.
func (sc *SsmcontactsContact) ImportState(av io.Reader) error {
	sc.state = &ssmcontactsContactState{}
	if err := json.NewDecoder(av).Decode(sc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sc.Type(), sc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SsmcontactsContact] has state.
func (sc *SsmcontactsContact) State() (*ssmcontactsContactState, bool) {
	return sc.state, sc.state != nil
}

// StateMust returns the state for [SsmcontactsContact]. Panics if the state is nil.
func (sc *SsmcontactsContact) StateMust() *ssmcontactsContactState {
	if sc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sc.Type(), sc.LocalName()))
	}
	return sc.state
}

// SsmcontactsContactArgs contains the configurations for aws_ssmcontacts_contact.
type SsmcontactsContactArgs struct {
	// Alias: string, required
	Alias terra.StringValue `hcl:"alias,attr" validate:"required"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}
type ssmcontactsContactAttributes struct {
	ref terra.Reference
}

// Alias returns a reference to field alias of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) Alias() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("alias"))
}

// Arn returns a reference to field arn of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("arn"))
}

// DisplayName returns a reference to field display_name of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("display_name"))
}

// Id returns a reference to field id of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("id"))
}

// Tags returns a reference to field tags of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sc.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sc.ref.Append("tags_all"))
}

// Type returns a reference to field type of aws_ssmcontacts_contact.
func (sc ssmcontactsContactAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("type"))
}

type ssmcontactsContactState struct {
	Alias       string            `json:"alias"`
	Arn         string            `json:"arn"`
	DisplayName string            `json:"display_name"`
	Id          string            `json:"id"`
	Tags        map[string]string `json:"tags"`
	TagsAll     map[string]string `json:"tags_all"`
	Type        string            `json:"type"`
}
