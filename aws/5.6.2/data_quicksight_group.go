// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataQuicksightGroup creates a new instance of [DataQuicksightGroup].
func NewDataQuicksightGroup(name string, args DataQuicksightGroupArgs) *DataQuicksightGroup {
	return &DataQuicksightGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataQuicksightGroup)(nil)

// DataQuicksightGroup represents the Terraform data resource aws_quicksight_group.
type DataQuicksightGroup struct {
	Name string
	Args DataQuicksightGroupArgs
}

// DataSource returns the Terraform object type for [DataQuicksightGroup].
func (qg *DataQuicksightGroup) DataSource() string {
	return "aws_quicksight_group"
}

// LocalName returns the local name for [DataQuicksightGroup].
func (qg *DataQuicksightGroup) LocalName() string {
	return qg.Name
}

// Configuration returns the configuration (args) for [DataQuicksightGroup].
func (qg *DataQuicksightGroup) Configuration() interface{} {
	return qg.Args
}

// Attributes returns the attributes for [DataQuicksightGroup].
func (qg *DataQuicksightGroup) Attributes() dataQuicksightGroupAttributes {
	return dataQuicksightGroupAttributes{ref: terra.ReferenceDataResource(qg)}
}

// DataQuicksightGroupArgs contains the configurations for aws_quicksight_group.
type DataQuicksightGroupArgs struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
}
type dataQuicksightGroupAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("arn"))
}

// AwsAccountId returns a reference to field aws_account_id of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("aws_account_id"))
}

// Description returns a reference to field description of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("description"))
}

// GroupName returns a reference to field group_name of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) GroupName() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("group_name"))
}

// Id returns a reference to field id of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("id"))
}

// Namespace returns a reference to field namespace of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("namespace"))
}

// PrincipalId returns a reference to field principal_id of aws_quicksight_group.
func (qg dataQuicksightGroupAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(qg.ref.Append("principal_id"))
}
