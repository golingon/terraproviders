// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	cloudfrontmonitoringsubscription "github.com/golingon/terraproviders/aws/5.6.2/cloudfrontmonitoringsubscription"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewCloudfrontMonitoringSubscription creates a new instance of [CloudfrontMonitoringSubscription].
func NewCloudfrontMonitoringSubscription(name string, args CloudfrontMonitoringSubscriptionArgs) *CloudfrontMonitoringSubscription {
	return &CloudfrontMonitoringSubscription{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudfrontMonitoringSubscription)(nil)

// CloudfrontMonitoringSubscription represents the Terraform resource aws_cloudfront_monitoring_subscription.
type CloudfrontMonitoringSubscription struct {
	Name      string
	Args      CloudfrontMonitoringSubscriptionArgs
	state     *cloudfrontMonitoringSubscriptionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CloudfrontMonitoringSubscription].
func (cms *CloudfrontMonitoringSubscription) Type() string {
	return "aws_cloudfront_monitoring_subscription"
}

// LocalName returns the local name for [CloudfrontMonitoringSubscription].
func (cms *CloudfrontMonitoringSubscription) LocalName() string {
	return cms.Name
}

// Configuration returns the configuration (args) for [CloudfrontMonitoringSubscription].
func (cms *CloudfrontMonitoringSubscription) Configuration() interface{} {
	return cms.Args
}

// DependOn is used for other resources to depend on [CloudfrontMonitoringSubscription].
func (cms *CloudfrontMonitoringSubscription) DependOn() terra.Reference {
	return terra.ReferenceResource(cms)
}

// Dependencies returns the list of resources [CloudfrontMonitoringSubscription] depends_on.
func (cms *CloudfrontMonitoringSubscription) Dependencies() terra.Dependencies {
	return cms.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CloudfrontMonitoringSubscription].
func (cms *CloudfrontMonitoringSubscription) LifecycleManagement() *terra.Lifecycle {
	return cms.Lifecycle
}

// Attributes returns the attributes for [CloudfrontMonitoringSubscription].
func (cms *CloudfrontMonitoringSubscription) Attributes() cloudfrontMonitoringSubscriptionAttributes {
	return cloudfrontMonitoringSubscriptionAttributes{ref: terra.ReferenceResource(cms)}
}

// ImportState imports the given attribute values into [CloudfrontMonitoringSubscription]'s state.
func (cms *CloudfrontMonitoringSubscription) ImportState(av io.Reader) error {
	cms.state = &cloudfrontMonitoringSubscriptionState{}
	if err := json.NewDecoder(av).Decode(cms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cms.Type(), cms.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CloudfrontMonitoringSubscription] has state.
func (cms *CloudfrontMonitoringSubscription) State() (*cloudfrontMonitoringSubscriptionState, bool) {
	return cms.state, cms.state != nil
}

// StateMust returns the state for [CloudfrontMonitoringSubscription]. Panics if the state is nil.
func (cms *CloudfrontMonitoringSubscription) StateMust() *cloudfrontMonitoringSubscriptionState {
	if cms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cms.Type(), cms.LocalName()))
	}
	return cms.state
}

// CloudfrontMonitoringSubscriptionArgs contains the configurations for aws_cloudfront_monitoring_subscription.
type CloudfrontMonitoringSubscriptionArgs struct {
	// DistributionId: string, required
	DistributionId terra.StringValue `hcl:"distribution_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MonitoringSubscription: required
	MonitoringSubscription *cloudfrontmonitoringsubscription.MonitoringSubscription `hcl:"monitoring_subscription,block" validate:"required"`
}
type cloudfrontMonitoringSubscriptionAttributes struct {
	ref terra.Reference
}

// DistributionId returns a reference to field distribution_id of aws_cloudfront_monitoring_subscription.
func (cms cloudfrontMonitoringSubscriptionAttributes) DistributionId() terra.StringValue {
	return terra.ReferenceAsString(cms.ref.Append("distribution_id"))
}

// Id returns a reference to field id of aws_cloudfront_monitoring_subscription.
func (cms cloudfrontMonitoringSubscriptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cms.ref.Append("id"))
}

func (cms cloudfrontMonitoringSubscriptionAttributes) MonitoringSubscription() terra.ListValue[cloudfrontmonitoringsubscription.MonitoringSubscriptionAttributes] {
	return terra.ReferenceAsList[cloudfrontmonitoringsubscription.MonitoringSubscriptionAttributes](cms.ref.Append("monitoring_subscription"))
}

type cloudfrontMonitoringSubscriptionState struct {
	DistributionId         string                                                         `json:"distribution_id"`
	Id                     string                                                         `json:"id"`
	MonitoringSubscription []cloudfrontmonitoringsubscription.MonitoringSubscriptionState `json:"monitoring_subscription"`
}
