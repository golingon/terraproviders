// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	budgetsbudget "github.com/golingon/terraproviders/aws/5.0.1/budgetsbudget"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewBudgetsBudget creates a new instance of [BudgetsBudget].
func NewBudgetsBudget(name string, args BudgetsBudgetArgs) *BudgetsBudget {
	return &BudgetsBudget{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BudgetsBudget)(nil)

// BudgetsBudget represents the Terraform resource aws_budgets_budget.
type BudgetsBudget struct {
	Name      string
	Args      BudgetsBudgetArgs
	state     *budgetsBudgetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [BudgetsBudget].
func (bb *BudgetsBudget) Type() string {
	return "aws_budgets_budget"
}

// LocalName returns the local name for [BudgetsBudget].
func (bb *BudgetsBudget) LocalName() string {
	return bb.Name
}

// Configuration returns the configuration (args) for [BudgetsBudget].
func (bb *BudgetsBudget) Configuration() interface{} {
	return bb.Args
}

// DependOn is used for other resources to depend on [BudgetsBudget].
func (bb *BudgetsBudget) DependOn() terra.Reference {
	return terra.ReferenceResource(bb)
}

// Dependencies returns the list of resources [BudgetsBudget] depends_on.
func (bb *BudgetsBudget) Dependencies() terra.Dependencies {
	return bb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [BudgetsBudget].
func (bb *BudgetsBudget) LifecycleManagement() *terra.Lifecycle {
	return bb.Lifecycle
}

// Attributes returns the attributes for [BudgetsBudget].
func (bb *BudgetsBudget) Attributes() budgetsBudgetAttributes {
	return budgetsBudgetAttributes{ref: terra.ReferenceResource(bb)}
}

// ImportState imports the given attribute values into [BudgetsBudget]'s state.
func (bb *BudgetsBudget) ImportState(av io.Reader) error {
	bb.state = &budgetsBudgetState{}
	if err := json.NewDecoder(av).Decode(bb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bb.Type(), bb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [BudgetsBudget] has state.
func (bb *BudgetsBudget) State() (*budgetsBudgetState, bool) {
	return bb.state, bb.state != nil
}

// StateMust returns the state for [BudgetsBudget]. Panics if the state is nil.
func (bb *BudgetsBudget) StateMust() *budgetsBudgetState {
	if bb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bb.Type(), bb.LocalName()))
	}
	return bb.state
}

// BudgetsBudgetArgs contains the configurations for aws_budgets_budget.
type BudgetsBudgetArgs struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// BudgetType: string, required
	BudgetType terra.StringValue `hcl:"budget_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LimitAmount: string, optional
	LimitAmount terra.StringValue `hcl:"limit_amount,attr"`
	// LimitUnit: string, optional
	LimitUnit terra.StringValue `hcl:"limit_unit,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// TimePeriodEnd: string, optional
	TimePeriodEnd terra.StringValue `hcl:"time_period_end,attr"`
	// TimePeriodStart: string, optional
	TimePeriodStart terra.StringValue `hcl:"time_period_start,attr"`
	// TimeUnit: string, required
	TimeUnit terra.StringValue `hcl:"time_unit,attr" validate:"required"`
	// AutoAdjustData: optional
	AutoAdjustData *budgetsbudget.AutoAdjustData `hcl:"auto_adjust_data,block"`
	// CostFilter: min=0
	CostFilter []budgetsbudget.CostFilter `hcl:"cost_filter,block" validate:"min=0"`
	// CostTypes: optional
	CostTypes *budgetsbudget.CostTypes `hcl:"cost_types,block"`
	// Notification: min=0
	Notification []budgetsbudget.Notification `hcl:"notification,block" validate:"min=0"`
	// PlannedLimit: min=0
	PlannedLimit []budgetsbudget.PlannedLimit `hcl:"planned_limit,block" validate:"min=0"`
}
type budgetsBudgetAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_budgets_budget.
func (bb budgetsBudgetAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("account_id"))
}

// Arn returns a reference to field arn of aws_budgets_budget.
func (bb budgetsBudgetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("arn"))
}

// BudgetType returns a reference to field budget_type of aws_budgets_budget.
func (bb budgetsBudgetAttributes) BudgetType() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("budget_type"))
}

// Id returns a reference to field id of aws_budgets_budget.
func (bb budgetsBudgetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("id"))
}

// LimitAmount returns a reference to field limit_amount of aws_budgets_budget.
func (bb budgetsBudgetAttributes) LimitAmount() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("limit_amount"))
}

// LimitUnit returns a reference to field limit_unit of aws_budgets_budget.
func (bb budgetsBudgetAttributes) LimitUnit() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("limit_unit"))
}

// Name returns a reference to field name of aws_budgets_budget.
func (bb budgetsBudgetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("name"))
}

// NamePrefix returns a reference to field name_prefix of aws_budgets_budget.
func (bb budgetsBudgetAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("name_prefix"))
}

// TimePeriodEnd returns a reference to field time_period_end of aws_budgets_budget.
func (bb budgetsBudgetAttributes) TimePeriodEnd() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("time_period_end"))
}

// TimePeriodStart returns a reference to field time_period_start of aws_budgets_budget.
func (bb budgetsBudgetAttributes) TimePeriodStart() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("time_period_start"))
}

// TimeUnit returns a reference to field time_unit of aws_budgets_budget.
func (bb budgetsBudgetAttributes) TimeUnit() terra.StringValue {
	return terra.ReferenceAsString(bb.ref.Append("time_unit"))
}

func (bb budgetsBudgetAttributes) AutoAdjustData() terra.ListValue[budgetsbudget.AutoAdjustDataAttributes] {
	return terra.ReferenceAsList[budgetsbudget.AutoAdjustDataAttributes](bb.ref.Append("auto_adjust_data"))
}

func (bb budgetsBudgetAttributes) CostFilter() terra.SetValue[budgetsbudget.CostFilterAttributes] {
	return terra.ReferenceAsSet[budgetsbudget.CostFilterAttributes](bb.ref.Append("cost_filter"))
}

func (bb budgetsBudgetAttributes) CostTypes() terra.ListValue[budgetsbudget.CostTypesAttributes] {
	return terra.ReferenceAsList[budgetsbudget.CostTypesAttributes](bb.ref.Append("cost_types"))
}

func (bb budgetsBudgetAttributes) Notification() terra.SetValue[budgetsbudget.NotificationAttributes] {
	return terra.ReferenceAsSet[budgetsbudget.NotificationAttributes](bb.ref.Append("notification"))
}

func (bb budgetsBudgetAttributes) PlannedLimit() terra.SetValue[budgetsbudget.PlannedLimitAttributes] {
	return terra.ReferenceAsSet[budgetsbudget.PlannedLimitAttributes](bb.ref.Append("planned_limit"))
}

type budgetsBudgetState struct {
	AccountId       string                              `json:"account_id"`
	Arn             string                              `json:"arn"`
	BudgetType      string                              `json:"budget_type"`
	Id              string                              `json:"id"`
	LimitAmount     string                              `json:"limit_amount"`
	LimitUnit       string                              `json:"limit_unit"`
	Name            string                              `json:"name"`
	NamePrefix      string                              `json:"name_prefix"`
	TimePeriodEnd   string                              `json:"time_period_end"`
	TimePeriodStart string                              `json:"time_period_start"`
	TimeUnit        string                              `json:"time_unit"`
	AutoAdjustData  []budgetsbudget.AutoAdjustDataState `json:"auto_adjust_data"`
	CostFilter      []budgetsbudget.CostFilterState     `json:"cost_filter"`
	CostTypes       []budgetsbudget.CostTypesState      `json:"cost_types"`
	Notification    []budgetsbudget.NotificationState   `json:"notification"`
	PlannedLimit    []budgetsbudget.PlannedLimitState   `json:"planned_limit"`
}
