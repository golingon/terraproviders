// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sagemakerdevice

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Device struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DeviceName: string, required
	DeviceName terra.StringValue `hcl:"device_name,attr" validate:"required"`
	// IotThingName: string, optional
	IotThingName terra.StringValue `hcl:"iot_thing_name,attr"`
}

type DeviceAttributes struct {
	ref terra.Reference
}

func (d DeviceAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DeviceAttributes) InternalWithRef(ref terra.Reference) DeviceAttributes {
	return DeviceAttributes{ref: ref}
}

func (d DeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DeviceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("description"))
}

func (d DeviceAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("device_name"))
}

func (d DeviceAttributes) IotThingName() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("iot_thing_name"))
}

type DeviceState struct {
	Description  string `json:"description"`
	DeviceName   string `json:"device_name"`
	IotThingName string `json:"iot_thing_name"`
}
