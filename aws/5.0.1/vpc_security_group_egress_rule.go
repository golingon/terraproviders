// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewVpcSecurityGroupEgressRule creates a new instance of [VpcSecurityGroupEgressRule].
func NewVpcSecurityGroupEgressRule(name string, args VpcSecurityGroupEgressRuleArgs) *VpcSecurityGroupEgressRule {
	return &VpcSecurityGroupEgressRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpcSecurityGroupEgressRule)(nil)

// VpcSecurityGroupEgressRule represents the Terraform resource aws_vpc_security_group_egress_rule.
type VpcSecurityGroupEgressRule struct {
	Name      string
	Args      VpcSecurityGroupEgressRuleArgs
	state     *vpcSecurityGroupEgressRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VpcSecurityGroupEgressRule].
func (vsger *VpcSecurityGroupEgressRule) Type() string {
	return "aws_vpc_security_group_egress_rule"
}

// LocalName returns the local name for [VpcSecurityGroupEgressRule].
func (vsger *VpcSecurityGroupEgressRule) LocalName() string {
	return vsger.Name
}

// Configuration returns the configuration (args) for [VpcSecurityGroupEgressRule].
func (vsger *VpcSecurityGroupEgressRule) Configuration() interface{} {
	return vsger.Args
}

// DependOn is used for other resources to depend on [VpcSecurityGroupEgressRule].
func (vsger *VpcSecurityGroupEgressRule) DependOn() terra.Reference {
	return terra.ReferenceResource(vsger)
}

// Dependencies returns the list of resources [VpcSecurityGroupEgressRule] depends_on.
func (vsger *VpcSecurityGroupEgressRule) Dependencies() terra.Dependencies {
	return vsger.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VpcSecurityGroupEgressRule].
func (vsger *VpcSecurityGroupEgressRule) LifecycleManagement() *terra.Lifecycle {
	return vsger.Lifecycle
}

// Attributes returns the attributes for [VpcSecurityGroupEgressRule].
func (vsger *VpcSecurityGroupEgressRule) Attributes() vpcSecurityGroupEgressRuleAttributes {
	return vpcSecurityGroupEgressRuleAttributes{ref: terra.ReferenceResource(vsger)}
}

// ImportState imports the given attribute values into [VpcSecurityGroupEgressRule]'s state.
func (vsger *VpcSecurityGroupEgressRule) ImportState(av io.Reader) error {
	vsger.state = &vpcSecurityGroupEgressRuleState{}
	if err := json.NewDecoder(av).Decode(vsger.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vsger.Type(), vsger.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VpcSecurityGroupEgressRule] has state.
func (vsger *VpcSecurityGroupEgressRule) State() (*vpcSecurityGroupEgressRuleState, bool) {
	return vsger.state, vsger.state != nil
}

// StateMust returns the state for [VpcSecurityGroupEgressRule]. Panics if the state is nil.
func (vsger *VpcSecurityGroupEgressRule) StateMust() *vpcSecurityGroupEgressRuleState {
	if vsger.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vsger.Type(), vsger.LocalName()))
	}
	return vsger.state
}

// VpcSecurityGroupEgressRuleArgs contains the configurations for aws_vpc_security_group_egress_rule.
type VpcSecurityGroupEgressRuleArgs struct {
	// CidrIpv4: string, optional
	CidrIpv4 terra.StringValue `hcl:"cidr_ipv4,attr"`
	// CidrIpv6: string, optional
	CidrIpv6 terra.StringValue `hcl:"cidr_ipv6,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// FromPort: number, optional
	FromPort terra.NumberValue `hcl:"from_port,attr"`
	// IpProtocol: string, required
	IpProtocol terra.StringValue `hcl:"ip_protocol,attr" validate:"required"`
	// PrefixListId: string, optional
	PrefixListId terra.StringValue `hcl:"prefix_list_id,attr"`
	// ReferencedSecurityGroupId: string, optional
	ReferencedSecurityGroupId terra.StringValue `hcl:"referenced_security_group_id,attr"`
	// SecurityGroupId: string, optional
	SecurityGroupId terra.StringValue `hcl:"security_group_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ToPort: number, optional
	ToPort terra.NumberValue `hcl:"to_port,attr"`
}
type vpcSecurityGroupEgressRuleAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("arn"))
}

// CidrIpv4 returns a reference to field cidr_ipv4 of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) CidrIpv4() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("cidr_ipv4"))
}

// CidrIpv6 returns a reference to field cidr_ipv6 of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) CidrIpv6() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("cidr_ipv6"))
}

// Description returns a reference to field description of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("description"))
}

// FromPort returns a reference to field from_port of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) FromPort() terra.NumberValue {
	return terra.ReferenceAsNumber(vsger.ref.Append("from_port"))
}

// Id returns a reference to field id of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("id"))
}

// IpProtocol returns a reference to field ip_protocol of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) IpProtocol() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("ip_protocol"))
}

// PrefixListId returns a reference to field prefix_list_id of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("prefix_list_id"))
}

// ReferencedSecurityGroupId returns a reference to field referenced_security_group_id of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) ReferencedSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("referenced_security_group_id"))
}

// SecurityGroupId returns a reference to field security_group_id of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("security_group_id"))
}

// SecurityGroupRuleId returns a reference to field security_group_rule_id of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) SecurityGroupRuleId() terra.StringValue {
	return terra.ReferenceAsString(vsger.ref.Append("security_group_rule_id"))
}

// Tags returns a reference to field tags of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vsger.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vsger.ref.Append("tags_all"))
}

// ToPort returns a reference to field to_port of aws_vpc_security_group_egress_rule.
func (vsger vpcSecurityGroupEgressRuleAttributes) ToPort() terra.NumberValue {
	return terra.ReferenceAsNumber(vsger.ref.Append("to_port"))
}

type vpcSecurityGroupEgressRuleState struct {
	Arn                       string            `json:"arn"`
	CidrIpv4                  string            `json:"cidr_ipv4"`
	CidrIpv6                  string            `json:"cidr_ipv6"`
	Description               string            `json:"description"`
	FromPort                  float64           `json:"from_port"`
	Id                        string            `json:"id"`
	IpProtocol                string            `json:"ip_protocol"`
	PrefixListId              string            `json:"prefix_list_id"`
	ReferencedSecurityGroupId string            `json:"referenced_security_group_id"`
	SecurityGroupId           string            `json:"security_group_id"`
	SecurityGroupRuleId       string            `json:"security_group_rule_id"`
	Tags                      map[string]string `json:"tags"`
	TagsAll                   map[string]string `json:"tags_all"`
	ToPort                    float64           `json:"to_port"`
}
