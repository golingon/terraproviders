// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataRedshiftserverlessNamespace creates a new instance of [DataRedshiftserverlessNamespace].
func NewDataRedshiftserverlessNamespace(name string, args DataRedshiftserverlessNamespaceArgs) *DataRedshiftserverlessNamespace {
	return &DataRedshiftserverlessNamespace{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedshiftserverlessNamespace)(nil)

// DataRedshiftserverlessNamespace represents the Terraform data resource aws_redshiftserverless_namespace.
type DataRedshiftserverlessNamespace struct {
	Name string
	Args DataRedshiftserverlessNamespaceArgs
}

// DataSource returns the Terraform object type for [DataRedshiftserverlessNamespace].
func (rn *DataRedshiftserverlessNamespace) DataSource() string {
	return "aws_redshiftserverless_namespace"
}

// LocalName returns the local name for [DataRedshiftserverlessNamespace].
func (rn *DataRedshiftserverlessNamespace) LocalName() string {
	return rn.Name
}

// Configuration returns the configuration (args) for [DataRedshiftserverlessNamespace].
func (rn *DataRedshiftserverlessNamespace) Configuration() interface{} {
	return rn.Args
}

// Attributes returns the attributes for [DataRedshiftserverlessNamespace].
func (rn *DataRedshiftserverlessNamespace) Attributes() dataRedshiftserverlessNamespaceAttributes {
	return dataRedshiftserverlessNamespaceAttributes{ref: terra.ReferenceDataResource(rn)}
}

// DataRedshiftserverlessNamespaceArgs contains the configurations for aws_redshiftserverless_namespace.
type DataRedshiftserverlessNamespaceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NamespaceName: string, required
	NamespaceName terra.StringValue `hcl:"namespace_name,attr" validate:"required"`
}
type dataRedshiftserverlessNamespaceAttributes struct {
	ref terra.Reference
}

// AdminUsername returns a reference to field admin_username of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) AdminUsername() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("admin_username"))
}

// Arn returns a reference to field arn of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("arn"))
}

// DbName returns a reference to field db_name of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) DbName() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("db_name"))
}

// DefaultIamRoleArn returns a reference to field default_iam_role_arn of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) DefaultIamRoleArn() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("default_iam_role_arn"))
}

// IamRoles returns a reference to field iam_roles of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) IamRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rn.ref.Append("iam_roles"))
}

// Id returns a reference to field id of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("id"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("kms_key_id"))
}

// LogExports returns a reference to field log_exports of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) LogExports() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rn.ref.Append("log_exports"))
}

// NamespaceId returns a reference to field namespace_id of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("namespace_id"))
}

// NamespaceName returns a reference to field namespace_name of aws_redshiftserverless_namespace.
func (rn dataRedshiftserverlessNamespaceAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceAsString(rn.ref.Append("namespace_name"))
}
