// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewS3ControlObjectLambdaAccessPointPolicy creates a new instance of [S3ControlObjectLambdaAccessPointPolicy].
func NewS3ControlObjectLambdaAccessPointPolicy(name string, args S3ControlObjectLambdaAccessPointPolicyArgs) *S3ControlObjectLambdaAccessPointPolicy {
	return &S3ControlObjectLambdaAccessPointPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*S3ControlObjectLambdaAccessPointPolicy)(nil)

// S3ControlObjectLambdaAccessPointPolicy represents the Terraform resource aws_s3control_object_lambda_access_point_policy.
type S3ControlObjectLambdaAccessPointPolicy struct {
	Name      string
	Args      S3ControlObjectLambdaAccessPointPolicyArgs
	state     *s3ControlObjectLambdaAccessPointPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [S3ControlObjectLambdaAccessPointPolicy].
func (solapp *S3ControlObjectLambdaAccessPointPolicy) Type() string {
	return "aws_s3control_object_lambda_access_point_policy"
}

// LocalName returns the local name for [S3ControlObjectLambdaAccessPointPolicy].
func (solapp *S3ControlObjectLambdaAccessPointPolicy) LocalName() string {
	return solapp.Name
}

// Configuration returns the configuration (args) for [S3ControlObjectLambdaAccessPointPolicy].
func (solapp *S3ControlObjectLambdaAccessPointPolicy) Configuration() interface{} {
	return solapp.Args
}

// DependOn is used for other resources to depend on [S3ControlObjectLambdaAccessPointPolicy].
func (solapp *S3ControlObjectLambdaAccessPointPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(solapp)
}

// Dependencies returns the list of resources [S3ControlObjectLambdaAccessPointPolicy] depends_on.
func (solapp *S3ControlObjectLambdaAccessPointPolicy) Dependencies() terra.Dependencies {
	return solapp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [S3ControlObjectLambdaAccessPointPolicy].
func (solapp *S3ControlObjectLambdaAccessPointPolicy) LifecycleManagement() *terra.Lifecycle {
	return solapp.Lifecycle
}

// Attributes returns the attributes for [S3ControlObjectLambdaAccessPointPolicy].
func (solapp *S3ControlObjectLambdaAccessPointPolicy) Attributes() s3ControlObjectLambdaAccessPointPolicyAttributes {
	return s3ControlObjectLambdaAccessPointPolicyAttributes{ref: terra.ReferenceResource(solapp)}
}

// ImportState imports the given attribute values into [S3ControlObjectLambdaAccessPointPolicy]'s state.
func (solapp *S3ControlObjectLambdaAccessPointPolicy) ImportState(av io.Reader) error {
	solapp.state = &s3ControlObjectLambdaAccessPointPolicyState{}
	if err := json.NewDecoder(av).Decode(solapp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", solapp.Type(), solapp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [S3ControlObjectLambdaAccessPointPolicy] has state.
func (solapp *S3ControlObjectLambdaAccessPointPolicy) State() (*s3ControlObjectLambdaAccessPointPolicyState, bool) {
	return solapp.state, solapp.state != nil
}

// StateMust returns the state for [S3ControlObjectLambdaAccessPointPolicy]. Panics if the state is nil.
func (solapp *S3ControlObjectLambdaAccessPointPolicy) StateMust() *s3ControlObjectLambdaAccessPointPolicyState {
	if solapp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", solapp.Type(), solapp.LocalName()))
	}
	return solapp.state
}

// S3ControlObjectLambdaAccessPointPolicyArgs contains the configurations for aws_s3control_object_lambda_access_point_policy.
type S3ControlObjectLambdaAccessPointPolicyArgs struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
}
type s3ControlObjectLambdaAccessPointPolicyAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_s3control_object_lambda_access_point_policy.
func (solapp s3ControlObjectLambdaAccessPointPolicyAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(solapp.ref.Append("account_id"))
}

// HasPublicAccessPolicy returns a reference to field has_public_access_policy of aws_s3control_object_lambda_access_point_policy.
func (solapp s3ControlObjectLambdaAccessPointPolicyAttributes) HasPublicAccessPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(solapp.ref.Append("has_public_access_policy"))
}

// Id returns a reference to field id of aws_s3control_object_lambda_access_point_policy.
func (solapp s3ControlObjectLambdaAccessPointPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(solapp.ref.Append("id"))
}

// Name returns a reference to field name of aws_s3control_object_lambda_access_point_policy.
func (solapp s3ControlObjectLambdaAccessPointPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(solapp.ref.Append("name"))
}

// Policy returns a reference to field policy of aws_s3control_object_lambda_access_point_policy.
func (solapp s3ControlObjectLambdaAccessPointPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(solapp.ref.Append("policy"))
}

type s3ControlObjectLambdaAccessPointPolicyState struct {
	AccountId             string `json:"account_id"`
	HasPublicAccessPolicy bool   `json:"has_public_access_policy"`
	Id                    string `json:"id"`
	Name                  string `json:"name"`
	Policy                string `json:"policy"`
}
