// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	servicecatalogprovisioningartifact "github.com/golingon/terraproviders/aws/5.13.1/servicecatalogprovisioningartifact"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewServicecatalogProvisioningArtifact creates a new instance of [ServicecatalogProvisioningArtifact].
func NewServicecatalogProvisioningArtifact(name string, args ServicecatalogProvisioningArtifactArgs) *ServicecatalogProvisioningArtifact {
	return &ServicecatalogProvisioningArtifact{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServicecatalogProvisioningArtifact)(nil)

// ServicecatalogProvisioningArtifact represents the Terraform resource aws_servicecatalog_provisioning_artifact.
type ServicecatalogProvisioningArtifact struct {
	Name      string
	Args      ServicecatalogProvisioningArtifactArgs
	state     *servicecatalogProvisioningArtifactState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ServicecatalogProvisioningArtifact].
func (spa *ServicecatalogProvisioningArtifact) Type() string {
	return "aws_servicecatalog_provisioning_artifact"
}

// LocalName returns the local name for [ServicecatalogProvisioningArtifact].
func (spa *ServicecatalogProvisioningArtifact) LocalName() string {
	return spa.Name
}

// Configuration returns the configuration (args) for [ServicecatalogProvisioningArtifact].
func (spa *ServicecatalogProvisioningArtifact) Configuration() interface{} {
	return spa.Args
}

// DependOn is used for other resources to depend on [ServicecatalogProvisioningArtifact].
func (spa *ServicecatalogProvisioningArtifact) DependOn() terra.Reference {
	return terra.ReferenceResource(spa)
}

// Dependencies returns the list of resources [ServicecatalogProvisioningArtifact] depends_on.
func (spa *ServicecatalogProvisioningArtifact) Dependencies() terra.Dependencies {
	return spa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ServicecatalogProvisioningArtifact].
func (spa *ServicecatalogProvisioningArtifact) LifecycleManagement() *terra.Lifecycle {
	return spa.Lifecycle
}

// Attributes returns the attributes for [ServicecatalogProvisioningArtifact].
func (spa *ServicecatalogProvisioningArtifact) Attributes() servicecatalogProvisioningArtifactAttributes {
	return servicecatalogProvisioningArtifactAttributes{ref: terra.ReferenceResource(spa)}
}

// ImportState imports the given attribute values into [ServicecatalogProvisioningArtifact]'s state.
func (spa *ServicecatalogProvisioningArtifact) ImportState(av io.Reader) error {
	spa.state = &servicecatalogProvisioningArtifactState{}
	if err := json.NewDecoder(av).Decode(spa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", spa.Type(), spa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ServicecatalogProvisioningArtifact] has state.
func (spa *ServicecatalogProvisioningArtifact) State() (*servicecatalogProvisioningArtifactState, bool) {
	return spa.state, spa.state != nil
}

// StateMust returns the state for [ServicecatalogProvisioningArtifact]. Panics if the state is nil.
func (spa *ServicecatalogProvisioningArtifact) StateMust() *servicecatalogProvisioningArtifactState {
	if spa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", spa.Type(), spa.LocalName()))
	}
	return spa.state
}

// ServicecatalogProvisioningArtifactArgs contains the configurations for aws_servicecatalog_provisioning_artifact.
type ServicecatalogProvisioningArtifactArgs struct {
	// AcceptLanguage: string, optional
	AcceptLanguage terra.StringValue `hcl:"accept_language,attr"`
	// Active: bool, optional
	Active terra.BoolValue `hcl:"active,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisableTemplateValidation: bool, optional
	DisableTemplateValidation terra.BoolValue `hcl:"disable_template_validation,attr"`
	// Guidance: string, optional
	Guidance terra.StringValue `hcl:"guidance,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ProductId: string, required
	ProductId terra.StringValue `hcl:"product_id,attr" validate:"required"`
	// TemplatePhysicalId: string, optional
	TemplatePhysicalId terra.StringValue `hcl:"template_physical_id,attr"`
	// TemplateUrl: string, optional
	TemplateUrl terra.StringValue `hcl:"template_url,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Timeouts: optional
	Timeouts *servicecatalogprovisioningartifact.Timeouts `hcl:"timeouts,block"`
}
type servicecatalogProvisioningArtifactAttributes struct {
	ref terra.Reference
}

// AcceptLanguage returns a reference to field accept_language of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) AcceptLanguage() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("accept_language"))
}

// Active returns a reference to field active of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) Active() terra.BoolValue {
	return terra.ReferenceAsBool(spa.ref.Append("active"))
}

// CreatedTime returns a reference to field created_time of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("created_time"))
}

// Description returns a reference to field description of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("description"))
}

// DisableTemplateValidation returns a reference to field disable_template_validation of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) DisableTemplateValidation() terra.BoolValue {
	return terra.ReferenceAsBool(spa.ref.Append("disable_template_validation"))
}

// Guidance returns a reference to field guidance of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) Guidance() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("guidance"))
}

// Id returns a reference to field id of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("id"))
}

// Name returns a reference to field name of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("name"))
}

// ProductId returns a reference to field product_id of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) ProductId() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("product_id"))
}

// ProvisioningArtifactId returns a reference to field provisioning_artifact_id of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) ProvisioningArtifactId() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("provisioning_artifact_id"))
}

// TemplatePhysicalId returns a reference to field template_physical_id of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) TemplatePhysicalId() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("template_physical_id"))
}

// TemplateUrl returns a reference to field template_url of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) TemplateUrl() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("template_url"))
}

// Type returns a reference to field type of aws_servicecatalog_provisioning_artifact.
func (spa servicecatalogProvisioningArtifactAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(spa.ref.Append("type"))
}

func (spa servicecatalogProvisioningArtifactAttributes) Timeouts() servicecatalogprovisioningartifact.TimeoutsAttributes {
	return terra.ReferenceAsSingle[servicecatalogprovisioningartifact.TimeoutsAttributes](spa.ref.Append("timeouts"))
}

type servicecatalogProvisioningArtifactState struct {
	AcceptLanguage            string                                            `json:"accept_language"`
	Active                    bool                                              `json:"active"`
	CreatedTime               string                                            `json:"created_time"`
	Description               string                                            `json:"description"`
	DisableTemplateValidation bool                                              `json:"disable_template_validation"`
	Guidance                  string                                            `json:"guidance"`
	Id                        string                                            `json:"id"`
	Name                      string                                            `json:"name"`
	ProductId                 string                                            `json:"product_id"`
	ProvisioningArtifactId    string                                            `json:"provisioning_artifact_id"`
	TemplatePhysicalId        string                                            `json:"template_physical_id"`
	TemplateUrl               string                                            `json:"template_url"`
	Type                      string                                            `json:"type"`
	Timeouts                  *servicecatalogprovisioningartifact.TimeoutsState `json:"timeouts"`
}
