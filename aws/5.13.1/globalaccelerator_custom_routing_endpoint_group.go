// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	globalacceleratorcustomroutingendpointgroup "github.com/golingon/terraproviders/aws/5.13.1/globalacceleratorcustomroutingendpointgroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewGlobalacceleratorCustomRoutingEndpointGroup creates a new instance of [GlobalacceleratorCustomRoutingEndpointGroup].
func NewGlobalacceleratorCustomRoutingEndpointGroup(name string, args GlobalacceleratorCustomRoutingEndpointGroupArgs) *GlobalacceleratorCustomRoutingEndpointGroup {
	return &GlobalacceleratorCustomRoutingEndpointGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GlobalacceleratorCustomRoutingEndpointGroup)(nil)

// GlobalacceleratorCustomRoutingEndpointGroup represents the Terraform resource aws_globalaccelerator_custom_routing_endpoint_group.
type GlobalacceleratorCustomRoutingEndpointGroup struct {
	Name      string
	Args      GlobalacceleratorCustomRoutingEndpointGroupArgs
	state     *globalacceleratorCustomRoutingEndpointGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GlobalacceleratorCustomRoutingEndpointGroup].
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) Type() string {
	return "aws_globalaccelerator_custom_routing_endpoint_group"
}

// LocalName returns the local name for [GlobalacceleratorCustomRoutingEndpointGroup].
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) LocalName() string {
	return gcreg.Name
}

// Configuration returns the configuration (args) for [GlobalacceleratorCustomRoutingEndpointGroup].
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) Configuration() interface{} {
	return gcreg.Args
}

// DependOn is used for other resources to depend on [GlobalacceleratorCustomRoutingEndpointGroup].
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(gcreg)
}

// Dependencies returns the list of resources [GlobalacceleratorCustomRoutingEndpointGroup] depends_on.
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) Dependencies() terra.Dependencies {
	return gcreg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GlobalacceleratorCustomRoutingEndpointGroup].
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) LifecycleManagement() *terra.Lifecycle {
	return gcreg.Lifecycle
}

// Attributes returns the attributes for [GlobalacceleratorCustomRoutingEndpointGroup].
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) Attributes() globalacceleratorCustomRoutingEndpointGroupAttributes {
	return globalacceleratorCustomRoutingEndpointGroupAttributes{ref: terra.ReferenceResource(gcreg)}
}

// ImportState imports the given attribute values into [GlobalacceleratorCustomRoutingEndpointGroup]'s state.
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) ImportState(av io.Reader) error {
	gcreg.state = &globalacceleratorCustomRoutingEndpointGroupState{}
	if err := json.NewDecoder(av).Decode(gcreg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gcreg.Type(), gcreg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GlobalacceleratorCustomRoutingEndpointGroup] has state.
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) State() (*globalacceleratorCustomRoutingEndpointGroupState, bool) {
	return gcreg.state, gcreg.state != nil
}

// StateMust returns the state for [GlobalacceleratorCustomRoutingEndpointGroup]. Panics if the state is nil.
func (gcreg *GlobalacceleratorCustomRoutingEndpointGroup) StateMust() *globalacceleratorCustomRoutingEndpointGroupState {
	if gcreg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gcreg.Type(), gcreg.LocalName()))
	}
	return gcreg.state
}

// GlobalacceleratorCustomRoutingEndpointGroupArgs contains the configurations for aws_globalaccelerator_custom_routing_endpoint_group.
type GlobalacceleratorCustomRoutingEndpointGroupArgs struct {
	// EndpointGroupRegion: string, optional
	EndpointGroupRegion terra.StringValue `hcl:"endpoint_group_region,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ListenerArn: string, required
	ListenerArn terra.StringValue `hcl:"listener_arn,attr" validate:"required"`
	// DestinationConfiguration: min=1
	DestinationConfiguration []globalacceleratorcustomroutingendpointgroup.DestinationConfiguration `hcl:"destination_configuration,block" validate:"min=1"`
	// EndpointConfiguration: min=0
	EndpointConfiguration []globalacceleratorcustomroutingendpointgroup.EndpointConfiguration `hcl:"endpoint_configuration,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *globalacceleratorcustomroutingendpointgroup.Timeouts `hcl:"timeouts,block"`
}
type globalacceleratorCustomRoutingEndpointGroupAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_globalaccelerator_custom_routing_endpoint_group.
func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(gcreg.ref.Append("arn"))
}

// EndpointGroupRegion returns a reference to field endpoint_group_region of aws_globalaccelerator_custom_routing_endpoint_group.
func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) EndpointGroupRegion() terra.StringValue {
	return terra.ReferenceAsString(gcreg.ref.Append("endpoint_group_region"))
}

// Id returns a reference to field id of aws_globalaccelerator_custom_routing_endpoint_group.
func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcreg.ref.Append("id"))
}

// ListenerArn returns a reference to field listener_arn of aws_globalaccelerator_custom_routing_endpoint_group.
func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) ListenerArn() terra.StringValue {
	return terra.ReferenceAsString(gcreg.ref.Append("listener_arn"))
}

func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) DestinationConfiguration() terra.SetValue[globalacceleratorcustomroutingendpointgroup.DestinationConfigurationAttributes] {
	return terra.ReferenceAsSet[globalacceleratorcustomroutingendpointgroup.DestinationConfigurationAttributes](gcreg.ref.Append("destination_configuration"))
}

func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) EndpointConfiguration() terra.SetValue[globalacceleratorcustomroutingendpointgroup.EndpointConfigurationAttributes] {
	return terra.ReferenceAsSet[globalacceleratorcustomroutingendpointgroup.EndpointConfigurationAttributes](gcreg.ref.Append("endpoint_configuration"))
}

func (gcreg globalacceleratorCustomRoutingEndpointGroupAttributes) Timeouts() globalacceleratorcustomroutingendpointgroup.TimeoutsAttributes {
	return terra.ReferenceAsSingle[globalacceleratorcustomroutingendpointgroup.TimeoutsAttributes](gcreg.ref.Append("timeouts"))
}

type globalacceleratorCustomRoutingEndpointGroupState struct {
	Arn                      string                                                                      `json:"arn"`
	EndpointGroupRegion      string                                                                      `json:"endpoint_group_region"`
	Id                       string                                                                      `json:"id"`
	ListenerArn              string                                                                      `json:"listener_arn"`
	DestinationConfiguration []globalacceleratorcustomroutingendpointgroup.DestinationConfigurationState `json:"destination_configuration"`
	EndpointConfiguration    []globalacceleratorcustomroutingendpointgroup.EndpointConfigurationState    `json:"endpoint_configuration"`
	Timeouts                 *globalacceleratorcustomroutingendpointgroup.TimeoutsState                  `json:"timeouts"`
}
