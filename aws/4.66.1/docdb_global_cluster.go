// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	docdbglobalcluster "github.com/golingon/terraproviders/aws/4.66.1/docdbglobalcluster"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDocdbGlobalCluster creates a new instance of [DocdbGlobalCluster].
func NewDocdbGlobalCluster(name string, args DocdbGlobalClusterArgs) *DocdbGlobalCluster {
	return &DocdbGlobalCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DocdbGlobalCluster)(nil)

// DocdbGlobalCluster represents the Terraform resource aws_docdb_global_cluster.
type DocdbGlobalCluster struct {
	Name      string
	Args      DocdbGlobalClusterArgs
	state     *docdbGlobalClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DocdbGlobalCluster].
func (dgc *DocdbGlobalCluster) Type() string {
	return "aws_docdb_global_cluster"
}

// LocalName returns the local name for [DocdbGlobalCluster].
func (dgc *DocdbGlobalCluster) LocalName() string {
	return dgc.Name
}

// Configuration returns the configuration (args) for [DocdbGlobalCluster].
func (dgc *DocdbGlobalCluster) Configuration() interface{} {
	return dgc.Args
}

// DependOn is used for other resources to depend on [DocdbGlobalCluster].
func (dgc *DocdbGlobalCluster) DependOn() terra.Reference {
	return terra.ReferenceResource(dgc)
}

// Dependencies returns the list of resources [DocdbGlobalCluster] depends_on.
func (dgc *DocdbGlobalCluster) Dependencies() terra.Dependencies {
	return dgc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DocdbGlobalCluster].
func (dgc *DocdbGlobalCluster) LifecycleManagement() *terra.Lifecycle {
	return dgc.Lifecycle
}

// Attributes returns the attributes for [DocdbGlobalCluster].
func (dgc *DocdbGlobalCluster) Attributes() docdbGlobalClusterAttributes {
	return docdbGlobalClusterAttributes{ref: terra.ReferenceResource(dgc)}
}

// ImportState imports the given attribute values into [DocdbGlobalCluster]'s state.
func (dgc *DocdbGlobalCluster) ImportState(av io.Reader) error {
	dgc.state = &docdbGlobalClusterState{}
	if err := json.NewDecoder(av).Decode(dgc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dgc.Type(), dgc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DocdbGlobalCluster] has state.
func (dgc *DocdbGlobalCluster) State() (*docdbGlobalClusterState, bool) {
	return dgc.state, dgc.state != nil
}

// StateMust returns the state for [DocdbGlobalCluster]. Panics if the state is nil.
func (dgc *DocdbGlobalCluster) StateMust() *docdbGlobalClusterState {
	if dgc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dgc.Type(), dgc.LocalName()))
	}
	return dgc.state
}

// DocdbGlobalClusterArgs contains the configurations for aws_docdb_global_cluster.
type DocdbGlobalClusterArgs struct {
	// DatabaseName: string, optional
	DatabaseName terra.StringValue `hcl:"database_name,attr"`
	// DeletionProtection: bool, optional
	DeletionProtection terra.BoolValue `hcl:"deletion_protection,attr"`
	// Engine: string, optional
	Engine terra.StringValue `hcl:"engine,attr"`
	// EngineVersion: string, optional
	EngineVersion terra.StringValue `hcl:"engine_version,attr"`
	// GlobalClusterIdentifier: string, required
	GlobalClusterIdentifier terra.StringValue `hcl:"global_cluster_identifier,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SourceDbClusterIdentifier: string, optional
	SourceDbClusterIdentifier terra.StringValue `hcl:"source_db_cluster_identifier,attr"`
	// StorageEncrypted: bool, optional
	StorageEncrypted terra.BoolValue `hcl:"storage_encrypted,attr"`
	// GlobalClusterMembers: min=0
	GlobalClusterMembers []docdbglobalcluster.GlobalClusterMembers `hcl:"global_cluster_members,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *docdbglobalcluster.Timeouts `hcl:"timeouts,block"`
}
type docdbGlobalClusterAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("arn"))
}

// DatabaseName returns a reference to field database_name of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("database_name"))
}

// DeletionProtection returns a reference to field deletion_protection of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(dgc.ref.Append("deletion_protection"))
}

// Engine returns a reference to field engine of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) Engine() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("engine"))
}

// EngineVersion returns a reference to field engine_version of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("engine_version"))
}

// GlobalClusterIdentifier returns a reference to field global_cluster_identifier of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) GlobalClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("global_cluster_identifier"))
}

// GlobalClusterResourceId returns a reference to field global_cluster_resource_id of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) GlobalClusterResourceId() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("global_cluster_resource_id"))
}

// Id returns a reference to field id of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("id"))
}

// SourceDbClusterIdentifier returns a reference to field source_db_cluster_identifier of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) SourceDbClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("source_db_cluster_identifier"))
}

// Status returns a reference to field status of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(dgc.ref.Append("status"))
}

// StorageEncrypted returns a reference to field storage_encrypted of aws_docdb_global_cluster.
func (dgc docdbGlobalClusterAttributes) StorageEncrypted() terra.BoolValue {
	return terra.ReferenceAsBool(dgc.ref.Append("storage_encrypted"))
}

func (dgc docdbGlobalClusterAttributes) GlobalClusterMembers() terra.SetValue[docdbglobalcluster.GlobalClusterMembersAttributes] {
	return terra.ReferenceAsSet[docdbglobalcluster.GlobalClusterMembersAttributes](dgc.ref.Append("global_cluster_members"))
}

func (dgc docdbGlobalClusterAttributes) Timeouts() docdbglobalcluster.TimeoutsAttributes {
	return terra.ReferenceAsSingle[docdbglobalcluster.TimeoutsAttributes](dgc.ref.Append("timeouts"))
}

type docdbGlobalClusterState struct {
	Arn                       string                                         `json:"arn"`
	DatabaseName              string                                         `json:"database_name"`
	DeletionProtection        bool                                           `json:"deletion_protection"`
	Engine                    string                                         `json:"engine"`
	EngineVersion             string                                         `json:"engine_version"`
	GlobalClusterIdentifier   string                                         `json:"global_cluster_identifier"`
	GlobalClusterResourceId   string                                         `json:"global_cluster_resource_id"`
	Id                        string                                         `json:"id"`
	SourceDbClusterIdentifier string                                         `json:"source_db_cluster_identifier"`
	Status                    string                                         `json:"status"`
	StorageEncrypted          bool                                           `json:"storage_encrypted"`
	GlobalClusterMembers      []docdbglobalcluster.GlobalClusterMembersState `json:"global_cluster_members"`
	Timeouts                  *docdbglobalcluster.TimeoutsState              `json:"timeouts"`
}
