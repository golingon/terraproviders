// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2managedprefixlist "github.com/golingon/terraproviders/aws/4.66.1/dataec2managedprefixlist"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataEc2ManagedPrefixList creates a new instance of [DataEc2ManagedPrefixList].
func NewDataEc2ManagedPrefixList(name string, args DataEc2ManagedPrefixListArgs) *DataEc2ManagedPrefixList {
	return &DataEc2ManagedPrefixList{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2ManagedPrefixList)(nil)

// DataEc2ManagedPrefixList represents the Terraform data resource aws_ec2_managed_prefix_list.
type DataEc2ManagedPrefixList struct {
	Name string
	Args DataEc2ManagedPrefixListArgs
}

// DataSource returns the Terraform object type for [DataEc2ManagedPrefixList].
func (empl *DataEc2ManagedPrefixList) DataSource() string {
	return "aws_ec2_managed_prefix_list"
}

// LocalName returns the local name for [DataEc2ManagedPrefixList].
func (empl *DataEc2ManagedPrefixList) LocalName() string {
	return empl.Name
}

// Configuration returns the configuration (args) for [DataEc2ManagedPrefixList].
func (empl *DataEc2ManagedPrefixList) Configuration() interface{} {
	return empl.Args
}

// Attributes returns the attributes for [DataEc2ManagedPrefixList].
func (empl *DataEc2ManagedPrefixList) Attributes() dataEc2ManagedPrefixListAttributes {
	return dataEc2ManagedPrefixListAttributes{ref: terra.ReferenceDataResource(empl)}
}

// DataEc2ManagedPrefixListArgs contains the configurations for aws_ec2_managed_prefix_list.
type DataEc2ManagedPrefixListArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Entries: min=0
	Entries []dataec2managedprefixlist.Entries `hcl:"entries,block" validate:"min=0"`
	// Filter: min=0
	Filter []dataec2managedprefixlist.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataec2managedprefixlist.Timeouts `hcl:"timeouts,block"`
}
type dataEc2ManagedPrefixListAttributes struct {
	ref terra.Reference
}

// AddressFamily returns a reference to field address_family of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) AddressFamily() terra.StringValue {
	return terra.ReferenceAsString(empl.ref.Append("address_family"))
}

// Arn returns a reference to field arn of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(empl.ref.Append("arn"))
}

// Id returns a reference to field id of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(empl.ref.Append("id"))
}

// MaxEntries returns a reference to field max_entries of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) MaxEntries() terra.NumberValue {
	return terra.ReferenceAsNumber(empl.ref.Append("max_entries"))
}

// Name returns a reference to field name of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(empl.ref.Append("name"))
}

// OwnerId returns a reference to field owner_id of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(empl.ref.Append("owner_id"))
}

// Tags returns a reference to field tags of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](empl.ref.Append("tags"))
}

// Version returns a reference to field version of aws_ec2_managed_prefix_list.
func (empl dataEc2ManagedPrefixListAttributes) Version() terra.NumberValue {
	return terra.ReferenceAsNumber(empl.ref.Append("version"))
}

func (empl dataEc2ManagedPrefixListAttributes) Entries() terra.SetValue[dataec2managedprefixlist.EntriesAttributes] {
	return terra.ReferenceAsSet[dataec2managedprefixlist.EntriesAttributes](empl.ref.Append("entries"))
}

func (empl dataEc2ManagedPrefixListAttributes) Filter() terra.SetValue[dataec2managedprefixlist.FilterAttributes] {
	return terra.ReferenceAsSet[dataec2managedprefixlist.FilterAttributes](empl.ref.Append("filter"))
}

func (empl dataEc2ManagedPrefixListAttributes) Timeouts() dataec2managedprefixlist.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataec2managedprefixlist.TimeoutsAttributes](empl.ref.Append("timeouts"))
}
