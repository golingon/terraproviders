// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewServiceDiscoveryHttpNamespace creates a new instance of [ServiceDiscoveryHttpNamespace].
func NewServiceDiscoveryHttpNamespace(name string, args ServiceDiscoveryHttpNamespaceArgs) *ServiceDiscoveryHttpNamespace {
	return &ServiceDiscoveryHttpNamespace{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServiceDiscoveryHttpNamespace)(nil)

// ServiceDiscoveryHttpNamespace represents the Terraform resource aws_service_discovery_http_namespace.
type ServiceDiscoveryHttpNamespace struct {
	Name      string
	Args      ServiceDiscoveryHttpNamespaceArgs
	state     *serviceDiscoveryHttpNamespaceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ServiceDiscoveryHttpNamespace].
func (sdhn *ServiceDiscoveryHttpNamespace) Type() string {
	return "aws_service_discovery_http_namespace"
}

// LocalName returns the local name for [ServiceDiscoveryHttpNamespace].
func (sdhn *ServiceDiscoveryHttpNamespace) LocalName() string {
	return sdhn.Name
}

// Configuration returns the configuration (args) for [ServiceDiscoveryHttpNamespace].
func (sdhn *ServiceDiscoveryHttpNamespace) Configuration() interface{} {
	return sdhn.Args
}

// DependOn is used for other resources to depend on [ServiceDiscoveryHttpNamespace].
func (sdhn *ServiceDiscoveryHttpNamespace) DependOn() terra.Reference {
	return terra.ReferenceResource(sdhn)
}

// Dependencies returns the list of resources [ServiceDiscoveryHttpNamespace] depends_on.
func (sdhn *ServiceDiscoveryHttpNamespace) Dependencies() terra.Dependencies {
	return sdhn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ServiceDiscoveryHttpNamespace].
func (sdhn *ServiceDiscoveryHttpNamespace) LifecycleManagement() *terra.Lifecycle {
	return sdhn.Lifecycle
}

// Attributes returns the attributes for [ServiceDiscoveryHttpNamespace].
func (sdhn *ServiceDiscoveryHttpNamespace) Attributes() serviceDiscoveryHttpNamespaceAttributes {
	return serviceDiscoveryHttpNamespaceAttributes{ref: terra.ReferenceResource(sdhn)}
}

// ImportState imports the given attribute values into [ServiceDiscoveryHttpNamespace]'s state.
func (sdhn *ServiceDiscoveryHttpNamespace) ImportState(av io.Reader) error {
	sdhn.state = &serviceDiscoveryHttpNamespaceState{}
	if err := json.NewDecoder(av).Decode(sdhn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdhn.Type(), sdhn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ServiceDiscoveryHttpNamespace] has state.
func (sdhn *ServiceDiscoveryHttpNamespace) State() (*serviceDiscoveryHttpNamespaceState, bool) {
	return sdhn.state, sdhn.state != nil
}

// StateMust returns the state for [ServiceDiscoveryHttpNamespace]. Panics if the state is nil.
func (sdhn *ServiceDiscoveryHttpNamespace) StateMust() *serviceDiscoveryHttpNamespaceState {
	if sdhn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdhn.Type(), sdhn.LocalName()))
	}
	return sdhn.state
}

// ServiceDiscoveryHttpNamespaceArgs contains the configurations for aws_service_discovery_http_namespace.
type ServiceDiscoveryHttpNamespaceArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
}
type serviceDiscoveryHttpNamespaceAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sdhn.ref.Append("arn"))
}

// Description returns a reference to field description of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sdhn.ref.Append("description"))
}

// HttpName returns a reference to field http_name of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) HttpName() terra.StringValue {
	return terra.ReferenceAsString(sdhn.ref.Append("http_name"))
}

// Id returns a reference to field id of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sdhn.ref.Append("id"))
}

// Name returns a reference to field name of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sdhn.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sdhn.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_service_discovery_http_namespace.
func (sdhn serviceDiscoveryHttpNamespaceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](sdhn.ref.Append("tags_all"))
}

type serviceDiscoveryHttpNamespaceState struct {
	Arn         string            `json:"arn"`
	Description string            `json:"description"`
	HttpName    string            `json:"http_name"`
	Id          string            `json:"id"`
	Name        string            `json:"name"`
	Tags        map[string]string `json:"tags"`
	TagsAll     map[string]string `json:"tags_all"`
}
