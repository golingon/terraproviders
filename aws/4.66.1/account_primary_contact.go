// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewAccountPrimaryContact creates a new instance of [AccountPrimaryContact].
func NewAccountPrimaryContact(name string, args AccountPrimaryContactArgs) *AccountPrimaryContact {
	return &AccountPrimaryContact{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AccountPrimaryContact)(nil)

// AccountPrimaryContact represents the Terraform resource aws_account_primary_contact.
type AccountPrimaryContact struct {
	Name      string
	Args      AccountPrimaryContactArgs
	state     *accountPrimaryContactState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AccountPrimaryContact].
func (apc *AccountPrimaryContact) Type() string {
	return "aws_account_primary_contact"
}

// LocalName returns the local name for [AccountPrimaryContact].
func (apc *AccountPrimaryContact) LocalName() string {
	return apc.Name
}

// Configuration returns the configuration (args) for [AccountPrimaryContact].
func (apc *AccountPrimaryContact) Configuration() interface{} {
	return apc.Args
}

// DependOn is used for other resources to depend on [AccountPrimaryContact].
func (apc *AccountPrimaryContact) DependOn() terra.Reference {
	return terra.ReferenceResource(apc)
}

// Dependencies returns the list of resources [AccountPrimaryContact] depends_on.
func (apc *AccountPrimaryContact) Dependencies() terra.Dependencies {
	return apc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AccountPrimaryContact].
func (apc *AccountPrimaryContact) LifecycleManagement() *terra.Lifecycle {
	return apc.Lifecycle
}

// Attributes returns the attributes for [AccountPrimaryContact].
func (apc *AccountPrimaryContact) Attributes() accountPrimaryContactAttributes {
	return accountPrimaryContactAttributes{ref: terra.ReferenceResource(apc)}
}

// ImportState imports the given attribute values into [AccountPrimaryContact]'s state.
func (apc *AccountPrimaryContact) ImportState(av io.Reader) error {
	apc.state = &accountPrimaryContactState{}
	if err := json.NewDecoder(av).Decode(apc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apc.Type(), apc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AccountPrimaryContact] has state.
func (apc *AccountPrimaryContact) State() (*accountPrimaryContactState, bool) {
	return apc.state, apc.state != nil
}

// StateMust returns the state for [AccountPrimaryContact]. Panics if the state is nil.
func (apc *AccountPrimaryContact) StateMust() *accountPrimaryContactState {
	if apc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apc.Type(), apc.LocalName()))
	}
	return apc.state
}

// AccountPrimaryContactArgs contains the configurations for aws_account_primary_contact.
type AccountPrimaryContactArgs struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// AddressLine1: string, required
	AddressLine1 terra.StringValue `hcl:"address_line_1,attr" validate:"required"`
	// AddressLine2: string, optional
	AddressLine2 terra.StringValue `hcl:"address_line_2,attr"`
	// AddressLine3: string, optional
	AddressLine3 terra.StringValue `hcl:"address_line_3,attr"`
	// City: string, required
	City terra.StringValue `hcl:"city,attr" validate:"required"`
	// CompanyName: string, optional
	CompanyName terra.StringValue `hcl:"company_name,attr"`
	// CountryCode: string, required
	CountryCode terra.StringValue `hcl:"country_code,attr" validate:"required"`
	// DistrictOrCounty: string, optional
	DistrictOrCounty terra.StringValue `hcl:"district_or_county,attr"`
	// FullName: string, required
	FullName terra.StringValue `hcl:"full_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PhoneNumber: string, required
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
	// PostalCode: string, required
	PostalCode terra.StringValue `hcl:"postal_code,attr" validate:"required"`
	// StateOrRegion: string, optional
	StateOrRegion terra.StringValue `hcl:"state_or_region,attr"`
	// WebsiteUrl: string, optional
	WebsiteUrl terra.StringValue `hcl:"website_url,attr"`
}
type accountPrimaryContactAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("account_id"))
}

// AddressLine1 returns a reference to field address_line_1 of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) AddressLine1() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("address_line_1"))
}

// AddressLine2 returns a reference to field address_line_2 of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) AddressLine2() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("address_line_2"))
}

// AddressLine3 returns a reference to field address_line_3 of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) AddressLine3() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("address_line_3"))
}

// City returns a reference to field city of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("city"))
}

// CompanyName returns a reference to field company_name of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) CompanyName() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("company_name"))
}

// CountryCode returns a reference to field country_code of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("country_code"))
}

// DistrictOrCounty returns a reference to field district_or_county of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) DistrictOrCounty() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("district_or_county"))
}

// FullName returns a reference to field full_name of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) FullName() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("full_name"))
}

// Id returns a reference to field id of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("id"))
}

// PhoneNumber returns a reference to field phone_number of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("phone_number"))
}

// PostalCode returns a reference to field postal_code of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) PostalCode() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("postal_code"))
}

// StateOrRegion returns a reference to field state_or_region of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) StateOrRegion() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("state_or_region"))
}

// WebsiteUrl returns a reference to field website_url of aws_account_primary_contact.
func (apc accountPrimaryContactAttributes) WebsiteUrl() terra.StringValue {
	return terra.ReferenceAsString(apc.ref.Append("website_url"))
}

type accountPrimaryContactState struct {
	AccountId        string `json:"account_id"`
	AddressLine1     string `json:"address_line_1"`
	AddressLine2     string `json:"address_line_2"`
	AddressLine3     string `json:"address_line_3"`
	City             string `json:"city"`
	CompanyName      string `json:"company_name"`
	CountryCode      string `json:"country_code"`
	DistrictOrCounty string `json:"district_or_county"`
	FullName         string `json:"full_name"`
	Id               string `json:"id"`
	PhoneNumber      string `json:"phone_number"`
	PostalCode       string `json:"postal_code"`
	StateOrRegion    string `json:"state_or_region"`
	WebsiteUrl       string `json:"website_url"`
}
