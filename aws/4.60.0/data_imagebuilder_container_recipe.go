// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataimagebuildercontainerrecipe "github.com/golingon/terraproviders/aws/4.60.0/dataimagebuildercontainerrecipe"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataImagebuilderContainerRecipe(name string, args DataImagebuilderContainerRecipeArgs) *DataImagebuilderContainerRecipe {
	return &DataImagebuilderContainerRecipe{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataImagebuilderContainerRecipe)(nil)

type DataImagebuilderContainerRecipe struct {
	Name string
	Args DataImagebuilderContainerRecipeArgs
}

func (icr *DataImagebuilderContainerRecipe) DataSource() string {
	return "aws_imagebuilder_container_recipe"
}

func (icr *DataImagebuilderContainerRecipe) LocalName() string {
	return icr.Name
}

func (icr *DataImagebuilderContainerRecipe) Configuration() interface{} {
	return icr.Args
}

func (icr *DataImagebuilderContainerRecipe) Attributes() dataImagebuilderContainerRecipeAttributes {
	return dataImagebuilderContainerRecipeAttributes{ref: terra.ReferenceDataResource(icr)}
}

type DataImagebuilderContainerRecipeArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Component: min=0
	Component []dataimagebuildercontainerrecipe.Component `hcl:"component,block" validate:"min=0"`
	// InstanceConfiguration: min=0
	InstanceConfiguration []dataimagebuildercontainerrecipe.InstanceConfiguration `hcl:"instance_configuration,block" validate:"min=0"`
	// TargetRepository: min=0
	TargetRepository []dataimagebuildercontainerrecipe.TargetRepository `hcl:"target_repository,block" validate:"min=0"`
}
type dataImagebuilderContainerRecipeAttributes struct {
	ref terra.Reference
}

func (icr dataImagebuilderContainerRecipeAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("arn"))
}

func (icr dataImagebuilderContainerRecipeAttributes) ContainerType() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("container_type"))
}

func (icr dataImagebuilderContainerRecipeAttributes) DateCreated() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("date_created"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Description() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("description"))
}

func (icr dataImagebuilderContainerRecipeAttributes) DockerfileTemplateData() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("dockerfile_template_data"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceBool(icr.ref.Append("encrypted"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Id() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("id"))
}

func (icr dataImagebuilderContainerRecipeAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("kms_key_id"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Name() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("name"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("owner"))
}

func (icr dataImagebuilderContainerRecipeAttributes) ParentImage() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("parent_image"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Platform() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("platform"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](icr.ref.Append("tags"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Version() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("version"))
}

func (icr dataImagebuilderContainerRecipeAttributes) WorkingDirectory() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("working_directory"))
}

func (icr dataImagebuilderContainerRecipeAttributes) Component() terra.ListValue[dataimagebuildercontainerrecipe.ComponentAttributes] {
	return terra.ReferenceList[dataimagebuildercontainerrecipe.ComponentAttributes](icr.ref.Append("component"))
}

func (icr dataImagebuilderContainerRecipeAttributes) InstanceConfiguration() terra.ListValue[dataimagebuildercontainerrecipe.InstanceConfigurationAttributes] {
	return terra.ReferenceList[dataimagebuildercontainerrecipe.InstanceConfigurationAttributes](icr.ref.Append("instance_configuration"))
}

func (icr dataImagebuilderContainerRecipeAttributes) TargetRepository() terra.ListValue[dataimagebuildercontainerrecipe.TargetRepositoryAttributes] {
	return terra.ReferenceList[dataimagebuildercontainerrecipe.TargetRepositoryAttributes](icr.ref.Append("target_repository"))
}
