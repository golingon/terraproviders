// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataSecretsmanagerRandomPassword(name string, args DataSecretsmanagerRandomPasswordArgs) *DataSecretsmanagerRandomPassword {
	return &DataSecretsmanagerRandomPassword{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSecretsmanagerRandomPassword)(nil)

type DataSecretsmanagerRandomPassword struct {
	Name string
	Args DataSecretsmanagerRandomPasswordArgs
}

func (srp *DataSecretsmanagerRandomPassword) DataSource() string {
	return "aws_secretsmanager_random_password"
}

func (srp *DataSecretsmanagerRandomPassword) LocalName() string {
	return srp.Name
}

func (srp *DataSecretsmanagerRandomPassword) Configuration() interface{} {
	return srp.Args
}

func (srp *DataSecretsmanagerRandomPassword) Attributes() dataSecretsmanagerRandomPasswordAttributes {
	return dataSecretsmanagerRandomPasswordAttributes{ref: terra.ReferenceDataResource(srp)}
}

type DataSecretsmanagerRandomPasswordArgs struct {
	// ExcludeCharacters: string, optional
	ExcludeCharacters terra.StringValue `hcl:"exclude_characters,attr"`
	// ExcludeLowercase: bool, optional
	ExcludeLowercase terra.BoolValue `hcl:"exclude_lowercase,attr"`
	// ExcludeNumbers: bool, optional
	ExcludeNumbers terra.BoolValue `hcl:"exclude_numbers,attr"`
	// ExcludePunctuation: bool, optional
	ExcludePunctuation terra.BoolValue `hcl:"exclude_punctuation,attr"`
	// ExcludeUppercase: bool, optional
	ExcludeUppercase terra.BoolValue `hcl:"exclude_uppercase,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IncludeSpace: bool, optional
	IncludeSpace terra.BoolValue `hcl:"include_space,attr"`
	// PasswordLength: number, optional
	PasswordLength terra.NumberValue `hcl:"password_length,attr"`
	// RandomPassword: string, optional
	RandomPassword terra.StringValue `hcl:"random_password,attr"`
	// RequireEachIncludedType: bool, optional
	RequireEachIncludedType terra.BoolValue `hcl:"require_each_included_type,attr"`
}
type dataSecretsmanagerRandomPasswordAttributes struct {
	ref terra.Reference
}

func (srp dataSecretsmanagerRandomPasswordAttributes) ExcludeCharacters() terra.StringValue {
	return terra.ReferenceString(srp.ref.Append("exclude_characters"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) ExcludeLowercase() terra.BoolValue {
	return terra.ReferenceBool(srp.ref.Append("exclude_lowercase"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) ExcludeNumbers() terra.BoolValue {
	return terra.ReferenceBool(srp.ref.Append("exclude_numbers"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) ExcludePunctuation() terra.BoolValue {
	return terra.ReferenceBool(srp.ref.Append("exclude_punctuation"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) ExcludeUppercase() terra.BoolValue {
	return terra.ReferenceBool(srp.ref.Append("exclude_uppercase"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) Id() terra.StringValue {
	return terra.ReferenceString(srp.ref.Append("id"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) IncludeSpace() terra.BoolValue {
	return terra.ReferenceBool(srp.ref.Append("include_space"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) PasswordLength() terra.NumberValue {
	return terra.ReferenceNumber(srp.ref.Append("password_length"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) RandomPassword() terra.StringValue {
	return terra.ReferenceString(srp.ref.Append("random_password"))
}

func (srp dataSecretsmanagerRandomPasswordAttributes) RequireEachIncludedType() terra.BoolValue {
	return terra.ReferenceBool(srp.ref.Append("require_each_included_type"))
}
