// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	lambdafunctioneventinvokeconfig "github.com/golingon/terraproviders/aws/4.60.0/lambdafunctioneventinvokeconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLambdaFunctionEventInvokeConfig(name string, args LambdaFunctionEventInvokeConfigArgs) *LambdaFunctionEventInvokeConfig {
	return &LambdaFunctionEventInvokeConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LambdaFunctionEventInvokeConfig)(nil)

type LambdaFunctionEventInvokeConfig struct {
	Name  string
	Args  LambdaFunctionEventInvokeConfigArgs
	state *lambdaFunctionEventInvokeConfigState
}

func (lfeic *LambdaFunctionEventInvokeConfig) Type() string {
	return "aws_lambda_function_event_invoke_config"
}

func (lfeic *LambdaFunctionEventInvokeConfig) LocalName() string {
	return lfeic.Name
}

func (lfeic *LambdaFunctionEventInvokeConfig) Configuration() interface{} {
	return lfeic.Args
}

func (lfeic *LambdaFunctionEventInvokeConfig) Attributes() lambdaFunctionEventInvokeConfigAttributes {
	return lambdaFunctionEventInvokeConfigAttributes{ref: terra.ReferenceResource(lfeic)}
}

func (lfeic *LambdaFunctionEventInvokeConfig) ImportState(av io.Reader) error {
	lfeic.state = &lambdaFunctionEventInvokeConfigState{}
	if err := json.NewDecoder(av).Decode(lfeic.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lfeic.Type(), lfeic.LocalName(), err)
	}
	return nil
}

func (lfeic *LambdaFunctionEventInvokeConfig) State() (*lambdaFunctionEventInvokeConfigState, bool) {
	return lfeic.state, lfeic.state != nil
}

func (lfeic *LambdaFunctionEventInvokeConfig) StateMust() *lambdaFunctionEventInvokeConfigState {
	if lfeic.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lfeic.Type(), lfeic.LocalName()))
	}
	return lfeic.state
}

func (lfeic *LambdaFunctionEventInvokeConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(lfeic)
}

type LambdaFunctionEventInvokeConfigArgs struct {
	// FunctionName: string, required
	FunctionName terra.StringValue `hcl:"function_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MaximumEventAgeInSeconds: number, optional
	MaximumEventAgeInSeconds terra.NumberValue `hcl:"maximum_event_age_in_seconds,attr"`
	// MaximumRetryAttempts: number, optional
	MaximumRetryAttempts terra.NumberValue `hcl:"maximum_retry_attempts,attr"`
	// Qualifier: string, optional
	Qualifier terra.StringValue `hcl:"qualifier,attr"`
	// DestinationConfig: optional
	DestinationConfig *lambdafunctioneventinvokeconfig.DestinationConfig `hcl:"destination_config,block"`
	// DependsOn contains resources that LambdaFunctionEventInvokeConfig depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lambdaFunctionEventInvokeConfigAttributes struct {
	ref terra.Reference
}

func (lfeic lambdaFunctionEventInvokeConfigAttributes) FunctionName() terra.StringValue {
	return terra.ReferenceString(lfeic.ref.Append("function_name"))
}

func (lfeic lambdaFunctionEventInvokeConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lfeic.ref.Append("id"))
}

func (lfeic lambdaFunctionEventInvokeConfigAttributes) MaximumEventAgeInSeconds() terra.NumberValue {
	return terra.ReferenceNumber(lfeic.ref.Append("maximum_event_age_in_seconds"))
}

func (lfeic lambdaFunctionEventInvokeConfigAttributes) MaximumRetryAttempts() terra.NumberValue {
	return terra.ReferenceNumber(lfeic.ref.Append("maximum_retry_attempts"))
}

func (lfeic lambdaFunctionEventInvokeConfigAttributes) Qualifier() terra.StringValue {
	return terra.ReferenceString(lfeic.ref.Append("qualifier"))
}

func (lfeic lambdaFunctionEventInvokeConfigAttributes) DestinationConfig() terra.ListValue[lambdafunctioneventinvokeconfig.DestinationConfigAttributes] {
	return terra.ReferenceList[lambdafunctioneventinvokeconfig.DestinationConfigAttributes](lfeic.ref.Append("destination_config"))
}

type lambdaFunctionEventInvokeConfigState struct {
	FunctionName             string                                                   `json:"function_name"`
	Id                       string                                                   `json:"id"`
	MaximumEventAgeInSeconds float64                                                  `json:"maximum_event_age_in_seconds"`
	MaximumRetryAttempts     float64                                                  `json:"maximum_retry_attempts"`
	Qualifier                string                                                   `json:"qualifier"`
	DestinationConfig        []lambdafunctioneventinvokeconfig.DestinationConfigState `json:"destination_config"`
}
