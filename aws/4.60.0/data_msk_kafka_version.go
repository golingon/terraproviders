// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataMskKafkaVersion(name string, args DataMskKafkaVersionArgs) *DataMskKafkaVersion {
	return &DataMskKafkaVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMskKafkaVersion)(nil)

type DataMskKafkaVersion struct {
	Name string
	Args DataMskKafkaVersionArgs
}

func (mkv *DataMskKafkaVersion) DataSource() string {
	return "aws_msk_kafka_version"
}

func (mkv *DataMskKafkaVersion) LocalName() string {
	return mkv.Name
}

func (mkv *DataMskKafkaVersion) Configuration() interface{} {
	return mkv.Args
}

func (mkv *DataMskKafkaVersion) Attributes() dataMskKafkaVersionAttributes {
	return dataMskKafkaVersionAttributes{ref: terra.ReferenceDataResource(mkv)}
}

type DataMskKafkaVersionArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PreferredVersions: list of string, optional
	PreferredVersions terra.ListValue[terra.StringValue] `hcl:"preferred_versions,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}
type dataMskKafkaVersionAttributes struct {
	ref terra.Reference
}

func (mkv dataMskKafkaVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mkv.ref.Append("id"))
}

func (mkv dataMskKafkaVersionAttributes) PreferredVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](mkv.ref.Append("preferred_versions"))
}

func (mkv dataMskKafkaVersionAttributes) Status() terra.StringValue {
	return terra.ReferenceString(mkv.ref.Append("status"))
}

func (mkv dataMskKafkaVersionAttributes) Version() terra.StringValue {
	return terra.ReferenceString(mkv.ref.Append("version"))
}
