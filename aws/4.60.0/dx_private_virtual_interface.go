// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	dxprivatevirtualinterface "github.com/golingon/terraproviders/aws/4.60.0/dxprivatevirtualinterface"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDxPrivateVirtualInterface(name string, args DxPrivateVirtualInterfaceArgs) *DxPrivateVirtualInterface {
	return &DxPrivateVirtualInterface{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DxPrivateVirtualInterface)(nil)

type DxPrivateVirtualInterface struct {
	Name  string
	Args  DxPrivateVirtualInterfaceArgs
	state *dxPrivateVirtualInterfaceState
}

func (dpvi *DxPrivateVirtualInterface) Type() string {
	return "aws_dx_private_virtual_interface"
}

func (dpvi *DxPrivateVirtualInterface) LocalName() string {
	return dpvi.Name
}

func (dpvi *DxPrivateVirtualInterface) Configuration() interface{} {
	return dpvi.Args
}

func (dpvi *DxPrivateVirtualInterface) Attributes() dxPrivateVirtualInterfaceAttributes {
	return dxPrivateVirtualInterfaceAttributes{ref: terra.ReferenceResource(dpvi)}
}

func (dpvi *DxPrivateVirtualInterface) ImportState(av io.Reader) error {
	dpvi.state = &dxPrivateVirtualInterfaceState{}
	if err := json.NewDecoder(av).Decode(dpvi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dpvi.Type(), dpvi.LocalName(), err)
	}
	return nil
}

func (dpvi *DxPrivateVirtualInterface) State() (*dxPrivateVirtualInterfaceState, bool) {
	return dpvi.state, dpvi.state != nil
}

func (dpvi *DxPrivateVirtualInterface) StateMust() *dxPrivateVirtualInterfaceState {
	if dpvi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dpvi.Type(), dpvi.LocalName()))
	}
	return dpvi.state
}

func (dpvi *DxPrivateVirtualInterface) DependOn() terra.Reference {
	return terra.ReferenceResource(dpvi)
}

type DxPrivateVirtualInterfaceArgs struct {
	// AddressFamily: string, required
	AddressFamily terra.StringValue `hcl:"address_family,attr" validate:"required"`
	// AmazonAddress: string, optional
	AmazonAddress terra.StringValue `hcl:"amazon_address,attr"`
	// BgpAsn: number, required
	BgpAsn terra.NumberValue `hcl:"bgp_asn,attr" validate:"required"`
	// BgpAuthKey: string, optional
	BgpAuthKey terra.StringValue `hcl:"bgp_auth_key,attr"`
	// ConnectionId: string, required
	ConnectionId terra.StringValue `hcl:"connection_id,attr" validate:"required"`
	// CustomerAddress: string, optional
	CustomerAddress terra.StringValue `hcl:"customer_address,attr"`
	// DxGatewayId: string, optional
	DxGatewayId terra.StringValue `hcl:"dx_gateway_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mtu: number, optional
	Mtu terra.NumberValue `hcl:"mtu,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SitelinkEnabled: bool, optional
	SitelinkEnabled terra.BoolValue `hcl:"sitelink_enabled,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Vlan: number, required
	Vlan terra.NumberValue `hcl:"vlan,attr" validate:"required"`
	// VpnGatewayId: string, optional
	VpnGatewayId terra.StringValue `hcl:"vpn_gateway_id,attr"`
	// Timeouts: optional
	Timeouts *dxprivatevirtualinterface.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DxPrivateVirtualInterface depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dxPrivateVirtualInterfaceAttributes struct {
	ref terra.Reference
}

func (dpvi dxPrivateVirtualInterfaceAttributes) AddressFamily() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("address_family"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) AmazonAddress() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("amazon_address"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) AmazonSideAsn() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("amazon_side_asn"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("arn"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) AwsDevice() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("aws_device"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) BgpAsn() terra.NumberValue {
	return terra.ReferenceNumber(dpvi.ref.Append("bgp_asn"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) BgpAuthKey() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("bgp_auth_key"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) ConnectionId() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("connection_id"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) CustomerAddress() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("customer_address"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) DxGatewayId() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("dx_gateway_id"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("id"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) JumboFrameCapable() terra.BoolValue {
	return terra.ReferenceBool(dpvi.ref.Append("jumbo_frame_capable"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Mtu() terra.NumberValue {
	return terra.ReferenceNumber(dpvi.ref.Append("mtu"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("name"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) SitelinkEnabled() terra.BoolValue {
	return terra.ReferenceBool(dpvi.ref.Append("sitelink_enabled"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dpvi.ref.Append("tags"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dpvi.ref.Append("tags_all"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Vlan() terra.NumberValue {
	return terra.ReferenceNumber(dpvi.ref.Append("vlan"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) VpnGatewayId() terra.StringValue {
	return terra.ReferenceString(dpvi.ref.Append("vpn_gateway_id"))
}

func (dpvi dxPrivateVirtualInterfaceAttributes) Timeouts() dxprivatevirtualinterface.TimeoutsAttributes {
	return terra.ReferenceSingle[dxprivatevirtualinterface.TimeoutsAttributes](dpvi.ref.Append("timeouts"))
}

type dxPrivateVirtualInterfaceState struct {
	AddressFamily     string                                   `json:"address_family"`
	AmazonAddress     string                                   `json:"amazon_address"`
	AmazonSideAsn     string                                   `json:"amazon_side_asn"`
	Arn               string                                   `json:"arn"`
	AwsDevice         string                                   `json:"aws_device"`
	BgpAsn            float64                                  `json:"bgp_asn"`
	BgpAuthKey        string                                   `json:"bgp_auth_key"`
	ConnectionId      string                                   `json:"connection_id"`
	CustomerAddress   string                                   `json:"customer_address"`
	DxGatewayId       string                                   `json:"dx_gateway_id"`
	Id                string                                   `json:"id"`
	JumboFrameCapable bool                                     `json:"jumbo_frame_capable"`
	Mtu               float64                                  `json:"mtu"`
	Name              string                                   `json:"name"`
	SitelinkEnabled   bool                                     `json:"sitelink_enabled"`
	Tags              map[string]string                        `json:"tags"`
	TagsAll           map[string]string                        `json:"tags_all"`
	Vlan              float64                                  `json:"vlan"`
	VpnGatewayId      string                                   `json:"vpn_gateway_id"`
	Timeouts          *dxprivatevirtualinterface.TimeoutsState `json:"timeouts"`
}
