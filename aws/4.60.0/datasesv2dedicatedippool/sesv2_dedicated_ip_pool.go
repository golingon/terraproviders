// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datasesv2dedicatedippool

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type DedicatedIps struct{}

type DedicatedIpsAttributes struct {
	ref terra.Reference
}

func (di DedicatedIpsAttributes) InternalRef() terra.Reference {
	return di.ref
}

func (di DedicatedIpsAttributes) InternalWithRef(ref terra.Reference) DedicatedIpsAttributes {
	return DedicatedIpsAttributes{ref: ref}
}

func (di DedicatedIpsAttributes) InternalTokens() hclwrite.Tokens {
	return di.ref.InternalTokens()
}

func (di DedicatedIpsAttributes) Ip() terra.StringValue {
	return terra.ReferenceAsString(di.ref.Append("ip"))
}

func (di DedicatedIpsAttributes) WarmupPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(di.ref.Append("warmup_percentage"))
}

func (di DedicatedIpsAttributes) WarmupStatus() terra.StringValue {
	return terra.ReferenceAsString(di.ref.Append("warmup_status"))
}

type DedicatedIpsState struct {
	Ip               string  `json:"ip"`
	WarmupPercentage float64 `json:"warmup_percentage"`
	WarmupStatus     string  `json:"warmup_status"`
}
