// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewVpcDhcpOptionsAssociation(name string, args VpcDhcpOptionsAssociationArgs) *VpcDhcpOptionsAssociation {
	return &VpcDhcpOptionsAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpcDhcpOptionsAssociation)(nil)

type VpcDhcpOptionsAssociation struct {
	Name  string
	Args  VpcDhcpOptionsAssociationArgs
	state *vpcDhcpOptionsAssociationState
}

func (vdoa *VpcDhcpOptionsAssociation) Type() string {
	return "aws_vpc_dhcp_options_association"
}

func (vdoa *VpcDhcpOptionsAssociation) LocalName() string {
	return vdoa.Name
}

func (vdoa *VpcDhcpOptionsAssociation) Configuration() interface{} {
	return vdoa.Args
}

func (vdoa *VpcDhcpOptionsAssociation) Attributes() vpcDhcpOptionsAssociationAttributes {
	return vpcDhcpOptionsAssociationAttributes{ref: terra.ReferenceResource(vdoa)}
}

func (vdoa *VpcDhcpOptionsAssociation) ImportState(av io.Reader) error {
	vdoa.state = &vpcDhcpOptionsAssociationState{}
	if err := json.NewDecoder(av).Decode(vdoa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vdoa.Type(), vdoa.LocalName(), err)
	}
	return nil
}

func (vdoa *VpcDhcpOptionsAssociation) State() (*vpcDhcpOptionsAssociationState, bool) {
	return vdoa.state, vdoa.state != nil
}

func (vdoa *VpcDhcpOptionsAssociation) StateMust() *vpcDhcpOptionsAssociationState {
	if vdoa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vdoa.Type(), vdoa.LocalName()))
	}
	return vdoa.state
}

func (vdoa *VpcDhcpOptionsAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(vdoa)
}

type VpcDhcpOptionsAssociationArgs struct {
	// DhcpOptionsId: string, required
	DhcpOptionsId terra.StringValue `hcl:"dhcp_options_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
	// DependsOn contains resources that VpcDhcpOptionsAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type vpcDhcpOptionsAssociationAttributes struct {
	ref terra.Reference
}

func (vdoa vpcDhcpOptionsAssociationAttributes) DhcpOptionsId() terra.StringValue {
	return terra.ReferenceString(vdoa.ref.Append("dhcp_options_id"))
}

func (vdoa vpcDhcpOptionsAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vdoa.ref.Append("id"))
}

func (vdoa vpcDhcpOptionsAssociationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(vdoa.ref.Append("vpc_id"))
}

type vpcDhcpOptionsAssociationState struct {
	DhcpOptionsId string `json:"dhcp_options_id"`
	Id            string `json:"id"`
	VpcId         string `json:"vpc_id"`
}
