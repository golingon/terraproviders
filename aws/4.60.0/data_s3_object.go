// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataS3Object(name string, args DataS3ObjectArgs) *DataS3Object {
	return &DataS3Object{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataS3Object)(nil)

type DataS3Object struct {
	Name string
	Args DataS3ObjectArgs
}

func (so *DataS3Object) DataSource() string {
	return "aws_s3_object"
}

func (so *DataS3Object) LocalName() string {
	return so.Name
}

func (so *DataS3Object) Configuration() interface{} {
	return so.Args
}

func (so *DataS3Object) Attributes() dataS3ObjectAttributes {
	return dataS3ObjectAttributes{ref: terra.ReferenceDataResource(so)}
}

type DataS3ObjectArgs struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Range: string, optional
	Range terra.StringValue `hcl:"range,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VersionId: string, optional
	VersionId terra.StringValue `hcl:"version_id,attr"`
}
type dataS3ObjectAttributes struct {
	ref terra.Reference
}

func (so dataS3ObjectAttributes) Body() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("body"))
}

func (so dataS3ObjectAttributes) Bucket() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("bucket"))
}

func (so dataS3ObjectAttributes) BucketKeyEnabled() terra.BoolValue {
	return terra.ReferenceBool(so.ref.Append("bucket_key_enabled"))
}

func (so dataS3ObjectAttributes) CacheControl() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("cache_control"))
}

func (so dataS3ObjectAttributes) ContentDisposition() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("content_disposition"))
}

func (so dataS3ObjectAttributes) ContentEncoding() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("content_encoding"))
}

func (so dataS3ObjectAttributes) ContentLanguage() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("content_language"))
}

func (so dataS3ObjectAttributes) ContentLength() terra.NumberValue {
	return terra.ReferenceNumber(so.ref.Append("content_length"))
}

func (so dataS3ObjectAttributes) ContentType() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("content_type"))
}

func (so dataS3ObjectAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("etag"))
}

func (so dataS3ObjectAttributes) Expiration() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("expiration"))
}

func (so dataS3ObjectAttributes) Expires() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("expires"))
}

func (so dataS3ObjectAttributes) Id() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("id"))
}

func (so dataS3ObjectAttributes) Key() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("key"))
}

func (so dataS3ObjectAttributes) LastModified() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("last_modified"))
}

func (so dataS3ObjectAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](so.ref.Append("metadata"))
}

func (so dataS3ObjectAttributes) ObjectLockLegalHoldStatus() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("object_lock_legal_hold_status"))
}

func (so dataS3ObjectAttributes) ObjectLockMode() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("object_lock_mode"))
}

func (so dataS3ObjectAttributes) ObjectLockRetainUntilDate() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("object_lock_retain_until_date"))
}

func (so dataS3ObjectAttributes) Range() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("range"))
}

func (so dataS3ObjectAttributes) ServerSideEncryption() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("server_side_encryption"))
}

func (so dataS3ObjectAttributes) SseKmsKeyId() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("sse_kms_key_id"))
}

func (so dataS3ObjectAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("storage_class"))
}

func (so dataS3ObjectAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](so.ref.Append("tags"))
}

func (so dataS3ObjectAttributes) VersionId() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("version_id"))
}

func (so dataS3ObjectAttributes) WebsiteRedirectLocation() terra.StringValue {
	return terra.ReferenceString(so.ref.Append("website_redirect_location"))
}
