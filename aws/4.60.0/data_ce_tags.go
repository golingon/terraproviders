// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datacetags "github.com/golingon/terraproviders/aws/4.60.0/datacetags"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCeTags(name string, args DataCeTagsArgs) *DataCeTags {
	return &DataCeTags{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCeTags)(nil)

type DataCeTags struct {
	Name string
	Args DataCeTagsArgs
}

func (ct *DataCeTags) DataSource() string {
	return "aws_ce_tags"
}

func (ct *DataCeTags) LocalName() string {
	return ct.Name
}

func (ct *DataCeTags) Configuration() interface{} {
	return ct.Args
}

func (ct *DataCeTags) Attributes() dataCeTagsAttributes {
	return dataCeTagsAttributes{ref: terra.ReferenceDataResource(ct)}
}

type DataCeTagsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SearchString: string, optional
	SearchString terra.StringValue `hcl:"search_string,attr"`
	// TagKey: string, optional
	TagKey terra.StringValue `hcl:"tag_key,attr"`
	// Filter: optional
	Filter *datacetags.Filter `hcl:"filter,block"`
	// SortBy: min=0
	SortBy []datacetags.SortBy `hcl:"sort_by,block" validate:"min=0"`
	// TimePeriod: required
	TimePeriod *datacetags.TimePeriod `hcl:"time_period,block" validate:"required"`
}
type dataCeTagsAttributes struct {
	ref terra.Reference
}

func (ct dataCeTagsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("id"))
}

func (ct dataCeTagsAttributes) SearchString() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("search_string"))
}

func (ct dataCeTagsAttributes) TagKey() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("tag_key"))
}

func (ct dataCeTagsAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ct.ref.Append("tags"))
}

func (ct dataCeTagsAttributes) Filter() terra.ListValue[datacetags.FilterAttributes] {
	return terra.ReferenceList[datacetags.FilterAttributes](ct.ref.Append("filter"))
}

func (ct dataCeTagsAttributes) SortBy() terra.ListValue[datacetags.SortByAttributes] {
	return terra.ReferenceList[datacetags.SortByAttributes](ct.ref.Append("sort_by"))
}

func (ct dataCeTagsAttributes) TimePeriod() terra.ListValue[datacetags.TimePeriodAttributes] {
	return terra.ReferenceList[datacetags.TimePeriodAttributes](ct.ref.Append("time_period"))
}
