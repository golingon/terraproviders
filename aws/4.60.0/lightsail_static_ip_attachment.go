// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailStaticIpAttachment(name string, args LightsailStaticIpAttachmentArgs) *LightsailStaticIpAttachment {
	return &LightsailStaticIpAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailStaticIpAttachment)(nil)

type LightsailStaticIpAttachment struct {
	Name  string
	Args  LightsailStaticIpAttachmentArgs
	state *lightsailStaticIpAttachmentState
}

func (lsia *LightsailStaticIpAttachment) Type() string {
	return "aws_lightsail_static_ip_attachment"
}

func (lsia *LightsailStaticIpAttachment) LocalName() string {
	return lsia.Name
}

func (lsia *LightsailStaticIpAttachment) Configuration() interface{} {
	return lsia.Args
}

func (lsia *LightsailStaticIpAttachment) Attributes() lightsailStaticIpAttachmentAttributes {
	return lightsailStaticIpAttachmentAttributes{ref: terra.ReferenceResource(lsia)}
}

func (lsia *LightsailStaticIpAttachment) ImportState(av io.Reader) error {
	lsia.state = &lightsailStaticIpAttachmentState{}
	if err := json.NewDecoder(av).Decode(lsia.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lsia.Type(), lsia.LocalName(), err)
	}
	return nil
}

func (lsia *LightsailStaticIpAttachment) State() (*lightsailStaticIpAttachmentState, bool) {
	return lsia.state, lsia.state != nil
}

func (lsia *LightsailStaticIpAttachment) StateMust() *lightsailStaticIpAttachmentState {
	if lsia.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lsia.Type(), lsia.LocalName()))
	}
	return lsia.state
}

func (lsia *LightsailStaticIpAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(lsia)
}

type LightsailStaticIpAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceName: string, required
	InstanceName terra.StringValue `hcl:"instance_name,attr" validate:"required"`
	// StaticIpName: string, required
	StaticIpName terra.StringValue `hcl:"static_ip_name,attr" validate:"required"`
	// DependsOn contains resources that LightsailStaticIpAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailStaticIpAttachmentAttributes struct {
	ref terra.Reference
}

func (lsia lightsailStaticIpAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lsia.ref.Append("id"))
}

func (lsia lightsailStaticIpAttachmentAttributes) InstanceName() terra.StringValue {
	return terra.ReferenceString(lsia.ref.Append("instance_name"))
}

func (lsia lightsailStaticIpAttachmentAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceString(lsia.ref.Append("ip_address"))
}

func (lsia lightsailStaticIpAttachmentAttributes) StaticIpName() terra.StringValue {
	return terra.ReferenceString(lsia.ref.Append("static_ip_name"))
}

type lightsailStaticIpAttachmentState struct {
	Id           string `json:"id"`
	InstanceName string `json:"instance_name"`
	IpAddress    string `json:"ip_address"`
	StaticIpName string `json:"static_ip_name"`
}
