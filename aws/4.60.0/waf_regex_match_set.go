// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	wafregexmatchset "github.com/golingon/terraproviders/aws/4.60.0/wafregexmatchset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWafRegexMatchSet(name string, args WafRegexMatchSetArgs) *WafRegexMatchSet {
	return &WafRegexMatchSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WafRegexMatchSet)(nil)

type WafRegexMatchSet struct {
	Name  string
	Args  WafRegexMatchSetArgs
	state *wafRegexMatchSetState
}

func (wrms *WafRegexMatchSet) Type() string {
	return "aws_waf_regex_match_set"
}

func (wrms *WafRegexMatchSet) LocalName() string {
	return wrms.Name
}

func (wrms *WafRegexMatchSet) Configuration() interface{} {
	return wrms.Args
}

func (wrms *WafRegexMatchSet) Attributes() wafRegexMatchSetAttributes {
	return wafRegexMatchSetAttributes{ref: terra.ReferenceResource(wrms)}
}

func (wrms *WafRegexMatchSet) ImportState(av io.Reader) error {
	wrms.state = &wafRegexMatchSetState{}
	if err := json.NewDecoder(av).Decode(wrms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wrms.Type(), wrms.LocalName(), err)
	}
	return nil
}

func (wrms *WafRegexMatchSet) State() (*wafRegexMatchSetState, bool) {
	return wrms.state, wrms.state != nil
}

func (wrms *WafRegexMatchSet) StateMust() *wafRegexMatchSetState {
	if wrms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wrms.Type(), wrms.LocalName()))
	}
	return wrms.state
}

func (wrms *WafRegexMatchSet) DependOn() terra.Reference {
	return terra.ReferenceResource(wrms)
}

type WafRegexMatchSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RegexMatchTuple: min=0
	RegexMatchTuple []wafregexmatchset.RegexMatchTuple `hcl:"regex_match_tuple,block" validate:"min=0"`
	// DependsOn contains resources that WafRegexMatchSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type wafRegexMatchSetAttributes struct {
	ref terra.Reference
}

func (wrms wafRegexMatchSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(wrms.ref.Append("arn"))
}

func (wrms wafRegexMatchSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wrms.ref.Append("id"))
}

func (wrms wafRegexMatchSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wrms.ref.Append("name"))
}

func (wrms wafRegexMatchSetAttributes) RegexMatchTuple() terra.SetValue[wafregexmatchset.RegexMatchTupleAttributes] {
	return terra.ReferenceSet[wafregexmatchset.RegexMatchTupleAttributes](wrms.ref.Append("regex_match_tuple"))
}

type wafRegexMatchSetState struct {
	Arn             string                                  `json:"arn"`
	Id              string                                  `json:"id"`
	Name            string                                  `json:"name"`
	RegexMatchTuple []wafregexmatchset.RegexMatchTupleState `json:"regex_match_tuple"`
}
