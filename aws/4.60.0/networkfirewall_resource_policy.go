// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewNetworkfirewallResourcePolicy creates a new instance of [NetworkfirewallResourcePolicy].
func NewNetworkfirewallResourcePolicy(name string, args NetworkfirewallResourcePolicyArgs) *NetworkfirewallResourcePolicy {
	return &NetworkfirewallResourcePolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkfirewallResourcePolicy)(nil)

// NetworkfirewallResourcePolicy represents the Terraform resource aws_networkfirewall_resource_policy.
type NetworkfirewallResourcePolicy struct {
	Name      string
	Args      NetworkfirewallResourcePolicyArgs
	state     *networkfirewallResourcePolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [NetworkfirewallResourcePolicy].
func (nrp *NetworkfirewallResourcePolicy) Type() string {
	return "aws_networkfirewall_resource_policy"
}

// LocalName returns the local name for [NetworkfirewallResourcePolicy].
func (nrp *NetworkfirewallResourcePolicy) LocalName() string {
	return nrp.Name
}

// Configuration returns the configuration (args) for [NetworkfirewallResourcePolicy].
func (nrp *NetworkfirewallResourcePolicy) Configuration() interface{} {
	return nrp.Args
}

// DependOn is used for other resources to depend on [NetworkfirewallResourcePolicy].
func (nrp *NetworkfirewallResourcePolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(nrp)
}

// Dependencies returns the list of resources [NetworkfirewallResourcePolicy] depends_on.
func (nrp *NetworkfirewallResourcePolicy) Dependencies() terra.Dependencies {
	return nrp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [NetworkfirewallResourcePolicy].
func (nrp *NetworkfirewallResourcePolicy) LifecycleManagement() *terra.Lifecycle {
	return nrp.Lifecycle
}

// Attributes returns the attributes for [NetworkfirewallResourcePolicy].
func (nrp *NetworkfirewallResourcePolicy) Attributes() networkfirewallResourcePolicyAttributes {
	return networkfirewallResourcePolicyAttributes{ref: terra.ReferenceResource(nrp)}
}

// ImportState imports the given attribute values into [NetworkfirewallResourcePolicy]'s state.
func (nrp *NetworkfirewallResourcePolicy) ImportState(av io.Reader) error {
	nrp.state = &networkfirewallResourcePolicyState{}
	if err := json.NewDecoder(av).Decode(nrp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nrp.Type(), nrp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [NetworkfirewallResourcePolicy] has state.
func (nrp *NetworkfirewallResourcePolicy) State() (*networkfirewallResourcePolicyState, bool) {
	return nrp.state, nrp.state != nil
}

// StateMust returns the state for [NetworkfirewallResourcePolicy]. Panics if the state is nil.
func (nrp *NetworkfirewallResourcePolicy) StateMust() *networkfirewallResourcePolicyState {
	if nrp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nrp.Type(), nrp.LocalName()))
	}
	return nrp.state
}

// NetworkfirewallResourcePolicyArgs contains the configurations for aws_networkfirewall_resource_policy.
type NetworkfirewallResourcePolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}
type networkfirewallResourcePolicyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_networkfirewall_resource_policy.
func (nrp networkfirewallResourcePolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nrp.ref.Append("id"))
}

// Policy returns a reference to field policy of aws_networkfirewall_resource_policy.
func (nrp networkfirewallResourcePolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(nrp.ref.Append("policy"))
}

// ResourceArn returns a reference to field resource_arn of aws_networkfirewall_resource_policy.
func (nrp networkfirewallResourcePolicyAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(nrp.ref.Append("resource_arn"))
}

type networkfirewallResourcePolicyState struct {
	Id          string `json:"id"`
	Policy      string `json:"policy"`
	ResourceArn string `json:"resource_arn"`
}
