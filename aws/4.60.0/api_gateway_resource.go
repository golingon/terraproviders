// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiGatewayResource(name string, args ApiGatewayResourceArgs) *ApiGatewayResource {
	return &ApiGatewayResource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiGatewayResource)(nil)

type ApiGatewayResource struct {
	Name  string
	Args  ApiGatewayResourceArgs
	state *apiGatewayResourceState
}

func (agr *ApiGatewayResource) Type() string {
	return "aws_api_gateway_resource"
}

func (agr *ApiGatewayResource) LocalName() string {
	return agr.Name
}

func (agr *ApiGatewayResource) Configuration() interface{} {
	return agr.Args
}

func (agr *ApiGatewayResource) Attributes() apiGatewayResourceAttributes {
	return apiGatewayResourceAttributes{ref: terra.ReferenceResource(agr)}
}

func (agr *ApiGatewayResource) ImportState(av io.Reader) error {
	agr.state = &apiGatewayResourceState{}
	if err := json.NewDecoder(av).Decode(agr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agr.Type(), agr.LocalName(), err)
	}
	return nil
}

func (agr *ApiGatewayResource) State() (*apiGatewayResourceState, bool) {
	return agr.state, agr.state != nil
}

func (agr *ApiGatewayResource) StateMust() *apiGatewayResourceState {
	if agr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agr.Type(), agr.LocalName()))
	}
	return agr.state
}

func (agr *ApiGatewayResource) DependOn() terra.Reference {
	return terra.ReferenceResource(agr)
}

type ApiGatewayResourceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ParentId: string, required
	ParentId terra.StringValue `hcl:"parent_id,attr" validate:"required"`
	// PathPart: string, required
	PathPart terra.StringValue `hcl:"path_part,attr" validate:"required"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// DependsOn contains resources that ApiGatewayResource depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiGatewayResourceAttributes struct {
	ref terra.Reference
}

func (agr apiGatewayResourceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(agr.ref.Append("id"))
}

func (agr apiGatewayResourceAttributes) ParentId() terra.StringValue {
	return terra.ReferenceString(agr.ref.Append("parent_id"))
}

func (agr apiGatewayResourceAttributes) Path() terra.StringValue {
	return terra.ReferenceString(agr.ref.Append("path"))
}

func (agr apiGatewayResourceAttributes) PathPart() terra.StringValue {
	return terra.ReferenceString(agr.ref.Append("path_part"))
}

func (agr apiGatewayResourceAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceString(agr.ref.Append("rest_api_id"))
}

type apiGatewayResourceState struct {
	Id        string `json:"id"`
	ParentId  string `json:"parent_id"`
	Path      string `json:"path"`
	PathPart  string `json:"path_part"`
	RestApiId string `json:"rest_api_id"`
}
