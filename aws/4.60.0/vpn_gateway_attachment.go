// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewVpnGatewayAttachment(name string, args VpnGatewayAttachmentArgs) *VpnGatewayAttachment {
	return &VpnGatewayAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpnGatewayAttachment)(nil)

type VpnGatewayAttachment struct {
	Name  string
	Args  VpnGatewayAttachmentArgs
	state *vpnGatewayAttachmentState
}

func (vga *VpnGatewayAttachment) Type() string {
	return "aws_vpn_gateway_attachment"
}

func (vga *VpnGatewayAttachment) LocalName() string {
	return vga.Name
}

func (vga *VpnGatewayAttachment) Configuration() interface{} {
	return vga.Args
}

func (vga *VpnGatewayAttachment) Attributes() vpnGatewayAttachmentAttributes {
	return vpnGatewayAttachmentAttributes{ref: terra.ReferenceResource(vga)}
}

func (vga *VpnGatewayAttachment) ImportState(av io.Reader) error {
	vga.state = &vpnGatewayAttachmentState{}
	if err := json.NewDecoder(av).Decode(vga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vga.Type(), vga.LocalName(), err)
	}
	return nil
}

func (vga *VpnGatewayAttachment) State() (*vpnGatewayAttachmentState, bool) {
	return vga.state, vga.state != nil
}

func (vga *VpnGatewayAttachment) StateMust() *vpnGatewayAttachmentState {
	if vga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vga.Type(), vga.LocalName()))
	}
	return vga.state
}

func (vga *VpnGatewayAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(vga)
}

type VpnGatewayAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
	// VpnGatewayId: string, required
	VpnGatewayId terra.StringValue `hcl:"vpn_gateway_id,attr" validate:"required"`
	// DependsOn contains resources that VpnGatewayAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type vpnGatewayAttachmentAttributes struct {
	ref terra.Reference
}

func (vga vpnGatewayAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vga.ref.Append("id"))
}

func (vga vpnGatewayAttachmentAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(vga.ref.Append("vpc_id"))
}

func (vga vpnGatewayAttachmentAttributes) VpnGatewayId() terra.StringValue {
	return terra.ReferenceString(vga.ref.Append("vpn_gateway_id"))
}

type vpnGatewayAttachmentState struct {
	Id           string `json:"id"`
	VpcId        string `json:"vpc_id"`
	VpnGatewayId string `json:"vpn_gateway_id"`
}
