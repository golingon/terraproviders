// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	sagemakerdevice "github.com/golingon/terraproviders/aws/4.60.0/sagemakerdevice"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSagemakerDevice(name string, args SagemakerDeviceArgs) *SagemakerDevice {
	return &SagemakerDevice{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SagemakerDevice)(nil)

type SagemakerDevice struct {
	Name  string
	Args  SagemakerDeviceArgs
	state *sagemakerDeviceState
}

func (sd *SagemakerDevice) Type() string {
	return "aws_sagemaker_device"
}

func (sd *SagemakerDevice) LocalName() string {
	return sd.Name
}

func (sd *SagemakerDevice) Configuration() interface{} {
	return sd.Args
}

func (sd *SagemakerDevice) Attributes() sagemakerDeviceAttributes {
	return sagemakerDeviceAttributes{ref: terra.ReferenceResource(sd)}
}

func (sd *SagemakerDevice) ImportState(av io.Reader) error {
	sd.state = &sagemakerDeviceState{}
	if err := json.NewDecoder(av).Decode(sd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sd.Type(), sd.LocalName(), err)
	}
	return nil
}

func (sd *SagemakerDevice) State() (*sagemakerDeviceState, bool) {
	return sd.state, sd.state != nil
}

func (sd *SagemakerDevice) StateMust() *sagemakerDeviceState {
	if sd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sd.Type(), sd.LocalName()))
	}
	return sd.state
}

func (sd *SagemakerDevice) DependOn() terra.Reference {
	return terra.ReferenceResource(sd)
}

type SagemakerDeviceArgs struct {
	// DeviceFleetName: string, required
	DeviceFleetName terra.StringValue `hcl:"device_fleet_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Device: required
	Device *sagemakerdevice.Device `hcl:"device,block" validate:"required"`
	// DependsOn contains resources that SagemakerDevice depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sagemakerDeviceAttributes struct {
	ref terra.Reference
}

func (sd sagemakerDeviceAttributes) AgentVersion() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("agent_version"))
}

func (sd sagemakerDeviceAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("arn"))
}

func (sd sagemakerDeviceAttributes) DeviceFleetName() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("device_fleet_name"))
}

func (sd sagemakerDeviceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("id"))
}

func (sd sagemakerDeviceAttributes) Device() terra.ListValue[sagemakerdevice.DeviceAttributes] {
	return terra.ReferenceList[sagemakerdevice.DeviceAttributes](sd.ref.Append("device"))
}

type sagemakerDeviceState struct {
	AgentVersion    string                        `json:"agent_version"`
	Arn             string                        `json:"arn"`
	DeviceFleetName string                        `json:"device_fleet_name"`
	Id              string                        `json:"id"`
	Device          []sagemakerdevice.DeviceState `json:"device"`
}
