// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewVpcIpamOrganizationAdminAccount(name string, args VpcIpamOrganizationAdminAccountArgs) *VpcIpamOrganizationAdminAccount {
	return &VpcIpamOrganizationAdminAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpcIpamOrganizationAdminAccount)(nil)

type VpcIpamOrganizationAdminAccount struct {
	Name  string
	Args  VpcIpamOrganizationAdminAccountArgs
	state *vpcIpamOrganizationAdminAccountState
}

func (vioaa *VpcIpamOrganizationAdminAccount) Type() string {
	return "aws_vpc_ipam_organization_admin_account"
}

func (vioaa *VpcIpamOrganizationAdminAccount) LocalName() string {
	return vioaa.Name
}

func (vioaa *VpcIpamOrganizationAdminAccount) Configuration() interface{} {
	return vioaa.Args
}

func (vioaa *VpcIpamOrganizationAdminAccount) Attributes() vpcIpamOrganizationAdminAccountAttributes {
	return vpcIpamOrganizationAdminAccountAttributes{ref: terra.ReferenceResource(vioaa)}
}

func (vioaa *VpcIpamOrganizationAdminAccount) ImportState(av io.Reader) error {
	vioaa.state = &vpcIpamOrganizationAdminAccountState{}
	if err := json.NewDecoder(av).Decode(vioaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vioaa.Type(), vioaa.LocalName(), err)
	}
	return nil
}

func (vioaa *VpcIpamOrganizationAdminAccount) State() (*vpcIpamOrganizationAdminAccountState, bool) {
	return vioaa.state, vioaa.state != nil
}

func (vioaa *VpcIpamOrganizationAdminAccount) StateMust() *vpcIpamOrganizationAdminAccountState {
	if vioaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vioaa.Type(), vioaa.LocalName()))
	}
	return vioaa.state
}

func (vioaa *VpcIpamOrganizationAdminAccount) DependOn() terra.Reference {
	return terra.ReferenceResource(vioaa)
}

type VpcIpamOrganizationAdminAccountArgs struct {
	// DelegatedAdminAccountId: string, required
	DelegatedAdminAccountId terra.StringValue `hcl:"delegated_admin_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that VpcIpamOrganizationAdminAccount depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type vpcIpamOrganizationAdminAccountAttributes struct {
	ref terra.Reference
}

func (vioaa vpcIpamOrganizationAdminAccountAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(vioaa.ref.Append("arn"))
}

func (vioaa vpcIpamOrganizationAdminAccountAttributes) DelegatedAdminAccountId() terra.StringValue {
	return terra.ReferenceString(vioaa.ref.Append("delegated_admin_account_id"))
}

func (vioaa vpcIpamOrganizationAdminAccountAttributes) Email() terra.StringValue {
	return terra.ReferenceString(vioaa.ref.Append("email"))
}

func (vioaa vpcIpamOrganizationAdminAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vioaa.ref.Append("id"))
}

func (vioaa vpcIpamOrganizationAdminAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceString(vioaa.ref.Append("name"))
}

func (vioaa vpcIpamOrganizationAdminAccountAttributes) ServicePrincipal() terra.StringValue {
	return terra.ReferenceString(vioaa.ref.Append("service_principal"))
}

type vpcIpamOrganizationAdminAccountState struct {
	Arn                     string `json:"arn"`
	DelegatedAdminAccountId string `json:"delegated_admin_account_id"`
	Email                   string `json:"email"`
	Id                      string `json:"id"`
	Name                    string `json:"name"`
	ServicePrincipal        string `json:"service_principal"`
}
