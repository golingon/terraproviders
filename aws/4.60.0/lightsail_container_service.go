// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	lightsailcontainerservice "github.com/golingon/terraproviders/aws/4.60.0/lightsailcontainerservice"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailContainerService(name string, args LightsailContainerServiceArgs) *LightsailContainerService {
	return &LightsailContainerService{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailContainerService)(nil)

type LightsailContainerService struct {
	Name  string
	Args  LightsailContainerServiceArgs
	state *lightsailContainerServiceState
}

func (lcs *LightsailContainerService) Type() string {
	return "aws_lightsail_container_service"
}

func (lcs *LightsailContainerService) LocalName() string {
	return lcs.Name
}

func (lcs *LightsailContainerService) Configuration() interface{} {
	return lcs.Args
}

func (lcs *LightsailContainerService) Attributes() lightsailContainerServiceAttributes {
	return lightsailContainerServiceAttributes{ref: terra.ReferenceResource(lcs)}
}

func (lcs *LightsailContainerService) ImportState(av io.Reader) error {
	lcs.state = &lightsailContainerServiceState{}
	if err := json.NewDecoder(av).Decode(lcs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lcs.Type(), lcs.LocalName(), err)
	}
	return nil
}

func (lcs *LightsailContainerService) State() (*lightsailContainerServiceState, bool) {
	return lcs.state, lcs.state != nil
}

func (lcs *LightsailContainerService) StateMust() *lightsailContainerServiceState {
	if lcs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lcs.Type(), lcs.LocalName()))
	}
	return lcs.state
}

func (lcs *LightsailContainerService) DependOn() terra.Reference {
	return terra.ReferenceResource(lcs)
}

type LightsailContainerServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IsDisabled: bool, optional
	IsDisabled terra.BoolValue `hcl:"is_disabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Power: string, required
	Power terra.StringValue `hcl:"power,attr" validate:"required"`
	// Scale: number, required
	Scale terra.NumberValue `hcl:"scale,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// PrivateRegistryAccess: optional
	PrivateRegistryAccess *lightsailcontainerservice.PrivateRegistryAccess `hcl:"private_registry_access,block"`
	// PublicDomainNames: optional
	PublicDomainNames *lightsailcontainerservice.PublicDomainNames `hcl:"public_domain_names,block"`
	// Timeouts: optional
	Timeouts *lightsailcontainerservice.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that LightsailContainerService depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailContainerServiceAttributes struct {
	ref terra.Reference
}

func (lcs lightsailContainerServiceAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("arn"))
}

func (lcs lightsailContainerServiceAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("availability_zone"))
}

func (lcs lightsailContainerServiceAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("created_at"))
}

func (lcs lightsailContainerServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("id"))
}

func (lcs lightsailContainerServiceAttributes) IsDisabled() terra.BoolValue {
	return terra.ReferenceBool(lcs.ref.Append("is_disabled"))
}

func (lcs lightsailContainerServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("name"))
}

func (lcs lightsailContainerServiceAttributes) Power() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("power"))
}

func (lcs lightsailContainerServiceAttributes) PowerId() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("power_id"))
}

func (lcs lightsailContainerServiceAttributes) PrincipalArn() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("principal_arn"))
}

func (lcs lightsailContainerServiceAttributes) PrivateDomainName() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("private_domain_name"))
}

func (lcs lightsailContainerServiceAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("resource_type"))
}

func (lcs lightsailContainerServiceAttributes) Scale() terra.NumberValue {
	return terra.ReferenceNumber(lcs.ref.Append("scale"))
}

func (lcs lightsailContainerServiceAttributes) State() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("state"))
}

func (lcs lightsailContainerServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](lcs.ref.Append("tags"))
}

func (lcs lightsailContainerServiceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](lcs.ref.Append("tags_all"))
}

func (lcs lightsailContainerServiceAttributes) Url() terra.StringValue {
	return terra.ReferenceString(lcs.ref.Append("url"))
}

func (lcs lightsailContainerServiceAttributes) PrivateRegistryAccess() terra.ListValue[lightsailcontainerservice.PrivateRegistryAccessAttributes] {
	return terra.ReferenceList[lightsailcontainerservice.PrivateRegistryAccessAttributes](lcs.ref.Append("private_registry_access"))
}

func (lcs lightsailContainerServiceAttributes) PublicDomainNames() terra.ListValue[lightsailcontainerservice.PublicDomainNamesAttributes] {
	return terra.ReferenceList[lightsailcontainerservice.PublicDomainNamesAttributes](lcs.ref.Append("public_domain_names"))
}

func (lcs lightsailContainerServiceAttributes) Timeouts() lightsailcontainerservice.TimeoutsAttributes {
	return terra.ReferenceSingle[lightsailcontainerservice.TimeoutsAttributes](lcs.ref.Append("timeouts"))
}

type lightsailContainerServiceState struct {
	Arn                   string                                                 `json:"arn"`
	AvailabilityZone      string                                                 `json:"availability_zone"`
	CreatedAt             string                                                 `json:"created_at"`
	Id                    string                                                 `json:"id"`
	IsDisabled            bool                                                   `json:"is_disabled"`
	Name                  string                                                 `json:"name"`
	Power                 string                                                 `json:"power"`
	PowerId               string                                                 `json:"power_id"`
	PrincipalArn          string                                                 `json:"principal_arn"`
	PrivateDomainName     string                                                 `json:"private_domain_name"`
	ResourceType          string                                                 `json:"resource_type"`
	Scale                 float64                                                `json:"scale"`
	State                 string                                                 `json:"state"`
	Tags                  map[string]string                                      `json:"tags"`
	TagsAll               map[string]string                                      `json:"tags_all"`
	Url                   string                                                 `json:"url"`
	PrivateRegistryAccess []lightsailcontainerservice.PrivateRegistryAccessState `json:"private_registry_access"`
	PublicDomainNames     []lightsailcontainerservice.PublicDomainNamesState     `json:"public_domain_names"`
	Timeouts              *lightsailcontainerservice.TimeoutsState               `json:"timeouts"`
}
