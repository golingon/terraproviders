// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	fsxontapfilesystem "github.com/golingon/terraproviders/aws/4.60.0/fsxontapfilesystem"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewFsxOntapFileSystem(name string, args FsxOntapFileSystemArgs) *FsxOntapFileSystem {
	return &FsxOntapFileSystem{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*FsxOntapFileSystem)(nil)

type FsxOntapFileSystem struct {
	Name  string
	Args  FsxOntapFileSystemArgs
	state *fsxOntapFileSystemState
}

func (fofs *FsxOntapFileSystem) Type() string {
	return "aws_fsx_ontap_file_system"
}

func (fofs *FsxOntapFileSystem) LocalName() string {
	return fofs.Name
}

func (fofs *FsxOntapFileSystem) Configuration() interface{} {
	return fofs.Args
}

func (fofs *FsxOntapFileSystem) Attributes() fsxOntapFileSystemAttributes {
	return fsxOntapFileSystemAttributes{ref: terra.ReferenceResource(fofs)}
}

func (fofs *FsxOntapFileSystem) ImportState(av io.Reader) error {
	fofs.state = &fsxOntapFileSystemState{}
	if err := json.NewDecoder(av).Decode(fofs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", fofs.Type(), fofs.LocalName(), err)
	}
	return nil
}

func (fofs *FsxOntapFileSystem) State() (*fsxOntapFileSystemState, bool) {
	return fofs.state, fofs.state != nil
}

func (fofs *FsxOntapFileSystem) StateMust() *fsxOntapFileSystemState {
	if fofs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", fofs.Type(), fofs.LocalName()))
	}
	return fofs.state
}

func (fofs *FsxOntapFileSystem) DependOn() terra.Reference {
	return terra.ReferenceResource(fofs)
}

type FsxOntapFileSystemArgs struct {
	// AutomaticBackupRetentionDays: number, optional
	AutomaticBackupRetentionDays terra.NumberValue `hcl:"automatic_backup_retention_days,attr"`
	// DailyAutomaticBackupStartTime: string, optional
	DailyAutomaticBackupStartTime terra.StringValue `hcl:"daily_automatic_backup_start_time,attr"`
	// DeploymentType: string, required
	DeploymentType terra.StringValue `hcl:"deployment_type,attr" validate:"required"`
	// EndpointIpAddressRange: string, optional
	EndpointIpAddressRange terra.StringValue `hcl:"endpoint_ip_address_range,attr"`
	// FsxAdminPassword: string, optional
	FsxAdminPassword terra.StringValue `hcl:"fsx_admin_password,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// PreferredSubnetId: string, required
	PreferredSubnetId terra.StringValue `hcl:"preferred_subnet_id,attr" validate:"required"`
	// RouteTableIds: set of string, optional
	RouteTableIds terra.SetValue[terra.StringValue] `hcl:"route_table_ids,attr"`
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// StorageCapacity: number, optional
	StorageCapacity terra.NumberValue `hcl:"storage_capacity,attr"`
	// StorageType: string, optional
	StorageType terra.StringValue `hcl:"storage_type,attr"`
	// SubnetIds: list of string, required
	SubnetIds terra.ListValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// ThroughputCapacity: number, required
	ThroughputCapacity terra.NumberValue `hcl:"throughput_capacity,attr" validate:"required"`
	// WeeklyMaintenanceStartTime: string, optional
	WeeklyMaintenanceStartTime terra.StringValue `hcl:"weekly_maintenance_start_time,attr"`
	// Endpoints: min=0
	Endpoints []fsxontapfilesystem.Endpoints `hcl:"endpoints,block" validate:"min=0"`
	// DiskIopsConfiguration: optional
	DiskIopsConfiguration *fsxontapfilesystem.DiskIopsConfiguration `hcl:"disk_iops_configuration,block"`
	// Timeouts: optional
	Timeouts *fsxontapfilesystem.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that FsxOntapFileSystem depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type fsxOntapFileSystemAttributes struct {
	ref terra.Reference
}

func (fofs fsxOntapFileSystemAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("arn"))
}

func (fofs fsxOntapFileSystemAttributes) AutomaticBackupRetentionDays() terra.NumberValue {
	return terra.ReferenceNumber(fofs.ref.Append("automatic_backup_retention_days"))
}

func (fofs fsxOntapFileSystemAttributes) DailyAutomaticBackupStartTime() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("daily_automatic_backup_start_time"))
}

func (fofs fsxOntapFileSystemAttributes) DeploymentType() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("deployment_type"))
}

func (fofs fsxOntapFileSystemAttributes) DnsName() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("dns_name"))
}

func (fofs fsxOntapFileSystemAttributes) EndpointIpAddressRange() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("endpoint_ip_address_range"))
}

func (fofs fsxOntapFileSystemAttributes) FsxAdminPassword() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("fsx_admin_password"))
}

func (fofs fsxOntapFileSystemAttributes) Id() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("id"))
}

func (fofs fsxOntapFileSystemAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("kms_key_id"))
}

func (fofs fsxOntapFileSystemAttributes) NetworkInterfaceIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](fofs.ref.Append("network_interface_ids"))
}

func (fofs fsxOntapFileSystemAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("owner_id"))
}

func (fofs fsxOntapFileSystemAttributes) PreferredSubnetId() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("preferred_subnet_id"))
}

func (fofs fsxOntapFileSystemAttributes) RouteTableIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](fofs.ref.Append("route_table_ids"))
}

func (fofs fsxOntapFileSystemAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](fofs.ref.Append("security_group_ids"))
}

func (fofs fsxOntapFileSystemAttributes) StorageCapacity() terra.NumberValue {
	return terra.ReferenceNumber(fofs.ref.Append("storage_capacity"))
}

func (fofs fsxOntapFileSystemAttributes) StorageType() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("storage_type"))
}

func (fofs fsxOntapFileSystemAttributes) SubnetIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](fofs.ref.Append("subnet_ids"))
}

func (fofs fsxOntapFileSystemAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](fofs.ref.Append("tags"))
}

func (fofs fsxOntapFileSystemAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](fofs.ref.Append("tags_all"))
}

func (fofs fsxOntapFileSystemAttributes) ThroughputCapacity() terra.NumberValue {
	return terra.ReferenceNumber(fofs.ref.Append("throughput_capacity"))
}

func (fofs fsxOntapFileSystemAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("vpc_id"))
}

func (fofs fsxOntapFileSystemAttributes) WeeklyMaintenanceStartTime() terra.StringValue {
	return terra.ReferenceString(fofs.ref.Append("weekly_maintenance_start_time"))
}

func (fofs fsxOntapFileSystemAttributes) Endpoints() terra.ListValue[fsxontapfilesystem.EndpointsAttributes] {
	return terra.ReferenceList[fsxontapfilesystem.EndpointsAttributes](fofs.ref.Append("endpoints"))
}

func (fofs fsxOntapFileSystemAttributes) DiskIopsConfiguration() terra.ListValue[fsxontapfilesystem.DiskIopsConfigurationAttributes] {
	return terra.ReferenceList[fsxontapfilesystem.DiskIopsConfigurationAttributes](fofs.ref.Append("disk_iops_configuration"))
}

func (fofs fsxOntapFileSystemAttributes) Timeouts() fsxontapfilesystem.TimeoutsAttributes {
	return terra.ReferenceSingle[fsxontapfilesystem.TimeoutsAttributes](fofs.ref.Append("timeouts"))
}

type fsxOntapFileSystemState struct {
	Arn                           string                                          `json:"arn"`
	AutomaticBackupRetentionDays  float64                                         `json:"automatic_backup_retention_days"`
	DailyAutomaticBackupStartTime string                                          `json:"daily_automatic_backup_start_time"`
	DeploymentType                string                                          `json:"deployment_type"`
	DnsName                       string                                          `json:"dns_name"`
	EndpointIpAddressRange        string                                          `json:"endpoint_ip_address_range"`
	FsxAdminPassword              string                                          `json:"fsx_admin_password"`
	Id                            string                                          `json:"id"`
	KmsKeyId                      string                                          `json:"kms_key_id"`
	NetworkInterfaceIds           []string                                        `json:"network_interface_ids"`
	OwnerId                       string                                          `json:"owner_id"`
	PreferredSubnetId             string                                          `json:"preferred_subnet_id"`
	RouteTableIds                 []string                                        `json:"route_table_ids"`
	SecurityGroupIds              []string                                        `json:"security_group_ids"`
	StorageCapacity               float64                                         `json:"storage_capacity"`
	StorageType                   string                                          `json:"storage_type"`
	SubnetIds                     []string                                        `json:"subnet_ids"`
	Tags                          map[string]string                               `json:"tags"`
	TagsAll                       map[string]string                               `json:"tags_all"`
	ThroughputCapacity            float64                                         `json:"throughput_capacity"`
	VpcId                         string                                          `json:"vpc_id"`
	WeeklyMaintenanceStartTime    string                                          `json:"weekly_maintenance_start_time"`
	Endpoints                     []fsxontapfilesystem.EndpointsState             `json:"endpoints"`
	DiskIopsConfiguration         []fsxontapfilesystem.DiskIopsConfigurationState `json:"disk_iops_configuration"`
	Timeouts                      *fsxontapfilesystem.TimeoutsState               `json:"timeouts"`
}
