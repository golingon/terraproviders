// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApplicationinsightsApplication(name string, args ApplicationinsightsApplicationArgs) *ApplicationinsightsApplication {
	return &ApplicationinsightsApplication{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationinsightsApplication)(nil)

type ApplicationinsightsApplication struct {
	Name  string
	Args  ApplicationinsightsApplicationArgs
	state *applicationinsightsApplicationState
}

func (aa *ApplicationinsightsApplication) Type() string {
	return "aws_applicationinsights_application"
}

func (aa *ApplicationinsightsApplication) LocalName() string {
	return aa.Name
}

func (aa *ApplicationinsightsApplication) Configuration() interface{} {
	return aa.Args
}

func (aa *ApplicationinsightsApplication) Attributes() applicationinsightsApplicationAttributes {
	return applicationinsightsApplicationAttributes{ref: terra.ReferenceResource(aa)}
}

func (aa *ApplicationinsightsApplication) ImportState(av io.Reader) error {
	aa.state = &applicationinsightsApplicationState{}
	if err := json.NewDecoder(av).Decode(aa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aa.Type(), aa.LocalName(), err)
	}
	return nil
}

func (aa *ApplicationinsightsApplication) State() (*applicationinsightsApplicationState, bool) {
	return aa.state, aa.state != nil
}

func (aa *ApplicationinsightsApplication) StateMust() *applicationinsightsApplicationState {
	if aa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aa.Type(), aa.LocalName()))
	}
	return aa.state
}

func (aa *ApplicationinsightsApplication) DependOn() terra.Reference {
	return terra.ReferenceResource(aa)
}

type ApplicationinsightsApplicationArgs struct {
	// AutoConfigEnabled: bool, optional
	AutoConfigEnabled terra.BoolValue `hcl:"auto_config_enabled,attr"`
	// AutoCreate: bool, optional
	AutoCreate terra.BoolValue `hcl:"auto_create,attr"`
	// CweMonitorEnabled: bool, optional
	CweMonitorEnabled terra.BoolValue `hcl:"cwe_monitor_enabled,attr"`
	// GroupingType: string, optional
	GroupingType terra.StringValue `hcl:"grouping_type,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OpsCenterEnabled: bool, optional
	OpsCenterEnabled terra.BoolValue `hcl:"ops_center_enabled,attr"`
	// OpsItemSnsTopicArn: string, optional
	OpsItemSnsTopicArn terra.StringValue `hcl:"ops_item_sns_topic_arn,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// DependsOn contains resources that ApplicationinsightsApplication depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type applicationinsightsApplicationAttributes struct {
	ref terra.Reference
}

func (aa applicationinsightsApplicationAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("arn"))
}

func (aa applicationinsightsApplicationAttributes) AutoConfigEnabled() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("auto_config_enabled"))
}

func (aa applicationinsightsApplicationAttributes) AutoCreate() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("auto_create"))
}

func (aa applicationinsightsApplicationAttributes) CweMonitorEnabled() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("cwe_monitor_enabled"))
}

func (aa applicationinsightsApplicationAttributes) GroupingType() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("grouping_type"))
}

func (aa applicationinsightsApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("id"))
}

func (aa applicationinsightsApplicationAttributes) OpsCenterEnabled() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("ops_center_enabled"))
}

func (aa applicationinsightsApplicationAttributes) OpsItemSnsTopicArn() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("ops_item_sns_topic_arn"))
}

func (aa applicationinsightsApplicationAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("resource_group_name"))
}

func (aa applicationinsightsApplicationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aa.ref.Append("tags"))
}

func (aa applicationinsightsApplicationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aa.ref.Append("tags_all"))
}

type applicationinsightsApplicationState struct {
	Arn                string            `json:"arn"`
	AutoConfigEnabled  bool              `json:"auto_config_enabled"`
	AutoCreate         bool              `json:"auto_create"`
	CweMonitorEnabled  bool              `json:"cwe_monitor_enabled"`
	GroupingType       string            `json:"grouping_type"`
	Id                 string            `json:"id"`
	OpsCenterEnabled   bool              `json:"ops_center_enabled"`
	OpsItemSnsTopicArn string            `json:"ops_item_sns_topic_arn"`
	ResourceGroupName  string            `json:"resource_group_name"`
	Tags               map[string]string `json:"tags"`
	TagsAll            map[string]string `json:"tags_all"`
}
