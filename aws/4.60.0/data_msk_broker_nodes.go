// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datamskbrokernodes "github.com/golingon/terraproviders/aws/4.60.0/datamskbrokernodes"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMskBrokerNodes(name string, args DataMskBrokerNodesArgs) *DataMskBrokerNodes {
	return &DataMskBrokerNodes{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMskBrokerNodes)(nil)

type DataMskBrokerNodes struct {
	Name string
	Args DataMskBrokerNodesArgs
}

func (mbn *DataMskBrokerNodes) DataSource() string {
	return "aws_msk_broker_nodes"
}

func (mbn *DataMskBrokerNodes) LocalName() string {
	return mbn.Name
}

func (mbn *DataMskBrokerNodes) Configuration() interface{} {
	return mbn.Args
}

func (mbn *DataMskBrokerNodes) Attributes() dataMskBrokerNodesAttributes {
	return dataMskBrokerNodesAttributes{ref: terra.ReferenceDataResource(mbn)}
}

type DataMskBrokerNodesArgs struct {
	// ClusterArn: string, required
	ClusterArn terra.StringValue `hcl:"cluster_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NodeInfoList: min=0
	NodeInfoList []datamskbrokernodes.NodeInfoList `hcl:"node_info_list,block" validate:"min=0"`
}
type dataMskBrokerNodesAttributes struct {
	ref terra.Reference
}

func (mbn dataMskBrokerNodesAttributes) ClusterArn() terra.StringValue {
	return terra.ReferenceString(mbn.ref.Append("cluster_arn"))
}

func (mbn dataMskBrokerNodesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mbn.ref.Append("id"))
}

func (mbn dataMskBrokerNodesAttributes) NodeInfoList() terra.ListValue[datamskbrokernodes.NodeInfoListAttributes] {
	return terra.ReferenceList[datamskbrokernodes.NodeInfoListAttributes](mbn.ref.Append("node_info_list"))
}
