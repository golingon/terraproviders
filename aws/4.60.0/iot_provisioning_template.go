// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	iotprovisioningtemplate "github.com/golingon/terraproviders/aws/4.60.0/iotprovisioningtemplate"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotProvisioningTemplate(name string, args IotProvisioningTemplateArgs) *IotProvisioningTemplate {
	return &IotProvisioningTemplate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotProvisioningTemplate)(nil)

type IotProvisioningTemplate struct {
	Name  string
	Args  IotProvisioningTemplateArgs
	state *iotProvisioningTemplateState
}

func (ipt *IotProvisioningTemplate) Type() string {
	return "aws_iot_provisioning_template"
}

func (ipt *IotProvisioningTemplate) LocalName() string {
	return ipt.Name
}

func (ipt *IotProvisioningTemplate) Configuration() interface{} {
	return ipt.Args
}

func (ipt *IotProvisioningTemplate) Attributes() iotProvisioningTemplateAttributes {
	return iotProvisioningTemplateAttributes{ref: terra.ReferenceResource(ipt)}
}

func (ipt *IotProvisioningTemplate) ImportState(av io.Reader) error {
	ipt.state = &iotProvisioningTemplateState{}
	if err := json.NewDecoder(av).Decode(ipt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ipt.Type(), ipt.LocalName(), err)
	}
	return nil
}

func (ipt *IotProvisioningTemplate) State() (*iotProvisioningTemplateState, bool) {
	return ipt.state, ipt.state != nil
}

func (ipt *IotProvisioningTemplate) StateMust() *iotProvisioningTemplateState {
	if ipt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ipt.Type(), ipt.LocalName()))
	}
	return ipt.state
}

func (ipt *IotProvisioningTemplate) DependOn() terra.Reference {
	return terra.ReferenceResource(ipt)
}

type IotProvisioningTemplateArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ProvisioningRoleArn: string, required
	ProvisioningRoleArn terra.StringValue `hcl:"provisioning_role_arn,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// TemplateBody: string, required
	TemplateBody terra.StringValue `hcl:"template_body,attr" validate:"required"`
	// PreProvisioningHook: optional
	PreProvisioningHook *iotprovisioningtemplate.PreProvisioningHook `hcl:"pre_provisioning_hook,block"`
	// DependsOn contains resources that IotProvisioningTemplate depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotProvisioningTemplateAttributes struct {
	ref terra.Reference
}

func (ipt iotProvisioningTemplateAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ipt.ref.Append("arn"))
}

func (ipt iotProvisioningTemplateAttributes) DefaultVersionId() terra.NumberValue {
	return terra.ReferenceNumber(ipt.ref.Append("default_version_id"))
}

func (ipt iotProvisioningTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ipt.ref.Append("description"))
}

func (ipt iotProvisioningTemplateAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(ipt.ref.Append("enabled"))
}

func (ipt iotProvisioningTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ipt.ref.Append("id"))
}

func (ipt iotProvisioningTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ipt.ref.Append("name"))
}

func (ipt iotProvisioningTemplateAttributes) ProvisioningRoleArn() terra.StringValue {
	return terra.ReferenceString(ipt.ref.Append("provisioning_role_arn"))
}

func (ipt iotProvisioningTemplateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ipt.ref.Append("tags"))
}

func (ipt iotProvisioningTemplateAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ipt.ref.Append("tags_all"))
}

func (ipt iotProvisioningTemplateAttributes) TemplateBody() terra.StringValue {
	return terra.ReferenceString(ipt.ref.Append("template_body"))
}

func (ipt iotProvisioningTemplateAttributes) PreProvisioningHook() terra.ListValue[iotprovisioningtemplate.PreProvisioningHookAttributes] {
	return terra.ReferenceList[iotprovisioningtemplate.PreProvisioningHookAttributes](ipt.ref.Append("pre_provisioning_hook"))
}

type iotProvisioningTemplateState struct {
	Arn                 string                                             `json:"arn"`
	DefaultVersionId    float64                                            `json:"default_version_id"`
	Description         string                                             `json:"description"`
	Enabled             bool                                               `json:"enabled"`
	Id                  string                                             `json:"id"`
	Name                string                                             `json:"name"`
	ProvisioningRoleArn string                                             `json:"provisioning_role_arn"`
	Tags                map[string]string                                  `json:"tags"`
	TagsAll             map[string]string                                  `json:"tags_all"`
	TemplateBody        string                                             `json:"template_body"`
	PreProvisioningHook []iotprovisioningtemplate.PreProvisioningHookState `json:"pre_provisioning_hook"`
}
