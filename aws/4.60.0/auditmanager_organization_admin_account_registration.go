// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAuditmanagerOrganizationAdminAccountRegistration(name string, args AuditmanagerOrganizationAdminAccountRegistrationArgs) *AuditmanagerOrganizationAdminAccountRegistration {
	return &AuditmanagerOrganizationAdminAccountRegistration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AuditmanagerOrganizationAdminAccountRegistration)(nil)

type AuditmanagerOrganizationAdminAccountRegistration struct {
	Name  string
	Args  AuditmanagerOrganizationAdminAccountRegistrationArgs
	state *auditmanagerOrganizationAdminAccountRegistrationState
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) Type() string {
	return "aws_auditmanager_organization_admin_account_registration"
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) LocalName() string {
	return aoaar.Name
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) Configuration() interface{} {
	return aoaar.Args
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) Attributes() auditmanagerOrganizationAdminAccountRegistrationAttributes {
	return auditmanagerOrganizationAdminAccountRegistrationAttributes{ref: terra.ReferenceResource(aoaar)}
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) ImportState(av io.Reader) error {
	aoaar.state = &auditmanagerOrganizationAdminAccountRegistrationState{}
	if err := json.NewDecoder(av).Decode(aoaar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aoaar.Type(), aoaar.LocalName(), err)
	}
	return nil
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) State() (*auditmanagerOrganizationAdminAccountRegistrationState, bool) {
	return aoaar.state, aoaar.state != nil
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) StateMust() *auditmanagerOrganizationAdminAccountRegistrationState {
	if aoaar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aoaar.Type(), aoaar.LocalName()))
	}
	return aoaar.state
}

func (aoaar *AuditmanagerOrganizationAdminAccountRegistration) DependOn() terra.Reference {
	return terra.ReferenceResource(aoaar)
}

type AuditmanagerOrganizationAdminAccountRegistrationArgs struct {
	// AdminAccountId: string, required
	AdminAccountId terra.StringValue `hcl:"admin_account_id,attr" validate:"required"`
	// DependsOn contains resources that AuditmanagerOrganizationAdminAccountRegistration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type auditmanagerOrganizationAdminAccountRegistrationAttributes struct {
	ref terra.Reference
}

func (aoaar auditmanagerOrganizationAdminAccountRegistrationAttributes) AdminAccountId() terra.StringValue {
	return terra.ReferenceString(aoaar.ref.Append("admin_account_id"))
}

func (aoaar auditmanagerOrganizationAdminAccountRegistrationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aoaar.ref.Append("id"))
}

func (aoaar auditmanagerOrganizationAdminAccountRegistrationAttributes) OrganizationId() terra.StringValue {
	return terra.ReferenceString(aoaar.ref.Append("organization_id"))
}

type auditmanagerOrganizationAdminAccountRegistrationState struct {
	AdminAccountId string `json:"admin_account_id"`
	Id             string `json:"id"`
	OrganizationId string `json:"organization_id"`
}
