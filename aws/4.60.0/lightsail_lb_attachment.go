// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailLbAttachment(name string, args LightsailLbAttachmentArgs) *LightsailLbAttachment {
	return &LightsailLbAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailLbAttachment)(nil)

type LightsailLbAttachment struct {
	Name  string
	Args  LightsailLbAttachmentArgs
	state *lightsailLbAttachmentState
}

func (lla *LightsailLbAttachment) Type() string {
	return "aws_lightsail_lb_attachment"
}

func (lla *LightsailLbAttachment) LocalName() string {
	return lla.Name
}

func (lla *LightsailLbAttachment) Configuration() interface{} {
	return lla.Args
}

func (lla *LightsailLbAttachment) Attributes() lightsailLbAttachmentAttributes {
	return lightsailLbAttachmentAttributes{ref: terra.ReferenceResource(lla)}
}

func (lla *LightsailLbAttachment) ImportState(av io.Reader) error {
	lla.state = &lightsailLbAttachmentState{}
	if err := json.NewDecoder(av).Decode(lla.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lla.Type(), lla.LocalName(), err)
	}
	return nil
}

func (lla *LightsailLbAttachment) State() (*lightsailLbAttachmentState, bool) {
	return lla.state, lla.state != nil
}

func (lla *LightsailLbAttachment) StateMust() *lightsailLbAttachmentState {
	if lla.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lla.Type(), lla.LocalName()))
	}
	return lla.state
}

func (lla *LightsailLbAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(lla)
}

type LightsailLbAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceName: string, required
	InstanceName terra.StringValue `hcl:"instance_name,attr" validate:"required"`
	// LbName: string, required
	LbName terra.StringValue `hcl:"lb_name,attr" validate:"required"`
	// DependsOn contains resources that LightsailLbAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailLbAttachmentAttributes struct {
	ref terra.Reference
}

func (lla lightsailLbAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lla.ref.Append("id"))
}

func (lla lightsailLbAttachmentAttributes) InstanceName() terra.StringValue {
	return terra.ReferenceString(lla.ref.Append("instance_name"))
}

func (lla lightsailLbAttachmentAttributes) LbName() terra.StringValue {
	return terra.ReferenceString(lla.ref.Append("lb_name"))
}

type lightsailLbAttachmentState struct {
	Id           string `json:"id"`
	InstanceName string `json:"instance_name"`
	LbName       string `json:"lb_name"`
}
