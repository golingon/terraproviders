// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataRoute53ResolverFirewallRuleGroupAssociation(name string, args DataRoute53ResolverFirewallRuleGroupAssociationArgs) *DataRoute53ResolverFirewallRuleGroupAssociation {
	return &DataRoute53ResolverFirewallRuleGroupAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRoute53ResolverFirewallRuleGroupAssociation)(nil)

type DataRoute53ResolverFirewallRuleGroupAssociation struct {
	Name string
	Args DataRoute53ResolverFirewallRuleGroupAssociationArgs
}

func (rrfrga *DataRoute53ResolverFirewallRuleGroupAssociation) DataSource() string {
	return "aws_route53_resolver_firewall_rule_group_association"
}

func (rrfrga *DataRoute53ResolverFirewallRuleGroupAssociation) LocalName() string {
	return rrfrga.Name
}

func (rrfrga *DataRoute53ResolverFirewallRuleGroupAssociation) Configuration() interface{} {
	return rrfrga.Args
}

func (rrfrga *DataRoute53ResolverFirewallRuleGroupAssociation) Attributes() dataRoute53ResolverFirewallRuleGroupAssociationAttributes {
	return dataRoute53ResolverFirewallRuleGroupAssociationAttributes{ref: terra.ReferenceDataResource(rrfrga)}
}

type DataRoute53ResolverFirewallRuleGroupAssociationArgs struct {
	// FirewallRuleGroupAssociationId: string, required
	FirewallRuleGroupAssociationId terra.StringValue `hcl:"firewall_rule_group_association_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}
type dataRoute53ResolverFirewallRuleGroupAssociationAttributes struct {
	ref terra.Reference
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("arn"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("creation_time"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) CreatorRequestId() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("creator_request_id"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) FirewallRuleGroupAssociationId() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("firewall_rule_group_association_id"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) FirewallRuleGroupId() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("firewall_rule_group_id"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("id"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) ManagedOwnerName() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("managed_owner_name"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) ModificationTime() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("modification_time"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) MutationProtection() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("mutation_protection"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("name"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) Priority() terra.NumberValue {
	return terra.ReferenceNumber(rrfrga.ref.Append("priority"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) Status() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("status"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) StatusMessage() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("status_message"))
}

func (rrfrga dataRoute53ResolverFirewallRuleGroupAssociationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(rrfrga.ref.Append("vpc_id"))
}
