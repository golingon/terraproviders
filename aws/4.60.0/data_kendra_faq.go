// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datakendrafaq "github.com/golingon/terraproviders/aws/4.60.0/datakendrafaq"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKendraFaq(name string, args DataKendraFaqArgs) *DataKendraFaq {
	return &DataKendraFaq{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKendraFaq)(nil)

type DataKendraFaq struct {
	Name string
	Args DataKendraFaqArgs
}

func (kf *DataKendraFaq) DataSource() string {
	return "aws_kendra_faq"
}

func (kf *DataKendraFaq) LocalName() string {
	return kf.Name
}

func (kf *DataKendraFaq) Configuration() interface{} {
	return kf.Args
}

func (kf *DataKendraFaq) Attributes() dataKendraFaqAttributes {
	return dataKendraFaqAttributes{ref: terra.ReferenceDataResource(kf)}
}

type DataKendraFaqArgs struct {
	// FaqId: string, required
	FaqId terra.StringValue `hcl:"faq_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IndexId: string, required
	IndexId terra.StringValue `hcl:"index_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// S3Path: min=0
	S3Path []datakendrafaq.S3Path `hcl:"s3_path,block" validate:"min=0"`
}
type dataKendraFaqAttributes struct {
	ref terra.Reference
}

func (kf dataKendraFaqAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("arn"))
}

func (kf dataKendraFaqAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("created_at"))
}

func (kf dataKendraFaqAttributes) Description() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("description"))
}

func (kf dataKendraFaqAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("error_message"))
}

func (kf dataKendraFaqAttributes) FaqId() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("faq_id"))
}

func (kf dataKendraFaqAttributes) FileFormat() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("file_format"))
}

func (kf dataKendraFaqAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("id"))
}

func (kf dataKendraFaqAttributes) IndexId() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("index_id"))
}

func (kf dataKendraFaqAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("language_code"))
}

func (kf dataKendraFaqAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("name"))
}

func (kf dataKendraFaqAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("role_arn"))
}

func (kf dataKendraFaqAttributes) Status() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("status"))
}

func (kf dataKendraFaqAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kf.ref.Append("tags"))
}

func (kf dataKendraFaqAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceString(kf.ref.Append("updated_at"))
}

func (kf dataKendraFaqAttributes) S3Path() terra.ListValue[datakendrafaq.S3PathAttributes] {
	return terra.ReferenceList[datakendrafaq.S3PathAttributes](kf.ref.Append("s3_path"))
}
