// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSagemakerServicecatalogPortfolioStatus(name string, args SagemakerServicecatalogPortfolioStatusArgs) *SagemakerServicecatalogPortfolioStatus {
	return &SagemakerServicecatalogPortfolioStatus{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SagemakerServicecatalogPortfolioStatus)(nil)

type SagemakerServicecatalogPortfolioStatus struct {
	Name  string
	Args  SagemakerServicecatalogPortfolioStatusArgs
	state *sagemakerServicecatalogPortfolioStatusState
}

func (ssps *SagemakerServicecatalogPortfolioStatus) Type() string {
	return "aws_sagemaker_servicecatalog_portfolio_status"
}

func (ssps *SagemakerServicecatalogPortfolioStatus) LocalName() string {
	return ssps.Name
}

func (ssps *SagemakerServicecatalogPortfolioStatus) Configuration() interface{} {
	return ssps.Args
}

func (ssps *SagemakerServicecatalogPortfolioStatus) Attributes() sagemakerServicecatalogPortfolioStatusAttributes {
	return sagemakerServicecatalogPortfolioStatusAttributes{ref: terra.ReferenceResource(ssps)}
}

func (ssps *SagemakerServicecatalogPortfolioStatus) ImportState(av io.Reader) error {
	ssps.state = &sagemakerServicecatalogPortfolioStatusState{}
	if err := json.NewDecoder(av).Decode(ssps.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssps.Type(), ssps.LocalName(), err)
	}
	return nil
}

func (ssps *SagemakerServicecatalogPortfolioStatus) State() (*sagemakerServicecatalogPortfolioStatusState, bool) {
	return ssps.state, ssps.state != nil
}

func (ssps *SagemakerServicecatalogPortfolioStatus) StateMust() *sagemakerServicecatalogPortfolioStatusState {
	if ssps.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssps.Type(), ssps.LocalName()))
	}
	return ssps.state
}

func (ssps *SagemakerServicecatalogPortfolioStatus) DependOn() terra.Reference {
	return terra.ReferenceResource(ssps)
}

type SagemakerServicecatalogPortfolioStatusArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Status: string, required
	Status terra.StringValue `hcl:"status,attr" validate:"required"`
	// DependsOn contains resources that SagemakerServicecatalogPortfolioStatus depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sagemakerServicecatalogPortfolioStatusAttributes struct {
	ref terra.Reference
}

func (ssps sagemakerServicecatalogPortfolioStatusAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ssps.ref.Append("id"))
}

func (ssps sagemakerServicecatalogPortfolioStatusAttributes) Status() terra.StringValue {
	return terra.ReferenceString(ssps.ref.Append("status"))
}

type sagemakerServicecatalogPortfolioStatusState struct {
	Id     string `json:"id"`
	Status string `json:"status"`
}
