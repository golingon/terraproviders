// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewKmsAlias creates a new instance of [KmsAlias].
func NewKmsAlias(name string, args KmsAliasArgs) *KmsAlias {
	return &KmsAlias{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KmsAlias)(nil)

// KmsAlias represents the Terraform resource aws_kms_alias.
type KmsAlias struct {
	Name      string
	Args      KmsAliasArgs
	state     *kmsAliasState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [KmsAlias].
func (ka *KmsAlias) Type() string {
	return "aws_kms_alias"
}

// LocalName returns the local name for [KmsAlias].
func (ka *KmsAlias) LocalName() string {
	return ka.Name
}

// Configuration returns the configuration (args) for [KmsAlias].
func (ka *KmsAlias) Configuration() interface{} {
	return ka.Args
}

// DependOn is used for other resources to depend on [KmsAlias].
func (ka *KmsAlias) DependOn() terra.Reference {
	return terra.ReferenceResource(ka)
}

// Dependencies returns the list of resources [KmsAlias] depends_on.
func (ka *KmsAlias) Dependencies() terra.Dependencies {
	return ka.DependsOn
}

// LifecycleManagement returns the lifecycle block for [KmsAlias].
func (ka *KmsAlias) LifecycleManagement() *terra.Lifecycle {
	return ka.Lifecycle
}

// Attributes returns the attributes for [KmsAlias].
func (ka *KmsAlias) Attributes() kmsAliasAttributes {
	return kmsAliasAttributes{ref: terra.ReferenceResource(ka)}
}

// ImportState imports the given attribute values into [KmsAlias]'s state.
func (ka *KmsAlias) ImportState(av io.Reader) error {
	ka.state = &kmsAliasState{}
	if err := json.NewDecoder(av).Decode(ka.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ka.Type(), ka.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [KmsAlias] has state.
func (ka *KmsAlias) State() (*kmsAliasState, bool) {
	return ka.state, ka.state != nil
}

// StateMust returns the state for [KmsAlias]. Panics if the state is nil.
func (ka *KmsAlias) StateMust() *kmsAliasState {
	if ka.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ka.Type(), ka.LocalName()))
	}
	return ka.state
}

// KmsAliasArgs contains the configurations for aws_kms_alias.
type KmsAliasArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// TargetKeyId: string, required
	TargetKeyId terra.StringValue `hcl:"target_key_id,attr" validate:"required"`
}
type kmsAliasAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_kms_alias.
func (ka kmsAliasAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ka.ref.Append("arn"))
}

// Id returns a reference to field id of aws_kms_alias.
func (ka kmsAliasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ka.ref.Append("id"))
}

// Name returns a reference to field name of aws_kms_alias.
func (ka kmsAliasAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ka.ref.Append("name"))
}

// NamePrefix returns a reference to field name_prefix of aws_kms_alias.
func (ka kmsAliasAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(ka.ref.Append("name_prefix"))
}

// TargetKeyArn returns a reference to field target_key_arn of aws_kms_alias.
func (ka kmsAliasAttributes) TargetKeyArn() terra.StringValue {
	return terra.ReferenceAsString(ka.ref.Append("target_key_arn"))
}

// TargetKeyId returns a reference to field target_key_id of aws_kms_alias.
func (ka kmsAliasAttributes) TargetKeyId() terra.StringValue {
	return terra.ReferenceAsString(ka.ref.Append("target_key_id"))
}

type kmsAliasState struct {
	Arn          string `json:"arn"`
	Id           string `json:"id"`
	Name         string `json:"name"`
	NamePrefix   string `json:"name_prefix"`
	TargetKeyArn string `json:"target_key_arn"`
	TargetKeyId  string `json:"target_key_id"`
}
