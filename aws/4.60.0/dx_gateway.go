// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	dxgateway "github.com/golingon/terraproviders/aws/4.60.0/dxgateway"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDxGateway(name string, args DxGatewayArgs) *DxGateway {
	return &DxGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DxGateway)(nil)

type DxGateway struct {
	Name  string
	Args  DxGatewayArgs
	state *dxGatewayState
}

func (dg *DxGateway) Type() string {
	return "aws_dx_gateway"
}

func (dg *DxGateway) LocalName() string {
	return dg.Name
}

func (dg *DxGateway) Configuration() interface{} {
	return dg.Args
}

func (dg *DxGateway) Attributes() dxGatewayAttributes {
	return dxGatewayAttributes{ref: terra.ReferenceResource(dg)}
}

func (dg *DxGateway) ImportState(av io.Reader) error {
	dg.state = &dxGatewayState{}
	if err := json.NewDecoder(av).Decode(dg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dg.Type(), dg.LocalName(), err)
	}
	return nil
}

func (dg *DxGateway) State() (*dxGatewayState, bool) {
	return dg.state, dg.state != nil
}

func (dg *DxGateway) StateMust() *dxGatewayState {
	if dg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dg.Type(), dg.LocalName()))
	}
	return dg.state
}

func (dg *DxGateway) DependOn() terra.Reference {
	return terra.ReferenceResource(dg)
}

type DxGatewayArgs struct {
	// AmazonSideAsn: string, required
	AmazonSideAsn terra.StringValue `hcl:"amazon_side_asn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dxgateway.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DxGateway depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dxGatewayAttributes struct {
	ref terra.Reference
}

func (dg dxGatewayAttributes) AmazonSideAsn() terra.StringValue {
	return terra.ReferenceString(dg.ref.Append("amazon_side_asn"))
}

func (dg dxGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dg.ref.Append("id"))
}

func (dg dxGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dg.ref.Append("name"))
}

func (dg dxGatewayAttributes) OwnerAccountId() terra.StringValue {
	return terra.ReferenceString(dg.ref.Append("owner_account_id"))
}

func (dg dxGatewayAttributes) Timeouts() dxgateway.TimeoutsAttributes {
	return terra.ReferenceSingle[dxgateway.TimeoutsAttributes](dg.ref.Append("timeouts"))
}

type dxGatewayState struct {
	AmazonSideAsn  string                   `json:"amazon_side_asn"`
	Id             string                   `json:"id"`
	Name           string                   `json:"name"`
	OwnerAccountId string                   `json:"owner_account_id"`
	Timeouts       *dxgateway.TimeoutsState `json:"timeouts"`
}
