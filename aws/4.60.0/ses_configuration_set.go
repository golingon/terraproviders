// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	sesconfigurationset "github.com/golingon/terraproviders/aws/4.60.0/sesconfigurationset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSesConfigurationSet(name string, args SesConfigurationSetArgs) *SesConfigurationSet {
	return &SesConfigurationSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SesConfigurationSet)(nil)

type SesConfigurationSet struct {
	Name  string
	Args  SesConfigurationSetArgs
	state *sesConfigurationSetState
}

func (scs *SesConfigurationSet) Type() string {
	return "aws_ses_configuration_set"
}

func (scs *SesConfigurationSet) LocalName() string {
	return scs.Name
}

func (scs *SesConfigurationSet) Configuration() interface{} {
	return scs.Args
}

func (scs *SesConfigurationSet) Attributes() sesConfigurationSetAttributes {
	return sesConfigurationSetAttributes{ref: terra.ReferenceResource(scs)}
}

func (scs *SesConfigurationSet) ImportState(av io.Reader) error {
	scs.state = &sesConfigurationSetState{}
	if err := json.NewDecoder(av).Decode(scs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", scs.Type(), scs.LocalName(), err)
	}
	return nil
}

func (scs *SesConfigurationSet) State() (*sesConfigurationSetState, bool) {
	return scs.state, scs.state != nil
}

func (scs *SesConfigurationSet) StateMust() *sesConfigurationSetState {
	if scs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", scs.Type(), scs.LocalName()))
	}
	return scs.state
}

func (scs *SesConfigurationSet) DependOn() terra.Reference {
	return terra.ReferenceResource(scs)
}

type SesConfigurationSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ReputationMetricsEnabled: bool, optional
	ReputationMetricsEnabled terra.BoolValue `hcl:"reputation_metrics_enabled,attr"`
	// SendingEnabled: bool, optional
	SendingEnabled terra.BoolValue `hcl:"sending_enabled,attr"`
	// DeliveryOptions: optional
	DeliveryOptions *sesconfigurationset.DeliveryOptions `hcl:"delivery_options,block"`
	// TrackingOptions: optional
	TrackingOptions *sesconfigurationset.TrackingOptions `hcl:"tracking_options,block"`
	// DependsOn contains resources that SesConfigurationSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sesConfigurationSetAttributes struct {
	ref terra.Reference
}

func (scs sesConfigurationSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(scs.ref.Append("arn"))
}

func (scs sesConfigurationSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(scs.ref.Append("id"))
}

func (scs sesConfigurationSetAttributes) LastFreshStart() terra.StringValue {
	return terra.ReferenceString(scs.ref.Append("last_fresh_start"))
}

func (scs sesConfigurationSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(scs.ref.Append("name"))
}

func (scs sesConfigurationSetAttributes) ReputationMetricsEnabled() terra.BoolValue {
	return terra.ReferenceBool(scs.ref.Append("reputation_metrics_enabled"))
}

func (scs sesConfigurationSetAttributes) SendingEnabled() terra.BoolValue {
	return terra.ReferenceBool(scs.ref.Append("sending_enabled"))
}

func (scs sesConfigurationSetAttributes) DeliveryOptions() terra.ListValue[sesconfigurationset.DeliveryOptionsAttributes] {
	return terra.ReferenceList[sesconfigurationset.DeliveryOptionsAttributes](scs.ref.Append("delivery_options"))
}

func (scs sesConfigurationSetAttributes) TrackingOptions() terra.ListValue[sesconfigurationset.TrackingOptionsAttributes] {
	return terra.ReferenceList[sesconfigurationset.TrackingOptionsAttributes](scs.ref.Append("tracking_options"))
}

type sesConfigurationSetState struct {
	Arn                      string                                     `json:"arn"`
	Id                       string                                     `json:"id"`
	LastFreshStart           string                                     `json:"last_fresh_start"`
	Name                     string                                     `json:"name"`
	ReputationMetricsEnabled bool                                       `json:"reputation_metrics_enabled"`
	SendingEnabled           bool                                       `json:"sending_enabled"`
	DeliveryOptions          []sesconfigurationset.DeliveryOptionsState `json:"delivery_options"`
	TrackingOptions          []sesconfigurationset.TrackingOptionsState `json:"tracking_options"`
}
