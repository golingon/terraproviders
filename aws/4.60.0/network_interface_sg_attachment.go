// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewNetworkInterfaceSgAttachment(name string, args NetworkInterfaceSgAttachmentArgs) *NetworkInterfaceSgAttachment {
	return &NetworkInterfaceSgAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkInterfaceSgAttachment)(nil)

type NetworkInterfaceSgAttachment struct {
	Name  string
	Args  NetworkInterfaceSgAttachmentArgs
	state *networkInterfaceSgAttachmentState
}

func (nisa *NetworkInterfaceSgAttachment) Type() string {
	return "aws_network_interface_sg_attachment"
}

func (nisa *NetworkInterfaceSgAttachment) LocalName() string {
	return nisa.Name
}

func (nisa *NetworkInterfaceSgAttachment) Configuration() interface{} {
	return nisa.Args
}

func (nisa *NetworkInterfaceSgAttachment) Attributes() networkInterfaceSgAttachmentAttributes {
	return networkInterfaceSgAttachmentAttributes{ref: terra.ReferenceResource(nisa)}
}

func (nisa *NetworkInterfaceSgAttachment) ImportState(av io.Reader) error {
	nisa.state = &networkInterfaceSgAttachmentState{}
	if err := json.NewDecoder(av).Decode(nisa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nisa.Type(), nisa.LocalName(), err)
	}
	return nil
}

func (nisa *NetworkInterfaceSgAttachment) State() (*networkInterfaceSgAttachmentState, bool) {
	return nisa.state, nisa.state != nil
}

func (nisa *NetworkInterfaceSgAttachment) StateMust() *networkInterfaceSgAttachmentState {
	if nisa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nisa.Type(), nisa.LocalName()))
	}
	return nisa.state
}

func (nisa *NetworkInterfaceSgAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(nisa)
}

type NetworkInterfaceSgAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NetworkInterfaceId: string, required
	NetworkInterfaceId terra.StringValue `hcl:"network_interface_id,attr" validate:"required"`
	// SecurityGroupId: string, required
	SecurityGroupId terra.StringValue `hcl:"security_group_id,attr" validate:"required"`
	// DependsOn contains resources that NetworkInterfaceSgAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type networkInterfaceSgAttachmentAttributes struct {
	ref terra.Reference
}

func (nisa networkInterfaceSgAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(nisa.ref.Append("id"))
}

func (nisa networkInterfaceSgAttachmentAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceString(nisa.ref.Append("network_interface_id"))
}

func (nisa networkInterfaceSgAttachmentAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceString(nisa.ref.Append("security_group_id"))
}

type networkInterfaceSgAttachmentState struct {
	Id                 string `json:"id"`
	NetworkInterfaceId string `json:"network_interface_id"`
	SecurityGroupId    string `json:"security_group_id"`
}
