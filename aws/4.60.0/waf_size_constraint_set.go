// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	wafsizeconstraintset "github.com/golingon/terraproviders/aws/4.60.0/wafsizeconstraintset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWafSizeConstraintSet(name string, args WafSizeConstraintSetArgs) *WafSizeConstraintSet {
	return &WafSizeConstraintSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WafSizeConstraintSet)(nil)

type WafSizeConstraintSet struct {
	Name  string
	Args  WafSizeConstraintSetArgs
	state *wafSizeConstraintSetState
}

func (wscs *WafSizeConstraintSet) Type() string {
	return "aws_waf_size_constraint_set"
}

func (wscs *WafSizeConstraintSet) LocalName() string {
	return wscs.Name
}

func (wscs *WafSizeConstraintSet) Configuration() interface{} {
	return wscs.Args
}

func (wscs *WafSizeConstraintSet) Attributes() wafSizeConstraintSetAttributes {
	return wafSizeConstraintSetAttributes{ref: terra.ReferenceResource(wscs)}
}

func (wscs *WafSizeConstraintSet) ImportState(av io.Reader) error {
	wscs.state = &wafSizeConstraintSetState{}
	if err := json.NewDecoder(av).Decode(wscs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wscs.Type(), wscs.LocalName(), err)
	}
	return nil
}

func (wscs *WafSizeConstraintSet) State() (*wafSizeConstraintSetState, bool) {
	return wscs.state, wscs.state != nil
}

func (wscs *WafSizeConstraintSet) StateMust() *wafSizeConstraintSetState {
	if wscs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wscs.Type(), wscs.LocalName()))
	}
	return wscs.state
}

func (wscs *WafSizeConstraintSet) DependOn() terra.Reference {
	return terra.ReferenceResource(wscs)
}

type WafSizeConstraintSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SizeConstraints: min=0
	SizeConstraints []wafsizeconstraintset.SizeConstraints `hcl:"size_constraints,block" validate:"min=0"`
	// DependsOn contains resources that WafSizeConstraintSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type wafSizeConstraintSetAttributes struct {
	ref terra.Reference
}

func (wscs wafSizeConstraintSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(wscs.ref.Append("arn"))
}

func (wscs wafSizeConstraintSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wscs.ref.Append("id"))
}

func (wscs wafSizeConstraintSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wscs.ref.Append("name"))
}

func (wscs wafSizeConstraintSetAttributes) SizeConstraints() terra.SetValue[wafsizeconstraintset.SizeConstraintsAttributes] {
	return terra.ReferenceSet[wafsizeconstraintset.SizeConstraintsAttributes](wscs.ref.Append("size_constraints"))
}

type wafSizeConstraintSetState struct {
	Arn             string                                      `json:"arn"`
	Id              string                                      `json:"id"`
	Name            string                                      `json:"name"`
	SizeConstraints []wafsizeconstraintset.SizeConstraintsState `json:"size_constraints"`
}
