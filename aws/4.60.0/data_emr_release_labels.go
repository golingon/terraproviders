// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataemrreleaselabels "github.com/golingon/terraproviders/aws/4.60.0/dataemrreleaselabels"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEmrReleaseLabels(name string, args DataEmrReleaseLabelsArgs) *DataEmrReleaseLabels {
	return &DataEmrReleaseLabels{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEmrReleaseLabels)(nil)

type DataEmrReleaseLabels struct {
	Name string
	Args DataEmrReleaseLabelsArgs
}

func (erl *DataEmrReleaseLabels) DataSource() string {
	return "aws_emr_release_labels"
}

func (erl *DataEmrReleaseLabels) LocalName() string {
	return erl.Name
}

func (erl *DataEmrReleaseLabels) Configuration() interface{} {
	return erl.Args
}

func (erl *DataEmrReleaseLabels) Attributes() dataEmrReleaseLabelsAttributes {
	return dataEmrReleaseLabelsAttributes{ref: terra.ReferenceDataResource(erl)}
}

type DataEmrReleaseLabelsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filters: optional
	Filters *dataemrreleaselabels.Filters `hcl:"filters,block"`
}
type dataEmrReleaseLabelsAttributes struct {
	ref terra.Reference
}

func (erl dataEmrReleaseLabelsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(erl.ref.Append("id"))
}

func (erl dataEmrReleaseLabelsAttributes) ReleaseLabels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](erl.ref.Append("release_labels"))
}

func (erl dataEmrReleaseLabelsAttributes) Filters() terra.ListValue[dataemrreleaselabels.FiltersAttributes] {
	return terra.ReferenceList[dataemrreleaselabels.FiltersAttributes](erl.ref.Append("filters"))
}
