// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datassminstances "github.com/golingon/terraproviders/aws/4.60.0/datassminstances"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataSsmInstances(name string, args DataSsmInstancesArgs) *DataSsmInstances {
	return &DataSsmInstances{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSsmInstances)(nil)

type DataSsmInstances struct {
	Name string
	Args DataSsmInstancesArgs
}

func (si *DataSsmInstances) DataSource() string {
	return "aws_ssm_instances"
}

func (si *DataSsmInstances) LocalName() string {
	return si.Name
}

func (si *DataSsmInstances) Configuration() interface{} {
	return si.Args
}

func (si *DataSsmInstances) Attributes() dataSsmInstancesAttributes {
	return dataSsmInstancesAttributes{ref: terra.ReferenceDataResource(si)}
}

type DataSsmInstancesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filter: min=0
	Filter []datassminstances.Filter `hcl:"filter,block" validate:"min=0"`
}
type dataSsmInstancesAttributes struct {
	ref terra.Reference
}

func (si dataSsmInstancesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(si.ref.Append("id"))
}

func (si dataSsmInstancesAttributes) Ids() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](si.ref.Append("ids"))
}

func (si dataSsmInstancesAttributes) Filter() terra.SetValue[datassminstances.FilterAttributes] {
	return terra.ReferenceSet[datassminstances.FilterAttributes](si.ref.Append("filter"))
}
