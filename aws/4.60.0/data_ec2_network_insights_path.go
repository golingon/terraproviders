// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2networkinsightspath "github.com/golingon/terraproviders/aws/4.60.0/dataec2networkinsightspath"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEc2NetworkInsightsPath(name string, args DataEc2NetworkInsightsPathArgs) *DataEc2NetworkInsightsPath {
	return &DataEc2NetworkInsightsPath{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2NetworkInsightsPath)(nil)

type DataEc2NetworkInsightsPath struct {
	Name string
	Args DataEc2NetworkInsightsPathArgs
}

func (enip *DataEc2NetworkInsightsPath) DataSource() string {
	return "aws_ec2_network_insights_path"
}

func (enip *DataEc2NetworkInsightsPath) LocalName() string {
	return enip.Name
}

func (enip *DataEc2NetworkInsightsPath) Configuration() interface{} {
	return enip.Args
}

func (enip *DataEc2NetworkInsightsPath) Attributes() dataEc2NetworkInsightsPathAttributes {
	return dataEc2NetworkInsightsPathAttributes{ref: terra.ReferenceDataResource(enip)}
}

type DataEc2NetworkInsightsPathArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NetworkInsightsPathId: string, optional
	NetworkInsightsPathId terra.StringValue `hcl:"network_insights_path_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataec2networkinsightspath.Filter `hcl:"filter,block" validate:"min=0"`
}
type dataEc2NetworkInsightsPathAttributes struct {
	ref terra.Reference
}

func (enip dataEc2NetworkInsightsPathAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("arn"))
}

func (enip dataEc2NetworkInsightsPathAttributes) Destination() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("destination"))
}

func (enip dataEc2NetworkInsightsPathAttributes) DestinationIp() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("destination_ip"))
}

func (enip dataEc2NetworkInsightsPathAttributes) DestinationPort() terra.NumberValue {
	return terra.ReferenceNumber(enip.ref.Append("destination_port"))
}

func (enip dataEc2NetworkInsightsPathAttributes) Id() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("id"))
}

func (enip dataEc2NetworkInsightsPathAttributes) NetworkInsightsPathId() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("network_insights_path_id"))
}

func (enip dataEc2NetworkInsightsPathAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("protocol"))
}

func (enip dataEc2NetworkInsightsPathAttributes) Source() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("source"))
}

func (enip dataEc2NetworkInsightsPathAttributes) SourceIp() terra.StringValue {
	return terra.ReferenceString(enip.ref.Append("source_ip"))
}

func (enip dataEc2NetworkInsightsPathAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](enip.ref.Append("tags"))
}

func (enip dataEc2NetworkInsightsPathAttributes) Filter() terra.SetValue[dataec2networkinsightspath.FilterAttributes] {
	return terra.ReferenceSet[dataec2networkinsightspath.FilterAttributes](enip.ref.Append("filter"))
}
