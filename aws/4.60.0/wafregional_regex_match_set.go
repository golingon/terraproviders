// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	wafregionalregexmatchset "github.com/golingon/terraproviders/aws/4.60.0/wafregionalregexmatchset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWafregionalRegexMatchSet(name string, args WafregionalRegexMatchSetArgs) *WafregionalRegexMatchSet {
	return &WafregionalRegexMatchSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WafregionalRegexMatchSet)(nil)

type WafregionalRegexMatchSet struct {
	Name  string
	Args  WafregionalRegexMatchSetArgs
	state *wafregionalRegexMatchSetState
}

func (wrms *WafregionalRegexMatchSet) Type() string {
	return "aws_wafregional_regex_match_set"
}

func (wrms *WafregionalRegexMatchSet) LocalName() string {
	return wrms.Name
}

func (wrms *WafregionalRegexMatchSet) Configuration() interface{} {
	return wrms.Args
}

func (wrms *WafregionalRegexMatchSet) Attributes() wafregionalRegexMatchSetAttributes {
	return wafregionalRegexMatchSetAttributes{ref: terra.ReferenceResource(wrms)}
}

func (wrms *WafregionalRegexMatchSet) ImportState(av io.Reader) error {
	wrms.state = &wafregionalRegexMatchSetState{}
	if err := json.NewDecoder(av).Decode(wrms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wrms.Type(), wrms.LocalName(), err)
	}
	return nil
}

func (wrms *WafregionalRegexMatchSet) State() (*wafregionalRegexMatchSetState, bool) {
	return wrms.state, wrms.state != nil
}

func (wrms *WafregionalRegexMatchSet) StateMust() *wafregionalRegexMatchSetState {
	if wrms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wrms.Type(), wrms.LocalName()))
	}
	return wrms.state
}

func (wrms *WafregionalRegexMatchSet) DependOn() terra.Reference {
	return terra.ReferenceResource(wrms)
}

type WafregionalRegexMatchSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RegexMatchTuple: min=0
	RegexMatchTuple []wafregionalregexmatchset.RegexMatchTuple `hcl:"regex_match_tuple,block" validate:"min=0"`
	// DependsOn contains resources that WafregionalRegexMatchSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type wafregionalRegexMatchSetAttributes struct {
	ref terra.Reference
}

func (wrms wafregionalRegexMatchSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wrms.ref.Append("id"))
}

func (wrms wafregionalRegexMatchSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wrms.ref.Append("name"))
}

func (wrms wafregionalRegexMatchSetAttributes) RegexMatchTuple() terra.SetValue[wafregionalregexmatchset.RegexMatchTupleAttributes] {
	return terra.ReferenceSet[wafregionalregexmatchset.RegexMatchTupleAttributes](wrms.ref.Append("regex_match_tuple"))
}

type wafregionalRegexMatchSetState struct {
	Id              string                                          `json:"id"`
	Name            string                                          `json:"name"`
	RegexMatchTuple []wafregionalregexmatchset.RegexMatchTupleState `json:"regex_match_tuple"`
}
