// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailDomain(name string, args LightsailDomainArgs) *LightsailDomain {
	return &LightsailDomain{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailDomain)(nil)

type LightsailDomain struct {
	Name  string
	Args  LightsailDomainArgs
	state *lightsailDomainState
}

func (ld *LightsailDomain) Type() string {
	return "aws_lightsail_domain"
}

func (ld *LightsailDomain) LocalName() string {
	return ld.Name
}

func (ld *LightsailDomain) Configuration() interface{} {
	return ld.Args
}

func (ld *LightsailDomain) Attributes() lightsailDomainAttributes {
	return lightsailDomainAttributes{ref: terra.ReferenceResource(ld)}
}

func (ld *LightsailDomain) ImportState(av io.Reader) error {
	ld.state = &lightsailDomainState{}
	if err := json.NewDecoder(av).Decode(ld.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ld.Type(), ld.LocalName(), err)
	}
	return nil
}

func (ld *LightsailDomain) State() (*lightsailDomainState, bool) {
	return ld.state, ld.state != nil
}

func (ld *LightsailDomain) StateMust() *lightsailDomainState {
	if ld.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ld.Type(), ld.LocalName()))
	}
	return ld.state
}

func (ld *LightsailDomain) DependOn() terra.Reference {
	return terra.ReferenceResource(ld)
}

type LightsailDomainArgs struct {
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that LightsailDomain depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailDomainAttributes struct {
	ref terra.Reference
}

func (ld lightsailDomainAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("arn"))
}

func (ld lightsailDomainAttributes) DomainName() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("domain_name"))
}

func (ld lightsailDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("id"))
}

type lightsailDomainState struct {
	Arn        string `json:"arn"`
	DomainName string `json:"domain_name"`
	Id         string `json:"id"`
}
