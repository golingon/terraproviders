// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	macie2classificationexportconfiguration "github.com/golingon/terraproviders/aws/4.60.0/macie2classificationexportconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewMacie2ClassificationExportConfiguration(name string, args Macie2ClassificationExportConfigurationArgs) *Macie2ClassificationExportConfiguration {
	return &Macie2ClassificationExportConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Macie2ClassificationExportConfiguration)(nil)

type Macie2ClassificationExportConfiguration struct {
	Name  string
	Args  Macie2ClassificationExportConfigurationArgs
	state *macie2ClassificationExportConfigurationState
}

func (mcec *Macie2ClassificationExportConfiguration) Type() string {
	return "aws_macie2_classification_export_configuration"
}

func (mcec *Macie2ClassificationExportConfiguration) LocalName() string {
	return mcec.Name
}

func (mcec *Macie2ClassificationExportConfiguration) Configuration() interface{} {
	return mcec.Args
}

func (mcec *Macie2ClassificationExportConfiguration) Attributes() macie2ClassificationExportConfigurationAttributes {
	return macie2ClassificationExportConfigurationAttributes{ref: terra.ReferenceResource(mcec)}
}

func (mcec *Macie2ClassificationExportConfiguration) ImportState(av io.Reader) error {
	mcec.state = &macie2ClassificationExportConfigurationState{}
	if err := json.NewDecoder(av).Decode(mcec.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mcec.Type(), mcec.LocalName(), err)
	}
	return nil
}

func (mcec *Macie2ClassificationExportConfiguration) State() (*macie2ClassificationExportConfigurationState, bool) {
	return mcec.state, mcec.state != nil
}

func (mcec *Macie2ClassificationExportConfiguration) StateMust() *macie2ClassificationExportConfigurationState {
	if mcec.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mcec.Type(), mcec.LocalName()))
	}
	return mcec.state
}

func (mcec *Macie2ClassificationExportConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(mcec)
}

type Macie2ClassificationExportConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// S3Destination: optional
	S3Destination *macie2classificationexportconfiguration.S3Destination `hcl:"s3_destination,block"`
	// DependsOn contains resources that Macie2ClassificationExportConfiguration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type macie2ClassificationExportConfigurationAttributes struct {
	ref terra.Reference
}

func (mcec macie2ClassificationExportConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mcec.ref.Append("id"))
}

func (mcec macie2ClassificationExportConfigurationAttributes) S3Destination() terra.ListValue[macie2classificationexportconfiguration.S3DestinationAttributes] {
	return terra.ReferenceList[macie2classificationexportconfiguration.S3DestinationAttributes](mcec.ref.Append("s3_destination"))
}

type macie2ClassificationExportConfigurationState struct {
	Id            string                                                       `json:"id"`
	S3Destination []macie2classificationexportconfiguration.S3DestinationState `json:"s3_destination"`
}
