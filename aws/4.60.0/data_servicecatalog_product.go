// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataservicecatalogproduct "github.com/golingon/terraproviders/aws/4.60.0/dataservicecatalogproduct"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicecatalogProduct(name string, args DataServicecatalogProductArgs) *DataServicecatalogProduct {
	return &DataServicecatalogProduct{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicecatalogProduct)(nil)

type DataServicecatalogProduct struct {
	Name string
	Args DataServicecatalogProductArgs
}

func (sp *DataServicecatalogProduct) DataSource() string {
	return "aws_servicecatalog_product"
}

func (sp *DataServicecatalogProduct) LocalName() string {
	return sp.Name
}

func (sp *DataServicecatalogProduct) Configuration() interface{} {
	return sp.Args
}

func (sp *DataServicecatalogProduct) Attributes() dataServicecatalogProductAttributes {
	return dataServicecatalogProductAttributes{ref: terra.ReferenceDataResource(sp)}
}

type DataServicecatalogProductArgs struct {
	// AcceptLanguage: string, optional
	AcceptLanguage terra.StringValue `hcl:"accept_language,attr"`
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *dataservicecatalogproduct.Timeouts `hcl:"timeouts,block"`
}
type dataServicecatalogProductAttributes struct {
	ref terra.Reference
}

func (sp dataServicecatalogProductAttributes) AcceptLanguage() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("accept_language"))
}

func (sp dataServicecatalogProductAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("arn"))
}

func (sp dataServicecatalogProductAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("created_time"))
}

func (sp dataServicecatalogProductAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("description"))
}

func (sp dataServicecatalogProductAttributes) Distributor() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("distributor"))
}

func (sp dataServicecatalogProductAttributes) HasDefaultPath() terra.BoolValue {
	return terra.ReferenceBool(sp.ref.Append("has_default_path"))
}

func (sp dataServicecatalogProductAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("id"))
}

func (sp dataServicecatalogProductAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("name"))
}

func (sp dataServicecatalogProductAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("owner"))
}

func (sp dataServicecatalogProductAttributes) Status() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("status"))
}

func (sp dataServicecatalogProductAttributes) SupportDescription() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("support_description"))
}

func (sp dataServicecatalogProductAttributes) SupportEmail() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("support_email"))
}

func (sp dataServicecatalogProductAttributes) SupportUrl() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("support_url"))
}

func (sp dataServicecatalogProductAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sp.ref.Append("tags"))
}

func (sp dataServicecatalogProductAttributes) Type() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("type"))
}

func (sp dataServicecatalogProductAttributes) Timeouts() dataservicecatalogproduct.TimeoutsAttributes {
	return terra.ReferenceSingle[dataservicecatalogproduct.TimeoutsAttributes](sp.ref.Append("timeouts"))
}
