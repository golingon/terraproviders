// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	sesdomainidentityverification "github.com/golingon/terraproviders/aws/4.60.0/sesdomainidentityverification"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSesDomainIdentityVerification(name string, args SesDomainIdentityVerificationArgs) *SesDomainIdentityVerification {
	return &SesDomainIdentityVerification{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SesDomainIdentityVerification)(nil)

type SesDomainIdentityVerification struct {
	Name  string
	Args  SesDomainIdentityVerificationArgs
	state *sesDomainIdentityVerificationState
}

func (sdiv *SesDomainIdentityVerification) Type() string {
	return "aws_ses_domain_identity_verification"
}

func (sdiv *SesDomainIdentityVerification) LocalName() string {
	return sdiv.Name
}

func (sdiv *SesDomainIdentityVerification) Configuration() interface{} {
	return sdiv.Args
}

func (sdiv *SesDomainIdentityVerification) Attributes() sesDomainIdentityVerificationAttributes {
	return sesDomainIdentityVerificationAttributes{ref: terra.ReferenceResource(sdiv)}
}

func (sdiv *SesDomainIdentityVerification) ImportState(av io.Reader) error {
	sdiv.state = &sesDomainIdentityVerificationState{}
	if err := json.NewDecoder(av).Decode(sdiv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdiv.Type(), sdiv.LocalName(), err)
	}
	return nil
}

func (sdiv *SesDomainIdentityVerification) State() (*sesDomainIdentityVerificationState, bool) {
	return sdiv.state, sdiv.state != nil
}

func (sdiv *SesDomainIdentityVerification) StateMust() *sesDomainIdentityVerificationState {
	if sdiv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdiv.Type(), sdiv.LocalName()))
	}
	return sdiv.state
}

func (sdiv *SesDomainIdentityVerification) DependOn() terra.Reference {
	return terra.ReferenceResource(sdiv)
}

type SesDomainIdentityVerificationArgs struct {
	// Domain: string, required
	Domain terra.StringValue `hcl:"domain,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *sesdomainidentityverification.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SesDomainIdentityVerification depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sesDomainIdentityVerificationAttributes struct {
	ref terra.Reference
}

func (sdiv sesDomainIdentityVerificationAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(sdiv.ref.Append("arn"))
}

func (sdiv sesDomainIdentityVerificationAttributes) Domain() terra.StringValue {
	return terra.ReferenceString(sdiv.ref.Append("domain"))
}

func (sdiv sesDomainIdentityVerificationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdiv.ref.Append("id"))
}

func (sdiv sesDomainIdentityVerificationAttributes) Timeouts() sesdomainidentityverification.TimeoutsAttributes {
	return terra.ReferenceSingle[sesdomainidentityverification.TimeoutsAttributes](sdiv.ref.Append("timeouts"))
}

type sesDomainIdentityVerificationState struct {
	Arn      string                                       `json:"arn"`
	Domain   string                                       `json:"domain"`
	Id       string                                       `json:"id"`
	Timeouts *sesdomainidentityverification.TimeoutsState `json:"timeouts"`
}
