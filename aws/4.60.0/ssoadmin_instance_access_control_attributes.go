// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	ssoadmininstanceaccesscontrolattributes "github.com/golingon/terraproviders/aws/4.60.0/ssoadmininstanceaccesscontrolattributes"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSsoadminInstanceAccessControlAttributes(name string, args SsoadminInstanceAccessControlAttributesArgs) *SsoadminInstanceAccessControlAttributes {
	return &SsoadminInstanceAccessControlAttributes{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsoadminInstanceAccessControlAttributes)(nil)

type SsoadminInstanceAccessControlAttributes struct {
	Name  string
	Args  SsoadminInstanceAccessControlAttributesArgs
	state *ssoadminInstanceAccessControlAttributesState
}

func (siaca *SsoadminInstanceAccessControlAttributes) Type() string {
	return "aws_ssoadmin_instance_access_control_attributes"
}

func (siaca *SsoadminInstanceAccessControlAttributes) LocalName() string {
	return siaca.Name
}

func (siaca *SsoadminInstanceAccessControlAttributes) Configuration() interface{} {
	return siaca.Args
}

func (siaca *SsoadminInstanceAccessControlAttributes) Attributes() ssoadminInstanceAccessControlAttributesAttributes {
	return ssoadminInstanceAccessControlAttributesAttributes{ref: terra.ReferenceResource(siaca)}
}

func (siaca *SsoadminInstanceAccessControlAttributes) ImportState(av io.Reader) error {
	siaca.state = &ssoadminInstanceAccessControlAttributesState{}
	if err := json.NewDecoder(av).Decode(siaca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", siaca.Type(), siaca.LocalName(), err)
	}
	return nil
}

func (siaca *SsoadminInstanceAccessControlAttributes) State() (*ssoadminInstanceAccessControlAttributesState, bool) {
	return siaca.state, siaca.state != nil
}

func (siaca *SsoadminInstanceAccessControlAttributes) StateMust() *ssoadminInstanceAccessControlAttributesState {
	if siaca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", siaca.Type(), siaca.LocalName()))
	}
	return siaca.state
}

func (siaca *SsoadminInstanceAccessControlAttributes) DependOn() terra.Reference {
	return terra.ReferenceResource(siaca)
}

type SsoadminInstanceAccessControlAttributesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// Attribute: min=1
	Attribute []ssoadmininstanceaccesscontrolattributes.Attribute `hcl:"attribute,block" validate:"min=1"`
	// DependsOn contains resources that SsoadminInstanceAccessControlAttributes depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ssoadminInstanceAccessControlAttributesAttributes struct {
	ref terra.Reference
}

func (siaca ssoadminInstanceAccessControlAttributesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(siaca.ref.Append("id"))
}

func (siaca ssoadminInstanceAccessControlAttributesAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceString(siaca.ref.Append("instance_arn"))
}

func (siaca ssoadminInstanceAccessControlAttributesAttributes) Status() terra.StringValue {
	return terra.ReferenceString(siaca.ref.Append("status"))
}

func (siaca ssoadminInstanceAccessControlAttributesAttributes) StatusReason() terra.StringValue {
	return terra.ReferenceString(siaca.ref.Append("status_reason"))
}

func (siaca ssoadminInstanceAccessControlAttributesAttributes) Attribute() terra.SetValue[ssoadmininstanceaccesscontrolattributes.AttributeAttributes] {
	return terra.ReferenceSet[ssoadmininstanceaccesscontrolattributes.AttributeAttributes](siaca.ref.Append("attribute"))
}

type ssoadminInstanceAccessControlAttributesState struct {
	Id           string                                                   `json:"id"`
	InstanceArn  string                                                   `json:"instance_arn"`
	Status       string                                                   `json:"status"`
	StatusReason string                                                   `json:"status_reason"`
	Attribute    []ssoadmininstanceaccesscontrolattributes.AttributeState `json:"attribute"`
}
