// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2transitgateway "github.com/golingon/terraproviders/aws/4.60.0/dataec2transitgateway"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEc2TransitGateway(name string, args DataEc2TransitGatewayArgs) *DataEc2TransitGateway {
	return &DataEc2TransitGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2TransitGateway)(nil)

type DataEc2TransitGateway struct {
	Name string
	Args DataEc2TransitGatewayArgs
}

func (etg *DataEc2TransitGateway) DataSource() string {
	return "aws_ec2_transit_gateway"
}

func (etg *DataEc2TransitGateway) LocalName() string {
	return etg.Name
}

func (etg *DataEc2TransitGateway) Configuration() interface{} {
	return etg.Args
}

func (etg *DataEc2TransitGateway) Attributes() dataEc2TransitGatewayAttributes {
	return dataEc2TransitGatewayAttributes{ref: terra.ReferenceDataResource(etg)}
}

type DataEc2TransitGatewayArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataec2transitgateway.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataec2transitgateway.Timeouts `hcl:"timeouts,block"`
}
type dataEc2TransitGatewayAttributes struct {
	ref terra.Reference
}

func (etg dataEc2TransitGatewayAttributes) AmazonSideAsn() terra.NumberValue {
	return terra.ReferenceNumber(etg.ref.Append("amazon_side_asn"))
}

func (etg dataEc2TransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("arn"))
}

func (etg dataEc2TransitGatewayAttributes) AssociationDefaultRouteTableId() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("association_default_route_table_id"))
}

func (etg dataEc2TransitGatewayAttributes) AutoAcceptSharedAttachments() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("auto_accept_shared_attachments"))
}

func (etg dataEc2TransitGatewayAttributes) DefaultRouteTableAssociation() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("default_route_table_association"))
}

func (etg dataEc2TransitGatewayAttributes) DefaultRouteTablePropagation() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("default_route_table_propagation"))
}

func (etg dataEc2TransitGatewayAttributes) Description() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("description"))
}

func (etg dataEc2TransitGatewayAttributes) DnsSupport() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("dns_support"))
}

func (etg dataEc2TransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("id"))
}

func (etg dataEc2TransitGatewayAttributes) MulticastSupport() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("multicast_support"))
}

func (etg dataEc2TransitGatewayAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("owner_id"))
}

func (etg dataEc2TransitGatewayAttributes) PropagationDefaultRouteTableId() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("propagation_default_route_table_id"))
}

func (etg dataEc2TransitGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](etg.ref.Append("tags"))
}

func (etg dataEc2TransitGatewayAttributes) TransitGatewayCidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](etg.ref.Append("transit_gateway_cidr_blocks"))
}

func (etg dataEc2TransitGatewayAttributes) VpnEcmpSupport() terra.StringValue {
	return terra.ReferenceString(etg.ref.Append("vpn_ecmp_support"))
}

func (etg dataEc2TransitGatewayAttributes) Filter() terra.SetValue[dataec2transitgateway.FilterAttributes] {
	return terra.ReferenceSet[dataec2transitgateway.FilterAttributes](etg.ref.Append("filter"))
}

func (etg dataEc2TransitGatewayAttributes) Timeouts() dataec2transitgateway.TimeoutsAttributes {
	return terra.ReferenceSingle[dataec2transitgateway.TimeoutsAttributes](etg.ref.Append("timeouts"))
}
