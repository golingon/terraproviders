// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	kendradatasource "github.com/golingon/terraproviders/aws/4.60.0/kendradatasource"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKendraDataSource(name string, args KendraDataSourceArgs) *KendraDataSource {
	return &KendraDataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KendraDataSource)(nil)

type KendraDataSource struct {
	Name  string
	Args  KendraDataSourceArgs
	state *kendraDataSourceState
}

func (kds *KendraDataSource) Type() string {
	return "aws_kendra_data_source"
}

func (kds *KendraDataSource) LocalName() string {
	return kds.Name
}

func (kds *KendraDataSource) Configuration() interface{} {
	return kds.Args
}

func (kds *KendraDataSource) Attributes() kendraDataSourceAttributes {
	return kendraDataSourceAttributes{ref: terra.ReferenceResource(kds)}
}

func (kds *KendraDataSource) ImportState(av io.Reader) error {
	kds.state = &kendraDataSourceState{}
	if err := json.NewDecoder(av).Decode(kds.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kds.Type(), kds.LocalName(), err)
	}
	return nil
}

func (kds *KendraDataSource) State() (*kendraDataSourceState, bool) {
	return kds.state, kds.state != nil
}

func (kds *KendraDataSource) StateMust() *kendraDataSourceState {
	if kds.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kds.Type(), kds.LocalName()))
	}
	return kds.state
}

func (kds *KendraDataSource) DependOn() terra.Reference {
	return terra.ReferenceResource(kds)
}

type KendraDataSourceArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IndexId: string, required
	IndexId terra.StringValue `hcl:"index_id,attr" validate:"required"`
	// LanguageCode: string, optional
	LanguageCode terra.StringValue `hcl:"language_code,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// Schedule: string, optional
	Schedule terra.StringValue `hcl:"schedule,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Configuration: optional
	Configuration *kendradatasource.Configuration `hcl:"configuration,block"`
	// CustomDocumentEnrichmentConfiguration: optional
	CustomDocumentEnrichmentConfiguration *kendradatasource.CustomDocumentEnrichmentConfiguration `hcl:"custom_document_enrichment_configuration,block"`
	// Timeouts: optional
	Timeouts *kendradatasource.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that KendraDataSource depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kendraDataSourceAttributes struct {
	ref terra.Reference
}

func (kds kendraDataSourceAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("arn"))
}

func (kds kendraDataSourceAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("created_at"))
}

func (kds kendraDataSourceAttributes) DataSourceId() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("data_source_id"))
}

func (kds kendraDataSourceAttributes) Description() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("description"))
}

func (kds kendraDataSourceAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("error_message"))
}

func (kds kendraDataSourceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("id"))
}

func (kds kendraDataSourceAttributes) IndexId() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("index_id"))
}

func (kds kendraDataSourceAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("language_code"))
}

func (kds kendraDataSourceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("name"))
}

func (kds kendraDataSourceAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("role_arn"))
}

func (kds kendraDataSourceAttributes) Schedule() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("schedule"))
}

func (kds kendraDataSourceAttributes) Status() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("status"))
}

func (kds kendraDataSourceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kds.ref.Append("tags"))
}

func (kds kendraDataSourceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kds.ref.Append("tags_all"))
}

func (kds kendraDataSourceAttributes) Type() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("type"))
}

func (kds kendraDataSourceAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceString(kds.ref.Append("updated_at"))
}

func (kds kendraDataSourceAttributes) Configuration() terra.ListValue[kendradatasource.ConfigurationAttributes] {
	return terra.ReferenceList[kendradatasource.ConfigurationAttributes](kds.ref.Append("configuration"))
}

func (kds kendraDataSourceAttributes) CustomDocumentEnrichmentConfiguration() terra.ListValue[kendradatasource.CustomDocumentEnrichmentConfigurationAttributes] {
	return terra.ReferenceList[kendradatasource.CustomDocumentEnrichmentConfigurationAttributes](kds.ref.Append("custom_document_enrichment_configuration"))
}

func (kds kendraDataSourceAttributes) Timeouts() kendradatasource.TimeoutsAttributes {
	return terra.ReferenceSingle[kendradatasource.TimeoutsAttributes](kds.ref.Append("timeouts"))
}

type kendraDataSourceState struct {
	Arn                                   string                                                        `json:"arn"`
	CreatedAt                             string                                                        `json:"created_at"`
	DataSourceId                          string                                                        `json:"data_source_id"`
	Description                           string                                                        `json:"description"`
	ErrorMessage                          string                                                        `json:"error_message"`
	Id                                    string                                                        `json:"id"`
	IndexId                               string                                                        `json:"index_id"`
	LanguageCode                          string                                                        `json:"language_code"`
	Name                                  string                                                        `json:"name"`
	RoleArn                               string                                                        `json:"role_arn"`
	Schedule                              string                                                        `json:"schedule"`
	Status                                string                                                        `json:"status"`
	Tags                                  map[string]string                                             `json:"tags"`
	TagsAll                               map[string]string                                             `json:"tags_all"`
	Type                                  string                                                        `json:"type"`
	UpdatedAt                             string                                                        `json:"updated_at"`
	Configuration                         []kendradatasource.ConfigurationState                         `json:"configuration"`
	CustomDocumentEnrichmentConfiguration []kendradatasource.CustomDocumentEnrichmentConfigurationState `json:"custom_document_enrichment_configuration"`
	Timeouts                              *kendradatasource.TimeoutsState                               `json:"timeouts"`
}
