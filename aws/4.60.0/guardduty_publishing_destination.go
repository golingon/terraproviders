// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewGuarddutyPublishingDestination(name string, args GuarddutyPublishingDestinationArgs) *GuarddutyPublishingDestination {
	return &GuarddutyPublishingDestination{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GuarddutyPublishingDestination)(nil)

type GuarddutyPublishingDestination struct {
	Name  string
	Args  GuarddutyPublishingDestinationArgs
	state *guarddutyPublishingDestinationState
}

func (gpd *GuarddutyPublishingDestination) Type() string {
	return "aws_guardduty_publishing_destination"
}

func (gpd *GuarddutyPublishingDestination) LocalName() string {
	return gpd.Name
}

func (gpd *GuarddutyPublishingDestination) Configuration() interface{} {
	return gpd.Args
}

func (gpd *GuarddutyPublishingDestination) Attributes() guarddutyPublishingDestinationAttributes {
	return guarddutyPublishingDestinationAttributes{ref: terra.ReferenceResource(gpd)}
}

func (gpd *GuarddutyPublishingDestination) ImportState(av io.Reader) error {
	gpd.state = &guarddutyPublishingDestinationState{}
	if err := json.NewDecoder(av).Decode(gpd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gpd.Type(), gpd.LocalName(), err)
	}
	return nil
}

func (gpd *GuarddutyPublishingDestination) State() (*guarddutyPublishingDestinationState, bool) {
	return gpd.state, gpd.state != nil
}

func (gpd *GuarddutyPublishingDestination) StateMust() *guarddutyPublishingDestinationState {
	if gpd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gpd.Type(), gpd.LocalName()))
	}
	return gpd.state
}

func (gpd *GuarddutyPublishingDestination) DependOn() terra.Reference {
	return terra.ReferenceResource(gpd)
}

type GuarddutyPublishingDestinationArgs struct {
	// DestinationArn: string, required
	DestinationArn terra.StringValue `hcl:"destination_arn,attr" validate:"required"`
	// DestinationType: string, optional
	DestinationType terra.StringValue `hcl:"destination_type,attr"`
	// DetectorId: string, required
	DetectorId terra.StringValue `hcl:"detector_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyArn: string, required
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr" validate:"required"`
	// DependsOn contains resources that GuarddutyPublishingDestination depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type guarddutyPublishingDestinationAttributes struct {
	ref terra.Reference
}

func (gpd guarddutyPublishingDestinationAttributes) DestinationArn() terra.StringValue {
	return terra.ReferenceString(gpd.ref.Append("destination_arn"))
}

func (gpd guarddutyPublishingDestinationAttributes) DestinationType() terra.StringValue {
	return terra.ReferenceString(gpd.ref.Append("destination_type"))
}

func (gpd guarddutyPublishingDestinationAttributes) DetectorId() terra.StringValue {
	return terra.ReferenceString(gpd.ref.Append("detector_id"))
}

func (gpd guarddutyPublishingDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(gpd.ref.Append("id"))
}

func (gpd guarddutyPublishingDestinationAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceString(gpd.ref.Append("kms_key_arn"))
}

type guarddutyPublishingDestinationState struct {
	DestinationArn  string `json:"destination_arn"`
	DestinationType string `json:"destination_type"`
	DetectorId      string `json:"detector_id"`
	Id              string `json:"id"`
	KmsKeyArn       string `json:"kms_key_arn"`
}
