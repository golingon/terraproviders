// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataramresourceshare "github.com/golingon/terraproviders/aws/4.60.0/dataramresourceshare"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataRamResourceShare(name string, args DataRamResourceShareArgs) *DataRamResourceShare {
	return &DataRamResourceShare{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRamResourceShare)(nil)

type DataRamResourceShare struct {
	Name string
	Args DataRamResourceShareArgs
}

func (rrs *DataRamResourceShare) DataSource() string {
	return "aws_ram_resource_share"
}

func (rrs *DataRamResourceShare) LocalName() string {
	return rrs.Name
}

func (rrs *DataRamResourceShare) Configuration() interface{} {
	return rrs.Args
}

func (rrs *DataRamResourceShare) Attributes() dataRamResourceShareAttributes {
	return dataRamResourceShareAttributes{ref: terra.ReferenceDataResource(rrs)}
}

type DataRamResourceShareArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceOwner: string, required
	ResourceOwner terra.StringValue `hcl:"resource_owner,attr" validate:"required"`
	// ResourceShareStatus: string, optional
	ResourceShareStatus terra.StringValue `hcl:"resource_share_status,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataramresourceshare.Filter `hcl:"filter,block" validate:"min=0"`
}
type dataRamResourceShareAttributes struct {
	ref terra.Reference
}

func (rrs dataRamResourceShareAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("arn"))
}

func (rrs dataRamResourceShareAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("id"))
}

func (rrs dataRamResourceShareAttributes) Name() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("name"))
}

func (rrs dataRamResourceShareAttributes) OwningAccountId() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("owning_account_id"))
}

func (rrs dataRamResourceShareAttributes) ResourceOwner() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("resource_owner"))
}

func (rrs dataRamResourceShareAttributes) ResourceShareStatus() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("resource_share_status"))
}

func (rrs dataRamResourceShareAttributes) Status() terra.StringValue {
	return terra.ReferenceString(rrs.ref.Append("status"))
}

func (rrs dataRamResourceShareAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](rrs.ref.Append("tags"))
}

func (rrs dataRamResourceShareAttributes) Filter() terra.SetValue[dataramresourceshare.FilterAttributes] {
	return terra.ReferenceSet[dataramresourceshare.FilterAttributes](rrs.ref.Append("filter"))
}
