// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package appstreamimagebuilder

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AccessEndpoint struct {
	// EndpointType: string, required
	EndpointType terra.StringValue `hcl:"endpoint_type,attr" validate:"required"`
	// VpceId: string, optional
	VpceId terra.StringValue `hcl:"vpce_id,attr"`
}

type DomainJoinInfo struct {
	// DirectoryName: string, optional
	DirectoryName terra.StringValue `hcl:"directory_name,attr"`
	// OrganizationalUnitDistinguishedName: string, optional
	OrganizationalUnitDistinguishedName terra.StringValue `hcl:"organizational_unit_distinguished_name,attr"`
}

type VpcConfig struct {
	// SecurityGroupIds: set of string, optional
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// SubnetIds: set of string, optional
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr"`
}

type AccessEndpointAttributes struct {
	ref terra.Reference
}

func (ae AccessEndpointAttributes) InternalRef() terra.Reference {
	return ae.ref
}

func (ae AccessEndpointAttributes) InternalWithRef(ref terra.Reference) AccessEndpointAttributes {
	return AccessEndpointAttributes{ref: ref}
}

func (ae AccessEndpointAttributes) InternalTokens() hclwrite.Tokens {
	return ae.ref.InternalTokens()
}

func (ae AccessEndpointAttributes) EndpointType() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("endpoint_type"))
}

func (ae AccessEndpointAttributes) VpceId() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("vpce_id"))
}

type DomainJoinInfoAttributes struct {
	ref terra.Reference
}

func (dji DomainJoinInfoAttributes) InternalRef() terra.Reference {
	return dji.ref
}

func (dji DomainJoinInfoAttributes) InternalWithRef(ref terra.Reference) DomainJoinInfoAttributes {
	return DomainJoinInfoAttributes{ref: ref}
}

func (dji DomainJoinInfoAttributes) InternalTokens() hclwrite.Tokens {
	return dji.ref.InternalTokens()
}

func (dji DomainJoinInfoAttributes) DirectoryName() terra.StringValue {
	return terra.ReferenceAsString(dji.ref.Append("directory_name"))
}

func (dji DomainJoinInfoAttributes) OrganizationalUnitDistinguishedName() terra.StringValue {
	return terra.ReferenceAsString(dji.ref.Append("organizational_unit_distinguished_name"))
}

type VpcConfigAttributes struct {
	ref terra.Reference
}

func (vc VpcConfigAttributes) InternalRef() terra.Reference {
	return vc.ref
}

func (vc VpcConfigAttributes) InternalWithRef(ref terra.Reference) VpcConfigAttributes {
	return VpcConfigAttributes{ref: ref}
}

func (vc VpcConfigAttributes) InternalTokens() hclwrite.Tokens {
	return vc.ref.InternalTokens()
}

func (vc VpcConfigAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc VpcConfigAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

type AccessEndpointState struct {
	EndpointType string `json:"endpoint_type"`
	VpceId       string `json:"vpce_id"`
}

type DomainJoinInfoState struct {
	DirectoryName                       string `json:"directory_name"`
	OrganizationalUnitDistinguishedName string `json:"organizational_unit_distinguished_name"`
}

type VpcConfigState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
}
