// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package rolesanywheretrustanchor

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Source struct {
	// SourceType: string, required
	SourceType terra.StringValue `hcl:"source_type,attr" validate:"required"`
	// SourceData: required
	SourceData *SourceData `hcl:"source_data,block" validate:"required"`
}

type SourceData struct {
	// AcmPcaArn: string, optional
	AcmPcaArn terra.StringValue `hcl:"acm_pca_arn,attr"`
	// X509CertificateData: string, optional
	X509CertificateData terra.StringValue `hcl:"x509_certificate_data,attr"`
}

type SourceAttributes struct {
	ref terra.Reference
}

func (s SourceAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s SourceAttributes) InternalWithRef(ref terra.Reference) SourceAttributes {
	return SourceAttributes{ref: ref}
}

func (s SourceAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s SourceAttributes) SourceType() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("source_type"))
}

func (s SourceAttributes) SourceData() terra.ListValue[SourceDataAttributes] {
	return terra.ReferenceList[SourceDataAttributes](s.ref.Append("source_data"))
}

type SourceDataAttributes struct {
	ref terra.Reference
}

func (sd SourceDataAttributes) InternalRef() terra.Reference {
	return sd.ref
}

func (sd SourceDataAttributes) InternalWithRef(ref terra.Reference) SourceDataAttributes {
	return SourceDataAttributes{ref: ref}
}

func (sd SourceDataAttributes) InternalTokens() hclwrite.Tokens {
	return sd.ref.InternalTokens()
}

func (sd SourceDataAttributes) AcmPcaArn() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("acm_pca_arn"))
}

func (sd SourceDataAttributes) X509CertificateData() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("x509_certificate_data"))
}

type SourceState struct {
	SourceType string            `json:"source_type"`
	SourceData []SourceDataState `json:"source_data"`
}

type SourceDataState struct {
	AcmPcaArn           string `json:"acm_pca_arn"`
	X509CertificateData string `json:"x509_certificate_data"`
}
