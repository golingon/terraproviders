// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package macies3bucketassociation

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ClassificationType struct {
	// Continuous: string, optional
	Continuous terra.StringValue `hcl:"continuous,attr"`
	// OneTime: string, optional
	OneTime terra.StringValue `hcl:"one_time,attr"`
}

type ClassificationTypeAttributes struct {
	ref terra.Reference
}

func (ct ClassificationTypeAttributes) InternalRef() (terra.Reference, error) {
	return ct.ref, nil
}

func (ct ClassificationTypeAttributes) InternalWithRef(ref terra.Reference) ClassificationTypeAttributes {
	return ClassificationTypeAttributes{ref: ref}
}

func (ct ClassificationTypeAttributes) InternalTokens() hclwrite.Tokens {
	return ct.ref.InternalTokens()
}

func (ct ClassificationTypeAttributes) Continuous() terra.StringValue {
	return terra.ReferenceAsString(ct.ref.Append("continuous"))
}

func (ct ClassificationTypeAttributes) OneTime() terra.StringValue {
	return terra.ReferenceAsString(ct.ref.Append("one_time"))
}

type ClassificationTypeState struct {
	Continuous string `json:"continuous"`
	OneTime    string `json:"one_time"`
}
