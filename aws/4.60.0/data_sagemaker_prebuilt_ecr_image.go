// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataSagemakerPrebuiltEcrImage(name string, args DataSagemakerPrebuiltEcrImageArgs) *DataSagemakerPrebuiltEcrImage {
	return &DataSagemakerPrebuiltEcrImage{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSagemakerPrebuiltEcrImage)(nil)

type DataSagemakerPrebuiltEcrImage struct {
	Name string
	Args DataSagemakerPrebuiltEcrImageArgs
}

func (spei *DataSagemakerPrebuiltEcrImage) DataSource() string {
	return "aws_sagemaker_prebuilt_ecr_image"
}

func (spei *DataSagemakerPrebuiltEcrImage) LocalName() string {
	return spei.Name
}

func (spei *DataSagemakerPrebuiltEcrImage) Configuration() interface{} {
	return spei.Args
}

func (spei *DataSagemakerPrebuiltEcrImage) Attributes() dataSagemakerPrebuiltEcrImageAttributes {
	return dataSagemakerPrebuiltEcrImageAttributes{ref: terra.ReferenceDataResource(spei)}
}

type DataSagemakerPrebuiltEcrImageArgs struct {
	// DnsSuffix: string, optional
	DnsSuffix terra.StringValue `hcl:"dns_suffix,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImageTag: string, optional
	ImageTag terra.StringValue `hcl:"image_tag,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// RepositoryName: string, required
	RepositoryName terra.StringValue `hcl:"repository_name,attr" validate:"required"`
}
type dataSagemakerPrebuiltEcrImageAttributes struct {
	ref terra.Reference
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) DnsSuffix() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("dns_suffix"))
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("id"))
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) ImageTag() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("image_tag"))
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) Region() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("region"))
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) RegistryId() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("registry_id"))
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) RegistryPath() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("registry_path"))
}

func (spei dataSagemakerPrebuiltEcrImageAttributes) RepositoryName() terra.StringValue {
	return terra.ReferenceString(spei.ref.Append("repository_name"))
}
