// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSecurityhubActionTarget(name string, args SecurityhubActionTargetArgs) *SecurityhubActionTarget {
	return &SecurityhubActionTarget{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityhubActionTarget)(nil)

type SecurityhubActionTarget struct {
	Name  string
	Args  SecurityhubActionTargetArgs
	state *securityhubActionTargetState
}

func (sat *SecurityhubActionTarget) Type() string {
	return "aws_securityhub_action_target"
}

func (sat *SecurityhubActionTarget) LocalName() string {
	return sat.Name
}

func (sat *SecurityhubActionTarget) Configuration() interface{} {
	return sat.Args
}

func (sat *SecurityhubActionTarget) Attributes() securityhubActionTargetAttributes {
	return securityhubActionTargetAttributes{ref: terra.ReferenceResource(sat)}
}

func (sat *SecurityhubActionTarget) ImportState(av io.Reader) error {
	sat.state = &securityhubActionTargetState{}
	if err := json.NewDecoder(av).Decode(sat.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sat.Type(), sat.LocalName(), err)
	}
	return nil
}

func (sat *SecurityhubActionTarget) State() (*securityhubActionTargetState, bool) {
	return sat.state, sat.state != nil
}

func (sat *SecurityhubActionTarget) StateMust() *securityhubActionTargetState {
	if sat.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sat.Type(), sat.LocalName()))
	}
	return sat.state
}

func (sat *SecurityhubActionTarget) DependOn() terra.Reference {
	return terra.ReferenceResource(sat)
}

type SecurityhubActionTargetArgs struct {
	// Description: string, required
	Description terra.StringValue `hcl:"description,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Identifier: string, required
	Identifier terra.StringValue `hcl:"identifier,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// DependsOn contains resources that SecurityhubActionTarget depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type securityhubActionTargetAttributes struct {
	ref terra.Reference
}

func (sat securityhubActionTargetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(sat.ref.Append("arn"))
}

func (sat securityhubActionTargetAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sat.ref.Append("description"))
}

func (sat securityhubActionTargetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sat.ref.Append("id"))
}

func (sat securityhubActionTargetAttributes) Identifier() terra.StringValue {
	return terra.ReferenceString(sat.ref.Append("identifier"))
}

func (sat securityhubActionTargetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sat.ref.Append("name"))
}

type securityhubActionTargetState struct {
	Arn         string `json:"arn"`
	Description string `json:"description"`
	Id          string `json:"id"`
	Identifier  string `json:"identifier"`
	Name        string `json:"name"`
}
