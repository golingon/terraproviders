// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewTransferSshKey(name string, args TransferSshKeyArgs) *TransferSshKey {
	return &TransferSshKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*TransferSshKey)(nil)

type TransferSshKey struct {
	Name  string
	Args  TransferSshKeyArgs
	state *transferSshKeyState
}

func (tsk *TransferSshKey) Type() string {
	return "aws_transfer_ssh_key"
}

func (tsk *TransferSshKey) LocalName() string {
	return tsk.Name
}

func (tsk *TransferSshKey) Configuration() interface{} {
	return tsk.Args
}

func (tsk *TransferSshKey) Attributes() transferSshKeyAttributes {
	return transferSshKeyAttributes{ref: terra.ReferenceResource(tsk)}
}

func (tsk *TransferSshKey) ImportState(av io.Reader) error {
	tsk.state = &transferSshKeyState{}
	if err := json.NewDecoder(av).Decode(tsk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", tsk.Type(), tsk.LocalName(), err)
	}
	return nil
}

func (tsk *TransferSshKey) State() (*transferSshKeyState, bool) {
	return tsk.state, tsk.state != nil
}

func (tsk *TransferSshKey) StateMust() *transferSshKeyState {
	if tsk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", tsk.Type(), tsk.LocalName()))
	}
	return tsk.state
}

func (tsk *TransferSshKey) DependOn() terra.Reference {
	return terra.ReferenceResource(tsk)
}

type TransferSshKeyArgs struct {
	// Body: string, required
	Body terra.StringValue `hcl:"body,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ServerId: string, required
	ServerId terra.StringValue `hcl:"server_id,attr" validate:"required"`
	// UserName: string, required
	UserName terra.StringValue `hcl:"user_name,attr" validate:"required"`
	// DependsOn contains resources that TransferSshKey depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type transferSshKeyAttributes struct {
	ref terra.Reference
}

func (tsk transferSshKeyAttributes) Body() terra.StringValue {
	return terra.ReferenceString(tsk.ref.Append("body"))
}

func (tsk transferSshKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(tsk.ref.Append("id"))
}

func (tsk transferSshKeyAttributes) ServerId() terra.StringValue {
	return terra.ReferenceString(tsk.ref.Append("server_id"))
}

func (tsk transferSshKeyAttributes) UserName() terra.StringValue {
	return terra.ReferenceString(tsk.ref.Append("user_name"))
}

type transferSshKeyState struct {
	Body     string `json:"body"`
	Id       string `json:"id"`
	ServerId string `json:"server_id"`
	UserName string `json:"user_name"`
}
