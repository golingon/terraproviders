// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datakendrathesaurus "github.com/golingon/terraproviders/aws/4.60.0/datakendrathesaurus"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKendraThesaurus(name string, args DataKendraThesaurusArgs) *DataKendraThesaurus {
	return &DataKendraThesaurus{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKendraThesaurus)(nil)

type DataKendraThesaurus struct {
	Name string
	Args DataKendraThesaurusArgs
}

func (kt *DataKendraThesaurus) DataSource() string {
	return "aws_kendra_thesaurus"
}

func (kt *DataKendraThesaurus) LocalName() string {
	return kt.Name
}

func (kt *DataKendraThesaurus) Configuration() interface{} {
	return kt.Args
}

func (kt *DataKendraThesaurus) Attributes() dataKendraThesaurusAttributes {
	return dataKendraThesaurusAttributes{ref: terra.ReferenceDataResource(kt)}
}

type DataKendraThesaurusArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IndexId: string, required
	IndexId terra.StringValue `hcl:"index_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ThesaurusId: string, required
	ThesaurusId terra.StringValue `hcl:"thesaurus_id,attr" validate:"required"`
	// SourceS3Path: min=0
	SourceS3Path []datakendrathesaurus.SourceS3Path `hcl:"source_s3_path,block" validate:"min=0"`
}
type dataKendraThesaurusAttributes struct {
	ref terra.Reference
}

func (kt dataKendraThesaurusAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("arn"))
}

func (kt dataKendraThesaurusAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("created_at"))
}

func (kt dataKendraThesaurusAttributes) Description() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("description"))
}

func (kt dataKendraThesaurusAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("error_message"))
}

func (kt dataKendraThesaurusAttributes) FileSizeBytes() terra.NumberValue {
	return terra.ReferenceNumber(kt.ref.Append("file_size_bytes"))
}

func (kt dataKendraThesaurusAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("id"))
}

func (kt dataKendraThesaurusAttributes) IndexId() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("index_id"))
}

func (kt dataKendraThesaurusAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("name"))
}

func (kt dataKendraThesaurusAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("role_arn"))
}

func (kt dataKendraThesaurusAttributes) Status() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("status"))
}

func (kt dataKendraThesaurusAttributes) SynonymRuleCount() terra.NumberValue {
	return terra.ReferenceNumber(kt.ref.Append("synonym_rule_count"))
}

func (kt dataKendraThesaurusAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kt.ref.Append("tags"))
}

func (kt dataKendraThesaurusAttributes) TermCount() terra.NumberValue {
	return terra.ReferenceNumber(kt.ref.Append("term_count"))
}

func (kt dataKendraThesaurusAttributes) ThesaurusId() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("thesaurus_id"))
}

func (kt dataKendraThesaurusAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceString(kt.ref.Append("updated_at"))
}

func (kt dataKendraThesaurusAttributes) SourceS3Path() terra.ListValue[datakendrathesaurus.SourceS3PathAttributes] {
	return terra.ReferenceList[datakendrathesaurus.SourceS3PathAttributes](kt.ref.Append("source_s3_path"))
}
