// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAuditmanagerAccountRegistration(name string, args AuditmanagerAccountRegistrationArgs) *AuditmanagerAccountRegistration {
	return &AuditmanagerAccountRegistration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AuditmanagerAccountRegistration)(nil)

type AuditmanagerAccountRegistration struct {
	Name  string
	Args  AuditmanagerAccountRegistrationArgs
	state *auditmanagerAccountRegistrationState
}

func (aar *AuditmanagerAccountRegistration) Type() string {
	return "aws_auditmanager_account_registration"
}

func (aar *AuditmanagerAccountRegistration) LocalName() string {
	return aar.Name
}

func (aar *AuditmanagerAccountRegistration) Configuration() interface{} {
	return aar.Args
}

func (aar *AuditmanagerAccountRegistration) Attributes() auditmanagerAccountRegistrationAttributes {
	return auditmanagerAccountRegistrationAttributes{ref: terra.ReferenceResource(aar)}
}

func (aar *AuditmanagerAccountRegistration) ImportState(av io.Reader) error {
	aar.state = &auditmanagerAccountRegistrationState{}
	if err := json.NewDecoder(av).Decode(aar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aar.Type(), aar.LocalName(), err)
	}
	return nil
}

func (aar *AuditmanagerAccountRegistration) State() (*auditmanagerAccountRegistrationState, bool) {
	return aar.state, aar.state != nil
}

func (aar *AuditmanagerAccountRegistration) StateMust() *auditmanagerAccountRegistrationState {
	if aar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aar.Type(), aar.LocalName()))
	}
	return aar.state
}

func (aar *AuditmanagerAccountRegistration) DependOn() terra.Reference {
	return terra.ReferenceResource(aar)
}

type AuditmanagerAccountRegistrationArgs struct {
	// DelegatedAdminAccount: string, optional
	DelegatedAdminAccount terra.StringValue `hcl:"delegated_admin_account,attr"`
	// DeregisterOnDestroy: bool, optional
	DeregisterOnDestroy terra.BoolValue `hcl:"deregister_on_destroy,attr"`
	// KmsKey: string, optional
	KmsKey terra.StringValue `hcl:"kms_key,attr"`
	// DependsOn contains resources that AuditmanagerAccountRegistration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type auditmanagerAccountRegistrationAttributes struct {
	ref terra.Reference
}

func (aar auditmanagerAccountRegistrationAttributes) DelegatedAdminAccount() terra.StringValue {
	return terra.ReferenceString(aar.ref.Append("delegated_admin_account"))
}

func (aar auditmanagerAccountRegistrationAttributes) DeregisterOnDestroy() terra.BoolValue {
	return terra.ReferenceBool(aar.ref.Append("deregister_on_destroy"))
}

func (aar auditmanagerAccountRegistrationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aar.ref.Append("id"))
}

func (aar auditmanagerAccountRegistrationAttributes) KmsKey() terra.StringValue {
	return terra.ReferenceString(aar.ref.Append("kms_key"))
}

func (aar auditmanagerAccountRegistrationAttributes) Status() terra.StringValue {
	return terra.ReferenceString(aar.ref.Append("status"))
}

type auditmanagerAccountRegistrationState struct {
	DelegatedAdminAccount string `json:"delegated_admin_account"`
	DeregisterOnDestroy   bool   `json:"deregister_on_destroy"`
	Id                    string `json:"id"`
	KmsKey                string `json:"kms_key"`
	Status                string `json:"status"`
}
