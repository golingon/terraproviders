// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package s3bucketlogging

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type TargetGrant struct {
	// Permission: string, required
	Permission terra.StringValue `hcl:"permission,attr" validate:"required"`
	// Grantee: required
	Grantee *Grantee `hcl:"grantee,block" validate:"required"`
}

type Grantee struct {
	// EmailAddress: string, optional
	EmailAddress terra.StringValue `hcl:"email_address,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Uri: string, optional
	Uri terra.StringValue `hcl:"uri,attr"`
}

type TargetGrantAttributes struct {
	ref terra.Reference
}

func (tg TargetGrantAttributes) InternalRef() terra.Reference {
	return tg.ref
}

func (tg TargetGrantAttributes) InternalWithRef(ref terra.Reference) TargetGrantAttributes {
	return TargetGrantAttributes{ref: ref}
}

func (tg TargetGrantAttributes) InternalTokens() hclwrite.Tokens {
	return tg.ref.InternalTokens()
}

func (tg TargetGrantAttributes) Permission() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("permission"))
}

func (tg TargetGrantAttributes) Grantee() terra.ListValue[GranteeAttributes] {
	return terra.ReferenceAsList[GranteeAttributes](tg.ref.Append("grantee"))
}

type GranteeAttributes struct {
	ref terra.Reference
}

func (g GranteeAttributes) InternalRef() terra.Reference {
	return g.ref
}

func (g GranteeAttributes) InternalWithRef(ref terra.Reference) GranteeAttributes {
	return GranteeAttributes{ref: ref}
}

func (g GranteeAttributes) InternalTokens() hclwrite.Tokens {
	return g.ref.InternalTokens()
}

func (g GranteeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("display_name"))
}

func (g GranteeAttributes) EmailAddress() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("email_address"))
}

func (g GranteeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("id"))
}

func (g GranteeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("type"))
}

func (g GranteeAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("uri"))
}

type TargetGrantState struct {
	Permission string         `json:"permission"`
	Grantee    []GranteeState `json:"grantee"`
}

type GranteeState struct {
	DisplayName  string `json:"display_name"`
	EmailAddress string `json:"email_address"`
	Id           string `json:"id"`
	Type         string `json:"type"`
	Uri          string `json:"uri"`
}
