// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataalbtargetgroup "github.com/golingon/terraproviders/aws/4.60.0/dataalbtargetgroup"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataAlbTargetGroup(name string, args DataAlbTargetGroupArgs) *DataAlbTargetGroup {
	return &DataAlbTargetGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAlbTargetGroup)(nil)

type DataAlbTargetGroup struct {
	Name string
	Args DataAlbTargetGroupArgs
}

func (atg *DataAlbTargetGroup) DataSource() string {
	return "aws_alb_target_group"
}

func (atg *DataAlbTargetGroup) LocalName() string {
	return atg.Name
}

func (atg *DataAlbTargetGroup) Configuration() interface{} {
	return atg.Args
}

func (atg *DataAlbTargetGroup) Attributes() dataAlbTargetGroupAttributes {
	return dataAlbTargetGroupAttributes{ref: terra.ReferenceDataResource(atg)}
}

type DataAlbTargetGroupArgs struct {
	// Arn: string, optional
	Arn terra.StringValue `hcl:"arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// HealthCheck: min=0
	HealthCheck []dataalbtargetgroup.HealthCheck `hcl:"health_check,block" validate:"min=0"`
	// Stickiness: min=0
	Stickiness []dataalbtargetgroup.Stickiness `hcl:"stickiness,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataalbtargetgroup.Timeouts `hcl:"timeouts,block"`
}
type dataAlbTargetGroupAttributes struct {
	ref terra.Reference
}

func (atg dataAlbTargetGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("arn"))
}

func (atg dataAlbTargetGroupAttributes) ArnSuffix() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("arn_suffix"))
}

func (atg dataAlbTargetGroupAttributes) ConnectionTermination() terra.BoolValue {
	return terra.ReferenceBool(atg.ref.Append("connection_termination"))
}

func (atg dataAlbTargetGroupAttributes) DeregistrationDelay() terra.NumberValue {
	return terra.ReferenceNumber(atg.ref.Append("deregistration_delay"))
}

func (atg dataAlbTargetGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("id"))
}

func (atg dataAlbTargetGroupAttributes) LambdaMultiValueHeadersEnabled() terra.BoolValue {
	return terra.ReferenceBool(atg.ref.Append("lambda_multi_value_headers_enabled"))
}

func (atg dataAlbTargetGroupAttributes) LoadBalancingAlgorithmType() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("load_balancing_algorithm_type"))
}

func (atg dataAlbTargetGroupAttributes) LoadBalancingCrossZoneEnabled() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("load_balancing_cross_zone_enabled"))
}

func (atg dataAlbTargetGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("name"))
}

func (atg dataAlbTargetGroupAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(atg.ref.Append("port"))
}

func (atg dataAlbTargetGroupAttributes) PreserveClientIp() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("preserve_client_ip"))
}

func (atg dataAlbTargetGroupAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("protocol"))
}

func (atg dataAlbTargetGroupAttributes) ProtocolVersion() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("protocol_version"))
}

func (atg dataAlbTargetGroupAttributes) ProxyProtocolV2() terra.BoolValue {
	return terra.ReferenceBool(atg.ref.Append("proxy_protocol_v2"))
}

func (atg dataAlbTargetGroupAttributes) SlowStart() terra.NumberValue {
	return terra.ReferenceNumber(atg.ref.Append("slow_start"))
}

func (atg dataAlbTargetGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](atg.ref.Append("tags"))
}

func (atg dataAlbTargetGroupAttributes) TargetType() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("target_type"))
}

func (atg dataAlbTargetGroupAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(atg.ref.Append("vpc_id"))
}

func (atg dataAlbTargetGroupAttributes) HealthCheck() terra.ListValue[dataalbtargetgroup.HealthCheckAttributes] {
	return terra.ReferenceList[dataalbtargetgroup.HealthCheckAttributes](atg.ref.Append("health_check"))
}

func (atg dataAlbTargetGroupAttributes) Stickiness() terra.ListValue[dataalbtargetgroup.StickinessAttributes] {
	return terra.ReferenceList[dataalbtargetgroup.StickinessAttributes](atg.ref.Append("stickiness"))
}

func (atg dataAlbTargetGroupAttributes) Timeouts() dataalbtargetgroup.TimeoutsAttributes {
	return terra.ReferenceSingle[dataalbtargetgroup.TimeoutsAttributes](atg.ref.Append("timeouts"))
}
