// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package mediapackagechannel

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type HlsIngest struct {
	// IngestEndpoints: min=0
	IngestEndpoints []IngestEndpoints `hcl:"ingest_endpoints,block" validate:"min=0"`
}

type IngestEndpoints struct{}

type HlsIngestAttributes struct {
	ref terra.Reference
}

func (hi HlsIngestAttributes) InternalRef() (terra.Reference, error) {
	return hi.ref, nil
}

func (hi HlsIngestAttributes) InternalWithRef(ref terra.Reference) HlsIngestAttributes {
	return HlsIngestAttributes{ref: ref}
}

func (hi HlsIngestAttributes) InternalTokens() hclwrite.Tokens {
	return hi.ref.InternalTokens()
}

func (hi HlsIngestAttributes) IngestEndpoints() terra.ListValue[IngestEndpointsAttributes] {
	return terra.ReferenceAsList[IngestEndpointsAttributes](hi.ref.Append("ingest_endpoints"))
}

type IngestEndpointsAttributes struct {
	ref terra.Reference
}

func (ie IngestEndpointsAttributes) InternalRef() (terra.Reference, error) {
	return ie.ref, nil
}

func (ie IngestEndpointsAttributes) InternalWithRef(ref terra.Reference) IngestEndpointsAttributes {
	return IngestEndpointsAttributes{ref: ref}
}

func (ie IngestEndpointsAttributes) InternalTokens() hclwrite.Tokens {
	return ie.ref.InternalTokens()
}

func (ie IngestEndpointsAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("password"))
}

func (ie IngestEndpointsAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("url"))
}

func (ie IngestEndpointsAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(ie.ref.Append("username"))
}

type HlsIngestState struct {
	IngestEndpoints []IngestEndpointsState `json:"ingest_endpoints"`
}

type IngestEndpointsState struct {
	Password string `json:"password"`
	Url      string `json:"url"`
	Username string `json:"username"`
}
