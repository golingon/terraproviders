// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataservicecatalogportfolio "github.com/golingon/terraproviders/aws/4.60.0/dataservicecatalogportfolio"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicecatalogPortfolio(name string, args DataServicecatalogPortfolioArgs) *DataServicecatalogPortfolio {
	return &DataServicecatalogPortfolio{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicecatalogPortfolio)(nil)

type DataServicecatalogPortfolio struct {
	Name string
	Args DataServicecatalogPortfolioArgs
}

func (sp *DataServicecatalogPortfolio) DataSource() string {
	return "aws_servicecatalog_portfolio"
}

func (sp *DataServicecatalogPortfolio) LocalName() string {
	return sp.Name
}

func (sp *DataServicecatalogPortfolio) Configuration() interface{} {
	return sp.Args
}

func (sp *DataServicecatalogPortfolio) Attributes() dataServicecatalogPortfolioAttributes {
	return dataServicecatalogPortfolioAttributes{ref: terra.ReferenceDataResource(sp)}
}

type DataServicecatalogPortfolioArgs struct {
	// AcceptLanguage: string, optional
	AcceptLanguage terra.StringValue `hcl:"accept_language,attr"`
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *dataservicecatalogportfolio.Timeouts `hcl:"timeouts,block"`
}
type dataServicecatalogPortfolioAttributes struct {
	ref terra.Reference
}

func (sp dataServicecatalogPortfolioAttributes) AcceptLanguage() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("accept_language"))
}

func (sp dataServicecatalogPortfolioAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("arn"))
}

func (sp dataServicecatalogPortfolioAttributes) CreatedTime() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("created_time"))
}

func (sp dataServicecatalogPortfolioAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("description"))
}

func (sp dataServicecatalogPortfolioAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("id"))
}

func (sp dataServicecatalogPortfolioAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("name"))
}

func (sp dataServicecatalogPortfolioAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("provider_name"))
}

func (sp dataServicecatalogPortfolioAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sp.ref.Append("tags"))
}

func (sp dataServicecatalogPortfolioAttributes) Timeouts() dataservicecatalogportfolio.TimeoutsAttributes {
	return terra.ReferenceSingle[dataservicecatalogportfolio.TimeoutsAttributes](sp.ref.Append("timeouts"))
}
