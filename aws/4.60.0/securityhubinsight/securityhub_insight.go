// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package securityhubinsight

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Filters struct {
	// AwsAccountId: min=0,max=20
	AwsAccountId []AwsAccountId `hcl:"aws_account_id,block" validate:"min=0,max=20"`
	// CompanyName: min=0,max=20
	CompanyName []CompanyName `hcl:"company_name,block" validate:"min=0,max=20"`
	// ComplianceStatus: min=0,max=20
	ComplianceStatus []ComplianceStatus `hcl:"compliance_status,block" validate:"min=0,max=20"`
	// Confidence: min=0,max=20
	Confidence []Confidence `hcl:"confidence,block" validate:"min=0,max=20"`
	// CreatedAt: min=0,max=20
	CreatedAt []CreatedAt `hcl:"created_at,block" validate:"min=0,max=20"`
	// Criticality: min=0,max=20
	Criticality []Criticality `hcl:"criticality,block" validate:"min=0,max=20"`
	// Description: min=0,max=20
	Description []Description `hcl:"description,block" validate:"min=0,max=20"`
	// FindingProviderFieldsConfidence: min=0,max=20
	FindingProviderFieldsConfidence []FindingProviderFieldsConfidence `hcl:"finding_provider_fields_confidence,block" validate:"min=0,max=20"`
	// FindingProviderFieldsCriticality: min=0,max=20
	FindingProviderFieldsCriticality []FindingProviderFieldsCriticality `hcl:"finding_provider_fields_criticality,block" validate:"min=0,max=20"`
	// FindingProviderFieldsRelatedFindingsId: min=0,max=20
	FindingProviderFieldsRelatedFindingsId []FindingProviderFieldsRelatedFindingsId `hcl:"finding_provider_fields_related_findings_id,block" validate:"min=0,max=20"`
	// FindingProviderFieldsRelatedFindingsProductArn: min=0,max=20
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArn `hcl:"finding_provider_fields_related_findings_product_arn,block" validate:"min=0,max=20"`
	// FindingProviderFieldsSeverityLabel: min=0,max=20
	FindingProviderFieldsSeverityLabel []FindingProviderFieldsSeverityLabel `hcl:"finding_provider_fields_severity_label,block" validate:"min=0,max=20"`
	// FindingProviderFieldsSeverityOriginal: min=0,max=20
	FindingProviderFieldsSeverityOriginal []FindingProviderFieldsSeverityOriginal `hcl:"finding_provider_fields_severity_original,block" validate:"min=0,max=20"`
	// FindingProviderFieldsTypes: min=0,max=20
	FindingProviderFieldsTypes []FindingProviderFieldsTypes `hcl:"finding_provider_fields_types,block" validate:"min=0,max=20"`
	// FirstObservedAt: min=0,max=20
	FirstObservedAt []FirstObservedAt `hcl:"first_observed_at,block" validate:"min=0,max=20"`
	// GeneratorId: min=0,max=20
	GeneratorId []GeneratorId `hcl:"generator_id,block" validate:"min=0,max=20"`
	// Id: min=0,max=20
	Id []Id `hcl:"id,block" validate:"min=0,max=20"`
	// Keyword: min=0,max=20
	Keyword []Keyword `hcl:"keyword,block" validate:"min=0,max=20"`
	// LastObservedAt: min=0,max=20
	LastObservedAt []LastObservedAt `hcl:"last_observed_at,block" validate:"min=0,max=20"`
	// MalwareName: min=0,max=20
	MalwareName []MalwareName `hcl:"malware_name,block" validate:"min=0,max=20"`
	// MalwarePath: min=0,max=20
	MalwarePath []MalwarePath `hcl:"malware_path,block" validate:"min=0,max=20"`
	// MalwareState: min=0,max=20
	MalwareState []MalwareState `hcl:"malware_state,block" validate:"min=0,max=20"`
	// MalwareType: min=0,max=20
	MalwareType []MalwareType `hcl:"malware_type,block" validate:"min=0,max=20"`
	// NetworkDestinationDomain: min=0,max=20
	NetworkDestinationDomain []NetworkDestinationDomain `hcl:"network_destination_domain,block" validate:"min=0,max=20"`
	// NetworkDestinationIpv4: min=0,max=20
	NetworkDestinationIpv4 []NetworkDestinationIpv4 `hcl:"network_destination_ipv4,block" validate:"min=0,max=20"`
	// NetworkDestinationIpv6: min=0,max=20
	NetworkDestinationIpv6 []NetworkDestinationIpv6 `hcl:"network_destination_ipv6,block" validate:"min=0,max=20"`
	// NetworkDestinationPort: min=0,max=20
	NetworkDestinationPort []NetworkDestinationPort `hcl:"network_destination_port,block" validate:"min=0,max=20"`
	// NetworkDirection: min=0,max=20
	NetworkDirection []NetworkDirection `hcl:"network_direction,block" validate:"min=0,max=20"`
	// NetworkProtocol: min=0,max=20
	NetworkProtocol []NetworkProtocol `hcl:"network_protocol,block" validate:"min=0,max=20"`
	// NetworkSourceDomain: min=0,max=20
	NetworkSourceDomain []NetworkSourceDomain `hcl:"network_source_domain,block" validate:"min=0,max=20"`
	// NetworkSourceIpv4: min=0,max=20
	NetworkSourceIpv4 []NetworkSourceIpv4 `hcl:"network_source_ipv4,block" validate:"min=0,max=20"`
	// NetworkSourceIpv6: min=0,max=20
	NetworkSourceIpv6 []NetworkSourceIpv6 `hcl:"network_source_ipv6,block" validate:"min=0,max=20"`
	// NetworkSourceMac: min=0,max=20
	NetworkSourceMac []NetworkSourceMac `hcl:"network_source_mac,block" validate:"min=0,max=20"`
	// NetworkSourcePort: min=0,max=20
	NetworkSourcePort []NetworkSourcePort `hcl:"network_source_port,block" validate:"min=0,max=20"`
	// NoteText: min=0,max=20
	NoteText []NoteText `hcl:"note_text,block" validate:"min=0,max=20"`
	// NoteUpdatedAt: min=0,max=20
	NoteUpdatedAt []NoteUpdatedAt `hcl:"note_updated_at,block" validate:"min=0,max=20"`
	// NoteUpdatedBy: min=0,max=20
	NoteUpdatedBy []NoteUpdatedBy `hcl:"note_updated_by,block" validate:"min=0,max=20"`
	// ProcessLaunchedAt: min=0,max=20
	ProcessLaunchedAt []ProcessLaunchedAt `hcl:"process_launched_at,block" validate:"min=0,max=20"`
	// ProcessName: min=0,max=20
	ProcessName []ProcessName `hcl:"process_name,block" validate:"min=0,max=20"`
	// ProcessParentPid: min=0,max=20
	ProcessParentPid []ProcessParentPid `hcl:"process_parent_pid,block" validate:"min=0,max=20"`
	// ProcessPath: min=0,max=20
	ProcessPath []ProcessPath `hcl:"process_path,block" validate:"min=0,max=20"`
	// ProcessPid: min=0,max=20
	ProcessPid []ProcessPid `hcl:"process_pid,block" validate:"min=0,max=20"`
	// ProcessTerminatedAt: min=0,max=20
	ProcessTerminatedAt []ProcessTerminatedAt `hcl:"process_terminated_at,block" validate:"min=0,max=20"`
	// ProductArn: min=0,max=20
	ProductArn []ProductArn `hcl:"product_arn,block" validate:"min=0,max=20"`
	// ProductFields: min=0,max=20
	ProductFields []ProductFields `hcl:"product_fields,block" validate:"min=0,max=20"`
	// ProductName: min=0,max=20
	ProductName []ProductName `hcl:"product_name,block" validate:"min=0,max=20"`
	// RecommendationText: min=0,max=20
	RecommendationText []RecommendationText `hcl:"recommendation_text,block" validate:"min=0,max=20"`
	// RecordState: min=0,max=20
	RecordState []RecordState `hcl:"record_state,block" validate:"min=0,max=20"`
	// RelatedFindingsId: min=0,max=20
	RelatedFindingsId []RelatedFindingsId `hcl:"related_findings_id,block" validate:"min=0,max=20"`
	// RelatedFindingsProductArn: min=0,max=20
	RelatedFindingsProductArn []RelatedFindingsProductArn `hcl:"related_findings_product_arn,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceIamInstanceProfileArn: min=0,max=20
	ResourceAwsEc2InstanceIamInstanceProfileArn []ResourceAwsEc2InstanceIamInstanceProfileArn `hcl:"resource_aws_ec2_instance_iam_instance_profile_arn,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceImageId: min=0,max=20
	ResourceAwsEc2InstanceImageId []ResourceAwsEc2InstanceImageId `hcl:"resource_aws_ec2_instance_image_id,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceIpv4Addresses: min=0,max=20
	ResourceAwsEc2InstanceIpv4Addresses []ResourceAwsEc2InstanceIpv4Addresses `hcl:"resource_aws_ec2_instance_ipv4_addresses,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceIpv6Addresses: min=0,max=20
	ResourceAwsEc2InstanceIpv6Addresses []ResourceAwsEc2InstanceIpv6Addresses `hcl:"resource_aws_ec2_instance_ipv6_addresses,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceKeyName: min=0,max=20
	ResourceAwsEc2InstanceKeyName []ResourceAwsEc2InstanceKeyName `hcl:"resource_aws_ec2_instance_key_name,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceLaunchedAt: min=0,max=20
	ResourceAwsEc2InstanceLaunchedAt []ResourceAwsEc2InstanceLaunchedAt `hcl:"resource_aws_ec2_instance_launched_at,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceSubnetId: min=0,max=20
	ResourceAwsEc2InstanceSubnetId []ResourceAwsEc2InstanceSubnetId `hcl:"resource_aws_ec2_instance_subnet_id,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceType: min=0,max=20
	ResourceAwsEc2InstanceType []ResourceAwsEc2InstanceType `hcl:"resource_aws_ec2_instance_type,block" validate:"min=0,max=20"`
	// ResourceAwsEc2InstanceVpcId: min=0,max=20
	ResourceAwsEc2InstanceVpcId []ResourceAwsEc2InstanceVpcId `hcl:"resource_aws_ec2_instance_vpc_id,block" validate:"min=0,max=20"`
	// ResourceAwsIamAccessKeyCreatedAt: min=0,max=20
	ResourceAwsIamAccessKeyCreatedAt []ResourceAwsIamAccessKeyCreatedAt `hcl:"resource_aws_iam_access_key_created_at,block" validate:"min=0,max=20"`
	// ResourceAwsIamAccessKeyStatus: min=0,max=20
	ResourceAwsIamAccessKeyStatus []ResourceAwsIamAccessKeyStatus `hcl:"resource_aws_iam_access_key_status,block" validate:"min=0,max=20"`
	// ResourceAwsIamAccessKeyUserName: min=0,max=20
	ResourceAwsIamAccessKeyUserName []ResourceAwsIamAccessKeyUserName `hcl:"resource_aws_iam_access_key_user_name,block" validate:"min=0,max=20"`
	// ResourceAwsS3BucketOwnerId: min=0,max=20
	ResourceAwsS3BucketOwnerId []ResourceAwsS3BucketOwnerId `hcl:"resource_aws_s3_bucket_owner_id,block" validate:"min=0,max=20"`
	// ResourceAwsS3BucketOwnerName: min=0,max=20
	ResourceAwsS3BucketOwnerName []ResourceAwsS3BucketOwnerName `hcl:"resource_aws_s3_bucket_owner_name,block" validate:"min=0,max=20"`
	// ResourceContainerImageId: min=0,max=20
	ResourceContainerImageId []ResourceContainerImageId `hcl:"resource_container_image_id,block" validate:"min=0,max=20"`
	// ResourceContainerImageName: min=0,max=20
	ResourceContainerImageName []ResourceContainerImageName `hcl:"resource_container_image_name,block" validate:"min=0,max=20"`
	// ResourceContainerLaunchedAt: min=0,max=20
	ResourceContainerLaunchedAt []ResourceContainerLaunchedAt `hcl:"resource_container_launched_at,block" validate:"min=0,max=20"`
	// ResourceContainerName: min=0,max=20
	ResourceContainerName []ResourceContainerName `hcl:"resource_container_name,block" validate:"min=0,max=20"`
	// ResourceDetailsOther: min=0,max=20
	ResourceDetailsOther []ResourceDetailsOther `hcl:"resource_details_other,block" validate:"min=0,max=20"`
	// ResourceId: min=0,max=20
	ResourceId []ResourceId `hcl:"resource_id,block" validate:"min=0,max=20"`
	// ResourcePartition: min=0,max=20
	ResourcePartition []ResourcePartition `hcl:"resource_partition,block" validate:"min=0,max=20"`
	// ResourceRegion: min=0,max=20
	ResourceRegion []ResourceRegion `hcl:"resource_region,block" validate:"min=0,max=20"`
	// ResourceTags: min=0,max=20
	ResourceTags []ResourceTags `hcl:"resource_tags,block" validate:"min=0,max=20"`
	// ResourceType: min=0,max=20
	ResourceType []ResourceType `hcl:"resource_type,block" validate:"min=0,max=20"`
	// SeverityLabel: min=0,max=20
	SeverityLabel []SeverityLabel `hcl:"severity_label,block" validate:"min=0,max=20"`
	// SourceUrl: min=0,max=20
	SourceUrl []SourceUrl `hcl:"source_url,block" validate:"min=0,max=20"`
	// ThreatIntelIndicatorCategory: min=0,max=20
	ThreatIntelIndicatorCategory []ThreatIntelIndicatorCategory `hcl:"threat_intel_indicator_category,block" validate:"min=0,max=20"`
	// ThreatIntelIndicatorLastObservedAt: min=0,max=20
	ThreatIntelIndicatorLastObservedAt []ThreatIntelIndicatorLastObservedAt `hcl:"threat_intel_indicator_last_observed_at,block" validate:"min=0,max=20"`
	// ThreatIntelIndicatorSource: min=0,max=20
	ThreatIntelIndicatorSource []ThreatIntelIndicatorSource `hcl:"threat_intel_indicator_source,block" validate:"min=0,max=20"`
	// ThreatIntelIndicatorSourceUrl: min=0,max=20
	ThreatIntelIndicatorSourceUrl []ThreatIntelIndicatorSourceUrl `hcl:"threat_intel_indicator_source_url,block" validate:"min=0,max=20"`
	// ThreatIntelIndicatorType: min=0,max=20
	ThreatIntelIndicatorType []ThreatIntelIndicatorType `hcl:"threat_intel_indicator_type,block" validate:"min=0,max=20"`
	// ThreatIntelIndicatorValue: min=0,max=20
	ThreatIntelIndicatorValue []ThreatIntelIndicatorValue `hcl:"threat_intel_indicator_value,block" validate:"min=0,max=20"`
	// Title: min=0,max=20
	Title []Title `hcl:"title,block" validate:"min=0,max=20"`
	// Type: min=0,max=20
	Type []Type `hcl:"type,block" validate:"min=0,max=20"`
	// UpdatedAt: min=0,max=20
	UpdatedAt []UpdatedAt `hcl:"updated_at,block" validate:"min=0,max=20"`
	// UserDefinedValues: min=0,max=20
	UserDefinedValues []UserDefinedValues `hcl:"user_defined_values,block" validate:"min=0,max=20"`
	// VerificationState: min=0,max=20
	VerificationState []VerificationState `hcl:"verification_state,block" validate:"min=0,max=20"`
	// WorkflowStatus: min=0,max=20
	WorkflowStatus []WorkflowStatus `hcl:"workflow_status,block" validate:"min=0,max=20"`
}

type AwsAccountId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CompanyName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ComplianceStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Confidence struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type CreatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// CreatedAtDateRange: optional
	DateRange *CreatedAtDateRange `hcl:"date_range,block"`
}

type CreatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type Criticality struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type Description struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FindingProviderFieldsConfidence struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FindingProviderFieldsCriticality struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FindingProviderFieldsRelatedFindingsId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FindingProviderFieldsRelatedFindingsProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FindingProviderFieldsSeverityLabel struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FindingProviderFieldsSeverityOriginal struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FindingProviderFieldsTypes struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FirstObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// FirstObservedAtDateRange: optional
	DateRange *FirstObservedAtDateRange `hcl:"date_range,block"`
}

type FirstObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type GeneratorId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Id struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Keyword struct {
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type LastObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// LastObservedAtDateRange: optional
	DateRange *LastObservedAtDateRange `hcl:"date_range,block"`
}

type LastObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type MalwareName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type MalwarePath struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type MalwareState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type MalwareType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NetworkDestinationDomain struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NetworkDestinationIpv4 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type NetworkDestinationIpv6 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type NetworkDestinationPort struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type NetworkDirection struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NetworkProtocol struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NetworkSourceDomain struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NetworkSourceIpv4 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type NetworkSourceIpv6 struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type NetworkSourceMac struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NetworkSourcePort struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type NoteText struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type NoteUpdatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// NoteUpdatedAtDateRange: optional
	DateRange *NoteUpdatedAtDateRange `hcl:"date_range,block"`
}

type NoteUpdatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type NoteUpdatedBy struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ProcessLaunchedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// ProcessLaunchedAtDateRange: optional
	DateRange *ProcessLaunchedAtDateRange `hcl:"date_range,block"`
}

type ProcessLaunchedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type ProcessName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ProcessParentPid struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type ProcessPath struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ProcessPid struct {
	// Eq: string, optional
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte: string, optional
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte: string, optional
	Lte terra.StringValue `hcl:"lte,attr"`
}

type ProcessTerminatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// ProcessTerminatedAtDateRange: optional
	DateRange *ProcessTerminatedAtDateRange `hcl:"date_range,block"`
}

type ProcessTerminatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type ProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ProductFields struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ProductName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RecommendationText struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RecordState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RelatedFindingsId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RelatedFindingsProductArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceIamInstanceProfileArn struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceImageId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceIpv4Addresses struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type ResourceAwsEc2InstanceIpv6Addresses struct {
	// Cidr: string, required
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type ResourceAwsEc2InstanceKeyName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceLaunchedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// ResourceAwsEc2InstanceLaunchedAtDateRange: optional
	DateRange *ResourceAwsEc2InstanceLaunchedAtDateRange `hcl:"date_range,block"`
}

type ResourceAwsEc2InstanceLaunchedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceSubnetId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsEc2InstanceVpcId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsIamAccessKeyCreatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// ResourceAwsIamAccessKeyCreatedAtDateRange: optional
	DateRange *ResourceAwsIamAccessKeyCreatedAtDateRange `hcl:"date_range,block"`
}

type ResourceAwsIamAccessKeyCreatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsIamAccessKeyStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsIamAccessKeyUserName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsS3BucketOwnerId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceAwsS3BucketOwnerName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceContainerImageId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceContainerImageName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceContainerLaunchedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// ResourceContainerLaunchedAtDateRange: optional
	DateRange *ResourceContainerLaunchedAtDateRange `hcl:"date_range,block"`
}

type ResourceContainerLaunchedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type ResourceContainerName struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceDetailsOther struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceId struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourcePartition struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceRegion struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceTags struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ResourceType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type SeverityLabel struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type SourceUrl struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ThreatIntelIndicatorCategory struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ThreatIntelIndicatorLastObservedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// ThreatIntelIndicatorLastObservedAtDateRange: optional
	DateRange *ThreatIntelIndicatorLastObservedAtDateRange `hcl:"date_range,block"`
}

type ThreatIntelIndicatorLastObservedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type ThreatIntelIndicatorSource struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ThreatIntelIndicatorSourceUrl struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ThreatIntelIndicatorType struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ThreatIntelIndicatorValue struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Title struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Type struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type UpdatedAt struct {
	// End: string, optional
	End terra.StringValue `hcl:"end,attr"`
	// Start: string, optional
	Start terra.StringValue `hcl:"start,attr"`
	// UpdatedAtDateRange: optional
	DateRange *UpdatedAtDateRange `hcl:"date_range,block"`
}

type UpdatedAtDateRange struct {
	// Unit: string, required
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type UserDefinedValues struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type VerificationState struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type WorkflowStatus struct {
	// Comparison: string, required
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersAttributes struct {
	ref terra.Reference
}

func (f FiltersAttributes) InternalRef() terra.Reference {
	return f.ref
}

func (f FiltersAttributes) InternalWithRef(ref terra.Reference) FiltersAttributes {
	return FiltersAttributes{ref: ref}
}

func (f FiltersAttributes) InternalTokens() hclwrite.Tokens {
	return f.ref.InternalTokens()
}

func (f FiltersAttributes) AwsAccountId() terra.SetValue[AwsAccountIdAttributes] {
	return terra.ReferenceSet[AwsAccountIdAttributes](f.ref.Append("aws_account_id"))
}

func (f FiltersAttributes) CompanyName() terra.SetValue[CompanyNameAttributes] {
	return terra.ReferenceSet[CompanyNameAttributes](f.ref.Append("company_name"))
}

func (f FiltersAttributes) ComplianceStatus() terra.SetValue[ComplianceStatusAttributes] {
	return terra.ReferenceSet[ComplianceStatusAttributes](f.ref.Append("compliance_status"))
}

func (f FiltersAttributes) Confidence() terra.SetValue[ConfidenceAttributes] {
	return terra.ReferenceSet[ConfidenceAttributes](f.ref.Append("confidence"))
}

func (f FiltersAttributes) CreatedAt() terra.SetValue[CreatedAtAttributes] {
	return terra.ReferenceSet[CreatedAtAttributes](f.ref.Append("created_at"))
}

func (f FiltersAttributes) Criticality() terra.SetValue[CriticalityAttributes] {
	return terra.ReferenceSet[CriticalityAttributes](f.ref.Append("criticality"))
}

func (f FiltersAttributes) Description() terra.SetValue[DescriptionAttributes] {
	return terra.ReferenceSet[DescriptionAttributes](f.ref.Append("description"))
}

func (f FiltersAttributes) FindingProviderFieldsConfidence() terra.SetValue[FindingProviderFieldsConfidenceAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsConfidenceAttributes](f.ref.Append("finding_provider_fields_confidence"))
}

func (f FiltersAttributes) FindingProviderFieldsCriticality() terra.SetValue[FindingProviderFieldsCriticalityAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsCriticalityAttributes](f.ref.Append("finding_provider_fields_criticality"))
}

func (f FiltersAttributes) FindingProviderFieldsRelatedFindingsId() terra.SetValue[FindingProviderFieldsRelatedFindingsIdAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsRelatedFindingsIdAttributes](f.ref.Append("finding_provider_fields_related_findings_id"))
}

func (f FiltersAttributes) FindingProviderFieldsRelatedFindingsProductArn() terra.SetValue[FindingProviderFieldsRelatedFindingsProductArnAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsRelatedFindingsProductArnAttributes](f.ref.Append("finding_provider_fields_related_findings_product_arn"))
}

func (f FiltersAttributes) FindingProviderFieldsSeverityLabel() terra.SetValue[FindingProviderFieldsSeverityLabelAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsSeverityLabelAttributes](f.ref.Append("finding_provider_fields_severity_label"))
}

func (f FiltersAttributes) FindingProviderFieldsSeverityOriginal() terra.SetValue[FindingProviderFieldsSeverityOriginalAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsSeverityOriginalAttributes](f.ref.Append("finding_provider_fields_severity_original"))
}

func (f FiltersAttributes) FindingProviderFieldsTypes() terra.SetValue[FindingProviderFieldsTypesAttributes] {
	return terra.ReferenceSet[FindingProviderFieldsTypesAttributes](f.ref.Append("finding_provider_fields_types"))
}

func (f FiltersAttributes) FirstObservedAt() terra.SetValue[FirstObservedAtAttributes] {
	return terra.ReferenceSet[FirstObservedAtAttributes](f.ref.Append("first_observed_at"))
}

func (f FiltersAttributes) GeneratorId() terra.SetValue[GeneratorIdAttributes] {
	return terra.ReferenceSet[GeneratorIdAttributes](f.ref.Append("generator_id"))
}

func (f FiltersAttributes) Id() terra.SetValue[IdAttributes] {
	return terra.ReferenceSet[IdAttributes](f.ref.Append("id"))
}

func (f FiltersAttributes) Keyword() terra.SetValue[KeywordAttributes] {
	return terra.ReferenceSet[KeywordAttributes](f.ref.Append("keyword"))
}

func (f FiltersAttributes) LastObservedAt() terra.SetValue[LastObservedAtAttributes] {
	return terra.ReferenceSet[LastObservedAtAttributes](f.ref.Append("last_observed_at"))
}

func (f FiltersAttributes) MalwareName() terra.SetValue[MalwareNameAttributes] {
	return terra.ReferenceSet[MalwareNameAttributes](f.ref.Append("malware_name"))
}

func (f FiltersAttributes) MalwarePath() terra.SetValue[MalwarePathAttributes] {
	return terra.ReferenceSet[MalwarePathAttributes](f.ref.Append("malware_path"))
}

func (f FiltersAttributes) MalwareState() terra.SetValue[MalwareStateAttributes] {
	return terra.ReferenceSet[MalwareStateAttributes](f.ref.Append("malware_state"))
}

func (f FiltersAttributes) MalwareType() terra.SetValue[MalwareTypeAttributes] {
	return terra.ReferenceSet[MalwareTypeAttributes](f.ref.Append("malware_type"))
}

func (f FiltersAttributes) NetworkDestinationDomain() terra.SetValue[NetworkDestinationDomainAttributes] {
	return terra.ReferenceSet[NetworkDestinationDomainAttributes](f.ref.Append("network_destination_domain"))
}

func (f FiltersAttributes) NetworkDestinationIpv4() terra.SetValue[NetworkDestinationIpv4Attributes] {
	return terra.ReferenceSet[NetworkDestinationIpv4Attributes](f.ref.Append("network_destination_ipv4"))
}

func (f FiltersAttributes) NetworkDestinationIpv6() terra.SetValue[NetworkDestinationIpv6Attributes] {
	return terra.ReferenceSet[NetworkDestinationIpv6Attributes](f.ref.Append("network_destination_ipv6"))
}

func (f FiltersAttributes) NetworkDestinationPort() terra.SetValue[NetworkDestinationPortAttributes] {
	return terra.ReferenceSet[NetworkDestinationPortAttributes](f.ref.Append("network_destination_port"))
}

func (f FiltersAttributes) NetworkDirection() terra.SetValue[NetworkDirectionAttributes] {
	return terra.ReferenceSet[NetworkDirectionAttributes](f.ref.Append("network_direction"))
}

func (f FiltersAttributes) NetworkProtocol() terra.SetValue[NetworkProtocolAttributes] {
	return terra.ReferenceSet[NetworkProtocolAttributes](f.ref.Append("network_protocol"))
}

func (f FiltersAttributes) NetworkSourceDomain() terra.SetValue[NetworkSourceDomainAttributes] {
	return terra.ReferenceSet[NetworkSourceDomainAttributes](f.ref.Append("network_source_domain"))
}

func (f FiltersAttributes) NetworkSourceIpv4() terra.SetValue[NetworkSourceIpv4Attributes] {
	return terra.ReferenceSet[NetworkSourceIpv4Attributes](f.ref.Append("network_source_ipv4"))
}

func (f FiltersAttributes) NetworkSourceIpv6() terra.SetValue[NetworkSourceIpv6Attributes] {
	return terra.ReferenceSet[NetworkSourceIpv6Attributes](f.ref.Append("network_source_ipv6"))
}

func (f FiltersAttributes) NetworkSourceMac() terra.SetValue[NetworkSourceMacAttributes] {
	return terra.ReferenceSet[NetworkSourceMacAttributes](f.ref.Append("network_source_mac"))
}

func (f FiltersAttributes) NetworkSourcePort() terra.SetValue[NetworkSourcePortAttributes] {
	return terra.ReferenceSet[NetworkSourcePortAttributes](f.ref.Append("network_source_port"))
}

func (f FiltersAttributes) NoteText() terra.SetValue[NoteTextAttributes] {
	return terra.ReferenceSet[NoteTextAttributes](f.ref.Append("note_text"))
}

func (f FiltersAttributes) NoteUpdatedAt() terra.SetValue[NoteUpdatedAtAttributes] {
	return terra.ReferenceSet[NoteUpdatedAtAttributes](f.ref.Append("note_updated_at"))
}

func (f FiltersAttributes) NoteUpdatedBy() terra.SetValue[NoteUpdatedByAttributes] {
	return terra.ReferenceSet[NoteUpdatedByAttributes](f.ref.Append("note_updated_by"))
}

func (f FiltersAttributes) ProcessLaunchedAt() terra.SetValue[ProcessLaunchedAtAttributes] {
	return terra.ReferenceSet[ProcessLaunchedAtAttributes](f.ref.Append("process_launched_at"))
}

func (f FiltersAttributes) ProcessName() terra.SetValue[ProcessNameAttributes] {
	return terra.ReferenceSet[ProcessNameAttributes](f.ref.Append("process_name"))
}

func (f FiltersAttributes) ProcessParentPid() terra.SetValue[ProcessParentPidAttributes] {
	return terra.ReferenceSet[ProcessParentPidAttributes](f.ref.Append("process_parent_pid"))
}

func (f FiltersAttributes) ProcessPath() terra.SetValue[ProcessPathAttributes] {
	return terra.ReferenceSet[ProcessPathAttributes](f.ref.Append("process_path"))
}

func (f FiltersAttributes) ProcessPid() terra.SetValue[ProcessPidAttributes] {
	return terra.ReferenceSet[ProcessPidAttributes](f.ref.Append("process_pid"))
}

func (f FiltersAttributes) ProcessTerminatedAt() terra.SetValue[ProcessTerminatedAtAttributes] {
	return terra.ReferenceSet[ProcessTerminatedAtAttributes](f.ref.Append("process_terminated_at"))
}

func (f FiltersAttributes) ProductArn() terra.SetValue[ProductArnAttributes] {
	return terra.ReferenceSet[ProductArnAttributes](f.ref.Append("product_arn"))
}

func (f FiltersAttributes) ProductFields() terra.SetValue[ProductFieldsAttributes] {
	return terra.ReferenceSet[ProductFieldsAttributes](f.ref.Append("product_fields"))
}

func (f FiltersAttributes) ProductName() terra.SetValue[ProductNameAttributes] {
	return terra.ReferenceSet[ProductNameAttributes](f.ref.Append("product_name"))
}

func (f FiltersAttributes) RecommendationText() terra.SetValue[RecommendationTextAttributes] {
	return terra.ReferenceSet[RecommendationTextAttributes](f.ref.Append("recommendation_text"))
}

func (f FiltersAttributes) RecordState() terra.SetValue[RecordStateAttributes] {
	return terra.ReferenceSet[RecordStateAttributes](f.ref.Append("record_state"))
}

func (f FiltersAttributes) RelatedFindingsId() terra.SetValue[RelatedFindingsIdAttributes] {
	return terra.ReferenceSet[RelatedFindingsIdAttributes](f.ref.Append("related_findings_id"))
}

func (f FiltersAttributes) RelatedFindingsProductArn() terra.SetValue[RelatedFindingsProductArnAttributes] {
	return terra.ReferenceSet[RelatedFindingsProductArnAttributes](f.ref.Append("related_findings_product_arn"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceIamInstanceProfileArn() terra.SetValue[ResourceAwsEc2InstanceIamInstanceProfileArnAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceIamInstanceProfileArnAttributes](f.ref.Append("resource_aws_ec2_instance_iam_instance_profile_arn"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceImageId() terra.SetValue[ResourceAwsEc2InstanceImageIdAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceImageIdAttributes](f.ref.Append("resource_aws_ec2_instance_image_id"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceIpv4Addresses() terra.SetValue[ResourceAwsEc2InstanceIpv4AddressesAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceIpv4AddressesAttributes](f.ref.Append("resource_aws_ec2_instance_ipv4_addresses"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceIpv6Addresses() terra.SetValue[ResourceAwsEc2InstanceIpv6AddressesAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceIpv6AddressesAttributes](f.ref.Append("resource_aws_ec2_instance_ipv6_addresses"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceKeyName() terra.SetValue[ResourceAwsEc2InstanceKeyNameAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceKeyNameAttributes](f.ref.Append("resource_aws_ec2_instance_key_name"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceLaunchedAt() terra.SetValue[ResourceAwsEc2InstanceLaunchedAtAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceLaunchedAtAttributes](f.ref.Append("resource_aws_ec2_instance_launched_at"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceSubnetId() terra.SetValue[ResourceAwsEc2InstanceSubnetIdAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceSubnetIdAttributes](f.ref.Append("resource_aws_ec2_instance_subnet_id"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceType() terra.SetValue[ResourceAwsEc2InstanceTypeAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceTypeAttributes](f.ref.Append("resource_aws_ec2_instance_type"))
}

func (f FiltersAttributes) ResourceAwsEc2InstanceVpcId() terra.SetValue[ResourceAwsEc2InstanceVpcIdAttributes] {
	return terra.ReferenceSet[ResourceAwsEc2InstanceVpcIdAttributes](f.ref.Append("resource_aws_ec2_instance_vpc_id"))
}

func (f FiltersAttributes) ResourceAwsIamAccessKeyCreatedAt() terra.SetValue[ResourceAwsIamAccessKeyCreatedAtAttributes] {
	return terra.ReferenceSet[ResourceAwsIamAccessKeyCreatedAtAttributes](f.ref.Append("resource_aws_iam_access_key_created_at"))
}

func (f FiltersAttributes) ResourceAwsIamAccessKeyStatus() terra.SetValue[ResourceAwsIamAccessKeyStatusAttributes] {
	return terra.ReferenceSet[ResourceAwsIamAccessKeyStatusAttributes](f.ref.Append("resource_aws_iam_access_key_status"))
}

func (f FiltersAttributes) ResourceAwsIamAccessKeyUserName() terra.SetValue[ResourceAwsIamAccessKeyUserNameAttributes] {
	return terra.ReferenceSet[ResourceAwsIamAccessKeyUserNameAttributes](f.ref.Append("resource_aws_iam_access_key_user_name"))
}

func (f FiltersAttributes) ResourceAwsS3BucketOwnerId() terra.SetValue[ResourceAwsS3BucketOwnerIdAttributes] {
	return terra.ReferenceSet[ResourceAwsS3BucketOwnerIdAttributes](f.ref.Append("resource_aws_s3_bucket_owner_id"))
}

func (f FiltersAttributes) ResourceAwsS3BucketOwnerName() terra.SetValue[ResourceAwsS3BucketOwnerNameAttributes] {
	return terra.ReferenceSet[ResourceAwsS3BucketOwnerNameAttributes](f.ref.Append("resource_aws_s3_bucket_owner_name"))
}

func (f FiltersAttributes) ResourceContainerImageId() terra.SetValue[ResourceContainerImageIdAttributes] {
	return terra.ReferenceSet[ResourceContainerImageIdAttributes](f.ref.Append("resource_container_image_id"))
}

func (f FiltersAttributes) ResourceContainerImageName() terra.SetValue[ResourceContainerImageNameAttributes] {
	return terra.ReferenceSet[ResourceContainerImageNameAttributes](f.ref.Append("resource_container_image_name"))
}

func (f FiltersAttributes) ResourceContainerLaunchedAt() terra.SetValue[ResourceContainerLaunchedAtAttributes] {
	return terra.ReferenceSet[ResourceContainerLaunchedAtAttributes](f.ref.Append("resource_container_launched_at"))
}

func (f FiltersAttributes) ResourceContainerName() terra.SetValue[ResourceContainerNameAttributes] {
	return terra.ReferenceSet[ResourceContainerNameAttributes](f.ref.Append("resource_container_name"))
}

func (f FiltersAttributes) ResourceDetailsOther() terra.SetValue[ResourceDetailsOtherAttributes] {
	return terra.ReferenceSet[ResourceDetailsOtherAttributes](f.ref.Append("resource_details_other"))
}

func (f FiltersAttributes) ResourceId() terra.SetValue[ResourceIdAttributes] {
	return terra.ReferenceSet[ResourceIdAttributes](f.ref.Append("resource_id"))
}

func (f FiltersAttributes) ResourcePartition() terra.SetValue[ResourcePartitionAttributes] {
	return terra.ReferenceSet[ResourcePartitionAttributes](f.ref.Append("resource_partition"))
}

func (f FiltersAttributes) ResourceRegion() terra.SetValue[ResourceRegionAttributes] {
	return terra.ReferenceSet[ResourceRegionAttributes](f.ref.Append("resource_region"))
}

func (f FiltersAttributes) ResourceTags() terra.SetValue[ResourceTagsAttributes] {
	return terra.ReferenceSet[ResourceTagsAttributes](f.ref.Append("resource_tags"))
}

func (f FiltersAttributes) ResourceType() terra.SetValue[ResourceTypeAttributes] {
	return terra.ReferenceSet[ResourceTypeAttributes](f.ref.Append("resource_type"))
}

func (f FiltersAttributes) SeverityLabel() terra.SetValue[SeverityLabelAttributes] {
	return terra.ReferenceSet[SeverityLabelAttributes](f.ref.Append("severity_label"))
}

func (f FiltersAttributes) SourceUrl() terra.SetValue[SourceUrlAttributes] {
	return terra.ReferenceSet[SourceUrlAttributes](f.ref.Append("source_url"))
}

func (f FiltersAttributes) ThreatIntelIndicatorCategory() terra.SetValue[ThreatIntelIndicatorCategoryAttributes] {
	return terra.ReferenceSet[ThreatIntelIndicatorCategoryAttributes](f.ref.Append("threat_intel_indicator_category"))
}

func (f FiltersAttributes) ThreatIntelIndicatorLastObservedAt() terra.SetValue[ThreatIntelIndicatorLastObservedAtAttributes] {
	return terra.ReferenceSet[ThreatIntelIndicatorLastObservedAtAttributes](f.ref.Append("threat_intel_indicator_last_observed_at"))
}

func (f FiltersAttributes) ThreatIntelIndicatorSource() terra.SetValue[ThreatIntelIndicatorSourceAttributes] {
	return terra.ReferenceSet[ThreatIntelIndicatorSourceAttributes](f.ref.Append("threat_intel_indicator_source"))
}

func (f FiltersAttributes) ThreatIntelIndicatorSourceUrl() terra.SetValue[ThreatIntelIndicatorSourceUrlAttributes] {
	return terra.ReferenceSet[ThreatIntelIndicatorSourceUrlAttributes](f.ref.Append("threat_intel_indicator_source_url"))
}

func (f FiltersAttributes) ThreatIntelIndicatorType() terra.SetValue[ThreatIntelIndicatorTypeAttributes] {
	return terra.ReferenceSet[ThreatIntelIndicatorTypeAttributes](f.ref.Append("threat_intel_indicator_type"))
}

func (f FiltersAttributes) ThreatIntelIndicatorValue() terra.SetValue[ThreatIntelIndicatorValueAttributes] {
	return terra.ReferenceSet[ThreatIntelIndicatorValueAttributes](f.ref.Append("threat_intel_indicator_value"))
}

func (f FiltersAttributes) Title() terra.SetValue[TitleAttributes] {
	return terra.ReferenceSet[TitleAttributes](f.ref.Append("title"))
}

func (f FiltersAttributes) Type() terra.SetValue[TypeAttributes] {
	return terra.ReferenceSet[TypeAttributes](f.ref.Append("type"))
}

func (f FiltersAttributes) UpdatedAt() terra.SetValue[UpdatedAtAttributes] {
	return terra.ReferenceSet[UpdatedAtAttributes](f.ref.Append("updated_at"))
}

func (f FiltersAttributes) UserDefinedValues() terra.SetValue[UserDefinedValuesAttributes] {
	return terra.ReferenceSet[UserDefinedValuesAttributes](f.ref.Append("user_defined_values"))
}

func (f FiltersAttributes) VerificationState() terra.SetValue[VerificationStateAttributes] {
	return terra.ReferenceSet[VerificationStateAttributes](f.ref.Append("verification_state"))
}

func (f FiltersAttributes) WorkflowStatus() terra.SetValue[WorkflowStatusAttributes] {
	return terra.ReferenceSet[WorkflowStatusAttributes](f.ref.Append("workflow_status"))
}

type AwsAccountIdAttributes struct {
	ref terra.Reference
}

func (aai AwsAccountIdAttributes) InternalRef() terra.Reference {
	return aai.ref
}

func (aai AwsAccountIdAttributes) InternalWithRef(ref terra.Reference) AwsAccountIdAttributes {
	return AwsAccountIdAttributes{ref: ref}
}

func (aai AwsAccountIdAttributes) InternalTokens() hclwrite.Tokens {
	return aai.ref.InternalTokens()
}

func (aai AwsAccountIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(aai.ref.Append("comparison"))
}

func (aai AwsAccountIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(aai.ref.Append("value"))
}

type CompanyNameAttributes struct {
	ref terra.Reference
}

func (cn CompanyNameAttributes) InternalRef() terra.Reference {
	return cn.ref
}

func (cn CompanyNameAttributes) InternalWithRef(ref terra.Reference) CompanyNameAttributes {
	return CompanyNameAttributes{ref: ref}
}

func (cn CompanyNameAttributes) InternalTokens() hclwrite.Tokens {
	return cn.ref.InternalTokens()
}

func (cn CompanyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(cn.ref.Append("comparison"))
}

func (cn CompanyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(cn.ref.Append("value"))
}

type ComplianceStatusAttributes struct {
	ref terra.Reference
}

func (cs ComplianceStatusAttributes) InternalRef() terra.Reference {
	return cs.ref
}

func (cs ComplianceStatusAttributes) InternalWithRef(ref terra.Reference) ComplianceStatusAttributes {
	return ComplianceStatusAttributes{ref: ref}
}

func (cs ComplianceStatusAttributes) InternalTokens() hclwrite.Tokens {
	return cs.ref.InternalTokens()
}

func (cs ComplianceStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(cs.ref.Append("comparison"))
}

func (cs ComplianceStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceString(cs.ref.Append("value"))
}

type ConfidenceAttributes struct {
	ref terra.Reference
}

func (c ConfidenceAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c ConfidenceAttributes) InternalWithRef(ref terra.Reference) ConfidenceAttributes {
	return ConfidenceAttributes{ref: ref}
}

func (c ConfidenceAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ConfidenceAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("eq"))
}

func (c ConfidenceAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("gte"))
}

func (c ConfidenceAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("lte"))
}

type CreatedAtAttributes struct {
	ref terra.Reference
}

func (ca CreatedAtAttributes) InternalRef() terra.Reference {
	return ca.ref
}

func (ca CreatedAtAttributes) InternalWithRef(ref terra.Reference) CreatedAtAttributes {
	return CreatedAtAttributes{ref: ref}
}

func (ca CreatedAtAttributes) InternalTokens() hclwrite.Tokens {
	return ca.ref.InternalTokens()
}

func (ca CreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(ca.ref.Append("end"))
}

func (ca CreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(ca.ref.Append("start"))
}

func (ca CreatedAtAttributes) DateRange() terra.ListValue[CreatedAtDateRangeAttributes] {
	return terra.ReferenceList[CreatedAtDateRangeAttributes](ca.ref.Append("date_range"))
}

type CreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr CreatedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr CreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) CreatedAtDateRangeAttributes {
	return CreatedAtDateRangeAttributes{ref: ref}
}

func (dr CreatedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr CreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr CreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type CriticalityAttributes struct {
	ref terra.Reference
}

func (c CriticalityAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c CriticalityAttributes) InternalWithRef(ref terra.Reference) CriticalityAttributes {
	return CriticalityAttributes{ref: ref}
}

func (c CriticalityAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c CriticalityAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("eq"))
}

func (c CriticalityAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("gte"))
}

func (c CriticalityAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("lte"))
}

type DescriptionAttributes struct {
	ref terra.Reference
}

func (d DescriptionAttributes) InternalRef() terra.Reference {
	return d.ref
}

func (d DescriptionAttributes) InternalWithRef(ref terra.Reference) DescriptionAttributes {
	return DescriptionAttributes{ref: ref}
}

func (d DescriptionAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d DescriptionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("comparison"))
}

func (d DescriptionAttributes) Value() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("value"))
}

type FindingProviderFieldsConfidenceAttributes struct {
	ref terra.Reference
}

func (fpfc FindingProviderFieldsConfidenceAttributes) InternalRef() terra.Reference {
	return fpfc.ref
}

func (fpfc FindingProviderFieldsConfidenceAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsConfidenceAttributes {
	return FindingProviderFieldsConfidenceAttributes{ref: ref}
}

func (fpfc FindingProviderFieldsConfidenceAttributes) InternalTokens() hclwrite.Tokens {
	return fpfc.ref.InternalTokens()
}

func (fpfc FindingProviderFieldsConfidenceAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(fpfc.ref.Append("eq"))
}

func (fpfc FindingProviderFieldsConfidenceAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(fpfc.ref.Append("gte"))
}

func (fpfc FindingProviderFieldsConfidenceAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(fpfc.ref.Append("lte"))
}

type FindingProviderFieldsCriticalityAttributes struct {
	ref terra.Reference
}

func (fpfc FindingProviderFieldsCriticalityAttributes) InternalRef() terra.Reference {
	return fpfc.ref
}

func (fpfc FindingProviderFieldsCriticalityAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsCriticalityAttributes {
	return FindingProviderFieldsCriticalityAttributes{ref: ref}
}

func (fpfc FindingProviderFieldsCriticalityAttributes) InternalTokens() hclwrite.Tokens {
	return fpfc.ref.InternalTokens()
}

func (fpfc FindingProviderFieldsCriticalityAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(fpfc.ref.Append("eq"))
}

func (fpfc FindingProviderFieldsCriticalityAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(fpfc.ref.Append("gte"))
}

func (fpfc FindingProviderFieldsCriticalityAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(fpfc.ref.Append("lte"))
}

type FindingProviderFieldsRelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (fpfrfi FindingProviderFieldsRelatedFindingsIdAttributes) InternalRef() terra.Reference {
	return fpfrfi.ref
}

func (fpfrfi FindingProviderFieldsRelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsRelatedFindingsIdAttributes {
	return FindingProviderFieldsRelatedFindingsIdAttributes{ref: ref}
}

func (fpfrfi FindingProviderFieldsRelatedFindingsIdAttributes) InternalTokens() hclwrite.Tokens {
	return fpfrfi.ref.InternalTokens()
}

func (fpfrfi FindingProviderFieldsRelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(fpfrfi.ref.Append("comparison"))
}

func (fpfrfi FindingProviderFieldsRelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(fpfrfi.ref.Append("value"))
}

type FindingProviderFieldsRelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (fpfrfpa FindingProviderFieldsRelatedFindingsProductArnAttributes) InternalRef() terra.Reference {
	return fpfrfpa.ref
}

func (fpfrfpa FindingProviderFieldsRelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsRelatedFindingsProductArnAttributes {
	return FindingProviderFieldsRelatedFindingsProductArnAttributes{ref: ref}
}

func (fpfrfpa FindingProviderFieldsRelatedFindingsProductArnAttributes) InternalTokens() hclwrite.Tokens {
	return fpfrfpa.ref.InternalTokens()
}

func (fpfrfpa FindingProviderFieldsRelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(fpfrfpa.ref.Append("comparison"))
}

func (fpfrfpa FindingProviderFieldsRelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceString(fpfrfpa.ref.Append("value"))
}

type FindingProviderFieldsSeverityLabelAttributes struct {
	ref terra.Reference
}

func (fpfsl FindingProviderFieldsSeverityLabelAttributes) InternalRef() terra.Reference {
	return fpfsl.ref
}

func (fpfsl FindingProviderFieldsSeverityLabelAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsSeverityLabelAttributes {
	return FindingProviderFieldsSeverityLabelAttributes{ref: ref}
}

func (fpfsl FindingProviderFieldsSeverityLabelAttributes) InternalTokens() hclwrite.Tokens {
	return fpfsl.ref.InternalTokens()
}

func (fpfsl FindingProviderFieldsSeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(fpfsl.ref.Append("comparison"))
}

func (fpfsl FindingProviderFieldsSeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceString(fpfsl.ref.Append("value"))
}

type FindingProviderFieldsSeverityOriginalAttributes struct {
	ref terra.Reference
}

func (fpfso FindingProviderFieldsSeverityOriginalAttributes) InternalRef() terra.Reference {
	return fpfso.ref
}

func (fpfso FindingProviderFieldsSeverityOriginalAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsSeverityOriginalAttributes {
	return FindingProviderFieldsSeverityOriginalAttributes{ref: ref}
}

func (fpfso FindingProviderFieldsSeverityOriginalAttributes) InternalTokens() hclwrite.Tokens {
	return fpfso.ref.InternalTokens()
}

func (fpfso FindingProviderFieldsSeverityOriginalAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(fpfso.ref.Append("comparison"))
}

func (fpfso FindingProviderFieldsSeverityOriginalAttributes) Value() terra.StringValue {
	return terra.ReferenceString(fpfso.ref.Append("value"))
}

type FindingProviderFieldsTypesAttributes struct {
	ref terra.Reference
}

func (fpft FindingProviderFieldsTypesAttributes) InternalRef() terra.Reference {
	return fpft.ref
}

func (fpft FindingProviderFieldsTypesAttributes) InternalWithRef(ref terra.Reference) FindingProviderFieldsTypesAttributes {
	return FindingProviderFieldsTypesAttributes{ref: ref}
}

func (fpft FindingProviderFieldsTypesAttributes) InternalTokens() hclwrite.Tokens {
	return fpft.ref.InternalTokens()
}

func (fpft FindingProviderFieldsTypesAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(fpft.ref.Append("comparison"))
}

func (fpft FindingProviderFieldsTypesAttributes) Value() terra.StringValue {
	return terra.ReferenceString(fpft.ref.Append("value"))
}

type FirstObservedAtAttributes struct {
	ref terra.Reference
}

func (foa FirstObservedAtAttributes) InternalRef() terra.Reference {
	return foa.ref
}

func (foa FirstObservedAtAttributes) InternalWithRef(ref terra.Reference) FirstObservedAtAttributes {
	return FirstObservedAtAttributes{ref: ref}
}

func (foa FirstObservedAtAttributes) InternalTokens() hclwrite.Tokens {
	return foa.ref.InternalTokens()
}

func (foa FirstObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(foa.ref.Append("end"))
}

func (foa FirstObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(foa.ref.Append("start"))
}

func (foa FirstObservedAtAttributes) DateRange() terra.ListValue[FirstObservedAtDateRangeAttributes] {
	return terra.ReferenceList[FirstObservedAtDateRangeAttributes](foa.ref.Append("date_range"))
}

type FirstObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr FirstObservedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr FirstObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) FirstObservedAtDateRangeAttributes {
	return FirstObservedAtDateRangeAttributes{ref: ref}
}

func (dr FirstObservedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr FirstObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr FirstObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type GeneratorIdAttributes struct {
	ref terra.Reference
}

func (gi GeneratorIdAttributes) InternalRef() terra.Reference {
	return gi.ref
}

func (gi GeneratorIdAttributes) InternalWithRef(ref terra.Reference) GeneratorIdAttributes {
	return GeneratorIdAttributes{ref: ref}
}

func (gi GeneratorIdAttributes) InternalTokens() hclwrite.Tokens {
	return gi.ref.InternalTokens()
}

func (gi GeneratorIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(gi.ref.Append("comparison"))
}

func (gi GeneratorIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(gi.ref.Append("value"))
}

type IdAttributes struct {
	ref terra.Reference
}

func (i IdAttributes) InternalRef() terra.Reference {
	return i.ref
}

func (i IdAttributes) InternalWithRef(ref terra.Reference) IdAttributes {
	return IdAttributes{ref: ref}
}

func (i IdAttributes) InternalTokens() hclwrite.Tokens {
	return i.ref.InternalTokens()
}

func (i IdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(i.ref.Append("comparison"))
}

func (i IdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(i.ref.Append("value"))
}

type KeywordAttributes struct {
	ref terra.Reference
}

func (k KeywordAttributes) InternalRef() terra.Reference {
	return k.ref
}

func (k KeywordAttributes) InternalWithRef(ref terra.Reference) KeywordAttributes {
	return KeywordAttributes{ref: ref}
}

func (k KeywordAttributes) InternalTokens() hclwrite.Tokens {
	return k.ref.InternalTokens()
}

func (k KeywordAttributes) Value() terra.StringValue {
	return terra.ReferenceString(k.ref.Append("value"))
}

type LastObservedAtAttributes struct {
	ref terra.Reference
}

func (loa LastObservedAtAttributes) InternalRef() terra.Reference {
	return loa.ref
}

func (loa LastObservedAtAttributes) InternalWithRef(ref terra.Reference) LastObservedAtAttributes {
	return LastObservedAtAttributes{ref: ref}
}

func (loa LastObservedAtAttributes) InternalTokens() hclwrite.Tokens {
	return loa.ref.InternalTokens()
}

func (loa LastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(loa.ref.Append("end"))
}

func (loa LastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(loa.ref.Append("start"))
}

func (loa LastObservedAtAttributes) DateRange() terra.ListValue[LastObservedAtDateRangeAttributes] {
	return terra.ReferenceList[LastObservedAtDateRangeAttributes](loa.ref.Append("date_range"))
}

type LastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr LastObservedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr LastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) LastObservedAtDateRangeAttributes {
	return LastObservedAtDateRangeAttributes{ref: ref}
}

func (dr LastObservedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr LastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr LastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type MalwareNameAttributes struct {
	ref terra.Reference
}

func (mn MalwareNameAttributes) InternalRef() terra.Reference {
	return mn.ref
}

func (mn MalwareNameAttributes) InternalWithRef(ref terra.Reference) MalwareNameAttributes {
	return MalwareNameAttributes{ref: ref}
}

func (mn MalwareNameAttributes) InternalTokens() hclwrite.Tokens {
	return mn.ref.InternalTokens()
}

func (mn MalwareNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("comparison"))
}

func (mn MalwareNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("value"))
}

type MalwarePathAttributes struct {
	ref terra.Reference
}

func (mp MalwarePathAttributes) InternalRef() terra.Reference {
	return mp.ref
}

func (mp MalwarePathAttributes) InternalWithRef(ref terra.Reference) MalwarePathAttributes {
	return MalwarePathAttributes{ref: ref}
}

func (mp MalwarePathAttributes) InternalTokens() hclwrite.Tokens {
	return mp.ref.InternalTokens()
}

func (mp MalwarePathAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(mp.ref.Append("comparison"))
}

func (mp MalwarePathAttributes) Value() terra.StringValue {
	return terra.ReferenceString(mp.ref.Append("value"))
}

type MalwareStateAttributes struct {
	ref terra.Reference
}

func (ms MalwareStateAttributes) InternalRef() terra.Reference {
	return ms.ref
}

func (ms MalwareStateAttributes) InternalWithRef(ref terra.Reference) MalwareStateAttributes {
	return MalwareStateAttributes{ref: ref}
}

func (ms MalwareStateAttributes) InternalTokens() hclwrite.Tokens {
	return ms.ref.InternalTokens()
}

func (ms MalwareStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("comparison"))
}

func (ms MalwareStateAttributes) Value() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("value"))
}

type MalwareTypeAttributes struct {
	ref terra.Reference
}

func (mt MalwareTypeAttributes) InternalRef() terra.Reference {
	return mt.ref
}

func (mt MalwareTypeAttributes) InternalWithRef(ref terra.Reference) MalwareTypeAttributes {
	return MalwareTypeAttributes{ref: ref}
}

func (mt MalwareTypeAttributes) InternalTokens() hclwrite.Tokens {
	return mt.ref.InternalTokens()
}

func (mt MalwareTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(mt.ref.Append("comparison"))
}

func (mt MalwareTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceString(mt.ref.Append("value"))
}

type NetworkDestinationDomainAttributes struct {
	ref terra.Reference
}

func (ndd NetworkDestinationDomainAttributes) InternalRef() terra.Reference {
	return ndd.ref
}

func (ndd NetworkDestinationDomainAttributes) InternalWithRef(ref terra.Reference) NetworkDestinationDomainAttributes {
	return NetworkDestinationDomainAttributes{ref: ref}
}

func (ndd NetworkDestinationDomainAttributes) InternalTokens() hclwrite.Tokens {
	return ndd.ref.InternalTokens()
}

func (ndd NetworkDestinationDomainAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(ndd.ref.Append("comparison"))
}

func (ndd NetworkDestinationDomainAttributes) Value() terra.StringValue {
	return terra.ReferenceString(ndd.ref.Append("value"))
}

type NetworkDestinationIpv4Attributes struct {
	ref terra.Reference
}

func (ndi NetworkDestinationIpv4Attributes) InternalRef() terra.Reference {
	return ndi.ref
}

func (ndi NetworkDestinationIpv4Attributes) InternalWithRef(ref terra.Reference) NetworkDestinationIpv4Attributes {
	return NetworkDestinationIpv4Attributes{ref: ref}
}

func (ndi NetworkDestinationIpv4Attributes) InternalTokens() hclwrite.Tokens {
	return ndi.ref.InternalTokens()
}

func (ndi NetworkDestinationIpv4Attributes) Cidr() terra.StringValue {
	return terra.ReferenceString(ndi.ref.Append("cidr"))
}

type NetworkDestinationIpv6Attributes struct {
	ref terra.Reference
}

func (ndi NetworkDestinationIpv6Attributes) InternalRef() terra.Reference {
	return ndi.ref
}

func (ndi NetworkDestinationIpv6Attributes) InternalWithRef(ref terra.Reference) NetworkDestinationIpv6Attributes {
	return NetworkDestinationIpv6Attributes{ref: ref}
}

func (ndi NetworkDestinationIpv6Attributes) InternalTokens() hclwrite.Tokens {
	return ndi.ref.InternalTokens()
}

func (ndi NetworkDestinationIpv6Attributes) Cidr() terra.StringValue {
	return terra.ReferenceString(ndi.ref.Append("cidr"))
}

type NetworkDestinationPortAttributes struct {
	ref terra.Reference
}

func (ndp NetworkDestinationPortAttributes) InternalRef() terra.Reference {
	return ndp.ref
}

func (ndp NetworkDestinationPortAttributes) InternalWithRef(ref terra.Reference) NetworkDestinationPortAttributes {
	return NetworkDestinationPortAttributes{ref: ref}
}

func (ndp NetworkDestinationPortAttributes) InternalTokens() hclwrite.Tokens {
	return ndp.ref.InternalTokens()
}

func (ndp NetworkDestinationPortAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(ndp.ref.Append("eq"))
}

func (ndp NetworkDestinationPortAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(ndp.ref.Append("gte"))
}

func (ndp NetworkDestinationPortAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(ndp.ref.Append("lte"))
}

type NetworkDirectionAttributes struct {
	ref terra.Reference
}

func (nd NetworkDirectionAttributes) InternalRef() terra.Reference {
	return nd.ref
}

func (nd NetworkDirectionAttributes) InternalWithRef(ref terra.Reference) NetworkDirectionAttributes {
	return NetworkDirectionAttributes{ref: ref}
}

func (nd NetworkDirectionAttributes) InternalTokens() hclwrite.Tokens {
	return nd.ref.InternalTokens()
}

func (nd NetworkDirectionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("comparison"))
}

func (nd NetworkDirectionAttributes) Value() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("value"))
}

type NetworkProtocolAttributes struct {
	ref terra.Reference
}

func (np NetworkProtocolAttributes) InternalRef() terra.Reference {
	return np.ref
}

func (np NetworkProtocolAttributes) InternalWithRef(ref terra.Reference) NetworkProtocolAttributes {
	return NetworkProtocolAttributes{ref: ref}
}

func (np NetworkProtocolAttributes) InternalTokens() hclwrite.Tokens {
	return np.ref.InternalTokens()
}

func (np NetworkProtocolAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(np.ref.Append("comparison"))
}

func (np NetworkProtocolAttributes) Value() terra.StringValue {
	return terra.ReferenceString(np.ref.Append("value"))
}

type NetworkSourceDomainAttributes struct {
	ref terra.Reference
}

func (nsd NetworkSourceDomainAttributes) InternalRef() terra.Reference {
	return nsd.ref
}

func (nsd NetworkSourceDomainAttributes) InternalWithRef(ref terra.Reference) NetworkSourceDomainAttributes {
	return NetworkSourceDomainAttributes{ref: ref}
}

func (nsd NetworkSourceDomainAttributes) InternalTokens() hclwrite.Tokens {
	return nsd.ref.InternalTokens()
}

func (nsd NetworkSourceDomainAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(nsd.ref.Append("comparison"))
}

func (nsd NetworkSourceDomainAttributes) Value() terra.StringValue {
	return terra.ReferenceString(nsd.ref.Append("value"))
}

type NetworkSourceIpv4Attributes struct {
	ref terra.Reference
}

func (nsi NetworkSourceIpv4Attributes) InternalRef() terra.Reference {
	return nsi.ref
}

func (nsi NetworkSourceIpv4Attributes) InternalWithRef(ref terra.Reference) NetworkSourceIpv4Attributes {
	return NetworkSourceIpv4Attributes{ref: ref}
}

func (nsi NetworkSourceIpv4Attributes) InternalTokens() hclwrite.Tokens {
	return nsi.ref.InternalTokens()
}

func (nsi NetworkSourceIpv4Attributes) Cidr() terra.StringValue {
	return terra.ReferenceString(nsi.ref.Append("cidr"))
}

type NetworkSourceIpv6Attributes struct {
	ref terra.Reference
}

func (nsi NetworkSourceIpv6Attributes) InternalRef() terra.Reference {
	return nsi.ref
}

func (nsi NetworkSourceIpv6Attributes) InternalWithRef(ref terra.Reference) NetworkSourceIpv6Attributes {
	return NetworkSourceIpv6Attributes{ref: ref}
}

func (nsi NetworkSourceIpv6Attributes) InternalTokens() hclwrite.Tokens {
	return nsi.ref.InternalTokens()
}

func (nsi NetworkSourceIpv6Attributes) Cidr() terra.StringValue {
	return terra.ReferenceString(nsi.ref.Append("cidr"))
}

type NetworkSourceMacAttributes struct {
	ref terra.Reference
}

func (nsm NetworkSourceMacAttributes) InternalRef() terra.Reference {
	return nsm.ref
}

func (nsm NetworkSourceMacAttributes) InternalWithRef(ref terra.Reference) NetworkSourceMacAttributes {
	return NetworkSourceMacAttributes{ref: ref}
}

func (nsm NetworkSourceMacAttributes) InternalTokens() hclwrite.Tokens {
	return nsm.ref.InternalTokens()
}

func (nsm NetworkSourceMacAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(nsm.ref.Append("comparison"))
}

func (nsm NetworkSourceMacAttributes) Value() terra.StringValue {
	return terra.ReferenceString(nsm.ref.Append("value"))
}

type NetworkSourcePortAttributes struct {
	ref terra.Reference
}

func (nsp NetworkSourcePortAttributes) InternalRef() terra.Reference {
	return nsp.ref
}

func (nsp NetworkSourcePortAttributes) InternalWithRef(ref terra.Reference) NetworkSourcePortAttributes {
	return NetworkSourcePortAttributes{ref: ref}
}

func (nsp NetworkSourcePortAttributes) InternalTokens() hclwrite.Tokens {
	return nsp.ref.InternalTokens()
}

func (nsp NetworkSourcePortAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(nsp.ref.Append("eq"))
}

func (nsp NetworkSourcePortAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(nsp.ref.Append("gte"))
}

func (nsp NetworkSourcePortAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(nsp.ref.Append("lte"))
}

type NoteTextAttributes struct {
	ref terra.Reference
}

func (nt NoteTextAttributes) InternalRef() terra.Reference {
	return nt.ref
}

func (nt NoteTextAttributes) InternalWithRef(ref terra.Reference) NoteTextAttributes {
	return NoteTextAttributes{ref: ref}
}

func (nt NoteTextAttributes) InternalTokens() hclwrite.Tokens {
	return nt.ref.InternalTokens()
}

func (nt NoteTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(nt.ref.Append("comparison"))
}

func (nt NoteTextAttributes) Value() terra.StringValue {
	return terra.ReferenceString(nt.ref.Append("value"))
}

type NoteUpdatedAtAttributes struct {
	ref terra.Reference
}

func (nua NoteUpdatedAtAttributes) InternalRef() terra.Reference {
	return nua.ref
}

func (nua NoteUpdatedAtAttributes) InternalWithRef(ref terra.Reference) NoteUpdatedAtAttributes {
	return NoteUpdatedAtAttributes{ref: ref}
}

func (nua NoteUpdatedAtAttributes) InternalTokens() hclwrite.Tokens {
	return nua.ref.InternalTokens()
}

func (nua NoteUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(nua.ref.Append("end"))
}

func (nua NoteUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(nua.ref.Append("start"))
}

func (nua NoteUpdatedAtAttributes) DateRange() terra.ListValue[NoteUpdatedAtDateRangeAttributes] {
	return terra.ReferenceList[NoteUpdatedAtDateRangeAttributes](nua.ref.Append("date_range"))
}

type NoteUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr NoteUpdatedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr NoteUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) NoteUpdatedAtDateRangeAttributes {
	return NoteUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr NoteUpdatedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr NoteUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr NoteUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type NoteUpdatedByAttributes struct {
	ref terra.Reference
}

func (nub NoteUpdatedByAttributes) InternalRef() terra.Reference {
	return nub.ref
}

func (nub NoteUpdatedByAttributes) InternalWithRef(ref terra.Reference) NoteUpdatedByAttributes {
	return NoteUpdatedByAttributes{ref: ref}
}

func (nub NoteUpdatedByAttributes) InternalTokens() hclwrite.Tokens {
	return nub.ref.InternalTokens()
}

func (nub NoteUpdatedByAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(nub.ref.Append("comparison"))
}

func (nub NoteUpdatedByAttributes) Value() terra.StringValue {
	return terra.ReferenceString(nub.ref.Append("value"))
}

type ProcessLaunchedAtAttributes struct {
	ref terra.Reference
}

func (pla ProcessLaunchedAtAttributes) InternalRef() terra.Reference {
	return pla.ref
}

func (pla ProcessLaunchedAtAttributes) InternalWithRef(ref terra.Reference) ProcessLaunchedAtAttributes {
	return ProcessLaunchedAtAttributes{ref: ref}
}

func (pla ProcessLaunchedAtAttributes) InternalTokens() hclwrite.Tokens {
	return pla.ref.InternalTokens()
}

func (pla ProcessLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(pla.ref.Append("end"))
}

func (pla ProcessLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(pla.ref.Append("start"))
}

func (pla ProcessLaunchedAtAttributes) DateRange() terra.ListValue[ProcessLaunchedAtDateRangeAttributes] {
	return terra.ReferenceList[ProcessLaunchedAtDateRangeAttributes](pla.ref.Append("date_range"))
}

type ProcessLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr ProcessLaunchedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr ProcessLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) ProcessLaunchedAtDateRangeAttributes {
	return ProcessLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr ProcessLaunchedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr ProcessLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr ProcessLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type ProcessNameAttributes struct {
	ref terra.Reference
}

func (pn ProcessNameAttributes) InternalRef() terra.Reference {
	return pn.ref
}

func (pn ProcessNameAttributes) InternalWithRef(ref terra.Reference) ProcessNameAttributes {
	return ProcessNameAttributes{ref: ref}
}

func (pn ProcessNameAttributes) InternalTokens() hclwrite.Tokens {
	return pn.ref.InternalTokens()
}

func (pn ProcessNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(pn.ref.Append("comparison"))
}

func (pn ProcessNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(pn.ref.Append("value"))
}

type ProcessParentPidAttributes struct {
	ref terra.Reference
}

func (ppp ProcessParentPidAttributes) InternalRef() terra.Reference {
	return ppp.ref
}

func (ppp ProcessParentPidAttributes) InternalWithRef(ref terra.Reference) ProcessParentPidAttributes {
	return ProcessParentPidAttributes{ref: ref}
}

func (ppp ProcessParentPidAttributes) InternalTokens() hclwrite.Tokens {
	return ppp.ref.InternalTokens()
}

func (ppp ProcessParentPidAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(ppp.ref.Append("eq"))
}

func (ppp ProcessParentPidAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(ppp.ref.Append("gte"))
}

func (ppp ProcessParentPidAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(ppp.ref.Append("lte"))
}

type ProcessPathAttributes struct {
	ref terra.Reference
}

func (pp ProcessPathAttributes) InternalRef() terra.Reference {
	return pp.ref
}

func (pp ProcessPathAttributes) InternalWithRef(ref terra.Reference) ProcessPathAttributes {
	return ProcessPathAttributes{ref: ref}
}

func (pp ProcessPathAttributes) InternalTokens() hclwrite.Tokens {
	return pp.ref.InternalTokens()
}

func (pp ProcessPathAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("comparison"))
}

func (pp ProcessPathAttributes) Value() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("value"))
}

type ProcessPidAttributes struct {
	ref terra.Reference
}

func (pp ProcessPidAttributes) InternalRef() terra.Reference {
	return pp.ref
}

func (pp ProcessPidAttributes) InternalWithRef(ref terra.Reference) ProcessPidAttributes {
	return ProcessPidAttributes{ref: ref}
}

func (pp ProcessPidAttributes) InternalTokens() hclwrite.Tokens {
	return pp.ref.InternalTokens()
}

func (pp ProcessPidAttributes) Eq() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("eq"))
}

func (pp ProcessPidAttributes) Gte() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("gte"))
}

func (pp ProcessPidAttributes) Lte() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("lte"))
}

type ProcessTerminatedAtAttributes struct {
	ref terra.Reference
}

func (pta ProcessTerminatedAtAttributes) InternalRef() terra.Reference {
	return pta.ref
}

func (pta ProcessTerminatedAtAttributes) InternalWithRef(ref terra.Reference) ProcessTerminatedAtAttributes {
	return ProcessTerminatedAtAttributes{ref: ref}
}

func (pta ProcessTerminatedAtAttributes) InternalTokens() hclwrite.Tokens {
	return pta.ref.InternalTokens()
}

func (pta ProcessTerminatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(pta.ref.Append("end"))
}

func (pta ProcessTerminatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(pta.ref.Append("start"))
}

func (pta ProcessTerminatedAtAttributes) DateRange() terra.ListValue[ProcessTerminatedAtDateRangeAttributes] {
	return terra.ReferenceList[ProcessTerminatedAtDateRangeAttributes](pta.ref.Append("date_range"))
}

type ProcessTerminatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr ProcessTerminatedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr ProcessTerminatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) ProcessTerminatedAtDateRangeAttributes {
	return ProcessTerminatedAtDateRangeAttributes{ref: ref}
}

func (dr ProcessTerminatedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr ProcessTerminatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr ProcessTerminatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type ProductArnAttributes struct {
	ref terra.Reference
}

func (pa ProductArnAttributes) InternalRef() terra.Reference {
	return pa.ref
}

func (pa ProductArnAttributes) InternalWithRef(ref terra.Reference) ProductArnAttributes {
	return ProductArnAttributes{ref: ref}
}

func (pa ProductArnAttributes) InternalTokens() hclwrite.Tokens {
	return pa.ref.InternalTokens()
}

func (pa ProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("comparison"))
}

func (pa ProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("value"))
}

type ProductFieldsAttributes struct {
	ref terra.Reference
}

func (pf ProductFieldsAttributes) InternalRef() terra.Reference {
	return pf.ref
}

func (pf ProductFieldsAttributes) InternalWithRef(ref terra.Reference) ProductFieldsAttributes {
	return ProductFieldsAttributes{ref: ref}
}

func (pf ProductFieldsAttributes) InternalTokens() hclwrite.Tokens {
	return pf.ref.InternalTokens()
}

func (pf ProductFieldsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(pf.ref.Append("comparison"))
}

func (pf ProductFieldsAttributes) Key() terra.StringValue {
	return terra.ReferenceString(pf.ref.Append("key"))
}

func (pf ProductFieldsAttributes) Value() terra.StringValue {
	return terra.ReferenceString(pf.ref.Append("value"))
}

type ProductNameAttributes struct {
	ref terra.Reference
}

func (pn ProductNameAttributes) InternalRef() terra.Reference {
	return pn.ref
}

func (pn ProductNameAttributes) InternalWithRef(ref terra.Reference) ProductNameAttributes {
	return ProductNameAttributes{ref: ref}
}

func (pn ProductNameAttributes) InternalTokens() hclwrite.Tokens {
	return pn.ref.InternalTokens()
}

func (pn ProductNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(pn.ref.Append("comparison"))
}

func (pn ProductNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(pn.ref.Append("value"))
}

type RecommendationTextAttributes struct {
	ref terra.Reference
}

func (rt RecommendationTextAttributes) InternalRef() terra.Reference {
	return rt.ref
}

func (rt RecommendationTextAttributes) InternalWithRef(ref terra.Reference) RecommendationTextAttributes {
	return RecommendationTextAttributes{ref: ref}
}

func (rt RecommendationTextAttributes) InternalTokens() hclwrite.Tokens {
	return rt.ref.InternalTokens()
}

func (rt RecommendationTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("comparison"))
}

func (rt RecommendationTextAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("value"))
}

type RecordStateAttributes struct {
	ref terra.Reference
}

func (rs RecordStateAttributes) InternalRef() terra.Reference {
	return rs.ref
}

func (rs RecordStateAttributes) InternalWithRef(ref terra.Reference) RecordStateAttributes {
	return RecordStateAttributes{ref: ref}
}

func (rs RecordStateAttributes) InternalTokens() hclwrite.Tokens {
	return rs.ref.InternalTokens()
}

func (rs RecordStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rs.ref.Append("comparison"))
}

func (rs RecordStateAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rs.ref.Append("value"))
}

type RelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (rfi RelatedFindingsIdAttributes) InternalRef() terra.Reference {
	return rfi.ref
}

func (rfi RelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) RelatedFindingsIdAttributes {
	return RelatedFindingsIdAttributes{ref: ref}
}

func (rfi RelatedFindingsIdAttributes) InternalTokens() hclwrite.Tokens {
	return rfi.ref.InternalTokens()
}

func (rfi RelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rfi.ref.Append("comparison"))
}

func (rfi RelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rfi.ref.Append("value"))
}

type RelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (rfpa RelatedFindingsProductArnAttributes) InternalRef() terra.Reference {
	return rfpa.ref
}

func (rfpa RelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) RelatedFindingsProductArnAttributes {
	return RelatedFindingsProductArnAttributes{ref: ref}
}

func (rfpa RelatedFindingsProductArnAttributes) InternalTokens() hclwrite.Tokens {
	return rfpa.ref.InternalTokens()
}

func (rfpa RelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rfpa.ref.Append("comparison"))
}

func (rfpa RelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rfpa.ref.Append("value"))
}

type ResourceAwsEc2InstanceIamInstanceProfileArnAttributes struct {
	ref terra.Reference
}

func (raeiiipa ResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalRef() terra.Reference {
	return raeiiipa.ref
}

func (raeiiipa ResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceIamInstanceProfileArnAttributes {
	return ResourceAwsEc2InstanceIamInstanceProfileArnAttributes{ref: ref}
}

func (raeiiipa ResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalTokens() hclwrite.Tokens {
	return raeiiipa.ref.InternalTokens()
}

func (raeiiipa ResourceAwsEc2InstanceIamInstanceProfileArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raeiiipa.ref.Append("comparison"))
}

func (raeiiipa ResourceAwsEc2InstanceIamInstanceProfileArnAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raeiiipa.ref.Append("value"))
}

type ResourceAwsEc2InstanceImageIdAttributes struct {
	ref terra.Reference
}

func (raeiii ResourceAwsEc2InstanceImageIdAttributes) InternalRef() terra.Reference {
	return raeiii.ref
}

func (raeiii ResourceAwsEc2InstanceImageIdAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceImageIdAttributes {
	return ResourceAwsEc2InstanceImageIdAttributes{ref: ref}
}

func (raeiii ResourceAwsEc2InstanceImageIdAttributes) InternalTokens() hclwrite.Tokens {
	return raeiii.ref.InternalTokens()
}

func (raeiii ResourceAwsEc2InstanceImageIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raeiii.ref.Append("comparison"))
}

func (raeiii ResourceAwsEc2InstanceImageIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raeiii.ref.Append("value"))
}

type ResourceAwsEc2InstanceIpv4AddressesAttributes struct {
	ref terra.Reference
}

func (raeiia ResourceAwsEc2InstanceIpv4AddressesAttributes) InternalRef() terra.Reference {
	return raeiia.ref
}

func (raeiia ResourceAwsEc2InstanceIpv4AddressesAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceIpv4AddressesAttributes {
	return ResourceAwsEc2InstanceIpv4AddressesAttributes{ref: ref}
}

func (raeiia ResourceAwsEc2InstanceIpv4AddressesAttributes) InternalTokens() hclwrite.Tokens {
	return raeiia.ref.InternalTokens()
}

func (raeiia ResourceAwsEc2InstanceIpv4AddressesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceString(raeiia.ref.Append("cidr"))
}

type ResourceAwsEc2InstanceIpv6AddressesAttributes struct {
	ref terra.Reference
}

func (raeiia ResourceAwsEc2InstanceIpv6AddressesAttributes) InternalRef() terra.Reference {
	return raeiia.ref
}

func (raeiia ResourceAwsEc2InstanceIpv6AddressesAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceIpv6AddressesAttributes {
	return ResourceAwsEc2InstanceIpv6AddressesAttributes{ref: ref}
}

func (raeiia ResourceAwsEc2InstanceIpv6AddressesAttributes) InternalTokens() hclwrite.Tokens {
	return raeiia.ref.InternalTokens()
}

func (raeiia ResourceAwsEc2InstanceIpv6AddressesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceString(raeiia.ref.Append("cidr"))
}

type ResourceAwsEc2InstanceKeyNameAttributes struct {
	ref terra.Reference
}

func (raeikn ResourceAwsEc2InstanceKeyNameAttributes) InternalRef() terra.Reference {
	return raeikn.ref
}

func (raeikn ResourceAwsEc2InstanceKeyNameAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceKeyNameAttributes {
	return ResourceAwsEc2InstanceKeyNameAttributes{ref: ref}
}

func (raeikn ResourceAwsEc2InstanceKeyNameAttributes) InternalTokens() hclwrite.Tokens {
	return raeikn.ref.InternalTokens()
}

func (raeikn ResourceAwsEc2InstanceKeyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raeikn.ref.Append("comparison"))
}

func (raeikn ResourceAwsEc2InstanceKeyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raeikn.ref.Append("value"))
}

type ResourceAwsEc2InstanceLaunchedAtAttributes struct {
	ref terra.Reference
}

func (raeila ResourceAwsEc2InstanceLaunchedAtAttributes) InternalRef() terra.Reference {
	return raeila.ref
}

func (raeila ResourceAwsEc2InstanceLaunchedAtAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceLaunchedAtAttributes {
	return ResourceAwsEc2InstanceLaunchedAtAttributes{ref: ref}
}

func (raeila ResourceAwsEc2InstanceLaunchedAtAttributes) InternalTokens() hclwrite.Tokens {
	return raeila.ref.InternalTokens()
}

func (raeila ResourceAwsEc2InstanceLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(raeila.ref.Append("end"))
}

func (raeila ResourceAwsEc2InstanceLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(raeila.ref.Append("start"))
}

func (raeila ResourceAwsEc2InstanceLaunchedAtAttributes) DateRange() terra.ListValue[ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes] {
	return terra.ReferenceList[ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes](raeila.ref.Append("date_range"))
}

type ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes {
	return ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr ResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type ResourceAwsEc2InstanceSubnetIdAttributes struct {
	ref terra.Reference
}

func (raeisi ResourceAwsEc2InstanceSubnetIdAttributes) InternalRef() terra.Reference {
	return raeisi.ref
}

func (raeisi ResourceAwsEc2InstanceSubnetIdAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceSubnetIdAttributes {
	return ResourceAwsEc2InstanceSubnetIdAttributes{ref: ref}
}

func (raeisi ResourceAwsEc2InstanceSubnetIdAttributes) InternalTokens() hclwrite.Tokens {
	return raeisi.ref.InternalTokens()
}

func (raeisi ResourceAwsEc2InstanceSubnetIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raeisi.ref.Append("comparison"))
}

func (raeisi ResourceAwsEc2InstanceSubnetIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raeisi.ref.Append("value"))
}

type ResourceAwsEc2InstanceTypeAttributes struct {
	ref terra.Reference
}

func (raeit ResourceAwsEc2InstanceTypeAttributes) InternalRef() terra.Reference {
	return raeit.ref
}

func (raeit ResourceAwsEc2InstanceTypeAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceTypeAttributes {
	return ResourceAwsEc2InstanceTypeAttributes{ref: ref}
}

func (raeit ResourceAwsEc2InstanceTypeAttributes) InternalTokens() hclwrite.Tokens {
	return raeit.ref.InternalTokens()
}

func (raeit ResourceAwsEc2InstanceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raeit.ref.Append("comparison"))
}

func (raeit ResourceAwsEc2InstanceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raeit.ref.Append("value"))
}

type ResourceAwsEc2InstanceVpcIdAttributes struct {
	ref terra.Reference
}

func (raeivi ResourceAwsEc2InstanceVpcIdAttributes) InternalRef() terra.Reference {
	return raeivi.ref
}

func (raeivi ResourceAwsEc2InstanceVpcIdAttributes) InternalWithRef(ref terra.Reference) ResourceAwsEc2InstanceVpcIdAttributes {
	return ResourceAwsEc2InstanceVpcIdAttributes{ref: ref}
}

func (raeivi ResourceAwsEc2InstanceVpcIdAttributes) InternalTokens() hclwrite.Tokens {
	return raeivi.ref.InternalTokens()
}

func (raeivi ResourceAwsEc2InstanceVpcIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raeivi.ref.Append("comparison"))
}

func (raeivi ResourceAwsEc2InstanceVpcIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raeivi.ref.Append("value"))
}

type ResourceAwsIamAccessKeyCreatedAtAttributes struct {
	ref terra.Reference
}

func (raiakca ResourceAwsIamAccessKeyCreatedAtAttributes) InternalRef() terra.Reference {
	return raiakca.ref
}

func (raiakca ResourceAwsIamAccessKeyCreatedAtAttributes) InternalWithRef(ref terra.Reference) ResourceAwsIamAccessKeyCreatedAtAttributes {
	return ResourceAwsIamAccessKeyCreatedAtAttributes{ref: ref}
}

func (raiakca ResourceAwsIamAccessKeyCreatedAtAttributes) InternalTokens() hclwrite.Tokens {
	return raiakca.ref.InternalTokens()
}

func (raiakca ResourceAwsIamAccessKeyCreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(raiakca.ref.Append("end"))
}

func (raiakca ResourceAwsIamAccessKeyCreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(raiakca.ref.Append("start"))
}

func (raiakca ResourceAwsIamAccessKeyCreatedAtAttributes) DateRange() terra.ListValue[ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes] {
	return terra.ReferenceList[ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes](raiakca.ref.Append("date_range"))
}

type ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes {
	return ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes{ref: ref}
}

func (dr ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr ResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type ResourceAwsIamAccessKeyStatusAttributes struct {
	ref terra.Reference
}

func (raiaks ResourceAwsIamAccessKeyStatusAttributes) InternalRef() terra.Reference {
	return raiaks.ref
}

func (raiaks ResourceAwsIamAccessKeyStatusAttributes) InternalWithRef(ref terra.Reference) ResourceAwsIamAccessKeyStatusAttributes {
	return ResourceAwsIamAccessKeyStatusAttributes{ref: ref}
}

func (raiaks ResourceAwsIamAccessKeyStatusAttributes) InternalTokens() hclwrite.Tokens {
	return raiaks.ref.InternalTokens()
}

func (raiaks ResourceAwsIamAccessKeyStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raiaks.ref.Append("comparison"))
}

func (raiaks ResourceAwsIamAccessKeyStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raiaks.ref.Append("value"))
}

type ResourceAwsIamAccessKeyUserNameAttributes struct {
	ref terra.Reference
}

func (raiakun ResourceAwsIamAccessKeyUserNameAttributes) InternalRef() terra.Reference {
	return raiakun.ref
}

func (raiakun ResourceAwsIamAccessKeyUserNameAttributes) InternalWithRef(ref terra.Reference) ResourceAwsIamAccessKeyUserNameAttributes {
	return ResourceAwsIamAccessKeyUserNameAttributes{ref: ref}
}

func (raiakun ResourceAwsIamAccessKeyUserNameAttributes) InternalTokens() hclwrite.Tokens {
	return raiakun.ref.InternalTokens()
}

func (raiakun ResourceAwsIamAccessKeyUserNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(raiakun.ref.Append("comparison"))
}

func (raiakun ResourceAwsIamAccessKeyUserNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(raiakun.ref.Append("value"))
}

type ResourceAwsS3BucketOwnerIdAttributes struct {
	ref terra.Reference
}

func (rasboi ResourceAwsS3BucketOwnerIdAttributes) InternalRef() terra.Reference {
	return rasboi.ref
}

func (rasboi ResourceAwsS3BucketOwnerIdAttributes) InternalWithRef(ref terra.Reference) ResourceAwsS3BucketOwnerIdAttributes {
	return ResourceAwsS3BucketOwnerIdAttributes{ref: ref}
}

func (rasboi ResourceAwsS3BucketOwnerIdAttributes) InternalTokens() hclwrite.Tokens {
	return rasboi.ref.InternalTokens()
}

func (rasboi ResourceAwsS3BucketOwnerIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rasboi.ref.Append("comparison"))
}

func (rasboi ResourceAwsS3BucketOwnerIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rasboi.ref.Append("value"))
}

type ResourceAwsS3BucketOwnerNameAttributes struct {
	ref terra.Reference
}

func (rasbon ResourceAwsS3BucketOwnerNameAttributes) InternalRef() terra.Reference {
	return rasbon.ref
}

func (rasbon ResourceAwsS3BucketOwnerNameAttributes) InternalWithRef(ref terra.Reference) ResourceAwsS3BucketOwnerNameAttributes {
	return ResourceAwsS3BucketOwnerNameAttributes{ref: ref}
}

func (rasbon ResourceAwsS3BucketOwnerNameAttributes) InternalTokens() hclwrite.Tokens {
	return rasbon.ref.InternalTokens()
}

func (rasbon ResourceAwsS3BucketOwnerNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rasbon.ref.Append("comparison"))
}

func (rasbon ResourceAwsS3BucketOwnerNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rasbon.ref.Append("value"))
}

type ResourceContainerImageIdAttributes struct {
	ref terra.Reference
}

func (rcii ResourceContainerImageIdAttributes) InternalRef() terra.Reference {
	return rcii.ref
}

func (rcii ResourceContainerImageIdAttributes) InternalWithRef(ref terra.Reference) ResourceContainerImageIdAttributes {
	return ResourceContainerImageIdAttributes{ref: ref}
}

func (rcii ResourceContainerImageIdAttributes) InternalTokens() hclwrite.Tokens {
	return rcii.ref.InternalTokens()
}

func (rcii ResourceContainerImageIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rcii.ref.Append("comparison"))
}

func (rcii ResourceContainerImageIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rcii.ref.Append("value"))
}

type ResourceContainerImageNameAttributes struct {
	ref terra.Reference
}

func (rcin ResourceContainerImageNameAttributes) InternalRef() terra.Reference {
	return rcin.ref
}

func (rcin ResourceContainerImageNameAttributes) InternalWithRef(ref terra.Reference) ResourceContainerImageNameAttributes {
	return ResourceContainerImageNameAttributes{ref: ref}
}

func (rcin ResourceContainerImageNameAttributes) InternalTokens() hclwrite.Tokens {
	return rcin.ref.InternalTokens()
}

func (rcin ResourceContainerImageNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rcin.ref.Append("comparison"))
}

func (rcin ResourceContainerImageNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rcin.ref.Append("value"))
}

type ResourceContainerLaunchedAtAttributes struct {
	ref terra.Reference
}

func (rcla ResourceContainerLaunchedAtAttributes) InternalRef() terra.Reference {
	return rcla.ref
}

func (rcla ResourceContainerLaunchedAtAttributes) InternalWithRef(ref terra.Reference) ResourceContainerLaunchedAtAttributes {
	return ResourceContainerLaunchedAtAttributes{ref: ref}
}

func (rcla ResourceContainerLaunchedAtAttributes) InternalTokens() hclwrite.Tokens {
	return rcla.ref.InternalTokens()
}

func (rcla ResourceContainerLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(rcla.ref.Append("end"))
}

func (rcla ResourceContainerLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(rcla.ref.Append("start"))
}

func (rcla ResourceContainerLaunchedAtAttributes) DateRange() terra.ListValue[ResourceContainerLaunchedAtDateRangeAttributes] {
	return terra.ReferenceList[ResourceContainerLaunchedAtDateRangeAttributes](rcla.ref.Append("date_range"))
}

type ResourceContainerLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr ResourceContainerLaunchedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr ResourceContainerLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) ResourceContainerLaunchedAtDateRangeAttributes {
	return ResourceContainerLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr ResourceContainerLaunchedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr ResourceContainerLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr ResourceContainerLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type ResourceContainerNameAttributes struct {
	ref terra.Reference
}

func (rcn ResourceContainerNameAttributes) InternalRef() terra.Reference {
	return rcn.ref
}

func (rcn ResourceContainerNameAttributes) InternalWithRef(ref terra.Reference) ResourceContainerNameAttributes {
	return ResourceContainerNameAttributes{ref: ref}
}

func (rcn ResourceContainerNameAttributes) InternalTokens() hclwrite.Tokens {
	return rcn.ref.InternalTokens()
}

func (rcn ResourceContainerNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rcn.ref.Append("comparison"))
}

func (rcn ResourceContainerNameAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rcn.ref.Append("value"))
}

type ResourceDetailsOtherAttributes struct {
	ref terra.Reference
}

func (rdo ResourceDetailsOtherAttributes) InternalRef() terra.Reference {
	return rdo.ref
}

func (rdo ResourceDetailsOtherAttributes) InternalWithRef(ref terra.Reference) ResourceDetailsOtherAttributes {
	return ResourceDetailsOtherAttributes{ref: ref}
}

func (rdo ResourceDetailsOtherAttributes) InternalTokens() hclwrite.Tokens {
	return rdo.ref.InternalTokens()
}

func (rdo ResourceDetailsOtherAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rdo.ref.Append("comparison"))
}

func (rdo ResourceDetailsOtherAttributes) Key() terra.StringValue {
	return terra.ReferenceString(rdo.ref.Append("key"))
}

func (rdo ResourceDetailsOtherAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rdo.ref.Append("value"))
}

type ResourceIdAttributes struct {
	ref terra.Reference
}

func (ri ResourceIdAttributes) InternalRef() terra.Reference {
	return ri.ref
}

func (ri ResourceIdAttributes) InternalWithRef(ref terra.Reference) ResourceIdAttributes {
	return ResourceIdAttributes{ref: ref}
}

func (ri ResourceIdAttributes) InternalTokens() hclwrite.Tokens {
	return ri.ref.InternalTokens()
}

func (ri ResourceIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("comparison"))
}

func (ri ResourceIdAttributes) Value() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("value"))
}

type ResourcePartitionAttributes struct {
	ref terra.Reference
}

func (rp ResourcePartitionAttributes) InternalRef() terra.Reference {
	return rp.ref
}

func (rp ResourcePartitionAttributes) InternalWithRef(ref terra.Reference) ResourcePartitionAttributes {
	return ResourcePartitionAttributes{ref: ref}
}

func (rp ResourcePartitionAttributes) InternalTokens() hclwrite.Tokens {
	return rp.ref.InternalTokens()
}

func (rp ResourcePartitionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rp.ref.Append("comparison"))
}

func (rp ResourcePartitionAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rp.ref.Append("value"))
}

type ResourceRegionAttributes struct {
	ref terra.Reference
}

func (rr ResourceRegionAttributes) InternalRef() terra.Reference {
	return rr.ref
}

func (rr ResourceRegionAttributes) InternalWithRef(ref terra.Reference) ResourceRegionAttributes {
	return ResourceRegionAttributes{ref: ref}
}

func (rr ResourceRegionAttributes) InternalTokens() hclwrite.Tokens {
	return rr.ref.InternalTokens()
}

func (rr ResourceRegionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rr.ref.Append("comparison"))
}

func (rr ResourceRegionAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rr.ref.Append("value"))
}

type ResourceTagsAttributes struct {
	ref terra.Reference
}

func (rt ResourceTagsAttributes) InternalRef() terra.Reference {
	return rt.ref
}

func (rt ResourceTagsAttributes) InternalWithRef(ref terra.Reference) ResourceTagsAttributes {
	return ResourceTagsAttributes{ref: ref}
}

func (rt ResourceTagsAttributes) InternalTokens() hclwrite.Tokens {
	return rt.ref.InternalTokens()
}

func (rt ResourceTagsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("comparison"))
}

func (rt ResourceTagsAttributes) Key() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("key"))
}

func (rt ResourceTagsAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("value"))
}

type ResourceTypeAttributes struct {
	ref terra.Reference
}

func (rt ResourceTypeAttributes) InternalRef() terra.Reference {
	return rt.ref
}

func (rt ResourceTypeAttributes) InternalWithRef(ref terra.Reference) ResourceTypeAttributes {
	return ResourceTypeAttributes{ref: ref}
}

func (rt ResourceTypeAttributes) InternalTokens() hclwrite.Tokens {
	return rt.ref.InternalTokens()
}

func (rt ResourceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("comparison"))
}

func (rt ResourceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("value"))
}

type SeverityLabelAttributes struct {
	ref terra.Reference
}

func (sl SeverityLabelAttributes) InternalRef() terra.Reference {
	return sl.ref
}

func (sl SeverityLabelAttributes) InternalWithRef(ref terra.Reference) SeverityLabelAttributes {
	return SeverityLabelAttributes{ref: ref}
}

func (sl SeverityLabelAttributes) InternalTokens() hclwrite.Tokens {
	return sl.ref.InternalTokens()
}

func (sl SeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(sl.ref.Append("comparison"))
}

func (sl SeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceString(sl.ref.Append("value"))
}

type SourceUrlAttributes struct {
	ref terra.Reference
}

func (su SourceUrlAttributes) InternalRef() terra.Reference {
	return su.ref
}

func (su SourceUrlAttributes) InternalWithRef(ref terra.Reference) SourceUrlAttributes {
	return SourceUrlAttributes{ref: ref}
}

func (su SourceUrlAttributes) InternalTokens() hclwrite.Tokens {
	return su.ref.InternalTokens()
}

func (su SourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(su.ref.Append("comparison"))
}

func (su SourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceString(su.ref.Append("value"))
}

type ThreatIntelIndicatorCategoryAttributes struct {
	ref terra.Reference
}

func (tiic ThreatIntelIndicatorCategoryAttributes) InternalRef() terra.Reference {
	return tiic.ref
}

func (tiic ThreatIntelIndicatorCategoryAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorCategoryAttributes {
	return ThreatIntelIndicatorCategoryAttributes{ref: ref}
}

func (tiic ThreatIntelIndicatorCategoryAttributes) InternalTokens() hclwrite.Tokens {
	return tiic.ref.InternalTokens()
}

func (tiic ThreatIntelIndicatorCategoryAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(tiic.ref.Append("comparison"))
}

func (tiic ThreatIntelIndicatorCategoryAttributes) Value() terra.StringValue {
	return terra.ReferenceString(tiic.ref.Append("value"))
}

type ThreatIntelIndicatorLastObservedAtAttributes struct {
	ref terra.Reference
}

func (tiiloa ThreatIntelIndicatorLastObservedAtAttributes) InternalRef() terra.Reference {
	return tiiloa.ref
}

func (tiiloa ThreatIntelIndicatorLastObservedAtAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorLastObservedAtAttributes {
	return ThreatIntelIndicatorLastObservedAtAttributes{ref: ref}
}

func (tiiloa ThreatIntelIndicatorLastObservedAtAttributes) InternalTokens() hclwrite.Tokens {
	return tiiloa.ref.InternalTokens()
}

func (tiiloa ThreatIntelIndicatorLastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(tiiloa.ref.Append("end"))
}

func (tiiloa ThreatIntelIndicatorLastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(tiiloa.ref.Append("start"))
}

func (tiiloa ThreatIntelIndicatorLastObservedAtAttributes) DateRange() terra.ListValue[ThreatIntelIndicatorLastObservedAtDateRangeAttributes] {
	return terra.ReferenceList[ThreatIntelIndicatorLastObservedAtDateRangeAttributes](tiiloa.ref.Append("date_range"))
}

type ThreatIntelIndicatorLastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr ThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr ThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorLastObservedAtDateRangeAttributes {
	return ThreatIntelIndicatorLastObservedAtDateRangeAttributes{ref: ref}
}

func (dr ThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr ThreatIntelIndicatorLastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr ThreatIntelIndicatorLastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type ThreatIntelIndicatorSourceAttributes struct {
	ref terra.Reference
}

func (tiis ThreatIntelIndicatorSourceAttributes) InternalRef() terra.Reference {
	return tiis.ref
}

func (tiis ThreatIntelIndicatorSourceAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorSourceAttributes {
	return ThreatIntelIndicatorSourceAttributes{ref: ref}
}

func (tiis ThreatIntelIndicatorSourceAttributes) InternalTokens() hclwrite.Tokens {
	return tiis.ref.InternalTokens()
}

func (tiis ThreatIntelIndicatorSourceAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(tiis.ref.Append("comparison"))
}

func (tiis ThreatIntelIndicatorSourceAttributes) Value() terra.StringValue {
	return terra.ReferenceString(tiis.ref.Append("value"))
}

type ThreatIntelIndicatorSourceUrlAttributes struct {
	ref terra.Reference
}

func (tiisu ThreatIntelIndicatorSourceUrlAttributes) InternalRef() terra.Reference {
	return tiisu.ref
}

func (tiisu ThreatIntelIndicatorSourceUrlAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorSourceUrlAttributes {
	return ThreatIntelIndicatorSourceUrlAttributes{ref: ref}
}

func (tiisu ThreatIntelIndicatorSourceUrlAttributes) InternalTokens() hclwrite.Tokens {
	return tiisu.ref.InternalTokens()
}

func (tiisu ThreatIntelIndicatorSourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(tiisu.ref.Append("comparison"))
}

func (tiisu ThreatIntelIndicatorSourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceString(tiisu.ref.Append("value"))
}

type ThreatIntelIndicatorTypeAttributes struct {
	ref terra.Reference
}

func (tiit ThreatIntelIndicatorTypeAttributes) InternalRef() terra.Reference {
	return tiit.ref
}

func (tiit ThreatIntelIndicatorTypeAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorTypeAttributes {
	return ThreatIntelIndicatorTypeAttributes{ref: ref}
}

func (tiit ThreatIntelIndicatorTypeAttributes) InternalTokens() hclwrite.Tokens {
	return tiit.ref.InternalTokens()
}

func (tiit ThreatIntelIndicatorTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(tiit.ref.Append("comparison"))
}

func (tiit ThreatIntelIndicatorTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceString(tiit.ref.Append("value"))
}

type ThreatIntelIndicatorValueAttributes struct {
	ref terra.Reference
}

func (tiiv ThreatIntelIndicatorValueAttributes) InternalRef() terra.Reference {
	return tiiv.ref
}

func (tiiv ThreatIntelIndicatorValueAttributes) InternalWithRef(ref terra.Reference) ThreatIntelIndicatorValueAttributes {
	return ThreatIntelIndicatorValueAttributes{ref: ref}
}

func (tiiv ThreatIntelIndicatorValueAttributes) InternalTokens() hclwrite.Tokens {
	return tiiv.ref.InternalTokens()
}

func (tiiv ThreatIntelIndicatorValueAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(tiiv.ref.Append("comparison"))
}

func (tiiv ThreatIntelIndicatorValueAttributes) Value() terra.StringValue {
	return terra.ReferenceString(tiiv.ref.Append("value"))
}

type TitleAttributes struct {
	ref terra.Reference
}

func (t TitleAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TitleAttributes) InternalWithRef(ref terra.Reference) TitleAttributes {
	return TitleAttributes{ref: ref}
}

func (t TitleAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TitleAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("comparison"))
}

func (t TitleAttributes) Value() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("value"))
}

type TypeAttributes struct {
	ref terra.Reference
}

func (t TypeAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TypeAttributes) InternalWithRef(ref terra.Reference) TypeAttributes {
	return TypeAttributes{ref: ref}
}

func (t TypeAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("comparison"))
}

func (t TypeAttributes) Value() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("value"))
}

type UpdatedAtAttributes struct {
	ref terra.Reference
}

func (ua UpdatedAtAttributes) InternalRef() terra.Reference {
	return ua.ref
}

func (ua UpdatedAtAttributes) InternalWithRef(ref terra.Reference) UpdatedAtAttributes {
	return UpdatedAtAttributes{ref: ref}
}

func (ua UpdatedAtAttributes) InternalTokens() hclwrite.Tokens {
	return ua.ref.InternalTokens()
}

func (ua UpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceString(ua.ref.Append("end"))
}

func (ua UpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceString(ua.ref.Append("start"))
}

func (ua UpdatedAtAttributes) DateRange() terra.ListValue[UpdatedAtDateRangeAttributes] {
	return terra.ReferenceList[UpdatedAtDateRangeAttributes](ua.ref.Append("date_range"))
}

type UpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr UpdatedAtDateRangeAttributes) InternalRef() terra.Reference {
	return dr.ref
}

func (dr UpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) UpdatedAtDateRangeAttributes {
	return UpdatedAtDateRangeAttributes{ref: ref}
}

func (dr UpdatedAtDateRangeAttributes) InternalTokens() hclwrite.Tokens {
	return dr.ref.InternalTokens()
}

func (dr UpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceString(dr.ref.Append("unit"))
}

func (dr UpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceNumber(dr.ref.Append("value"))
}

type UserDefinedValuesAttributes struct {
	ref terra.Reference
}

func (udv UserDefinedValuesAttributes) InternalRef() terra.Reference {
	return udv.ref
}

func (udv UserDefinedValuesAttributes) InternalWithRef(ref terra.Reference) UserDefinedValuesAttributes {
	return UserDefinedValuesAttributes{ref: ref}
}

func (udv UserDefinedValuesAttributes) InternalTokens() hclwrite.Tokens {
	return udv.ref.InternalTokens()
}

func (udv UserDefinedValuesAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(udv.ref.Append("comparison"))
}

func (udv UserDefinedValuesAttributes) Key() terra.StringValue {
	return terra.ReferenceString(udv.ref.Append("key"))
}

func (udv UserDefinedValuesAttributes) Value() terra.StringValue {
	return terra.ReferenceString(udv.ref.Append("value"))
}

type VerificationStateAttributes struct {
	ref terra.Reference
}

func (vs VerificationStateAttributes) InternalRef() terra.Reference {
	return vs.ref
}

func (vs VerificationStateAttributes) InternalWithRef(ref terra.Reference) VerificationStateAttributes {
	return VerificationStateAttributes{ref: ref}
}

func (vs VerificationStateAttributes) InternalTokens() hclwrite.Tokens {
	return vs.ref.InternalTokens()
}

func (vs VerificationStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(vs.ref.Append("comparison"))
}

func (vs VerificationStateAttributes) Value() terra.StringValue {
	return terra.ReferenceString(vs.ref.Append("value"))
}

type WorkflowStatusAttributes struct {
	ref terra.Reference
}

func (ws WorkflowStatusAttributes) InternalRef() terra.Reference {
	return ws.ref
}

func (ws WorkflowStatusAttributes) InternalWithRef(ref terra.Reference) WorkflowStatusAttributes {
	return WorkflowStatusAttributes{ref: ref}
}

func (ws WorkflowStatusAttributes) InternalTokens() hclwrite.Tokens {
	return ws.ref.InternalTokens()
}

func (ws WorkflowStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceString(ws.ref.Append("comparison"))
}

func (ws WorkflowStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceString(ws.ref.Append("value"))
}

type FiltersState struct {
	AwsAccountId                                   []AwsAccountIdState                                   `json:"aws_account_id"`
	CompanyName                                    []CompanyNameState                                    `json:"company_name"`
	ComplianceStatus                               []ComplianceStatusState                               `json:"compliance_status"`
	Confidence                                     []ConfidenceState                                     `json:"confidence"`
	CreatedAt                                      []CreatedAtState                                      `json:"created_at"`
	Criticality                                    []CriticalityState                                    `json:"criticality"`
	Description                                    []DescriptionState                                    `json:"description"`
	FindingProviderFieldsConfidence                []FindingProviderFieldsConfidenceState                `json:"finding_provider_fields_confidence"`
	FindingProviderFieldsCriticality               []FindingProviderFieldsCriticalityState               `json:"finding_provider_fields_criticality"`
	FindingProviderFieldsRelatedFindingsId         []FindingProviderFieldsRelatedFindingsIdState         `json:"finding_provider_fields_related_findings_id"`
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArnState `json:"finding_provider_fields_related_findings_product_arn"`
	FindingProviderFieldsSeverityLabel             []FindingProviderFieldsSeverityLabelState             `json:"finding_provider_fields_severity_label"`
	FindingProviderFieldsSeverityOriginal          []FindingProviderFieldsSeverityOriginalState          `json:"finding_provider_fields_severity_original"`
	FindingProviderFieldsTypes                     []FindingProviderFieldsTypesState                     `json:"finding_provider_fields_types"`
	FirstObservedAt                                []FirstObservedAtState                                `json:"first_observed_at"`
	GeneratorId                                    []GeneratorIdState                                    `json:"generator_id"`
	Id                                             []IdState                                             `json:"id"`
	Keyword                                        []KeywordState                                        `json:"keyword"`
	LastObservedAt                                 []LastObservedAtState                                 `json:"last_observed_at"`
	MalwareName                                    []MalwareNameState                                    `json:"malware_name"`
	MalwarePath                                    []MalwarePathState                                    `json:"malware_path"`
	MalwareState                                   []MalwareStateState                                   `json:"malware_state"`
	MalwareType                                    []MalwareTypeState                                    `json:"malware_type"`
	NetworkDestinationDomain                       []NetworkDestinationDomainState                       `json:"network_destination_domain"`
	NetworkDestinationIpv4                         []NetworkDestinationIpv4State                         `json:"network_destination_ipv4"`
	NetworkDestinationIpv6                         []NetworkDestinationIpv6State                         `json:"network_destination_ipv6"`
	NetworkDestinationPort                         []NetworkDestinationPortState                         `json:"network_destination_port"`
	NetworkDirection                               []NetworkDirectionState                               `json:"network_direction"`
	NetworkProtocol                                []NetworkProtocolState                                `json:"network_protocol"`
	NetworkSourceDomain                            []NetworkSourceDomainState                            `json:"network_source_domain"`
	NetworkSourceIpv4                              []NetworkSourceIpv4State                              `json:"network_source_ipv4"`
	NetworkSourceIpv6                              []NetworkSourceIpv6State                              `json:"network_source_ipv6"`
	NetworkSourceMac                               []NetworkSourceMacState                               `json:"network_source_mac"`
	NetworkSourcePort                              []NetworkSourcePortState                              `json:"network_source_port"`
	NoteText                                       []NoteTextState                                       `json:"note_text"`
	NoteUpdatedAt                                  []NoteUpdatedAtState                                  `json:"note_updated_at"`
	NoteUpdatedBy                                  []NoteUpdatedByState                                  `json:"note_updated_by"`
	ProcessLaunchedAt                              []ProcessLaunchedAtState                              `json:"process_launched_at"`
	ProcessName                                    []ProcessNameState                                    `json:"process_name"`
	ProcessParentPid                               []ProcessParentPidState                               `json:"process_parent_pid"`
	ProcessPath                                    []ProcessPathState                                    `json:"process_path"`
	ProcessPid                                     []ProcessPidState                                     `json:"process_pid"`
	ProcessTerminatedAt                            []ProcessTerminatedAtState                            `json:"process_terminated_at"`
	ProductArn                                     []ProductArnState                                     `json:"product_arn"`
	ProductFields                                  []ProductFieldsState                                  `json:"product_fields"`
	ProductName                                    []ProductNameState                                    `json:"product_name"`
	RecommendationText                             []RecommendationTextState                             `json:"recommendation_text"`
	RecordState                                    []RecordStateState                                    `json:"record_state"`
	RelatedFindingsId                              []RelatedFindingsIdState                              `json:"related_findings_id"`
	RelatedFindingsProductArn                      []RelatedFindingsProductArnState                      `json:"related_findings_product_arn"`
	ResourceAwsEc2InstanceIamInstanceProfileArn    []ResourceAwsEc2InstanceIamInstanceProfileArnState    `json:"resource_aws_ec2_instance_iam_instance_profile_arn"`
	ResourceAwsEc2InstanceImageId                  []ResourceAwsEc2InstanceImageIdState                  `json:"resource_aws_ec2_instance_image_id"`
	ResourceAwsEc2InstanceIpv4Addresses            []ResourceAwsEc2InstanceIpv4AddressesState            `json:"resource_aws_ec2_instance_ipv4_addresses"`
	ResourceAwsEc2InstanceIpv6Addresses            []ResourceAwsEc2InstanceIpv6AddressesState            `json:"resource_aws_ec2_instance_ipv6_addresses"`
	ResourceAwsEc2InstanceKeyName                  []ResourceAwsEc2InstanceKeyNameState                  `json:"resource_aws_ec2_instance_key_name"`
	ResourceAwsEc2InstanceLaunchedAt               []ResourceAwsEc2InstanceLaunchedAtState               `json:"resource_aws_ec2_instance_launched_at"`
	ResourceAwsEc2InstanceSubnetId                 []ResourceAwsEc2InstanceSubnetIdState                 `json:"resource_aws_ec2_instance_subnet_id"`
	ResourceAwsEc2InstanceType                     []ResourceAwsEc2InstanceTypeState                     `json:"resource_aws_ec2_instance_type"`
	ResourceAwsEc2InstanceVpcId                    []ResourceAwsEc2InstanceVpcIdState                    `json:"resource_aws_ec2_instance_vpc_id"`
	ResourceAwsIamAccessKeyCreatedAt               []ResourceAwsIamAccessKeyCreatedAtState               `json:"resource_aws_iam_access_key_created_at"`
	ResourceAwsIamAccessKeyStatus                  []ResourceAwsIamAccessKeyStatusState                  `json:"resource_aws_iam_access_key_status"`
	ResourceAwsIamAccessKeyUserName                []ResourceAwsIamAccessKeyUserNameState                `json:"resource_aws_iam_access_key_user_name"`
	ResourceAwsS3BucketOwnerId                     []ResourceAwsS3BucketOwnerIdState                     `json:"resource_aws_s3_bucket_owner_id"`
	ResourceAwsS3BucketOwnerName                   []ResourceAwsS3BucketOwnerNameState                   `json:"resource_aws_s3_bucket_owner_name"`
	ResourceContainerImageId                       []ResourceContainerImageIdState                       `json:"resource_container_image_id"`
	ResourceContainerImageName                     []ResourceContainerImageNameState                     `json:"resource_container_image_name"`
	ResourceContainerLaunchedAt                    []ResourceContainerLaunchedAtState                    `json:"resource_container_launched_at"`
	ResourceContainerName                          []ResourceContainerNameState                          `json:"resource_container_name"`
	ResourceDetailsOther                           []ResourceDetailsOtherState                           `json:"resource_details_other"`
	ResourceId                                     []ResourceIdState                                     `json:"resource_id"`
	ResourcePartition                              []ResourcePartitionState                              `json:"resource_partition"`
	ResourceRegion                                 []ResourceRegionState                                 `json:"resource_region"`
	ResourceTags                                   []ResourceTagsState                                   `json:"resource_tags"`
	ResourceType                                   []ResourceTypeState                                   `json:"resource_type"`
	SeverityLabel                                  []SeverityLabelState                                  `json:"severity_label"`
	SourceUrl                                      []SourceUrlState                                      `json:"source_url"`
	ThreatIntelIndicatorCategory                   []ThreatIntelIndicatorCategoryState                   `json:"threat_intel_indicator_category"`
	ThreatIntelIndicatorLastObservedAt             []ThreatIntelIndicatorLastObservedAtState             `json:"threat_intel_indicator_last_observed_at"`
	ThreatIntelIndicatorSource                     []ThreatIntelIndicatorSourceState                     `json:"threat_intel_indicator_source"`
	ThreatIntelIndicatorSourceUrl                  []ThreatIntelIndicatorSourceUrlState                  `json:"threat_intel_indicator_source_url"`
	ThreatIntelIndicatorType                       []ThreatIntelIndicatorTypeState                       `json:"threat_intel_indicator_type"`
	ThreatIntelIndicatorValue                      []ThreatIntelIndicatorValueState                      `json:"threat_intel_indicator_value"`
	Title                                          []TitleState                                          `json:"title"`
	Type                                           []TypeState                                           `json:"type"`
	UpdatedAt                                      []UpdatedAtState                                      `json:"updated_at"`
	UserDefinedValues                              []UserDefinedValuesState                              `json:"user_defined_values"`
	VerificationState                              []VerificationStateState                              `json:"verification_state"`
	WorkflowStatus                                 []WorkflowStatusState                                 `json:"workflow_status"`
}

type AwsAccountIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type CompanyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ComplianceStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ConfidenceState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type CreatedAtState struct {
	End       string                    `json:"end"`
	Start     string                    `json:"start"`
	DateRange []CreatedAtDateRangeState `json:"date_range"`
}

type CreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type CriticalityState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type DescriptionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FindingProviderFieldsConfidenceState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FindingProviderFieldsCriticalityState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FindingProviderFieldsRelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FindingProviderFieldsRelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FindingProviderFieldsSeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FindingProviderFieldsSeverityOriginalState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FindingProviderFieldsTypesState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FirstObservedAtState struct {
	End       string                          `json:"end"`
	Start     string                          `json:"start"`
	DateRange []FirstObservedAtDateRangeState `json:"date_range"`
}

type FirstObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type GeneratorIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type IdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type KeywordState struct {
	Value string `json:"value"`
}

type LastObservedAtState struct {
	End       string                         `json:"end"`
	Start     string                         `json:"start"`
	DateRange []LastObservedAtDateRangeState `json:"date_range"`
}

type LastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type MalwareNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type MalwarePathState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type MalwareStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type MalwareTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NetworkDestinationDomainState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NetworkDestinationIpv4State struct {
	Cidr string `json:"cidr"`
}

type NetworkDestinationIpv6State struct {
	Cidr string `json:"cidr"`
}

type NetworkDestinationPortState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type NetworkDirectionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NetworkProtocolState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NetworkSourceDomainState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NetworkSourceIpv4State struct {
	Cidr string `json:"cidr"`
}

type NetworkSourceIpv6State struct {
	Cidr string `json:"cidr"`
}

type NetworkSourceMacState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NetworkSourcePortState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type NoteTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type NoteUpdatedAtState struct {
	End       string                        `json:"end"`
	Start     string                        `json:"start"`
	DateRange []NoteUpdatedAtDateRangeState `json:"date_range"`
}

type NoteUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type NoteUpdatedByState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ProcessLaunchedAtState struct {
	End       string                            `json:"end"`
	Start     string                            `json:"start"`
	DateRange []ProcessLaunchedAtDateRangeState `json:"date_range"`
}

type ProcessLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type ProcessNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ProcessParentPidState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type ProcessPathState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ProcessPidState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type ProcessTerminatedAtState struct {
	End       string                              `json:"end"`
	Start     string                              `json:"start"`
	DateRange []ProcessTerminatedAtDateRangeState `json:"date_range"`
}

type ProcessTerminatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type ProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ProductFieldsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type ProductNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type RecommendationTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type RecordStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type RelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type RelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsEc2InstanceIamInstanceProfileArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsEc2InstanceImageIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsEc2InstanceIpv4AddressesState struct {
	Cidr string `json:"cidr"`
}

type ResourceAwsEc2InstanceIpv6AddressesState struct {
	Cidr string `json:"cidr"`
}

type ResourceAwsEc2InstanceKeyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsEc2InstanceLaunchedAtState struct {
	End       string                                           `json:"end"`
	Start     string                                           `json:"start"`
	DateRange []ResourceAwsEc2InstanceLaunchedAtDateRangeState `json:"date_range"`
}

type ResourceAwsEc2InstanceLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type ResourceAwsEc2InstanceSubnetIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsEc2InstanceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsEc2InstanceVpcIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsIamAccessKeyCreatedAtState struct {
	End       string                                           `json:"end"`
	Start     string                                           `json:"start"`
	DateRange []ResourceAwsIamAccessKeyCreatedAtDateRangeState `json:"date_range"`
}

type ResourceAwsIamAccessKeyCreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type ResourceAwsIamAccessKeyStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsIamAccessKeyUserNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsS3BucketOwnerIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceAwsS3BucketOwnerNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceContainerImageIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceContainerImageNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceContainerLaunchedAtState struct {
	End       string                                      `json:"end"`
	Start     string                                      `json:"start"`
	DateRange []ResourceContainerLaunchedAtDateRangeState `json:"date_range"`
}

type ResourceContainerLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type ResourceContainerNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceDetailsOtherState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type ResourceIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourcePartitionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceRegionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ResourceTagsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type ResourceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type SeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type SourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ThreatIntelIndicatorCategoryState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ThreatIntelIndicatorLastObservedAtState struct {
	End       string                                             `json:"end"`
	Start     string                                             `json:"start"`
	DateRange []ThreatIntelIndicatorLastObservedAtDateRangeState `json:"date_range"`
}

type ThreatIntelIndicatorLastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type ThreatIntelIndicatorSourceState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ThreatIntelIndicatorSourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ThreatIntelIndicatorTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type ThreatIntelIndicatorValueState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type TitleState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type TypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type UpdatedAtState struct {
	End       string                    `json:"end"`
	Start     string                    `json:"start"`
	DateRange []UpdatedAtDateRangeState `json:"date_range"`
}

type UpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type UserDefinedValuesState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type VerificationStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type WorkflowStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}
