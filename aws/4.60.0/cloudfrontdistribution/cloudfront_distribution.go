// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package cloudfrontdistribution

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type TrustedKeyGroups struct {
	// TrustedKeyGroupsItems: min=0
	Items []TrustedKeyGroupsItems `hcl:"items,block" validate:"min=0"`
}

type TrustedKeyGroupsItems struct{}

type TrustedSigners struct {
	// TrustedSignersItems: min=0
	Items []TrustedSignersItems `hcl:"items,block" validate:"min=0"`
}

type TrustedSignersItems struct{}

type CustomErrorResponse struct {
	// ErrorCachingMinTtl: number, optional
	ErrorCachingMinTtl terra.NumberValue `hcl:"error_caching_min_ttl,attr"`
	// ErrorCode: number, required
	ErrorCode terra.NumberValue `hcl:"error_code,attr" validate:"required"`
	// ResponseCode: number, optional
	ResponseCode terra.NumberValue `hcl:"response_code,attr"`
	// ResponsePagePath: string, optional
	ResponsePagePath terra.StringValue `hcl:"response_page_path,attr"`
}

type DefaultCacheBehavior struct {
	// AllowedMethods: set of string, required
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr" validate:"required"`
	// CachePolicyId: string, optional
	CachePolicyId terra.StringValue `hcl:"cache_policy_id,attr"`
	// CachedMethods: set of string, required
	CachedMethods terra.SetValue[terra.StringValue] `hcl:"cached_methods,attr" validate:"required"`
	// Compress: bool, optional
	Compress terra.BoolValue `hcl:"compress,attr"`
	// DefaultTtl: number, optional
	DefaultTtl terra.NumberValue `hcl:"default_ttl,attr"`
	// FieldLevelEncryptionId: string, optional
	FieldLevelEncryptionId terra.StringValue `hcl:"field_level_encryption_id,attr"`
	// MaxTtl: number, optional
	MaxTtl terra.NumberValue `hcl:"max_ttl,attr"`
	// MinTtl: number, optional
	MinTtl terra.NumberValue `hcl:"min_ttl,attr"`
	// OriginRequestPolicyId: string, optional
	OriginRequestPolicyId terra.StringValue `hcl:"origin_request_policy_id,attr"`
	// RealtimeLogConfigArn: string, optional
	RealtimeLogConfigArn terra.StringValue `hcl:"realtime_log_config_arn,attr"`
	// ResponseHeadersPolicyId: string, optional
	ResponseHeadersPolicyId terra.StringValue `hcl:"response_headers_policy_id,attr"`
	// SmoothStreaming: bool, optional
	SmoothStreaming terra.BoolValue `hcl:"smooth_streaming,attr"`
	// TargetOriginId: string, required
	TargetOriginId terra.StringValue `hcl:"target_origin_id,attr" validate:"required"`
	// TrustedKeyGroups: list of string, optional
	TrustedKeyGroups terra.ListValue[terra.StringValue] `hcl:"trusted_key_groups,attr"`
	// TrustedSigners: list of string, optional
	TrustedSigners terra.ListValue[terra.StringValue] `hcl:"trusted_signers,attr"`
	// ViewerProtocolPolicy: string, required
	ViewerProtocolPolicy terra.StringValue `hcl:"viewer_protocol_policy,attr" validate:"required"`
	// DefaultCacheBehaviorForwardedValues: optional
	ForwardedValues *DefaultCacheBehaviorForwardedValues `hcl:"forwarded_values,block"`
	// DefaultCacheBehaviorFunctionAssociation: min=0,max=2
	FunctionAssociation []DefaultCacheBehaviorFunctionAssociation `hcl:"function_association,block" validate:"min=0,max=2"`
	// DefaultCacheBehaviorLambdaFunctionAssociation: min=0,max=4
	LambdaFunctionAssociation []DefaultCacheBehaviorLambdaFunctionAssociation `hcl:"lambda_function_association,block" validate:"min=0,max=4"`
}

type DefaultCacheBehaviorForwardedValues struct {
	// Headers: set of string, optional
	Headers terra.SetValue[terra.StringValue] `hcl:"headers,attr"`
	// QueryString: bool, required
	QueryString terra.BoolValue `hcl:"query_string,attr" validate:"required"`
	// QueryStringCacheKeys: list of string, optional
	QueryStringCacheKeys terra.ListValue[terra.StringValue] `hcl:"query_string_cache_keys,attr"`
	// DefaultCacheBehaviorForwardedValuesCookies: required
	Cookies *DefaultCacheBehaviorForwardedValuesCookies `hcl:"cookies,block" validate:"required"`
}

type DefaultCacheBehaviorForwardedValuesCookies struct {
	// Forward: string, required
	Forward terra.StringValue `hcl:"forward,attr" validate:"required"`
	// WhitelistedNames: set of string, optional
	WhitelistedNames terra.SetValue[terra.StringValue] `hcl:"whitelisted_names,attr"`
}

type DefaultCacheBehaviorFunctionAssociation struct {
	// EventType: string, required
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// FunctionArn: string, required
	FunctionArn terra.StringValue `hcl:"function_arn,attr" validate:"required"`
}

type DefaultCacheBehaviorLambdaFunctionAssociation struct {
	// EventType: string, required
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// IncludeBody: bool, optional
	IncludeBody terra.BoolValue `hcl:"include_body,attr"`
	// LambdaArn: string, required
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
}

type LoggingConfig struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// IncludeCookies: bool, optional
	IncludeCookies terra.BoolValue `hcl:"include_cookies,attr"`
	// Prefix: string, optional
	Prefix terra.StringValue `hcl:"prefix,attr"`
}

type OrderedCacheBehavior struct {
	// AllowedMethods: set of string, required
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr" validate:"required"`
	// CachePolicyId: string, optional
	CachePolicyId terra.StringValue `hcl:"cache_policy_id,attr"`
	// CachedMethods: set of string, required
	CachedMethods terra.SetValue[terra.StringValue] `hcl:"cached_methods,attr" validate:"required"`
	// Compress: bool, optional
	Compress terra.BoolValue `hcl:"compress,attr"`
	// DefaultTtl: number, optional
	DefaultTtl terra.NumberValue `hcl:"default_ttl,attr"`
	// FieldLevelEncryptionId: string, optional
	FieldLevelEncryptionId terra.StringValue `hcl:"field_level_encryption_id,attr"`
	// MaxTtl: number, optional
	MaxTtl terra.NumberValue `hcl:"max_ttl,attr"`
	// MinTtl: number, optional
	MinTtl terra.NumberValue `hcl:"min_ttl,attr"`
	// OriginRequestPolicyId: string, optional
	OriginRequestPolicyId terra.StringValue `hcl:"origin_request_policy_id,attr"`
	// PathPattern: string, required
	PathPattern terra.StringValue `hcl:"path_pattern,attr" validate:"required"`
	// RealtimeLogConfigArn: string, optional
	RealtimeLogConfigArn terra.StringValue `hcl:"realtime_log_config_arn,attr"`
	// ResponseHeadersPolicyId: string, optional
	ResponseHeadersPolicyId terra.StringValue `hcl:"response_headers_policy_id,attr"`
	// SmoothStreaming: bool, optional
	SmoothStreaming terra.BoolValue `hcl:"smooth_streaming,attr"`
	// TargetOriginId: string, required
	TargetOriginId terra.StringValue `hcl:"target_origin_id,attr" validate:"required"`
	// TrustedKeyGroups: list of string, optional
	TrustedKeyGroups terra.ListValue[terra.StringValue] `hcl:"trusted_key_groups,attr"`
	// TrustedSigners: list of string, optional
	TrustedSigners terra.ListValue[terra.StringValue] `hcl:"trusted_signers,attr"`
	// ViewerProtocolPolicy: string, required
	ViewerProtocolPolicy terra.StringValue `hcl:"viewer_protocol_policy,attr" validate:"required"`
	// OrderedCacheBehaviorForwardedValues: optional
	ForwardedValues *OrderedCacheBehaviorForwardedValues `hcl:"forwarded_values,block"`
	// OrderedCacheBehaviorFunctionAssociation: min=0,max=2
	FunctionAssociation []OrderedCacheBehaviorFunctionAssociation `hcl:"function_association,block" validate:"min=0,max=2"`
	// OrderedCacheBehaviorLambdaFunctionAssociation: min=0,max=4
	LambdaFunctionAssociation []OrderedCacheBehaviorLambdaFunctionAssociation `hcl:"lambda_function_association,block" validate:"min=0,max=4"`
}

type OrderedCacheBehaviorForwardedValues struct {
	// Headers: set of string, optional
	Headers terra.SetValue[terra.StringValue] `hcl:"headers,attr"`
	// QueryString: bool, required
	QueryString terra.BoolValue `hcl:"query_string,attr" validate:"required"`
	// QueryStringCacheKeys: list of string, optional
	QueryStringCacheKeys terra.ListValue[terra.StringValue] `hcl:"query_string_cache_keys,attr"`
	// OrderedCacheBehaviorForwardedValuesCookies: required
	Cookies *OrderedCacheBehaviorForwardedValuesCookies `hcl:"cookies,block" validate:"required"`
}

type OrderedCacheBehaviorForwardedValuesCookies struct {
	// Forward: string, required
	Forward terra.StringValue `hcl:"forward,attr" validate:"required"`
	// WhitelistedNames: set of string, optional
	WhitelistedNames terra.SetValue[terra.StringValue] `hcl:"whitelisted_names,attr"`
}

type OrderedCacheBehaviorFunctionAssociation struct {
	// EventType: string, required
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// FunctionArn: string, required
	FunctionArn terra.StringValue `hcl:"function_arn,attr" validate:"required"`
}

type OrderedCacheBehaviorLambdaFunctionAssociation struct {
	// EventType: string, required
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// IncludeBody: bool, optional
	IncludeBody terra.BoolValue `hcl:"include_body,attr"`
	// LambdaArn: string, required
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
}

type Origin struct {
	// ConnectionAttempts: number, optional
	ConnectionAttempts terra.NumberValue `hcl:"connection_attempts,attr"`
	// ConnectionTimeout: number, optional
	ConnectionTimeout terra.NumberValue `hcl:"connection_timeout,attr"`
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// OriginAccessControlId: string, optional
	OriginAccessControlId terra.StringValue `hcl:"origin_access_control_id,attr"`
	// OriginId: string, required
	OriginId terra.StringValue `hcl:"origin_id,attr" validate:"required"`
	// OriginPath: string, optional
	OriginPath terra.StringValue `hcl:"origin_path,attr"`
	// CustomHeader: min=0
	CustomHeader []CustomHeader `hcl:"custom_header,block" validate:"min=0"`
	// CustomOriginConfig: optional
	CustomOriginConfig *CustomOriginConfig `hcl:"custom_origin_config,block"`
	// OriginShield: optional
	OriginShield *OriginShield `hcl:"origin_shield,block"`
	// S3OriginConfig: optional
	S3OriginConfig *S3OriginConfig `hcl:"s3_origin_config,block"`
}

type CustomHeader struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type CustomOriginConfig struct {
	// HttpPort: number, required
	HttpPort terra.NumberValue `hcl:"http_port,attr" validate:"required"`
	// HttpsPort: number, required
	HttpsPort terra.NumberValue `hcl:"https_port,attr" validate:"required"`
	// OriginKeepaliveTimeout: number, optional
	OriginKeepaliveTimeout terra.NumberValue `hcl:"origin_keepalive_timeout,attr"`
	// OriginProtocolPolicy: string, required
	OriginProtocolPolicy terra.StringValue `hcl:"origin_protocol_policy,attr" validate:"required"`
	// OriginReadTimeout: number, optional
	OriginReadTimeout terra.NumberValue `hcl:"origin_read_timeout,attr"`
	// OriginSslProtocols: set of string, required
	OriginSslProtocols terra.SetValue[terra.StringValue] `hcl:"origin_ssl_protocols,attr" validate:"required"`
}

type OriginShield struct {
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// OriginShieldRegion: string, required
	OriginShieldRegion terra.StringValue `hcl:"origin_shield_region,attr" validate:"required"`
}

type S3OriginConfig struct {
	// OriginAccessIdentity: string, required
	OriginAccessIdentity terra.StringValue `hcl:"origin_access_identity,attr" validate:"required"`
}

type OriginGroup struct {
	// OriginId: string, required
	OriginId terra.StringValue `hcl:"origin_id,attr" validate:"required"`
	// FailoverCriteria: required
	FailoverCriteria *FailoverCriteria `hcl:"failover_criteria,block" validate:"required"`
	// Member: min=2,max=2
	Member []Member `hcl:"member,block" validate:"min=2,max=2"`
}

type FailoverCriteria struct {
	// StatusCodes: set of number, required
	StatusCodes terra.SetValue[terra.NumberValue] `hcl:"status_codes,attr" validate:"required"`
}

type Member struct {
	// OriginId: string, required
	OriginId terra.StringValue `hcl:"origin_id,attr" validate:"required"`
}

type Restrictions struct {
	// GeoRestriction: required
	GeoRestriction *GeoRestriction `hcl:"geo_restriction,block" validate:"required"`
}

type GeoRestriction struct {
	// Locations: set of string, optional
	Locations terra.SetValue[terra.StringValue] `hcl:"locations,attr"`
	// RestrictionType: string, required
	RestrictionType terra.StringValue `hcl:"restriction_type,attr" validate:"required"`
}

type ViewerCertificate struct {
	// AcmCertificateArn: string, optional
	AcmCertificateArn terra.StringValue `hcl:"acm_certificate_arn,attr"`
	// CloudfrontDefaultCertificate: bool, optional
	CloudfrontDefaultCertificate terra.BoolValue `hcl:"cloudfront_default_certificate,attr"`
	// IamCertificateId: string, optional
	IamCertificateId terra.StringValue `hcl:"iam_certificate_id,attr"`
	// MinimumProtocolVersion: string, optional
	MinimumProtocolVersion terra.StringValue `hcl:"minimum_protocol_version,attr"`
	// SslSupportMethod: string, optional
	SslSupportMethod terra.StringValue `hcl:"ssl_support_method,attr"`
}

type TrustedKeyGroupsAttributes struct {
	ref terra.Reference
}

func (tkg TrustedKeyGroupsAttributes) InternalRef() terra.Reference {
	return tkg.ref
}

func (tkg TrustedKeyGroupsAttributes) InternalWithRef(ref terra.Reference) TrustedKeyGroupsAttributes {
	return TrustedKeyGroupsAttributes{ref: ref}
}

func (tkg TrustedKeyGroupsAttributes) InternalTokens() hclwrite.Tokens {
	return tkg.ref.InternalTokens()
}

func (tkg TrustedKeyGroupsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(tkg.ref.Append("enabled"))
}

func (tkg TrustedKeyGroupsAttributes) Items() terra.ListValue[TrustedKeyGroupsItemsAttributes] {
	return terra.ReferenceAsList[TrustedKeyGroupsItemsAttributes](tkg.ref.Append("items"))
}

type TrustedKeyGroupsItemsAttributes struct {
	ref terra.Reference
}

func (i TrustedKeyGroupsItemsAttributes) InternalRef() terra.Reference {
	return i.ref
}

func (i TrustedKeyGroupsItemsAttributes) InternalWithRef(ref terra.Reference) TrustedKeyGroupsItemsAttributes {
	return TrustedKeyGroupsItemsAttributes{ref: ref}
}

func (i TrustedKeyGroupsItemsAttributes) InternalTokens() hclwrite.Tokens {
	return i.ref.InternalTokens()
}

func (i TrustedKeyGroupsItemsAttributes) KeyGroupId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("key_group_id"))
}

func (i TrustedKeyGroupsItemsAttributes) KeyPairIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("key_pair_ids"))
}

type TrustedSignersAttributes struct {
	ref terra.Reference
}

func (ts TrustedSignersAttributes) InternalRef() terra.Reference {
	return ts.ref
}

func (ts TrustedSignersAttributes) InternalWithRef(ref terra.Reference) TrustedSignersAttributes {
	return TrustedSignersAttributes{ref: ref}
}

func (ts TrustedSignersAttributes) InternalTokens() hclwrite.Tokens {
	return ts.ref.InternalTokens()
}

func (ts TrustedSignersAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ts.ref.Append("enabled"))
}

func (ts TrustedSignersAttributes) Items() terra.ListValue[TrustedSignersItemsAttributes] {
	return terra.ReferenceAsList[TrustedSignersItemsAttributes](ts.ref.Append("items"))
}

type TrustedSignersItemsAttributes struct {
	ref terra.Reference
}

func (i TrustedSignersItemsAttributes) InternalRef() terra.Reference {
	return i.ref
}

func (i TrustedSignersItemsAttributes) InternalWithRef(ref terra.Reference) TrustedSignersItemsAttributes {
	return TrustedSignersItemsAttributes{ref: ref}
}

func (i TrustedSignersItemsAttributes) InternalTokens() hclwrite.Tokens {
	return i.ref.InternalTokens()
}

func (i TrustedSignersItemsAttributes) AwsAccountNumber() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("aws_account_number"))
}

func (i TrustedSignersItemsAttributes) KeyPairIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("key_pair_ids"))
}

type CustomErrorResponseAttributes struct {
	ref terra.Reference
}

func (cer CustomErrorResponseAttributes) InternalRef() terra.Reference {
	return cer.ref
}

func (cer CustomErrorResponseAttributes) InternalWithRef(ref terra.Reference) CustomErrorResponseAttributes {
	return CustomErrorResponseAttributes{ref: ref}
}

func (cer CustomErrorResponseAttributes) InternalTokens() hclwrite.Tokens {
	return cer.ref.InternalTokens()
}

func (cer CustomErrorResponseAttributes) ErrorCachingMinTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(cer.ref.Append("error_caching_min_ttl"))
}

func (cer CustomErrorResponseAttributes) ErrorCode() terra.NumberValue {
	return terra.ReferenceAsNumber(cer.ref.Append("error_code"))
}

func (cer CustomErrorResponseAttributes) ResponseCode() terra.NumberValue {
	return terra.ReferenceAsNumber(cer.ref.Append("response_code"))
}

func (cer CustomErrorResponseAttributes) ResponsePagePath() terra.StringValue {
	return terra.ReferenceAsString(cer.ref.Append("response_page_path"))
}

type DefaultCacheBehaviorAttributes struct {
	ref terra.Reference
}

func (dcb DefaultCacheBehaviorAttributes) InternalRef() terra.Reference {
	return dcb.ref
}

func (dcb DefaultCacheBehaviorAttributes) InternalWithRef(ref terra.Reference) DefaultCacheBehaviorAttributes {
	return DefaultCacheBehaviorAttributes{ref: ref}
}

func (dcb DefaultCacheBehaviorAttributes) InternalTokens() hclwrite.Tokens {
	return dcb.ref.InternalTokens()
}

func (dcb DefaultCacheBehaviorAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dcb.ref.Append("allowed_methods"))
}

func (dcb DefaultCacheBehaviorAttributes) CachePolicyId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("cache_policy_id"))
}

func (dcb DefaultCacheBehaviorAttributes) CachedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dcb.ref.Append("cached_methods"))
}

func (dcb DefaultCacheBehaviorAttributes) Compress() terra.BoolValue {
	return terra.ReferenceAsBool(dcb.ref.Append("compress"))
}

func (dcb DefaultCacheBehaviorAttributes) DefaultTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(dcb.ref.Append("default_ttl"))
}

func (dcb DefaultCacheBehaviorAttributes) FieldLevelEncryptionId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("field_level_encryption_id"))
}

func (dcb DefaultCacheBehaviorAttributes) MaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(dcb.ref.Append("max_ttl"))
}

func (dcb DefaultCacheBehaviorAttributes) MinTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(dcb.ref.Append("min_ttl"))
}

func (dcb DefaultCacheBehaviorAttributes) OriginRequestPolicyId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("origin_request_policy_id"))
}

func (dcb DefaultCacheBehaviorAttributes) RealtimeLogConfigArn() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("realtime_log_config_arn"))
}

func (dcb DefaultCacheBehaviorAttributes) ResponseHeadersPolicyId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("response_headers_policy_id"))
}

func (dcb DefaultCacheBehaviorAttributes) SmoothStreaming() terra.BoolValue {
	return terra.ReferenceAsBool(dcb.ref.Append("smooth_streaming"))
}

func (dcb DefaultCacheBehaviorAttributes) TargetOriginId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("target_origin_id"))
}

func (dcb DefaultCacheBehaviorAttributes) TrustedKeyGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dcb.ref.Append("trusted_key_groups"))
}

func (dcb DefaultCacheBehaviorAttributes) TrustedSigners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dcb.ref.Append("trusted_signers"))
}

func (dcb DefaultCacheBehaviorAttributes) ViewerProtocolPolicy() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("viewer_protocol_policy"))
}

func (dcb DefaultCacheBehaviorAttributes) ForwardedValues() terra.ListValue[DefaultCacheBehaviorForwardedValuesAttributes] {
	return terra.ReferenceAsList[DefaultCacheBehaviorForwardedValuesAttributes](dcb.ref.Append("forwarded_values"))
}

func (dcb DefaultCacheBehaviorAttributes) FunctionAssociation() terra.SetValue[DefaultCacheBehaviorFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[DefaultCacheBehaviorFunctionAssociationAttributes](dcb.ref.Append("function_association"))
}

func (dcb DefaultCacheBehaviorAttributes) LambdaFunctionAssociation() terra.SetValue[DefaultCacheBehaviorLambdaFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[DefaultCacheBehaviorLambdaFunctionAssociationAttributes](dcb.ref.Append("lambda_function_association"))
}

type DefaultCacheBehaviorForwardedValuesAttributes struct {
	ref terra.Reference
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) InternalRef() terra.Reference {
	return fv.ref
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) InternalWithRef(ref terra.Reference) DefaultCacheBehaviorForwardedValuesAttributes {
	return DefaultCacheBehaviorForwardedValuesAttributes{ref: ref}
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) InternalTokens() hclwrite.Tokens {
	return fv.ref.InternalTokens()
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) Headers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](fv.ref.Append("headers"))
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) QueryString() terra.BoolValue {
	return terra.ReferenceAsBool(fv.ref.Append("query_string"))
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) QueryStringCacheKeys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fv.ref.Append("query_string_cache_keys"))
}

func (fv DefaultCacheBehaviorForwardedValuesAttributes) Cookies() terra.ListValue[DefaultCacheBehaviorForwardedValuesCookiesAttributes] {
	return terra.ReferenceAsList[DefaultCacheBehaviorForwardedValuesCookiesAttributes](fv.ref.Append("cookies"))
}

type DefaultCacheBehaviorForwardedValuesCookiesAttributes struct {
	ref terra.Reference
}

func (c DefaultCacheBehaviorForwardedValuesCookiesAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c DefaultCacheBehaviorForwardedValuesCookiesAttributes) InternalWithRef(ref terra.Reference) DefaultCacheBehaviorForwardedValuesCookiesAttributes {
	return DefaultCacheBehaviorForwardedValuesCookiesAttributes{ref: ref}
}

func (c DefaultCacheBehaviorForwardedValuesCookiesAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c DefaultCacheBehaviorForwardedValuesCookiesAttributes) Forward() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("forward"))
}

func (c DefaultCacheBehaviorForwardedValuesCookiesAttributes) WhitelistedNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("whitelisted_names"))
}

type DefaultCacheBehaviorFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (fa DefaultCacheBehaviorFunctionAssociationAttributes) InternalRef() terra.Reference {
	return fa.ref
}

func (fa DefaultCacheBehaviorFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) DefaultCacheBehaviorFunctionAssociationAttributes {
	return DefaultCacheBehaviorFunctionAssociationAttributes{ref: ref}
}

func (fa DefaultCacheBehaviorFunctionAssociationAttributes) InternalTokens() hclwrite.Tokens {
	return fa.ref.InternalTokens()
}

func (fa DefaultCacheBehaviorFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("event_type"))
}

func (fa DefaultCacheBehaviorFunctionAssociationAttributes) FunctionArn() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("function_arn"))
}

type DefaultCacheBehaviorLambdaFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (lfa DefaultCacheBehaviorLambdaFunctionAssociationAttributes) InternalRef() terra.Reference {
	return lfa.ref
}

func (lfa DefaultCacheBehaviorLambdaFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) DefaultCacheBehaviorLambdaFunctionAssociationAttributes {
	return DefaultCacheBehaviorLambdaFunctionAssociationAttributes{ref: ref}
}

func (lfa DefaultCacheBehaviorLambdaFunctionAssociationAttributes) InternalTokens() hclwrite.Tokens {
	return lfa.ref.InternalTokens()
}

func (lfa DefaultCacheBehaviorLambdaFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("event_type"))
}

func (lfa DefaultCacheBehaviorLambdaFunctionAssociationAttributes) IncludeBody() terra.BoolValue {
	return terra.ReferenceAsBool(lfa.ref.Append("include_body"))
}

func (lfa DefaultCacheBehaviorLambdaFunctionAssociationAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("lambda_arn"))
}

type LoggingConfigAttributes struct {
	ref terra.Reference
}

func (lc LoggingConfigAttributes) InternalRef() terra.Reference {
	return lc.ref
}

func (lc LoggingConfigAttributes) InternalWithRef(ref terra.Reference) LoggingConfigAttributes {
	return LoggingConfigAttributes{ref: ref}
}

func (lc LoggingConfigAttributes) InternalTokens() hclwrite.Tokens {
	return lc.ref.InternalTokens()
}

func (lc LoggingConfigAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("bucket"))
}

func (lc LoggingConfigAttributes) IncludeCookies() terra.BoolValue {
	return terra.ReferenceAsBool(lc.ref.Append("include_cookies"))
}

func (lc LoggingConfigAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("prefix"))
}

type OrderedCacheBehaviorAttributes struct {
	ref terra.Reference
}

func (ocb OrderedCacheBehaviorAttributes) InternalRef() terra.Reference {
	return ocb.ref
}

func (ocb OrderedCacheBehaviorAttributes) InternalWithRef(ref terra.Reference) OrderedCacheBehaviorAttributes {
	return OrderedCacheBehaviorAttributes{ref: ref}
}

func (ocb OrderedCacheBehaviorAttributes) InternalTokens() hclwrite.Tokens {
	return ocb.ref.InternalTokens()
}

func (ocb OrderedCacheBehaviorAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ocb.ref.Append("allowed_methods"))
}

func (ocb OrderedCacheBehaviorAttributes) CachePolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("cache_policy_id"))
}

func (ocb OrderedCacheBehaviorAttributes) CachedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ocb.ref.Append("cached_methods"))
}

func (ocb OrderedCacheBehaviorAttributes) Compress() terra.BoolValue {
	return terra.ReferenceAsBool(ocb.ref.Append("compress"))
}

func (ocb OrderedCacheBehaviorAttributes) DefaultTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(ocb.ref.Append("default_ttl"))
}

func (ocb OrderedCacheBehaviorAttributes) FieldLevelEncryptionId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("field_level_encryption_id"))
}

func (ocb OrderedCacheBehaviorAttributes) MaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(ocb.ref.Append("max_ttl"))
}

func (ocb OrderedCacheBehaviorAttributes) MinTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(ocb.ref.Append("min_ttl"))
}

func (ocb OrderedCacheBehaviorAttributes) OriginRequestPolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("origin_request_policy_id"))
}

func (ocb OrderedCacheBehaviorAttributes) PathPattern() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("path_pattern"))
}

func (ocb OrderedCacheBehaviorAttributes) RealtimeLogConfigArn() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("realtime_log_config_arn"))
}

func (ocb OrderedCacheBehaviorAttributes) ResponseHeadersPolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("response_headers_policy_id"))
}

func (ocb OrderedCacheBehaviorAttributes) SmoothStreaming() terra.BoolValue {
	return terra.ReferenceAsBool(ocb.ref.Append("smooth_streaming"))
}

func (ocb OrderedCacheBehaviorAttributes) TargetOriginId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("target_origin_id"))
}

func (ocb OrderedCacheBehaviorAttributes) TrustedKeyGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ocb.ref.Append("trusted_key_groups"))
}

func (ocb OrderedCacheBehaviorAttributes) TrustedSigners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ocb.ref.Append("trusted_signers"))
}

func (ocb OrderedCacheBehaviorAttributes) ViewerProtocolPolicy() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("viewer_protocol_policy"))
}

func (ocb OrderedCacheBehaviorAttributes) ForwardedValues() terra.ListValue[OrderedCacheBehaviorForwardedValuesAttributes] {
	return terra.ReferenceAsList[OrderedCacheBehaviorForwardedValuesAttributes](ocb.ref.Append("forwarded_values"))
}

func (ocb OrderedCacheBehaviorAttributes) FunctionAssociation() terra.SetValue[OrderedCacheBehaviorFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[OrderedCacheBehaviorFunctionAssociationAttributes](ocb.ref.Append("function_association"))
}

func (ocb OrderedCacheBehaviorAttributes) LambdaFunctionAssociation() terra.SetValue[OrderedCacheBehaviorLambdaFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[OrderedCacheBehaviorLambdaFunctionAssociationAttributes](ocb.ref.Append("lambda_function_association"))
}

type OrderedCacheBehaviorForwardedValuesAttributes struct {
	ref terra.Reference
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) InternalRef() terra.Reference {
	return fv.ref
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) InternalWithRef(ref terra.Reference) OrderedCacheBehaviorForwardedValuesAttributes {
	return OrderedCacheBehaviorForwardedValuesAttributes{ref: ref}
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) InternalTokens() hclwrite.Tokens {
	return fv.ref.InternalTokens()
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) Headers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](fv.ref.Append("headers"))
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) QueryString() terra.BoolValue {
	return terra.ReferenceAsBool(fv.ref.Append("query_string"))
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) QueryStringCacheKeys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fv.ref.Append("query_string_cache_keys"))
}

func (fv OrderedCacheBehaviorForwardedValuesAttributes) Cookies() terra.ListValue[OrderedCacheBehaviorForwardedValuesCookiesAttributes] {
	return terra.ReferenceAsList[OrderedCacheBehaviorForwardedValuesCookiesAttributes](fv.ref.Append("cookies"))
}

type OrderedCacheBehaviorForwardedValuesCookiesAttributes struct {
	ref terra.Reference
}

func (c OrderedCacheBehaviorForwardedValuesCookiesAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c OrderedCacheBehaviorForwardedValuesCookiesAttributes) InternalWithRef(ref terra.Reference) OrderedCacheBehaviorForwardedValuesCookiesAttributes {
	return OrderedCacheBehaviorForwardedValuesCookiesAttributes{ref: ref}
}

func (c OrderedCacheBehaviorForwardedValuesCookiesAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c OrderedCacheBehaviorForwardedValuesCookiesAttributes) Forward() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("forward"))
}

func (c OrderedCacheBehaviorForwardedValuesCookiesAttributes) WhitelistedNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("whitelisted_names"))
}

type OrderedCacheBehaviorFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (fa OrderedCacheBehaviorFunctionAssociationAttributes) InternalRef() terra.Reference {
	return fa.ref
}

func (fa OrderedCacheBehaviorFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) OrderedCacheBehaviorFunctionAssociationAttributes {
	return OrderedCacheBehaviorFunctionAssociationAttributes{ref: ref}
}

func (fa OrderedCacheBehaviorFunctionAssociationAttributes) InternalTokens() hclwrite.Tokens {
	return fa.ref.InternalTokens()
}

func (fa OrderedCacheBehaviorFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("event_type"))
}

func (fa OrderedCacheBehaviorFunctionAssociationAttributes) FunctionArn() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("function_arn"))
}

type OrderedCacheBehaviorLambdaFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (lfa OrderedCacheBehaviorLambdaFunctionAssociationAttributes) InternalRef() terra.Reference {
	return lfa.ref
}

func (lfa OrderedCacheBehaviorLambdaFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) OrderedCacheBehaviorLambdaFunctionAssociationAttributes {
	return OrderedCacheBehaviorLambdaFunctionAssociationAttributes{ref: ref}
}

func (lfa OrderedCacheBehaviorLambdaFunctionAssociationAttributes) InternalTokens() hclwrite.Tokens {
	return lfa.ref.InternalTokens()
}

func (lfa OrderedCacheBehaviorLambdaFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("event_type"))
}

func (lfa OrderedCacheBehaviorLambdaFunctionAssociationAttributes) IncludeBody() terra.BoolValue {
	return terra.ReferenceAsBool(lfa.ref.Append("include_body"))
}

func (lfa OrderedCacheBehaviorLambdaFunctionAssociationAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("lambda_arn"))
}

type OriginAttributes struct {
	ref terra.Reference
}

func (o OriginAttributes) InternalRef() terra.Reference {
	return o.ref
}

func (o OriginAttributes) InternalWithRef(ref terra.Reference) OriginAttributes {
	return OriginAttributes{ref: ref}
}

func (o OriginAttributes) InternalTokens() hclwrite.Tokens {
	return o.ref.InternalTokens()
}

func (o OriginAttributes) ConnectionAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("connection_attempts"))
}

func (o OriginAttributes) ConnectionTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("connection_timeout"))
}

func (o OriginAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("domain_name"))
}

func (o OriginAttributes) OriginAccessControlId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("origin_access_control_id"))
}

func (o OriginAttributes) OriginId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("origin_id"))
}

func (o OriginAttributes) OriginPath() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("origin_path"))
}

func (o OriginAttributes) CustomHeader() terra.SetValue[CustomHeaderAttributes] {
	return terra.ReferenceAsSet[CustomHeaderAttributes](o.ref.Append("custom_header"))
}

func (o OriginAttributes) CustomOriginConfig() terra.ListValue[CustomOriginConfigAttributes] {
	return terra.ReferenceAsList[CustomOriginConfigAttributes](o.ref.Append("custom_origin_config"))
}

func (o OriginAttributes) OriginShield() terra.ListValue[OriginShieldAttributes] {
	return terra.ReferenceAsList[OriginShieldAttributes](o.ref.Append("origin_shield"))
}

func (o OriginAttributes) S3OriginConfig() terra.ListValue[S3OriginConfigAttributes] {
	return terra.ReferenceAsList[S3OriginConfigAttributes](o.ref.Append("s3_origin_config"))
}

type CustomHeaderAttributes struct {
	ref terra.Reference
}

func (ch CustomHeaderAttributes) InternalRef() terra.Reference {
	return ch.ref
}

func (ch CustomHeaderAttributes) InternalWithRef(ref terra.Reference) CustomHeaderAttributes {
	return CustomHeaderAttributes{ref: ref}
}

func (ch CustomHeaderAttributes) InternalTokens() hclwrite.Tokens {
	return ch.ref.InternalTokens()
}

func (ch CustomHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ch.ref.Append("name"))
}

func (ch CustomHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ch.ref.Append("value"))
}

type CustomOriginConfigAttributes struct {
	ref terra.Reference
}

func (coc CustomOriginConfigAttributes) InternalRef() terra.Reference {
	return coc.ref
}

func (coc CustomOriginConfigAttributes) InternalWithRef(ref terra.Reference) CustomOriginConfigAttributes {
	return CustomOriginConfigAttributes{ref: ref}
}

func (coc CustomOriginConfigAttributes) InternalTokens() hclwrite.Tokens {
	return coc.ref.InternalTokens()
}

func (coc CustomOriginConfigAttributes) HttpPort() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("http_port"))
}

func (coc CustomOriginConfigAttributes) HttpsPort() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("https_port"))
}

func (coc CustomOriginConfigAttributes) OriginKeepaliveTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("origin_keepalive_timeout"))
}

func (coc CustomOriginConfigAttributes) OriginProtocolPolicy() terra.StringValue {
	return terra.ReferenceAsString(coc.ref.Append("origin_protocol_policy"))
}

func (coc CustomOriginConfigAttributes) OriginReadTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("origin_read_timeout"))
}

func (coc CustomOriginConfigAttributes) OriginSslProtocols() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](coc.ref.Append("origin_ssl_protocols"))
}

type OriginShieldAttributes struct {
	ref terra.Reference
}

func (os OriginShieldAttributes) InternalRef() terra.Reference {
	return os.ref
}

func (os OriginShieldAttributes) InternalWithRef(ref terra.Reference) OriginShieldAttributes {
	return OriginShieldAttributes{ref: ref}
}

func (os OriginShieldAttributes) InternalTokens() hclwrite.Tokens {
	return os.ref.InternalTokens()
}

func (os OriginShieldAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(os.ref.Append("enabled"))
}

func (os OriginShieldAttributes) OriginShieldRegion() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("origin_shield_region"))
}

type S3OriginConfigAttributes struct {
	ref terra.Reference
}

func (soc S3OriginConfigAttributes) InternalRef() terra.Reference {
	return soc.ref
}

func (soc S3OriginConfigAttributes) InternalWithRef(ref terra.Reference) S3OriginConfigAttributes {
	return S3OriginConfigAttributes{ref: ref}
}

func (soc S3OriginConfigAttributes) InternalTokens() hclwrite.Tokens {
	return soc.ref.InternalTokens()
}

func (soc S3OriginConfigAttributes) OriginAccessIdentity() terra.StringValue {
	return terra.ReferenceAsString(soc.ref.Append("origin_access_identity"))
}

type OriginGroupAttributes struct {
	ref terra.Reference
}

func (og OriginGroupAttributes) InternalRef() terra.Reference {
	return og.ref
}

func (og OriginGroupAttributes) InternalWithRef(ref terra.Reference) OriginGroupAttributes {
	return OriginGroupAttributes{ref: ref}
}

func (og OriginGroupAttributes) InternalTokens() hclwrite.Tokens {
	return og.ref.InternalTokens()
}

func (og OriginGroupAttributes) OriginId() terra.StringValue {
	return terra.ReferenceAsString(og.ref.Append("origin_id"))
}

func (og OriginGroupAttributes) FailoverCriteria() terra.ListValue[FailoverCriteriaAttributes] {
	return terra.ReferenceAsList[FailoverCriteriaAttributes](og.ref.Append("failover_criteria"))
}

func (og OriginGroupAttributes) Member() terra.ListValue[MemberAttributes] {
	return terra.ReferenceAsList[MemberAttributes](og.ref.Append("member"))
}

type FailoverCriteriaAttributes struct {
	ref terra.Reference
}

func (fc FailoverCriteriaAttributes) InternalRef() terra.Reference {
	return fc.ref
}

func (fc FailoverCriteriaAttributes) InternalWithRef(ref terra.Reference) FailoverCriteriaAttributes {
	return FailoverCriteriaAttributes{ref: ref}
}

func (fc FailoverCriteriaAttributes) InternalTokens() hclwrite.Tokens {
	return fc.ref.InternalTokens()
}

func (fc FailoverCriteriaAttributes) StatusCodes() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](fc.ref.Append("status_codes"))
}

type MemberAttributes struct {
	ref terra.Reference
}

func (m MemberAttributes) InternalRef() terra.Reference {
	return m.ref
}

func (m MemberAttributes) InternalWithRef(ref terra.Reference) MemberAttributes {
	return MemberAttributes{ref: ref}
}

func (m MemberAttributes) InternalTokens() hclwrite.Tokens {
	return m.ref.InternalTokens()
}

func (m MemberAttributes) OriginId() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("origin_id"))
}

type RestrictionsAttributes struct {
	ref terra.Reference
}

func (r RestrictionsAttributes) InternalRef() terra.Reference {
	return r.ref
}

func (r RestrictionsAttributes) InternalWithRef(ref terra.Reference) RestrictionsAttributes {
	return RestrictionsAttributes{ref: ref}
}

func (r RestrictionsAttributes) InternalTokens() hclwrite.Tokens {
	return r.ref.InternalTokens()
}

func (r RestrictionsAttributes) GeoRestriction() terra.ListValue[GeoRestrictionAttributes] {
	return terra.ReferenceAsList[GeoRestrictionAttributes](r.ref.Append("geo_restriction"))
}

type GeoRestrictionAttributes struct {
	ref terra.Reference
}

func (gr GeoRestrictionAttributes) InternalRef() terra.Reference {
	return gr.ref
}

func (gr GeoRestrictionAttributes) InternalWithRef(ref terra.Reference) GeoRestrictionAttributes {
	return GeoRestrictionAttributes{ref: ref}
}

func (gr GeoRestrictionAttributes) InternalTokens() hclwrite.Tokens {
	return gr.ref.InternalTokens()
}

func (gr GeoRestrictionAttributes) Locations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gr.ref.Append("locations"))
}

func (gr GeoRestrictionAttributes) RestrictionType() terra.StringValue {
	return terra.ReferenceAsString(gr.ref.Append("restriction_type"))
}

type ViewerCertificateAttributes struct {
	ref terra.Reference
}

func (vc ViewerCertificateAttributes) InternalRef() terra.Reference {
	return vc.ref
}

func (vc ViewerCertificateAttributes) InternalWithRef(ref terra.Reference) ViewerCertificateAttributes {
	return ViewerCertificateAttributes{ref: ref}
}

func (vc ViewerCertificateAttributes) InternalTokens() hclwrite.Tokens {
	return vc.ref.InternalTokens()
}

func (vc ViewerCertificateAttributes) AcmCertificateArn() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("acm_certificate_arn"))
}

func (vc ViewerCertificateAttributes) CloudfrontDefaultCertificate() terra.BoolValue {
	return terra.ReferenceAsBool(vc.ref.Append("cloudfront_default_certificate"))
}

func (vc ViewerCertificateAttributes) IamCertificateId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("iam_certificate_id"))
}

func (vc ViewerCertificateAttributes) MinimumProtocolVersion() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("minimum_protocol_version"))
}

func (vc ViewerCertificateAttributes) SslSupportMethod() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("ssl_support_method"))
}

type TrustedKeyGroupsState struct {
	Enabled bool                         `json:"enabled"`
	Items   []TrustedKeyGroupsItemsState `json:"items"`
}

type TrustedKeyGroupsItemsState struct {
	KeyGroupId string   `json:"key_group_id"`
	KeyPairIds []string `json:"key_pair_ids"`
}

type TrustedSignersState struct {
	Enabled bool                       `json:"enabled"`
	Items   []TrustedSignersItemsState `json:"items"`
}

type TrustedSignersItemsState struct {
	AwsAccountNumber string   `json:"aws_account_number"`
	KeyPairIds       []string `json:"key_pair_ids"`
}

type CustomErrorResponseState struct {
	ErrorCachingMinTtl float64 `json:"error_caching_min_ttl"`
	ErrorCode          float64 `json:"error_code"`
	ResponseCode       float64 `json:"response_code"`
	ResponsePagePath   string  `json:"response_page_path"`
}

type DefaultCacheBehaviorState struct {
	AllowedMethods            []string                                             `json:"allowed_methods"`
	CachePolicyId             string                                               `json:"cache_policy_id"`
	CachedMethods             []string                                             `json:"cached_methods"`
	Compress                  bool                                                 `json:"compress"`
	DefaultTtl                float64                                              `json:"default_ttl"`
	FieldLevelEncryptionId    string                                               `json:"field_level_encryption_id"`
	MaxTtl                    float64                                              `json:"max_ttl"`
	MinTtl                    float64                                              `json:"min_ttl"`
	OriginRequestPolicyId     string                                               `json:"origin_request_policy_id"`
	RealtimeLogConfigArn      string                                               `json:"realtime_log_config_arn"`
	ResponseHeadersPolicyId   string                                               `json:"response_headers_policy_id"`
	SmoothStreaming           bool                                                 `json:"smooth_streaming"`
	TargetOriginId            string                                               `json:"target_origin_id"`
	TrustedKeyGroups          []string                                             `json:"trusted_key_groups"`
	TrustedSigners            []string                                             `json:"trusted_signers"`
	ViewerProtocolPolicy      string                                               `json:"viewer_protocol_policy"`
	ForwardedValues           []DefaultCacheBehaviorForwardedValuesState           `json:"forwarded_values"`
	FunctionAssociation       []DefaultCacheBehaviorFunctionAssociationState       `json:"function_association"`
	LambdaFunctionAssociation []DefaultCacheBehaviorLambdaFunctionAssociationState `json:"lambda_function_association"`
}

type DefaultCacheBehaviorForwardedValuesState struct {
	Headers              []string                                          `json:"headers"`
	QueryString          bool                                              `json:"query_string"`
	QueryStringCacheKeys []string                                          `json:"query_string_cache_keys"`
	Cookies              []DefaultCacheBehaviorForwardedValuesCookiesState `json:"cookies"`
}

type DefaultCacheBehaviorForwardedValuesCookiesState struct {
	Forward          string   `json:"forward"`
	WhitelistedNames []string `json:"whitelisted_names"`
}

type DefaultCacheBehaviorFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	FunctionArn string `json:"function_arn"`
}

type DefaultCacheBehaviorLambdaFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	IncludeBody bool   `json:"include_body"`
	LambdaArn   string `json:"lambda_arn"`
}

type LoggingConfigState struct {
	Bucket         string `json:"bucket"`
	IncludeCookies bool   `json:"include_cookies"`
	Prefix         string `json:"prefix"`
}

type OrderedCacheBehaviorState struct {
	AllowedMethods            []string                                             `json:"allowed_methods"`
	CachePolicyId             string                                               `json:"cache_policy_id"`
	CachedMethods             []string                                             `json:"cached_methods"`
	Compress                  bool                                                 `json:"compress"`
	DefaultTtl                float64                                              `json:"default_ttl"`
	FieldLevelEncryptionId    string                                               `json:"field_level_encryption_id"`
	MaxTtl                    float64                                              `json:"max_ttl"`
	MinTtl                    float64                                              `json:"min_ttl"`
	OriginRequestPolicyId     string                                               `json:"origin_request_policy_id"`
	PathPattern               string                                               `json:"path_pattern"`
	RealtimeLogConfigArn      string                                               `json:"realtime_log_config_arn"`
	ResponseHeadersPolicyId   string                                               `json:"response_headers_policy_id"`
	SmoothStreaming           bool                                                 `json:"smooth_streaming"`
	TargetOriginId            string                                               `json:"target_origin_id"`
	TrustedKeyGroups          []string                                             `json:"trusted_key_groups"`
	TrustedSigners            []string                                             `json:"trusted_signers"`
	ViewerProtocolPolicy      string                                               `json:"viewer_protocol_policy"`
	ForwardedValues           []OrderedCacheBehaviorForwardedValuesState           `json:"forwarded_values"`
	FunctionAssociation       []OrderedCacheBehaviorFunctionAssociationState       `json:"function_association"`
	LambdaFunctionAssociation []OrderedCacheBehaviorLambdaFunctionAssociationState `json:"lambda_function_association"`
}

type OrderedCacheBehaviorForwardedValuesState struct {
	Headers              []string                                          `json:"headers"`
	QueryString          bool                                              `json:"query_string"`
	QueryStringCacheKeys []string                                          `json:"query_string_cache_keys"`
	Cookies              []OrderedCacheBehaviorForwardedValuesCookiesState `json:"cookies"`
}

type OrderedCacheBehaviorForwardedValuesCookiesState struct {
	Forward          string   `json:"forward"`
	WhitelistedNames []string `json:"whitelisted_names"`
}

type OrderedCacheBehaviorFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	FunctionArn string `json:"function_arn"`
}

type OrderedCacheBehaviorLambdaFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	IncludeBody bool   `json:"include_body"`
	LambdaArn   string `json:"lambda_arn"`
}

type OriginState struct {
	ConnectionAttempts    float64                   `json:"connection_attempts"`
	ConnectionTimeout     float64                   `json:"connection_timeout"`
	DomainName            string                    `json:"domain_name"`
	OriginAccessControlId string                    `json:"origin_access_control_id"`
	OriginId              string                    `json:"origin_id"`
	OriginPath            string                    `json:"origin_path"`
	CustomHeader          []CustomHeaderState       `json:"custom_header"`
	CustomOriginConfig    []CustomOriginConfigState `json:"custom_origin_config"`
	OriginShield          []OriginShieldState       `json:"origin_shield"`
	S3OriginConfig        []S3OriginConfigState     `json:"s3_origin_config"`
}

type CustomHeaderState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type CustomOriginConfigState struct {
	HttpPort               float64  `json:"http_port"`
	HttpsPort              float64  `json:"https_port"`
	OriginKeepaliveTimeout float64  `json:"origin_keepalive_timeout"`
	OriginProtocolPolicy   string   `json:"origin_protocol_policy"`
	OriginReadTimeout      float64  `json:"origin_read_timeout"`
	OriginSslProtocols     []string `json:"origin_ssl_protocols"`
}

type OriginShieldState struct {
	Enabled            bool   `json:"enabled"`
	OriginShieldRegion string `json:"origin_shield_region"`
}

type S3OriginConfigState struct {
	OriginAccessIdentity string `json:"origin_access_identity"`
}

type OriginGroupState struct {
	OriginId         string                  `json:"origin_id"`
	FailoverCriteria []FailoverCriteriaState `json:"failover_criteria"`
	Member           []MemberState           `json:"member"`
}

type FailoverCriteriaState struct {
	StatusCodes []float64 `json:"status_codes"`
}

type MemberState struct {
	OriginId string `json:"origin_id"`
}

type RestrictionsState struct {
	GeoRestriction []GeoRestrictionState `json:"geo_restriction"`
}

type GeoRestrictionState struct {
	Locations       []string `json:"locations"`
	RestrictionType string   `json:"restriction_type"`
}

type ViewerCertificateState struct {
	AcmCertificateArn            string `json:"acm_certificate_arn"`
	CloudfrontDefaultCertificate bool   `json:"cloudfront_default_certificate"`
	IamCertificateId             string `json:"iam_certificate_id"`
	MinimumProtocolVersion       string `json:"minimum_protocol_version"`
	SslSupportMethod             string `json:"ssl_support_method"`
}
