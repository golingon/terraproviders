// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBackupVaultPolicy(name string, args BackupVaultPolicyArgs) *BackupVaultPolicy {
	return &BackupVaultPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BackupVaultPolicy)(nil)

type BackupVaultPolicy struct {
	Name  string
	Args  BackupVaultPolicyArgs
	state *backupVaultPolicyState
}

func (bvp *BackupVaultPolicy) Type() string {
	return "aws_backup_vault_policy"
}

func (bvp *BackupVaultPolicy) LocalName() string {
	return bvp.Name
}

func (bvp *BackupVaultPolicy) Configuration() interface{} {
	return bvp.Args
}

func (bvp *BackupVaultPolicy) Attributes() backupVaultPolicyAttributes {
	return backupVaultPolicyAttributes{ref: terra.ReferenceResource(bvp)}
}

func (bvp *BackupVaultPolicy) ImportState(av io.Reader) error {
	bvp.state = &backupVaultPolicyState{}
	if err := json.NewDecoder(av).Decode(bvp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bvp.Type(), bvp.LocalName(), err)
	}
	return nil
}

func (bvp *BackupVaultPolicy) State() (*backupVaultPolicyState, bool) {
	return bvp.state, bvp.state != nil
}

func (bvp *BackupVaultPolicy) StateMust() *backupVaultPolicyState {
	if bvp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bvp.Type(), bvp.LocalName()))
	}
	return bvp.state
}

func (bvp *BackupVaultPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(bvp)
}

type BackupVaultPolicyArgs struct {
	// BackupVaultName: string, required
	BackupVaultName terra.StringValue `hcl:"backup_vault_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// DependsOn contains resources that BackupVaultPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type backupVaultPolicyAttributes struct {
	ref terra.Reference
}

func (bvp backupVaultPolicyAttributes) BackupVaultArn() terra.StringValue {
	return terra.ReferenceString(bvp.ref.Append("backup_vault_arn"))
}

func (bvp backupVaultPolicyAttributes) BackupVaultName() terra.StringValue {
	return terra.ReferenceString(bvp.ref.Append("backup_vault_name"))
}

func (bvp backupVaultPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bvp.ref.Append("id"))
}

func (bvp backupVaultPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(bvp.ref.Append("policy"))
}

type backupVaultPolicyState struct {
	BackupVaultArn  string `json:"backup_vault_arn"`
	BackupVaultName string `json:"backup_vault_name"`
	Id              string `json:"id"`
	Policy          string `json:"policy"`
}
