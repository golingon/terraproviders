// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	autoscalinggrouptag "github.com/golingon/terraproviders/aws/4.60.0/autoscalinggrouptag"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAutoscalingGroupTag(name string, args AutoscalingGroupTagArgs) *AutoscalingGroupTag {
	return &AutoscalingGroupTag{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AutoscalingGroupTag)(nil)

type AutoscalingGroupTag struct {
	Name  string
	Args  AutoscalingGroupTagArgs
	state *autoscalingGroupTagState
}

func (agt *AutoscalingGroupTag) Type() string {
	return "aws_autoscaling_group_tag"
}

func (agt *AutoscalingGroupTag) LocalName() string {
	return agt.Name
}

func (agt *AutoscalingGroupTag) Configuration() interface{} {
	return agt.Args
}

func (agt *AutoscalingGroupTag) Attributes() autoscalingGroupTagAttributes {
	return autoscalingGroupTagAttributes{ref: terra.ReferenceResource(agt)}
}

func (agt *AutoscalingGroupTag) ImportState(av io.Reader) error {
	agt.state = &autoscalingGroupTagState{}
	if err := json.NewDecoder(av).Decode(agt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agt.Type(), agt.LocalName(), err)
	}
	return nil
}

func (agt *AutoscalingGroupTag) State() (*autoscalingGroupTagState, bool) {
	return agt.state, agt.state != nil
}

func (agt *AutoscalingGroupTag) StateMust() *autoscalingGroupTagState {
	if agt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agt.Type(), agt.LocalName()))
	}
	return agt.state
}

func (agt *AutoscalingGroupTag) DependOn() terra.Reference {
	return terra.ReferenceResource(agt)
}

type AutoscalingGroupTagArgs struct {
	// AutoscalingGroupName: string, required
	AutoscalingGroupName terra.StringValue `hcl:"autoscaling_group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tag: required
	Tag *autoscalinggrouptag.Tag `hcl:"tag,block" validate:"required"`
	// DependsOn contains resources that AutoscalingGroupTag depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type autoscalingGroupTagAttributes struct {
	ref terra.Reference
}

func (agt autoscalingGroupTagAttributes) AutoscalingGroupName() terra.StringValue {
	return terra.ReferenceString(agt.ref.Append("autoscaling_group_name"))
}

func (agt autoscalingGroupTagAttributes) Id() terra.StringValue {
	return terra.ReferenceString(agt.ref.Append("id"))
}

func (agt autoscalingGroupTagAttributes) Tag() terra.ListValue[autoscalinggrouptag.TagAttributes] {
	return terra.ReferenceList[autoscalinggrouptag.TagAttributes](agt.ref.Append("tag"))
}

type autoscalingGroupTagState struct {
	AutoscalingGroupName string                         `json:"autoscaling_group_name"`
	Id                   string                         `json:"id"`
	Tag                  []autoscalinggrouptag.TagState `json:"tag"`
}
