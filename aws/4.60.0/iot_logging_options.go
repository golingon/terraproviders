// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotLoggingOptions(name string, args IotLoggingOptionsArgs) *IotLoggingOptions {
	return &IotLoggingOptions{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotLoggingOptions)(nil)

type IotLoggingOptions struct {
	Name  string
	Args  IotLoggingOptionsArgs
	state *iotLoggingOptionsState
}

func (ilo *IotLoggingOptions) Type() string {
	return "aws_iot_logging_options"
}

func (ilo *IotLoggingOptions) LocalName() string {
	return ilo.Name
}

func (ilo *IotLoggingOptions) Configuration() interface{} {
	return ilo.Args
}

func (ilo *IotLoggingOptions) Attributes() iotLoggingOptionsAttributes {
	return iotLoggingOptionsAttributes{ref: terra.ReferenceResource(ilo)}
}

func (ilo *IotLoggingOptions) ImportState(av io.Reader) error {
	ilo.state = &iotLoggingOptionsState{}
	if err := json.NewDecoder(av).Decode(ilo.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ilo.Type(), ilo.LocalName(), err)
	}
	return nil
}

func (ilo *IotLoggingOptions) State() (*iotLoggingOptionsState, bool) {
	return ilo.state, ilo.state != nil
}

func (ilo *IotLoggingOptions) StateMust() *iotLoggingOptionsState {
	if ilo.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ilo.Type(), ilo.LocalName()))
	}
	return ilo.state
}

func (ilo *IotLoggingOptions) DependOn() terra.Reference {
	return terra.ReferenceResource(ilo)
}

type IotLoggingOptionsArgs struct {
	// DefaultLogLevel: string, required
	DefaultLogLevel terra.StringValue `hcl:"default_log_level,attr" validate:"required"`
	// DisableAllLogs: bool, optional
	DisableAllLogs terra.BoolValue `hcl:"disable_all_logs,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RoleArn: string, required
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
	// DependsOn contains resources that IotLoggingOptions depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotLoggingOptionsAttributes struct {
	ref terra.Reference
}

func (ilo iotLoggingOptionsAttributes) DefaultLogLevel() terra.StringValue {
	return terra.ReferenceString(ilo.ref.Append("default_log_level"))
}

func (ilo iotLoggingOptionsAttributes) DisableAllLogs() terra.BoolValue {
	return terra.ReferenceBool(ilo.ref.Append("disable_all_logs"))
}

func (ilo iotLoggingOptionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ilo.ref.Append("id"))
}

func (ilo iotLoggingOptionsAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceString(ilo.ref.Append("role_arn"))
}

type iotLoggingOptionsState struct {
	DefaultLogLevel string `json:"default_log_level"`
	DisableAllLogs  bool   `json:"disable_all_logs"`
	Id              string `json:"id"`
	RoleArn         string `json:"role_arn"`
}
