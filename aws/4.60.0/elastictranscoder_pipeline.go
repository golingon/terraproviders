// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	elastictranscoderpipeline "github.com/golingon/terraproviders/aws/4.60.0/elastictranscoderpipeline"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewElastictranscoderPipeline(name string, args ElastictranscoderPipelineArgs) *ElastictranscoderPipeline {
	return &ElastictranscoderPipeline{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ElastictranscoderPipeline)(nil)

type ElastictranscoderPipeline struct {
	Name  string
	Args  ElastictranscoderPipelineArgs
	state *elastictranscoderPipelineState
}

func (ep *ElastictranscoderPipeline) Type() string {
	return "aws_elastictranscoder_pipeline"
}

func (ep *ElastictranscoderPipeline) LocalName() string {
	return ep.Name
}

func (ep *ElastictranscoderPipeline) Configuration() interface{} {
	return ep.Args
}

func (ep *ElastictranscoderPipeline) Attributes() elastictranscoderPipelineAttributes {
	return elastictranscoderPipelineAttributes{ref: terra.ReferenceResource(ep)}
}

func (ep *ElastictranscoderPipeline) ImportState(av io.Reader) error {
	ep.state = &elastictranscoderPipelineState{}
	if err := json.NewDecoder(av).Decode(ep.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ep.Type(), ep.LocalName(), err)
	}
	return nil
}

func (ep *ElastictranscoderPipeline) State() (*elastictranscoderPipelineState, bool) {
	return ep.state, ep.state != nil
}

func (ep *ElastictranscoderPipeline) StateMust() *elastictranscoderPipelineState {
	if ep.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ep.Type(), ep.LocalName()))
	}
	return ep.state
}

func (ep *ElastictranscoderPipeline) DependOn() terra.Reference {
	return terra.ReferenceResource(ep)
}

type ElastictranscoderPipelineArgs struct {
	// AwsKmsKeyArn: string, optional
	AwsKmsKeyArn terra.StringValue `hcl:"aws_kms_key_arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InputBucket: string, required
	InputBucket terra.StringValue `hcl:"input_bucket,attr" validate:"required"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// OutputBucket: string, optional
	OutputBucket terra.StringValue `hcl:"output_bucket,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// ContentConfig: optional
	ContentConfig *elastictranscoderpipeline.ContentConfig `hcl:"content_config,block"`
	// ContentConfigPermissions: min=0
	ContentConfigPermissions []elastictranscoderpipeline.ContentConfigPermissions `hcl:"content_config_permissions,block" validate:"min=0"`
	// Notifications: optional
	Notifications *elastictranscoderpipeline.Notifications `hcl:"notifications,block"`
	// ThumbnailConfig: optional
	ThumbnailConfig *elastictranscoderpipeline.ThumbnailConfig `hcl:"thumbnail_config,block"`
	// ThumbnailConfigPermissions: min=0
	ThumbnailConfigPermissions []elastictranscoderpipeline.ThumbnailConfigPermissions `hcl:"thumbnail_config_permissions,block" validate:"min=0"`
	// DependsOn contains resources that ElastictranscoderPipeline depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type elastictranscoderPipelineAttributes struct {
	ref terra.Reference
}

func (ep elastictranscoderPipelineAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("arn"))
}

func (ep elastictranscoderPipelineAttributes) AwsKmsKeyArn() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("aws_kms_key_arn"))
}

func (ep elastictranscoderPipelineAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("id"))
}

func (ep elastictranscoderPipelineAttributes) InputBucket() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("input_bucket"))
}

func (ep elastictranscoderPipelineAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("name"))
}

func (ep elastictranscoderPipelineAttributes) OutputBucket() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("output_bucket"))
}

func (ep elastictranscoderPipelineAttributes) Role() terra.StringValue {
	return terra.ReferenceString(ep.ref.Append("role"))
}

func (ep elastictranscoderPipelineAttributes) ContentConfig() terra.ListValue[elastictranscoderpipeline.ContentConfigAttributes] {
	return terra.ReferenceList[elastictranscoderpipeline.ContentConfigAttributes](ep.ref.Append("content_config"))
}

func (ep elastictranscoderPipelineAttributes) ContentConfigPermissions() terra.SetValue[elastictranscoderpipeline.ContentConfigPermissionsAttributes] {
	return terra.ReferenceSet[elastictranscoderpipeline.ContentConfigPermissionsAttributes](ep.ref.Append("content_config_permissions"))
}

func (ep elastictranscoderPipelineAttributes) Notifications() terra.ListValue[elastictranscoderpipeline.NotificationsAttributes] {
	return terra.ReferenceList[elastictranscoderpipeline.NotificationsAttributes](ep.ref.Append("notifications"))
}

func (ep elastictranscoderPipelineAttributes) ThumbnailConfig() terra.ListValue[elastictranscoderpipeline.ThumbnailConfigAttributes] {
	return terra.ReferenceList[elastictranscoderpipeline.ThumbnailConfigAttributes](ep.ref.Append("thumbnail_config"))
}

func (ep elastictranscoderPipelineAttributes) ThumbnailConfigPermissions() terra.SetValue[elastictranscoderpipeline.ThumbnailConfigPermissionsAttributes] {
	return terra.ReferenceSet[elastictranscoderpipeline.ThumbnailConfigPermissionsAttributes](ep.ref.Append("thumbnail_config_permissions"))
}

type elastictranscoderPipelineState struct {
	Arn                        string                                                      `json:"arn"`
	AwsKmsKeyArn               string                                                      `json:"aws_kms_key_arn"`
	Id                         string                                                      `json:"id"`
	InputBucket                string                                                      `json:"input_bucket"`
	Name                       string                                                      `json:"name"`
	OutputBucket               string                                                      `json:"output_bucket"`
	Role                       string                                                      `json:"role"`
	ContentConfig              []elastictranscoderpipeline.ContentConfigState              `json:"content_config"`
	ContentConfigPermissions   []elastictranscoderpipeline.ContentConfigPermissionsState   `json:"content_config_permissions"`
	Notifications              []elastictranscoderpipeline.NotificationsState              `json:"notifications"`
	ThumbnailConfig            []elastictranscoderpipeline.ThumbnailConfigState            `json:"thumbnail_config"`
	ThumbnailConfigPermissions []elastictranscoderpipeline.ThumbnailConfigPermissionsState `json:"thumbnail_config_permissions"`
}
