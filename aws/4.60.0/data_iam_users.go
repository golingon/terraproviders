// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataIamUsers(name string, args DataIamUsersArgs) *DataIamUsers {
	return &DataIamUsers{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataIamUsers)(nil)

type DataIamUsers struct {
	Name string
	Args DataIamUsersArgs
}

func (iu *DataIamUsers) DataSource() string {
	return "aws_iam_users"
}

func (iu *DataIamUsers) LocalName() string {
	return iu.Name
}

func (iu *DataIamUsers) Configuration() interface{} {
	return iu.Args
}

func (iu *DataIamUsers) Attributes() dataIamUsersAttributes {
	return dataIamUsersAttributes{ref: terra.ReferenceDataResource(iu)}
}

type DataIamUsersArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NameRegex: string, optional
	NameRegex terra.StringValue `hcl:"name_regex,attr"`
	// PathPrefix: string, optional
	PathPrefix terra.StringValue `hcl:"path_prefix,attr"`
}
type dataIamUsersAttributes struct {
	ref terra.Reference
}

func (iu dataIamUsersAttributes) Arns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iu.ref.Append("arns"))
}

func (iu dataIamUsersAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iu.ref.Append("id"))
}

func (iu dataIamUsersAttributes) NameRegex() terra.StringValue {
	return terra.ReferenceString(iu.ref.Append("name_regex"))
}

func (iu dataIamUsersAttributes) Names() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iu.ref.Append("names"))
}

func (iu dataIamUsersAttributes) PathPrefix() terra.StringValue {
	return terra.ReferenceString(iu.ref.Append("path_prefix"))
}
