// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataeip "github.com/golingon/terraproviders/aws/4.60.0/dataeip"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEip(name string, args DataEipArgs) *DataEip {
	return &DataEip{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEip)(nil)

type DataEip struct {
	Name string
	Args DataEipArgs
}

func (e *DataEip) DataSource() string {
	return "aws_eip"
}

func (e *DataEip) LocalName() string {
	return e.Name
}

func (e *DataEip) Configuration() interface{} {
	return e.Args
}

func (e *DataEip) Attributes() dataEipAttributes {
	return dataEipAttributes{ref: terra.ReferenceDataResource(e)}
}

type DataEipArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PublicIp: string, optional
	PublicIp terra.StringValue `hcl:"public_ip,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataeip.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataeip.Timeouts `hcl:"timeouts,block"`
}
type dataEipAttributes struct {
	ref terra.Reference
}

func (e dataEipAttributes) AssociationId() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("association_id"))
}

func (e dataEipAttributes) CarrierIp() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("carrier_ip"))
}

func (e dataEipAttributes) CustomerOwnedIp() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("customer_owned_ip"))
}

func (e dataEipAttributes) CustomerOwnedIpv4Pool() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("customer_owned_ipv4_pool"))
}

func (e dataEipAttributes) Domain() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("domain"))
}

func (e dataEipAttributes) Id() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("id"))
}

func (e dataEipAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("instance_id"))
}

func (e dataEipAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("network_interface_id"))
}

func (e dataEipAttributes) NetworkInterfaceOwnerId() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("network_interface_owner_id"))
}

func (e dataEipAttributes) PrivateDns() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("private_dns"))
}

func (e dataEipAttributes) PrivateIp() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("private_ip"))
}

func (e dataEipAttributes) PublicDns() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("public_dns"))
}

func (e dataEipAttributes) PublicIp() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("public_ip"))
}

func (e dataEipAttributes) PublicIpv4Pool() terra.StringValue {
	return terra.ReferenceString(e.ref.Append("public_ipv4_pool"))
}

func (e dataEipAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](e.ref.Append("tags"))
}

func (e dataEipAttributes) Filter() terra.SetValue[dataeip.FilterAttributes] {
	return terra.ReferenceSet[dataeip.FilterAttributes](e.ref.Append("filter"))
}

func (e dataEipAttributes) Timeouts() dataeip.TimeoutsAttributes {
	return terra.ReferenceSingle[dataeip.TimeoutsAttributes](e.ref.Append("timeouts"))
}
