// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datamqbrokerinstancetypeofferings

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type BrokerInstanceOptions struct {
	// AvailabilityZones: min=0
	AvailabilityZones []AvailabilityZones `hcl:"availability_zones,block" validate:"min=0"`
}

type AvailabilityZones struct{}

type BrokerInstanceOptionsAttributes struct {
	ref terra.Reference
}

func (bio BrokerInstanceOptionsAttributes) InternalRef() terra.Reference {
	return bio.ref
}

func (bio BrokerInstanceOptionsAttributes) InternalWithRef(ref terra.Reference) BrokerInstanceOptionsAttributes {
	return BrokerInstanceOptionsAttributes{ref: ref}
}

func (bio BrokerInstanceOptionsAttributes) InternalTokens() hclwrite.Tokens {
	return bio.ref.InternalTokens()
}

func (bio BrokerInstanceOptionsAttributes) EngineType() terra.StringValue {
	return terra.ReferenceAsString(bio.ref.Append("engine_type"))
}

func (bio BrokerInstanceOptionsAttributes) HostInstanceType() terra.StringValue {
	return terra.ReferenceAsString(bio.ref.Append("host_instance_type"))
}

func (bio BrokerInstanceOptionsAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(bio.ref.Append("storage_type"))
}

func (bio BrokerInstanceOptionsAttributes) SupportedDeploymentModes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bio.ref.Append("supported_deployment_modes"))
}

func (bio BrokerInstanceOptionsAttributes) SupportedEngineVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](bio.ref.Append("supported_engine_versions"))
}

func (bio BrokerInstanceOptionsAttributes) AvailabilityZones() terra.SetValue[AvailabilityZonesAttributes] {
	return terra.ReferenceAsSet[AvailabilityZonesAttributes](bio.ref.Append("availability_zones"))
}

type AvailabilityZonesAttributes struct {
	ref terra.Reference
}

func (az AvailabilityZonesAttributes) InternalRef() terra.Reference {
	return az.ref
}

func (az AvailabilityZonesAttributes) InternalWithRef(ref terra.Reference) AvailabilityZonesAttributes {
	return AvailabilityZonesAttributes{ref: ref}
}

func (az AvailabilityZonesAttributes) InternalTokens() hclwrite.Tokens {
	return az.ref.InternalTokens()
}

func (az AvailabilityZonesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(az.ref.Append("name"))
}

type BrokerInstanceOptionsState struct {
	EngineType               string                   `json:"engine_type"`
	HostInstanceType         string                   `json:"host_instance_type"`
	StorageType              string                   `json:"storage_type"`
	SupportedDeploymentModes []string                 `json:"supported_deployment_modes"`
	SupportedEngineVersions  []string                 `json:"supported_engine_versions"`
	AvailabilityZones        []AvailabilityZonesState `json:"availability_zones"`
}

type AvailabilityZonesState struct {
	Name string `json:"name"`
}
