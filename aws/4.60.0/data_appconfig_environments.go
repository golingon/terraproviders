// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataAppconfigEnvironments(name string, args DataAppconfigEnvironmentsArgs) *DataAppconfigEnvironments {
	return &DataAppconfigEnvironments{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAppconfigEnvironments)(nil)

type DataAppconfigEnvironments struct {
	Name string
	Args DataAppconfigEnvironmentsArgs
}

func (ae *DataAppconfigEnvironments) DataSource() string {
	return "aws_appconfig_environments"
}

func (ae *DataAppconfigEnvironments) LocalName() string {
	return ae.Name
}

func (ae *DataAppconfigEnvironments) Configuration() interface{} {
	return ae.Args
}

func (ae *DataAppconfigEnvironments) Attributes() dataAppconfigEnvironmentsAttributes {
	return dataAppconfigEnvironmentsAttributes{ref: terra.ReferenceDataResource(ae)}
}

type DataAppconfigEnvironmentsArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}
type dataAppconfigEnvironmentsAttributes struct {
	ref terra.Reference
}

func (ae dataAppconfigEnvironmentsAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceString(ae.ref.Append("application_id"))
}

func (ae dataAppconfigEnvironmentsAttributes) EnvironmentIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ae.ref.Append("environment_ids"))
}

func (ae dataAppconfigEnvironmentsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ae.ref.Append("id"))
}
