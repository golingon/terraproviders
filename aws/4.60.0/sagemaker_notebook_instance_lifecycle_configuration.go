// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSagemakerNotebookInstanceLifecycleConfiguration(name string, args SagemakerNotebookInstanceLifecycleConfigurationArgs) *SagemakerNotebookInstanceLifecycleConfiguration {
	return &SagemakerNotebookInstanceLifecycleConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SagemakerNotebookInstanceLifecycleConfiguration)(nil)

type SagemakerNotebookInstanceLifecycleConfiguration struct {
	Name  string
	Args  SagemakerNotebookInstanceLifecycleConfigurationArgs
	state *sagemakerNotebookInstanceLifecycleConfigurationState
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Type() string {
	return "aws_sagemaker_notebook_instance_lifecycle_configuration"
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) LocalName() string {
	return snilc.Name
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Configuration() interface{} {
	return snilc.Args
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) Attributes() sagemakerNotebookInstanceLifecycleConfigurationAttributes {
	return sagemakerNotebookInstanceLifecycleConfigurationAttributes{ref: terra.ReferenceResource(snilc)}
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) ImportState(av io.Reader) error {
	snilc.state = &sagemakerNotebookInstanceLifecycleConfigurationState{}
	if err := json.NewDecoder(av).Decode(snilc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", snilc.Type(), snilc.LocalName(), err)
	}
	return nil
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) State() (*sagemakerNotebookInstanceLifecycleConfigurationState, bool) {
	return snilc.state, snilc.state != nil
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) StateMust() *sagemakerNotebookInstanceLifecycleConfigurationState {
	if snilc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", snilc.Type(), snilc.LocalName()))
	}
	return snilc.state
}

func (snilc *SagemakerNotebookInstanceLifecycleConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(snilc)
}

type SagemakerNotebookInstanceLifecycleConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// OnCreate: string, optional
	OnCreate terra.StringValue `hcl:"on_create,attr"`
	// OnStart: string, optional
	OnStart terra.StringValue `hcl:"on_start,attr"`
	// DependsOn contains resources that SagemakerNotebookInstanceLifecycleConfiguration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sagemakerNotebookInstanceLifecycleConfigurationAttributes struct {
	ref terra.Reference
}

func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(snilc.ref.Append("arn"))
}

func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(snilc.ref.Append("id"))
}

func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(snilc.ref.Append("name"))
}

func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) OnCreate() terra.StringValue {
	return terra.ReferenceString(snilc.ref.Append("on_create"))
}

func (snilc sagemakerNotebookInstanceLifecycleConfigurationAttributes) OnStart() terra.StringValue {
	return terra.ReferenceString(snilc.ref.Append("on_start"))
}

type sagemakerNotebookInstanceLifecycleConfigurationState struct {
	Arn      string `json:"arn"`
	Id       string `json:"id"`
	Name     string `json:"name"`
	OnCreate string `json:"on_create"`
	OnStart  string `json:"on_start"`
}
