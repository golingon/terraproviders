// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataRdsOrderableDbInstance(name string, args DataRdsOrderableDbInstanceArgs) *DataRdsOrderableDbInstance {
	return &DataRdsOrderableDbInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRdsOrderableDbInstance)(nil)

type DataRdsOrderableDbInstance struct {
	Name string
	Args DataRdsOrderableDbInstanceArgs
}

func (rodi *DataRdsOrderableDbInstance) DataSource() string {
	return "aws_rds_orderable_db_instance"
}

func (rodi *DataRdsOrderableDbInstance) LocalName() string {
	return rodi.Name
}

func (rodi *DataRdsOrderableDbInstance) Configuration() interface{} {
	return rodi.Args
}

func (rodi *DataRdsOrderableDbInstance) Attributes() dataRdsOrderableDbInstanceAttributes {
	return dataRdsOrderableDbInstanceAttributes{ref: terra.ReferenceDataResource(rodi)}
}

type DataRdsOrderableDbInstanceArgs struct {
	// AvailabilityZoneGroup: string, optional
	AvailabilityZoneGroup terra.StringValue `hcl:"availability_zone_group,attr"`
	// Engine: string, required
	Engine terra.StringValue `hcl:"engine,attr" validate:"required"`
	// EngineVersion: string, optional
	EngineVersion terra.StringValue `hcl:"engine_version,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceClass: string, optional
	InstanceClass terra.StringValue `hcl:"instance_class,attr"`
	// LicenseModel: string, optional
	LicenseModel terra.StringValue `hcl:"license_model,attr"`
	// PreferredEngineVersions: list of string, optional
	PreferredEngineVersions terra.ListValue[terra.StringValue] `hcl:"preferred_engine_versions,attr"`
	// PreferredInstanceClasses: list of string, optional
	PreferredInstanceClasses terra.ListValue[terra.StringValue] `hcl:"preferred_instance_classes,attr"`
	// StorageType: string, optional
	StorageType terra.StringValue `hcl:"storage_type,attr"`
	// SupportsEnhancedMonitoring: bool, optional
	SupportsEnhancedMonitoring terra.BoolValue `hcl:"supports_enhanced_monitoring,attr"`
	// SupportsGlobalDatabases: bool, optional
	SupportsGlobalDatabases terra.BoolValue `hcl:"supports_global_databases,attr"`
	// SupportsIamDatabaseAuthentication: bool, optional
	SupportsIamDatabaseAuthentication terra.BoolValue `hcl:"supports_iam_database_authentication,attr"`
	// SupportsIops: bool, optional
	SupportsIops terra.BoolValue `hcl:"supports_iops,attr"`
	// SupportsKerberosAuthentication: bool, optional
	SupportsKerberosAuthentication terra.BoolValue `hcl:"supports_kerberos_authentication,attr"`
	// SupportsPerformanceInsights: bool, optional
	SupportsPerformanceInsights terra.BoolValue `hcl:"supports_performance_insights,attr"`
	// SupportsStorageAutoscaling: bool, optional
	SupportsStorageAutoscaling terra.BoolValue `hcl:"supports_storage_autoscaling,attr"`
	// SupportsStorageEncryption: bool, optional
	SupportsStorageEncryption terra.BoolValue `hcl:"supports_storage_encryption,attr"`
	// Vpc: bool, optional
	Vpc terra.BoolValue `hcl:"vpc,attr"`
}
type dataRdsOrderableDbInstanceAttributes struct {
	ref terra.Reference
}

func (rodi dataRdsOrderableDbInstanceAttributes) AvailabilityZoneGroup() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("availability_zone_group"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) AvailabilityZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rodi.ref.Append("availability_zones"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) Engine() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("engine"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("engine_version"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("id"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) InstanceClass() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("instance_class"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) LicenseModel() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("license_model"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MaxIopsPerDbInstance() terra.NumberValue {
	return terra.ReferenceNumber(rodi.ref.Append("max_iops_per_db_instance"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MaxIopsPerGib() terra.NumberValue {
	return terra.ReferenceNumber(rodi.ref.Append("max_iops_per_gib"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MaxStorageSize() terra.NumberValue {
	return terra.ReferenceNumber(rodi.ref.Append("max_storage_size"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MinIopsPerDbInstance() terra.NumberValue {
	return terra.ReferenceNumber(rodi.ref.Append("min_iops_per_db_instance"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MinIopsPerGib() terra.NumberValue {
	return terra.ReferenceNumber(rodi.ref.Append("min_iops_per_gib"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MinStorageSize() terra.NumberValue {
	return terra.ReferenceNumber(rodi.ref.Append("min_storage_size"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) MultiAzCapable() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("multi_az_capable"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) OutpostCapable() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("outpost_capable"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) PreferredEngineVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rodi.ref.Append("preferred_engine_versions"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) PreferredInstanceClasses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rodi.ref.Append("preferred_instance_classes"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) ReadReplicaCapable() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("read_replica_capable"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) StorageType() terra.StringValue {
	return terra.ReferenceString(rodi.ref.Append("storage_type"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportedEngineModes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rodi.ref.Append("supported_engine_modes"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportedNetworkTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rodi.ref.Append("supported_network_types"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsEnhancedMonitoring() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_enhanced_monitoring"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsGlobalDatabases() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_global_databases"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsIamDatabaseAuthentication() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_iam_database_authentication"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsIops() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_iops"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsKerberosAuthentication() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_kerberos_authentication"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsPerformanceInsights() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_performance_insights"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsStorageAutoscaling() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_storage_autoscaling"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) SupportsStorageEncryption() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("supports_storage_encryption"))
}

func (rodi dataRdsOrderableDbInstanceAttributes) Vpc() terra.BoolValue {
	return terra.ReferenceBool(rodi.ref.Append("vpc"))
}
