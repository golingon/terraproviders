// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package rumappmonitor

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AppMonitorConfiguration struct {
	// AllowCookies: bool, optional
	AllowCookies terra.BoolValue `hcl:"allow_cookies,attr"`
	// EnableXray: bool, optional
	EnableXray terra.BoolValue `hcl:"enable_xray,attr"`
	// ExcludedPages: set of string, optional
	ExcludedPages terra.SetValue[terra.StringValue] `hcl:"excluded_pages,attr"`
	// FavoritePages: set of string, optional
	FavoritePages terra.SetValue[terra.StringValue] `hcl:"favorite_pages,attr"`
	// GuestRoleArn: string, optional
	GuestRoleArn terra.StringValue `hcl:"guest_role_arn,attr"`
	// IdentityPoolId: string, optional
	IdentityPoolId terra.StringValue `hcl:"identity_pool_id,attr"`
	// IncludedPages: set of string, optional
	IncludedPages terra.SetValue[terra.StringValue] `hcl:"included_pages,attr"`
	// SessionSampleRate: number, optional
	SessionSampleRate terra.NumberValue `hcl:"session_sample_rate,attr"`
	// Telemetries: set of string, optional
	Telemetries terra.SetValue[terra.StringValue] `hcl:"telemetries,attr"`
}

type CustomEvents struct {
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type AppMonitorConfigurationAttributes struct {
	ref terra.Reference
}

func (amc AppMonitorConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return amc.ref, nil
}

func (amc AppMonitorConfigurationAttributes) InternalWithRef(ref terra.Reference) AppMonitorConfigurationAttributes {
	return AppMonitorConfigurationAttributes{ref: ref}
}

func (amc AppMonitorConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return amc.ref.InternalTokens()
}

func (amc AppMonitorConfigurationAttributes) AllowCookies() terra.BoolValue {
	return terra.ReferenceAsBool(amc.ref.Append("allow_cookies"))
}

func (amc AppMonitorConfigurationAttributes) EnableXray() terra.BoolValue {
	return terra.ReferenceAsBool(amc.ref.Append("enable_xray"))
}

func (amc AppMonitorConfigurationAttributes) ExcludedPages() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amc.ref.Append("excluded_pages"))
}

func (amc AppMonitorConfigurationAttributes) FavoritePages() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amc.ref.Append("favorite_pages"))
}

func (amc AppMonitorConfigurationAttributes) GuestRoleArn() terra.StringValue {
	return terra.ReferenceAsString(amc.ref.Append("guest_role_arn"))
}

func (amc AppMonitorConfigurationAttributes) IdentityPoolId() terra.StringValue {
	return terra.ReferenceAsString(amc.ref.Append("identity_pool_id"))
}

func (amc AppMonitorConfigurationAttributes) IncludedPages() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amc.ref.Append("included_pages"))
}

func (amc AppMonitorConfigurationAttributes) SessionSampleRate() terra.NumberValue {
	return terra.ReferenceAsNumber(amc.ref.Append("session_sample_rate"))
}

func (amc AppMonitorConfigurationAttributes) Telemetries() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amc.ref.Append("telemetries"))
}

type CustomEventsAttributes struct {
	ref terra.Reference
}

func (ce CustomEventsAttributes) InternalRef() (terra.Reference, error) {
	return ce.ref, nil
}

func (ce CustomEventsAttributes) InternalWithRef(ref terra.Reference) CustomEventsAttributes {
	return CustomEventsAttributes{ref: ref}
}

func (ce CustomEventsAttributes) InternalTokens() hclwrite.Tokens {
	return ce.ref.InternalTokens()
}

func (ce CustomEventsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("status"))
}

type AppMonitorConfigurationState struct {
	AllowCookies      bool     `json:"allow_cookies"`
	EnableXray        bool     `json:"enable_xray"`
	ExcludedPages     []string `json:"excluded_pages"`
	FavoritePages     []string `json:"favorite_pages"`
	GuestRoleArn      string   `json:"guest_role_arn"`
	IdentityPoolId    string   `json:"identity_pool_id"`
	IncludedPages     []string `json:"included_pages"`
	SessionSampleRate float64  `json:"session_sample_rate"`
	Telemetries       []string `json:"telemetries"`
}

type CustomEventsState struct {
	Status string `json:"status"`
}
