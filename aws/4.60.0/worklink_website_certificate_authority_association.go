// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWorklinkWebsiteCertificateAuthorityAssociation(name string, args WorklinkWebsiteCertificateAuthorityAssociationArgs) *WorklinkWebsiteCertificateAuthorityAssociation {
	return &WorklinkWebsiteCertificateAuthorityAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WorklinkWebsiteCertificateAuthorityAssociation)(nil)

type WorklinkWebsiteCertificateAuthorityAssociation struct {
	Name  string
	Args  WorklinkWebsiteCertificateAuthorityAssociationArgs
	state *worklinkWebsiteCertificateAuthorityAssociationState
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) Type() string {
	return "aws_worklink_website_certificate_authority_association"
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) LocalName() string {
	return wwcaa.Name
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) Configuration() interface{} {
	return wwcaa.Args
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) Attributes() worklinkWebsiteCertificateAuthorityAssociationAttributes {
	return worklinkWebsiteCertificateAuthorityAssociationAttributes{ref: terra.ReferenceResource(wwcaa)}
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) ImportState(av io.Reader) error {
	wwcaa.state = &worklinkWebsiteCertificateAuthorityAssociationState{}
	if err := json.NewDecoder(av).Decode(wwcaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wwcaa.Type(), wwcaa.LocalName(), err)
	}
	return nil
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) State() (*worklinkWebsiteCertificateAuthorityAssociationState, bool) {
	return wwcaa.state, wwcaa.state != nil
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) StateMust() *worklinkWebsiteCertificateAuthorityAssociationState {
	if wwcaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wwcaa.Type(), wwcaa.LocalName()))
	}
	return wwcaa.state
}

func (wwcaa *WorklinkWebsiteCertificateAuthorityAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(wwcaa)
}

type WorklinkWebsiteCertificateAuthorityAssociationArgs struct {
	// Certificate: string, required
	Certificate terra.StringValue `hcl:"certificate,attr" validate:"required"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// FleetArn: string, required
	FleetArn terra.StringValue `hcl:"fleet_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that WorklinkWebsiteCertificateAuthorityAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type worklinkWebsiteCertificateAuthorityAssociationAttributes struct {
	ref terra.Reference
}

func (wwcaa worklinkWebsiteCertificateAuthorityAssociationAttributes) Certificate() terra.StringValue {
	return terra.ReferenceString(wwcaa.ref.Append("certificate"))
}

func (wwcaa worklinkWebsiteCertificateAuthorityAssociationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(wwcaa.ref.Append("display_name"))
}

func (wwcaa worklinkWebsiteCertificateAuthorityAssociationAttributes) FleetArn() terra.StringValue {
	return terra.ReferenceString(wwcaa.ref.Append("fleet_arn"))
}

func (wwcaa worklinkWebsiteCertificateAuthorityAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wwcaa.ref.Append("id"))
}

func (wwcaa worklinkWebsiteCertificateAuthorityAssociationAttributes) WebsiteCaId() terra.StringValue {
	return terra.ReferenceString(wwcaa.ref.Append("website_ca_id"))
}

type worklinkWebsiteCertificateAuthorityAssociationState struct {
	Certificate string `json:"certificate"`
	DisplayName string `json:"display_name"`
	FleetArn    string `json:"fleet_arn"`
	Id          string `json:"id"`
	WebsiteCaId string `json:"website_ca_id"`
}
