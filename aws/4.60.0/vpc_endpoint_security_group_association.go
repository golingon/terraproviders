// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewVpcEndpointSecurityGroupAssociation(name string, args VpcEndpointSecurityGroupAssociationArgs) *VpcEndpointSecurityGroupAssociation {
	return &VpcEndpointSecurityGroupAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpcEndpointSecurityGroupAssociation)(nil)

type VpcEndpointSecurityGroupAssociation struct {
	Name  string
	Args  VpcEndpointSecurityGroupAssociationArgs
	state *vpcEndpointSecurityGroupAssociationState
}

func (vesga *VpcEndpointSecurityGroupAssociation) Type() string {
	return "aws_vpc_endpoint_security_group_association"
}

func (vesga *VpcEndpointSecurityGroupAssociation) LocalName() string {
	return vesga.Name
}

func (vesga *VpcEndpointSecurityGroupAssociation) Configuration() interface{} {
	return vesga.Args
}

func (vesga *VpcEndpointSecurityGroupAssociation) Attributes() vpcEndpointSecurityGroupAssociationAttributes {
	return vpcEndpointSecurityGroupAssociationAttributes{ref: terra.ReferenceResource(vesga)}
}

func (vesga *VpcEndpointSecurityGroupAssociation) ImportState(av io.Reader) error {
	vesga.state = &vpcEndpointSecurityGroupAssociationState{}
	if err := json.NewDecoder(av).Decode(vesga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vesga.Type(), vesga.LocalName(), err)
	}
	return nil
}

func (vesga *VpcEndpointSecurityGroupAssociation) State() (*vpcEndpointSecurityGroupAssociationState, bool) {
	return vesga.state, vesga.state != nil
}

func (vesga *VpcEndpointSecurityGroupAssociation) StateMust() *vpcEndpointSecurityGroupAssociationState {
	if vesga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vesga.Type(), vesga.LocalName()))
	}
	return vesga.state
}

func (vesga *VpcEndpointSecurityGroupAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(vesga)
}

type VpcEndpointSecurityGroupAssociationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ReplaceDefaultAssociation: bool, optional
	ReplaceDefaultAssociation terra.BoolValue `hcl:"replace_default_association,attr"`
	// SecurityGroupId: string, required
	SecurityGroupId terra.StringValue `hcl:"security_group_id,attr" validate:"required"`
	// VpcEndpointId: string, required
	VpcEndpointId terra.StringValue `hcl:"vpc_endpoint_id,attr" validate:"required"`
	// DependsOn contains resources that VpcEndpointSecurityGroupAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type vpcEndpointSecurityGroupAssociationAttributes struct {
	ref terra.Reference
}

func (vesga vpcEndpointSecurityGroupAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vesga.ref.Append("id"))
}

func (vesga vpcEndpointSecurityGroupAssociationAttributes) ReplaceDefaultAssociation() terra.BoolValue {
	return terra.ReferenceBool(vesga.ref.Append("replace_default_association"))
}

func (vesga vpcEndpointSecurityGroupAssociationAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceString(vesga.ref.Append("security_group_id"))
}

func (vesga vpcEndpointSecurityGroupAssociationAttributes) VpcEndpointId() terra.StringValue {
	return terra.ReferenceString(vesga.ref.Append("vpc_endpoint_id"))
}

type vpcEndpointSecurityGroupAssociationState struct {
	Id                        string `json:"id"`
	ReplaceDefaultAssociation bool   `json:"replace_default_association"`
	SecurityGroupId           string `json:"security_group_id"`
	VpcEndpointId             string `json:"vpc_endpoint_id"`
}
