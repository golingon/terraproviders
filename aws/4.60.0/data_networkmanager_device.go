// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datanetworkmanagerdevice "github.com/golingon/terraproviders/aws/4.60.0/datanetworkmanagerdevice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataNetworkmanagerDevice(name string, args DataNetworkmanagerDeviceArgs) *DataNetworkmanagerDevice {
	return &DataNetworkmanagerDevice{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNetworkmanagerDevice)(nil)

type DataNetworkmanagerDevice struct {
	Name string
	Args DataNetworkmanagerDeviceArgs
}

func (nd *DataNetworkmanagerDevice) DataSource() string {
	return "aws_networkmanager_device"
}

func (nd *DataNetworkmanagerDevice) LocalName() string {
	return nd.Name
}

func (nd *DataNetworkmanagerDevice) Configuration() interface{} {
	return nd.Args
}

func (nd *DataNetworkmanagerDevice) Attributes() dataNetworkmanagerDeviceAttributes {
	return dataNetworkmanagerDeviceAttributes{ref: terra.ReferenceDataResource(nd)}
}

type DataNetworkmanagerDeviceArgs struct {
	// DeviceId: string, required
	DeviceId terra.StringValue `hcl:"device_id,attr" validate:"required"`
	// GlobalNetworkId: string, required
	GlobalNetworkId terra.StringValue `hcl:"global_network_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// AwsLocation: min=0
	AwsLocation []datanetworkmanagerdevice.AwsLocation `hcl:"aws_location,block" validate:"min=0"`
	// Location: min=0
	Location []datanetworkmanagerdevice.Location `hcl:"location,block" validate:"min=0"`
}
type dataNetworkmanagerDeviceAttributes struct {
	ref terra.Reference
}

func (nd dataNetworkmanagerDeviceAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("arn"))
}

func (nd dataNetworkmanagerDeviceAttributes) Description() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("description"))
}

func (nd dataNetworkmanagerDeviceAttributes) DeviceId() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("device_id"))
}

func (nd dataNetworkmanagerDeviceAttributes) GlobalNetworkId() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("global_network_id"))
}

func (nd dataNetworkmanagerDeviceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("id"))
}

func (nd dataNetworkmanagerDeviceAttributes) Model() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("model"))
}

func (nd dataNetworkmanagerDeviceAttributes) SerialNumber() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("serial_number"))
}

func (nd dataNetworkmanagerDeviceAttributes) SiteId() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("site_id"))
}

func (nd dataNetworkmanagerDeviceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](nd.ref.Append("tags"))
}

func (nd dataNetworkmanagerDeviceAttributes) Type() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("type"))
}

func (nd dataNetworkmanagerDeviceAttributes) Vendor() terra.StringValue {
	return terra.ReferenceString(nd.ref.Append("vendor"))
}

func (nd dataNetworkmanagerDeviceAttributes) AwsLocation() terra.ListValue[datanetworkmanagerdevice.AwsLocationAttributes] {
	return terra.ReferenceList[datanetworkmanagerdevice.AwsLocationAttributes](nd.ref.Append("aws_location"))
}

func (nd dataNetworkmanagerDeviceAttributes) Location() terra.ListValue[datanetworkmanagerdevice.LocationAttributes] {
	return terra.ReferenceList[datanetworkmanagerdevice.LocationAttributes](nd.ref.Append("location"))
}
