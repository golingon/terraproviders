// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSsoadminPermissionSetInlinePolicy(name string, args SsoadminPermissionSetInlinePolicyArgs) *SsoadminPermissionSetInlinePolicy {
	return &SsoadminPermissionSetInlinePolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsoadminPermissionSetInlinePolicy)(nil)

type SsoadminPermissionSetInlinePolicy struct {
	Name  string
	Args  SsoadminPermissionSetInlinePolicyArgs
	state *ssoadminPermissionSetInlinePolicyState
}

func (spsip *SsoadminPermissionSetInlinePolicy) Type() string {
	return "aws_ssoadmin_permission_set_inline_policy"
}

func (spsip *SsoadminPermissionSetInlinePolicy) LocalName() string {
	return spsip.Name
}

func (spsip *SsoadminPermissionSetInlinePolicy) Configuration() interface{} {
	return spsip.Args
}

func (spsip *SsoadminPermissionSetInlinePolicy) Attributes() ssoadminPermissionSetInlinePolicyAttributes {
	return ssoadminPermissionSetInlinePolicyAttributes{ref: terra.ReferenceResource(spsip)}
}

func (spsip *SsoadminPermissionSetInlinePolicy) ImportState(av io.Reader) error {
	spsip.state = &ssoadminPermissionSetInlinePolicyState{}
	if err := json.NewDecoder(av).Decode(spsip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", spsip.Type(), spsip.LocalName(), err)
	}
	return nil
}

func (spsip *SsoadminPermissionSetInlinePolicy) State() (*ssoadminPermissionSetInlinePolicyState, bool) {
	return spsip.state, spsip.state != nil
}

func (spsip *SsoadminPermissionSetInlinePolicy) StateMust() *ssoadminPermissionSetInlinePolicyState {
	if spsip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", spsip.Type(), spsip.LocalName()))
	}
	return spsip.state
}

func (spsip *SsoadminPermissionSetInlinePolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(spsip)
}

type SsoadminPermissionSetInlinePolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InlinePolicy: string, required
	InlinePolicy terra.StringValue `hcl:"inline_policy,attr" validate:"required"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// PermissionSetArn: string, required
	PermissionSetArn terra.StringValue `hcl:"permission_set_arn,attr" validate:"required"`
	// DependsOn contains resources that SsoadminPermissionSetInlinePolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ssoadminPermissionSetInlinePolicyAttributes struct {
	ref terra.Reference
}

func (spsip ssoadminPermissionSetInlinePolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spsip.ref.Append("id"))
}

func (spsip ssoadminPermissionSetInlinePolicyAttributes) InlinePolicy() terra.StringValue {
	return terra.ReferenceString(spsip.ref.Append("inline_policy"))
}

func (spsip ssoadminPermissionSetInlinePolicyAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceString(spsip.ref.Append("instance_arn"))
}

func (spsip ssoadminPermissionSetInlinePolicyAttributes) PermissionSetArn() terra.StringValue {
	return terra.ReferenceString(spsip.ref.Append("permission_set_arn"))
}

type ssoadminPermissionSetInlinePolicyState struct {
	Id               string `json:"id"`
	InlinePolicy     string `json:"inline_policy"`
	InstanceArn      string `json:"instance_arn"`
	PermissionSetArn string `json:"permission_set_arn"`
}
