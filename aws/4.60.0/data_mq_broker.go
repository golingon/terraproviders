// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datamqbroker "github.com/golingon/terraproviders/aws/4.60.0/datamqbroker"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMqBroker(name string, args DataMqBrokerArgs) *DataMqBroker {
	return &DataMqBroker{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMqBroker)(nil)

type DataMqBroker struct {
	Name string
	Args DataMqBrokerArgs
}

func (mb *DataMqBroker) DataSource() string {
	return "aws_mq_broker"
}

func (mb *DataMqBroker) LocalName() string {
	return mb.Name
}

func (mb *DataMqBroker) Configuration() interface{} {
	return mb.Args
}

func (mb *DataMqBroker) Attributes() dataMqBrokerAttributes {
	return dataMqBrokerAttributes{ref: terra.ReferenceDataResource(mb)}
}

type DataMqBrokerArgs struct {
	// BrokerId: string, optional
	BrokerId terra.StringValue `hcl:"broker_id,attr"`
	// BrokerName: string, optional
	BrokerName terra.StringValue `hcl:"broker_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Configuration: min=0
	Configuration []datamqbroker.Configuration `hcl:"configuration,block" validate:"min=0"`
	// EncryptionOptions: min=0
	EncryptionOptions []datamqbroker.EncryptionOptions `hcl:"encryption_options,block" validate:"min=0"`
	// Instances: min=0
	Instances []datamqbroker.Instances `hcl:"instances,block" validate:"min=0"`
	// LdapServerMetadata: min=0
	LdapServerMetadata []datamqbroker.LdapServerMetadata `hcl:"ldap_server_metadata,block" validate:"min=0"`
	// Logs: min=0
	Logs []datamqbroker.Logs `hcl:"logs,block" validate:"min=0"`
	// MaintenanceWindowStartTime: min=0
	MaintenanceWindowStartTime []datamqbroker.MaintenanceWindowStartTime `hcl:"maintenance_window_start_time,block" validate:"min=0"`
	// User: min=0
	User []datamqbroker.User `hcl:"user,block" validate:"min=0"`
}
type dataMqBrokerAttributes struct {
	ref terra.Reference
}

func (mb dataMqBrokerAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("arn"))
}

func (mb dataMqBrokerAttributes) AuthenticationStrategy() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("authentication_strategy"))
}

func (mb dataMqBrokerAttributes) AutoMinorVersionUpgrade() terra.BoolValue {
	return terra.ReferenceBool(mb.ref.Append("auto_minor_version_upgrade"))
}

func (mb dataMqBrokerAttributes) BrokerId() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("broker_id"))
}

func (mb dataMqBrokerAttributes) BrokerName() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("broker_name"))
}

func (mb dataMqBrokerAttributes) DeploymentMode() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("deployment_mode"))
}

func (mb dataMqBrokerAttributes) EngineType() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("engine_type"))
}

func (mb dataMqBrokerAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("engine_version"))
}

func (mb dataMqBrokerAttributes) HostInstanceType() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("host_instance_type"))
}

func (mb dataMqBrokerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("id"))
}

func (mb dataMqBrokerAttributes) PubliclyAccessible() terra.BoolValue {
	return terra.ReferenceBool(mb.ref.Append("publicly_accessible"))
}

func (mb dataMqBrokerAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](mb.ref.Append("security_groups"))
}

func (mb dataMqBrokerAttributes) StorageType() terra.StringValue {
	return terra.ReferenceString(mb.ref.Append("storage_type"))
}

func (mb dataMqBrokerAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](mb.ref.Append("subnet_ids"))
}

func (mb dataMqBrokerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mb.ref.Append("tags"))
}

func (mb dataMqBrokerAttributes) Configuration() terra.ListValue[datamqbroker.ConfigurationAttributes] {
	return terra.ReferenceList[datamqbroker.ConfigurationAttributes](mb.ref.Append("configuration"))
}

func (mb dataMqBrokerAttributes) EncryptionOptions() terra.ListValue[datamqbroker.EncryptionOptionsAttributes] {
	return terra.ReferenceList[datamqbroker.EncryptionOptionsAttributes](mb.ref.Append("encryption_options"))
}

func (mb dataMqBrokerAttributes) Instances() terra.ListValue[datamqbroker.InstancesAttributes] {
	return terra.ReferenceList[datamqbroker.InstancesAttributes](mb.ref.Append("instances"))
}

func (mb dataMqBrokerAttributes) LdapServerMetadata() terra.ListValue[datamqbroker.LdapServerMetadataAttributes] {
	return terra.ReferenceList[datamqbroker.LdapServerMetadataAttributes](mb.ref.Append("ldap_server_metadata"))
}

func (mb dataMqBrokerAttributes) Logs() terra.ListValue[datamqbroker.LogsAttributes] {
	return terra.ReferenceList[datamqbroker.LogsAttributes](mb.ref.Append("logs"))
}

func (mb dataMqBrokerAttributes) MaintenanceWindowStartTime() terra.ListValue[datamqbroker.MaintenanceWindowStartTimeAttributes] {
	return terra.ReferenceList[datamqbroker.MaintenanceWindowStartTimeAttributes](mb.ref.Append("maintenance_window_start_time"))
}

func (mb dataMqBrokerAttributes) User() terra.SetValue[datamqbroker.UserAttributes] {
	return terra.ReferenceSet[datamqbroker.UserAttributes](mb.ref.Append("user"))
}
