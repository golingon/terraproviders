// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataimagebuildercomponents "github.com/golingon/terraproviders/aws/4.60.0/dataimagebuildercomponents"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataImagebuilderComponents(name string, args DataImagebuilderComponentsArgs) *DataImagebuilderComponents {
	return &DataImagebuilderComponents{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataImagebuilderComponents)(nil)

type DataImagebuilderComponents struct {
	Name string
	Args DataImagebuilderComponentsArgs
}

func (ic *DataImagebuilderComponents) DataSource() string {
	return "aws_imagebuilder_components"
}

func (ic *DataImagebuilderComponents) LocalName() string {
	return ic.Name
}

func (ic *DataImagebuilderComponents) Configuration() interface{} {
	return ic.Args
}

func (ic *DataImagebuilderComponents) Attributes() dataImagebuilderComponentsAttributes {
	return dataImagebuilderComponentsAttributes{ref: terra.ReferenceDataResource(ic)}
}

type DataImagebuilderComponentsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Owner: string, optional
	Owner terra.StringValue `hcl:"owner,attr"`
	// Filter: min=0
	Filter []dataimagebuildercomponents.Filter `hcl:"filter,block" validate:"min=0"`
}
type dataImagebuilderComponentsAttributes struct {
	ref terra.Reference
}

func (ic dataImagebuilderComponentsAttributes) Arns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ic.ref.Append("arns"))
}

func (ic dataImagebuilderComponentsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("id"))
}

func (ic dataImagebuilderComponentsAttributes) Names() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ic.ref.Append("names"))
}

func (ic dataImagebuilderComponentsAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("owner"))
}

func (ic dataImagebuilderComponentsAttributes) Filter() terra.SetValue[dataimagebuildercomponents.FilterAttributes] {
	return terra.ReferenceSet[dataimagebuildercomponents.FilterAttributes](ic.ref.Append("filter"))
}
