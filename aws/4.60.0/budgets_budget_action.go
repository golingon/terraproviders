// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	budgetsbudgetaction "github.com/golingon/terraproviders/aws/4.60.0/budgetsbudgetaction"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBudgetsBudgetAction(name string, args BudgetsBudgetActionArgs) *BudgetsBudgetAction {
	return &BudgetsBudgetAction{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BudgetsBudgetAction)(nil)

type BudgetsBudgetAction struct {
	Name  string
	Args  BudgetsBudgetActionArgs
	state *budgetsBudgetActionState
}

func (bba *BudgetsBudgetAction) Type() string {
	return "aws_budgets_budget_action"
}

func (bba *BudgetsBudgetAction) LocalName() string {
	return bba.Name
}

func (bba *BudgetsBudgetAction) Configuration() interface{} {
	return bba.Args
}

func (bba *BudgetsBudgetAction) Attributes() budgetsBudgetActionAttributes {
	return budgetsBudgetActionAttributes{ref: terra.ReferenceResource(bba)}
}

func (bba *BudgetsBudgetAction) ImportState(av io.Reader) error {
	bba.state = &budgetsBudgetActionState{}
	if err := json.NewDecoder(av).Decode(bba.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bba.Type(), bba.LocalName(), err)
	}
	return nil
}

func (bba *BudgetsBudgetAction) State() (*budgetsBudgetActionState, bool) {
	return bba.state, bba.state != nil
}

func (bba *BudgetsBudgetAction) StateMust() *budgetsBudgetActionState {
	if bba.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bba.Type(), bba.LocalName()))
	}
	return bba.state
}

func (bba *BudgetsBudgetAction) DependOn() terra.Reference {
	return terra.ReferenceResource(bba)
}

type BudgetsBudgetActionArgs struct {
	// AccountId: string, optional
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// ActionType: string, required
	ActionType terra.StringValue `hcl:"action_type,attr" validate:"required"`
	// ApprovalModel: string, required
	ApprovalModel terra.StringValue `hcl:"approval_model,attr" validate:"required"`
	// BudgetName: string, required
	BudgetName terra.StringValue `hcl:"budget_name,attr" validate:"required"`
	// ExecutionRoleArn: string, required
	ExecutionRoleArn terra.StringValue `hcl:"execution_role_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NotificationType: string, required
	NotificationType terra.StringValue `hcl:"notification_type,attr" validate:"required"`
	// ActionThreshold: required
	ActionThreshold *budgetsbudgetaction.ActionThreshold `hcl:"action_threshold,block" validate:"required"`
	// Definition: required
	Definition *budgetsbudgetaction.Definition `hcl:"definition,block" validate:"required"`
	// Subscriber: min=1,max=11
	Subscriber []budgetsbudgetaction.Subscriber `hcl:"subscriber,block" validate:"min=1,max=11"`
	// Timeouts: optional
	Timeouts *budgetsbudgetaction.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that BudgetsBudgetAction depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type budgetsBudgetActionAttributes struct {
	ref terra.Reference
}

func (bba budgetsBudgetActionAttributes) AccountId() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("account_id"))
}

func (bba budgetsBudgetActionAttributes) ActionId() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("action_id"))
}

func (bba budgetsBudgetActionAttributes) ActionType() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("action_type"))
}

func (bba budgetsBudgetActionAttributes) ApprovalModel() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("approval_model"))
}

func (bba budgetsBudgetActionAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("arn"))
}

func (bba budgetsBudgetActionAttributes) BudgetName() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("budget_name"))
}

func (bba budgetsBudgetActionAttributes) ExecutionRoleArn() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("execution_role_arn"))
}

func (bba budgetsBudgetActionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("id"))
}

func (bba budgetsBudgetActionAttributes) NotificationType() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("notification_type"))
}

func (bba budgetsBudgetActionAttributes) Status() terra.StringValue {
	return terra.ReferenceString(bba.ref.Append("status"))
}

func (bba budgetsBudgetActionAttributes) ActionThreshold() terra.ListValue[budgetsbudgetaction.ActionThresholdAttributes] {
	return terra.ReferenceList[budgetsbudgetaction.ActionThresholdAttributes](bba.ref.Append("action_threshold"))
}

func (bba budgetsBudgetActionAttributes) Definition() terra.ListValue[budgetsbudgetaction.DefinitionAttributes] {
	return terra.ReferenceList[budgetsbudgetaction.DefinitionAttributes](bba.ref.Append("definition"))
}

func (bba budgetsBudgetActionAttributes) Subscriber() terra.SetValue[budgetsbudgetaction.SubscriberAttributes] {
	return terra.ReferenceSet[budgetsbudgetaction.SubscriberAttributes](bba.ref.Append("subscriber"))
}

func (bba budgetsBudgetActionAttributes) Timeouts() budgetsbudgetaction.TimeoutsAttributes {
	return terra.ReferenceSingle[budgetsbudgetaction.TimeoutsAttributes](bba.ref.Append("timeouts"))
}

type budgetsBudgetActionState struct {
	AccountId        string                                     `json:"account_id"`
	ActionId         string                                     `json:"action_id"`
	ActionType       string                                     `json:"action_type"`
	ApprovalModel    string                                     `json:"approval_model"`
	Arn              string                                     `json:"arn"`
	BudgetName       string                                     `json:"budget_name"`
	ExecutionRoleArn string                                     `json:"execution_role_arn"`
	Id               string                                     `json:"id"`
	NotificationType string                                     `json:"notification_type"`
	Status           string                                     `json:"status"`
	ActionThreshold  []budgetsbudgetaction.ActionThresholdState `json:"action_threshold"`
	Definition       []budgetsbudgetaction.DefinitionState      `json:"definition"`
	Subscriber       []budgetsbudgetaction.SubscriberState      `json:"subscriber"`
	Timeouts         *budgetsbudgetaction.TimeoutsState         `json:"timeouts"`
}
