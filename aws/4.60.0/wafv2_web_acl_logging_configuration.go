// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	wafv2webaclloggingconfiguration "github.com/golingon/terraproviders/aws/4.60.0/wafv2webaclloggingconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWafv2WebAclLoggingConfiguration(name string, args Wafv2WebAclLoggingConfigurationArgs) *Wafv2WebAclLoggingConfiguration {
	return &Wafv2WebAclLoggingConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Wafv2WebAclLoggingConfiguration)(nil)

type Wafv2WebAclLoggingConfiguration struct {
	Name  string
	Args  Wafv2WebAclLoggingConfigurationArgs
	state *wafv2WebAclLoggingConfigurationState
}

func (wwalc *Wafv2WebAclLoggingConfiguration) Type() string {
	return "aws_wafv2_web_acl_logging_configuration"
}

func (wwalc *Wafv2WebAclLoggingConfiguration) LocalName() string {
	return wwalc.Name
}

func (wwalc *Wafv2WebAclLoggingConfiguration) Configuration() interface{} {
	return wwalc.Args
}

func (wwalc *Wafv2WebAclLoggingConfiguration) Attributes() wafv2WebAclLoggingConfigurationAttributes {
	return wafv2WebAclLoggingConfigurationAttributes{ref: terra.ReferenceResource(wwalc)}
}

func (wwalc *Wafv2WebAclLoggingConfiguration) ImportState(av io.Reader) error {
	wwalc.state = &wafv2WebAclLoggingConfigurationState{}
	if err := json.NewDecoder(av).Decode(wwalc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wwalc.Type(), wwalc.LocalName(), err)
	}
	return nil
}

func (wwalc *Wafv2WebAclLoggingConfiguration) State() (*wafv2WebAclLoggingConfigurationState, bool) {
	return wwalc.state, wwalc.state != nil
}

func (wwalc *Wafv2WebAclLoggingConfiguration) StateMust() *wafv2WebAclLoggingConfigurationState {
	if wwalc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wwalc.Type(), wwalc.LocalName()))
	}
	return wwalc.state
}

func (wwalc *Wafv2WebAclLoggingConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(wwalc)
}

type Wafv2WebAclLoggingConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogDestinationConfigs: set of string, required
	LogDestinationConfigs terra.SetValue[terra.StringValue] `hcl:"log_destination_configs,attr" validate:"required"`
	// ResourceArn: string, required
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
	// LoggingFilter: optional
	LoggingFilter *wafv2webaclloggingconfiguration.LoggingFilter `hcl:"logging_filter,block"`
	// RedactedFields: min=0,max=100
	RedactedFields []wafv2webaclloggingconfiguration.RedactedFields `hcl:"redacted_fields,block" validate:"min=0,max=100"`
	// DependsOn contains resources that Wafv2WebAclLoggingConfiguration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type wafv2WebAclLoggingConfigurationAttributes struct {
	ref terra.Reference
}

func (wwalc wafv2WebAclLoggingConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wwalc.ref.Append("id"))
}

func (wwalc wafv2WebAclLoggingConfigurationAttributes) LogDestinationConfigs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](wwalc.ref.Append("log_destination_configs"))
}

func (wwalc wafv2WebAclLoggingConfigurationAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceString(wwalc.ref.Append("resource_arn"))
}

func (wwalc wafv2WebAclLoggingConfigurationAttributes) LoggingFilter() terra.ListValue[wafv2webaclloggingconfiguration.LoggingFilterAttributes] {
	return terra.ReferenceList[wafv2webaclloggingconfiguration.LoggingFilterAttributes](wwalc.ref.Append("logging_filter"))
}

func (wwalc wafv2WebAclLoggingConfigurationAttributes) RedactedFields() terra.ListValue[wafv2webaclloggingconfiguration.RedactedFieldsAttributes] {
	return terra.ReferenceList[wafv2webaclloggingconfiguration.RedactedFieldsAttributes](wwalc.ref.Append("redacted_fields"))
}

type wafv2WebAclLoggingConfigurationState struct {
	Id                    string                                                `json:"id"`
	LogDestinationConfigs []string                                              `json:"log_destination_configs"`
	ResourceArn           string                                                `json:"resource_arn"`
	LoggingFilter         []wafv2webaclloggingconfiguration.LoggingFilterState  `json:"logging_filter"`
	RedactedFields        []wafv2webaclloggingconfiguration.RedactedFieldsState `json:"redacted_fields"`
}
