// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCognitoUserInGroup(name string, args CognitoUserInGroupArgs) *CognitoUserInGroup {
	return &CognitoUserInGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CognitoUserInGroup)(nil)

type CognitoUserInGroup struct {
	Name  string
	Args  CognitoUserInGroupArgs
	state *cognitoUserInGroupState
}

func (cuig *CognitoUserInGroup) Type() string {
	return "aws_cognito_user_in_group"
}

func (cuig *CognitoUserInGroup) LocalName() string {
	return cuig.Name
}

func (cuig *CognitoUserInGroup) Configuration() interface{} {
	return cuig.Args
}

func (cuig *CognitoUserInGroup) Attributes() cognitoUserInGroupAttributes {
	return cognitoUserInGroupAttributes{ref: terra.ReferenceResource(cuig)}
}

func (cuig *CognitoUserInGroup) ImportState(av io.Reader) error {
	cuig.state = &cognitoUserInGroupState{}
	if err := json.NewDecoder(av).Decode(cuig.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cuig.Type(), cuig.LocalName(), err)
	}
	return nil
}

func (cuig *CognitoUserInGroup) State() (*cognitoUserInGroupState, bool) {
	return cuig.state, cuig.state != nil
}

func (cuig *CognitoUserInGroup) StateMust() *cognitoUserInGroupState {
	if cuig.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cuig.Type(), cuig.LocalName()))
	}
	return cuig.state
}

func (cuig *CognitoUserInGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(cuig)
}

type CognitoUserInGroupArgs struct {
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
	// DependsOn contains resources that CognitoUserInGroup depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cognitoUserInGroupAttributes struct {
	ref terra.Reference
}

func (cuig cognitoUserInGroupAttributes) GroupName() terra.StringValue {
	return terra.ReferenceString(cuig.ref.Append("group_name"))
}

func (cuig cognitoUserInGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cuig.ref.Append("id"))
}

func (cuig cognitoUserInGroupAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceString(cuig.ref.Append("user_pool_id"))
}

func (cuig cognitoUserInGroupAttributes) Username() terra.StringValue {
	return terra.ReferenceString(cuig.ref.Append("username"))
}

type cognitoUserInGroupState struct {
	GroupName  string `json:"group_name"`
	Id         string `json:"id"`
	UserPoolId string `json:"user_pool_id"`
	Username   string `json:"username"`
}
