// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataimagebuildercontainerrecipes "github.com/golingon/terraproviders/aws/4.60.0/dataimagebuildercontainerrecipes"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataImagebuilderContainerRecipes(name string, args DataImagebuilderContainerRecipesArgs) *DataImagebuilderContainerRecipes {
	return &DataImagebuilderContainerRecipes{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataImagebuilderContainerRecipes)(nil)

type DataImagebuilderContainerRecipes struct {
	Name string
	Args DataImagebuilderContainerRecipesArgs
}

func (icr *DataImagebuilderContainerRecipes) DataSource() string {
	return "aws_imagebuilder_container_recipes"
}

func (icr *DataImagebuilderContainerRecipes) LocalName() string {
	return icr.Name
}

func (icr *DataImagebuilderContainerRecipes) Configuration() interface{} {
	return icr.Args
}

func (icr *DataImagebuilderContainerRecipes) Attributes() dataImagebuilderContainerRecipesAttributes {
	return dataImagebuilderContainerRecipesAttributes{ref: terra.ReferenceDataResource(icr)}
}

type DataImagebuilderContainerRecipesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Owner: string, optional
	Owner terra.StringValue `hcl:"owner,attr"`
	// Filter: min=0
	Filter []dataimagebuildercontainerrecipes.Filter `hcl:"filter,block" validate:"min=0"`
}
type dataImagebuilderContainerRecipesAttributes struct {
	ref terra.Reference
}

func (icr dataImagebuilderContainerRecipesAttributes) Arns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](icr.ref.Append("arns"))
}

func (icr dataImagebuilderContainerRecipesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("id"))
}

func (icr dataImagebuilderContainerRecipesAttributes) Names() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](icr.ref.Append("names"))
}

func (icr dataImagebuilderContainerRecipesAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(icr.ref.Append("owner"))
}

func (icr dataImagebuilderContainerRecipesAttributes) Filter() terra.SetValue[dataimagebuildercontainerrecipes.FilterAttributes] {
	return terra.ReferenceSet[dataimagebuildercontainerrecipes.FilterAttributes](icr.ref.Append("filter"))
}
