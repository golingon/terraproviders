// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataemrcontainersvirtualcluster "github.com/golingon/terraproviders/aws/4.60.0/dataemrcontainersvirtualcluster"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEmrcontainersVirtualCluster(name string, args DataEmrcontainersVirtualClusterArgs) *DataEmrcontainersVirtualCluster {
	return &DataEmrcontainersVirtualCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEmrcontainersVirtualCluster)(nil)

type DataEmrcontainersVirtualCluster struct {
	Name string
	Args DataEmrcontainersVirtualClusterArgs
}

func (evc *DataEmrcontainersVirtualCluster) DataSource() string {
	return "aws_emrcontainers_virtual_cluster"
}

func (evc *DataEmrcontainersVirtualCluster) LocalName() string {
	return evc.Name
}

func (evc *DataEmrcontainersVirtualCluster) Configuration() interface{} {
	return evc.Args
}

func (evc *DataEmrcontainersVirtualCluster) Attributes() dataEmrcontainersVirtualClusterAttributes {
	return dataEmrcontainersVirtualClusterAttributes{ref: terra.ReferenceDataResource(evc)}
}

type DataEmrcontainersVirtualClusterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VirtualClusterId: string, required
	VirtualClusterId terra.StringValue `hcl:"virtual_cluster_id,attr" validate:"required"`
	// ContainerProvider: min=0
	ContainerProvider []dataemrcontainersvirtualcluster.ContainerProvider `hcl:"container_provider,block" validate:"min=0"`
}
type dataEmrcontainersVirtualClusterAttributes struct {
	ref terra.Reference
}

func (evc dataEmrcontainersVirtualClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(evc.ref.Append("arn"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceString(evc.ref.Append("created_at"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(evc.ref.Append("id"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceString(evc.ref.Append("name"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) State() terra.StringValue {
	return terra.ReferenceString(evc.ref.Append("state"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](evc.ref.Append("tags"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) VirtualClusterId() terra.StringValue {
	return terra.ReferenceString(evc.ref.Append("virtual_cluster_id"))
}

func (evc dataEmrcontainersVirtualClusterAttributes) ContainerProvider() terra.ListValue[dataemrcontainersvirtualcluster.ContainerProviderAttributes] {
	return terra.ReferenceList[dataemrcontainersvirtualcluster.ContainerProviderAttributes](evc.ref.Append("container_provider"))
}
