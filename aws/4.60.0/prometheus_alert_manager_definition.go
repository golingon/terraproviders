// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPrometheusAlertManagerDefinition(name string, args PrometheusAlertManagerDefinitionArgs) *PrometheusAlertManagerDefinition {
	return &PrometheusAlertManagerDefinition{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PrometheusAlertManagerDefinition)(nil)

type PrometheusAlertManagerDefinition struct {
	Name  string
	Args  PrometheusAlertManagerDefinitionArgs
	state *prometheusAlertManagerDefinitionState
}

func (pamd *PrometheusAlertManagerDefinition) Type() string {
	return "aws_prometheus_alert_manager_definition"
}

func (pamd *PrometheusAlertManagerDefinition) LocalName() string {
	return pamd.Name
}

func (pamd *PrometheusAlertManagerDefinition) Configuration() interface{} {
	return pamd.Args
}

func (pamd *PrometheusAlertManagerDefinition) Attributes() prometheusAlertManagerDefinitionAttributes {
	return prometheusAlertManagerDefinitionAttributes{ref: terra.ReferenceResource(pamd)}
}

func (pamd *PrometheusAlertManagerDefinition) ImportState(av io.Reader) error {
	pamd.state = &prometheusAlertManagerDefinitionState{}
	if err := json.NewDecoder(av).Decode(pamd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pamd.Type(), pamd.LocalName(), err)
	}
	return nil
}

func (pamd *PrometheusAlertManagerDefinition) State() (*prometheusAlertManagerDefinitionState, bool) {
	return pamd.state, pamd.state != nil
}

func (pamd *PrometheusAlertManagerDefinition) StateMust() *prometheusAlertManagerDefinitionState {
	if pamd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pamd.Type(), pamd.LocalName()))
	}
	return pamd.state
}

func (pamd *PrometheusAlertManagerDefinition) DependOn() terra.Reference {
	return terra.ReferenceResource(pamd)
}

type PrometheusAlertManagerDefinitionArgs struct {
	// Definition: string, required
	Definition terra.StringValue `hcl:"definition,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
	// DependsOn contains resources that PrometheusAlertManagerDefinition depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type prometheusAlertManagerDefinitionAttributes struct {
	ref terra.Reference
}

func (pamd prometheusAlertManagerDefinitionAttributes) Definition() terra.StringValue {
	return terra.ReferenceString(pamd.ref.Append("definition"))
}

func (pamd prometheusAlertManagerDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pamd.ref.Append("id"))
}

func (pamd prometheusAlertManagerDefinitionAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceString(pamd.ref.Append("workspace_id"))
}

type prometheusAlertManagerDefinitionState struct {
	Definition  string `json:"definition"`
	Id          string `json:"id"`
	WorkspaceId string `json:"workspace_id"`
}
