// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	ssoadminpermissionsboundaryattachment "github.com/golingon/terraproviders/aws/4.60.0/ssoadminpermissionsboundaryattachment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSsoadminPermissionsBoundaryAttachment(name string, args SsoadminPermissionsBoundaryAttachmentArgs) *SsoadminPermissionsBoundaryAttachment {
	return &SsoadminPermissionsBoundaryAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsoadminPermissionsBoundaryAttachment)(nil)

type SsoadminPermissionsBoundaryAttachment struct {
	Name  string
	Args  SsoadminPermissionsBoundaryAttachmentArgs
	state *ssoadminPermissionsBoundaryAttachmentState
}

func (spba *SsoadminPermissionsBoundaryAttachment) Type() string {
	return "aws_ssoadmin_permissions_boundary_attachment"
}

func (spba *SsoadminPermissionsBoundaryAttachment) LocalName() string {
	return spba.Name
}

func (spba *SsoadminPermissionsBoundaryAttachment) Configuration() interface{} {
	return spba.Args
}

func (spba *SsoadminPermissionsBoundaryAttachment) Attributes() ssoadminPermissionsBoundaryAttachmentAttributes {
	return ssoadminPermissionsBoundaryAttachmentAttributes{ref: terra.ReferenceResource(spba)}
}

func (spba *SsoadminPermissionsBoundaryAttachment) ImportState(av io.Reader) error {
	spba.state = &ssoadminPermissionsBoundaryAttachmentState{}
	if err := json.NewDecoder(av).Decode(spba.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", spba.Type(), spba.LocalName(), err)
	}
	return nil
}

func (spba *SsoadminPermissionsBoundaryAttachment) State() (*ssoadminPermissionsBoundaryAttachmentState, bool) {
	return spba.state, spba.state != nil
}

func (spba *SsoadminPermissionsBoundaryAttachment) StateMust() *ssoadminPermissionsBoundaryAttachmentState {
	if spba.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", spba.Type(), spba.LocalName()))
	}
	return spba.state
}

func (spba *SsoadminPermissionsBoundaryAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(spba)
}

type SsoadminPermissionsBoundaryAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// PermissionSetArn: string, required
	PermissionSetArn terra.StringValue `hcl:"permission_set_arn,attr" validate:"required"`
	// PermissionsBoundary: required
	PermissionsBoundary *ssoadminpermissionsboundaryattachment.PermissionsBoundary `hcl:"permissions_boundary,block" validate:"required"`
	// DependsOn contains resources that SsoadminPermissionsBoundaryAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ssoadminPermissionsBoundaryAttachmentAttributes struct {
	ref terra.Reference
}

func (spba ssoadminPermissionsBoundaryAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spba.ref.Append("id"))
}

func (spba ssoadminPermissionsBoundaryAttachmentAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceString(spba.ref.Append("instance_arn"))
}

func (spba ssoadminPermissionsBoundaryAttachmentAttributes) PermissionSetArn() terra.StringValue {
	return terra.ReferenceString(spba.ref.Append("permission_set_arn"))
}

func (spba ssoadminPermissionsBoundaryAttachmentAttributes) PermissionsBoundary() terra.ListValue[ssoadminpermissionsboundaryattachment.PermissionsBoundaryAttributes] {
	return terra.ReferenceList[ssoadminpermissionsboundaryattachment.PermissionsBoundaryAttributes](spba.ref.Append("permissions_boundary"))
}

type ssoadminPermissionsBoundaryAttachmentState struct {
	Id                  string                                                           `json:"id"`
	InstanceArn         string                                                           `json:"instance_arn"`
	PermissionSetArn    string                                                           `json:"permission_set_arn"`
	PermissionsBoundary []ssoadminpermissionsboundaryattachment.PermissionsBoundaryState `json:"permissions_boundary"`
}
