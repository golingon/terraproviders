// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	wafregionalipset "github.com/golingon/terraproviders/aws/4.60.0/wafregionalipset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWafregionalIpset(name string, args WafregionalIpsetArgs) *WafregionalIpset {
	return &WafregionalIpset{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WafregionalIpset)(nil)

type WafregionalIpset struct {
	Name  string
	Args  WafregionalIpsetArgs
	state *wafregionalIpsetState
}

func (wi *WafregionalIpset) Type() string {
	return "aws_wafregional_ipset"
}

func (wi *WafregionalIpset) LocalName() string {
	return wi.Name
}

func (wi *WafregionalIpset) Configuration() interface{} {
	return wi.Args
}

func (wi *WafregionalIpset) Attributes() wafregionalIpsetAttributes {
	return wafregionalIpsetAttributes{ref: terra.ReferenceResource(wi)}
}

func (wi *WafregionalIpset) ImportState(av io.Reader) error {
	wi.state = &wafregionalIpsetState{}
	if err := json.NewDecoder(av).Decode(wi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wi.Type(), wi.LocalName(), err)
	}
	return nil
}

func (wi *WafregionalIpset) State() (*wafregionalIpsetState, bool) {
	return wi.state, wi.state != nil
}

func (wi *WafregionalIpset) StateMust() *wafregionalIpsetState {
	if wi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wi.Type(), wi.LocalName()))
	}
	return wi.state
}

func (wi *WafregionalIpset) DependOn() terra.Reference {
	return terra.ReferenceResource(wi)
}

type WafregionalIpsetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// IpSetDescriptor: min=0
	IpSetDescriptor []wafregionalipset.IpSetDescriptor `hcl:"ip_set_descriptor,block" validate:"min=0"`
	// DependsOn contains resources that WafregionalIpset depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type wafregionalIpsetAttributes struct {
	ref terra.Reference
}

func (wi wafregionalIpsetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(wi.ref.Append("arn"))
}

func (wi wafregionalIpsetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wi.ref.Append("id"))
}

func (wi wafregionalIpsetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wi.ref.Append("name"))
}

func (wi wafregionalIpsetAttributes) IpSetDescriptor() terra.SetValue[wafregionalipset.IpSetDescriptorAttributes] {
	return terra.ReferenceSet[wafregionalipset.IpSetDescriptorAttributes](wi.ref.Append("ip_set_descriptor"))
}

type wafregionalIpsetState struct {
	Arn             string                                  `json:"arn"`
	Id              string                                  `json:"id"`
	Name            string                                  `json:"name"`
	IpSetDescriptor []wafregionalipset.IpSetDescriptorState `json:"ip_set_descriptor"`
}
