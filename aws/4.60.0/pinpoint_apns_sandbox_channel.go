// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPinpointApnsSandboxChannel(name string, args PinpointApnsSandboxChannelArgs) *PinpointApnsSandboxChannel {
	return &PinpointApnsSandboxChannel{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PinpointApnsSandboxChannel)(nil)

type PinpointApnsSandboxChannel struct {
	Name  string
	Args  PinpointApnsSandboxChannelArgs
	state *pinpointApnsSandboxChannelState
}

func (pasc *PinpointApnsSandboxChannel) Type() string {
	return "aws_pinpoint_apns_sandbox_channel"
}

func (pasc *PinpointApnsSandboxChannel) LocalName() string {
	return pasc.Name
}

func (pasc *PinpointApnsSandboxChannel) Configuration() interface{} {
	return pasc.Args
}

func (pasc *PinpointApnsSandboxChannel) Attributes() pinpointApnsSandboxChannelAttributes {
	return pinpointApnsSandboxChannelAttributes{ref: terra.ReferenceResource(pasc)}
}

func (pasc *PinpointApnsSandboxChannel) ImportState(av io.Reader) error {
	pasc.state = &pinpointApnsSandboxChannelState{}
	if err := json.NewDecoder(av).Decode(pasc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pasc.Type(), pasc.LocalName(), err)
	}
	return nil
}

func (pasc *PinpointApnsSandboxChannel) State() (*pinpointApnsSandboxChannelState, bool) {
	return pasc.state, pasc.state != nil
}

func (pasc *PinpointApnsSandboxChannel) StateMust() *pinpointApnsSandboxChannelState {
	if pasc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pasc.Type(), pasc.LocalName()))
	}
	return pasc.state
}

func (pasc *PinpointApnsSandboxChannel) DependOn() terra.Reference {
	return terra.ReferenceResource(pasc)
}

type PinpointApnsSandboxChannelArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// BundleId: string, optional
	BundleId terra.StringValue `hcl:"bundle_id,attr"`
	// Certificate: string, optional
	Certificate terra.StringValue `hcl:"certificate,attr"`
	// DefaultAuthenticationMethod: string, optional
	DefaultAuthenticationMethod terra.StringValue `hcl:"default_authentication_method,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PrivateKey: string, optional
	PrivateKey terra.StringValue `hcl:"private_key,attr"`
	// TeamId: string, optional
	TeamId terra.StringValue `hcl:"team_id,attr"`
	// TokenKey: string, optional
	TokenKey terra.StringValue `hcl:"token_key,attr"`
	// TokenKeyId: string, optional
	TokenKeyId terra.StringValue `hcl:"token_key_id,attr"`
	// DependsOn contains resources that PinpointApnsSandboxChannel depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type pinpointApnsSandboxChannelAttributes struct {
	ref terra.Reference
}

func (pasc pinpointApnsSandboxChannelAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("application_id"))
}

func (pasc pinpointApnsSandboxChannelAttributes) BundleId() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("bundle_id"))
}

func (pasc pinpointApnsSandboxChannelAttributes) Certificate() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("certificate"))
}

func (pasc pinpointApnsSandboxChannelAttributes) DefaultAuthenticationMethod() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("default_authentication_method"))
}

func (pasc pinpointApnsSandboxChannelAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(pasc.ref.Append("enabled"))
}

func (pasc pinpointApnsSandboxChannelAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("id"))
}

func (pasc pinpointApnsSandboxChannelAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("private_key"))
}

func (pasc pinpointApnsSandboxChannelAttributes) TeamId() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("team_id"))
}

func (pasc pinpointApnsSandboxChannelAttributes) TokenKey() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("token_key"))
}

func (pasc pinpointApnsSandboxChannelAttributes) TokenKeyId() terra.StringValue {
	return terra.ReferenceString(pasc.ref.Append("token_key_id"))
}

type pinpointApnsSandboxChannelState struct {
	ApplicationId               string `json:"application_id"`
	BundleId                    string `json:"bundle_id"`
	Certificate                 string `json:"certificate"`
	DefaultAuthenticationMethod string `json:"default_authentication_method"`
	Enabled                     bool   `json:"enabled"`
	Id                          string `json:"id"`
	PrivateKey                  string `json:"private_key"`
	TeamId                      string `json:"team_id"`
	TokenKey                    string `json:"token_key"`
	TokenKeyId                  string `json:"token_key_id"`
}
