// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datacloudformationtype "github.com/golingon/terraproviders/aws/4.60.0/datacloudformationtype"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCloudformationType(name string, args DataCloudformationTypeArgs) *DataCloudformationType {
	return &DataCloudformationType{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCloudformationType)(nil)

type DataCloudformationType struct {
	Name string
	Args DataCloudformationTypeArgs
}

func (ct *DataCloudformationType) DataSource() string {
	return "aws_cloudformation_type"
}

func (ct *DataCloudformationType) LocalName() string {
	return ct.Name
}

func (ct *DataCloudformationType) Configuration() interface{} {
	return ct.Args
}

func (ct *DataCloudformationType) Attributes() dataCloudformationTypeAttributes {
	return dataCloudformationTypeAttributes{ref: terra.ReferenceDataResource(ct)}
}

type DataCloudformationTypeArgs struct {
	// Arn: string, optional
	Arn terra.StringValue `hcl:"arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// VersionId: string, optional
	VersionId terra.StringValue `hcl:"version_id,attr"`
	// LoggingConfig: min=0
	LoggingConfig []datacloudformationtype.LoggingConfig `hcl:"logging_config,block" validate:"min=0"`
}
type dataCloudformationTypeAttributes struct {
	ref terra.Reference
}

func (ct dataCloudformationTypeAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("arn"))
}

func (ct dataCloudformationTypeAttributes) DefaultVersionId() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("default_version_id"))
}

func (ct dataCloudformationTypeAttributes) DeprecatedStatus() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("deprecated_status"))
}

func (ct dataCloudformationTypeAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("description"))
}

func (ct dataCloudformationTypeAttributes) DocumentationUrl() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("documentation_url"))
}

func (ct dataCloudformationTypeAttributes) ExecutionRoleArn() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("execution_role_arn"))
}

func (ct dataCloudformationTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("id"))
}

func (ct dataCloudformationTypeAttributes) IsDefaultVersion() terra.BoolValue {
	return terra.ReferenceBool(ct.ref.Append("is_default_version"))
}

func (ct dataCloudformationTypeAttributes) ProvisioningType() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("provisioning_type"))
}

func (ct dataCloudformationTypeAttributes) Schema() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("schema"))
}

func (ct dataCloudformationTypeAttributes) SourceUrl() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("source_url"))
}

func (ct dataCloudformationTypeAttributes) Type() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("type"))
}

func (ct dataCloudformationTypeAttributes) TypeArn() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("type_arn"))
}

func (ct dataCloudformationTypeAttributes) TypeName() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("type_name"))
}

func (ct dataCloudformationTypeAttributes) VersionId() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("version_id"))
}

func (ct dataCloudformationTypeAttributes) Visibility() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("visibility"))
}

func (ct dataCloudformationTypeAttributes) LoggingConfig() terra.ListValue[datacloudformationtype.LoggingConfigAttributes] {
	return terra.ReferenceList[datacloudformationtype.LoggingConfigAttributes](ct.ref.Append("logging_config"))
}
