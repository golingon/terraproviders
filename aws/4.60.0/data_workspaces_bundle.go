// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataworkspacesbundle "github.com/golingon/terraproviders/aws/4.60.0/dataworkspacesbundle"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataWorkspacesBundle(name string, args DataWorkspacesBundleArgs) *DataWorkspacesBundle {
	return &DataWorkspacesBundle{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataWorkspacesBundle)(nil)

type DataWorkspacesBundle struct {
	Name string
	Args DataWorkspacesBundleArgs
}

func (wb *DataWorkspacesBundle) DataSource() string {
	return "aws_workspaces_bundle"
}

func (wb *DataWorkspacesBundle) LocalName() string {
	return wb.Name
}

func (wb *DataWorkspacesBundle) Configuration() interface{} {
	return wb.Args
}

func (wb *DataWorkspacesBundle) Attributes() dataWorkspacesBundleAttributes {
	return dataWorkspacesBundleAttributes{ref: terra.ReferenceDataResource(wb)}
}

type DataWorkspacesBundleArgs struct {
	// BundleId: string, optional
	BundleId terra.StringValue `hcl:"bundle_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Owner: string, optional
	Owner terra.StringValue `hcl:"owner,attr"`
	// ComputeType: min=0
	ComputeType []dataworkspacesbundle.ComputeType `hcl:"compute_type,block" validate:"min=0"`
	// RootStorage: min=0
	RootStorage []dataworkspacesbundle.RootStorage `hcl:"root_storage,block" validate:"min=0"`
	// UserStorage: min=0
	UserStorage []dataworkspacesbundle.UserStorage `hcl:"user_storage,block" validate:"min=0"`
}
type dataWorkspacesBundleAttributes struct {
	ref terra.Reference
}

func (wb dataWorkspacesBundleAttributes) BundleId() terra.StringValue {
	return terra.ReferenceString(wb.ref.Append("bundle_id"))
}

func (wb dataWorkspacesBundleAttributes) Description() terra.StringValue {
	return terra.ReferenceString(wb.ref.Append("description"))
}

func (wb dataWorkspacesBundleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wb.ref.Append("id"))
}

func (wb dataWorkspacesBundleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wb.ref.Append("name"))
}

func (wb dataWorkspacesBundleAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(wb.ref.Append("owner"))
}

func (wb dataWorkspacesBundleAttributes) ComputeType() terra.ListValue[dataworkspacesbundle.ComputeTypeAttributes] {
	return terra.ReferenceList[dataworkspacesbundle.ComputeTypeAttributes](wb.ref.Append("compute_type"))
}

func (wb dataWorkspacesBundleAttributes) RootStorage() terra.ListValue[dataworkspacesbundle.RootStorageAttributes] {
	return terra.ReferenceList[dataworkspacesbundle.RootStorageAttributes](wb.ref.Append("root_storage"))
}

func (wb dataWorkspacesBundleAttributes) UserStorage() terra.ListValue[dataworkspacesbundle.UserStorageAttributes] {
	return terra.ReferenceList[dataworkspacesbundle.UserStorageAttributes](wb.ref.Append("user_storage"))
}
