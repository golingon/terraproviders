// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package identitystoreuser

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ExternalIds struct{}

type Addresses struct {
	// Country: string, optional
	Country terra.StringValue `hcl:"country,attr"`
	// Formatted: string, optional
	Formatted terra.StringValue `hcl:"formatted,attr"`
	// Locality: string, optional
	Locality terra.StringValue `hcl:"locality,attr"`
	// PostalCode: string, optional
	PostalCode terra.StringValue `hcl:"postal_code,attr"`
	// Primary: bool, optional
	Primary terra.BoolValue `hcl:"primary,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// StreetAddress: string, optional
	StreetAddress terra.StringValue `hcl:"street_address,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type Emails struct {
	// Primary: bool, optional
	Primary terra.BoolValue `hcl:"primary,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type Name struct {
	// FamilyName: string, required
	FamilyName terra.StringValue `hcl:"family_name,attr" validate:"required"`
	// Formatted: string, optional
	Formatted terra.StringValue `hcl:"formatted,attr"`
	// GivenName: string, required
	GivenName terra.StringValue `hcl:"given_name,attr" validate:"required"`
	// HonorificPrefix: string, optional
	HonorificPrefix terra.StringValue `hcl:"honorific_prefix,attr"`
	// HonorificSuffix: string, optional
	HonorificSuffix terra.StringValue `hcl:"honorific_suffix,attr"`
	// MiddleName: string, optional
	MiddleName terra.StringValue `hcl:"middle_name,attr"`
}

type PhoneNumbers struct {
	// Primary: bool, optional
	Primary terra.BoolValue `hcl:"primary,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type ExternalIdsAttributes struct {
	ref terra.Reference
}

func (ei ExternalIdsAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei ExternalIdsAttributes) InternalWithRef(ref terra.Reference) ExternalIdsAttributes {
	return ExternalIdsAttributes{ref: ref}
}

func (ei ExternalIdsAttributes) InternalTokens() hclwrite.Tokens {
	return ei.ref.InternalTokens()
}

func (ei ExternalIdsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("id"))
}

func (ei ExternalIdsAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("issuer"))
}

type AddressesAttributes struct {
	ref terra.Reference
}

func (a AddressesAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AddressesAttributes) InternalWithRef(ref terra.Reference) AddressesAttributes {
	return AddressesAttributes{ref: ref}
}

func (a AddressesAttributes) InternalTokens() hclwrite.Tokens {
	return a.ref.InternalTokens()
}

func (a AddressesAttributes) Country() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("country"))
}

func (a AddressesAttributes) Formatted() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("formatted"))
}

func (a AddressesAttributes) Locality() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("locality"))
}

func (a AddressesAttributes) PostalCode() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("postal_code"))
}

func (a AddressesAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("primary"))
}

func (a AddressesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("region"))
}

func (a AddressesAttributes) StreetAddress() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("street_address"))
}

func (a AddressesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

type EmailsAttributes struct {
	ref terra.Reference
}

func (e EmailsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e EmailsAttributes) InternalWithRef(ref terra.Reference) EmailsAttributes {
	return EmailsAttributes{ref: ref}
}

func (e EmailsAttributes) InternalTokens() hclwrite.Tokens {
	return e.ref.InternalTokens()
}

func (e EmailsAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("primary"))
}

func (e EmailsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("type"))
}

func (e EmailsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type NameAttributes struct {
	ref terra.Reference
}

func (n NameAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n NameAttributes) InternalWithRef(ref terra.Reference) NameAttributes {
	return NameAttributes{ref: ref}
}

func (n NameAttributes) InternalTokens() hclwrite.Tokens {
	return n.ref.InternalTokens()
}

func (n NameAttributes) FamilyName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("family_name"))
}

func (n NameAttributes) Formatted() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("formatted"))
}

func (n NameAttributes) GivenName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("given_name"))
}

func (n NameAttributes) HonorificPrefix() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("honorific_prefix"))
}

func (n NameAttributes) HonorificSuffix() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("honorific_suffix"))
}

func (n NameAttributes) MiddleName() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("middle_name"))
}

type PhoneNumbersAttributes struct {
	ref terra.Reference
}

func (pn PhoneNumbersAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn PhoneNumbersAttributes) InternalWithRef(ref terra.Reference) PhoneNumbersAttributes {
	return PhoneNumbersAttributes{ref: ref}
}

func (pn PhoneNumbersAttributes) InternalTokens() hclwrite.Tokens {
	return pn.ref.InternalTokens()
}

func (pn PhoneNumbersAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(pn.ref.Append("primary"))
}

func (pn PhoneNumbersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("type"))
}

func (pn PhoneNumbersAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("value"))
}

type ExternalIdsState struct {
	Id     string `json:"id"`
	Issuer string `json:"issuer"`
}

type AddressesState struct {
	Country       string `json:"country"`
	Formatted     string `json:"formatted"`
	Locality      string `json:"locality"`
	PostalCode    string `json:"postal_code"`
	Primary       bool   `json:"primary"`
	Region        string `json:"region"`
	StreetAddress string `json:"street_address"`
	Type          string `json:"type"`
}

type EmailsState struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type NameState struct {
	FamilyName      string `json:"family_name"`
	Formatted       string `json:"formatted"`
	GivenName       string `json:"given_name"`
	HonorificPrefix string `json:"honorific_prefix"`
	HonorificSuffix string `json:"honorific_suffix"`
	MiddleName      string `json:"middle_name"`
}

type PhoneNumbersState struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}
