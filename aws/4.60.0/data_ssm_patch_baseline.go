// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datassmpatchbaseline "github.com/golingon/terraproviders/aws/4.60.0/datassmpatchbaseline"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataSsmPatchBaseline(name string, args DataSsmPatchBaselineArgs) *DataSsmPatchBaseline {
	return &DataSsmPatchBaseline{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSsmPatchBaseline)(nil)

type DataSsmPatchBaseline struct {
	Name string
	Args DataSsmPatchBaselineArgs
}

func (spb *DataSsmPatchBaseline) DataSource() string {
	return "aws_ssm_patch_baseline"
}

func (spb *DataSsmPatchBaseline) LocalName() string {
	return spb.Name
}

func (spb *DataSsmPatchBaseline) Configuration() interface{} {
	return spb.Args
}

func (spb *DataSsmPatchBaseline) Attributes() dataSsmPatchBaselineAttributes {
	return dataSsmPatchBaselineAttributes{ref: terra.ReferenceDataResource(spb)}
}

type DataSsmPatchBaselineArgs struct {
	// DefaultBaseline: bool, optional
	DefaultBaseline terra.BoolValue `hcl:"default_baseline,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// OperatingSystem: string, optional
	OperatingSystem terra.StringValue `hcl:"operating_system,attr"`
	// Owner: string, required
	Owner terra.StringValue `hcl:"owner,attr" validate:"required"`
	// ApprovalRule: min=0
	ApprovalRule []datassmpatchbaseline.ApprovalRule `hcl:"approval_rule,block" validate:"min=0"`
	// GlobalFilter: min=0
	GlobalFilter []datassmpatchbaseline.GlobalFilter `hcl:"global_filter,block" validate:"min=0"`
	// Source: min=0
	Source []datassmpatchbaseline.Source `hcl:"source,block" validate:"min=0"`
}
type dataSsmPatchBaselineAttributes struct {
	ref terra.Reference
}

func (spb dataSsmPatchBaselineAttributes) ApprovedPatches() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](spb.ref.Append("approved_patches"))
}

func (spb dataSsmPatchBaselineAttributes) ApprovedPatchesComplianceLevel() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("approved_patches_compliance_level"))
}

func (spb dataSsmPatchBaselineAttributes) ApprovedPatchesEnableNonSecurity() terra.BoolValue {
	return terra.ReferenceBool(spb.ref.Append("approved_patches_enable_non_security"))
}

func (spb dataSsmPatchBaselineAttributes) DefaultBaseline() terra.BoolValue {
	return terra.ReferenceBool(spb.ref.Append("default_baseline"))
}

func (spb dataSsmPatchBaselineAttributes) Description() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("description"))
}

func (spb dataSsmPatchBaselineAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("id"))
}

func (spb dataSsmPatchBaselineAttributes) Name() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("name"))
}

func (spb dataSsmPatchBaselineAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("name_prefix"))
}

func (spb dataSsmPatchBaselineAttributes) OperatingSystem() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("operating_system"))
}

func (spb dataSsmPatchBaselineAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("owner"))
}

func (spb dataSsmPatchBaselineAttributes) RejectedPatches() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](spb.ref.Append("rejected_patches"))
}

func (spb dataSsmPatchBaselineAttributes) RejectedPatchesAction() terra.StringValue {
	return terra.ReferenceString(spb.ref.Append("rejected_patches_action"))
}

func (spb dataSsmPatchBaselineAttributes) ApprovalRule() terra.ListValue[datassmpatchbaseline.ApprovalRuleAttributes] {
	return terra.ReferenceList[datassmpatchbaseline.ApprovalRuleAttributes](spb.ref.Append("approval_rule"))
}

func (spb dataSsmPatchBaselineAttributes) GlobalFilter() terra.ListValue[datassmpatchbaseline.GlobalFilterAttributes] {
	return terra.ReferenceList[datassmpatchbaseline.GlobalFilterAttributes](spb.ref.Append("global_filter"))
}

func (spb dataSsmPatchBaselineAttributes) Source() terra.ListValue[datassmpatchbaseline.SourceAttributes] {
	return terra.ReferenceList[datassmpatchbaseline.SourceAttributes](spb.ref.Append("source"))
}
