// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotThingGroupMembership(name string, args IotThingGroupMembershipArgs) *IotThingGroupMembership {
	return &IotThingGroupMembership{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotThingGroupMembership)(nil)

type IotThingGroupMembership struct {
	Name  string
	Args  IotThingGroupMembershipArgs
	state *iotThingGroupMembershipState
}

func (itgm *IotThingGroupMembership) Type() string {
	return "aws_iot_thing_group_membership"
}

func (itgm *IotThingGroupMembership) LocalName() string {
	return itgm.Name
}

func (itgm *IotThingGroupMembership) Configuration() interface{} {
	return itgm.Args
}

func (itgm *IotThingGroupMembership) Attributes() iotThingGroupMembershipAttributes {
	return iotThingGroupMembershipAttributes{ref: terra.ReferenceResource(itgm)}
}

func (itgm *IotThingGroupMembership) ImportState(av io.Reader) error {
	itgm.state = &iotThingGroupMembershipState{}
	if err := json.NewDecoder(av).Decode(itgm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itgm.Type(), itgm.LocalName(), err)
	}
	return nil
}

func (itgm *IotThingGroupMembership) State() (*iotThingGroupMembershipState, bool) {
	return itgm.state, itgm.state != nil
}

func (itgm *IotThingGroupMembership) StateMust() *iotThingGroupMembershipState {
	if itgm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itgm.Type(), itgm.LocalName()))
	}
	return itgm.state
}

func (itgm *IotThingGroupMembership) DependOn() terra.Reference {
	return terra.ReferenceResource(itgm)
}

type IotThingGroupMembershipArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OverrideDynamicGroup: bool, optional
	OverrideDynamicGroup terra.BoolValue `hcl:"override_dynamic_group,attr"`
	// ThingGroupName: string, required
	ThingGroupName terra.StringValue `hcl:"thing_group_name,attr" validate:"required"`
	// ThingName: string, required
	ThingName terra.StringValue `hcl:"thing_name,attr" validate:"required"`
	// DependsOn contains resources that IotThingGroupMembership depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotThingGroupMembershipAttributes struct {
	ref terra.Reference
}

func (itgm iotThingGroupMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceString(itgm.ref.Append("id"))
}

func (itgm iotThingGroupMembershipAttributes) OverrideDynamicGroup() terra.BoolValue {
	return terra.ReferenceBool(itgm.ref.Append("override_dynamic_group"))
}

func (itgm iotThingGroupMembershipAttributes) ThingGroupName() terra.StringValue {
	return terra.ReferenceString(itgm.ref.Append("thing_group_name"))
}

func (itgm iotThingGroupMembershipAttributes) ThingName() terra.StringValue {
	return terra.ReferenceString(itgm.ref.Append("thing_name"))
}

type iotThingGroupMembershipState struct {
	Id                   string `json:"id"`
	OverrideDynamicGroup bool   `json:"override_dynamic_group"`
	ThingGroupName       string `json:"thing_group_name"`
	ThingName            string `json:"thing_name"`
}
