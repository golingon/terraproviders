// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewEc2AvailabilityZoneGroup(name string, args Ec2AvailabilityZoneGroupArgs) *Ec2AvailabilityZoneGroup {
	return &Ec2AvailabilityZoneGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Ec2AvailabilityZoneGroup)(nil)

type Ec2AvailabilityZoneGroup struct {
	Name  string
	Args  Ec2AvailabilityZoneGroupArgs
	state *ec2AvailabilityZoneGroupState
}

func (eazg *Ec2AvailabilityZoneGroup) Type() string {
	return "aws_ec2_availability_zone_group"
}

func (eazg *Ec2AvailabilityZoneGroup) LocalName() string {
	return eazg.Name
}

func (eazg *Ec2AvailabilityZoneGroup) Configuration() interface{} {
	return eazg.Args
}

func (eazg *Ec2AvailabilityZoneGroup) Attributes() ec2AvailabilityZoneGroupAttributes {
	return ec2AvailabilityZoneGroupAttributes{ref: terra.ReferenceResource(eazg)}
}

func (eazg *Ec2AvailabilityZoneGroup) ImportState(av io.Reader) error {
	eazg.state = &ec2AvailabilityZoneGroupState{}
	if err := json.NewDecoder(av).Decode(eazg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", eazg.Type(), eazg.LocalName(), err)
	}
	return nil
}

func (eazg *Ec2AvailabilityZoneGroup) State() (*ec2AvailabilityZoneGroupState, bool) {
	return eazg.state, eazg.state != nil
}

func (eazg *Ec2AvailabilityZoneGroup) StateMust() *ec2AvailabilityZoneGroupState {
	if eazg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", eazg.Type(), eazg.LocalName()))
	}
	return eazg.state
}

func (eazg *Ec2AvailabilityZoneGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(eazg)
}

type Ec2AvailabilityZoneGroupArgs struct {
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OptInStatus: string, required
	OptInStatus terra.StringValue `hcl:"opt_in_status,attr" validate:"required"`
	// DependsOn contains resources that Ec2AvailabilityZoneGroup depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ec2AvailabilityZoneGroupAttributes struct {
	ref terra.Reference
}

func (eazg ec2AvailabilityZoneGroupAttributes) GroupName() terra.StringValue {
	return terra.ReferenceString(eazg.ref.Append("group_name"))
}

func (eazg ec2AvailabilityZoneGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(eazg.ref.Append("id"))
}

func (eazg ec2AvailabilityZoneGroupAttributes) OptInStatus() terra.StringValue {
	return terra.ReferenceString(eazg.ref.Append("opt_in_status"))
}

type ec2AvailabilityZoneGroupState struct {
	GroupName   string `json:"group_name"`
	Id          string `json:"id"`
	OptInStatus string `json:"opt_in_status"`
}
