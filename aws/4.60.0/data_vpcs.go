// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datavpcs "github.com/golingon/terraproviders/aws/4.60.0/datavpcs"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataVpcs(name string, args DataVpcsArgs) *DataVpcs {
	return &DataVpcs{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVpcs)(nil)

type DataVpcs struct {
	Name string
	Args DataVpcsArgs
}

func (v *DataVpcs) DataSource() string {
	return "aws_vpcs"
}

func (v *DataVpcs) LocalName() string {
	return v.Name
}

func (v *DataVpcs) Configuration() interface{} {
	return v.Args
}

func (v *DataVpcs) Attributes() dataVpcsAttributes {
	return dataVpcsAttributes{ref: terra.ReferenceDataResource(v)}
}

type DataVpcsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []datavpcs.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datavpcs.Timeouts `hcl:"timeouts,block"`
}
type dataVpcsAttributes struct {
	ref terra.Reference
}

func (v dataVpcsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(v.ref.Append("id"))
}

func (v dataVpcsAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](v.ref.Append("ids"))
}

func (v dataVpcsAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](v.ref.Append("tags"))
}

func (v dataVpcsAttributes) Filter() terra.SetValue[datavpcs.FilterAttributes] {
	return terra.ReferenceSet[datavpcs.FilterAttributes](v.ref.Append("filter"))
}

func (v dataVpcsAttributes) Timeouts() datavpcs.TimeoutsAttributes {
	return terra.ReferenceSingle[datavpcs.TimeoutsAttributes](v.ref.Append("timeouts"))
}
