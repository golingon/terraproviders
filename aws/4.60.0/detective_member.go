// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDetectiveMember(name string, args DetectiveMemberArgs) *DetectiveMember {
	return &DetectiveMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DetectiveMember)(nil)

type DetectiveMember struct {
	Name  string
	Args  DetectiveMemberArgs
	state *detectiveMemberState
}

func (dm *DetectiveMember) Type() string {
	return "aws_detective_member"
}

func (dm *DetectiveMember) LocalName() string {
	return dm.Name
}

func (dm *DetectiveMember) Configuration() interface{} {
	return dm.Args
}

func (dm *DetectiveMember) Attributes() detectiveMemberAttributes {
	return detectiveMemberAttributes{ref: terra.ReferenceResource(dm)}
}

func (dm *DetectiveMember) ImportState(av io.Reader) error {
	dm.state = &detectiveMemberState{}
	if err := json.NewDecoder(av).Decode(dm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dm.Type(), dm.LocalName(), err)
	}
	return nil
}

func (dm *DetectiveMember) State() (*detectiveMemberState, bool) {
	return dm.state, dm.state != nil
}

func (dm *DetectiveMember) StateMust() *detectiveMemberState {
	if dm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dm.Type(), dm.LocalName()))
	}
	return dm.state
}

func (dm *DetectiveMember) DependOn() terra.Reference {
	return terra.ReferenceResource(dm)
}

type DetectiveMemberArgs struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// DisableEmailNotification: bool, optional
	DisableEmailNotification terra.BoolValue `hcl:"disable_email_notification,attr"`
	// EmailAddress: string, required
	EmailAddress terra.StringValue `hcl:"email_address,attr" validate:"required"`
	// GraphArn: string, required
	GraphArn terra.StringValue `hcl:"graph_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Message: string, optional
	Message terra.StringValue `hcl:"message,attr"`
	// DependsOn contains resources that DetectiveMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type detectiveMemberAttributes struct {
	ref terra.Reference
}

func (dm detectiveMemberAttributes) AccountId() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("account_id"))
}

func (dm detectiveMemberAttributes) AdministratorId() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("administrator_id"))
}

func (dm detectiveMemberAttributes) DisableEmailNotification() terra.BoolValue {
	return terra.ReferenceBool(dm.ref.Append("disable_email_notification"))
}

func (dm detectiveMemberAttributes) DisabledReason() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("disabled_reason"))
}

func (dm detectiveMemberAttributes) EmailAddress() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("email_address"))
}

func (dm detectiveMemberAttributes) GraphArn() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("graph_arn"))
}

func (dm detectiveMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("id"))
}

func (dm detectiveMemberAttributes) InvitedTime() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("invited_time"))
}

func (dm detectiveMemberAttributes) Message() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("message"))
}

func (dm detectiveMemberAttributes) Status() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("status"))
}

func (dm detectiveMemberAttributes) UpdatedTime() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("updated_time"))
}

func (dm detectiveMemberAttributes) VolumeUsageInBytes() terra.StringValue {
	return terra.ReferenceString(dm.ref.Append("volume_usage_in_bytes"))
}

type detectiveMemberState struct {
	AccountId                string `json:"account_id"`
	AdministratorId          string `json:"administrator_id"`
	DisableEmailNotification bool   `json:"disable_email_notification"`
	DisabledReason           string `json:"disabled_reason"`
	EmailAddress             string `json:"email_address"`
	GraphArn                 string `json:"graph_arn"`
	Id                       string `json:"id"`
	InvitedTime              string `json:"invited_time"`
	Message                  string `json:"message"`
	Status                   string `json:"status"`
	UpdatedTime              string `json:"updated_time"`
	VolumeUsageInBytes       string `json:"volume_usage_in_bytes"`
}
