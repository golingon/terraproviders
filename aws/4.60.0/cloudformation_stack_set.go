// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	cloudformationstackset "github.com/golingon/terraproviders/aws/4.60.0/cloudformationstackset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCloudformationStackSet(name string, args CloudformationStackSetArgs) *CloudformationStackSet {
	return &CloudformationStackSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudformationStackSet)(nil)

type CloudformationStackSet struct {
	Name  string
	Args  CloudformationStackSetArgs
	state *cloudformationStackSetState
}

func (css *CloudformationStackSet) Type() string {
	return "aws_cloudformation_stack_set"
}

func (css *CloudformationStackSet) LocalName() string {
	return css.Name
}

func (css *CloudformationStackSet) Configuration() interface{} {
	return css.Args
}

func (css *CloudformationStackSet) Attributes() cloudformationStackSetAttributes {
	return cloudformationStackSetAttributes{ref: terra.ReferenceResource(css)}
}

func (css *CloudformationStackSet) ImportState(av io.Reader) error {
	css.state = &cloudformationStackSetState{}
	if err := json.NewDecoder(av).Decode(css.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", css.Type(), css.LocalName(), err)
	}
	return nil
}

func (css *CloudformationStackSet) State() (*cloudformationStackSetState, bool) {
	return css.state, css.state != nil
}

func (css *CloudformationStackSet) StateMust() *cloudformationStackSetState {
	if css.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", css.Type(), css.LocalName()))
	}
	return css.state
}

func (css *CloudformationStackSet) DependOn() terra.Reference {
	return terra.ReferenceResource(css)
}

type CloudformationStackSetArgs struct {
	// AdministrationRoleArn: string, optional
	AdministrationRoleArn terra.StringValue `hcl:"administration_role_arn,attr"`
	// CallAs: string, optional
	CallAs terra.StringValue `hcl:"call_as,attr"`
	// Capabilities: set of string, optional
	Capabilities terra.SetValue[terra.StringValue] `hcl:"capabilities,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExecutionRoleName: string, optional
	ExecutionRoleName terra.StringValue `hcl:"execution_role_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// PermissionModel: string, optional
	PermissionModel terra.StringValue `hcl:"permission_model,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// TemplateBody: string, optional
	TemplateBody terra.StringValue `hcl:"template_body,attr"`
	// TemplateUrl: string, optional
	TemplateUrl terra.StringValue `hcl:"template_url,attr"`
	// AutoDeployment: optional
	AutoDeployment *cloudformationstackset.AutoDeployment `hcl:"auto_deployment,block"`
	// OperationPreferences: optional
	OperationPreferences *cloudformationstackset.OperationPreferences `hcl:"operation_preferences,block"`
	// Timeouts: optional
	Timeouts *cloudformationstackset.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CloudformationStackSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cloudformationStackSetAttributes struct {
	ref terra.Reference
}

func (css cloudformationStackSetAttributes) AdministrationRoleArn() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("administration_role_arn"))
}

func (css cloudformationStackSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("arn"))
}

func (css cloudformationStackSetAttributes) CallAs() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("call_as"))
}

func (css cloudformationStackSetAttributes) Capabilities() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](css.ref.Append("capabilities"))
}

func (css cloudformationStackSetAttributes) Description() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("description"))
}

func (css cloudformationStackSetAttributes) ExecutionRoleName() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("execution_role_name"))
}

func (css cloudformationStackSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("id"))
}

func (css cloudformationStackSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("name"))
}

func (css cloudformationStackSetAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](css.ref.Append("parameters"))
}

func (css cloudformationStackSetAttributes) PermissionModel() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("permission_model"))
}

func (css cloudformationStackSetAttributes) StackSetId() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("stack_set_id"))
}

func (css cloudformationStackSetAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](css.ref.Append("tags"))
}

func (css cloudformationStackSetAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](css.ref.Append("tags_all"))
}

func (css cloudformationStackSetAttributes) TemplateBody() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("template_body"))
}

func (css cloudformationStackSetAttributes) TemplateUrl() terra.StringValue {
	return terra.ReferenceString(css.ref.Append("template_url"))
}

func (css cloudformationStackSetAttributes) AutoDeployment() terra.ListValue[cloudformationstackset.AutoDeploymentAttributes] {
	return terra.ReferenceList[cloudformationstackset.AutoDeploymentAttributes](css.ref.Append("auto_deployment"))
}

func (css cloudformationStackSetAttributes) OperationPreferences() terra.ListValue[cloudformationstackset.OperationPreferencesAttributes] {
	return terra.ReferenceList[cloudformationstackset.OperationPreferencesAttributes](css.ref.Append("operation_preferences"))
}

func (css cloudformationStackSetAttributes) Timeouts() cloudformationstackset.TimeoutsAttributes {
	return terra.ReferenceSingle[cloudformationstackset.TimeoutsAttributes](css.ref.Append("timeouts"))
}

type cloudformationStackSetState struct {
	AdministrationRoleArn string                                             `json:"administration_role_arn"`
	Arn                   string                                             `json:"arn"`
	CallAs                string                                             `json:"call_as"`
	Capabilities          []string                                           `json:"capabilities"`
	Description           string                                             `json:"description"`
	ExecutionRoleName     string                                             `json:"execution_role_name"`
	Id                    string                                             `json:"id"`
	Name                  string                                             `json:"name"`
	Parameters            map[string]string                                  `json:"parameters"`
	PermissionModel       string                                             `json:"permission_model"`
	StackSetId            string                                             `json:"stack_set_id"`
	Tags                  map[string]string                                  `json:"tags"`
	TagsAll               map[string]string                                  `json:"tags_all"`
	TemplateBody          string                                             `json:"template_body"`
	TemplateUrl           string                                             `json:"template_url"`
	AutoDeployment        []cloudformationstackset.AutoDeploymentState       `json:"auto_deployment"`
	OperationPreferences  []cloudformationstackset.OperationPreferencesState `json:"operation_preferences"`
	Timeouts              *cloudformationstackset.TimeoutsState              `json:"timeouts"`
}
