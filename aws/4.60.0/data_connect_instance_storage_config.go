// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataconnectinstancestorageconfig "github.com/golingon/terraproviders/aws/4.60.0/dataconnectinstancestorageconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataConnectInstanceStorageConfig(name string, args DataConnectInstanceStorageConfigArgs) *DataConnectInstanceStorageConfig {
	return &DataConnectInstanceStorageConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataConnectInstanceStorageConfig)(nil)

type DataConnectInstanceStorageConfig struct {
	Name string
	Args DataConnectInstanceStorageConfigArgs
}

func (cisc *DataConnectInstanceStorageConfig) DataSource() string {
	return "aws_connect_instance_storage_config"
}

func (cisc *DataConnectInstanceStorageConfig) LocalName() string {
	return cisc.Name
}

func (cisc *DataConnectInstanceStorageConfig) Configuration() interface{} {
	return cisc.Args
}

func (cisc *DataConnectInstanceStorageConfig) Attributes() dataConnectInstanceStorageConfigAttributes {
	return dataConnectInstanceStorageConfigAttributes{ref: terra.ReferenceDataResource(cisc)}
}

type DataConnectInstanceStorageConfigArgs struct {
	// AssociationId: string, required
	AssociationId terra.StringValue `hcl:"association_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// ResourceType: string, required
	ResourceType terra.StringValue `hcl:"resource_type,attr" validate:"required"`
	// StorageConfig: min=0
	StorageConfig []dataconnectinstancestorageconfig.StorageConfig `hcl:"storage_config,block" validate:"min=0"`
}
type dataConnectInstanceStorageConfigAttributes struct {
	ref terra.Reference
}

func (cisc dataConnectInstanceStorageConfigAttributes) AssociationId() terra.StringValue {
	return terra.ReferenceString(cisc.ref.Append("association_id"))
}

func (cisc dataConnectInstanceStorageConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cisc.ref.Append("id"))
}

func (cisc dataConnectInstanceStorageConfigAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceString(cisc.ref.Append("instance_id"))
}

func (cisc dataConnectInstanceStorageConfigAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceString(cisc.ref.Append("resource_type"))
}

func (cisc dataConnectInstanceStorageConfigAttributes) StorageConfig() terra.ListValue[dataconnectinstancestorageconfig.StorageConfigAttributes] {
	return terra.ReferenceList[dataconnectinstancestorageconfig.StorageConfigAttributes](cisc.ref.Append("storage_config"))
}
