// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataCognitoUserPools(name string, args DataCognitoUserPoolsArgs) *DataCognitoUserPools {
	return &DataCognitoUserPools{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCognitoUserPools)(nil)

type DataCognitoUserPools struct {
	Name string
	Args DataCognitoUserPoolsArgs
}

func (cup *DataCognitoUserPools) DataSource() string {
	return "aws_cognito_user_pools"
}

func (cup *DataCognitoUserPools) LocalName() string {
	return cup.Name
}

func (cup *DataCognitoUserPools) Configuration() interface{} {
	return cup.Args
}

func (cup *DataCognitoUserPools) Attributes() dataCognitoUserPoolsAttributes {
	return dataCognitoUserPoolsAttributes{ref: terra.ReferenceDataResource(cup)}
}

type DataCognitoUserPoolsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}
type dataCognitoUserPoolsAttributes struct {
	ref terra.Reference
}

func (cup dataCognitoUserPoolsAttributes) Arns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cup.ref.Append("arns"))
}

func (cup dataCognitoUserPoolsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cup.ref.Append("id"))
}

func (cup dataCognitoUserPoolsAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cup.ref.Append("ids"))
}

func (cup dataCognitoUserPoolsAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cup.ref.Append("name"))
}
