// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datalicensemanagerreceivedlicenses "github.com/golingon/terraproviders/aws/4.60.0/datalicensemanagerreceivedlicenses"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataLicensemanagerReceivedLicenses(name string, args DataLicensemanagerReceivedLicensesArgs) *DataLicensemanagerReceivedLicenses {
	return &DataLicensemanagerReceivedLicenses{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLicensemanagerReceivedLicenses)(nil)

type DataLicensemanagerReceivedLicenses struct {
	Name string
	Args DataLicensemanagerReceivedLicensesArgs
}

func (lrl *DataLicensemanagerReceivedLicenses) DataSource() string {
	return "aws_licensemanager_received_licenses"
}

func (lrl *DataLicensemanagerReceivedLicenses) LocalName() string {
	return lrl.Name
}

func (lrl *DataLicensemanagerReceivedLicenses) Configuration() interface{} {
	return lrl.Args
}

func (lrl *DataLicensemanagerReceivedLicenses) Attributes() dataLicensemanagerReceivedLicensesAttributes {
	return dataLicensemanagerReceivedLicensesAttributes{ref: terra.ReferenceDataResource(lrl)}
}

type DataLicensemanagerReceivedLicensesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filter: min=0
	Filter []datalicensemanagerreceivedlicenses.Filter `hcl:"filter,block" validate:"min=0"`
}
type dataLicensemanagerReceivedLicensesAttributes struct {
	ref terra.Reference
}

func (lrl dataLicensemanagerReceivedLicensesAttributes) Arns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](lrl.ref.Append("arns"))
}

func (lrl dataLicensemanagerReceivedLicensesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lrl.ref.Append("id"))
}

func (lrl dataLicensemanagerReceivedLicensesAttributes) Filter() terra.SetValue[datalicensemanagerreceivedlicenses.FilterAttributes] {
	return terra.ReferenceSet[datalicensemanagerreceivedlicenses.FilterAttributes](lrl.ref.Append("filter"))
}
