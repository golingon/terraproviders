// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datanetworkmanagerdevice

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AwsLocation struct{}

type Location struct{}

type AwsLocationAttributes struct {
	ref terra.Reference
}

func (al AwsLocationAttributes) InternalRef() terra.Reference {
	return al.ref
}

func (al AwsLocationAttributes) InternalWithRef(ref terra.Reference) AwsLocationAttributes {
	return AwsLocationAttributes{ref: ref}
}

func (al AwsLocationAttributes) InternalTokens() hclwrite.Tokens {
	return al.ref.InternalTokens()
}

func (al AwsLocationAttributes) SubnetArn() terra.StringValue {
	return terra.ReferenceAsString(al.ref.Append("subnet_arn"))
}

func (al AwsLocationAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(al.ref.Append("zone"))
}

type LocationAttributes struct {
	ref terra.Reference
}

func (l LocationAttributes) InternalRef() terra.Reference {
	return l.ref
}

func (l LocationAttributes) InternalWithRef(ref terra.Reference) LocationAttributes {
	return LocationAttributes{ref: ref}
}

func (l LocationAttributes) InternalTokens() hclwrite.Tokens {
	return l.ref.InternalTokens()
}

func (l LocationAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("address"))
}

func (l LocationAttributes) Latitude() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("latitude"))
}

func (l LocationAttributes) Longitude() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("longitude"))
}

type AwsLocationState struct {
	SubnetArn string `json:"subnet_arn"`
	Zone      string `json:"zone"`
}

type LocationState struct {
	Address   string `json:"address"`
	Latitude  string `json:"latitude"`
	Longitude string `json:"longitude"`
}
