// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataebssnapshot "github.com/golingon/terraproviders/aws/4.60.0/dataebssnapshot"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEbsSnapshot(name string, args DataEbsSnapshotArgs) *DataEbsSnapshot {
	return &DataEbsSnapshot{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEbsSnapshot)(nil)

type DataEbsSnapshot struct {
	Name string
	Args DataEbsSnapshotArgs
}

func (es *DataEbsSnapshot) DataSource() string {
	return "aws_ebs_snapshot"
}

func (es *DataEbsSnapshot) LocalName() string {
	return es.Name
}

func (es *DataEbsSnapshot) Configuration() interface{} {
	return es.Args
}

func (es *DataEbsSnapshot) Attributes() dataEbsSnapshotAttributes {
	return dataEbsSnapshotAttributes{ref: terra.ReferenceDataResource(es)}
}

type DataEbsSnapshotArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MostRecent: bool, optional
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Owners: list of string, optional
	Owners terra.ListValue[terra.StringValue] `hcl:"owners,attr"`
	// RestorableByUserIds: list of string, optional
	RestorableByUserIds terra.ListValue[terra.StringValue] `hcl:"restorable_by_user_ids,attr"`
	// SnapshotIds: list of string, optional
	SnapshotIds terra.ListValue[terra.StringValue] `hcl:"snapshot_ids,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataebssnapshot.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataebssnapshot.Timeouts `hcl:"timeouts,block"`
}
type dataEbsSnapshotAttributes struct {
	ref terra.Reference
}

func (es dataEbsSnapshotAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("arn"))
}

func (es dataEbsSnapshotAttributes) DataEncryptionKeyId() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("data_encryption_key_id"))
}

func (es dataEbsSnapshotAttributes) Description() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("description"))
}

func (es dataEbsSnapshotAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceBool(es.ref.Append("encrypted"))
}

func (es dataEbsSnapshotAttributes) Id() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("id"))
}

func (es dataEbsSnapshotAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("kms_key_id"))
}

func (es dataEbsSnapshotAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceBool(es.ref.Append("most_recent"))
}

func (es dataEbsSnapshotAttributes) OutpostArn() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("outpost_arn"))
}

func (es dataEbsSnapshotAttributes) OwnerAlias() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("owner_alias"))
}

func (es dataEbsSnapshotAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("owner_id"))
}

func (es dataEbsSnapshotAttributes) Owners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](es.ref.Append("owners"))
}

func (es dataEbsSnapshotAttributes) RestorableByUserIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](es.ref.Append("restorable_by_user_ids"))
}

func (es dataEbsSnapshotAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("snapshot_id"))
}

func (es dataEbsSnapshotAttributes) SnapshotIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](es.ref.Append("snapshot_ids"))
}

func (es dataEbsSnapshotAttributes) State() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("state"))
}

func (es dataEbsSnapshotAttributes) StorageTier() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("storage_tier"))
}

func (es dataEbsSnapshotAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](es.ref.Append("tags"))
}

func (es dataEbsSnapshotAttributes) VolumeId() terra.StringValue {
	return terra.ReferenceString(es.ref.Append("volume_id"))
}

func (es dataEbsSnapshotAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceNumber(es.ref.Append("volume_size"))
}

func (es dataEbsSnapshotAttributes) Filter() terra.SetValue[dataebssnapshot.FilterAttributes] {
	return terra.ReferenceSet[dataebssnapshot.FilterAttributes](es.ref.Append("filter"))
}

func (es dataEbsSnapshotAttributes) Timeouts() dataebssnapshot.TimeoutsAttributes {
	return terra.ReferenceSingle[dataebssnapshot.TimeoutsAttributes](es.ref.Append("timeouts"))
}
