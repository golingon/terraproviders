// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSesDomainDkim(name string, args SesDomainDkimArgs) *SesDomainDkim {
	return &SesDomainDkim{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SesDomainDkim)(nil)

type SesDomainDkim struct {
	Name  string
	Args  SesDomainDkimArgs
	state *sesDomainDkimState
}

func (sdd *SesDomainDkim) Type() string {
	return "aws_ses_domain_dkim"
}

func (sdd *SesDomainDkim) LocalName() string {
	return sdd.Name
}

func (sdd *SesDomainDkim) Configuration() interface{} {
	return sdd.Args
}

func (sdd *SesDomainDkim) Attributes() sesDomainDkimAttributes {
	return sesDomainDkimAttributes{ref: terra.ReferenceResource(sdd)}
}

func (sdd *SesDomainDkim) ImportState(av io.Reader) error {
	sdd.state = &sesDomainDkimState{}
	if err := json.NewDecoder(av).Decode(sdd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdd.Type(), sdd.LocalName(), err)
	}
	return nil
}

func (sdd *SesDomainDkim) State() (*sesDomainDkimState, bool) {
	return sdd.state, sdd.state != nil
}

func (sdd *SesDomainDkim) StateMust() *sesDomainDkimState {
	if sdd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdd.Type(), sdd.LocalName()))
	}
	return sdd.state
}

func (sdd *SesDomainDkim) DependOn() terra.Reference {
	return terra.ReferenceResource(sdd)
}

type SesDomainDkimArgs struct {
	// Domain: string, required
	Domain terra.StringValue `hcl:"domain,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that SesDomainDkim depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sesDomainDkimAttributes struct {
	ref terra.Reference
}

func (sdd sesDomainDkimAttributes) DkimTokens() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sdd.ref.Append("dkim_tokens"))
}

func (sdd sesDomainDkimAttributes) Domain() terra.StringValue {
	return terra.ReferenceString(sdd.ref.Append("domain"))
}

func (sdd sesDomainDkimAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdd.ref.Append("id"))
}

type sesDomainDkimState struct {
	DkimTokens []string `json:"dkim_tokens"`
	Domain     string   `json:"domain"`
	Id         string   `json:"id"`
}
