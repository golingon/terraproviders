// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datadynamodbtable "github.com/golingon/terraproviders/aws/4.60.0/datadynamodbtable"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataDynamodbTable(name string, args DataDynamodbTableArgs) *DataDynamodbTable {
	return &DataDynamodbTable{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDynamodbTable)(nil)

type DataDynamodbTable struct {
	Name string
	Args DataDynamodbTableArgs
}

func (dt *DataDynamodbTable) DataSource() string {
	return "aws_dynamodb_table"
}

func (dt *DataDynamodbTable) LocalName() string {
	return dt.Name
}

func (dt *DataDynamodbTable) Configuration() interface{} {
	return dt.Args
}

func (dt *DataDynamodbTable) Attributes() dataDynamodbTableAttributes {
	return dataDynamodbTableAttributes{ref: terra.ReferenceDataResource(dt)}
}

type DataDynamodbTableArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Attribute: min=0
	Attribute []datadynamodbtable.Attribute `hcl:"attribute,block" validate:"min=0"`
	// GlobalSecondaryIndex: min=0
	GlobalSecondaryIndex []datadynamodbtable.GlobalSecondaryIndex `hcl:"global_secondary_index,block" validate:"min=0"`
	// LocalSecondaryIndex: min=0
	LocalSecondaryIndex []datadynamodbtable.LocalSecondaryIndex `hcl:"local_secondary_index,block" validate:"min=0"`
	// PointInTimeRecovery: min=0
	PointInTimeRecovery []datadynamodbtable.PointInTimeRecovery `hcl:"point_in_time_recovery,block" validate:"min=0"`
	// Replica: min=0
	Replica []datadynamodbtable.Replica `hcl:"replica,block" validate:"min=0"`
	// Ttl: min=0
	Ttl []datadynamodbtable.Ttl `hcl:"ttl,block" validate:"min=0"`
	// ServerSideEncryption: optional
	ServerSideEncryption *datadynamodbtable.ServerSideEncryption `hcl:"server_side_encryption,block"`
}
type dataDynamodbTableAttributes struct {
	ref terra.Reference
}

func (dt dataDynamodbTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("arn"))
}

func (dt dataDynamodbTableAttributes) BillingMode() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("billing_mode"))
}

func (dt dataDynamodbTableAttributes) DeletionProtectionEnabled() terra.BoolValue {
	return terra.ReferenceBool(dt.ref.Append("deletion_protection_enabled"))
}

func (dt dataDynamodbTableAttributes) HashKey() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("hash_key"))
}

func (dt dataDynamodbTableAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("id"))
}

func (dt dataDynamodbTableAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("name"))
}

func (dt dataDynamodbTableAttributes) RangeKey() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("range_key"))
}

func (dt dataDynamodbTableAttributes) ReadCapacity() terra.NumberValue {
	return terra.ReferenceNumber(dt.ref.Append("read_capacity"))
}

func (dt dataDynamodbTableAttributes) StreamArn() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("stream_arn"))
}

func (dt dataDynamodbTableAttributes) StreamEnabled() terra.BoolValue {
	return terra.ReferenceBool(dt.ref.Append("stream_enabled"))
}

func (dt dataDynamodbTableAttributes) StreamLabel() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("stream_label"))
}

func (dt dataDynamodbTableAttributes) StreamViewType() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("stream_view_type"))
}

func (dt dataDynamodbTableAttributes) TableClass() terra.StringValue {
	return terra.ReferenceString(dt.ref.Append("table_class"))
}

func (dt dataDynamodbTableAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dt.ref.Append("tags"))
}

func (dt dataDynamodbTableAttributes) WriteCapacity() terra.NumberValue {
	return terra.ReferenceNumber(dt.ref.Append("write_capacity"))
}

func (dt dataDynamodbTableAttributes) Attribute() terra.SetValue[datadynamodbtable.AttributeAttributes] {
	return terra.ReferenceSet[datadynamodbtable.AttributeAttributes](dt.ref.Append("attribute"))
}

func (dt dataDynamodbTableAttributes) GlobalSecondaryIndex() terra.SetValue[datadynamodbtable.GlobalSecondaryIndexAttributes] {
	return terra.ReferenceSet[datadynamodbtable.GlobalSecondaryIndexAttributes](dt.ref.Append("global_secondary_index"))
}

func (dt dataDynamodbTableAttributes) LocalSecondaryIndex() terra.SetValue[datadynamodbtable.LocalSecondaryIndexAttributes] {
	return terra.ReferenceSet[datadynamodbtable.LocalSecondaryIndexAttributes](dt.ref.Append("local_secondary_index"))
}

func (dt dataDynamodbTableAttributes) PointInTimeRecovery() terra.ListValue[datadynamodbtable.PointInTimeRecoveryAttributes] {
	return terra.ReferenceList[datadynamodbtable.PointInTimeRecoveryAttributes](dt.ref.Append("point_in_time_recovery"))
}

func (dt dataDynamodbTableAttributes) Replica() terra.SetValue[datadynamodbtable.ReplicaAttributes] {
	return terra.ReferenceSet[datadynamodbtable.ReplicaAttributes](dt.ref.Append("replica"))
}

func (dt dataDynamodbTableAttributes) Ttl() terra.SetValue[datadynamodbtable.TtlAttributes] {
	return terra.ReferenceSet[datadynamodbtable.TtlAttributes](dt.ref.Append("ttl"))
}

func (dt dataDynamodbTableAttributes) ServerSideEncryption() terra.ListValue[datadynamodbtable.ServerSideEncryptionAttributes] {
	return terra.ReferenceList[datadynamodbtable.ServerSideEncryptionAttributes](dt.ref.Append("server_side_encryption"))
}
