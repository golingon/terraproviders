// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWafRegexPatternSet(name string, args WafRegexPatternSetArgs) *WafRegexPatternSet {
	return &WafRegexPatternSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WafRegexPatternSet)(nil)

type WafRegexPatternSet struct {
	Name  string
	Args  WafRegexPatternSetArgs
	state *wafRegexPatternSetState
}

func (wrps *WafRegexPatternSet) Type() string {
	return "aws_waf_regex_pattern_set"
}

func (wrps *WafRegexPatternSet) LocalName() string {
	return wrps.Name
}

func (wrps *WafRegexPatternSet) Configuration() interface{} {
	return wrps.Args
}

func (wrps *WafRegexPatternSet) Attributes() wafRegexPatternSetAttributes {
	return wafRegexPatternSetAttributes{ref: terra.ReferenceResource(wrps)}
}

func (wrps *WafRegexPatternSet) ImportState(av io.Reader) error {
	wrps.state = &wafRegexPatternSetState{}
	if err := json.NewDecoder(av).Decode(wrps.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wrps.Type(), wrps.LocalName(), err)
	}
	return nil
}

func (wrps *WafRegexPatternSet) State() (*wafRegexPatternSetState, bool) {
	return wrps.state, wrps.state != nil
}

func (wrps *WafRegexPatternSet) StateMust() *wafRegexPatternSetState {
	if wrps.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wrps.Type(), wrps.LocalName()))
	}
	return wrps.state
}

func (wrps *WafRegexPatternSet) DependOn() terra.Reference {
	return terra.ReferenceResource(wrps)
}

type WafRegexPatternSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RegexPatternStrings: set of string, optional
	RegexPatternStrings terra.SetValue[terra.StringValue] `hcl:"regex_pattern_strings,attr"`
	// DependsOn contains resources that WafRegexPatternSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type wafRegexPatternSetAttributes struct {
	ref terra.Reference
}

func (wrps wafRegexPatternSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("arn"))
}

func (wrps wafRegexPatternSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("id"))
}

func (wrps wafRegexPatternSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("name"))
}

func (wrps wafRegexPatternSetAttributes) RegexPatternStrings() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](wrps.ref.Append("regex_pattern_strings"))
}

type wafRegexPatternSetState struct {
	Arn                 string   `json:"arn"`
	Id                  string   `json:"id"`
	Name                string   `json:"name"`
	RegexPatternStrings []string `json:"regex_pattern_strings"`
}
