// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataRedshiftserverlessCredentials(name string, args DataRedshiftserverlessCredentialsArgs) *DataRedshiftserverlessCredentials {
	return &DataRedshiftserverlessCredentials{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedshiftserverlessCredentials)(nil)

type DataRedshiftserverlessCredentials struct {
	Name string
	Args DataRedshiftserverlessCredentialsArgs
}

func (rc *DataRedshiftserverlessCredentials) DataSource() string {
	return "aws_redshiftserverless_credentials"
}

func (rc *DataRedshiftserverlessCredentials) LocalName() string {
	return rc.Name
}

func (rc *DataRedshiftserverlessCredentials) Configuration() interface{} {
	return rc.Args
}

func (rc *DataRedshiftserverlessCredentials) Attributes() dataRedshiftserverlessCredentialsAttributes {
	return dataRedshiftserverlessCredentialsAttributes{ref: terra.ReferenceDataResource(rc)}
}

type DataRedshiftserverlessCredentialsArgs struct {
	// DbName: string, optional
	DbName terra.StringValue `hcl:"db_name,attr"`
	// DurationSeconds: number, optional
	DurationSeconds terra.NumberValue `hcl:"duration_seconds,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// WorkgroupName: string, required
	WorkgroupName terra.StringValue `hcl:"workgroup_name,attr" validate:"required"`
}
type dataRedshiftserverlessCredentialsAttributes struct {
	ref terra.Reference
}

func (rc dataRedshiftserverlessCredentialsAttributes) DbName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("db_name"))
}

func (rc dataRedshiftserverlessCredentialsAttributes) DbPassword() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("db_password"))
}

func (rc dataRedshiftserverlessCredentialsAttributes) DbUser() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("db_user"))
}

func (rc dataRedshiftserverlessCredentialsAttributes) DurationSeconds() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("duration_seconds"))
}

func (rc dataRedshiftserverlessCredentialsAttributes) Expiration() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("expiration"))
}

func (rc dataRedshiftserverlessCredentialsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("id"))
}

func (rc dataRedshiftserverlessCredentialsAttributes) WorkgroupName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("workgroup_name"))
}
