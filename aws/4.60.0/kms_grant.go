// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	kmsgrant "github.com/golingon/terraproviders/aws/4.60.0/kmsgrant"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKmsGrant(name string, args KmsGrantArgs) *KmsGrant {
	return &KmsGrant{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KmsGrant)(nil)

type KmsGrant struct {
	Name  string
	Args  KmsGrantArgs
	state *kmsGrantState
}

func (kg *KmsGrant) Type() string {
	return "aws_kms_grant"
}

func (kg *KmsGrant) LocalName() string {
	return kg.Name
}

func (kg *KmsGrant) Configuration() interface{} {
	return kg.Args
}

func (kg *KmsGrant) Attributes() kmsGrantAttributes {
	return kmsGrantAttributes{ref: terra.ReferenceResource(kg)}
}

func (kg *KmsGrant) ImportState(av io.Reader) error {
	kg.state = &kmsGrantState{}
	if err := json.NewDecoder(av).Decode(kg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kg.Type(), kg.LocalName(), err)
	}
	return nil
}

func (kg *KmsGrant) State() (*kmsGrantState, bool) {
	return kg.state, kg.state != nil
}

func (kg *KmsGrant) StateMust() *kmsGrantState {
	if kg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kg.Type(), kg.LocalName()))
	}
	return kg.state
}

func (kg *KmsGrant) DependOn() terra.Reference {
	return terra.ReferenceResource(kg)
}

type KmsGrantArgs struct {
	// GrantCreationTokens: set of string, optional
	GrantCreationTokens terra.SetValue[terra.StringValue] `hcl:"grant_creation_tokens,attr"`
	// GranteePrincipal: string, required
	GranteePrincipal terra.StringValue `hcl:"grantee_principal,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyId: string, required
	KeyId terra.StringValue `hcl:"key_id,attr" validate:"required"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Operations: set of string, required
	Operations terra.SetValue[terra.StringValue] `hcl:"operations,attr" validate:"required"`
	// RetireOnDelete: bool, optional
	RetireOnDelete terra.BoolValue `hcl:"retire_on_delete,attr"`
	// RetiringPrincipal: string, optional
	RetiringPrincipal terra.StringValue `hcl:"retiring_principal,attr"`
	// Constraints: min=0
	Constraints []kmsgrant.Constraints `hcl:"constraints,block" validate:"min=0"`
	// DependsOn contains resources that KmsGrant depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kmsGrantAttributes struct {
	ref terra.Reference
}

func (kg kmsGrantAttributes) GrantCreationTokens() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](kg.ref.Append("grant_creation_tokens"))
}

func (kg kmsGrantAttributes) GrantId() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("grant_id"))
}

func (kg kmsGrantAttributes) GrantToken() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("grant_token"))
}

func (kg kmsGrantAttributes) GranteePrincipal() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("grantee_principal"))
}

func (kg kmsGrantAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("id"))
}

func (kg kmsGrantAttributes) KeyId() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("key_id"))
}

func (kg kmsGrantAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("name"))
}

func (kg kmsGrantAttributes) Operations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](kg.ref.Append("operations"))
}

func (kg kmsGrantAttributes) RetireOnDelete() terra.BoolValue {
	return terra.ReferenceBool(kg.ref.Append("retire_on_delete"))
}

func (kg kmsGrantAttributes) RetiringPrincipal() terra.StringValue {
	return terra.ReferenceString(kg.ref.Append("retiring_principal"))
}

func (kg kmsGrantAttributes) Constraints() terra.SetValue[kmsgrant.ConstraintsAttributes] {
	return terra.ReferenceSet[kmsgrant.ConstraintsAttributes](kg.ref.Append("constraints"))
}

type kmsGrantState struct {
	GrantCreationTokens []string                    `json:"grant_creation_tokens"`
	GrantId             string                      `json:"grant_id"`
	GrantToken          string                      `json:"grant_token"`
	GranteePrincipal    string                      `json:"grantee_principal"`
	Id                  string                      `json:"id"`
	KeyId               string                      `json:"key_id"`
	Name                string                      `json:"name"`
	Operations          []string                    `json:"operations"`
	RetireOnDelete      bool                        `json:"retire_on_delete"`
	RetiringPrincipal   string                      `json:"retiring_principal"`
	Constraints         []kmsgrant.ConstraintsState `json:"constraints"`
}
