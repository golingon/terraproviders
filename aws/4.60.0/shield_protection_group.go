// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewShieldProtectionGroup(name string, args ShieldProtectionGroupArgs) *ShieldProtectionGroup {
	return &ShieldProtectionGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ShieldProtectionGroup)(nil)

type ShieldProtectionGroup struct {
	Name  string
	Args  ShieldProtectionGroupArgs
	state *shieldProtectionGroupState
}

func (spg *ShieldProtectionGroup) Type() string {
	return "aws_shield_protection_group"
}

func (spg *ShieldProtectionGroup) LocalName() string {
	return spg.Name
}

func (spg *ShieldProtectionGroup) Configuration() interface{} {
	return spg.Args
}

func (spg *ShieldProtectionGroup) Attributes() shieldProtectionGroupAttributes {
	return shieldProtectionGroupAttributes{ref: terra.ReferenceResource(spg)}
}

func (spg *ShieldProtectionGroup) ImportState(av io.Reader) error {
	spg.state = &shieldProtectionGroupState{}
	if err := json.NewDecoder(av).Decode(spg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", spg.Type(), spg.LocalName(), err)
	}
	return nil
}

func (spg *ShieldProtectionGroup) State() (*shieldProtectionGroupState, bool) {
	return spg.state, spg.state != nil
}

func (spg *ShieldProtectionGroup) StateMust() *shieldProtectionGroupState {
	if spg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", spg.Type(), spg.LocalName()))
	}
	return spg.state
}

func (spg *ShieldProtectionGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(spg)
}

type ShieldProtectionGroupArgs struct {
	// Aggregation: string, required
	Aggregation terra.StringValue `hcl:"aggregation,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: list of string, optional
	Members terra.ListValue[terra.StringValue] `hcl:"members,attr"`
	// Pattern: string, required
	Pattern terra.StringValue `hcl:"pattern,attr" validate:"required"`
	// ProtectionGroupId: string, required
	ProtectionGroupId terra.StringValue `hcl:"protection_group_id,attr" validate:"required"`
	// ResourceType: string, optional
	ResourceType terra.StringValue `hcl:"resource_type,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// DependsOn contains resources that ShieldProtectionGroup depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type shieldProtectionGroupAttributes struct {
	ref terra.Reference
}

func (spg shieldProtectionGroupAttributes) Aggregation() terra.StringValue {
	return terra.ReferenceString(spg.ref.Append("aggregation"))
}

func (spg shieldProtectionGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spg.ref.Append("id"))
}

func (spg shieldProtectionGroupAttributes) Members() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](spg.ref.Append("members"))
}

func (spg shieldProtectionGroupAttributes) Pattern() terra.StringValue {
	return terra.ReferenceString(spg.ref.Append("pattern"))
}

func (spg shieldProtectionGroupAttributes) ProtectionGroupArn() terra.StringValue {
	return terra.ReferenceString(spg.ref.Append("protection_group_arn"))
}

func (spg shieldProtectionGroupAttributes) ProtectionGroupId() terra.StringValue {
	return terra.ReferenceString(spg.ref.Append("protection_group_id"))
}

func (spg shieldProtectionGroupAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceString(spg.ref.Append("resource_type"))
}

func (spg shieldProtectionGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](spg.ref.Append("tags"))
}

func (spg shieldProtectionGroupAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](spg.ref.Append("tags_all"))
}

type shieldProtectionGroupState struct {
	Aggregation        string            `json:"aggregation"`
	Id                 string            `json:"id"`
	Members            []string          `json:"members"`
	Pattern            string            `json:"pattern"`
	ProtectionGroupArn string            `json:"protection_group_arn"`
	ProtectionGroupId  string            `json:"protection_group_id"`
	ResourceType       string            `json:"resource_type"`
	Tags               map[string]string `json:"tags"`
	TagsAll            map[string]string `json:"tags_all"`
}
