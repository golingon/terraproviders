// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	oamsinkpolicy "github.com/golingon/terraproviders/aws/4.60.0/oamsinkpolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewOamSinkPolicy(name string, args OamSinkPolicyArgs) *OamSinkPolicy {
	return &OamSinkPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OamSinkPolicy)(nil)

type OamSinkPolicy struct {
	Name  string
	Args  OamSinkPolicyArgs
	state *oamSinkPolicyState
}

func (osp *OamSinkPolicy) Type() string {
	return "aws_oam_sink_policy"
}

func (osp *OamSinkPolicy) LocalName() string {
	return osp.Name
}

func (osp *OamSinkPolicy) Configuration() interface{} {
	return osp.Args
}

func (osp *OamSinkPolicy) Attributes() oamSinkPolicyAttributes {
	return oamSinkPolicyAttributes{ref: terra.ReferenceResource(osp)}
}

func (osp *OamSinkPolicy) ImportState(av io.Reader) error {
	osp.state = &oamSinkPolicyState{}
	if err := json.NewDecoder(av).Decode(osp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", osp.Type(), osp.LocalName(), err)
	}
	return nil
}

func (osp *OamSinkPolicy) State() (*oamSinkPolicyState, bool) {
	return osp.state, osp.state != nil
}

func (osp *OamSinkPolicy) StateMust() *oamSinkPolicyState {
	if osp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", osp.Type(), osp.LocalName()))
	}
	return osp.state
}

func (osp *OamSinkPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(osp)
}

type OamSinkPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// SinkIdentifier: string, required
	SinkIdentifier terra.StringValue `hcl:"sink_identifier,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *oamsinkpolicy.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that OamSinkPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type oamSinkPolicyAttributes struct {
	ref terra.Reference
}

func (osp oamSinkPolicyAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(osp.ref.Append("arn"))
}

func (osp oamSinkPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(osp.ref.Append("id"))
}

func (osp oamSinkPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(osp.ref.Append("policy"))
}

func (osp oamSinkPolicyAttributes) SinkId() terra.StringValue {
	return terra.ReferenceString(osp.ref.Append("sink_id"))
}

func (osp oamSinkPolicyAttributes) SinkIdentifier() terra.StringValue {
	return terra.ReferenceString(osp.ref.Append("sink_identifier"))
}

func (osp oamSinkPolicyAttributes) Timeouts() oamsinkpolicy.TimeoutsAttributes {
	return terra.ReferenceSingle[oamsinkpolicy.TimeoutsAttributes](osp.ref.Append("timeouts"))
}

type oamSinkPolicyState struct {
	Arn            string                       `json:"arn"`
	Id             string                       `json:"id"`
	Policy         string                       `json:"policy"`
	SinkId         string                       `json:"sink_id"`
	SinkIdentifier string                       `json:"sink_identifier"`
	Timeouts       *oamsinkpolicy.TimeoutsState `json:"timeouts"`
}
