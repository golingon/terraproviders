// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataBackupPlan(name string, args DataBackupPlanArgs) *DataBackupPlan {
	return &DataBackupPlan{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataBackupPlan)(nil)

type DataBackupPlan struct {
	Name string
	Args DataBackupPlanArgs
}

func (bp *DataBackupPlan) DataSource() string {
	return "aws_backup_plan"
}

func (bp *DataBackupPlan) LocalName() string {
	return bp.Name
}

func (bp *DataBackupPlan) Configuration() interface{} {
	return bp.Args
}

func (bp *DataBackupPlan) Attributes() dataBackupPlanAttributes {
	return dataBackupPlanAttributes{ref: terra.ReferenceDataResource(bp)}
}

type DataBackupPlanArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PlanId: string, required
	PlanId terra.StringValue `hcl:"plan_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}
type dataBackupPlanAttributes struct {
	ref terra.Reference
}

func (bp dataBackupPlanAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(bp.ref.Append("arn"))
}

func (bp dataBackupPlanAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bp.ref.Append("id"))
}

func (bp dataBackupPlanAttributes) Name() terra.StringValue {
	return terra.ReferenceString(bp.ref.Append("name"))
}

func (bp dataBackupPlanAttributes) PlanId() terra.StringValue {
	return terra.ReferenceString(bp.ref.Append("plan_id"))
}

func (bp dataBackupPlanAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](bp.ref.Append("tags"))
}

func (bp dataBackupPlanAttributes) Version() terra.StringValue {
	return terra.ReferenceString(bp.ref.Append("version"))
}
