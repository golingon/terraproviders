// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2instancetypes "github.com/golingon/terraproviders/aws/4.60.0/dataec2instancetypes"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEc2InstanceTypes(name string, args DataEc2InstanceTypesArgs) *DataEc2InstanceTypes {
	return &DataEc2InstanceTypes{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2InstanceTypes)(nil)

type DataEc2InstanceTypes struct {
	Name string
	Args DataEc2InstanceTypesArgs
}

func (eit *DataEc2InstanceTypes) DataSource() string {
	return "aws_ec2_instance_types"
}

func (eit *DataEc2InstanceTypes) LocalName() string {
	return eit.Name
}

func (eit *DataEc2InstanceTypes) Configuration() interface{} {
	return eit.Args
}

func (eit *DataEc2InstanceTypes) Attributes() dataEc2InstanceTypesAttributes {
	return dataEc2InstanceTypesAttributes{ref: terra.ReferenceDataResource(eit)}
}

type DataEc2InstanceTypesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Filter: min=0
	Filter []dataec2instancetypes.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataec2instancetypes.Timeouts `hcl:"timeouts,block"`
}
type dataEc2InstanceTypesAttributes struct {
	ref terra.Reference
}

func (eit dataEc2InstanceTypesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(eit.ref.Append("id"))
}

func (eit dataEc2InstanceTypesAttributes) InstanceTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](eit.ref.Append("instance_types"))
}

func (eit dataEc2InstanceTypesAttributes) Filter() terra.SetValue[dataec2instancetypes.FilterAttributes] {
	return terra.ReferenceSet[dataec2instancetypes.FilterAttributes](eit.ref.Append("filter"))
}

func (eit dataEc2InstanceTypesAttributes) Timeouts() dataec2instancetypes.TimeoutsAttributes {
	return terra.ReferenceSingle[dataec2instancetypes.TimeoutsAttributes](eit.ref.Append("timeouts"))
}
