// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKmsKeyPolicy(name string, args KmsKeyPolicyArgs) *KmsKeyPolicy {
	return &KmsKeyPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KmsKeyPolicy)(nil)

type KmsKeyPolicy struct {
	Name  string
	Args  KmsKeyPolicyArgs
	state *kmsKeyPolicyState
}

func (kkp *KmsKeyPolicy) Type() string {
	return "aws_kms_key_policy"
}

func (kkp *KmsKeyPolicy) LocalName() string {
	return kkp.Name
}

func (kkp *KmsKeyPolicy) Configuration() interface{} {
	return kkp.Args
}

func (kkp *KmsKeyPolicy) Attributes() kmsKeyPolicyAttributes {
	return kmsKeyPolicyAttributes{ref: terra.ReferenceResource(kkp)}
}

func (kkp *KmsKeyPolicy) ImportState(av io.Reader) error {
	kkp.state = &kmsKeyPolicyState{}
	if err := json.NewDecoder(av).Decode(kkp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kkp.Type(), kkp.LocalName(), err)
	}
	return nil
}

func (kkp *KmsKeyPolicy) State() (*kmsKeyPolicyState, bool) {
	return kkp.state, kkp.state != nil
}

func (kkp *KmsKeyPolicy) StateMust() *kmsKeyPolicyState {
	if kkp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kkp.Type(), kkp.LocalName()))
	}
	return kkp.state
}

func (kkp *KmsKeyPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(kkp)
}

type KmsKeyPolicyArgs struct {
	// BypassPolicyLockoutSafetyCheck: bool, optional
	BypassPolicyLockoutSafetyCheck terra.BoolValue `hcl:"bypass_policy_lockout_safety_check,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyId: string, required
	KeyId terra.StringValue `hcl:"key_id,attr" validate:"required"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// DependsOn contains resources that KmsKeyPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kmsKeyPolicyAttributes struct {
	ref terra.Reference
}

func (kkp kmsKeyPolicyAttributes) BypassPolicyLockoutSafetyCheck() terra.BoolValue {
	return terra.ReferenceBool(kkp.ref.Append("bypass_policy_lockout_safety_check"))
}

func (kkp kmsKeyPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kkp.ref.Append("id"))
}

func (kkp kmsKeyPolicyAttributes) KeyId() terra.StringValue {
	return terra.ReferenceString(kkp.ref.Append("key_id"))
}

func (kkp kmsKeyPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(kkp.ref.Append("policy"))
}

type kmsKeyPolicyState struct {
	BypassPolicyLockoutSafetyCheck bool   `json:"bypass_policy_lockout_safety_check"`
	Id                             string `json:"id"`
	KeyId                          string `json:"key_id"`
	Policy                         string `json:"policy"`
}
