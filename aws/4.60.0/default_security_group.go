// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	defaultsecuritygroup "github.com/golingon/terraproviders/aws/4.60.0/defaultsecuritygroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDefaultSecurityGroup(name string, args DefaultSecurityGroupArgs) *DefaultSecurityGroup {
	return &DefaultSecurityGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DefaultSecurityGroup)(nil)

type DefaultSecurityGroup struct {
	Name  string
	Args  DefaultSecurityGroupArgs
	state *defaultSecurityGroupState
}

func (dsg *DefaultSecurityGroup) Type() string {
	return "aws_default_security_group"
}

func (dsg *DefaultSecurityGroup) LocalName() string {
	return dsg.Name
}

func (dsg *DefaultSecurityGroup) Configuration() interface{} {
	return dsg.Args
}

func (dsg *DefaultSecurityGroup) Attributes() defaultSecurityGroupAttributes {
	return defaultSecurityGroupAttributes{ref: terra.ReferenceResource(dsg)}
}

func (dsg *DefaultSecurityGroup) ImportState(av io.Reader) error {
	dsg.state = &defaultSecurityGroupState{}
	if err := json.NewDecoder(av).Decode(dsg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dsg.Type(), dsg.LocalName(), err)
	}
	return nil
}

func (dsg *DefaultSecurityGroup) State() (*defaultSecurityGroupState, bool) {
	return dsg.state, dsg.state != nil
}

func (dsg *DefaultSecurityGroup) StateMust() *defaultSecurityGroupState {
	if dsg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dsg.Type(), dsg.LocalName()))
	}
	return dsg.state
}

func (dsg *DefaultSecurityGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(dsg)
}

type DefaultSecurityGroupArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RevokeRulesOnDelete: bool, optional
	RevokeRulesOnDelete terra.BoolValue `hcl:"revoke_rules_on_delete,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpcId: string, optional
	VpcId terra.StringValue `hcl:"vpc_id,attr"`
	// Egress: min=0
	Egress []defaultsecuritygroup.Egress `hcl:"egress,block" validate:"min=0"`
	// Ingress: min=0
	Ingress []defaultsecuritygroup.Ingress `hcl:"ingress,block" validate:"min=0"`
	// DependsOn contains resources that DefaultSecurityGroup depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type defaultSecurityGroupAttributes struct {
	ref terra.Reference
}

func (dsg defaultSecurityGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("arn"))
}

func (dsg defaultSecurityGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("description"))
}

func (dsg defaultSecurityGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("id"))
}

func (dsg defaultSecurityGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("name"))
}

func (dsg defaultSecurityGroupAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("name_prefix"))
}

func (dsg defaultSecurityGroupAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("owner_id"))
}

func (dsg defaultSecurityGroupAttributes) RevokeRulesOnDelete() terra.BoolValue {
	return terra.ReferenceBool(dsg.ref.Append("revoke_rules_on_delete"))
}

func (dsg defaultSecurityGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dsg.ref.Append("tags"))
}

func (dsg defaultSecurityGroupAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dsg.ref.Append("tags_all"))
}

func (dsg defaultSecurityGroupAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(dsg.ref.Append("vpc_id"))
}

func (dsg defaultSecurityGroupAttributes) Egress() terra.SetValue[defaultsecuritygroup.EgressAttributes] {
	return terra.ReferenceSet[defaultsecuritygroup.EgressAttributes](dsg.ref.Append("egress"))
}

func (dsg defaultSecurityGroupAttributes) Ingress() terra.SetValue[defaultsecuritygroup.IngressAttributes] {
	return terra.ReferenceSet[defaultsecuritygroup.IngressAttributes](dsg.ref.Append("ingress"))
}

type defaultSecurityGroupState struct {
	Arn                 string                              `json:"arn"`
	Description         string                              `json:"description"`
	Id                  string                              `json:"id"`
	Name                string                              `json:"name"`
	NamePrefix          string                              `json:"name_prefix"`
	OwnerId             string                              `json:"owner_id"`
	RevokeRulesOnDelete bool                                `json:"revoke_rules_on_delete"`
	Tags                map[string]string                   `json:"tags"`
	TagsAll             map[string]string                   `json:"tags_all"`
	VpcId               string                              `json:"vpc_id"`
	Egress              []defaultsecuritygroup.EgressState  `json:"egress"`
	Ingress             []defaultsecuritygroup.IngressState `json:"ingress"`
}
