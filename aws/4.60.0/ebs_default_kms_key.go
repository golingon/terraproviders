// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewEbsDefaultKmsKey(name string, args EbsDefaultKmsKeyArgs) *EbsDefaultKmsKey {
	return &EbsDefaultKmsKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*EbsDefaultKmsKey)(nil)

type EbsDefaultKmsKey struct {
	Name  string
	Args  EbsDefaultKmsKeyArgs
	state *ebsDefaultKmsKeyState
}

func (edkk *EbsDefaultKmsKey) Type() string {
	return "aws_ebs_default_kms_key"
}

func (edkk *EbsDefaultKmsKey) LocalName() string {
	return edkk.Name
}

func (edkk *EbsDefaultKmsKey) Configuration() interface{} {
	return edkk.Args
}

func (edkk *EbsDefaultKmsKey) Attributes() ebsDefaultKmsKeyAttributes {
	return ebsDefaultKmsKeyAttributes{ref: terra.ReferenceResource(edkk)}
}

func (edkk *EbsDefaultKmsKey) ImportState(av io.Reader) error {
	edkk.state = &ebsDefaultKmsKeyState{}
	if err := json.NewDecoder(av).Decode(edkk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", edkk.Type(), edkk.LocalName(), err)
	}
	return nil
}

func (edkk *EbsDefaultKmsKey) State() (*ebsDefaultKmsKeyState, bool) {
	return edkk.state, edkk.state != nil
}

func (edkk *EbsDefaultKmsKey) StateMust() *ebsDefaultKmsKeyState {
	if edkk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", edkk.Type(), edkk.LocalName()))
	}
	return edkk.state
}

func (edkk *EbsDefaultKmsKey) DependOn() terra.Reference {
	return terra.ReferenceResource(edkk)
}

type EbsDefaultKmsKeyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyArn: string, required
	KeyArn terra.StringValue `hcl:"key_arn,attr" validate:"required"`
	// DependsOn contains resources that EbsDefaultKmsKey depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ebsDefaultKmsKeyAttributes struct {
	ref terra.Reference
}

func (edkk ebsDefaultKmsKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(edkk.ref.Append("id"))
}

func (edkk ebsDefaultKmsKeyAttributes) KeyArn() terra.StringValue {
	return terra.ReferenceString(edkk.ref.Append("key_arn"))
}

type ebsDefaultKmsKeyState struct {
	Id     string `json:"id"`
	KeyArn string `json:"key_arn"`
}
