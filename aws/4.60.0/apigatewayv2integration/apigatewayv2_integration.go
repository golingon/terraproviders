// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package apigatewayv2integration

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ResponseParameters struct {
	// Mappings: map of string, required
	Mappings terra.MapValue[terra.StringValue] `hcl:"mappings,attr" validate:"required"`
	// StatusCode: string, required
	StatusCode terra.StringValue `hcl:"status_code,attr" validate:"required"`
}

type TlsConfig struct {
	// ServerNameToVerify: string, optional
	ServerNameToVerify terra.StringValue `hcl:"server_name_to_verify,attr"`
}

type ResponseParametersAttributes struct {
	ref terra.Reference
}

func (rp ResponseParametersAttributes) InternalRef() terra.Reference {
	return rp.ref
}

func (rp ResponseParametersAttributes) InternalWithRef(ref terra.Reference) ResponseParametersAttributes {
	return ResponseParametersAttributes{ref: ref}
}

func (rp ResponseParametersAttributes) InternalTokens() hclwrite.Tokens {
	return rp.ref.InternalTokens()
}

func (rp ResponseParametersAttributes) Mappings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](rp.ref.Append("mappings"))
}

func (rp ResponseParametersAttributes) StatusCode() terra.StringValue {
	return terra.ReferenceString(rp.ref.Append("status_code"))
}

type TlsConfigAttributes struct {
	ref terra.Reference
}

func (tc TlsConfigAttributes) InternalRef() terra.Reference {
	return tc.ref
}

func (tc TlsConfigAttributes) InternalWithRef(ref terra.Reference) TlsConfigAttributes {
	return TlsConfigAttributes{ref: ref}
}

func (tc TlsConfigAttributes) InternalTokens() hclwrite.Tokens {
	return tc.ref.InternalTokens()
}

func (tc TlsConfigAttributes) ServerNameToVerify() terra.StringValue {
	return terra.ReferenceString(tc.ref.Append("server_name_to_verify"))
}

type ResponseParametersState struct {
	Mappings   map[string]string `json:"mappings"`
	StatusCode string            `json:"status_code"`
}

type TlsConfigState struct {
	ServerNameToVerify string `json:"server_name_to_verify"`
}
