// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewShieldProtectionHealthCheckAssociation(name string, args ShieldProtectionHealthCheckAssociationArgs) *ShieldProtectionHealthCheckAssociation {
	return &ShieldProtectionHealthCheckAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ShieldProtectionHealthCheckAssociation)(nil)

type ShieldProtectionHealthCheckAssociation struct {
	Name  string
	Args  ShieldProtectionHealthCheckAssociationArgs
	state *shieldProtectionHealthCheckAssociationState
}

func (sphca *ShieldProtectionHealthCheckAssociation) Type() string {
	return "aws_shield_protection_health_check_association"
}

func (sphca *ShieldProtectionHealthCheckAssociation) LocalName() string {
	return sphca.Name
}

func (sphca *ShieldProtectionHealthCheckAssociation) Configuration() interface{} {
	return sphca.Args
}

func (sphca *ShieldProtectionHealthCheckAssociation) Attributes() shieldProtectionHealthCheckAssociationAttributes {
	return shieldProtectionHealthCheckAssociationAttributes{ref: terra.ReferenceResource(sphca)}
}

func (sphca *ShieldProtectionHealthCheckAssociation) ImportState(av io.Reader) error {
	sphca.state = &shieldProtectionHealthCheckAssociationState{}
	if err := json.NewDecoder(av).Decode(sphca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sphca.Type(), sphca.LocalName(), err)
	}
	return nil
}

func (sphca *ShieldProtectionHealthCheckAssociation) State() (*shieldProtectionHealthCheckAssociationState, bool) {
	return sphca.state, sphca.state != nil
}

func (sphca *ShieldProtectionHealthCheckAssociation) StateMust() *shieldProtectionHealthCheckAssociationState {
	if sphca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sphca.Type(), sphca.LocalName()))
	}
	return sphca.state
}

func (sphca *ShieldProtectionHealthCheckAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(sphca)
}

type ShieldProtectionHealthCheckAssociationArgs struct {
	// HealthCheckArn: string, required
	HealthCheckArn terra.StringValue `hcl:"health_check_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ShieldProtectionId: string, required
	ShieldProtectionId terra.StringValue `hcl:"shield_protection_id,attr" validate:"required"`
	// DependsOn contains resources that ShieldProtectionHealthCheckAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type shieldProtectionHealthCheckAssociationAttributes struct {
	ref terra.Reference
}

func (sphca shieldProtectionHealthCheckAssociationAttributes) HealthCheckArn() terra.StringValue {
	return terra.ReferenceString(sphca.ref.Append("health_check_arn"))
}

func (sphca shieldProtectionHealthCheckAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sphca.ref.Append("id"))
}

func (sphca shieldProtectionHealthCheckAssociationAttributes) ShieldProtectionId() terra.StringValue {
	return terra.ReferenceString(sphca.ref.Append("shield_protection_id"))
}

type shieldProtectionHealthCheckAssociationState struct {
	HealthCheckArn     string `json:"health_check_arn"`
	Id                 string `json:"id"`
	ShieldProtectionId string `json:"shield_protection_id"`
}
