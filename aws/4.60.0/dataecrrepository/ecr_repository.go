// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataecrrepository

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type EncryptionConfiguration struct{}

type ImageScanningConfiguration struct{}

type EncryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec EncryptionConfigurationAttributes) InternalRef() terra.Reference {
	return ec.ref
}

func (ec EncryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) EncryptionConfigurationAttributes {
	return EncryptionConfigurationAttributes{ref: ref}
}

func (ec EncryptionConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ec.ref.InternalTokens()
}

func (ec EncryptionConfigurationAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceString(ec.ref.Append("encryption_type"))
}

func (ec EncryptionConfigurationAttributes) KmsKey() terra.StringValue {
	return terra.ReferenceString(ec.ref.Append("kms_key"))
}

type ImageScanningConfigurationAttributes struct {
	ref terra.Reference
}

func (isc ImageScanningConfigurationAttributes) InternalRef() terra.Reference {
	return isc.ref
}

func (isc ImageScanningConfigurationAttributes) InternalWithRef(ref terra.Reference) ImageScanningConfigurationAttributes {
	return ImageScanningConfigurationAttributes{ref: ref}
}

func (isc ImageScanningConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return isc.ref.InternalTokens()
}

func (isc ImageScanningConfigurationAttributes) ScanOnPush() terra.BoolValue {
	return terra.ReferenceBool(isc.ref.Append("scan_on_push"))
}

type EncryptionConfigurationState struct {
	EncryptionType string `json:"encryption_type"`
	KmsKey         string `json:"kms_key"`
}

type ImageScanningConfigurationState struct {
	ScanOnPush bool `json:"scan_on_push"`
}
