// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSecurityhubFindingAggregator(name string, args SecurityhubFindingAggregatorArgs) *SecurityhubFindingAggregator {
	return &SecurityhubFindingAggregator{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityhubFindingAggregator)(nil)

type SecurityhubFindingAggregator struct {
	Name  string
	Args  SecurityhubFindingAggregatorArgs
	state *securityhubFindingAggregatorState
}

func (sfa *SecurityhubFindingAggregator) Type() string {
	return "aws_securityhub_finding_aggregator"
}

func (sfa *SecurityhubFindingAggregator) LocalName() string {
	return sfa.Name
}

func (sfa *SecurityhubFindingAggregator) Configuration() interface{} {
	return sfa.Args
}

func (sfa *SecurityhubFindingAggregator) Attributes() securityhubFindingAggregatorAttributes {
	return securityhubFindingAggregatorAttributes{ref: terra.ReferenceResource(sfa)}
}

func (sfa *SecurityhubFindingAggregator) ImportState(av io.Reader) error {
	sfa.state = &securityhubFindingAggregatorState{}
	if err := json.NewDecoder(av).Decode(sfa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sfa.Type(), sfa.LocalName(), err)
	}
	return nil
}

func (sfa *SecurityhubFindingAggregator) State() (*securityhubFindingAggregatorState, bool) {
	return sfa.state, sfa.state != nil
}

func (sfa *SecurityhubFindingAggregator) StateMust() *securityhubFindingAggregatorState {
	if sfa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sfa.Type(), sfa.LocalName()))
	}
	return sfa.state
}

func (sfa *SecurityhubFindingAggregator) DependOn() terra.Reference {
	return terra.ReferenceResource(sfa)
}

type SecurityhubFindingAggregatorArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LinkingMode: string, required
	LinkingMode terra.StringValue `hcl:"linking_mode,attr" validate:"required"`
	// SpecifiedRegions: set of string, optional
	SpecifiedRegions terra.SetValue[terra.StringValue] `hcl:"specified_regions,attr"`
	// DependsOn contains resources that SecurityhubFindingAggregator depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type securityhubFindingAggregatorAttributes struct {
	ref terra.Reference
}

func (sfa securityhubFindingAggregatorAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sfa.ref.Append("id"))
}

func (sfa securityhubFindingAggregatorAttributes) LinkingMode() terra.StringValue {
	return terra.ReferenceString(sfa.ref.Append("linking_mode"))
}

func (sfa securityhubFindingAggregatorAttributes) SpecifiedRegions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sfa.ref.Append("specified_regions"))
}

type securityhubFindingAggregatorState struct {
	Id               string   `json:"id"`
	LinkingMode      string   `json:"linking_mode"`
	SpecifiedRegions []string `json:"specified_regions"`
}
