// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package databatchschedulingpolicy

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type FairSharePolicy struct {
	// ShareDistribution: min=0
	ShareDistribution []ShareDistribution `hcl:"share_distribution,block" validate:"min=0"`
}

type ShareDistribution struct{}

type FairSharePolicyAttributes struct {
	ref terra.Reference
}

func (fsp FairSharePolicyAttributes) InternalRef() terra.Reference {
	return fsp.ref
}

func (fsp FairSharePolicyAttributes) InternalWithRef(ref terra.Reference) FairSharePolicyAttributes {
	return FairSharePolicyAttributes{ref: ref}
}

func (fsp FairSharePolicyAttributes) InternalTokens() hclwrite.Tokens {
	return fsp.ref.InternalTokens()
}

func (fsp FairSharePolicyAttributes) ComputeReservation() terra.NumberValue {
	return terra.ReferenceAsNumber(fsp.ref.Append("compute_reservation"))
}

func (fsp FairSharePolicyAttributes) ShareDecaySeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(fsp.ref.Append("share_decay_seconds"))
}

func (fsp FairSharePolicyAttributes) ShareDistribution() terra.SetValue[ShareDistributionAttributes] {
	return terra.ReferenceAsSet[ShareDistributionAttributes](fsp.ref.Append("share_distribution"))
}

type ShareDistributionAttributes struct {
	ref terra.Reference
}

func (sd ShareDistributionAttributes) InternalRef() terra.Reference {
	return sd.ref
}

func (sd ShareDistributionAttributes) InternalWithRef(ref terra.Reference) ShareDistributionAttributes {
	return ShareDistributionAttributes{ref: ref}
}

func (sd ShareDistributionAttributes) InternalTokens() hclwrite.Tokens {
	return sd.ref.InternalTokens()
}

func (sd ShareDistributionAttributes) ShareIdentifier() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("share_identifier"))
}

func (sd ShareDistributionAttributes) WeightFactor() terra.NumberValue {
	return terra.ReferenceAsNumber(sd.ref.Append("weight_factor"))
}

type FairSharePolicyState struct {
	ComputeReservation float64                  `json:"compute_reservation"`
	ShareDecaySeconds  float64                  `json:"share_decay_seconds"`
	ShareDistribution  []ShareDistributionState `json:"share_distribution"`
}

type ShareDistributionState struct {
	ShareIdentifier string  `json:"share_identifier"`
	WeightFactor    float64 `json:"weight_factor"`
}
