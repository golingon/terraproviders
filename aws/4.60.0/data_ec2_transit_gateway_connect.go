// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2transitgatewayconnect "github.com/golingon/terraproviders/aws/4.60.0/dataec2transitgatewayconnect"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEc2TransitGatewayConnect(name string, args DataEc2TransitGatewayConnectArgs) *DataEc2TransitGatewayConnect {
	return &DataEc2TransitGatewayConnect{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2TransitGatewayConnect)(nil)

type DataEc2TransitGatewayConnect struct {
	Name string
	Args DataEc2TransitGatewayConnectArgs
}

func (etgc *DataEc2TransitGatewayConnect) DataSource() string {
	return "aws_ec2_transit_gateway_connect"
}

func (etgc *DataEc2TransitGatewayConnect) LocalName() string {
	return etgc.Name
}

func (etgc *DataEc2TransitGatewayConnect) Configuration() interface{} {
	return etgc.Args
}

func (etgc *DataEc2TransitGatewayConnect) Attributes() dataEc2TransitGatewayConnectAttributes {
	return dataEc2TransitGatewayConnectAttributes{ref: terra.ReferenceDataResource(etgc)}
}

type DataEc2TransitGatewayConnectArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TransitGatewayConnectId: string, optional
	TransitGatewayConnectId terra.StringValue `hcl:"transit_gateway_connect_id,attr"`
	// Filter: min=0
	Filter []dataec2transitgatewayconnect.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataec2transitgatewayconnect.Timeouts `hcl:"timeouts,block"`
}
type dataEc2TransitGatewayConnectAttributes struct {
	ref terra.Reference
}

func (etgc dataEc2TransitGatewayConnectAttributes) Id() terra.StringValue {
	return terra.ReferenceString(etgc.ref.Append("id"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(etgc.ref.Append("protocol"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](etgc.ref.Append("tags"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) TransitGatewayConnectId() terra.StringValue {
	return terra.ReferenceString(etgc.ref.Append("transit_gateway_connect_id"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceString(etgc.ref.Append("transit_gateway_id"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) TransportAttachmentId() terra.StringValue {
	return terra.ReferenceString(etgc.ref.Append("transport_attachment_id"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) Filter() terra.SetValue[dataec2transitgatewayconnect.FilterAttributes] {
	return terra.ReferenceSet[dataec2transitgatewayconnect.FilterAttributes](etgc.ref.Append("filter"))
}

func (etgc dataEc2TransitGatewayConnectAttributes) Timeouts() dataec2transitgatewayconnect.TimeoutsAttributes {
	return terra.ReferenceSingle[dataec2transitgatewayconnect.TimeoutsAttributes](etgc.ref.Append("timeouts"))
}
