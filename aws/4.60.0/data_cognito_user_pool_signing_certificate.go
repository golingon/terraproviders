// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataCognitoUserPoolSigningCertificate(name string, args DataCognitoUserPoolSigningCertificateArgs) *DataCognitoUserPoolSigningCertificate {
	return &DataCognitoUserPoolSigningCertificate{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCognitoUserPoolSigningCertificate)(nil)

type DataCognitoUserPoolSigningCertificate struct {
	Name string
	Args DataCognitoUserPoolSigningCertificateArgs
}

func (cupsc *DataCognitoUserPoolSigningCertificate) DataSource() string {
	return "aws_cognito_user_pool_signing_certificate"
}

func (cupsc *DataCognitoUserPoolSigningCertificate) LocalName() string {
	return cupsc.Name
}

func (cupsc *DataCognitoUserPoolSigningCertificate) Configuration() interface{} {
	return cupsc.Args
}

func (cupsc *DataCognitoUserPoolSigningCertificate) Attributes() dataCognitoUserPoolSigningCertificateAttributes {
	return dataCognitoUserPoolSigningCertificateAttributes{ref: terra.ReferenceDataResource(cupsc)}
}

type DataCognitoUserPoolSigningCertificateArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
}
type dataCognitoUserPoolSigningCertificateAttributes struct {
	ref terra.Reference
}

func (cupsc dataCognitoUserPoolSigningCertificateAttributes) Certificate() terra.StringValue {
	return terra.ReferenceString(cupsc.ref.Append("certificate"))
}

func (cupsc dataCognitoUserPoolSigningCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cupsc.ref.Append("id"))
}

func (cupsc dataCognitoUserPoolSigningCertificateAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceString(cupsc.ref.Append("user_pool_id"))
}
