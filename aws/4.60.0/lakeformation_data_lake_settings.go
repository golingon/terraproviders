// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	lakeformationdatalakesettings "github.com/golingon/terraproviders/aws/4.60.0/lakeformationdatalakesettings"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLakeformationDataLakeSettings(name string, args LakeformationDataLakeSettingsArgs) *LakeformationDataLakeSettings {
	return &LakeformationDataLakeSettings{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LakeformationDataLakeSettings)(nil)

type LakeformationDataLakeSettings struct {
	Name  string
	Args  LakeformationDataLakeSettingsArgs
	state *lakeformationDataLakeSettingsState
}

func (ldls *LakeformationDataLakeSettings) Type() string {
	return "aws_lakeformation_data_lake_settings"
}

func (ldls *LakeformationDataLakeSettings) LocalName() string {
	return ldls.Name
}

func (ldls *LakeformationDataLakeSettings) Configuration() interface{} {
	return ldls.Args
}

func (ldls *LakeformationDataLakeSettings) Attributes() lakeformationDataLakeSettingsAttributes {
	return lakeformationDataLakeSettingsAttributes{ref: terra.ReferenceResource(ldls)}
}

func (ldls *LakeformationDataLakeSettings) ImportState(av io.Reader) error {
	ldls.state = &lakeformationDataLakeSettingsState{}
	if err := json.NewDecoder(av).Decode(ldls.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ldls.Type(), ldls.LocalName(), err)
	}
	return nil
}

func (ldls *LakeformationDataLakeSettings) State() (*lakeformationDataLakeSettingsState, bool) {
	return ldls.state, ldls.state != nil
}

func (ldls *LakeformationDataLakeSettings) StateMust() *lakeformationDataLakeSettingsState {
	if ldls.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ldls.Type(), ldls.LocalName()))
	}
	return ldls.state
}

func (ldls *LakeformationDataLakeSettings) DependOn() terra.Reference {
	return terra.ReferenceResource(ldls)
}

type LakeformationDataLakeSettingsArgs struct {
	// Admins: set of string, optional
	Admins terra.SetValue[terra.StringValue] `hcl:"admins,attr"`
	// CatalogId: string, optional
	CatalogId terra.StringValue `hcl:"catalog_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// TrustedResourceOwners: list of string, optional
	TrustedResourceOwners terra.ListValue[terra.StringValue] `hcl:"trusted_resource_owners,attr"`
	// CreateDatabaseDefaultPermissions: min=0,max=3
	CreateDatabaseDefaultPermissions []lakeformationdatalakesettings.CreateDatabaseDefaultPermissions `hcl:"create_database_default_permissions,block" validate:"min=0,max=3"`
	// CreateTableDefaultPermissions: min=0,max=3
	CreateTableDefaultPermissions []lakeformationdatalakesettings.CreateTableDefaultPermissions `hcl:"create_table_default_permissions,block" validate:"min=0,max=3"`
	// DependsOn contains resources that LakeformationDataLakeSettings depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lakeformationDataLakeSettingsAttributes struct {
	ref terra.Reference
}

func (ldls lakeformationDataLakeSettingsAttributes) Admins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ldls.ref.Append("admins"))
}

func (ldls lakeformationDataLakeSettingsAttributes) CatalogId() terra.StringValue {
	return terra.ReferenceString(ldls.ref.Append("catalog_id"))
}

func (ldls lakeformationDataLakeSettingsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ldls.ref.Append("id"))
}

func (ldls lakeformationDataLakeSettingsAttributes) TrustedResourceOwners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ldls.ref.Append("trusted_resource_owners"))
}

func (ldls lakeformationDataLakeSettingsAttributes) CreateDatabaseDefaultPermissions() terra.ListValue[lakeformationdatalakesettings.CreateDatabaseDefaultPermissionsAttributes] {
	return terra.ReferenceList[lakeformationdatalakesettings.CreateDatabaseDefaultPermissionsAttributes](ldls.ref.Append("create_database_default_permissions"))
}

func (ldls lakeformationDataLakeSettingsAttributes) CreateTableDefaultPermissions() terra.ListValue[lakeformationdatalakesettings.CreateTableDefaultPermissionsAttributes] {
	return terra.ReferenceList[lakeformationdatalakesettings.CreateTableDefaultPermissionsAttributes](ldls.ref.Append("create_table_default_permissions"))
}

type lakeformationDataLakeSettingsState struct {
	Admins                           []string                                                              `json:"admins"`
	CatalogId                        string                                                                `json:"catalog_id"`
	Id                               string                                                                `json:"id"`
	TrustedResourceOwners            []string                                                              `json:"trusted_resource_owners"`
	CreateDatabaseDefaultPermissions []lakeformationdatalakesettings.CreateDatabaseDefaultPermissionsState `json:"create_database_default_permissions"`
	CreateTableDefaultPermissions    []lakeformationdatalakesettings.CreateTableDefaultPermissionsState    `json:"create_table_default_permissions"`
}
