// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datavpcendpointservice "github.com/golingon/terraproviders/aws/4.60.0/datavpcendpointservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataVpcEndpointService(name string, args DataVpcEndpointServiceArgs) *DataVpcEndpointService {
	return &DataVpcEndpointService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVpcEndpointService)(nil)

type DataVpcEndpointService struct {
	Name string
	Args DataVpcEndpointServiceArgs
}

func (ves *DataVpcEndpointService) DataSource() string {
	return "aws_vpc_endpoint_service"
}

func (ves *DataVpcEndpointService) LocalName() string {
	return ves.Name
}

func (ves *DataVpcEndpointService) Configuration() interface{} {
	return ves.Args
}

func (ves *DataVpcEndpointService) Attributes() dataVpcEndpointServiceAttributes {
	return dataVpcEndpointServiceAttributes{ref: terra.ReferenceDataResource(ves)}
}

type DataVpcEndpointServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Service: string, optional
	Service terra.StringValue `hcl:"service,attr"`
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// ServiceType: string, optional
	ServiceType terra.StringValue `hcl:"service_type,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []datavpcendpointservice.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datavpcendpointservice.Timeouts `hcl:"timeouts,block"`
}
type dataVpcEndpointServiceAttributes struct {
	ref terra.Reference
}

func (ves dataVpcEndpointServiceAttributes) AcceptanceRequired() terra.BoolValue {
	return terra.ReferenceBool(ves.ref.Append("acceptance_required"))
}

func (ves dataVpcEndpointServiceAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("arn"))
}

func (ves dataVpcEndpointServiceAttributes) AvailabilityZones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ves.ref.Append("availability_zones"))
}

func (ves dataVpcEndpointServiceAttributes) BaseEndpointDnsNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ves.ref.Append("base_endpoint_dns_names"))
}

func (ves dataVpcEndpointServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("id"))
}

func (ves dataVpcEndpointServiceAttributes) ManagesVpcEndpoints() terra.BoolValue {
	return terra.ReferenceBool(ves.ref.Append("manages_vpc_endpoints"))
}

func (ves dataVpcEndpointServiceAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("owner"))
}

func (ves dataVpcEndpointServiceAttributes) PrivateDnsName() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("private_dns_name"))
}

func (ves dataVpcEndpointServiceAttributes) Service() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("service"))
}

func (ves dataVpcEndpointServiceAttributes) ServiceId() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("service_id"))
}

func (ves dataVpcEndpointServiceAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("service_name"))
}

func (ves dataVpcEndpointServiceAttributes) ServiceType() terra.StringValue {
	return terra.ReferenceString(ves.ref.Append("service_type"))
}

func (ves dataVpcEndpointServiceAttributes) SupportedIpAddressTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ves.ref.Append("supported_ip_address_types"))
}

func (ves dataVpcEndpointServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ves.ref.Append("tags"))
}

func (ves dataVpcEndpointServiceAttributes) VpcEndpointPolicySupported() terra.BoolValue {
	return terra.ReferenceBool(ves.ref.Append("vpc_endpoint_policy_supported"))
}

func (ves dataVpcEndpointServiceAttributes) Filter() terra.SetValue[datavpcendpointservice.FilterAttributes] {
	return terra.ReferenceSet[datavpcendpointservice.FilterAttributes](ves.ref.Append("filter"))
}

func (ves dataVpcEndpointServiceAttributes) Timeouts() datavpcendpointservice.TimeoutsAttributes {
	return terra.ReferenceSingle[datavpcendpointservice.TimeoutsAttributes](ves.ref.Append("timeouts"))
}
