// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2localgateway "github.com/golingon/terraproviders/aws/4.60.0/dataec2localgateway"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEc2LocalGateway(name string, args DataEc2LocalGatewayArgs) *DataEc2LocalGateway {
	return &DataEc2LocalGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2LocalGateway)(nil)

type DataEc2LocalGateway struct {
	Name string
	Args DataEc2LocalGatewayArgs
}

func (elg *DataEc2LocalGateway) DataSource() string {
	return "aws_ec2_local_gateway"
}

func (elg *DataEc2LocalGateway) LocalName() string {
	return elg.Name
}

func (elg *DataEc2LocalGateway) Configuration() interface{} {
	return elg.Args
}

func (elg *DataEc2LocalGateway) Attributes() dataEc2LocalGatewayAttributes {
	return dataEc2LocalGatewayAttributes{ref: terra.ReferenceDataResource(elg)}
}

type DataEc2LocalGatewayArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataec2localgateway.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataec2localgateway.Timeouts `hcl:"timeouts,block"`
}
type dataEc2LocalGatewayAttributes struct {
	ref terra.Reference
}

func (elg dataEc2LocalGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(elg.ref.Append("id"))
}

func (elg dataEc2LocalGatewayAttributes) OutpostArn() terra.StringValue {
	return terra.ReferenceString(elg.ref.Append("outpost_arn"))
}

func (elg dataEc2LocalGatewayAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(elg.ref.Append("owner_id"))
}

func (elg dataEc2LocalGatewayAttributes) State() terra.StringValue {
	return terra.ReferenceString(elg.ref.Append("state"))
}

func (elg dataEc2LocalGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](elg.ref.Append("tags"))
}

func (elg dataEc2LocalGatewayAttributes) Filter() terra.SetValue[dataec2localgateway.FilterAttributes] {
	return terra.ReferenceSet[dataec2localgateway.FilterAttributes](elg.ref.Append("filter"))
}

func (elg dataEc2LocalGatewayAttributes) Timeouts() dataec2localgateway.TimeoutsAttributes {
	return terra.ReferenceSingle[dataec2localgateway.TimeoutsAttributes](elg.ref.Append("timeouts"))
}
