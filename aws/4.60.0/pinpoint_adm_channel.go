// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPinpointAdmChannel(name string, args PinpointAdmChannelArgs) *PinpointAdmChannel {
	return &PinpointAdmChannel{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PinpointAdmChannel)(nil)

type PinpointAdmChannel struct {
	Name  string
	Args  PinpointAdmChannelArgs
	state *pinpointAdmChannelState
}

func (pac *PinpointAdmChannel) Type() string {
	return "aws_pinpoint_adm_channel"
}

func (pac *PinpointAdmChannel) LocalName() string {
	return pac.Name
}

func (pac *PinpointAdmChannel) Configuration() interface{} {
	return pac.Args
}

func (pac *PinpointAdmChannel) Attributes() pinpointAdmChannelAttributes {
	return pinpointAdmChannelAttributes{ref: terra.ReferenceResource(pac)}
}

func (pac *PinpointAdmChannel) ImportState(av io.Reader) error {
	pac.state = &pinpointAdmChannelState{}
	if err := json.NewDecoder(av).Decode(pac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pac.Type(), pac.LocalName(), err)
	}
	return nil
}

func (pac *PinpointAdmChannel) State() (*pinpointAdmChannelState, bool) {
	return pac.state, pac.state != nil
}

func (pac *PinpointAdmChannel) StateMust() *pinpointAdmChannelState {
	if pac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pac.Type(), pac.LocalName()))
	}
	return pac.state
}

func (pac *PinpointAdmChannel) DependOn() terra.Reference {
	return terra.ReferenceResource(pac)
}

type PinpointAdmChannelArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that PinpointAdmChannel depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type pinpointAdmChannelAttributes struct {
	ref terra.Reference
}

func (pac pinpointAdmChannelAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceString(pac.ref.Append("application_id"))
}

func (pac pinpointAdmChannelAttributes) ClientId() terra.StringValue {
	return terra.ReferenceString(pac.ref.Append("client_id"))
}

func (pac pinpointAdmChannelAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceString(pac.ref.Append("client_secret"))
}

func (pac pinpointAdmChannelAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(pac.ref.Append("enabled"))
}

func (pac pinpointAdmChannelAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pac.ref.Append("id"))
}

type pinpointAdmChannelState struct {
	ApplicationId string `json:"application_id"`
	ClientId      string `json:"client_id"`
	ClientSecret  string `json:"client_secret"`
	Enabled       bool   `json:"enabled"`
	Id            string `json:"id"`
}
