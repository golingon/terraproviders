// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataRedshiftOrderableCluster(name string, args DataRedshiftOrderableClusterArgs) *DataRedshiftOrderableCluster {
	return &DataRedshiftOrderableCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedshiftOrderableCluster)(nil)

type DataRedshiftOrderableCluster struct {
	Name string
	Args DataRedshiftOrderableClusterArgs
}

func (roc *DataRedshiftOrderableCluster) DataSource() string {
	return "aws_redshift_orderable_cluster"
}

func (roc *DataRedshiftOrderableCluster) LocalName() string {
	return roc.Name
}

func (roc *DataRedshiftOrderableCluster) Configuration() interface{} {
	return roc.Args
}

func (roc *DataRedshiftOrderableCluster) Attributes() dataRedshiftOrderableClusterAttributes {
	return dataRedshiftOrderableClusterAttributes{ref: terra.ReferenceDataResource(roc)}
}

type DataRedshiftOrderableClusterArgs struct {
	// ClusterType: string, optional
	ClusterType terra.StringValue `hcl:"cluster_type,attr"`
	// ClusterVersion: string, optional
	ClusterVersion terra.StringValue `hcl:"cluster_version,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NodeType: string, optional
	NodeType terra.StringValue `hcl:"node_type,attr"`
	// PreferredNodeTypes: list of string, optional
	PreferredNodeTypes terra.ListValue[terra.StringValue] `hcl:"preferred_node_types,attr"`
}
type dataRedshiftOrderableClusterAttributes struct {
	ref terra.Reference
}

func (roc dataRedshiftOrderableClusterAttributes) AvailabilityZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](roc.ref.Append("availability_zones"))
}

func (roc dataRedshiftOrderableClusterAttributes) ClusterType() terra.StringValue {
	return terra.ReferenceString(roc.ref.Append("cluster_type"))
}

func (roc dataRedshiftOrderableClusterAttributes) ClusterVersion() terra.StringValue {
	return terra.ReferenceString(roc.ref.Append("cluster_version"))
}

func (roc dataRedshiftOrderableClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(roc.ref.Append("id"))
}

func (roc dataRedshiftOrderableClusterAttributes) NodeType() terra.StringValue {
	return terra.ReferenceString(roc.ref.Append("node_type"))
}

func (roc dataRedshiftOrderableClusterAttributes) PreferredNodeTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](roc.ref.Append("preferred_node_types"))
}
