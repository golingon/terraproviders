// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datalocationmap "github.com/golingon/terraproviders/aws/4.60.0/datalocationmap"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataLocationMap(name string, args DataLocationMapArgs) *DataLocationMap {
	return &DataLocationMap{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLocationMap)(nil)

type DataLocationMap struct {
	Name string
	Args DataLocationMapArgs
}

func (lm *DataLocationMap) DataSource() string {
	return "aws_location_map"
}

func (lm *DataLocationMap) LocalName() string {
	return lm.Name
}

func (lm *DataLocationMap) Configuration() interface{} {
	return lm.Args
}

func (lm *DataLocationMap) Attributes() dataLocationMapAttributes {
	return dataLocationMapAttributes{ref: terra.ReferenceDataResource(lm)}
}

type DataLocationMapArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MapName: string, required
	MapName terra.StringValue `hcl:"map_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Configuration: min=0
	Configuration []datalocationmap.Configuration `hcl:"configuration,block" validate:"min=0"`
}
type dataLocationMapAttributes struct {
	ref terra.Reference
}

func (lm dataLocationMapAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceString(lm.ref.Append("create_time"))
}

func (lm dataLocationMapAttributes) Description() terra.StringValue {
	return terra.ReferenceString(lm.ref.Append("description"))
}

func (lm dataLocationMapAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lm.ref.Append("id"))
}

func (lm dataLocationMapAttributes) MapArn() terra.StringValue {
	return terra.ReferenceString(lm.ref.Append("map_arn"))
}

func (lm dataLocationMapAttributes) MapName() terra.StringValue {
	return terra.ReferenceString(lm.ref.Append("map_name"))
}

func (lm dataLocationMapAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](lm.ref.Append("tags"))
}

func (lm dataLocationMapAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceString(lm.ref.Append("update_time"))
}

func (lm dataLocationMapAttributes) Configuration() terra.ListValue[datalocationmap.ConfigurationAttributes] {
	return terra.ReferenceList[datalocationmap.ConfigurationAttributes](lm.ref.Append("configuration"))
}
