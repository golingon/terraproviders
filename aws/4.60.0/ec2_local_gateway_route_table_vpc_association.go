// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewEc2LocalGatewayRouteTableVpcAssociation(name string, args Ec2LocalGatewayRouteTableVpcAssociationArgs) *Ec2LocalGatewayRouteTableVpcAssociation {
	return &Ec2LocalGatewayRouteTableVpcAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Ec2LocalGatewayRouteTableVpcAssociation)(nil)

type Ec2LocalGatewayRouteTableVpcAssociation struct {
	Name  string
	Args  Ec2LocalGatewayRouteTableVpcAssociationArgs
	state *ec2LocalGatewayRouteTableVpcAssociationState
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) Type() string {
	return "aws_ec2_local_gateway_route_table_vpc_association"
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) LocalName() string {
	return elgrtva.Name
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) Configuration() interface{} {
	return elgrtva.Args
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) Attributes() ec2LocalGatewayRouteTableVpcAssociationAttributes {
	return ec2LocalGatewayRouteTableVpcAssociationAttributes{ref: terra.ReferenceResource(elgrtva)}
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) ImportState(av io.Reader) error {
	elgrtva.state = &ec2LocalGatewayRouteTableVpcAssociationState{}
	if err := json.NewDecoder(av).Decode(elgrtva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", elgrtva.Type(), elgrtva.LocalName(), err)
	}
	return nil
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) State() (*ec2LocalGatewayRouteTableVpcAssociationState, bool) {
	return elgrtva.state, elgrtva.state != nil
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) StateMust() *ec2LocalGatewayRouteTableVpcAssociationState {
	if elgrtva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", elgrtva.Type(), elgrtva.LocalName()))
	}
	return elgrtva.state
}

func (elgrtva *Ec2LocalGatewayRouteTableVpcAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(elgrtva)
}

type Ec2LocalGatewayRouteTableVpcAssociationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalGatewayRouteTableId: string, required
	LocalGatewayRouteTableId terra.StringValue `hcl:"local_gateway_route_table_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VpcId: string, required
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
	// DependsOn contains resources that Ec2LocalGatewayRouteTableVpcAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ec2LocalGatewayRouteTableVpcAssociationAttributes struct {
	ref terra.Reference
}

func (elgrtva ec2LocalGatewayRouteTableVpcAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(elgrtva.ref.Append("id"))
}

func (elgrtva ec2LocalGatewayRouteTableVpcAssociationAttributes) LocalGatewayId() terra.StringValue {
	return terra.ReferenceString(elgrtva.ref.Append("local_gateway_id"))
}

func (elgrtva ec2LocalGatewayRouteTableVpcAssociationAttributes) LocalGatewayRouteTableId() terra.StringValue {
	return terra.ReferenceString(elgrtva.ref.Append("local_gateway_route_table_id"))
}

func (elgrtva ec2LocalGatewayRouteTableVpcAssociationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](elgrtva.ref.Append("tags"))
}

func (elgrtva ec2LocalGatewayRouteTableVpcAssociationAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](elgrtva.ref.Append("tags_all"))
}

func (elgrtva ec2LocalGatewayRouteTableVpcAssociationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(elgrtva.ref.Append("vpc_id"))
}

type ec2LocalGatewayRouteTableVpcAssociationState struct {
	Id                       string            `json:"id"`
	LocalGatewayId           string            `json:"local_gateway_id"`
	LocalGatewayRouteTableId string            `json:"local_gateway_route_table_id"`
	Tags                     map[string]string `json:"tags"`
	TagsAll                  map[string]string `json:"tags_all"`
	VpcId                    string            `json:"vpc_id"`
}
