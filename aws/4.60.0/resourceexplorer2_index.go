// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	resourceexplorer2index "github.com/golingon/terraproviders/aws/4.60.0/resourceexplorer2index"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewResourceexplorer2Index(name string, args Resourceexplorer2IndexArgs) *Resourceexplorer2Index {
	return &Resourceexplorer2Index{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resourceexplorer2Index)(nil)

type Resourceexplorer2Index struct {
	Name  string
	Args  Resourceexplorer2IndexArgs
	state *resourceexplorer2IndexState
}

func (ri *Resourceexplorer2Index) Type() string {
	return "aws_resourceexplorer2_index"
}

func (ri *Resourceexplorer2Index) LocalName() string {
	return ri.Name
}

func (ri *Resourceexplorer2Index) Configuration() interface{} {
	return ri.Args
}

func (ri *Resourceexplorer2Index) Attributes() resourceexplorer2IndexAttributes {
	return resourceexplorer2IndexAttributes{ref: terra.ReferenceResource(ri)}
}

func (ri *Resourceexplorer2Index) ImportState(av io.Reader) error {
	ri.state = &resourceexplorer2IndexState{}
	if err := json.NewDecoder(av).Decode(ri.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ri.Type(), ri.LocalName(), err)
	}
	return nil
}

func (ri *Resourceexplorer2Index) State() (*resourceexplorer2IndexState, bool) {
	return ri.state, ri.state != nil
}

func (ri *Resourceexplorer2Index) StateMust() *resourceexplorer2IndexState {
	if ri.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ri.Type(), ri.LocalName()))
	}
	return ri.state
}

func (ri *Resourceexplorer2Index) DependOn() terra.Reference {
	return terra.ReferenceResource(ri)
}

type Resourceexplorer2IndexArgs struct {
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *resourceexplorer2index.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that Resourceexplorer2Index depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type resourceexplorer2IndexAttributes struct {
	ref terra.Reference
}

func (ri resourceexplorer2IndexAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("arn"))
}

func (ri resourceexplorer2IndexAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("id"))
}

func (ri resourceexplorer2IndexAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ri.ref.Append("tags"))
}

func (ri resourceexplorer2IndexAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ri.ref.Append("tags_all"))
}

func (ri resourceexplorer2IndexAttributes) Type() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("type"))
}

func (ri resourceexplorer2IndexAttributes) Timeouts() resourceexplorer2index.TimeoutsAttributes {
	return terra.ReferenceSingle[resourceexplorer2index.TimeoutsAttributes](ri.ref.Append("timeouts"))
}

type resourceexplorer2IndexState struct {
	Arn      string                                `json:"arn"`
	Id       string                                `json:"id"`
	Tags     map[string]string                     `json:"tags"`
	TagsAll  map[string]string                     `json:"tags_all"`
	Type     string                                `json:"type"`
	Timeouts *resourceexplorer2index.TimeoutsState `json:"timeouts"`
}
