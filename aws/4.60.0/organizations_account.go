// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewOrganizationsAccount(name string, args OrganizationsAccountArgs) *OrganizationsAccount {
	return &OrganizationsAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OrganizationsAccount)(nil)

type OrganizationsAccount struct {
	Name  string
	Args  OrganizationsAccountArgs
	state *organizationsAccountState
}

func (oa *OrganizationsAccount) Type() string {
	return "aws_organizations_account"
}

func (oa *OrganizationsAccount) LocalName() string {
	return oa.Name
}

func (oa *OrganizationsAccount) Configuration() interface{} {
	return oa.Args
}

func (oa *OrganizationsAccount) Attributes() organizationsAccountAttributes {
	return organizationsAccountAttributes{ref: terra.ReferenceResource(oa)}
}

func (oa *OrganizationsAccount) ImportState(av io.Reader) error {
	oa.state = &organizationsAccountState{}
	if err := json.NewDecoder(av).Decode(oa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", oa.Type(), oa.LocalName(), err)
	}
	return nil
}

func (oa *OrganizationsAccount) State() (*organizationsAccountState, bool) {
	return oa.state, oa.state != nil
}

func (oa *OrganizationsAccount) StateMust() *organizationsAccountState {
	if oa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", oa.Type(), oa.LocalName()))
	}
	return oa.state
}

func (oa *OrganizationsAccount) DependOn() terra.Reference {
	return terra.ReferenceResource(oa)
}

type OrganizationsAccountArgs struct {
	// CloseOnDeletion: bool, optional
	CloseOnDeletion terra.BoolValue `hcl:"close_on_deletion,attr"`
	// CreateGovcloud: bool, optional
	CreateGovcloud terra.BoolValue `hcl:"create_govcloud,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
	// IamUserAccessToBilling: string, optional
	IamUserAccessToBilling terra.StringValue `hcl:"iam_user_access_to_billing,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ParentId: string, optional
	ParentId terra.StringValue `hcl:"parent_id,attr"`
	// RoleName: string, optional
	RoleName terra.StringValue `hcl:"role_name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// DependsOn contains resources that OrganizationsAccount depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type organizationsAccountAttributes struct {
	ref terra.Reference
}

func (oa organizationsAccountAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("arn"))
}

func (oa organizationsAccountAttributes) CloseOnDeletion() terra.BoolValue {
	return terra.ReferenceBool(oa.ref.Append("close_on_deletion"))
}

func (oa organizationsAccountAttributes) CreateGovcloud() terra.BoolValue {
	return terra.ReferenceBool(oa.ref.Append("create_govcloud"))
}

func (oa organizationsAccountAttributes) Email() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("email"))
}

func (oa organizationsAccountAttributes) GovcloudId() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("govcloud_id"))
}

func (oa organizationsAccountAttributes) IamUserAccessToBilling() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("iam_user_access_to_billing"))
}

func (oa organizationsAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("id"))
}

func (oa organizationsAccountAttributes) JoinedMethod() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("joined_method"))
}

func (oa organizationsAccountAttributes) JoinedTimestamp() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("joined_timestamp"))
}

func (oa organizationsAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("name"))
}

func (oa organizationsAccountAttributes) ParentId() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("parent_id"))
}

func (oa organizationsAccountAttributes) RoleName() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("role_name"))
}

func (oa organizationsAccountAttributes) Status() terra.StringValue {
	return terra.ReferenceString(oa.ref.Append("status"))
}

func (oa organizationsAccountAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](oa.ref.Append("tags"))
}

func (oa organizationsAccountAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](oa.ref.Append("tags_all"))
}

type organizationsAccountState struct {
	Arn                    string            `json:"arn"`
	CloseOnDeletion        bool              `json:"close_on_deletion"`
	CreateGovcloud         bool              `json:"create_govcloud"`
	Email                  string            `json:"email"`
	GovcloudId             string            `json:"govcloud_id"`
	IamUserAccessToBilling string            `json:"iam_user_access_to_billing"`
	Id                     string            `json:"id"`
	JoinedMethod           string            `json:"joined_method"`
	JoinedTimestamp        string            `json:"joined_timestamp"`
	Name                   string            `json:"name"`
	ParentId               string            `json:"parent_id"`
	RoleName               string            `json:"role_name"`
	Status                 string            `json:"status"`
	Tags                   map[string]string `json:"tags"`
	TagsAll                map[string]string `json:"tags_all"`
}
