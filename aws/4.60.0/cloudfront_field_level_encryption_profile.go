// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	cloudfrontfieldlevelencryptionprofile "github.com/golingon/terraproviders/aws/4.60.0/cloudfrontfieldlevelencryptionprofile"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCloudfrontFieldLevelEncryptionProfile(name string, args CloudfrontFieldLevelEncryptionProfileArgs) *CloudfrontFieldLevelEncryptionProfile {
	return &CloudfrontFieldLevelEncryptionProfile{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudfrontFieldLevelEncryptionProfile)(nil)

type CloudfrontFieldLevelEncryptionProfile struct {
	Name  string
	Args  CloudfrontFieldLevelEncryptionProfileArgs
	state *cloudfrontFieldLevelEncryptionProfileState
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) Type() string {
	return "aws_cloudfront_field_level_encryption_profile"
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) LocalName() string {
	return cflep.Name
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) Configuration() interface{} {
	return cflep.Args
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) Attributes() cloudfrontFieldLevelEncryptionProfileAttributes {
	return cloudfrontFieldLevelEncryptionProfileAttributes{ref: terra.ReferenceResource(cflep)}
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) ImportState(av io.Reader) error {
	cflep.state = &cloudfrontFieldLevelEncryptionProfileState{}
	if err := json.NewDecoder(av).Decode(cflep.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cflep.Type(), cflep.LocalName(), err)
	}
	return nil
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) State() (*cloudfrontFieldLevelEncryptionProfileState, bool) {
	return cflep.state, cflep.state != nil
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) StateMust() *cloudfrontFieldLevelEncryptionProfileState {
	if cflep.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cflep.Type(), cflep.LocalName()))
	}
	return cflep.state
}

func (cflep *CloudfrontFieldLevelEncryptionProfile) DependOn() terra.Reference {
	return terra.ReferenceResource(cflep)
}

type CloudfrontFieldLevelEncryptionProfileArgs struct {
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// EncryptionEntities: required
	EncryptionEntities *cloudfrontfieldlevelencryptionprofile.EncryptionEntities `hcl:"encryption_entities,block" validate:"required"`
	// DependsOn contains resources that CloudfrontFieldLevelEncryptionProfile depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cloudfrontFieldLevelEncryptionProfileAttributes struct {
	ref terra.Reference
}

func (cflep cloudfrontFieldLevelEncryptionProfileAttributes) CallerReference() terra.StringValue {
	return terra.ReferenceString(cflep.ref.Append("caller_reference"))
}

func (cflep cloudfrontFieldLevelEncryptionProfileAttributes) Comment() terra.StringValue {
	return terra.ReferenceString(cflep.ref.Append("comment"))
}

func (cflep cloudfrontFieldLevelEncryptionProfileAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(cflep.ref.Append("etag"))
}

func (cflep cloudfrontFieldLevelEncryptionProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cflep.ref.Append("id"))
}

func (cflep cloudfrontFieldLevelEncryptionProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cflep.ref.Append("name"))
}

func (cflep cloudfrontFieldLevelEncryptionProfileAttributes) EncryptionEntities() terra.ListValue[cloudfrontfieldlevelencryptionprofile.EncryptionEntitiesAttributes] {
	return terra.ReferenceList[cloudfrontfieldlevelencryptionprofile.EncryptionEntitiesAttributes](cflep.ref.Append("encryption_entities"))
}

type cloudfrontFieldLevelEncryptionProfileState struct {
	CallerReference    string                                                          `json:"caller_reference"`
	Comment            string                                                          `json:"comment"`
	Etag               string                                                          `json:"etag"`
	Id                 string                                                          `json:"id"`
	Name               string                                                          `json:"name"`
	EncryptionEntities []cloudfrontfieldlevelencryptionprofile.EncryptionEntitiesState `json:"encryption_entities"`
}
