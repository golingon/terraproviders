// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSecurityhubAccount(name string, args SecurityhubAccountArgs) *SecurityhubAccount {
	return &SecurityhubAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityhubAccount)(nil)

type SecurityhubAccount struct {
	Name  string
	Args  SecurityhubAccountArgs
	state *securityhubAccountState
}

func (sa *SecurityhubAccount) Type() string {
	return "aws_securityhub_account"
}

func (sa *SecurityhubAccount) LocalName() string {
	return sa.Name
}

func (sa *SecurityhubAccount) Configuration() interface{} {
	return sa.Args
}

func (sa *SecurityhubAccount) Attributes() securityhubAccountAttributes {
	return securityhubAccountAttributes{ref: terra.ReferenceResource(sa)}
}

func (sa *SecurityhubAccount) ImportState(av io.Reader) error {
	sa.state = &securityhubAccountState{}
	if err := json.NewDecoder(av).Decode(sa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sa.Type(), sa.LocalName(), err)
	}
	return nil
}

func (sa *SecurityhubAccount) State() (*securityhubAccountState, bool) {
	return sa.state, sa.state != nil
}

func (sa *SecurityhubAccount) StateMust() *securityhubAccountState {
	if sa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sa.Type(), sa.LocalName()))
	}
	return sa.state
}

func (sa *SecurityhubAccount) DependOn() terra.Reference {
	return terra.ReferenceResource(sa)
}

type SecurityhubAccountArgs struct {
	// EnableDefaultStandards: bool, optional
	EnableDefaultStandards terra.BoolValue `hcl:"enable_default_standards,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that SecurityhubAccount depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type securityhubAccountAttributes struct {
	ref terra.Reference
}

func (sa securityhubAccountAttributes) EnableDefaultStandards() terra.BoolValue {
	return terra.ReferenceBool(sa.ref.Append("enable_default_standards"))
}

func (sa securityhubAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sa.ref.Append("id"))
}

type securityhubAccountState struct {
	EnableDefaultStandards bool   `json:"enable_default_standards"`
	Id                     string `json:"id"`
}
