// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataebsvolumes "github.com/golingon/terraproviders/aws/4.60.0/dataebsvolumes"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEbsVolumes(name string, args DataEbsVolumesArgs) *DataEbsVolumes {
	return &DataEbsVolumes{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEbsVolumes)(nil)

type DataEbsVolumes struct {
	Name string
	Args DataEbsVolumesArgs
}

func (ev *DataEbsVolumes) DataSource() string {
	return "aws_ebs_volumes"
}

func (ev *DataEbsVolumes) LocalName() string {
	return ev.Name
}

func (ev *DataEbsVolumes) Configuration() interface{} {
	return ev.Args
}

func (ev *DataEbsVolumes) Attributes() dataEbsVolumesAttributes {
	return dataEbsVolumesAttributes{ref: terra.ReferenceDataResource(ev)}
}

type DataEbsVolumesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataebsvolumes.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataebsvolumes.Timeouts `hcl:"timeouts,block"`
}
type dataEbsVolumesAttributes struct {
	ref terra.Reference
}

func (ev dataEbsVolumesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ev.ref.Append("id"))
}

func (ev dataEbsVolumesAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ev.ref.Append("ids"))
}

func (ev dataEbsVolumesAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ev.ref.Append("tags"))
}

func (ev dataEbsVolumesAttributes) Filter() terra.SetValue[dataebsvolumes.FilterAttributes] {
	return terra.ReferenceSet[dataebsvolumes.FilterAttributes](ev.ref.Append("filter"))
}

func (ev dataEbsVolumesAttributes) Timeouts() dataebsvolumes.TimeoutsAttributes {
	return terra.ReferenceSingle[dataebsvolumes.TimeoutsAttributes](ev.ref.Append("timeouts"))
}
