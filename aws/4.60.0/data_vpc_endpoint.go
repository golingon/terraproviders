// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datavpcendpoint "github.com/golingon/terraproviders/aws/4.60.0/datavpcendpoint"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataVpcEndpoint(name string, args DataVpcEndpointArgs) *DataVpcEndpoint {
	return &DataVpcEndpoint{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVpcEndpoint)(nil)

type DataVpcEndpoint struct {
	Name string
	Args DataVpcEndpointArgs
}

func (ve *DataVpcEndpoint) DataSource() string {
	return "aws_vpc_endpoint"
}

func (ve *DataVpcEndpoint) LocalName() string {
	return ve.Name
}

func (ve *DataVpcEndpoint) Configuration() interface{} {
	return ve.Args
}

func (ve *DataVpcEndpoint) Attributes() dataVpcEndpointAttributes {
	return dataVpcEndpointAttributes{ref: terra.ReferenceDataResource(ve)}
}

type DataVpcEndpointArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VpcId: string, optional
	VpcId terra.StringValue `hcl:"vpc_id,attr"`
	// DnsEntry: min=0
	DnsEntry []datavpcendpoint.DnsEntry `hcl:"dns_entry,block" validate:"min=0"`
	// DnsOptions: min=0
	DnsOptions []datavpcendpoint.DnsOptions `hcl:"dns_options,block" validate:"min=0"`
	// Filter: min=0
	Filter []datavpcendpoint.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datavpcendpoint.Timeouts `hcl:"timeouts,block"`
}
type dataVpcEndpointAttributes struct {
	ref terra.Reference
}

func (ve dataVpcEndpointAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("arn"))
}

func (ve dataVpcEndpointAttributes) CidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ve.ref.Append("cidr_blocks"))
}

func (ve dataVpcEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("id"))
}

func (ve dataVpcEndpointAttributes) IpAddressType() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("ip_address_type"))
}

func (ve dataVpcEndpointAttributes) NetworkInterfaceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ve.ref.Append("network_interface_ids"))
}

func (ve dataVpcEndpointAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("owner_id"))
}

func (ve dataVpcEndpointAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("policy"))
}

func (ve dataVpcEndpointAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("prefix_list_id"))
}

func (ve dataVpcEndpointAttributes) PrivateDnsEnabled() terra.BoolValue {
	return terra.ReferenceBool(ve.ref.Append("private_dns_enabled"))
}

func (ve dataVpcEndpointAttributes) RequesterManaged() terra.BoolValue {
	return terra.ReferenceBool(ve.ref.Append("requester_managed"))
}

func (ve dataVpcEndpointAttributes) RouteTableIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ve.ref.Append("route_table_ids"))
}

func (ve dataVpcEndpointAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ve.ref.Append("security_group_ids"))
}

func (ve dataVpcEndpointAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("service_name"))
}

func (ve dataVpcEndpointAttributes) State() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("state"))
}

func (ve dataVpcEndpointAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ve.ref.Append("subnet_ids"))
}

func (ve dataVpcEndpointAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ve.ref.Append("tags"))
}

func (ve dataVpcEndpointAttributes) VpcEndpointType() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("vpc_endpoint_type"))
}

func (ve dataVpcEndpointAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(ve.ref.Append("vpc_id"))
}

func (ve dataVpcEndpointAttributes) DnsEntry() terra.ListValue[datavpcendpoint.DnsEntryAttributes] {
	return terra.ReferenceList[datavpcendpoint.DnsEntryAttributes](ve.ref.Append("dns_entry"))
}

func (ve dataVpcEndpointAttributes) DnsOptions() terra.ListValue[datavpcendpoint.DnsOptionsAttributes] {
	return terra.ReferenceList[datavpcendpoint.DnsOptionsAttributes](ve.ref.Append("dns_options"))
}

func (ve dataVpcEndpointAttributes) Filter() terra.SetValue[datavpcendpoint.FilterAttributes] {
	return terra.ReferenceSet[datavpcendpoint.FilterAttributes](ve.ref.Append("filter"))
}

func (ve dataVpcEndpointAttributes) Timeouts() datavpcendpoint.TimeoutsAttributes {
	return terra.ReferenceSingle[datavpcendpoint.TimeoutsAttributes](ve.ref.Append("timeouts"))
}
