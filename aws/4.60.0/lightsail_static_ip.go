// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailStaticIp(name string, args LightsailStaticIpArgs) *LightsailStaticIp {
	return &LightsailStaticIp{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailStaticIp)(nil)

type LightsailStaticIp struct {
	Name  string
	Args  LightsailStaticIpArgs
	state *lightsailStaticIpState
}

func (lsi *LightsailStaticIp) Type() string {
	return "aws_lightsail_static_ip"
}

func (lsi *LightsailStaticIp) LocalName() string {
	return lsi.Name
}

func (lsi *LightsailStaticIp) Configuration() interface{} {
	return lsi.Args
}

func (lsi *LightsailStaticIp) Attributes() lightsailStaticIpAttributes {
	return lightsailStaticIpAttributes{ref: terra.ReferenceResource(lsi)}
}

func (lsi *LightsailStaticIp) ImportState(av io.Reader) error {
	lsi.state = &lightsailStaticIpState{}
	if err := json.NewDecoder(av).Decode(lsi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lsi.Type(), lsi.LocalName(), err)
	}
	return nil
}

func (lsi *LightsailStaticIp) State() (*lightsailStaticIpState, bool) {
	return lsi.state, lsi.state != nil
}

func (lsi *LightsailStaticIp) StateMust() *lightsailStaticIpState {
	if lsi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lsi.Type(), lsi.LocalName()))
	}
	return lsi.state
}

func (lsi *LightsailStaticIp) DependOn() terra.Reference {
	return terra.ReferenceResource(lsi)
}

type LightsailStaticIpArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// DependsOn contains resources that LightsailStaticIp depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailStaticIpAttributes struct {
	ref terra.Reference
}

func (lsi lightsailStaticIpAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(lsi.ref.Append("arn"))
}

func (lsi lightsailStaticIpAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lsi.ref.Append("id"))
}

func (lsi lightsailStaticIpAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceString(lsi.ref.Append("ip_address"))
}

func (lsi lightsailStaticIpAttributes) Name() terra.StringValue {
	return terra.ReferenceString(lsi.ref.Append("name"))
}

func (lsi lightsailStaticIpAttributes) SupportCode() terra.StringValue {
	return terra.ReferenceString(lsi.ref.Append("support_code"))
}

type lightsailStaticIpState struct {
	Arn         string `json:"arn"`
	Id          string `json:"id"`
	IpAddress   string `json:"ip_address"`
	Name        string `json:"name"`
	SupportCode string `json:"support_code"`
}
