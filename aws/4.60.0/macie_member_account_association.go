// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewMacieMemberAccountAssociation(name string, args MacieMemberAccountAssociationArgs) *MacieMemberAccountAssociation {
	return &MacieMemberAccountAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MacieMemberAccountAssociation)(nil)

type MacieMemberAccountAssociation struct {
	Name  string
	Args  MacieMemberAccountAssociationArgs
	state *macieMemberAccountAssociationState
}

func (mmaa *MacieMemberAccountAssociation) Type() string {
	return "aws_macie_member_account_association"
}

func (mmaa *MacieMemberAccountAssociation) LocalName() string {
	return mmaa.Name
}

func (mmaa *MacieMemberAccountAssociation) Configuration() interface{} {
	return mmaa.Args
}

func (mmaa *MacieMemberAccountAssociation) Attributes() macieMemberAccountAssociationAttributes {
	return macieMemberAccountAssociationAttributes{ref: terra.ReferenceResource(mmaa)}
}

func (mmaa *MacieMemberAccountAssociation) ImportState(av io.Reader) error {
	mmaa.state = &macieMemberAccountAssociationState{}
	if err := json.NewDecoder(av).Decode(mmaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mmaa.Type(), mmaa.LocalName(), err)
	}
	return nil
}

func (mmaa *MacieMemberAccountAssociation) State() (*macieMemberAccountAssociationState, bool) {
	return mmaa.state, mmaa.state != nil
}

func (mmaa *MacieMemberAccountAssociation) StateMust() *macieMemberAccountAssociationState {
	if mmaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mmaa.Type(), mmaa.LocalName()))
	}
	return mmaa.state
}

func (mmaa *MacieMemberAccountAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(mmaa)
}

type MacieMemberAccountAssociationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MemberAccountId: string, required
	MemberAccountId terra.StringValue `hcl:"member_account_id,attr" validate:"required"`
	// DependsOn contains resources that MacieMemberAccountAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type macieMemberAccountAssociationAttributes struct {
	ref terra.Reference
}

func (mmaa macieMemberAccountAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mmaa.ref.Append("id"))
}

func (mmaa macieMemberAccountAssociationAttributes) MemberAccountId() terra.StringValue {
	return terra.ReferenceString(mmaa.ref.Append("member_account_id"))
}

type macieMemberAccountAssociationState struct {
	Id              string `json:"id"`
	MemberAccountId string `json:"member_account_id"`
}
