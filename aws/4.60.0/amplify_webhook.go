// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAmplifyWebhook(name string, args AmplifyWebhookArgs) *AmplifyWebhook {
	return &AmplifyWebhook{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AmplifyWebhook)(nil)

type AmplifyWebhook struct {
	Name  string
	Args  AmplifyWebhookArgs
	state *amplifyWebhookState
}

func (aw *AmplifyWebhook) Type() string {
	return "aws_amplify_webhook"
}

func (aw *AmplifyWebhook) LocalName() string {
	return aw.Name
}

func (aw *AmplifyWebhook) Configuration() interface{} {
	return aw.Args
}

func (aw *AmplifyWebhook) Attributes() amplifyWebhookAttributes {
	return amplifyWebhookAttributes{ref: terra.ReferenceResource(aw)}
}

func (aw *AmplifyWebhook) ImportState(av io.Reader) error {
	aw.state = &amplifyWebhookState{}
	if err := json.NewDecoder(av).Decode(aw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aw.Type(), aw.LocalName(), err)
	}
	return nil
}

func (aw *AmplifyWebhook) State() (*amplifyWebhookState, bool) {
	return aw.state, aw.state != nil
}

func (aw *AmplifyWebhook) StateMust() *amplifyWebhookState {
	if aw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aw.Type(), aw.LocalName()))
	}
	return aw.state
}

func (aw *AmplifyWebhook) DependOn() terra.Reference {
	return terra.ReferenceResource(aw)
}

type AmplifyWebhookArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// BranchName: string, required
	BranchName terra.StringValue `hcl:"branch_name,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that AmplifyWebhook depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type amplifyWebhookAttributes struct {
	ref terra.Reference
}

func (aw amplifyWebhookAttributes) AppId() terra.StringValue {
	return terra.ReferenceString(aw.ref.Append("app_id"))
}

func (aw amplifyWebhookAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(aw.ref.Append("arn"))
}

func (aw amplifyWebhookAttributes) BranchName() terra.StringValue {
	return terra.ReferenceString(aw.ref.Append("branch_name"))
}

func (aw amplifyWebhookAttributes) Description() terra.StringValue {
	return terra.ReferenceString(aw.ref.Append("description"))
}

func (aw amplifyWebhookAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aw.ref.Append("id"))
}

func (aw amplifyWebhookAttributes) Url() terra.StringValue {
	return terra.ReferenceString(aw.ref.Append("url"))
}

type amplifyWebhookState struct {
	AppId       string `json:"app_id"`
	Arn         string `json:"arn"`
	BranchName  string `json:"branch_name"`
	Description string `json:"description"`
	Id          string `json:"id"`
	Url         string `json:"url"`
}
