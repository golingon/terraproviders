// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	securityhubinsight "github.com/golingon/terraproviders/aws/4.60.0/securityhubinsight"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSecurityhubInsight(name string, args SecurityhubInsightArgs) *SecurityhubInsight {
	return &SecurityhubInsight{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityhubInsight)(nil)

type SecurityhubInsight struct {
	Name  string
	Args  SecurityhubInsightArgs
	state *securityhubInsightState
}

func (si *SecurityhubInsight) Type() string {
	return "aws_securityhub_insight"
}

func (si *SecurityhubInsight) LocalName() string {
	return si.Name
}

func (si *SecurityhubInsight) Configuration() interface{} {
	return si.Args
}

func (si *SecurityhubInsight) Attributes() securityhubInsightAttributes {
	return securityhubInsightAttributes{ref: terra.ReferenceResource(si)}
}

func (si *SecurityhubInsight) ImportState(av io.Reader) error {
	si.state = &securityhubInsightState{}
	if err := json.NewDecoder(av).Decode(si.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", si.Type(), si.LocalName(), err)
	}
	return nil
}

func (si *SecurityhubInsight) State() (*securityhubInsightState, bool) {
	return si.state, si.state != nil
}

func (si *SecurityhubInsight) StateMust() *securityhubInsightState {
	if si.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", si.Type(), si.LocalName()))
	}
	return si.state
}

func (si *SecurityhubInsight) DependOn() terra.Reference {
	return terra.ReferenceResource(si)
}

type SecurityhubInsightArgs struct {
	// GroupByAttribute: string, required
	GroupByAttribute terra.StringValue `hcl:"group_by_attribute,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Filters: required
	Filters *securityhubinsight.Filters `hcl:"filters,block" validate:"required"`
	// DependsOn contains resources that SecurityhubInsight depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type securityhubInsightAttributes struct {
	ref terra.Reference
}

func (si securityhubInsightAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(si.ref.Append("arn"))
}

func (si securityhubInsightAttributes) GroupByAttribute() terra.StringValue {
	return terra.ReferenceString(si.ref.Append("group_by_attribute"))
}

func (si securityhubInsightAttributes) Id() terra.StringValue {
	return terra.ReferenceString(si.ref.Append("id"))
}

func (si securityhubInsightAttributes) Name() terra.StringValue {
	return terra.ReferenceString(si.ref.Append("name"))
}

func (si securityhubInsightAttributes) Filters() terra.ListValue[securityhubinsight.FiltersAttributes] {
	return terra.ReferenceList[securityhubinsight.FiltersAttributes](si.ref.Append("filters"))
}

type securityhubInsightState struct {
	Arn              string                            `json:"arn"`
	GroupByAttribute string                            `json:"group_by_attribute"`
	Id               string                            `json:"id"`
	Name             string                            `json:"name"`
	Filters          []securityhubinsight.FiltersState `json:"filters"`
}
