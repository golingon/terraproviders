// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDetectiveInvitationAccepter(name string, args DetectiveInvitationAccepterArgs) *DetectiveInvitationAccepter {
	return &DetectiveInvitationAccepter{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DetectiveInvitationAccepter)(nil)

type DetectiveInvitationAccepter struct {
	Name  string
	Args  DetectiveInvitationAccepterArgs
	state *detectiveInvitationAccepterState
}

func (dia *DetectiveInvitationAccepter) Type() string {
	return "aws_detective_invitation_accepter"
}

func (dia *DetectiveInvitationAccepter) LocalName() string {
	return dia.Name
}

func (dia *DetectiveInvitationAccepter) Configuration() interface{} {
	return dia.Args
}

func (dia *DetectiveInvitationAccepter) Attributes() detectiveInvitationAccepterAttributes {
	return detectiveInvitationAccepterAttributes{ref: terra.ReferenceResource(dia)}
}

func (dia *DetectiveInvitationAccepter) ImportState(av io.Reader) error {
	dia.state = &detectiveInvitationAccepterState{}
	if err := json.NewDecoder(av).Decode(dia.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dia.Type(), dia.LocalName(), err)
	}
	return nil
}

func (dia *DetectiveInvitationAccepter) State() (*detectiveInvitationAccepterState, bool) {
	return dia.state, dia.state != nil
}

func (dia *DetectiveInvitationAccepter) StateMust() *detectiveInvitationAccepterState {
	if dia.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dia.Type(), dia.LocalName()))
	}
	return dia.state
}

func (dia *DetectiveInvitationAccepter) DependOn() terra.Reference {
	return terra.ReferenceResource(dia)
}

type DetectiveInvitationAccepterArgs struct {
	// GraphArn: string, required
	GraphArn terra.StringValue `hcl:"graph_arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DependsOn contains resources that DetectiveInvitationAccepter depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type detectiveInvitationAccepterAttributes struct {
	ref terra.Reference
}

func (dia detectiveInvitationAccepterAttributes) GraphArn() terra.StringValue {
	return terra.ReferenceString(dia.ref.Append("graph_arn"))
}

func (dia detectiveInvitationAccepterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dia.ref.Append("id"))
}

type detectiveInvitationAccepterState struct {
	GraphArn string `json:"graph_arn"`
	Id       string `json:"id"`
}
