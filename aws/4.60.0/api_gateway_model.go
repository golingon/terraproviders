// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiGatewayModel(name string, args ApiGatewayModelArgs) *ApiGatewayModel {
	return &ApiGatewayModel{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiGatewayModel)(nil)

type ApiGatewayModel struct {
	Name  string
	Args  ApiGatewayModelArgs
	state *apiGatewayModelState
}

func (agm *ApiGatewayModel) Type() string {
	return "aws_api_gateway_model"
}

func (agm *ApiGatewayModel) LocalName() string {
	return agm.Name
}

func (agm *ApiGatewayModel) Configuration() interface{} {
	return agm.Args
}

func (agm *ApiGatewayModel) Attributes() apiGatewayModelAttributes {
	return apiGatewayModelAttributes{ref: terra.ReferenceResource(agm)}
}

func (agm *ApiGatewayModel) ImportState(av io.Reader) error {
	agm.state = &apiGatewayModelState{}
	if err := json.NewDecoder(av).Decode(agm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agm.Type(), agm.LocalName(), err)
	}
	return nil
}

func (agm *ApiGatewayModel) State() (*apiGatewayModelState, bool) {
	return agm.state, agm.state != nil
}

func (agm *ApiGatewayModel) StateMust() *apiGatewayModelState {
	if agm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agm.Type(), agm.LocalName()))
	}
	return agm.state
}

func (agm *ApiGatewayModel) DependOn() terra.Reference {
	return terra.ReferenceResource(agm)
}

type ApiGatewayModelArgs struct {
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RestApiId: string, required
	RestApiId terra.StringValue `hcl:"rest_api_id,attr" validate:"required"`
	// Schema: string, optional
	Schema terra.StringValue `hcl:"schema,attr"`
	// DependsOn contains resources that ApiGatewayModel depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiGatewayModelAttributes struct {
	ref terra.Reference
}

func (agm apiGatewayModelAttributes) ContentType() terra.StringValue {
	return terra.ReferenceString(agm.ref.Append("content_type"))
}

func (agm apiGatewayModelAttributes) Description() terra.StringValue {
	return terra.ReferenceString(agm.ref.Append("description"))
}

func (agm apiGatewayModelAttributes) Id() terra.StringValue {
	return terra.ReferenceString(agm.ref.Append("id"))
}

func (agm apiGatewayModelAttributes) Name() terra.StringValue {
	return terra.ReferenceString(agm.ref.Append("name"))
}

func (agm apiGatewayModelAttributes) RestApiId() terra.StringValue {
	return terra.ReferenceString(agm.ref.Append("rest_api_id"))
}

func (agm apiGatewayModelAttributes) Schema() terra.StringValue {
	return terra.ReferenceString(agm.ref.Append("schema"))
}

type apiGatewayModelState struct {
	ContentType string `json:"content_type"`
	Description string `json:"description"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	RestApiId   string `json:"rest_api_id"`
	Schema      string `json:"schema"`
}
