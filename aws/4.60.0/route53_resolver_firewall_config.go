// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewRoute53ResolverFirewallConfig creates a new instance of [Route53ResolverFirewallConfig].
func NewRoute53ResolverFirewallConfig(name string, args Route53ResolverFirewallConfigArgs) *Route53ResolverFirewallConfig {
	return &Route53ResolverFirewallConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Route53ResolverFirewallConfig)(nil)

// Route53ResolverFirewallConfig represents the Terraform resource aws_route53_resolver_firewall_config.
type Route53ResolverFirewallConfig struct {
	Name      string
	Args      Route53ResolverFirewallConfigArgs
	state     *route53ResolverFirewallConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Route53ResolverFirewallConfig].
func (rrfc *Route53ResolverFirewallConfig) Type() string {
	return "aws_route53_resolver_firewall_config"
}

// LocalName returns the local name for [Route53ResolverFirewallConfig].
func (rrfc *Route53ResolverFirewallConfig) LocalName() string {
	return rrfc.Name
}

// Configuration returns the configuration (args) for [Route53ResolverFirewallConfig].
func (rrfc *Route53ResolverFirewallConfig) Configuration() interface{} {
	return rrfc.Args
}

// DependOn is used for other resources to depend on [Route53ResolverFirewallConfig].
func (rrfc *Route53ResolverFirewallConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(rrfc)
}

// Dependencies returns the list of resources [Route53ResolverFirewallConfig] depends_on.
func (rrfc *Route53ResolverFirewallConfig) Dependencies() terra.Dependencies {
	return rrfc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Route53ResolverFirewallConfig].
func (rrfc *Route53ResolverFirewallConfig) LifecycleManagement() *terra.Lifecycle {
	return rrfc.Lifecycle
}

// Attributes returns the attributes for [Route53ResolverFirewallConfig].
func (rrfc *Route53ResolverFirewallConfig) Attributes() route53ResolverFirewallConfigAttributes {
	return route53ResolverFirewallConfigAttributes{ref: terra.ReferenceResource(rrfc)}
}

// ImportState imports the given attribute values into [Route53ResolverFirewallConfig]'s state.
func (rrfc *Route53ResolverFirewallConfig) ImportState(av io.Reader) error {
	rrfc.state = &route53ResolverFirewallConfigState{}
	if err := json.NewDecoder(av).Decode(rrfc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", rrfc.Type(), rrfc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Route53ResolverFirewallConfig] has state.
func (rrfc *Route53ResolverFirewallConfig) State() (*route53ResolverFirewallConfigState, bool) {
	return rrfc.state, rrfc.state != nil
}

// StateMust returns the state for [Route53ResolverFirewallConfig]. Panics if the state is nil.
func (rrfc *Route53ResolverFirewallConfig) StateMust() *route53ResolverFirewallConfigState {
	if rrfc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", rrfc.Type(), rrfc.LocalName()))
	}
	return rrfc.state
}

// Route53ResolverFirewallConfigArgs contains the configurations for aws_route53_resolver_firewall_config.
type Route53ResolverFirewallConfigArgs struct {
	// FirewallFailOpen: string, optional
	FirewallFailOpen terra.StringValue `hcl:"firewall_fail_open,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceId: string, required
	ResourceId terra.StringValue `hcl:"resource_id,attr" validate:"required"`
}
type route53ResolverFirewallConfigAttributes struct {
	ref terra.Reference
}

// FirewallFailOpen returns a reference to field firewall_fail_open of aws_route53_resolver_firewall_config.
func (rrfc route53ResolverFirewallConfigAttributes) FirewallFailOpen() terra.StringValue {
	return terra.ReferenceAsString(rrfc.ref.Append("firewall_fail_open"))
}

// Id returns a reference to field id of aws_route53_resolver_firewall_config.
func (rrfc route53ResolverFirewallConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rrfc.ref.Append("id"))
}

// OwnerId returns a reference to field owner_id of aws_route53_resolver_firewall_config.
func (rrfc route53ResolverFirewallConfigAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(rrfc.ref.Append("owner_id"))
}

// ResourceId returns a reference to field resource_id of aws_route53_resolver_firewall_config.
func (rrfc route53ResolverFirewallConfigAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(rrfc.ref.Append("resource_id"))
}

type route53ResolverFirewallConfigState struct {
	FirewallFailOpen string `json:"firewall_fail_open"`
	Id               string `json:"id"`
	OwnerId          string `json:"owner_id"`
	ResourceId       string `json:"resource_id"`
}
