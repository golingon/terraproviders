// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataRdsCluster(name string, args DataRdsClusterArgs) *DataRdsCluster {
	return &DataRdsCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRdsCluster)(nil)

type DataRdsCluster struct {
	Name string
	Args DataRdsClusterArgs
}

func (rc *DataRdsCluster) DataSource() string {
	return "aws_rds_cluster"
}

func (rc *DataRdsCluster) LocalName() string {
	return rc.Name
}

func (rc *DataRdsCluster) Configuration() interface{} {
	return rc.Args
}

func (rc *DataRdsCluster) Attributes() dataRdsClusterAttributes {
	return dataRdsClusterAttributes{ref: terra.ReferenceDataResource(rc)}
}

type DataRdsClusterArgs struct {
	// ClusterIdentifier: string, required
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}
type dataRdsClusterAttributes struct {
	ref terra.Reference
}

func (rc dataRdsClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("arn"))
}

func (rc dataRdsClusterAttributes) AvailabilityZones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](rc.ref.Append("availability_zones"))
}

func (rc dataRdsClusterAttributes) BacktrackWindow() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("backtrack_window"))
}

func (rc dataRdsClusterAttributes) BackupRetentionPeriod() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("backup_retention_period"))
}

func (rc dataRdsClusterAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_identifier"))
}

func (rc dataRdsClusterAttributes) ClusterMembers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](rc.ref.Append("cluster_members"))
}

func (rc dataRdsClusterAttributes) ClusterResourceId() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_resource_id"))
}

func (rc dataRdsClusterAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("database_name"))
}

func (rc dataRdsClusterAttributes) DbClusterParameterGroupName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("db_cluster_parameter_group_name"))
}

func (rc dataRdsClusterAttributes) DbSubnetGroupName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("db_subnet_group_name"))
}

func (rc dataRdsClusterAttributes) EnabledCloudwatchLogsExports() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rc.ref.Append("enabled_cloudwatch_logs_exports"))
}

func (rc dataRdsClusterAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("endpoint"))
}

func (rc dataRdsClusterAttributes) Engine() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("engine"))
}

func (rc dataRdsClusterAttributes) EngineMode() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("engine_mode"))
}

func (rc dataRdsClusterAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("engine_version"))
}

func (rc dataRdsClusterAttributes) FinalSnapshotIdentifier() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("final_snapshot_identifier"))
}

func (rc dataRdsClusterAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("hosted_zone_id"))
}

func (rc dataRdsClusterAttributes) IamDatabaseAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("iam_database_authentication_enabled"))
}

func (rc dataRdsClusterAttributes) IamRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](rc.ref.Append("iam_roles"))
}

func (rc dataRdsClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("id"))
}

func (rc dataRdsClusterAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("kms_key_id"))
}

func (rc dataRdsClusterAttributes) MasterUsername() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("master_username"))
}

func (rc dataRdsClusterAttributes) NetworkType() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("network_type"))
}

func (rc dataRdsClusterAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("port"))
}

func (rc dataRdsClusterAttributes) PreferredBackupWindow() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("preferred_backup_window"))
}

func (rc dataRdsClusterAttributes) PreferredMaintenanceWindow() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("preferred_maintenance_window"))
}

func (rc dataRdsClusterAttributes) ReaderEndpoint() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("reader_endpoint"))
}

func (rc dataRdsClusterAttributes) ReplicationSourceIdentifier() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("replication_source_identifier"))
}

func (rc dataRdsClusterAttributes) StorageEncrypted() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("storage_encrypted"))
}

func (rc dataRdsClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](rc.ref.Append("tags"))
}

func (rc dataRdsClusterAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](rc.ref.Append("vpc_security_group_ids"))
}
