// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	configorganizationcustomrule "github.com/golingon/terraproviders/aws/4.60.0/configorganizationcustomrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewConfigOrganizationCustomRule(name string, args ConfigOrganizationCustomRuleArgs) *ConfigOrganizationCustomRule {
	return &ConfigOrganizationCustomRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ConfigOrganizationCustomRule)(nil)

type ConfigOrganizationCustomRule struct {
	Name  string
	Args  ConfigOrganizationCustomRuleArgs
	state *configOrganizationCustomRuleState
}

func (cocr *ConfigOrganizationCustomRule) Type() string {
	return "aws_config_organization_custom_rule"
}

func (cocr *ConfigOrganizationCustomRule) LocalName() string {
	return cocr.Name
}

func (cocr *ConfigOrganizationCustomRule) Configuration() interface{} {
	return cocr.Args
}

func (cocr *ConfigOrganizationCustomRule) Attributes() configOrganizationCustomRuleAttributes {
	return configOrganizationCustomRuleAttributes{ref: terra.ReferenceResource(cocr)}
}

func (cocr *ConfigOrganizationCustomRule) ImportState(av io.Reader) error {
	cocr.state = &configOrganizationCustomRuleState{}
	if err := json.NewDecoder(av).Decode(cocr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cocr.Type(), cocr.LocalName(), err)
	}
	return nil
}

func (cocr *ConfigOrganizationCustomRule) State() (*configOrganizationCustomRuleState, bool) {
	return cocr.state, cocr.state != nil
}

func (cocr *ConfigOrganizationCustomRule) StateMust() *configOrganizationCustomRuleState {
	if cocr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cocr.Type(), cocr.LocalName()))
	}
	return cocr.state
}

func (cocr *ConfigOrganizationCustomRule) DependOn() terra.Reference {
	return terra.ReferenceResource(cocr)
}

type ConfigOrganizationCustomRuleArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExcludedAccounts: set of string, optional
	ExcludedAccounts terra.SetValue[terra.StringValue] `hcl:"excluded_accounts,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InputParameters: string, optional
	InputParameters terra.StringValue `hcl:"input_parameters,attr"`
	// LambdaFunctionArn: string, required
	LambdaFunctionArn terra.StringValue `hcl:"lambda_function_arn,attr" validate:"required"`
	// MaximumExecutionFrequency: string, optional
	MaximumExecutionFrequency terra.StringValue `hcl:"maximum_execution_frequency,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceIdScope: string, optional
	ResourceIdScope terra.StringValue `hcl:"resource_id_scope,attr"`
	// ResourceTypesScope: set of string, optional
	ResourceTypesScope terra.SetValue[terra.StringValue] `hcl:"resource_types_scope,attr"`
	// TagKeyScope: string, optional
	TagKeyScope terra.StringValue `hcl:"tag_key_scope,attr"`
	// TagValueScope: string, optional
	TagValueScope terra.StringValue `hcl:"tag_value_scope,attr"`
	// TriggerTypes: set of string, required
	TriggerTypes terra.SetValue[terra.StringValue] `hcl:"trigger_types,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *configorganizationcustomrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ConfigOrganizationCustomRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type configOrganizationCustomRuleAttributes struct {
	ref terra.Reference
}

func (cocr configOrganizationCustomRuleAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("arn"))
}

func (cocr configOrganizationCustomRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("description"))
}

func (cocr configOrganizationCustomRuleAttributes) ExcludedAccounts() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cocr.ref.Append("excluded_accounts"))
}

func (cocr configOrganizationCustomRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("id"))
}

func (cocr configOrganizationCustomRuleAttributes) InputParameters() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("input_parameters"))
}

func (cocr configOrganizationCustomRuleAttributes) LambdaFunctionArn() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("lambda_function_arn"))
}

func (cocr configOrganizationCustomRuleAttributes) MaximumExecutionFrequency() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("maximum_execution_frequency"))
}

func (cocr configOrganizationCustomRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("name"))
}

func (cocr configOrganizationCustomRuleAttributes) ResourceIdScope() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("resource_id_scope"))
}

func (cocr configOrganizationCustomRuleAttributes) ResourceTypesScope() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cocr.ref.Append("resource_types_scope"))
}

func (cocr configOrganizationCustomRuleAttributes) TagKeyScope() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("tag_key_scope"))
}

func (cocr configOrganizationCustomRuleAttributes) TagValueScope() terra.StringValue {
	return terra.ReferenceString(cocr.ref.Append("tag_value_scope"))
}

func (cocr configOrganizationCustomRuleAttributes) TriggerTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cocr.ref.Append("trigger_types"))
}

func (cocr configOrganizationCustomRuleAttributes) Timeouts() configorganizationcustomrule.TimeoutsAttributes {
	return terra.ReferenceSingle[configorganizationcustomrule.TimeoutsAttributes](cocr.ref.Append("timeouts"))
}

type configOrganizationCustomRuleState struct {
	Arn                       string                                      `json:"arn"`
	Description               string                                      `json:"description"`
	ExcludedAccounts          []string                                    `json:"excluded_accounts"`
	Id                        string                                      `json:"id"`
	InputParameters           string                                      `json:"input_parameters"`
	LambdaFunctionArn         string                                      `json:"lambda_function_arn"`
	MaximumExecutionFrequency string                                      `json:"maximum_execution_frequency"`
	Name                      string                                      `json:"name"`
	ResourceIdScope           string                                      `json:"resource_id_scope"`
	ResourceTypesScope        []string                                    `json:"resource_types_scope"`
	TagKeyScope               string                                      `json:"tag_key_scope"`
	TagValueScope             string                                      `json:"tag_value_scope"`
	TriggerTypes              []string                                    `json:"trigger_types"`
	Timeouts                  *configorganizationcustomrule.TimeoutsState `json:"timeouts"`
}
