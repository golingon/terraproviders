// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package s3bucketserversideencryptionconfiguration

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Rule struct {
	// BucketKeyEnabled: bool, optional
	BucketKeyEnabled terra.BoolValue `hcl:"bucket_key_enabled,attr"`
	// ApplyServerSideEncryptionByDefault: optional
	ApplyServerSideEncryptionByDefault *ApplyServerSideEncryptionByDefault `hcl:"apply_server_side_encryption_by_default,block"`
}

type ApplyServerSideEncryptionByDefault struct {
	// KmsMasterKeyId: string, optional
	KmsMasterKeyId terra.StringValue `hcl:"kms_master_key_id,attr"`
	// SseAlgorithm: string, required
	SseAlgorithm terra.StringValue `hcl:"sse_algorithm,attr" validate:"required"`
}

type RuleAttributes struct {
	ref terra.Reference
}

func (r RuleAttributes) InternalRef() terra.Reference {
	return r.ref
}

func (r RuleAttributes) InternalWithRef(ref terra.Reference) RuleAttributes {
	return RuleAttributes{ref: ref}
}

func (r RuleAttributes) InternalTokens() hclwrite.Tokens {
	return r.ref.InternalTokens()
}

func (r RuleAttributes) BucketKeyEnabled() terra.BoolValue {
	return terra.ReferenceBool(r.ref.Append("bucket_key_enabled"))
}

func (r RuleAttributes) ApplyServerSideEncryptionByDefault() terra.ListValue[ApplyServerSideEncryptionByDefaultAttributes] {
	return terra.ReferenceList[ApplyServerSideEncryptionByDefaultAttributes](r.ref.Append("apply_server_side_encryption_by_default"))
}

type ApplyServerSideEncryptionByDefaultAttributes struct {
	ref terra.Reference
}

func (assebd ApplyServerSideEncryptionByDefaultAttributes) InternalRef() terra.Reference {
	return assebd.ref
}

func (assebd ApplyServerSideEncryptionByDefaultAttributes) InternalWithRef(ref terra.Reference) ApplyServerSideEncryptionByDefaultAttributes {
	return ApplyServerSideEncryptionByDefaultAttributes{ref: ref}
}

func (assebd ApplyServerSideEncryptionByDefaultAttributes) InternalTokens() hclwrite.Tokens {
	return assebd.ref.InternalTokens()
}

func (assebd ApplyServerSideEncryptionByDefaultAttributes) KmsMasterKeyId() terra.StringValue {
	return terra.ReferenceString(assebd.ref.Append("kms_master_key_id"))
}

func (assebd ApplyServerSideEncryptionByDefaultAttributes) SseAlgorithm() terra.StringValue {
	return terra.ReferenceString(assebd.ref.Append("sse_algorithm"))
}

type RuleState struct {
	BucketKeyEnabled                   bool                                      `json:"bucket_key_enabled"`
	ApplyServerSideEncryptionByDefault []ApplyServerSideEncryptionByDefaultState `json:"apply_server_side_encryption_by_default"`
}

type ApplyServerSideEncryptionByDefaultState struct {
	KmsMasterKeyId string `json:"kms_master_key_id"`
	SseAlgorithm   string `json:"sse_algorithm"`
}
