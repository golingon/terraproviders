// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataAcmCertificate(name string, args DataAcmCertificateArgs) *DataAcmCertificate {
	return &DataAcmCertificate{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAcmCertificate)(nil)

type DataAcmCertificate struct {
	Name string
	Args DataAcmCertificateArgs
}

func (ac *DataAcmCertificate) DataSource() string {
	return "aws_acm_certificate"
}

func (ac *DataAcmCertificate) LocalName() string {
	return ac.Name
}

func (ac *DataAcmCertificate) Configuration() interface{} {
	return ac.Args
}

func (ac *DataAcmCertificate) Attributes() dataAcmCertificateAttributes {
	return dataAcmCertificateAttributes{ref: terra.ReferenceDataResource(ac)}
}

type DataAcmCertificateArgs struct {
	// Domain: string, required
	Domain terra.StringValue `hcl:"domain,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyTypes: set of string, optional
	KeyTypes terra.SetValue[terra.StringValue] `hcl:"key_types,attr"`
	// MostRecent: bool, optional
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Statuses: list of string, optional
	Statuses terra.ListValue[terra.StringValue] `hcl:"statuses,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Types: list of string, optional
	Types terra.ListValue[terra.StringValue] `hcl:"types,attr"`
}
type dataAcmCertificateAttributes struct {
	ref terra.Reference
}

func (ac dataAcmCertificateAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("arn"))
}

func (ac dataAcmCertificateAttributes) Certificate() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("certificate"))
}

func (ac dataAcmCertificateAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("certificate_chain"))
}

func (ac dataAcmCertificateAttributes) Domain() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("domain"))
}

func (ac dataAcmCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("id"))
}

func (ac dataAcmCertificateAttributes) KeyTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ac.ref.Append("key_types"))
}

func (ac dataAcmCertificateAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceBool(ac.ref.Append("most_recent"))
}

func (ac dataAcmCertificateAttributes) Status() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("status"))
}

func (ac dataAcmCertificateAttributes) Statuses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ac.ref.Append("statuses"))
}

func (ac dataAcmCertificateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ac.ref.Append("tags"))
}

func (ac dataAcmCertificateAttributes) Types() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ac.ref.Append("types"))
}
