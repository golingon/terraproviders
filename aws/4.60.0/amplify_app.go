// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	amplifyapp "github.com/golingon/terraproviders/aws/4.60.0/amplifyapp"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAmplifyApp(name string, args AmplifyAppArgs) *AmplifyApp {
	return &AmplifyApp{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AmplifyApp)(nil)

type AmplifyApp struct {
	Name  string
	Args  AmplifyAppArgs
	state *amplifyAppState
}

func (aa *AmplifyApp) Type() string {
	return "aws_amplify_app"
}

func (aa *AmplifyApp) LocalName() string {
	return aa.Name
}

func (aa *AmplifyApp) Configuration() interface{} {
	return aa.Args
}

func (aa *AmplifyApp) Attributes() amplifyAppAttributes {
	return amplifyAppAttributes{ref: terra.ReferenceResource(aa)}
}

func (aa *AmplifyApp) ImportState(av io.Reader) error {
	aa.state = &amplifyAppState{}
	if err := json.NewDecoder(av).Decode(aa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aa.Type(), aa.LocalName(), err)
	}
	return nil
}

func (aa *AmplifyApp) State() (*amplifyAppState, bool) {
	return aa.state, aa.state != nil
}

func (aa *AmplifyApp) StateMust() *amplifyAppState {
	if aa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aa.Type(), aa.LocalName()))
	}
	return aa.state
}

func (aa *AmplifyApp) DependOn() terra.Reference {
	return terra.ReferenceResource(aa)
}

type AmplifyAppArgs struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// AutoBranchCreationPatterns: set of string, optional
	AutoBranchCreationPatterns terra.SetValue[terra.StringValue] `hcl:"auto_branch_creation_patterns,attr"`
	// BasicAuthCredentials: string, optional
	BasicAuthCredentials terra.StringValue `hcl:"basic_auth_credentials,attr"`
	// BuildSpec: string, optional
	BuildSpec terra.StringValue `hcl:"build_spec,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// EnableAutoBranchCreation: bool, optional
	EnableAutoBranchCreation terra.BoolValue `hcl:"enable_auto_branch_creation,attr"`
	// EnableBasicAuth: bool, optional
	EnableBasicAuth terra.BoolValue `hcl:"enable_basic_auth,attr"`
	// EnableBranchAutoBuild: bool, optional
	EnableBranchAutoBuild terra.BoolValue `hcl:"enable_branch_auto_build,attr"`
	// EnableBranchAutoDeletion: bool, optional
	EnableBranchAutoDeletion terra.BoolValue `hcl:"enable_branch_auto_deletion,attr"`
	// EnvironmentVariables: map of string, optional
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// IamServiceRoleArn: string, optional
	IamServiceRoleArn terra.StringValue `hcl:"iam_service_role_arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OauthToken: string, optional
	OauthToken terra.StringValue `hcl:"oauth_token,attr"`
	// Platform: string, optional
	Platform terra.StringValue `hcl:"platform,attr"`
	// Repository: string, optional
	Repository terra.StringValue `hcl:"repository,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// ProductionBranch: min=0
	ProductionBranch []amplifyapp.ProductionBranch `hcl:"production_branch,block" validate:"min=0"`
	// AutoBranchCreationConfig: optional
	AutoBranchCreationConfig *amplifyapp.AutoBranchCreationConfig `hcl:"auto_branch_creation_config,block"`
	// CustomRule: min=0
	CustomRule []amplifyapp.CustomRule `hcl:"custom_rule,block" validate:"min=0"`
	// DependsOn contains resources that AmplifyApp depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type amplifyAppAttributes struct {
	ref terra.Reference
}

func (aa amplifyAppAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("access_token"))
}

func (aa amplifyAppAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("arn"))
}

func (aa amplifyAppAttributes) AutoBranchCreationPatterns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](aa.ref.Append("auto_branch_creation_patterns"))
}

func (aa amplifyAppAttributes) BasicAuthCredentials() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("basic_auth_credentials"))
}

func (aa amplifyAppAttributes) BuildSpec() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("build_spec"))
}

func (aa amplifyAppAttributes) DefaultDomain() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("default_domain"))
}

func (aa amplifyAppAttributes) Description() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("description"))
}

func (aa amplifyAppAttributes) EnableAutoBranchCreation() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("enable_auto_branch_creation"))
}

func (aa amplifyAppAttributes) EnableBasicAuth() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("enable_basic_auth"))
}

func (aa amplifyAppAttributes) EnableBranchAutoBuild() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("enable_branch_auto_build"))
}

func (aa amplifyAppAttributes) EnableBranchAutoDeletion() terra.BoolValue {
	return terra.ReferenceBool(aa.ref.Append("enable_branch_auto_deletion"))
}

func (aa amplifyAppAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aa.ref.Append("environment_variables"))
}

func (aa amplifyAppAttributes) IamServiceRoleArn() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("iam_service_role_arn"))
}

func (aa amplifyAppAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("id"))
}

func (aa amplifyAppAttributes) Name() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("name"))
}

func (aa amplifyAppAttributes) OauthToken() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("oauth_token"))
}

func (aa amplifyAppAttributes) Platform() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("platform"))
}

func (aa amplifyAppAttributes) Repository() terra.StringValue {
	return terra.ReferenceString(aa.ref.Append("repository"))
}

func (aa amplifyAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aa.ref.Append("tags"))
}

func (aa amplifyAppAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aa.ref.Append("tags_all"))
}

func (aa amplifyAppAttributes) ProductionBranch() terra.ListValue[amplifyapp.ProductionBranchAttributes] {
	return terra.ReferenceList[amplifyapp.ProductionBranchAttributes](aa.ref.Append("production_branch"))
}

func (aa amplifyAppAttributes) AutoBranchCreationConfig() terra.ListValue[amplifyapp.AutoBranchCreationConfigAttributes] {
	return terra.ReferenceList[amplifyapp.AutoBranchCreationConfigAttributes](aa.ref.Append("auto_branch_creation_config"))
}

func (aa amplifyAppAttributes) CustomRule() terra.ListValue[amplifyapp.CustomRuleAttributes] {
	return terra.ReferenceList[amplifyapp.CustomRuleAttributes](aa.ref.Append("custom_rule"))
}

type amplifyAppState struct {
	AccessToken                string                                     `json:"access_token"`
	Arn                        string                                     `json:"arn"`
	AutoBranchCreationPatterns []string                                   `json:"auto_branch_creation_patterns"`
	BasicAuthCredentials       string                                     `json:"basic_auth_credentials"`
	BuildSpec                  string                                     `json:"build_spec"`
	DefaultDomain              string                                     `json:"default_domain"`
	Description                string                                     `json:"description"`
	EnableAutoBranchCreation   bool                                       `json:"enable_auto_branch_creation"`
	EnableBasicAuth            bool                                       `json:"enable_basic_auth"`
	EnableBranchAutoBuild      bool                                       `json:"enable_branch_auto_build"`
	EnableBranchAutoDeletion   bool                                       `json:"enable_branch_auto_deletion"`
	EnvironmentVariables       map[string]string                          `json:"environment_variables"`
	IamServiceRoleArn          string                                     `json:"iam_service_role_arn"`
	Id                         string                                     `json:"id"`
	Name                       string                                     `json:"name"`
	OauthToken                 string                                     `json:"oauth_token"`
	Platform                   string                                     `json:"platform"`
	Repository                 string                                     `json:"repository"`
	Tags                       map[string]string                          `json:"tags"`
	TagsAll                    map[string]string                          `json:"tags_all"`
	ProductionBranch           []amplifyapp.ProductionBranchState         `json:"production_branch"`
	AutoBranchCreationConfig   []amplifyapp.AutoBranchCreationConfigState `json:"auto_branch_creation_config"`
	CustomRule                 []amplifyapp.CustomRuleState               `json:"custom_rule"`
}
