// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataIamUserSshKey(name string, args DataIamUserSshKeyArgs) *DataIamUserSshKey {
	return &DataIamUserSshKey{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataIamUserSshKey)(nil)

type DataIamUserSshKey struct {
	Name string
	Args DataIamUserSshKeyArgs
}

func (iusk *DataIamUserSshKey) DataSource() string {
	return "aws_iam_user_ssh_key"
}

func (iusk *DataIamUserSshKey) LocalName() string {
	return iusk.Name
}

func (iusk *DataIamUserSshKey) Configuration() interface{} {
	return iusk.Args
}

func (iusk *DataIamUserSshKey) Attributes() dataIamUserSshKeyAttributes {
	return dataIamUserSshKeyAttributes{ref: terra.ReferenceDataResource(iusk)}
}

type DataIamUserSshKeyArgs struct {
	// Encoding: string, required
	Encoding terra.StringValue `hcl:"encoding,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SshPublicKeyId: string, required
	SshPublicKeyId terra.StringValue `hcl:"ssh_public_key_id,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}
type dataIamUserSshKeyAttributes struct {
	ref terra.Reference
}

func (iusk dataIamUserSshKeyAttributes) Encoding() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("encoding"))
}

func (iusk dataIamUserSshKeyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("fingerprint"))
}

func (iusk dataIamUserSshKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("id"))
}

func (iusk dataIamUserSshKeyAttributes) PublicKey() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("public_key"))
}

func (iusk dataIamUserSshKeyAttributes) SshPublicKeyId() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("ssh_public_key_id"))
}

func (iusk dataIamUserSshKeyAttributes) Status() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("status"))
}

func (iusk dataIamUserSshKeyAttributes) Username() terra.StringValue {
	return terra.ReferenceString(iusk.ref.Append("username"))
}
