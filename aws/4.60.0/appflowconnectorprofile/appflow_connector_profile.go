// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package appflowconnectorprofile

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ConnectorProfileConfig struct {
	// ConnectorProfileCredentials: required
	ConnectorProfileCredentials *ConnectorProfileCredentials `hcl:"connector_profile_credentials,block" validate:"required"`
	// ConnectorProfileProperties: required
	ConnectorProfileProperties *ConnectorProfileProperties `hcl:"connector_profile_properties,block" validate:"required"`
}

type ConnectorProfileCredentials struct {
	// ConnectorProfileCredentialsAmplitude: optional
	Amplitude *ConnectorProfileCredentialsAmplitude `hcl:"amplitude,block"`
	// ConnectorProfileCredentialsCustomConnector: optional
	CustomConnector *ConnectorProfileCredentialsCustomConnector `hcl:"custom_connector,block"`
	// ConnectorProfileCredentialsDatadog: optional
	Datadog *ConnectorProfileCredentialsDatadog `hcl:"datadog,block"`
	// ConnectorProfileCredentialsDynatrace: optional
	Dynatrace *ConnectorProfileCredentialsDynatrace `hcl:"dynatrace,block"`
	// ConnectorProfileCredentialsGoogleAnalytics: optional
	GoogleAnalytics *ConnectorProfileCredentialsGoogleAnalytics `hcl:"google_analytics,block"`
	// ConnectorProfileCredentialsHoneycode: optional
	Honeycode *ConnectorProfileCredentialsHoneycode `hcl:"honeycode,block"`
	// ConnectorProfileCredentialsInforNexus: optional
	InforNexus *ConnectorProfileCredentialsInforNexus `hcl:"infor_nexus,block"`
	// ConnectorProfileCredentialsMarketo: optional
	Marketo *ConnectorProfileCredentialsMarketo `hcl:"marketo,block"`
	// ConnectorProfileCredentialsRedshift: optional
	Redshift *ConnectorProfileCredentialsRedshift `hcl:"redshift,block"`
	// ConnectorProfileCredentialsSalesforce: optional
	Salesforce *ConnectorProfileCredentialsSalesforce `hcl:"salesforce,block"`
	// ConnectorProfileCredentialsSapoData: optional
	SapoData *ConnectorProfileCredentialsSapoData `hcl:"sapo_data,block"`
	// ConnectorProfileCredentialsServiceNow: optional
	ServiceNow *ConnectorProfileCredentialsServiceNow `hcl:"service_now,block"`
	// ConnectorProfileCredentialsSingular: optional
	Singular *ConnectorProfileCredentialsSingular `hcl:"singular,block"`
	// ConnectorProfileCredentialsSlack: optional
	Slack *ConnectorProfileCredentialsSlack `hcl:"slack,block"`
	// ConnectorProfileCredentialsSnowflake: optional
	Snowflake *ConnectorProfileCredentialsSnowflake `hcl:"snowflake,block"`
	// ConnectorProfileCredentialsTrendmicro: optional
	Trendmicro *ConnectorProfileCredentialsTrendmicro `hcl:"trendmicro,block"`
	// ConnectorProfileCredentialsVeeva: optional
	Veeva *ConnectorProfileCredentialsVeeva `hcl:"veeva,block"`
	// ConnectorProfileCredentialsZendesk: optional
	Zendesk *ConnectorProfileCredentialsZendesk `hcl:"zendesk,block"`
}

type ConnectorProfileCredentialsAmplitude struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// SecretKey: string, required
	SecretKey terra.StringValue `hcl:"secret_key,attr" validate:"required"`
}

type ConnectorProfileCredentialsCustomConnector struct {
	// AuthenticationType: string, required
	AuthenticationType terra.StringValue `hcl:"authentication_type,attr" validate:"required"`
	// ApiKey: optional
	ApiKey *ApiKey `hcl:"api_key,block"`
	// Basic: optional
	Basic *Basic `hcl:"basic,block"`
	// Custom: optional
	Custom *Custom `hcl:"custom,block"`
	// Oauth2: optional
	Oauth2 *Oauth2 `hcl:"oauth2,block"`
}

type ApiKey struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// ApiSecretKey: string, optional
	ApiSecretKey terra.StringValue `hcl:"api_secret_key,attr"`
}

type Basic struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type Custom struct {
	// CredentialsMap: map of string, optional
	CredentialsMap terra.MapValue[terra.StringValue] `hcl:"credentials_map,attr"`
	// CustomAuthenticationType: string, required
	CustomAuthenticationType terra.StringValue `hcl:"custom_authentication_type,attr" validate:"required"`
}

type Oauth2 struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ClientSecret: string, optional
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// RefreshToken: string, optional
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// Oauth2OauthRequest: optional
	OauthRequest *Oauth2OauthRequest `hcl:"oauth_request,block"`
}

type Oauth2OauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsDatadog struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// ApplicationKey: string, required
	ApplicationKey terra.StringValue `hcl:"application_key,attr" validate:"required"`
}

type ConnectorProfileCredentialsDynatrace struct {
	// ApiToken: string, required
	ApiToken terra.StringValue `hcl:"api_token,attr" validate:"required"`
}

type ConnectorProfileCredentialsGoogleAnalytics struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// RefreshToken: string, optional
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// GoogleAnalyticsOauthRequest: optional
	OauthRequest *GoogleAnalyticsOauthRequest `hcl:"oauth_request,block"`
}

type GoogleAnalyticsOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsHoneycode struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// RefreshToken: string, optional
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// HoneycodeOauthRequest: optional
	OauthRequest *HoneycodeOauthRequest `hcl:"oauth_request,block"`
}

type HoneycodeOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsInforNexus struct {
	// AccessKeyId: string, required
	AccessKeyId terra.StringValue `hcl:"access_key_id,attr" validate:"required"`
	// Datakey: string, required
	Datakey terra.StringValue `hcl:"datakey,attr" validate:"required"`
	// SecretAccessKey: string, required
	SecretAccessKey terra.StringValue `hcl:"secret_access_key,attr" validate:"required"`
	// UserId: string, required
	UserId terra.StringValue `hcl:"user_id,attr" validate:"required"`
}

type ConnectorProfileCredentialsMarketo struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// MarketoOauthRequest: optional
	OauthRequest *MarketoOauthRequest `hcl:"oauth_request,block"`
}

type MarketoOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsRedshift struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileCredentialsSalesforce struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientCredentialsArn: string, optional
	ClientCredentialsArn terra.StringValue `hcl:"client_credentials_arn,attr"`
	// RefreshToken: string, optional
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// SalesforceOauthRequest: optional
	OauthRequest *SalesforceOauthRequest `hcl:"oauth_request,block"`
}

type SalesforceOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsSapoData struct {
	// BasicAuthCredentials: optional
	BasicAuthCredentials *BasicAuthCredentials `hcl:"basic_auth_credentials,block"`
	// OauthCredentials: optional
	OauthCredentials *OauthCredentials `hcl:"oauth_credentials,block"`
}

type BasicAuthCredentials struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type OauthCredentials struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// RefreshToken: string, optional
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// OauthCredentialsOauthRequest: optional
	OauthRequest *OauthCredentialsOauthRequest `hcl:"oauth_request,block"`
}

type OauthCredentialsOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsServiceNow struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileCredentialsSingular struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
}

type ConnectorProfileCredentialsSlack struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// SlackOauthRequest: optional
	OauthRequest *SlackOauthRequest `hcl:"oauth_request,block"`
}

type SlackOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileCredentialsSnowflake struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileCredentialsTrendmicro struct {
	// ApiSecretKey: string, required
	ApiSecretKey terra.StringValue `hcl:"api_secret_key,attr" validate:"required"`
}

type ConnectorProfileCredentialsVeeva struct {
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileCredentialsZendesk struct {
	// AccessToken: string, optional
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// ZendeskOauthRequest: optional
	OauthRequest *ZendeskOauthRequest `hcl:"oauth_request,block"`
}

type ZendeskOauthRequest struct {
	// AuthCode: string, optional
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri: string, optional
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileProperties struct {
	// ConnectorProfilePropertiesAmplitude: optional
	Amplitude *ConnectorProfilePropertiesAmplitude `hcl:"amplitude,block"`
	// ConnectorProfilePropertiesCustomConnector: optional
	CustomConnector *ConnectorProfilePropertiesCustomConnector `hcl:"custom_connector,block"`
	// ConnectorProfilePropertiesDatadog: optional
	Datadog *ConnectorProfilePropertiesDatadog `hcl:"datadog,block"`
	// ConnectorProfilePropertiesDynatrace: optional
	Dynatrace *ConnectorProfilePropertiesDynatrace `hcl:"dynatrace,block"`
	// ConnectorProfilePropertiesGoogleAnalytics: optional
	GoogleAnalytics *ConnectorProfilePropertiesGoogleAnalytics `hcl:"google_analytics,block"`
	// ConnectorProfilePropertiesHoneycode: optional
	Honeycode *ConnectorProfilePropertiesHoneycode `hcl:"honeycode,block"`
	// ConnectorProfilePropertiesInforNexus: optional
	InforNexus *ConnectorProfilePropertiesInforNexus `hcl:"infor_nexus,block"`
	// ConnectorProfilePropertiesMarketo: optional
	Marketo *ConnectorProfilePropertiesMarketo `hcl:"marketo,block"`
	// ConnectorProfilePropertiesRedshift: optional
	Redshift *ConnectorProfilePropertiesRedshift `hcl:"redshift,block"`
	// ConnectorProfilePropertiesSalesforce: optional
	Salesforce *ConnectorProfilePropertiesSalesforce `hcl:"salesforce,block"`
	// ConnectorProfilePropertiesSapoData: optional
	SapoData *ConnectorProfilePropertiesSapoData `hcl:"sapo_data,block"`
	// ConnectorProfilePropertiesServiceNow: optional
	ServiceNow *ConnectorProfilePropertiesServiceNow `hcl:"service_now,block"`
	// ConnectorProfilePropertiesSingular: optional
	Singular *ConnectorProfilePropertiesSingular `hcl:"singular,block"`
	// ConnectorProfilePropertiesSlack: optional
	Slack *ConnectorProfilePropertiesSlack `hcl:"slack,block"`
	// ConnectorProfilePropertiesSnowflake: optional
	Snowflake *ConnectorProfilePropertiesSnowflake `hcl:"snowflake,block"`
	// ConnectorProfilePropertiesTrendmicro: optional
	Trendmicro *ConnectorProfilePropertiesTrendmicro `hcl:"trendmicro,block"`
	// ConnectorProfilePropertiesVeeva: optional
	Veeva *ConnectorProfilePropertiesVeeva `hcl:"veeva,block"`
	// ConnectorProfilePropertiesZendesk: optional
	Zendesk *ConnectorProfilePropertiesZendesk `hcl:"zendesk,block"`
}

type ConnectorProfilePropertiesAmplitude struct{}

type ConnectorProfilePropertiesCustomConnector struct {
	// ProfileProperties: map of string, optional
	ProfileProperties terra.MapValue[terra.StringValue] `hcl:"profile_properties,attr"`
	// Oauth2Properties: optional
	Oauth2Properties *Oauth2Properties `hcl:"oauth2_properties,block"`
}

type Oauth2Properties struct {
	// Oauth2GrantType: string, required
	Oauth2GrantType terra.StringValue `hcl:"oauth2_grant_type,attr" validate:"required"`
	// TokenUrl: string, required
	TokenUrl terra.StringValue `hcl:"token_url,attr" validate:"required"`
	// TokenUrlCustomProperties: map of string, optional
	TokenUrlCustomProperties terra.MapValue[terra.StringValue] `hcl:"token_url_custom_properties,attr"`
}

type ConnectorProfilePropertiesDatadog struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesDynatrace struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesGoogleAnalytics struct{}

type ConnectorProfilePropertiesHoneycode struct{}

type ConnectorProfilePropertiesInforNexus struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesMarketo struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesRedshift struct {
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// ClusterIdentifier: string, optional
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr"`
	// DataApiRoleArn: string, optional
	DataApiRoleArn terra.StringValue `hcl:"data_api_role_arn,attr"`
	// DatabaseName: string, optional
	DatabaseName terra.StringValue `hcl:"database_name,attr"`
	// DatabaseUrl: string, optional
	DatabaseUrl terra.StringValue `hcl:"database_url,attr"`
	// RoleArn: string, required
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
}

type ConnectorProfilePropertiesSalesforce struct {
	// InstanceUrl: string, optional
	InstanceUrl terra.StringValue `hcl:"instance_url,attr"`
	// IsSandboxEnvironment: bool, optional
	IsSandboxEnvironment terra.BoolValue `hcl:"is_sandbox_environment,attr"`
}

type ConnectorProfilePropertiesSapoData struct {
	// ApplicationHostUrl: string, required
	ApplicationHostUrl terra.StringValue `hcl:"application_host_url,attr" validate:"required"`
	// ApplicationServicePath: string, required
	ApplicationServicePath terra.StringValue `hcl:"application_service_path,attr" validate:"required"`
	// ClientNumber: string, required
	ClientNumber terra.StringValue `hcl:"client_number,attr" validate:"required"`
	// LogonLanguage: string, optional
	LogonLanguage terra.StringValue `hcl:"logon_language,attr"`
	// PortNumber: number, required
	PortNumber terra.NumberValue `hcl:"port_number,attr" validate:"required"`
	// PrivateLinkServiceName: string, optional
	PrivateLinkServiceName terra.StringValue `hcl:"private_link_service_name,attr"`
	// OauthProperties: optional
	OauthProperties *OauthProperties `hcl:"oauth_properties,block"`
}

type OauthProperties struct {
	// AuthCodeUrl: string, required
	AuthCodeUrl terra.StringValue `hcl:"auth_code_url,attr" validate:"required"`
	// OauthScopes: list of string, required
	OauthScopes terra.ListValue[terra.StringValue] `hcl:"oauth_scopes,attr" validate:"required"`
	// TokenUrl: string, required
	TokenUrl terra.StringValue `hcl:"token_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesServiceNow struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesSingular struct{}

type ConnectorProfilePropertiesSlack struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesSnowflake struct {
	// AccountName: string, optional
	AccountName terra.StringValue `hcl:"account_name,attr"`
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix: string, optional
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// PrivateLinkServiceName: string, optional
	PrivateLinkServiceName terra.StringValue `hcl:"private_link_service_name,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Stage: string, required
	Stage terra.StringValue `hcl:"stage,attr" validate:"required"`
	// Warehouse: string, required
	Warehouse terra.StringValue `hcl:"warehouse,attr" validate:"required"`
}

type ConnectorProfilePropertiesTrendmicro struct{}

type ConnectorProfilePropertiesVeeva struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfilePropertiesZendesk struct {
	// InstanceUrl: string, required
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigAttributes struct {
	ref terra.Reference
}

func (cpc ConnectorProfileConfigAttributes) InternalRef() terra.Reference {
	return cpc.ref
}

func (cpc ConnectorProfileConfigAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileConfigAttributes {
	return ConnectorProfileConfigAttributes{ref: ref}
}

func (cpc ConnectorProfileConfigAttributes) InternalTokens() hclwrite.Tokens {
	return cpc.ref.InternalTokens()
}

func (cpc ConnectorProfileConfigAttributes) ConnectorProfileCredentials() terra.ListValue[ConnectorProfileCredentialsAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsAttributes](cpc.ref.Append("connector_profile_credentials"))
}

func (cpc ConnectorProfileConfigAttributes) ConnectorProfileProperties() terra.ListValue[ConnectorProfilePropertiesAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesAttributes](cpc.ref.Append("connector_profile_properties"))
}

type ConnectorProfileCredentialsAttributes struct {
	ref terra.Reference
}

func (cpc ConnectorProfileCredentialsAttributes) InternalRef() terra.Reference {
	return cpc.ref
}

func (cpc ConnectorProfileCredentialsAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsAttributes {
	return ConnectorProfileCredentialsAttributes{ref: ref}
}

func (cpc ConnectorProfileCredentialsAttributes) InternalTokens() hclwrite.Tokens {
	return cpc.ref.InternalTokens()
}

func (cpc ConnectorProfileCredentialsAttributes) Amplitude() terra.ListValue[ConnectorProfileCredentialsAmplitudeAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsAmplitudeAttributes](cpc.ref.Append("amplitude"))
}

func (cpc ConnectorProfileCredentialsAttributes) CustomConnector() terra.ListValue[ConnectorProfileCredentialsCustomConnectorAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsCustomConnectorAttributes](cpc.ref.Append("custom_connector"))
}

func (cpc ConnectorProfileCredentialsAttributes) Datadog() terra.ListValue[ConnectorProfileCredentialsDatadogAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsDatadogAttributes](cpc.ref.Append("datadog"))
}

func (cpc ConnectorProfileCredentialsAttributes) Dynatrace() terra.ListValue[ConnectorProfileCredentialsDynatraceAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsDynatraceAttributes](cpc.ref.Append("dynatrace"))
}

func (cpc ConnectorProfileCredentialsAttributes) GoogleAnalytics() terra.ListValue[ConnectorProfileCredentialsGoogleAnalyticsAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsGoogleAnalyticsAttributes](cpc.ref.Append("google_analytics"))
}

func (cpc ConnectorProfileCredentialsAttributes) Honeycode() terra.ListValue[ConnectorProfileCredentialsHoneycodeAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsHoneycodeAttributes](cpc.ref.Append("honeycode"))
}

func (cpc ConnectorProfileCredentialsAttributes) InforNexus() terra.ListValue[ConnectorProfileCredentialsInforNexusAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsInforNexusAttributes](cpc.ref.Append("infor_nexus"))
}

func (cpc ConnectorProfileCredentialsAttributes) Marketo() terra.ListValue[ConnectorProfileCredentialsMarketoAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsMarketoAttributes](cpc.ref.Append("marketo"))
}

func (cpc ConnectorProfileCredentialsAttributes) Redshift() terra.ListValue[ConnectorProfileCredentialsRedshiftAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsRedshiftAttributes](cpc.ref.Append("redshift"))
}

func (cpc ConnectorProfileCredentialsAttributes) Salesforce() terra.ListValue[ConnectorProfileCredentialsSalesforceAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsSalesforceAttributes](cpc.ref.Append("salesforce"))
}

func (cpc ConnectorProfileCredentialsAttributes) SapoData() terra.ListValue[ConnectorProfileCredentialsSapoDataAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsSapoDataAttributes](cpc.ref.Append("sapo_data"))
}

func (cpc ConnectorProfileCredentialsAttributes) ServiceNow() terra.ListValue[ConnectorProfileCredentialsServiceNowAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsServiceNowAttributes](cpc.ref.Append("service_now"))
}

func (cpc ConnectorProfileCredentialsAttributes) Singular() terra.ListValue[ConnectorProfileCredentialsSingularAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsSingularAttributes](cpc.ref.Append("singular"))
}

func (cpc ConnectorProfileCredentialsAttributes) Slack() terra.ListValue[ConnectorProfileCredentialsSlackAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsSlackAttributes](cpc.ref.Append("slack"))
}

func (cpc ConnectorProfileCredentialsAttributes) Snowflake() terra.ListValue[ConnectorProfileCredentialsSnowflakeAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsSnowflakeAttributes](cpc.ref.Append("snowflake"))
}

func (cpc ConnectorProfileCredentialsAttributes) Trendmicro() terra.ListValue[ConnectorProfileCredentialsTrendmicroAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsTrendmicroAttributes](cpc.ref.Append("trendmicro"))
}

func (cpc ConnectorProfileCredentialsAttributes) Veeva() terra.ListValue[ConnectorProfileCredentialsVeevaAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsVeevaAttributes](cpc.ref.Append("veeva"))
}

func (cpc ConnectorProfileCredentialsAttributes) Zendesk() terra.ListValue[ConnectorProfileCredentialsZendeskAttributes] {
	return terra.ReferenceAsList[ConnectorProfileCredentialsZendeskAttributes](cpc.ref.Append("zendesk"))
}

type ConnectorProfileCredentialsAmplitudeAttributes struct {
	ref terra.Reference
}

func (a ConnectorProfileCredentialsAmplitudeAttributes) InternalRef() terra.Reference {
	return a.ref
}

func (a ConnectorProfileCredentialsAmplitudeAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsAmplitudeAttributes {
	return ConnectorProfileCredentialsAmplitudeAttributes{ref: ref}
}

func (a ConnectorProfileCredentialsAmplitudeAttributes) InternalTokens() hclwrite.Tokens {
	return a.ref.InternalTokens()
}

func (a ConnectorProfileCredentialsAmplitudeAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("api_key"))
}

func (a ConnectorProfileCredentialsAmplitudeAttributes) SecretKey() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("secret_key"))
}

type ConnectorProfileCredentialsCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) InternalRef() terra.Reference {
	return cc.ref
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsCustomConnectorAttributes {
	return ConnectorProfileCredentialsCustomConnectorAttributes{ref: ref}
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) InternalTokens() hclwrite.Tokens {
	return cc.ref.InternalTokens()
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) AuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("authentication_type"))
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) ApiKey() terra.ListValue[ApiKeyAttributes] {
	return terra.ReferenceAsList[ApiKeyAttributes](cc.ref.Append("api_key"))
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) Basic() terra.ListValue[BasicAttributes] {
	return terra.ReferenceAsList[BasicAttributes](cc.ref.Append("basic"))
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) Custom() terra.ListValue[CustomAttributes] {
	return terra.ReferenceAsList[CustomAttributes](cc.ref.Append("custom"))
}

func (cc ConnectorProfileCredentialsCustomConnectorAttributes) Oauth2() terra.ListValue[Oauth2Attributes] {
	return terra.ReferenceAsList[Oauth2Attributes](cc.ref.Append("oauth2"))
}

type ApiKeyAttributes struct {
	ref terra.Reference
}

func (ak ApiKeyAttributes) InternalRef() terra.Reference {
	return ak.ref
}

func (ak ApiKeyAttributes) InternalWithRef(ref terra.Reference) ApiKeyAttributes {
	return ApiKeyAttributes{ref: ref}
}

func (ak ApiKeyAttributes) InternalTokens() hclwrite.Tokens {
	return ak.ref.InternalTokens()
}

func (ak ApiKeyAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("api_key"))
}

func (ak ApiKeyAttributes) ApiSecretKey() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("api_secret_key"))
}

type BasicAttributes struct {
	ref terra.Reference
}

func (b BasicAttributes) InternalRef() terra.Reference {
	return b.ref
}

func (b BasicAttributes) InternalWithRef(ref terra.Reference) BasicAttributes {
	return BasicAttributes{ref: ref}
}

func (b BasicAttributes) InternalTokens() hclwrite.Tokens {
	return b.ref.InternalTokens()
}

func (b BasicAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("password"))
}

func (b BasicAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("username"))
}

type CustomAttributes struct {
	ref terra.Reference
}

func (c CustomAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c CustomAttributes) InternalWithRef(ref terra.Reference) CustomAttributes {
	return CustomAttributes{ref: ref}
}

func (c CustomAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c CustomAttributes) CredentialsMap() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](c.ref.Append("credentials_map"))
}

func (c CustomAttributes) CustomAuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("custom_authentication_type"))
}

type Oauth2Attributes struct {
	ref terra.Reference
}

func (o Oauth2Attributes) InternalRef() terra.Reference {
	return o.ref
}

func (o Oauth2Attributes) InternalWithRef(ref terra.Reference) Oauth2Attributes {
	return Oauth2Attributes{ref: ref}
}

func (o Oauth2Attributes) InternalTokens() hclwrite.Tokens {
	return o.ref.InternalTokens()
}

func (o Oauth2Attributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("access_token"))
}

func (o Oauth2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("client_id"))
}

func (o Oauth2Attributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("client_secret"))
}

func (o Oauth2Attributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("refresh_token"))
}

func (o Oauth2Attributes) OauthRequest() terra.ListValue[Oauth2OauthRequestAttributes] {
	return terra.ReferenceAsList[Oauth2OauthRequestAttributes](o.ref.Append("oauth_request"))
}

type Oauth2OauthRequestAttributes struct {
	ref terra.Reference
}

func (or Oauth2OauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or Oauth2OauthRequestAttributes) InternalWithRef(ref terra.Reference) Oauth2OauthRequestAttributes {
	return Oauth2OauthRequestAttributes{ref: ref}
}

func (or Oauth2OauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or Oauth2OauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or Oauth2OauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsDatadogAttributes struct {
	ref terra.Reference
}

func (d ConnectorProfileCredentialsDatadogAttributes) InternalRef() terra.Reference {
	return d.ref
}

func (d ConnectorProfileCredentialsDatadogAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsDatadogAttributes {
	return ConnectorProfileCredentialsDatadogAttributes{ref: ref}
}

func (d ConnectorProfileCredentialsDatadogAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d ConnectorProfileCredentialsDatadogAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("api_key"))
}

func (d ConnectorProfileCredentialsDatadogAttributes) ApplicationKey() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("application_key"))
}

type ConnectorProfileCredentialsDynatraceAttributes struct {
	ref terra.Reference
}

func (d ConnectorProfileCredentialsDynatraceAttributes) InternalRef() terra.Reference {
	return d.ref
}

func (d ConnectorProfileCredentialsDynatraceAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsDynatraceAttributes {
	return ConnectorProfileCredentialsDynatraceAttributes{ref: ref}
}

func (d ConnectorProfileCredentialsDynatraceAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d ConnectorProfileCredentialsDynatraceAttributes) ApiToken() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("api_token"))
}

type ConnectorProfileCredentialsGoogleAnalyticsAttributes struct {
	ref terra.Reference
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) InternalRef() terra.Reference {
	return ga.ref
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsGoogleAnalyticsAttributes {
	return ConnectorProfileCredentialsGoogleAnalyticsAttributes{ref: ref}
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) InternalTokens() hclwrite.Tokens {
	return ga.ref.InternalTokens()
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("access_token"))
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("client_id"))
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("client_secret"))
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("refresh_token"))
}

func (ga ConnectorProfileCredentialsGoogleAnalyticsAttributes) OauthRequest() terra.ListValue[GoogleAnalyticsOauthRequestAttributes] {
	return terra.ReferenceAsList[GoogleAnalyticsOauthRequestAttributes](ga.ref.Append("oauth_request"))
}

type GoogleAnalyticsOauthRequestAttributes struct {
	ref terra.Reference
}

func (or GoogleAnalyticsOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or GoogleAnalyticsOauthRequestAttributes) InternalWithRef(ref terra.Reference) GoogleAnalyticsOauthRequestAttributes {
	return GoogleAnalyticsOauthRequestAttributes{ref: ref}
}

func (or GoogleAnalyticsOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or GoogleAnalyticsOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or GoogleAnalyticsOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsHoneycodeAttributes struct {
	ref terra.Reference
}

func (h ConnectorProfileCredentialsHoneycodeAttributes) InternalRef() terra.Reference {
	return h.ref
}

func (h ConnectorProfileCredentialsHoneycodeAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsHoneycodeAttributes {
	return ConnectorProfileCredentialsHoneycodeAttributes{ref: ref}
}

func (h ConnectorProfileCredentialsHoneycodeAttributes) InternalTokens() hclwrite.Tokens {
	return h.ref.InternalTokens()
}

func (h ConnectorProfileCredentialsHoneycodeAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("access_token"))
}

func (h ConnectorProfileCredentialsHoneycodeAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("refresh_token"))
}

func (h ConnectorProfileCredentialsHoneycodeAttributes) OauthRequest() terra.ListValue[HoneycodeOauthRequestAttributes] {
	return terra.ReferenceAsList[HoneycodeOauthRequestAttributes](h.ref.Append("oauth_request"))
}

type HoneycodeOauthRequestAttributes struct {
	ref terra.Reference
}

func (or HoneycodeOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or HoneycodeOauthRequestAttributes) InternalWithRef(ref terra.Reference) HoneycodeOauthRequestAttributes {
	return HoneycodeOauthRequestAttributes{ref: ref}
}

func (or HoneycodeOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or HoneycodeOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or HoneycodeOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsInforNexusAttributes struct {
	ref terra.Reference
}

func (in ConnectorProfileCredentialsInforNexusAttributes) InternalRef() terra.Reference {
	return in.ref
}

func (in ConnectorProfileCredentialsInforNexusAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsInforNexusAttributes {
	return ConnectorProfileCredentialsInforNexusAttributes{ref: ref}
}

func (in ConnectorProfileCredentialsInforNexusAttributes) InternalTokens() hclwrite.Tokens {
	return in.ref.InternalTokens()
}

func (in ConnectorProfileCredentialsInforNexusAttributes) AccessKeyId() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("access_key_id"))
}

func (in ConnectorProfileCredentialsInforNexusAttributes) Datakey() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("datakey"))
}

func (in ConnectorProfileCredentialsInforNexusAttributes) SecretAccessKey() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("secret_access_key"))
}

func (in ConnectorProfileCredentialsInforNexusAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("user_id"))
}

type ConnectorProfileCredentialsMarketoAttributes struct {
	ref terra.Reference
}

func (m ConnectorProfileCredentialsMarketoAttributes) InternalRef() terra.Reference {
	return m.ref
}

func (m ConnectorProfileCredentialsMarketoAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsMarketoAttributes {
	return ConnectorProfileCredentialsMarketoAttributes{ref: ref}
}

func (m ConnectorProfileCredentialsMarketoAttributes) InternalTokens() hclwrite.Tokens {
	return m.ref.InternalTokens()
}

func (m ConnectorProfileCredentialsMarketoAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("access_token"))
}

func (m ConnectorProfileCredentialsMarketoAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_id"))
}

func (m ConnectorProfileCredentialsMarketoAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_secret"))
}

func (m ConnectorProfileCredentialsMarketoAttributes) OauthRequest() terra.ListValue[MarketoOauthRequestAttributes] {
	return terra.ReferenceAsList[MarketoOauthRequestAttributes](m.ref.Append("oauth_request"))
}

type MarketoOauthRequestAttributes struct {
	ref terra.Reference
}

func (or MarketoOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or MarketoOauthRequestAttributes) InternalWithRef(ref terra.Reference) MarketoOauthRequestAttributes {
	return MarketoOauthRequestAttributes{ref: ref}
}

func (or MarketoOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or MarketoOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or MarketoOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsRedshiftAttributes struct {
	ref terra.Reference
}

func (r ConnectorProfileCredentialsRedshiftAttributes) InternalRef() terra.Reference {
	return r.ref
}

func (r ConnectorProfileCredentialsRedshiftAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsRedshiftAttributes {
	return ConnectorProfileCredentialsRedshiftAttributes{ref: ref}
}

func (r ConnectorProfileCredentialsRedshiftAttributes) InternalTokens() hclwrite.Tokens {
	return r.ref.InternalTokens()
}

func (r ConnectorProfileCredentialsRedshiftAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("password"))
}

func (r ConnectorProfileCredentialsRedshiftAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("username"))
}

type ConnectorProfileCredentialsSalesforceAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfileCredentialsSalesforceAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfileCredentialsSalesforceAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsSalesforceAttributes {
	return ConnectorProfileCredentialsSalesforceAttributes{ref: ref}
}

func (s ConnectorProfileCredentialsSalesforceAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfileCredentialsSalesforceAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("access_token"))
}

func (s ConnectorProfileCredentialsSalesforceAttributes) ClientCredentialsArn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("client_credentials_arn"))
}

func (s ConnectorProfileCredentialsSalesforceAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("refresh_token"))
}

func (s ConnectorProfileCredentialsSalesforceAttributes) OauthRequest() terra.ListValue[SalesforceOauthRequestAttributes] {
	return terra.ReferenceAsList[SalesforceOauthRequestAttributes](s.ref.Append("oauth_request"))
}

type SalesforceOauthRequestAttributes struct {
	ref terra.Reference
}

func (or SalesforceOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or SalesforceOauthRequestAttributes) InternalWithRef(ref terra.Reference) SalesforceOauthRequestAttributes {
	return SalesforceOauthRequestAttributes{ref: ref}
}

func (or SalesforceOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or SalesforceOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or SalesforceOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsSapoDataAttributes struct {
	ref terra.Reference
}

func (sd ConnectorProfileCredentialsSapoDataAttributes) InternalRef() terra.Reference {
	return sd.ref
}

func (sd ConnectorProfileCredentialsSapoDataAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsSapoDataAttributes {
	return ConnectorProfileCredentialsSapoDataAttributes{ref: ref}
}

func (sd ConnectorProfileCredentialsSapoDataAttributes) InternalTokens() hclwrite.Tokens {
	return sd.ref.InternalTokens()
}

func (sd ConnectorProfileCredentialsSapoDataAttributes) BasicAuthCredentials() terra.ListValue[BasicAuthCredentialsAttributes] {
	return terra.ReferenceAsList[BasicAuthCredentialsAttributes](sd.ref.Append("basic_auth_credentials"))
}

func (sd ConnectorProfileCredentialsSapoDataAttributes) OauthCredentials() terra.ListValue[OauthCredentialsAttributes] {
	return terra.ReferenceAsList[OauthCredentialsAttributes](sd.ref.Append("oauth_credentials"))
}

type BasicAuthCredentialsAttributes struct {
	ref terra.Reference
}

func (bac BasicAuthCredentialsAttributes) InternalRef() terra.Reference {
	return bac.ref
}

func (bac BasicAuthCredentialsAttributes) InternalWithRef(ref terra.Reference) BasicAuthCredentialsAttributes {
	return BasicAuthCredentialsAttributes{ref: ref}
}

func (bac BasicAuthCredentialsAttributes) InternalTokens() hclwrite.Tokens {
	return bac.ref.InternalTokens()
}

func (bac BasicAuthCredentialsAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(bac.ref.Append("password"))
}

func (bac BasicAuthCredentialsAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(bac.ref.Append("username"))
}

type OauthCredentialsAttributes struct {
	ref terra.Reference
}

func (oc OauthCredentialsAttributes) InternalRef() terra.Reference {
	return oc.ref
}

func (oc OauthCredentialsAttributes) InternalWithRef(ref terra.Reference) OauthCredentialsAttributes {
	return OauthCredentialsAttributes{ref: ref}
}

func (oc OauthCredentialsAttributes) InternalTokens() hclwrite.Tokens {
	return oc.ref.InternalTokens()
}

func (oc OauthCredentialsAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("access_token"))
}

func (oc OauthCredentialsAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("client_id"))
}

func (oc OauthCredentialsAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("client_secret"))
}

func (oc OauthCredentialsAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("refresh_token"))
}

func (oc OauthCredentialsAttributes) OauthRequest() terra.ListValue[OauthCredentialsOauthRequestAttributes] {
	return terra.ReferenceAsList[OauthCredentialsOauthRequestAttributes](oc.ref.Append("oauth_request"))
}

type OauthCredentialsOauthRequestAttributes struct {
	ref terra.Reference
}

func (or OauthCredentialsOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or OauthCredentialsOauthRequestAttributes) InternalWithRef(ref terra.Reference) OauthCredentialsOauthRequestAttributes {
	return OauthCredentialsOauthRequestAttributes{ref: ref}
}

func (or OauthCredentialsOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or OauthCredentialsOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or OauthCredentialsOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsServiceNowAttributes struct {
	ref terra.Reference
}

func (sn ConnectorProfileCredentialsServiceNowAttributes) InternalRef() terra.Reference {
	return sn.ref
}

func (sn ConnectorProfileCredentialsServiceNowAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsServiceNowAttributes {
	return ConnectorProfileCredentialsServiceNowAttributes{ref: ref}
}

func (sn ConnectorProfileCredentialsServiceNowAttributes) InternalTokens() hclwrite.Tokens {
	return sn.ref.InternalTokens()
}

func (sn ConnectorProfileCredentialsServiceNowAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("password"))
}

func (sn ConnectorProfileCredentialsServiceNowAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("username"))
}

type ConnectorProfileCredentialsSingularAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfileCredentialsSingularAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfileCredentialsSingularAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsSingularAttributes {
	return ConnectorProfileCredentialsSingularAttributes{ref: ref}
}

func (s ConnectorProfileCredentialsSingularAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfileCredentialsSingularAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("api_key"))
}

type ConnectorProfileCredentialsSlackAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfileCredentialsSlackAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfileCredentialsSlackAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsSlackAttributes {
	return ConnectorProfileCredentialsSlackAttributes{ref: ref}
}

func (s ConnectorProfileCredentialsSlackAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfileCredentialsSlackAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("access_token"))
}

func (s ConnectorProfileCredentialsSlackAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("client_id"))
}

func (s ConnectorProfileCredentialsSlackAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("client_secret"))
}

func (s ConnectorProfileCredentialsSlackAttributes) OauthRequest() terra.ListValue[SlackOauthRequestAttributes] {
	return terra.ReferenceAsList[SlackOauthRequestAttributes](s.ref.Append("oauth_request"))
}

type SlackOauthRequestAttributes struct {
	ref terra.Reference
}

func (or SlackOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or SlackOauthRequestAttributes) InternalWithRef(ref terra.Reference) SlackOauthRequestAttributes {
	return SlackOauthRequestAttributes{ref: ref}
}

func (or SlackOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or SlackOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or SlackOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfileCredentialsSnowflakeAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfileCredentialsSnowflakeAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfileCredentialsSnowflakeAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsSnowflakeAttributes {
	return ConnectorProfileCredentialsSnowflakeAttributes{ref: ref}
}

func (s ConnectorProfileCredentialsSnowflakeAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfileCredentialsSnowflakeAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("password"))
}

func (s ConnectorProfileCredentialsSnowflakeAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("username"))
}

type ConnectorProfileCredentialsTrendmicroAttributes struct {
	ref terra.Reference
}

func (t ConnectorProfileCredentialsTrendmicroAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t ConnectorProfileCredentialsTrendmicroAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsTrendmicroAttributes {
	return ConnectorProfileCredentialsTrendmicroAttributes{ref: ref}
}

func (t ConnectorProfileCredentialsTrendmicroAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t ConnectorProfileCredentialsTrendmicroAttributes) ApiSecretKey() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("api_secret_key"))
}

type ConnectorProfileCredentialsVeevaAttributes struct {
	ref terra.Reference
}

func (v ConnectorProfileCredentialsVeevaAttributes) InternalRef() terra.Reference {
	return v.ref
}

func (v ConnectorProfileCredentialsVeevaAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsVeevaAttributes {
	return ConnectorProfileCredentialsVeevaAttributes{ref: ref}
}

func (v ConnectorProfileCredentialsVeevaAttributes) InternalTokens() hclwrite.Tokens {
	return v.ref.InternalTokens()
}

func (v ConnectorProfileCredentialsVeevaAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("password"))
}

func (v ConnectorProfileCredentialsVeevaAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("username"))
}

type ConnectorProfileCredentialsZendeskAttributes struct {
	ref terra.Reference
}

func (z ConnectorProfileCredentialsZendeskAttributes) InternalRef() terra.Reference {
	return z.ref
}

func (z ConnectorProfileCredentialsZendeskAttributes) InternalWithRef(ref terra.Reference) ConnectorProfileCredentialsZendeskAttributes {
	return ConnectorProfileCredentialsZendeskAttributes{ref: ref}
}

func (z ConnectorProfileCredentialsZendeskAttributes) InternalTokens() hclwrite.Tokens {
	return z.ref.InternalTokens()
}

func (z ConnectorProfileCredentialsZendeskAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("access_token"))
}

func (z ConnectorProfileCredentialsZendeskAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("client_id"))
}

func (z ConnectorProfileCredentialsZendeskAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("client_secret"))
}

func (z ConnectorProfileCredentialsZendeskAttributes) OauthRequest() terra.ListValue[ZendeskOauthRequestAttributes] {
	return terra.ReferenceAsList[ZendeskOauthRequestAttributes](z.ref.Append("oauth_request"))
}

type ZendeskOauthRequestAttributes struct {
	ref terra.Reference
}

func (or ZendeskOauthRequestAttributes) InternalRef() terra.Reference {
	return or.ref
}

func (or ZendeskOauthRequestAttributes) InternalWithRef(ref terra.Reference) ZendeskOauthRequestAttributes {
	return ZendeskOauthRequestAttributes{ref: ref}
}

func (or ZendeskOauthRequestAttributes) InternalTokens() hclwrite.Tokens {
	return or.ref.InternalTokens()
}

func (or ZendeskOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or ZendeskOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type ConnectorProfilePropertiesAttributes struct {
	ref terra.Reference
}

func (cpp ConnectorProfilePropertiesAttributes) InternalRef() terra.Reference {
	return cpp.ref
}

func (cpp ConnectorProfilePropertiesAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesAttributes {
	return ConnectorProfilePropertiesAttributes{ref: ref}
}

func (cpp ConnectorProfilePropertiesAttributes) InternalTokens() hclwrite.Tokens {
	return cpp.ref.InternalTokens()
}

func (cpp ConnectorProfilePropertiesAttributes) Amplitude() terra.ListValue[ConnectorProfilePropertiesAmplitudeAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesAmplitudeAttributes](cpp.ref.Append("amplitude"))
}

func (cpp ConnectorProfilePropertiesAttributes) CustomConnector() terra.ListValue[ConnectorProfilePropertiesCustomConnectorAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesCustomConnectorAttributes](cpp.ref.Append("custom_connector"))
}

func (cpp ConnectorProfilePropertiesAttributes) Datadog() terra.ListValue[ConnectorProfilePropertiesDatadogAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesDatadogAttributes](cpp.ref.Append("datadog"))
}

func (cpp ConnectorProfilePropertiesAttributes) Dynatrace() terra.ListValue[ConnectorProfilePropertiesDynatraceAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesDynatraceAttributes](cpp.ref.Append("dynatrace"))
}

func (cpp ConnectorProfilePropertiesAttributes) GoogleAnalytics() terra.ListValue[ConnectorProfilePropertiesGoogleAnalyticsAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesGoogleAnalyticsAttributes](cpp.ref.Append("google_analytics"))
}

func (cpp ConnectorProfilePropertiesAttributes) Honeycode() terra.ListValue[ConnectorProfilePropertiesHoneycodeAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesHoneycodeAttributes](cpp.ref.Append("honeycode"))
}

func (cpp ConnectorProfilePropertiesAttributes) InforNexus() terra.ListValue[ConnectorProfilePropertiesInforNexusAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesInforNexusAttributes](cpp.ref.Append("infor_nexus"))
}

func (cpp ConnectorProfilePropertiesAttributes) Marketo() terra.ListValue[ConnectorProfilePropertiesMarketoAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesMarketoAttributes](cpp.ref.Append("marketo"))
}

func (cpp ConnectorProfilePropertiesAttributes) Redshift() terra.ListValue[ConnectorProfilePropertiesRedshiftAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesRedshiftAttributes](cpp.ref.Append("redshift"))
}

func (cpp ConnectorProfilePropertiesAttributes) Salesforce() terra.ListValue[ConnectorProfilePropertiesSalesforceAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesSalesforceAttributes](cpp.ref.Append("salesforce"))
}

func (cpp ConnectorProfilePropertiesAttributes) SapoData() terra.ListValue[ConnectorProfilePropertiesSapoDataAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesSapoDataAttributes](cpp.ref.Append("sapo_data"))
}

func (cpp ConnectorProfilePropertiesAttributes) ServiceNow() terra.ListValue[ConnectorProfilePropertiesServiceNowAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesServiceNowAttributes](cpp.ref.Append("service_now"))
}

func (cpp ConnectorProfilePropertiesAttributes) Singular() terra.ListValue[ConnectorProfilePropertiesSingularAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesSingularAttributes](cpp.ref.Append("singular"))
}

func (cpp ConnectorProfilePropertiesAttributes) Slack() terra.ListValue[ConnectorProfilePropertiesSlackAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesSlackAttributes](cpp.ref.Append("slack"))
}

func (cpp ConnectorProfilePropertiesAttributes) Snowflake() terra.ListValue[ConnectorProfilePropertiesSnowflakeAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesSnowflakeAttributes](cpp.ref.Append("snowflake"))
}

func (cpp ConnectorProfilePropertiesAttributes) Trendmicro() terra.ListValue[ConnectorProfilePropertiesTrendmicroAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesTrendmicroAttributes](cpp.ref.Append("trendmicro"))
}

func (cpp ConnectorProfilePropertiesAttributes) Veeva() terra.ListValue[ConnectorProfilePropertiesVeevaAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesVeevaAttributes](cpp.ref.Append("veeva"))
}

func (cpp ConnectorProfilePropertiesAttributes) Zendesk() terra.ListValue[ConnectorProfilePropertiesZendeskAttributes] {
	return terra.ReferenceAsList[ConnectorProfilePropertiesZendeskAttributes](cpp.ref.Append("zendesk"))
}

type ConnectorProfilePropertiesAmplitudeAttributes struct {
	ref terra.Reference
}

func (a ConnectorProfilePropertiesAmplitudeAttributes) InternalRef() terra.Reference {
	return a.ref
}

func (a ConnectorProfilePropertiesAmplitudeAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesAmplitudeAttributes {
	return ConnectorProfilePropertiesAmplitudeAttributes{ref: ref}
}

func (a ConnectorProfilePropertiesAmplitudeAttributes) InternalTokens() hclwrite.Tokens {
	return a.ref.InternalTokens()
}

type ConnectorProfilePropertiesCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc ConnectorProfilePropertiesCustomConnectorAttributes) InternalRef() terra.Reference {
	return cc.ref
}

func (cc ConnectorProfilePropertiesCustomConnectorAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesCustomConnectorAttributes {
	return ConnectorProfilePropertiesCustomConnectorAttributes{ref: ref}
}

func (cc ConnectorProfilePropertiesCustomConnectorAttributes) InternalTokens() hclwrite.Tokens {
	return cc.ref.InternalTokens()
}

func (cc ConnectorProfilePropertiesCustomConnectorAttributes) ProfileProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cc.ref.Append("profile_properties"))
}

func (cc ConnectorProfilePropertiesCustomConnectorAttributes) Oauth2Properties() terra.ListValue[Oauth2PropertiesAttributes] {
	return terra.ReferenceAsList[Oauth2PropertiesAttributes](cc.ref.Append("oauth2_properties"))
}

type Oauth2PropertiesAttributes struct {
	ref terra.Reference
}

func (op Oauth2PropertiesAttributes) InternalRef() terra.Reference {
	return op.ref
}

func (op Oauth2PropertiesAttributes) InternalWithRef(ref terra.Reference) Oauth2PropertiesAttributes {
	return Oauth2PropertiesAttributes{ref: ref}
}

func (op Oauth2PropertiesAttributes) InternalTokens() hclwrite.Tokens {
	return op.ref.InternalTokens()
}

func (op Oauth2PropertiesAttributes) Oauth2GrantType() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("oauth2_grant_type"))
}

func (op Oauth2PropertiesAttributes) TokenUrl() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("token_url"))
}

func (op Oauth2PropertiesAttributes) TokenUrlCustomProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](op.ref.Append("token_url_custom_properties"))
}

type ConnectorProfilePropertiesDatadogAttributes struct {
	ref terra.Reference
}

func (d ConnectorProfilePropertiesDatadogAttributes) InternalRef() terra.Reference {
	return d.ref
}

func (d ConnectorProfilePropertiesDatadogAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesDatadogAttributes {
	return ConnectorProfilePropertiesDatadogAttributes{ref: ref}
}

func (d ConnectorProfilePropertiesDatadogAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d ConnectorProfilePropertiesDatadogAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesDynatraceAttributes struct {
	ref terra.Reference
}

func (d ConnectorProfilePropertiesDynatraceAttributes) InternalRef() terra.Reference {
	return d.ref
}

func (d ConnectorProfilePropertiesDynatraceAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesDynatraceAttributes {
	return ConnectorProfilePropertiesDynatraceAttributes{ref: ref}
}

func (d ConnectorProfilePropertiesDynatraceAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d ConnectorProfilePropertiesDynatraceAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesGoogleAnalyticsAttributes struct {
	ref terra.Reference
}

func (ga ConnectorProfilePropertiesGoogleAnalyticsAttributes) InternalRef() terra.Reference {
	return ga.ref
}

func (ga ConnectorProfilePropertiesGoogleAnalyticsAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesGoogleAnalyticsAttributes {
	return ConnectorProfilePropertiesGoogleAnalyticsAttributes{ref: ref}
}

func (ga ConnectorProfilePropertiesGoogleAnalyticsAttributes) InternalTokens() hclwrite.Tokens {
	return ga.ref.InternalTokens()
}

type ConnectorProfilePropertiesHoneycodeAttributes struct {
	ref terra.Reference
}

func (h ConnectorProfilePropertiesHoneycodeAttributes) InternalRef() terra.Reference {
	return h.ref
}

func (h ConnectorProfilePropertiesHoneycodeAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesHoneycodeAttributes {
	return ConnectorProfilePropertiesHoneycodeAttributes{ref: ref}
}

func (h ConnectorProfilePropertiesHoneycodeAttributes) InternalTokens() hclwrite.Tokens {
	return h.ref.InternalTokens()
}

type ConnectorProfilePropertiesInforNexusAttributes struct {
	ref terra.Reference
}

func (in ConnectorProfilePropertiesInforNexusAttributes) InternalRef() terra.Reference {
	return in.ref
}

func (in ConnectorProfilePropertiesInforNexusAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesInforNexusAttributes {
	return ConnectorProfilePropertiesInforNexusAttributes{ref: ref}
}

func (in ConnectorProfilePropertiesInforNexusAttributes) InternalTokens() hclwrite.Tokens {
	return in.ref.InternalTokens()
}

func (in ConnectorProfilePropertiesInforNexusAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesMarketoAttributes struct {
	ref terra.Reference
}

func (m ConnectorProfilePropertiesMarketoAttributes) InternalRef() terra.Reference {
	return m.ref
}

func (m ConnectorProfilePropertiesMarketoAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesMarketoAttributes {
	return ConnectorProfilePropertiesMarketoAttributes{ref: ref}
}

func (m ConnectorProfilePropertiesMarketoAttributes) InternalTokens() hclwrite.Tokens {
	return m.ref.InternalTokens()
}

func (m ConnectorProfilePropertiesMarketoAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesRedshiftAttributes struct {
	ref terra.Reference
}

func (r ConnectorProfilePropertiesRedshiftAttributes) InternalRef() terra.Reference {
	return r.ref
}

func (r ConnectorProfilePropertiesRedshiftAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesRedshiftAttributes {
	return ConnectorProfilePropertiesRedshiftAttributes{ref: ref}
}

func (r ConnectorProfilePropertiesRedshiftAttributes) InternalTokens() hclwrite.Tokens {
	return r.ref.InternalTokens()
}

func (r ConnectorProfilePropertiesRedshiftAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_name"))
}

func (r ConnectorProfilePropertiesRedshiftAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_prefix"))
}

func (r ConnectorProfilePropertiesRedshiftAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("cluster_identifier"))
}

func (r ConnectorProfilePropertiesRedshiftAttributes) DataApiRoleArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("data_api_role_arn"))
}

func (r ConnectorProfilePropertiesRedshiftAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("database_name"))
}

func (r ConnectorProfilePropertiesRedshiftAttributes) DatabaseUrl() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("database_url"))
}

func (r ConnectorProfilePropertiesRedshiftAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("role_arn"))
}

type ConnectorProfilePropertiesSalesforceAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfilePropertiesSalesforceAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfilePropertiesSalesforceAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesSalesforceAttributes {
	return ConnectorProfilePropertiesSalesforceAttributes{ref: ref}
}

func (s ConnectorProfilePropertiesSalesforceAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfilePropertiesSalesforceAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("instance_url"))
}

func (s ConnectorProfilePropertiesSalesforceAttributes) IsSandboxEnvironment() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("is_sandbox_environment"))
}

type ConnectorProfilePropertiesSapoDataAttributes struct {
	ref terra.Reference
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) InternalRef() terra.Reference {
	return sd.ref
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesSapoDataAttributes {
	return ConnectorProfilePropertiesSapoDataAttributes{ref: ref}
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) InternalTokens() hclwrite.Tokens {
	return sd.ref.InternalTokens()
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) ApplicationHostUrl() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("application_host_url"))
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) ApplicationServicePath() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("application_service_path"))
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) ClientNumber() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("client_number"))
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) LogonLanguage() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("logon_language"))
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) PortNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(sd.ref.Append("port_number"))
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) PrivateLinkServiceName() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("private_link_service_name"))
}

func (sd ConnectorProfilePropertiesSapoDataAttributes) OauthProperties() terra.ListValue[OauthPropertiesAttributes] {
	return terra.ReferenceAsList[OauthPropertiesAttributes](sd.ref.Append("oauth_properties"))
}

type OauthPropertiesAttributes struct {
	ref terra.Reference
}

func (op OauthPropertiesAttributes) InternalRef() terra.Reference {
	return op.ref
}

func (op OauthPropertiesAttributes) InternalWithRef(ref terra.Reference) OauthPropertiesAttributes {
	return OauthPropertiesAttributes{ref: ref}
}

func (op OauthPropertiesAttributes) InternalTokens() hclwrite.Tokens {
	return op.ref.InternalTokens()
}

func (op OauthPropertiesAttributes) AuthCodeUrl() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("auth_code_url"))
}

func (op OauthPropertiesAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](op.ref.Append("oauth_scopes"))
}

func (op OauthPropertiesAttributes) TokenUrl() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("token_url"))
}

type ConnectorProfilePropertiesServiceNowAttributes struct {
	ref terra.Reference
}

func (sn ConnectorProfilePropertiesServiceNowAttributes) InternalRef() terra.Reference {
	return sn.ref
}

func (sn ConnectorProfilePropertiesServiceNowAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesServiceNowAttributes {
	return ConnectorProfilePropertiesServiceNowAttributes{ref: ref}
}

func (sn ConnectorProfilePropertiesServiceNowAttributes) InternalTokens() hclwrite.Tokens {
	return sn.ref.InternalTokens()
}

func (sn ConnectorProfilePropertiesServiceNowAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesSingularAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfilePropertiesSingularAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfilePropertiesSingularAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesSingularAttributes {
	return ConnectorProfilePropertiesSingularAttributes{ref: ref}
}

func (s ConnectorProfilePropertiesSingularAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

type ConnectorProfilePropertiesSlackAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfilePropertiesSlackAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfilePropertiesSlackAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesSlackAttributes {
	return ConnectorProfilePropertiesSlackAttributes{ref: ref}
}

func (s ConnectorProfilePropertiesSlackAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfilePropertiesSlackAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesSnowflakeAttributes struct {
	ref terra.Reference
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesSnowflakeAttributes {
	return ConnectorProfilePropertiesSnowflakeAttributes{ref: ref}
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("account_name"))
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_name"))
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) PrivateLinkServiceName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("private_link_service_name"))
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("region"))
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) Stage() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("stage"))
}

func (s ConnectorProfilePropertiesSnowflakeAttributes) Warehouse() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("warehouse"))
}

type ConnectorProfilePropertiesTrendmicroAttributes struct {
	ref terra.Reference
}

func (t ConnectorProfilePropertiesTrendmicroAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t ConnectorProfilePropertiesTrendmicroAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesTrendmicroAttributes {
	return ConnectorProfilePropertiesTrendmicroAttributes{ref: ref}
}

func (t ConnectorProfilePropertiesTrendmicroAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

type ConnectorProfilePropertiesVeevaAttributes struct {
	ref terra.Reference
}

func (v ConnectorProfilePropertiesVeevaAttributes) InternalRef() terra.Reference {
	return v.ref
}

func (v ConnectorProfilePropertiesVeevaAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesVeevaAttributes {
	return ConnectorProfilePropertiesVeevaAttributes{ref: ref}
}

func (v ConnectorProfilePropertiesVeevaAttributes) InternalTokens() hclwrite.Tokens {
	return v.ref.InternalTokens()
}

func (v ConnectorProfilePropertiesVeevaAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("instance_url"))
}

type ConnectorProfilePropertiesZendeskAttributes struct {
	ref terra.Reference
}

func (z ConnectorProfilePropertiesZendeskAttributes) InternalRef() terra.Reference {
	return z.ref
}

func (z ConnectorProfilePropertiesZendeskAttributes) InternalWithRef(ref terra.Reference) ConnectorProfilePropertiesZendeskAttributes {
	return ConnectorProfilePropertiesZendeskAttributes{ref: ref}
}

func (z ConnectorProfilePropertiesZendeskAttributes) InternalTokens() hclwrite.Tokens {
	return z.ref.InternalTokens()
}

func (z ConnectorProfilePropertiesZendeskAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("instance_url"))
}

type ConnectorProfileConfigState struct {
	ConnectorProfileCredentials []ConnectorProfileCredentialsState `json:"connector_profile_credentials"`
	ConnectorProfileProperties  []ConnectorProfilePropertiesState  `json:"connector_profile_properties"`
}

type ConnectorProfileCredentialsState struct {
	Amplitude       []ConnectorProfileCredentialsAmplitudeState       `json:"amplitude"`
	CustomConnector []ConnectorProfileCredentialsCustomConnectorState `json:"custom_connector"`
	Datadog         []ConnectorProfileCredentialsDatadogState         `json:"datadog"`
	Dynatrace       []ConnectorProfileCredentialsDynatraceState       `json:"dynatrace"`
	GoogleAnalytics []ConnectorProfileCredentialsGoogleAnalyticsState `json:"google_analytics"`
	Honeycode       []ConnectorProfileCredentialsHoneycodeState       `json:"honeycode"`
	InforNexus      []ConnectorProfileCredentialsInforNexusState      `json:"infor_nexus"`
	Marketo         []ConnectorProfileCredentialsMarketoState         `json:"marketo"`
	Redshift        []ConnectorProfileCredentialsRedshiftState        `json:"redshift"`
	Salesforce      []ConnectorProfileCredentialsSalesforceState      `json:"salesforce"`
	SapoData        []ConnectorProfileCredentialsSapoDataState        `json:"sapo_data"`
	ServiceNow      []ConnectorProfileCredentialsServiceNowState      `json:"service_now"`
	Singular        []ConnectorProfileCredentialsSingularState        `json:"singular"`
	Slack           []ConnectorProfileCredentialsSlackState           `json:"slack"`
	Snowflake       []ConnectorProfileCredentialsSnowflakeState       `json:"snowflake"`
	Trendmicro      []ConnectorProfileCredentialsTrendmicroState      `json:"trendmicro"`
	Veeva           []ConnectorProfileCredentialsVeevaState           `json:"veeva"`
	Zendesk         []ConnectorProfileCredentialsZendeskState         `json:"zendesk"`
}

type ConnectorProfileCredentialsAmplitudeState struct {
	ApiKey    string `json:"api_key"`
	SecretKey string `json:"secret_key"`
}

type ConnectorProfileCredentialsCustomConnectorState struct {
	AuthenticationType string        `json:"authentication_type"`
	ApiKey             []ApiKeyState `json:"api_key"`
	Basic              []BasicState  `json:"basic"`
	Custom             []CustomState `json:"custom"`
	Oauth2             []Oauth2State `json:"oauth2"`
}

type ApiKeyState struct {
	ApiKey       string `json:"api_key"`
	ApiSecretKey string `json:"api_secret_key"`
}

type BasicState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type CustomState struct {
	CredentialsMap           map[string]string `json:"credentials_map"`
	CustomAuthenticationType string            `json:"custom_authentication_type"`
}

type Oauth2State struct {
	AccessToken  string                    `json:"access_token"`
	ClientId     string                    `json:"client_id"`
	ClientSecret string                    `json:"client_secret"`
	RefreshToken string                    `json:"refresh_token"`
	OauthRequest []Oauth2OauthRequestState `json:"oauth_request"`
}

type Oauth2OauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsDatadogState struct {
	ApiKey         string `json:"api_key"`
	ApplicationKey string `json:"application_key"`
}

type ConnectorProfileCredentialsDynatraceState struct {
	ApiToken string `json:"api_token"`
}

type ConnectorProfileCredentialsGoogleAnalyticsState struct {
	AccessToken  string                             `json:"access_token"`
	ClientId     string                             `json:"client_id"`
	ClientSecret string                             `json:"client_secret"`
	RefreshToken string                             `json:"refresh_token"`
	OauthRequest []GoogleAnalyticsOauthRequestState `json:"oauth_request"`
}

type GoogleAnalyticsOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsHoneycodeState struct {
	AccessToken  string                       `json:"access_token"`
	RefreshToken string                       `json:"refresh_token"`
	OauthRequest []HoneycodeOauthRequestState `json:"oauth_request"`
}

type HoneycodeOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsInforNexusState struct {
	AccessKeyId     string `json:"access_key_id"`
	Datakey         string `json:"datakey"`
	SecretAccessKey string `json:"secret_access_key"`
	UserId          string `json:"user_id"`
}

type ConnectorProfileCredentialsMarketoState struct {
	AccessToken  string                     `json:"access_token"`
	ClientId     string                     `json:"client_id"`
	ClientSecret string                     `json:"client_secret"`
	OauthRequest []MarketoOauthRequestState `json:"oauth_request"`
}

type MarketoOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsRedshiftState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileCredentialsSalesforceState struct {
	AccessToken          string                        `json:"access_token"`
	ClientCredentialsArn string                        `json:"client_credentials_arn"`
	RefreshToken         string                        `json:"refresh_token"`
	OauthRequest         []SalesforceOauthRequestState `json:"oauth_request"`
}

type SalesforceOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsSapoDataState struct {
	BasicAuthCredentials []BasicAuthCredentialsState `json:"basic_auth_credentials"`
	OauthCredentials     []OauthCredentialsState     `json:"oauth_credentials"`
}

type BasicAuthCredentialsState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type OauthCredentialsState struct {
	AccessToken  string                              `json:"access_token"`
	ClientId     string                              `json:"client_id"`
	ClientSecret string                              `json:"client_secret"`
	RefreshToken string                              `json:"refresh_token"`
	OauthRequest []OauthCredentialsOauthRequestState `json:"oauth_request"`
}

type OauthCredentialsOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsServiceNowState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileCredentialsSingularState struct {
	ApiKey string `json:"api_key"`
}

type ConnectorProfileCredentialsSlackState struct {
	AccessToken  string                   `json:"access_token"`
	ClientId     string                   `json:"client_id"`
	ClientSecret string                   `json:"client_secret"`
	OauthRequest []SlackOauthRequestState `json:"oauth_request"`
}

type SlackOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileCredentialsSnowflakeState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileCredentialsTrendmicroState struct {
	ApiSecretKey string `json:"api_secret_key"`
}

type ConnectorProfileCredentialsVeevaState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileCredentialsZendeskState struct {
	AccessToken  string                     `json:"access_token"`
	ClientId     string                     `json:"client_id"`
	ClientSecret string                     `json:"client_secret"`
	OauthRequest []ZendeskOauthRequestState `json:"oauth_request"`
}

type ZendeskOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfilePropertiesState struct {
	Amplitude       []ConnectorProfilePropertiesAmplitudeState       `json:"amplitude"`
	CustomConnector []ConnectorProfilePropertiesCustomConnectorState `json:"custom_connector"`
	Datadog         []ConnectorProfilePropertiesDatadogState         `json:"datadog"`
	Dynatrace       []ConnectorProfilePropertiesDynatraceState       `json:"dynatrace"`
	GoogleAnalytics []ConnectorProfilePropertiesGoogleAnalyticsState `json:"google_analytics"`
	Honeycode       []ConnectorProfilePropertiesHoneycodeState       `json:"honeycode"`
	InforNexus      []ConnectorProfilePropertiesInforNexusState      `json:"infor_nexus"`
	Marketo         []ConnectorProfilePropertiesMarketoState         `json:"marketo"`
	Redshift        []ConnectorProfilePropertiesRedshiftState        `json:"redshift"`
	Salesforce      []ConnectorProfilePropertiesSalesforceState      `json:"salesforce"`
	SapoData        []ConnectorProfilePropertiesSapoDataState        `json:"sapo_data"`
	ServiceNow      []ConnectorProfilePropertiesServiceNowState      `json:"service_now"`
	Singular        []ConnectorProfilePropertiesSingularState        `json:"singular"`
	Slack           []ConnectorProfilePropertiesSlackState           `json:"slack"`
	Snowflake       []ConnectorProfilePropertiesSnowflakeState       `json:"snowflake"`
	Trendmicro      []ConnectorProfilePropertiesTrendmicroState      `json:"trendmicro"`
	Veeva           []ConnectorProfilePropertiesVeevaState           `json:"veeva"`
	Zendesk         []ConnectorProfilePropertiesZendeskState         `json:"zendesk"`
}

type ConnectorProfilePropertiesAmplitudeState struct{}

type ConnectorProfilePropertiesCustomConnectorState struct {
	ProfileProperties map[string]string       `json:"profile_properties"`
	Oauth2Properties  []Oauth2PropertiesState `json:"oauth2_properties"`
}

type Oauth2PropertiesState struct {
	Oauth2GrantType          string            `json:"oauth2_grant_type"`
	TokenUrl                 string            `json:"token_url"`
	TokenUrlCustomProperties map[string]string `json:"token_url_custom_properties"`
}

type ConnectorProfilePropertiesDatadogState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesDynatraceState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesGoogleAnalyticsState struct{}

type ConnectorProfilePropertiesHoneycodeState struct{}

type ConnectorProfilePropertiesInforNexusState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesMarketoState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesRedshiftState struct {
	BucketName        string `json:"bucket_name"`
	BucketPrefix      string `json:"bucket_prefix"`
	ClusterIdentifier string `json:"cluster_identifier"`
	DataApiRoleArn    string `json:"data_api_role_arn"`
	DatabaseName      string `json:"database_name"`
	DatabaseUrl       string `json:"database_url"`
	RoleArn           string `json:"role_arn"`
}

type ConnectorProfilePropertiesSalesforceState struct {
	InstanceUrl          string `json:"instance_url"`
	IsSandboxEnvironment bool   `json:"is_sandbox_environment"`
}

type ConnectorProfilePropertiesSapoDataState struct {
	ApplicationHostUrl     string                 `json:"application_host_url"`
	ApplicationServicePath string                 `json:"application_service_path"`
	ClientNumber           string                 `json:"client_number"`
	LogonLanguage          string                 `json:"logon_language"`
	PortNumber             float64                `json:"port_number"`
	PrivateLinkServiceName string                 `json:"private_link_service_name"`
	OauthProperties        []OauthPropertiesState `json:"oauth_properties"`
}

type OauthPropertiesState struct {
	AuthCodeUrl string   `json:"auth_code_url"`
	OauthScopes []string `json:"oauth_scopes"`
	TokenUrl    string   `json:"token_url"`
}

type ConnectorProfilePropertiesServiceNowState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesSingularState struct{}

type ConnectorProfilePropertiesSlackState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesSnowflakeState struct {
	AccountName            string `json:"account_name"`
	BucketName             string `json:"bucket_name"`
	BucketPrefix           string `json:"bucket_prefix"`
	PrivateLinkServiceName string `json:"private_link_service_name"`
	Region                 string `json:"region"`
	Stage                  string `json:"stage"`
	Warehouse              string `json:"warehouse"`
}

type ConnectorProfilePropertiesTrendmicroState struct{}

type ConnectorProfilePropertiesVeevaState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfilePropertiesZendeskState struct {
	InstanceUrl string `json:"instance_url"`
}
