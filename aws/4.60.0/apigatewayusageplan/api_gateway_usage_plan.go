// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package apigatewayusageplan

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ApiStages struct {
	// ApiId: string, required
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// Stage: string, required
	Stage terra.StringValue `hcl:"stage,attr" validate:"required"`
	// Throttle: min=0
	Throttle []Throttle `hcl:"throttle,block" validate:"min=0"`
}

type Throttle struct {
	// BurstLimit: number, optional
	BurstLimit terra.NumberValue `hcl:"burst_limit,attr"`
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// RateLimit: number, optional
	RateLimit terra.NumberValue `hcl:"rate_limit,attr"`
}

type QuotaSettings struct {
	// Limit: number, required
	Limit terra.NumberValue `hcl:"limit,attr" validate:"required"`
	// Offset: number, optional
	Offset terra.NumberValue `hcl:"offset,attr"`
	// Period: string, required
	Period terra.StringValue `hcl:"period,attr" validate:"required"`
}

type ThrottleSettings struct {
	// BurstLimit: number, optional
	BurstLimit terra.NumberValue `hcl:"burst_limit,attr"`
	// RateLimit: number, optional
	RateLimit terra.NumberValue `hcl:"rate_limit,attr"`
}

type ApiStagesAttributes struct {
	ref terra.Reference
}

func (as ApiStagesAttributes) InternalRef() terra.Reference {
	return as.ref
}

func (as ApiStagesAttributes) InternalWithRef(ref terra.Reference) ApiStagesAttributes {
	return ApiStagesAttributes{ref: ref}
}

func (as ApiStagesAttributes) InternalTokens() hclwrite.Tokens {
	return as.ref.InternalTokens()
}

func (as ApiStagesAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("api_id"))
}

func (as ApiStagesAttributes) Stage() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("stage"))
}

func (as ApiStagesAttributes) Throttle() terra.SetValue[ThrottleAttributes] {
	return terra.ReferenceAsSet[ThrottleAttributes](as.ref.Append("throttle"))
}

type ThrottleAttributes struct {
	ref terra.Reference
}

func (t ThrottleAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t ThrottleAttributes) InternalWithRef(ref terra.Reference) ThrottleAttributes {
	return ThrottleAttributes{ref: ref}
}

func (t ThrottleAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t ThrottleAttributes) BurstLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("burst_limit"))
}

func (t ThrottleAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("path"))
}

func (t ThrottleAttributes) RateLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("rate_limit"))
}

type QuotaSettingsAttributes struct {
	ref terra.Reference
}

func (qs QuotaSettingsAttributes) InternalRef() terra.Reference {
	return qs.ref
}

func (qs QuotaSettingsAttributes) InternalWithRef(ref terra.Reference) QuotaSettingsAttributes {
	return QuotaSettingsAttributes{ref: ref}
}

func (qs QuotaSettingsAttributes) InternalTokens() hclwrite.Tokens {
	return qs.ref.InternalTokens()
}

func (qs QuotaSettingsAttributes) Limit() terra.NumberValue {
	return terra.ReferenceAsNumber(qs.ref.Append("limit"))
}

func (qs QuotaSettingsAttributes) Offset() terra.NumberValue {
	return terra.ReferenceAsNumber(qs.ref.Append("offset"))
}

func (qs QuotaSettingsAttributes) Period() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("period"))
}

type ThrottleSettingsAttributes struct {
	ref terra.Reference
}

func (ts ThrottleSettingsAttributes) InternalRef() terra.Reference {
	return ts.ref
}

func (ts ThrottleSettingsAttributes) InternalWithRef(ref terra.Reference) ThrottleSettingsAttributes {
	return ThrottleSettingsAttributes{ref: ref}
}

func (ts ThrottleSettingsAttributes) InternalTokens() hclwrite.Tokens {
	return ts.ref.InternalTokens()
}

func (ts ThrottleSettingsAttributes) BurstLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("burst_limit"))
}

func (ts ThrottleSettingsAttributes) RateLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("rate_limit"))
}

type ApiStagesState struct {
	ApiId    string          `json:"api_id"`
	Stage    string          `json:"stage"`
	Throttle []ThrottleState `json:"throttle"`
}

type ThrottleState struct {
	BurstLimit float64 `json:"burst_limit"`
	Path       string  `json:"path"`
	RateLimit  float64 `json:"rate_limit"`
}

type QuotaSettingsState struct {
	Limit  float64 `json:"limit"`
	Offset float64 `json:"offset"`
	Period string  `json:"period"`
}

type ThrottleSettingsState struct {
	BurstLimit float64 `json:"burst_limit"`
	RateLimit  float64 `json:"rate_limit"`
}
