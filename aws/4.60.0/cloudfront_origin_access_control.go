// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCloudfrontOriginAccessControl(name string, args CloudfrontOriginAccessControlArgs) *CloudfrontOriginAccessControl {
	return &CloudfrontOriginAccessControl{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudfrontOriginAccessControl)(nil)

type CloudfrontOriginAccessControl struct {
	Name  string
	Args  CloudfrontOriginAccessControlArgs
	state *cloudfrontOriginAccessControlState
}

func (coac *CloudfrontOriginAccessControl) Type() string {
	return "aws_cloudfront_origin_access_control"
}

func (coac *CloudfrontOriginAccessControl) LocalName() string {
	return coac.Name
}

func (coac *CloudfrontOriginAccessControl) Configuration() interface{} {
	return coac.Args
}

func (coac *CloudfrontOriginAccessControl) Attributes() cloudfrontOriginAccessControlAttributes {
	return cloudfrontOriginAccessControlAttributes{ref: terra.ReferenceResource(coac)}
}

func (coac *CloudfrontOriginAccessControl) ImportState(av io.Reader) error {
	coac.state = &cloudfrontOriginAccessControlState{}
	if err := json.NewDecoder(av).Decode(coac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", coac.Type(), coac.LocalName(), err)
	}
	return nil
}

func (coac *CloudfrontOriginAccessControl) State() (*cloudfrontOriginAccessControlState, bool) {
	return coac.state, coac.state != nil
}

func (coac *CloudfrontOriginAccessControl) StateMust() *cloudfrontOriginAccessControlState {
	if coac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", coac.Type(), coac.LocalName()))
	}
	return coac.state
}

func (coac *CloudfrontOriginAccessControl) DependOn() terra.Reference {
	return terra.ReferenceResource(coac)
}

type CloudfrontOriginAccessControlArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OriginAccessControlOriginType: string, required
	OriginAccessControlOriginType terra.StringValue `hcl:"origin_access_control_origin_type,attr" validate:"required"`
	// SigningBehavior: string, required
	SigningBehavior terra.StringValue `hcl:"signing_behavior,attr" validate:"required"`
	// SigningProtocol: string, required
	SigningProtocol terra.StringValue `hcl:"signing_protocol,attr" validate:"required"`
	// DependsOn contains resources that CloudfrontOriginAccessControl depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cloudfrontOriginAccessControlAttributes struct {
	ref terra.Reference
}

func (coac cloudfrontOriginAccessControlAttributes) Description() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("description"))
}

func (coac cloudfrontOriginAccessControlAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("etag"))
}

func (coac cloudfrontOriginAccessControlAttributes) Id() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("id"))
}

func (coac cloudfrontOriginAccessControlAttributes) Name() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("name"))
}

func (coac cloudfrontOriginAccessControlAttributes) OriginAccessControlOriginType() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("origin_access_control_origin_type"))
}

func (coac cloudfrontOriginAccessControlAttributes) SigningBehavior() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("signing_behavior"))
}

func (coac cloudfrontOriginAccessControlAttributes) SigningProtocol() terra.StringValue {
	return terra.ReferenceString(coac.ref.Append("signing_protocol"))
}

type cloudfrontOriginAccessControlState struct {
	Description                   string `json:"description"`
	Etag                          string `json:"etag"`
	Id                            string `json:"id"`
	Name                          string `json:"name"`
	OriginAccessControlOriginType string `json:"origin_access_control_origin_type"`
	SigningBehavior               string `json:"signing_behavior"`
	SigningProtocol               string `json:"signing_protocol"`
}
