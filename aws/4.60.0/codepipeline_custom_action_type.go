// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	codepipelinecustomactiontype "github.com/golingon/terraproviders/aws/4.60.0/codepipelinecustomactiontype"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCodepipelineCustomActionType(name string, args CodepipelineCustomActionTypeArgs) *CodepipelineCustomActionType {
	return &CodepipelineCustomActionType{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CodepipelineCustomActionType)(nil)

type CodepipelineCustomActionType struct {
	Name  string
	Args  CodepipelineCustomActionTypeArgs
	state *codepipelineCustomActionTypeState
}

func (ccat *CodepipelineCustomActionType) Type() string {
	return "aws_codepipeline_custom_action_type"
}

func (ccat *CodepipelineCustomActionType) LocalName() string {
	return ccat.Name
}

func (ccat *CodepipelineCustomActionType) Configuration() interface{} {
	return ccat.Args
}

func (ccat *CodepipelineCustomActionType) Attributes() codepipelineCustomActionTypeAttributes {
	return codepipelineCustomActionTypeAttributes{ref: terra.ReferenceResource(ccat)}
}

func (ccat *CodepipelineCustomActionType) ImportState(av io.Reader) error {
	ccat.state = &codepipelineCustomActionTypeState{}
	if err := json.NewDecoder(av).Decode(ccat.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ccat.Type(), ccat.LocalName(), err)
	}
	return nil
}

func (ccat *CodepipelineCustomActionType) State() (*codepipelineCustomActionTypeState, bool) {
	return ccat.state, ccat.state != nil
}

func (ccat *CodepipelineCustomActionType) StateMust() *codepipelineCustomActionTypeState {
	if ccat.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ccat.Type(), ccat.LocalName()))
	}
	return ccat.state
}

func (ccat *CodepipelineCustomActionType) DependOn() terra.Reference {
	return terra.ReferenceResource(ccat)
}

type CodepipelineCustomActionTypeArgs struct {
	// Category: string, required
	Category terra.StringValue `hcl:"category,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ProviderName: string, required
	ProviderName terra.StringValue `hcl:"provider_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
	// ConfigurationProperty: min=0,max=10
	ConfigurationProperty []codepipelinecustomactiontype.ConfigurationProperty `hcl:"configuration_property,block" validate:"min=0,max=10"`
	// InputArtifactDetails: required
	InputArtifactDetails *codepipelinecustomactiontype.InputArtifactDetails `hcl:"input_artifact_details,block" validate:"required"`
	// OutputArtifactDetails: required
	OutputArtifactDetails *codepipelinecustomactiontype.OutputArtifactDetails `hcl:"output_artifact_details,block" validate:"required"`
	// Settings: optional
	Settings *codepipelinecustomactiontype.Settings `hcl:"settings,block"`
	// DependsOn contains resources that CodepipelineCustomActionType depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type codepipelineCustomActionTypeAttributes struct {
	ref terra.Reference
}

func (ccat codepipelineCustomActionTypeAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ccat.ref.Append("arn"))
}

func (ccat codepipelineCustomActionTypeAttributes) Category() terra.StringValue {
	return terra.ReferenceString(ccat.ref.Append("category"))
}

func (ccat codepipelineCustomActionTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ccat.ref.Append("id"))
}

func (ccat codepipelineCustomActionTypeAttributes) Owner() terra.StringValue {
	return terra.ReferenceString(ccat.ref.Append("owner"))
}

func (ccat codepipelineCustomActionTypeAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceString(ccat.ref.Append("provider_name"))
}

func (ccat codepipelineCustomActionTypeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ccat.ref.Append("tags"))
}

func (ccat codepipelineCustomActionTypeAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ccat.ref.Append("tags_all"))
}

func (ccat codepipelineCustomActionTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceString(ccat.ref.Append("version"))
}

func (ccat codepipelineCustomActionTypeAttributes) ConfigurationProperty() terra.ListValue[codepipelinecustomactiontype.ConfigurationPropertyAttributes] {
	return terra.ReferenceList[codepipelinecustomactiontype.ConfigurationPropertyAttributes](ccat.ref.Append("configuration_property"))
}

func (ccat codepipelineCustomActionTypeAttributes) InputArtifactDetails() terra.ListValue[codepipelinecustomactiontype.InputArtifactDetailsAttributes] {
	return terra.ReferenceList[codepipelinecustomactiontype.InputArtifactDetailsAttributes](ccat.ref.Append("input_artifact_details"))
}

func (ccat codepipelineCustomActionTypeAttributes) OutputArtifactDetails() terra.ListValue[codepipelinecustomactiontype.OutputArtifactDetailsAttributes] {
	return terra.ReferenceList[codepipelinecustomactiontype.OutputArtifactDetailsAttributes](ccat.ref.Append("output_artifact_details"))
}

func (ccat codepipelineCustomActionTypeAttributes) Settings() terra.ListValue[codepipelinecustomactiontype.SettingsAttributes] {
	return terra.ReferenceList[codepipelinecustomactiontype.SettingsAttributes](ccat.ref.Append("settings"))
}

type codepipelineCustomActionTypeState struct {
	Arn                   string                                                    `json:"arn"`
	Category              string                                                    `json:"category"`
	Id                    string                                                    `json:"id"`
	Owner                 string                                                    `json:"owner"`
	ProviderName          string                                                    `json:"provider_name"`
	Tags                  map[string]string                                         `json:"tags"`
	TagsAll               map[string]string                                         `json:"tags_all"`
	Version               string                                                    `json:"version"`
	ConfigurationProperty []codepipelinecustomactiontype.ConfigurationPropertyState `json:"configuration_property"`
	InputArtifactDetails  []codepipelinecustomactiontype.InputArtifactDetailsState  `json:"input_artifact_details"`
	OutputArtifactDetails []codepipelinecustomactiontype.OutputArtifactDetailsState `json:"output_artifact_details"`
	Settings              []codepipelinecustomactiontype.SettingsState              `json:"settings"`
}
