// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	opsworkscustomlayer "github.com/golingon/terraproviders/aws/4.60.0/opsworkscustomlayer"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewOpsworksCustomLayer(name string, args OpsworksCustomLayerArgs) *OpsworksCustomLayer {
	return &OpsworksCustomLayer{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OpsworksCustomLayer)(nil)

type OpsworksCustomLayer struct {
	Name  string
	Args  OpsworksCustomLayerArgs
	state *opsworksCustomLayerState
}

func (ocl *OpsworksCustomLayer) Type() string {
	return "aws_opsworks_custom_layer"
}

func (ocl *OpsworksCustomLayer) LocalName() string {
	return ocl.Name
}

func (ocl *OpsworksCustomLayer) Configuration() interface{} {
	return ocl.Args
}

func (ocl *OpsworksCustomLayer) Attributes() opsworksCustomLayerAttributes {
	return opsworksCustomLayerAttributes{ref: terra.ReferenceResource(ocl)}
}

func (ocl *OpsworksCustomLayer) ImportState(av io.Reader) error {
	ocl.state = &opsworksCustomLayerState{}
	if err := json.NewDecoder(av).Decode(ocl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ocl.Type(), ocl.LocalName(), err)
	}
	return nil
}

func (ocl *OpsworksCustomLayer) State() (*opsworksCustomLayerState, bool) {
	return ocl.state, ocl.state != nil
}

func (ocl *OpsworksCustomLayer) StateMust() *opsworksCustomLayerState {
	if ocl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ocl.Type(), ocl.LocalName()))
	}
	return ocl.state
}

func (ocl *OpsworksCustomLayer) DependOn() terra.Reference {
	return terra.ReferenceResource(ocl)
}

type OpsworksCustomLayerArgs struct {
	// AutoAssignElasticIps: bool, optional
	AutoAssignElasticIps terra.BoolValue `hcl:"auto_assign_elastic_ips,attr"`
	// AutoAssignPublicIps: bool, optional
	AutoAssignPublicIps terra.BoolValue `hcl:"auto_assign_public_ips,attr"`
	// AutoHealing: bool, optional
	AutoHealing terra.BoolValue `hcl:"auto_healing,attr"`
	// CustomConfigureRecipes: list of string, optional
	CustomConfigureRecipes terra.ListValue[terra.StringValue] `hcl:"custom_configure_recipes,attr"`
	// CustomDeployRecipes: list of string, optional
	CustomDeployRecipes terra.ListValue[terra.StringValue] `hcl:"custom_deploy_recipes,attr"`
	// CustomInstanceProfileArn: string, optional
	CustomInstanceProfileArn terra.StringValue `hcl:"custom_instance_profile_arn,attr"`
	// CustomJson: string, optional
	CustomJson terra.StringValue `hcl:"custom_json,attr"`
	// CustomSecurityGroupIds: set of string, optional
	CustomSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"custom_security_group_ids,attr"`
	// CustomSetupRecipes: list of string, optional
	CustomSetupRecipes terra.ListValue[terra.StringValue] `hcl:"custom_setup_recipes,attr"`
	// CustomShutdownRecipes: list of string, optional
	CustomShutdownRecipes terra.ListValue[terra.StringValue] `hcl:"custom_shutdown_recipes,attr"`
	// CustomUndeployRecipes: list of string, optional
	CustomUndeployRecipes terra.ListValue[terra.StringValue] `hcl:"custom_undeploy_recipes,attr"`
	// DrainElbOnShutdown: bool, optional
	DrainElbOnShutdown terra.BoolValue `hcl:"drain_elb_on_shutdown,attr"`
	// ElasticLoadBalancer: string, optional
	ElasticLoadBalancer terra.StringValue `hcl:"elastic_load_balancer,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstallUpdatesOnBoot: bool, optional
	InstallUpdatesOnBoot terra.BoolValue `hcl:"install_updates_on_boot,attr"`
	// InstanceShutdownTimeout: number, optional
	InstanceShutdownTimeout terra.NumberValue `hcl:"instance_shutdown_timeout,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ShortName: string, required
	ShortName terra.StringValue `hcl:"short_name,attr" validate:"required"`
	// StackId: string, required
	StackId terra.StringValue `hcl:"stack_id,attr" validate:"required"`
	// SystemPackages: set of string, optional
	SystemPackages terra.SetValue[terra.StringValue] `hcl:"system_packages,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// UseEbsOptimizedInstances: bool, optional
	UseEbsOptimizedInstances terra.BoolValue `hcl:"use_ebs_optimized_instances,attr"`
	// CloudwatchConfiguration: optional
	CloudwatchConfiguration *opsworkscustomlayer.CloudwatchConfiguration `hcl:"cloudwatch_configuration,block"`
	// EbsVolume: min=0
	EbsVolume []opsworkscustomlayer.EbsVolume `hcl:"ebs_volume,block" validate:"min=0"`
	// LoadBasedAutoScaling: optional
	LoadBasedAutoScaling *opsworkscustomlayer.LoadBasedAutoScaling `hcl:"load_based_auto_scaling,block"`
	// DependsOn contains resources that OpsworksCustomLayer depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type opsworksCustomLayerAttributes struct {
	ref terra.Reference
}

func (ocl opsworksCustomLayerAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("arn"))
}

func (ocl opsworksCustomLayerAttributes) AutoAssignElasticIps() terra.BoolValue {
	return terra.ReferenceBool(ocl.ref.Append("auto_assign_elastic_ips"))
}

func (ocl opsworksCustomLayerAttributes) AutoAssignPublicIps() terra.BoolValue {
	return terra.ReferenceBool(ocl.ref.Append("auto_assign_public_ips"))
}

func (ocl opsworksCustomLayerAttributes) AutoHealing() terra.BoolValue {
	return terra.ReferenceBool(ocl.ref.Append("auto_healing"))
}

func (ocl opsworksCustomLayerAttributes) CustomConfigureRecipes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ocl.ref.Append("custom_configure_recipes"))
}

func (ocl opsworksCustomLayerAttributes) CustomDeployRecipes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ocl.ref.Append("custom_deploy_recipes"))
}

func (ocl opsworksCustomLayerAttributes) CustomInstanceProfileArn() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("custom_instance_profile_arn"))
}

func (ocl opsworksCustomLayerAttributes) CustomJson() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("custom_json"))
}

func (ocl opsworksCustomLayerAttributes) CustomSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ocl.ref.Append("custom_security_group_ids"))
}

func (ocl opsworksCustomLayerAttributes) CustomSetupRecipes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ocl.ref.Append("custom_setup_recipes"))
}

func (ocl opsworksCustomLayerAttributes) CustomShutdownRecipes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ocl.ref.Append("custom_shutdown_recipes"))
}

func (ocl opsworksCustomLayerAttributes) CustomUndeployRecipes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ocl.ref.Append("custom_undeploy_recipes"))
}

func (ocl opsworksCustomLayerAttributes) DrainElbOnShutdown() terra.BoolValue {
	return terra.ReferenceBool(ocl.ref.Append("drain_elb_on_shutdown"))
}

func (ocl opsworksCustomLayerAttributes) ElasticLoadBalancer() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("elastic_load_balancer"))
}

func (ocl opsworksCustomLayerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("id"))
}

func (ocl opsworksCustomLayerAttributes) InstallUpdatesOnBoot() terra.BoolValue {
	return terra.ReferenceBool(ocl.ref.Append("install_updates_on_boot"))
}

func (ocl opsworksCustomLayerAttributes) InstanceShutdownTimeout() terra.NumberValue {
	return terra.ReferenceNumber(ocl.ref.Append("instance_shutdown_timeout"))
}

func (ocl opsworksCustomLayerAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("name"))
}

func (ocl opsworksCustomLayerAttributes) ShortName() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("short_name"))
}

func (ocl opsworksCustomLayerAttributes) StackId() terra.StringValue {
	return terra.ReferenceString(ocl.ref.Append("stack_id"))
}

func (ocl opsworksCustomLayerAttributes) SystemPackages() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ocl.ref.Append("system_packages"))
}

func (ocl opsworksCustomLayerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ocl.ref.Append("tags"))
}

func (ocl opsworksCustomLayerAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ocl.ref.Append("tags_all"))
}

func (ocl opsworksCustomLayerAttributes) UseEbsOptimizedInstances() terra.BoolValue {
	return terra.ReferenceBool(ocl.ref.Append("use_ebs_optimized_instances"))
}

func (ocl opsworksCustomLayerAttributes) CloudwatchConfiguration() terra.ListValue[opsworkscustomlayer.CloudwatchConfigurationAttributes] {
	return terra.ReferenceList[opsworkscustomlayer.CloudwatchConfigurationAttributes](ocl.ref.Append("cloudwatch_configuration"))
}

func (ocl opsworksCustomLayerAttributes) EbsVolume() terra.SetValue[opsworkscustomlayer.EbsVolumeAttributes] {
	return terra.ReferenceSet[opsworkscustomlayer.EbsVolumeAttributes](ocl.ref.Append("ebs_volume"))
}

func (ocl opsworksCustomLayerAttributes) LoadBasedAutoScaling() terra.ListValue[opsworkscustomlayer.LoadBasedAutoScalingAttributes] {
	return terra.ReferenceList[opsworkscustomlayer.LoadBasedAutoScalingAttributes](ocl.ref.Append("load_based_auto_scaling"))
}

type opsworksCustomLayerState struct {
	Arn                      string                                             `json:"arn"`
	AutoAssignElasticIps     bool                                               `json:"auto_assign_elastic_ips"`
	AutoAssignPublicIps      bool                                               `json:"auto_assign_public_ips"`
	AutoHealing              bool                                               `json:"auto_healing"`
	CustomConfigureRecipes   []string                                           `json:"custom_configure_recipes"`
	CustomDeployRecipes      []string                                           `json:"custom_deploy_recipes"`
	CustomInstanceProfileArn string                                             `json:"custom_instance_profile_arn"`
	CustomJson               string                                             `json:"custom_json"`
	CustomSecurityGroupIds   []string                                           `json:"custom_security_group_ids"`
	CustomSetupRecipes       []string                                           `json:"custom_setup_recipes"`
	CustomShutdownRecipes    []string                                           `json:"custom_shutdown_recipes"`
	CustomUndeployRecipes    []string                                           `json:"custom_undeploy_recipes"`
	DrainElbOnShutdown       bool                                               `json:"drain_elb_on_shutdown"`
	ElasticLoadBalancer      string                                             `json:"elastic_load_balancer"`
	Id                       string                                             `json:"id"`
	InstallUpdatesOnBoot     bool                                               `json:"install_updates_on_boot"`
	InstanceShutdownTimeout  float64                                            `json:"instance_shutdown_timeout"`
	Name                     string                                             `json:"name"`
	ShortName                string                                             `json:"short_name"`
	StackId                  string                                             `json:"stack_id"`
	SystemPackages           []string                                           `json:"system_packages"`
	Tags                     map[string]string                                  `json:"tags"`
	TagsAll                  map[string]string                                  `json:"tags_all"`
	UseEbsOptimizedInstances bool                                               `json:"use_ebs_optimized_instances"`
	CloudwatchConfiguration  []opsworkscustomlayer.CloudwatchConfigurationState `json:"cloudwatch_configuration"`
	EbsVolume                []opsworkscustomlayer.EbsVolumeState               `json:"ebs_volume"`
	LoadBasedAutoScaling     []opsworkscustomlayer.LoadBasedAutoScalingState    `json:"load_based_auto_scaling"`
}
