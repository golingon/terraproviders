// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotPolicyAttachment(name string, args IotPolicyAttachmentArgs) *IotPolicyAttachment {
	return &IotPolicyAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotPolicyAttachment)(nil)

type IotPolicyAttachment struct {
	Name  string
	Args  IotPolicyAttachmentArgs
	state *iotPolicyAttachmentState
}

func (ipa *IotPolicyAttachment) Type() string {
	return "aws_iot_policy_attachment"
}

func (ipa *IotPolicyAttachment) LocalName() string {
	return ipa.Name
}

func (ipa *IotPolicyAttachment) Configuration() interface{} {
	return ipa.Args
}

func (ipa *IotPolicyAttachment) Attributes() iotPolicyAttachmentAttributes {
	return iotPolicyAttachmentAttributes{ref: terra.ReferenceResource(ipa)}
}

func (ipa *IotPolicyAttachment) ImportState(av io.Reader) error {
	ipa.state = &iotPolicyAttachmentState{}
	if err := json.NewDecoder(av).Decode(ipa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ipa.Type(), ipa.LocalName(), err)
	}
	return nil
}

func (ipa *IotPolicyAttachment) State() (*iotPolicyAttachmentState, bool) {
	return ipa.state, ipa.state != nil
}

func (ipa *IotPolicyAttachment) StateMust() *iotPolicyAttachmentState {
	if ipa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ipa.Type(), ipa.LocalName()))
	}
	return ipa.state
}

func (ipa *IotPolicyAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(ipa)
}

type IotPolicyAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// Target: string, required
	Target terra.StringValue `hcl:"target,attr" validate:"required"`
	// DependsOn contains resources that IotPolicyAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotPolicyAttachmentAttributes struct {
	ref terra.Reference
}

func (ipa iotPolicyAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ipa.ref.Append("id"))
}

func (ipa iotPolicyAttachmentAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(ipa.ref.Append("policy"))
}

func (ipa iotPolicyAttachmentAttributes) Target() terra.StringValue {
	return terra.ReferenceString(ipa.ref.Append("target"))
}

type iotPolicyAttachmentState struct {
	Id     string `json:"id"`
	Policy string `json:"policy"`
	Target string `json:"target"`
}
