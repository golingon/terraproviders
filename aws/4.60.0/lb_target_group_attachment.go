// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLbTargetGroupAttachment(name string, args LbTargetGroupAttachmentArgs) *LbTargetGroupAttachment {
	return &LbTargetGroupAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LbTargetGroupAttachment)(nil)

type LbTargetGroupAttachment struct {
	Name  string
	Args  LbTargetGroupAttachmentArgs
	state *lbTargetGroupAttachmentState
}

func (ltga *LbTargetGroupAttachment) Type() string {
	return "aws_lb_target_group_attachment"
}

func (ltga *LbTargetGroupAttachment) LocalName() string {
	return ltga.Name
}

func (ltga *LbTargetGroupAttachment) Configuration() interface{} {
	return ltga.Args
}

func (ltga *LbTargetGroupAttachment) Attributes() lbTargetGroupAttachmentAttributes {
	return lbTargetGroupAttachmentAttributes{ref: terra.ReferenceResource(ltga)}
}

func (ltga *LbTargetGroupAttachment) ImportState(av io.Reader) error {
	ltga.state = &lbTargetGroupAttachmentState{}
	if err := json.NewDecoder(av).Decode(ltga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ltga.Type(), ltga.LocalName(), err)
	}
	return nil
}

func (ltga *LbTargetGroupAttachment) State() (*lbTargetGroupAttachmentState, bool) {
	return ltga.state, ltga.state != nil
}

func (ltga *LbTargetGroupAttachment) StateMust() *lbTargetGroupAttachmentState {
	if ltga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ltga.Type(), ltga.LocalName()))
	}
	return ltga.state
}

func (ltga *LbTargetGroupAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(ltga)
}

type LbTargetGroupAttachmentArgs struct {
	// AvailabilityZone: string, optional
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Port: number, optional
	Port terra.NumberValue `hcl:"port,attr"`
	// TargetGroupArn: string, required
	TargetGroupArn terra.StringValue `hcl:"target_group_arn,attr" validate:"required"`
	// TargetId: string, required
	TargetId terra.StringValue `hcl:"target_id,attr" validate:"required"`
	// DependsOn contains resources that LbTargetGroupAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lbTargetGroupAttachmentAttributes struct {
	ref terra.Reference
}

func (ltga lbTargetGroupAttachmentAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceString(ltga.ref.Append("availability_zone"))
}

func (ltga lbTargetGroupAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ltga.ref.Append("id"))
}

func (ltga lbTargetGroupAttachmentAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(ltga.ref.Append("port"))
}

func (ltga lbTargetGroupAttachmentAttributes) TargetGroupArn() terra.StringValue {
	return terra.ReferenceString(ltga.ref.Append("target_group_arn"))
}

func (ltga lbTargetGroupAttachmentAttributes) TargetId() terra.StringValue {
	return terra.ReferenceString(ltga.ref.Append("target_id"))
}

type lbTargetGroupAttachmentState struct {
	AvailabilityZone string  `json:"availability_zone"`
	Id               string  `json:"id"`
	Port             float64 `json:"port"`
	TargetGroupArn   string  `json:"target_group_arn"`
	TargetId         string  `json:"target_id"`
}
