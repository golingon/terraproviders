// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datawafv2regexpatternset "github.com/golingon/terraproviders/aws/4.60.0/datawafv2regexpatternset"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataWafv2RegexPatternSet(name string, args DataWafv2RegexPatternSetArgs) *DataWafv2RegexPatternSet {
	return &DataWafv2RegexPatternSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataWafv2RegexPatternSet)(nil)

type DataWafv2RegexPatternSet struct {
	Name string
	Args DataWafv2RegexPatternSetArgs
}

func (wrps *DataWafv2RegexPatternSet) DataSource() string {
	return "aws_wafv2_regex_pattern_set"
}

func (wrps *DataWafv2RegexPatternSet) LocalName() string {
	return wrps.Name
}

func (wrps *DataWafv2RegexPatternSet) Configuration() interface{} {
	return wrps.Args
}

func (wrps *DataWafv2RegexPatternSet) Attributes() dataWafv2RegexPatternSetAttributes {
	return dataWafv2RegexPatternSetAttributes{ref: terra.ReferenceDataResource(wrps)}
}

type DataWafv2RegexPatternSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Scope: string, required
	Scope terra.StringValue `hcl:"scope,attr" validate:"required"`
	// RegularExpression: min=0
	RegularExpression []datawafv2regexpatternset.RegularExpression `hcl:"regular_expression,block" validate:"min=0"`
}
type dataWafv2RegexPatternSetAttributes struct {
	ref terra.Reference
}

func (wrps dataWafv2RegexPatternSetAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("arn"))
}

func (wrps dataWafv2RegexPatternSetAttributes) Description() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("description"))
}

func (wrps dataWafv2RegexPatternSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("id"))
}

func (wrps dataWafv2RegexPatternSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("name"))
}

func (wrps dataWafv2RegexPatternSetAttributes) Scope() terra.StringValue {
	return terra.ReferenceString(wrps.ref.Append("scope"))
}

func (wrps dataWafv2RegexPatternSetAttributes) RegularExpression() terra.SetValue[datawafv2regexpatternset.RegularExpressionAttributes] {
	return terra.ReferenceSet[datawafv2regexpatternset.RegularExpressionAttributes](wrps.ref.Append("regular_expression"))
}
