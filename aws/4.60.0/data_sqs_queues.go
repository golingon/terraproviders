// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataSqsQueues creates a new instance of [DataSqsQueues].
func NewDataSqsQueues(name string, args DataSqsQueuesArgs) *DataSqsQueues {
	return &DataSqsQueues{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSqsQueues)(nil)

// DataSqsQueues represents the Terraform data resource aws_sqs_queues.
type DataSqsQueues struct {
	Name string
	Args DataSqsQueuesArgs
}

// DataSource returns the Terraform object type for [DataSqsQueues].
func (sq *DataSqsQueues) DataSource() string {
	return "aws_sqs_queues"
}

// LocalName returns the local name for [DataSqsQueues].
func (sq *DataSqsQueues) LocalName() string {
	return sq.Name
}

// Configuration returns the configuration (args) for [DataSqsQueues].
func (sq *DataSqsQueues) Configuration() interface{} {
	return sq.Args
}

// Attributes returns the attributes for [DataSqsQueues].
func (sq *DataSqsQueues) Attributes() dataSqsQueuesAttributes {
	return dataSqsQueuesAttributes{ref: terra.ReferenceDataResource(sq)}
}

// DataSqsQueuesArgs contains the configurations for aws_sqs_queues.
type DataSqsQueuesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// QueueNamePrefix: string, optional
	QueueNamePrefix terra.StringValue `hcl:"queue_name_prefix,attr"`
}
type dataSqsQueuesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_sqs_queues.
func (sq dataSqsQueuesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sq.ref.Append("id"))
}

// QueueNamePrefix returns a reference to field queue_name_prefix of aws_sqs_queues.
func (sq dataSqsQueuesAttributes) QueueNamePrefix() terra.StringValue {
	return terra.ReferenceAsString(sq.ref.Append("queue_name_prefix"))
}

// QueueUrls returns a reference to field queue_urls of aws_sqs_queues.
func (sq dataSqsQueuesAttributes) QueueUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sq.ref.Append("queue_urls"))
}
