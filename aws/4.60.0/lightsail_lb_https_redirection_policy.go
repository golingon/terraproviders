// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailLbHttpsRedirectionPolicy(name string, args LightsailLbHttpsRedirectionPolicyArgs) *LightsailLbHttpsRedirectionPolicy {
	return &LightsailLbHttpsRedirectionPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailLbHttpsRedirectionPolicy)(nil)

type LightsailLbHttpsRedirectionPolicy struct {
	Name  string
	Args  LightsailLbHttpsRedirectionPolicyArgs
	state *lightsailLbHttpsRedirectionPolicyState
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) Type() string {
	return "aws_lightsail_lb_https_redirection_policy"
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) LocalName() string {
	return llhrp.Name
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) Configuration() interface{} {
	return llhrp.Args
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) Attributes() lightsailLbHttpsRedirectionPolicyAttributes {
	return lightsailLbHttpsRedirectionPolicyAttributes{ref: terra.ReferenceResource(llhrp)}
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) ImportState(av io.Reader) error {
	llhrp.state = &lightsailLbHttpsRedirectionPolicyState{}
	if err := json.NewDecoder(av).Decode(llhrp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", llhrp.Type(), llhrp.LocalName(), err)
	}
	return nil
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) State() (*lightsailLbHttpsRedirectionPolicyState, bool) {
	return llhrp.state, llhrp.state != nil
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) StateMust() *lightsailLbHttpsRedirectionPolicyState {
	if llhrp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", llhrp.Type(), llhrp.LocalName()))
	}
	return llhrp.state
}

func (llhrp *LightsailLbHttpsRedirectionPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(llhrp)
}

type LightsailLbHttpsRedirectionPolicyArgs struct {
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LbName: string, required
	LbName terra.StringValue `hcl:"lb_name,attr" validate:"required"`
	// DependsOn contains resources that LightsailLbHttpsRedirectionPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailLbHttpsRedirectionPolicyAttributes struct {
	ref terra.Reference
}

func (llhrp lightsailLbHttpsRedirectionPolicyAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(llhrp.ref.Append("enabled"))
}

func (llhrp lightsailLbHttpsRedirectionPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(llhrp.ref.Append("id"))
}

func (llhrp lightsailLbHttpsRedirectionPolicyAttributes) LbName() terra.StringValue {
	return terra.ReferenceString(llhrp.ref.Append("lb_name"))
}

type lightsailLbHttpsRedirectionPolicyState struct {
	Enabled bool   `json:"enabled"`
	Id      string `json:"id"`
	LbName  string `json:"lb_name"`
}
