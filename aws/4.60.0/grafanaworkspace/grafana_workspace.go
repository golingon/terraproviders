// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package grafanaworkspace

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type NetworkAccessControl struct {
	// PrefixListIds: set of string, required
	PrefixListIds terra.SetValue[terra.StringValue] `hcl:"prefix_list_ids,attr" validate:"required"`
	// VpceIds: set of string, required
	VpceIds terra.SetValue[terra.StringValue] `hcl:"vpce_ids,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type VpcConfiguration struct {
	// SecurityGroupIds: set of string, required
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds: set of string, required
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type NetworkAccessControlAttributes struct {
	ref terra.Reference
}

func (nac NetworkAccessControlAttributes) InternalRef() (terra.Reference, error) {
	return nac.ref, nil
}

func (nac NetworkAccessControlAttributes) InternalWithRef(ref terra.Reference) NetworkAccessControlAttributes {
	return NetworkAccessControlAttributes{ref: ref}
}

func (nac NetworkAccessControlAttributes) InternalTokens() hclwrite.Tokens {
	return nac.ref.InternalTokens()
}

func (nac NetworkAccessControlAttributes) PrefixListIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nac.ref.Append("prefix_list_ids"))
}

func (nac NetworkAccessControlAttributes) VpceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nac.ref.Append("vpce_ids"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type VpcConfigurationAttributes struct {
	ref terra.Reference
}

func (vc VpcConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc VpcConfigurationAttributes) InternalWithRef(ref terra.Reference) VpcConfigurationAttributes {
	return VpcConfigurationAttributes{ref: ref}
}

func (vc VpcConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return vc.ref.InternalTokens()
}

func (vc VpcConfigurationAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc VpcConfigurationAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

type NetworkAccessControlState struct {
	PrefixListIds []string `json:"prefix_list_ids"`
	VpceIds       []string `json:"vpce_ids"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Update string `json:"update"`
}

type VpcConfigurationState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
}
