// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package globalacceleratorendpointgroup

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type EndpointConfiguration struct {
	// ClientIpPreservationEnabled: bool, optional
	ClientIpPreservationEnabled terra.BoolValue `hcl:"client_ip_preservation_enabled,attr"`
	// EndpointId: string, optional
	EndpointId terra.StringValue `hcl:"endpoint_id,attr"`
	// Weight: number, optional
	Weight terra.NumberValue `hcl:"weight,attr"`
}

type PortOverride struct {
	// EndpointPort: number, required
	EndpointPort terra.NumberValue `hcl:"endpoint_port,attr" validate:"required"`
	// ListenerPort: number, required
	ListenerPort terra.NumberValue `hcl:"listener_port,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type EndpointConfigurationAttributes struct {
	ref terra.Reference
}

func (ec EndpointConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec EndpointConfigurationAttributes) InternalWithRef(ref terra.Reference) EndpointConfigurationAttributes {
	return EndpointConfigurationAttributes{ref: ref}
}

func (ec EndpointConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ec.ref.InternalTokens()
}

func (ec EndpointConfigurationAttributes) ClientIpPreservationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ec.ref.Append("client_ip_preservation_enabled"))
}

func (ec EndpointConfigurationAttributes) EndpointId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("endpoint_id"))
}

func (ec EndpointConfigurationAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(ec.ref.Append("weight"))
}

type PortOverrideAttributes struct {
	ref terra.Reference
}

func (po PortOverrideAttributes) InternalRef() (terra.Reference, error) {
	return po.ref, nil
}

func (po PortOverrideAttributes) InternalWithRef(ref terra.Reference) PortOverrideAttributes {
	return PortOverrideAttributes{ref: ref}
}

func (po PortOverrideAttributes) InternalTokens() hclwrite.Tokens {
	return po.ref.InternalTokens()
}

func (po PortOverrideAttributes) EndpointPort() terra.NumberValue {
	return terra.ReferenceAsNumber(po.ref.Append("endpoint_port"))
}

func (po PortOverrideAttributes) ListenerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(po.ref.Append("listener_port"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type EndpointConfigurationState struct {
	ClientIpPreservationEnabled bool    `json:"client_ip_preservation_enabled"`
	EndpointId                  string  `json:"endpoint_id"`
	Weight                      float64 `json:"weight"`
}

type PortOverrideState struct {
	EndpointPort float64 `json:"endpoint_port"`
	ListenerPort float64 `json:"listener_port"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
