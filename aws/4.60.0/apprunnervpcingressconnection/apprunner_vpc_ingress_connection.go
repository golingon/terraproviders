// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package apprunnervpcingressconnection

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type IngressVpcConfiguration struct {
	// VpcEndpointId: string, optional
	VpcEndpointId terra.StringValue `hcl:"vpc_endpoint_id,attr"`
	// VpcId: string, optional
	VpcId terra.StringValue `hcl:"vpc_id,attr"`
}

type IngressVpcConfigurationAttributes struct {
	ref terra.Reference
}

func (ivc IngressVpcConfigurationAttributes) InternalRef() terra.Reference {
	return ivc.ref
}

func (ivc IngressVpcConfigurationAttributes) InternalWithRef(ref terra.Reference) IngressVpcConfigurationAttributes {
	return IngressVpcConfigurationAttributes{ref: ref}
}

func (ivc IngressVpcConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ivc.ref.InternalTokens()
}

func (ivc IngressVpcConfigurationAttributes) VpcEndpointId() terra.StringValue {
	return terra.ReferenceString(ivc.ref.Append("vpc_endpoint_id"))
}

func (ivc IngressVpcConfigurationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(ivc.ref.Append("vpc_id"))
}

type IngressVpcConfigurationState struct {
	VpcEndpointId string `json:"vpc_endpoint_id"`
	VpcId         string `json:"vpc_id"`
}
