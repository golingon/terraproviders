// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataec2host "github.com/golingon/terraproviders/aws/4.60.0/dataec2host"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEc2Host(name string, args DataEc2HostArgs) *DataEc2Host {
	return &DataEc2Host{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEc2Host)(nil)

type DataEc2Host struct {
	Name string
	Args DataEc2HostArgs
}

func (eh *DataEc2Host) DataSource() string {
	return "aws_ec2_host"
}

func (eh *DataEc2Host) LocalName() string {
	return eh.Name
}

func (eh *DataEc2Host) Configuration() interface{} {
	return eh.Args
}

func (eh *DataEc2Host) Attributes() dataEc2HostAttributes {
	return dataEc2HostAttributes{ref: terra.ReferenceDataResource(eh)}
}

type DataEc2HostArgs struct {
	// HostId: string, optional
	HostId terra.StringValue `hcl:"host_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []dataec2host.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataec2host.Timeouts `hcl:"timeouts,block"`
}
type dataEc2HostAttributes struct {
	ref terra.Reference
}

func (eh dataEc2HostAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("arn"))
}

func (eh dataEc2HostAttributes) AutoPlacement() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("auto_placement"))
}

func (eh dataEc2HostAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("availability_zone"))
}

func (eh dataEc2HostAttributes) Cores() terra.NumberValue {
	return terra.ReferenceNumber(eh.ref.Append("cores"))
}

func (eh dataEc2HostAttributes) HostId() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("host_id"))
}

func (eh dataEc2HostAttributes) HostRecovery() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("host_recovery"))
}

func (eh dataEc2HostAttributes) Id() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("id"))
}

func (eh dataEc2HostAttributes) InstanceFamily() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("instance_family"))
}

func (eh dataEc2HostAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("instance_type"))
}

func (eh dataEc2HostAttributes) OutpostArn() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("outpost_arn"))
}

func (eh dataEc2HostAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceString(eh.ref.Append("owner_id"))
}

func (eh dataEc2HostAttributes) Sockets() terra.NumberValue {
	return terra.ReferenceNumber(eh.ref.Append("sockets"))
}

func (eh dataEc2HostAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](eh.ref.Append("tags"))
}

func (eh dataEc2HostAttributes) TotalVcpus() terra.NumberValue {
	return terra.ReferenceNumber(eh.ref.Append("total_vcpus"))
}

func (eh dataEc2HostAttributes) Filter() terra.SetValue[dataec2host.FilterAttributes] {
	return terra.ReferenceSet[dataec2host.FilterAttributes](eh.ref.Append("filter"))
}

func (eh dataEc2HostAttributes) Timeouts() dataec2host.TimeoutsAttributes {
	return terra.ReferenceSingle[dataec2host.TimeoutsAttributes](eh.ref.Append("timeouts"))
}
