// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datavpcpeeringconnections "github.com/golingon/terraproviders/aws/4.60.0/datavpcpeeringconnections"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataVpcPeeringConnections(name string, args DataVpcPeeringConnectionsArgs) *DataVpcPeeringConnections {
	return &DataVpcPeeringConnections{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVpcPeeringConnections)(nil)

type DataVpcPeeringConnections struct {
	Name string
	Args DataVpcPeeringConnectionsArgs
}

func (vpc *DataVpcPeeringConnections) DataSource() string {
	return "aws_vpc_peering_connections"
}

func (vpc *DataVpcPeeringConnections) LocalName() string {
	return vpc.Name
}

func (vpc *DataVpcPeeringConnections) Configuration() interface{} {
	return vpc.Args
}

func (vpc *DataVpcPeeringConnections) Attributes() dataVpcPeeringConnectionsAttributes {
	return dataVpcPeeringConnectionsAttributes{ref: terra.ReferenceDataResource(vpc)}
}

type DataVpcPeeringConnectionsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []datavpcpeeringconnections.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datavpcpeeringconnections.Timeouts `hcl:"timeouts,block"`
}
type dataVpcPeeringConnectionsAttributes struct {
	ref terra.Reference
}

func (vpc dataVpcPeeringConnectionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vpc.ref.Append("id"))
}

func (vpc dataVpcPeeringConnectionsAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](vpc.ref.Append("ids"))
}

func (vpc dataVpcPeeringConnectionsAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](vpc.ref.Append("tags"))
}

func (vpc dataVpcPeeringConnectionsAttributes) Filter() terra.SetValue[datavpcpeeringconnections.FilterAttributes] {
	return terra.ReferenceSet[datavpcpeeringconnections.FilterAttributes](vpc.ref.Append("filter"))
}

func (vpc dataVpcPeeringConnectionsAttributes) Timeouts() datavpcpeeringconnections.TimeoutsAttributes {
	return terra.ReferenceSingle[datavpcpeeringconnections.TimeoutsAttributes](vpc.ref.Append("timeouts"))
}
