// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package ec2networkinsightsanalysis

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AlternatePathHints struct{}

type Explanations struct {
	// Acl: min=0
	Acl []Acl `hcl:"acl,block" validate:"min=0"`
	// ExplanationsAclRule: min=0
	AclRule []ExplanationsAclRule `hcl:"acl_rule,block" validate:"min=0"`
	// ExplanationsAttachedTo: min=0
	AttachedTo []ExplanationsAttachedTo `hcl:"attached_to,block" validate:"min=0"`
	// ClassicLoadBalancerListener: min=0
	ClassicLoadBalancerListener []ClassicLoadBalancerListener `hcl:"classic_load_balancer_listener,block" validate:"min=0"`
	// ExplanationsComponent: min=0
	Component []ExplanationsComponent `hcl:"component,block" validate:"min=0"`
	// CustomerGateway: min=0
	CustomerGateway []CustomerGateway `hcl:"customer_gateway,block" validate:"min=0"`
	// Destination: min=0
	Destination []Destination `hcl:"destination,block" validate:"min=0"`
	// ExplanationsDestinationVpc: min=0
	DestinationVpc []ExplanationsDestinationVpc `hcl:"destination_vpc,block" validate:"min=0"`
	// ElasticLoadBalancerListener: min=0
	ElasticLoadBalancerListener []ElasticLoadBalancerListener `hcl:"elastic_load_balancer_listener,block" validate:"min=0"`
	// IngressRouteTable: min=0
	IngressRouteTable []IngressRouteTable `hcl:"ingress_route_table,block" validate:"min=0"`
	// InternetGateway: min=0
	InternetGateway []InternetGateway `hcl:"internet_gateway,block" validate:"min=0"`
	// LoadBalancerTargetGroup: min=0
	LoadBalancerTargetGroup []LoadBalancerTargetGroup `hcl:"load_balancer_target_group,block" validate:"min=0"`
	// LoadBalancerTargetGroups: min=0
	LoadBalancerTargetGroups []LoadBalancerTargetGroups `hcl:"load_balancer_target_groups,block" validate:"min=0"`
	// NatGateway: min=0
	NatGateway []NatGateway `hcl:"nat_gateway,block" validate:"min=0"`
	// NetworkInterface: min=0
	NetworkInterface []NetworkInterface `hcl:"network_interface,block" validate:"min=0"`
	// PortRanges: min=0
	PortRanges []PortRanges `hcl:"port_ranges,block" validate:"min=0"`
	// PrefixList: min=0
	PrefixList []PrefixList `hcl:"prefix_list,block" validate:"min=0"`
	// RouteTable: min=0
	RouteTable []RouteTable `hcl:"route_table,block" validate:"min=0"`
	// ExplanationsRouteTableRoute: min=0
	RouteTableRoute []ExplanationsRouteTableRoute `hcl:"route_table_route,block" validate:"min=0"`
	// SecurityGroup: min=0
	SecurityGroup []SecurityGroup `hcl:"security_group,block" validate:"min=0"`
	// ExplanationsSecurityGroupRule: min=0
	SecurityGroupRule []ExplanationsSecurityGroupRule `hcl:"security_group_rule,block" validate:"min=0"`
	// SecurityGroups: min=0
	SecurityGroups []SecurityGroups `hcl:"security_groups,block" validate:"min=0"`
	// ExplanationsSourceVpc: min=0
	SourceVpc []ExplanationsSourceVpc `hcl:"source_vpc,block" validate:"min=0"`
	// ExplanationsSubnet: min=0
	Subnet []ExplanationsSubnet `hcl:"subnet,block" validate:"min=0"`
	// SubnetRouteTable: min=0
	SubnetRouteTable []SubnetRouteTable `hcl:"subnet_route_table,block" validate:"min=0"`
	// ExplanationsTransitGateway: min=0
	TransitGateway []ExplanationsTransitGateway `hcl:"transit_gateway,block" validate:"min=0"`
	// TransitGatewayAttachment: min=0
	TransitGatewayAttachment []TransitGatewayAttachment `hcl:"transit_gateway_attachment,block" validate:"min=0"`
	// TransitGatewayRouteTable: min=0
	TransitGatewayRouteTable []TransitGatewayRouteTable `hcl:"transit_gateway_route_table,block" validate:"min=0"`
	// ExplanationsTransitGatewayRouteTableRoute: min=0
	TransitGatewayRouteTableRoute []ExplanationsTransitGatewayRouteTableRoute `hcl:"transit_gateway_route_table_route,block" validate:"min=0"`
	// ExplanationsVpc: min=0
	Vpc []ExplanationsVpc `hcl:"vpc,block" validate:"min=0"`
	// VpcEndpoint: min=0
	VpcEndpoint []VpcEndpoint `hcl:"vpc_endpoint,block" validate:"min=0"`
	// VpcPeeringConnection: min=0
	VpcPeeringConnection []VpcPeeringConnection `hcl:"vpc_peering_connection,block" validate:"min=0"`
	// VpnConnection: min=0
	VpnConnection []VpnConnection `hcl:"vpn_connection,block" validate:"min=0"`
	// VpnGateway: min=0
	VpnGateway []VpnGateway `hcl:"vpn_gateway,block" validate:"min=0"`
}

type Acl struct{}

type ExplanationsAclRule struct {
	// ExplanationsAclRulePortRange: min=0
	PortRange []ExplanationsAclRulePortRange `hcl:"port_range,block" validate:"min=0"`
}

type ExplanationsAclRulePortRange struct{}

type ExplanationsAttachedTo struct{}

type ClassicLoadBalancerListener struct{}

type ExplanationsComponent struct{}

type CustomerGateway struct{}

type Destination struct{}

type ExplanationsDestinationVpc struct{}

type ElasticLoadBalancerListener struct{}

type IngressRouteTable struct{}

type InternetGateway struct{}

type LoadBalancerTargetGroup struct{}

type LoadBalancerTargetGroups struct{}

type NatGateway struct{}

type NetworkInterface struct{}

type PortRanges struct{}

type PrefixList struct{}

type RouteTable struct{}

type ExplanationsRouteTableRoute struct{}

type SecurityGroup struct{}

type ExplanationsSecurityGroupRule struct {
	// ExplanationsSecurityGroupRulePortRange: min=0
	PortRange []ExplanationsSecurityGroupRulePortRange `hcl:"port_range,block" validate:"min=0"`
}

type ExplanationsSecurityGroupRulePortRange struct{}

type SecurityGroups struct{}

type ExplanationsSourceVpc struct{}

type ExplanationsSubnet struct{}

type SubnetRouteTable struct{}

type ExplanationsTransitGateway struct{}

type TransitGatewayAttachment struct{}

type TransitGatewayRouteTable struct{}

type ExplanationsTransitGatewayRouteTableRoute struct{}

type ExplanationsVpc struct{}

type VpcEndpoint struct{}

type VpcPeeringConnection struct{}

type VpnConnection struct{}

type VpnGateway struct{}

type ForwardPathComponents struct {
	// ForwardPathComponentsAclRule: min=0
	AclRule []ForwardPathComponentsAclRule `hcl:"acl_rule,block" validate:"min=0"`
	// ForwardPathComponentsAdditionalDetails: min=0
	AdditionalDetails []ForwardPathComponentsAdditionalDetails `hcl:"additional_details,block" validate:"min=0"`
	// ForwardPathComponentsAttachedTo: min=0
	AttachedTo []ForwardPathComponentsAttachedTo `hcl:"attached_to,block" validate:"min=0"`
	// ForwardPathComponentsComponent: min=0
	Component []ForwardPathComponentsComponent `hcl:"component,block" validate:"min=0"`
	// ForwardPathComponentsDestinationVpc: min=0
	DestinationVpc []ForwardPathComponentsDestinationVpc `hcl:"destination_vpc,block" validate:"min=0"`
	// ForwardPathComponentsInboundHeader: min=0
	InboundHeader []ForwardPathComponentsInboundHeader `hcl:"inbound_header,block" validate:"min=0"`
	// ForwardPathComponentsOutboundHeader: min=0
	OutboundHeader []ForwardPathComponentsOutboundHeader `hcl:"outbound_header,block" validate:"min=0"`
	// ForwardPathComponentsRouteTableRoute: min=0
	RouteTableRoute []ForwardPathComponentsRouteTableRoute `hcl:"route_table_route,block" validate:"min=0"`
	// ForwardPathComponentsSecurityGroupRule: min=0
	SecurityGroupRule []ForwardPathComponentsSecurityGroupRule `hcl:"security_group_rule,block" validate:"min=0"`
	// ForwardPathComponentsSourceVpc: min=0
	SourceVpc []ForwardPathComponentsSourceVpc `hcl:"source_vpc,block" validate:"min=0"`
	// ForwardPathComponentsSubnet: min=0
	Subnet []ForwardPathComponentsSubnet `hcl:"subnet,block" validate:"min=0"`
	// ForwardPathComponentsTransitGateway: min=0
	TransitGateway []ForwardPathComponentsTransitGateway `hcl:"transit_gateway,block" validate:"min=0"`
	// ForwardPathComponentsTransitGatewayRouteTableRoute: min=0
	TransitGatewayRouteTableRoute []ForwardPathComponentsTransitGatewayRouteTableRoute `hcl:"transit_gateway_route_table_route,block" validate:"min=0"`
	// ForwardPathComponentsVpc: min=0
	Vpc []ForwardPathComponentsVpc `hcl:"vpc,block" validate:"min=0"`
}

type ForwardPathComponentsAclRule struct {
	// ForwardPathComponentsAclRulePortRange: min=0
	PortRange []ForwardPathComponentsAclRulePortRange `hcl:"port_range,block" validate:"min=0"`
}

type ForwardPathComponentsAclRulePortRange struct{}

type ForwardPathComponentsAdditionalDetails struct {
	// ForwardPathComponentsAdditionalDetailsComponent: min=0
	Component []ForwardPathComponentsAdditionalDetailsComponent `hcl:"component,block" validate:"min=0"`
}

type ForwardPathComponentsAdditionalDetailsComponent struct{}

type ForwardPathComponentsAttachedTo struct{}

type ForwardPathComponentsComponent struct{}

type ForwardPathComponentsDestinationVpc struct{}

type ForwardPathComponentsInboundHeader struct {
	// ForwardPathComponentsInboundHeaderDestinationPortRanges: min=0
	DestinationPortRanges []ForwardPathComponentsInboundHeaderDestinationPortRanges `hcl:"destination_port_ranges,block" validate:"min=0"`
	// ForwardPathComponentsInboundHeaderSourcePortRanges: min=0
	SourcePortRanges []ForwardPathComponentsInboundHeaderSourcePortRanges `hcl:"source_port_ranges,block" validate:"min=0"`
}

type ForwardPathComponentsInboundHeaderDestinationPortRanges struct{}

type ForwardPathComponentsInboundHeaderSourcePortRanges struct{}

type ForwardPathComponentsOutboundHeader struct {
	// ForwardPathComponentsOutboundHeaderDestinationPortRanges: min=0
	DestinationPortRanges []ForwardPathComponentsOutboundHeaderDestinationPortRanges `hcl:"destination_port_ranges,block" validate:"min=0"`
	// ForwardPathComponentsOutboundHeaderSourcePortRanges: min=0
	SourcePortRanges []ForwardPathComponentsOutboundHeaderSourcePortRanges `hcl:"source_port_ranges,block" validate:"min=0"`
}

type ForwardPathComponentsOutboundHeaderDestinationPortRanges struct{}

type ForwardPathComponentsOutboundHeaderSourcePortRanges struct{}

type ForwardPathComponentsRouteTableRoute struct{}

type ForwardPathComponentsSecurityGroupRule struct {
	// ForwardPathComponentsSecurityGroupRulePortRange: min=0
	PortRange []ForwardPathComponentsSecurityGroupRulePortRange `hcl:"port_range,block" validate:"min=0"`
}

type ForwardPathComponentsSecurityGroupRulePortRange struct{}

type ForwardPathComponentsSourceVpc struct{}

type ForwardPathComponentsSubnet struct{}

type ForwardPathComponentsTransitGateway struct{}

type ForwardPathComponentsTransitGatewayRouteTableRoute struct{}

type ForwardPathComponentsVpc struct{}

type ReturnPathComponents struct {
	// ReturnPathComponentsAclRule: min=0
	AclRule []ReturnPathComponentsAclRule `hcl:"acl_rule,block" validate:"min=0"`
	// ReturnPathComponentsAdditionalDetails: min=0
	AdditionalDetails []ReturnPathComponentsAdditionalDetails `hcl:"additional_details,block" validate:"min=0"`
	// ReturnPathComponentsAttachedTo: min=0
	AttachedTo []ReturnPathComponentsAttachedTo `hcl:"attached_to,block" validate:"min=0"`
	// ReturnPathComponentsComponent: min=0
	Component []ReturnPathComponentsComponent `hcl:"component,block" validate:"min=0"`
	// ReturnPathComponentsDestinationVpc: min=0
	DestinationVpc []ReturnPathComponentsDestinationVpc `hcl:"destination_vpc,block" validate:"min=0"`
	// ReturnPathComponentsInboundHeader: min=0
	InboundHeader []ReturnPathComponentsInboundHeader `hcl:"inbound_header,block" validate:"min=0"`
	// ReturnPathComponentsOutboundHeader: min=0
	OutboundHeader []ReturnPathComponentsOutboundHeader `hcl:"outbound_header,block" validate:"min=0"`
	// ReturnPathComponentsRouteTableRoute: min=0
	RouteTableRoute []ReturnPathComponentsRouteTableRoute `hcl:"route_table_route,block" validate:"min=0"`
	// ReturnPathComponentsSecurityGroupRule: min=0
	SecurityGroupRule []ReturnPathComponentsSecurityGroupRule `hcl:"security_group_rule,block" validate:"min=0"`
	// ReturnPathComponentsSourceVpc: min=0
	SourceVpc []ReturnPathComponentsSourceVpc `hcl:"source_vpc,block" validate:"min=0"`
	// ReturnPathComponentsSubnet: min=0
	Subnet []ReturnPathComponentsSubnet `hcl:"subnet,block" validate:"min=0"`
	// ReturnPathComponentsTransitGateway: min=0
	TransitGateway []ReturnPathComponentsTransitGateway `hcl:"transit_gateway,block" validate:"min=0"`
	// ReturnPathComponentsTransitGatewayRouteTableRoute: min=0
	TransitGatewayRouteTableRoute []ReturnPathComponentsTransitGatewayRouteTableRoute `hcl:"transit_gateway_route_table_route,block" validate:"min=0"`
	// ReturnPathComponentsVpc: min=0
	Vpc []ReturnPathComponentsVpc `hcl:"vpc,block" validate:"min=0"`
}

type ReturnPathComponentsAclRule struct {
	// ReturnPathComponentsAclRulePortRange: min=0
	PortRange []ReturnPathComponentsAclRulePortRange `hcl:"port_range,block" validate:"min=0"`
}

type ReturnPathComponentsAclRulePortRange struct{}

type ReturnPathComponentsAdditionalDetails struct {
	// ReturnPathComponentsAdditionalDetailsComponent: min=0
	Component []ReturnPathComponentsAdditionalDetailsComponent `hcl:"component,block" validate:"min=0"`
}

type ReturnPathComponentsAdditionalDetailsComponent struct{}

type ReturnPathComponentsAttachedTo struct{}

type ReturnPathComponentsComponent struct{}

type ReturnPathComponentsDestinationVpc struct{}

type ReturnPathComponentsInboundHeader struct {
	// ReturnPathComponentsInboundHeaderDestinationPortRanges: min=0
	DestinationPortRanges []ReturnPathComponentsInboundHeaderDestinationPortRanges `hcl:"destination_port_ranges,block" validate:"min=0"`
	// ReturnPathComponentsInboundHeaderSourcePortRanges: min=0
	SourcePortRanges []ReturnPathComponentsInboundHeaderSourcePortRanges `hcl:"source_port_ranges,block" validate:"min=0"`
}

type ReturnPathComponentsInboundHeaderDestinationPortRanges struct{}

type ReturnPathComponentsInboundHeaderSourcePortRanges struct{}

type ReturnPathComponentsOutboundHeader struct {
	// ReturnPathComponentsOutboundHeaderDestinationPortRanges: min=0
	DestinationPortRanges []ReturnPathComponentsOutboundHeaderDestinationPortRanges `hcl:"destination_port_ranges,block" validate:"min=0"`
	// ReturnPathComponentsOutboundHeaderSourcePortRanges: min=0
	SourcePortRanges []ReturnPathComponentsOutboundHeaderSourcePortRanges `hcl:"source_port_ranges,block" validate:"min=0"`
}

type ReturnPathComponentsOutboundHeaderDestinationPortRanges struct{}

type ReturnPathComponentsOutboundHeaderSourcePortRanges struct{}

type ReturnPathComponentsRouteTableRoute struct{}

type ReturnPathComponentsSecurityGroupRule struct {
	// ReturnPathComponentsSecurityGroupRulePortRange: min=0
	PortRange []ReturnPathComponentsSecurityGroupRulePortRange `hcl:"port_range,block" validate:"min=0"`
}

type ReturnPathComponentsSecurityGroupRulePortRange struct{}

type ReturnPathComponentsSourceVpc struct{}

type ReturnPathComponentsSubnet struct{}

type ReturnPathComponentsTransitGateway struct{}

type ReturnPathComponentsTransitGatewayRouteTableRoute struct{}

type ReturnPathComponentsVpc struct{}

type AlternatePathHintsAttributes struct {
	ref terra.Reference
}

func (aph AlternatePathHintsAttributes) InternalRef() (terra.Reference, error) {
	return aph.ref, nil
}

func (aph AlternatePathHintsAttributes) InternalWithRef(ref terra.Reference) AlternatePathHintsAttributes {
	return AlternatePathHintsAttributes{ref: ref}
}

func (aph AlternatePathHintsAttributes) InternalTokens() hclwrite.Tokens {
	return aph.ref.InternalTokens()
}

func (aph AlternatePathHintsAttributes) ComponentArn() terra.StringValue {
	return terra.ReferenceAsString(aph.ref.Append("component_arn"))
}

func (aph AlternatePathHintsAttributes) ComponentId() terra.StringValue {
	return terra.ReferenceAsString(aph.ref.Append("component_id"))
}

type ExplanationsAttributes struct {
	ref terra.Reference
}

func (e ExplanationsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e ExplanationsAttributes) InternalWithRef(ref terra.Reference) ExplanationsAttributes {
	return ExplanationsAttributes{ref: ref}
}

func (e ExplanationsAttributes) InternalTokens() hclwrite.Tokens {
	return e.ref.InternalTokens()
}

func (e ExplanationsAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("address"))
}

func (e ExplanationsAttributes) Addresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("addresses"))
}

func (e ExplanationsAttributes) AvailabilityZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("availability_zones"))
}

func (e ExplanationsAttributes) Cidrs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("cidrs"))
}

func (e ExplanationsAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("direction"))
}

func (e ExplanationsAttributes) ExplanationCode() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("explanation_code"))
}

func (e ExplanationsAttributes) LoadBalancerArn() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("load_balancer_arn"))
}

func (e ExplanationsAttributes) LoadBalancerListenerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("load_balancer_listener_port"))
}

func (e ExplanationsAttributes) LoadBalancerTargetPort() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("load_balancer_target_port"))
}

func (e ExplanationsAttributes) MissingComponent() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("missing_component"))
}

func (e ExplanationsAttributes) PacketField() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("packet_field"))
}

func (e ExplanationsAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("port"))
}

func (e ExplanationsAttributes) Protocols() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("protocols"))
}

func (e ExplanationsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("state"))
}

func (e ExplanationsAttributes) Acl() terra.ListValue[AclAttributes] {
	return terra.ReferenceAsList[AclAttributes](e.ref.Append("acl"))
}

func (e ExplanationsAttributes) AclRule() terra.ListValue[ExplanationsAclRuleAttributes] {
	return terra.ReferenceAsList[ExplanationsAclRuleAttributes](e.ref.Append("acl_rule"))
}

func (e ExplanationsAttributes) AttachedTo() terra.ListValue[ExplanationsAttachedToAttributes] {
	return terra.ReferenceAsList[ExplanationsAttachedToAttributes](e.ref.Append("attached_to"))
}

func (e ExplanationsAttributes) ClassicLoadBalancerListener() terra.ListValue[ClassicLoadBalancerListenerAttributes] {
	return terra.ReferenceAsList[ClassicLoadBalancerListenerAttributes](e.ref.Append("classic_load_balancer_listener"))
}

func (e ExplanationsAttributes) Component() terra.ListValue[ExplanationsComponentAttributes] {
	return terra.ReferenceAsList[ExplanationsComponentAttributes](e.ref.Append("component"))
}

func (e ExplanationsAttributes) CustomerGateway() terra.ListValue[CustomerGatewayAttributes] {
	return terra.ReferenceAsList[CustomerGatewayAttributes](e.ref.Append("customer_gateway"))
}

func (e ExplanationsAttributes) Destination() terra.ListValue[DestinationAttributes] {
	return terra.ReferenceAsList[DestinationAttributes](e.ref.Append("destination"))
}

func (e ExplanationsAttributes) DestinationVpc() terra.ListValue[ExplanationsDestinationVpcAttributes] {
	return terra.ReferenceAsList[ExplanationsDestinationVpcAttributes](e.ref.Append("destination_vpc"))
}

func (e ExplanationsAttributes) ElasticLoadBalancerListener() terra.ListValue[ElasticLoadBalancerListenerAttributes] {
	return terra.ReferenceAsList[ElasticLoadBalancerListenerAttributes](e.ref.Append("elastic_load_balancer_listener"))
}

func (e ExplanationsAttributes) IngressRouteTable() terra.ListValue[IngressRouteTableAttributes] {
	return terra.ReferenceAsList[IngressRouteTableAttributes](e.ref.Append("ingress_route_table"))
}

func (e ExplanationsAttributes) InternetGateway() terra.ListValue[InternetGatewayAttributes] {
	return terra.ReferenceAsList[InternetGatewayAttributes](e.ref.Append("internet_gateway"))
}

func (e ExplanationsAttributes) LoadBalancerTargetGroup() terra.ListValue[LoadBalancerTargetGroupAttributes] {
	return terra.ReferenceAsList[LoadBalancerTargetGroupAttributes](e.ref.Append("load_balancer_target_group"))
}

func (e ExplanationsAttributes) LoadBalancerTargetGroups() terra.ListValue[LoadBalancerTargetGroupsAttributes] {
	return terra.ReferenceAsList[LoadBalancerTargetGroupsAttributes](e.ref.Append("load_balancer_target_groups"))
}

func (e ExplanationsAttributes) NatGateway() terra.ListValue[NatGatewayAttributes] {
	return terra.ReferenceAsList[NatGatewayAttributes](e.ref.Append("nat_gateway"))
}

func (e ExplanationsAttributes) NetworkInterface() terra.ListValue[NetworkInterfaceAttributes] {
	return terra.ReferenceAsList[NetworkInterfaceAttributes](e.ref.Append("network_interface"))
}

func (e ExplanationsAttributes) PortRanges() terra.ListValue[PortRangesAttributes] {
	return terra.ReferenceAsList[PortRangesAttributes](e.ref.Append("port_ranges"))
}

func (e ExplanationsAttributes) PrefixList() terra.ListValue[PrefixListAttributes] {
	return terra.ReferenceAsList[PrefixListAttributes](e.ref.Append("prefix_list"))
}

func (e ExplanationsAttributes) RouteTable() terra.ListValue[RouteTableAttributes] {
	return terra.ReferenceAsList[RouteTableAttributes](e.ref.Append("route_table"))
}

func (e ExplanationsAttributes) RouteTableRoute() terra.ListValue[ExplanationsRouteTableRouteAttributes] {
	return terra.ReferenceAsList[ExplanationsRouteTableRouteAttributes](e.ref.Append("route_table_route"))
}

func (e ExplanationsAttributes) SecurityGroup() terra.ListValue[SecurityGroupAttributes] {
	return terra.ReferenceAsList[SecurityGroupAttributes](e.ref.Append("security_group"))
}

func (e ExplanationsAttributes) SecurityGroupRule() terra.ListValue[ExplanationsSecurityGroupRuleAttributes] {
	return terra.ReferenceAsList[ExplanationsSecurityGroupRuleAttributes](e.ref.Append("security_group_rule"))
}

func (e ExplanationsAttributes) SecurityGroups() terra.ListValue[SecurityGroupsAttributes] {
	return terra.ReferenceAsList[SecurityGroupsAttributes](e.ref.Append("security_groups"))
}

func (e ExplanationsAttributes) SourceVpc() terra.ListValue[ExplanationsSourceVpcAttributes] {
	return terra.ReferenceAsList[ExplanationsSourceVpcAttributes](e.ref.Append("source_vpc"))
}

func (e ExplanationsAttributes) Subnet() terra.ListValue[ExplanationsSubnetAttributes] {
	return terra.ReferenceAsList[ExplanationsSubnetAttributes](e.ref.Append("subnet"))
}

func (e ExplanationsAttributes) SubnetRouteTable() terra.ListValue[SubnetRouteTableAttributes] {
	return terra.ReferenceAsList[SubnetRouteTableAttributes](e.ref.Append("subnet_route_table"))
}

func (e ExplanationsAttributes) TransitGateway() terra.ListValue[ExplanationsTransitGatewayAttributes] {
	return terra.ReferenceAsList[ExplanationsTransitGatewayAttributes](e.ref.Append("transit_gateway"))
}

func (e ExplanationsAttributes) TransitGatewayAttachment() terra.ListValue[TransitGatewayAttachmentAttributes] {
	return terra.ReferenceAsList[TransitGatewayAttachmentAttributes](e.ref.Append("transit_gateway_attachment"))
}

func (e ExplanationsAttributes) TransitGatewayRouteTable() terra.ListValue[TransitGatewayRouteTableAttributes] {
	return terra.ReferenceAsList[TransitGatewayRouteTableAttributes](e.ref.Append("transit_gateway_route_table"))
}

func (e ExplanationsAttributes) TransitGatewayRouteTableRoute() terra.ListValue[ExplanationsTransitGatewayRouteTableRouteAttributes] {
	return terra.ReferenceAsList[ExplanationsTransitGatewayRouteTableRouteAttributes](e.ref.Append("transit_gateway_route_table_route"))
}

func (e ExplanationsAttributes) Vpc() terra.ListValue[ExplanationsVpcAttributes] {
	return terra.ReferenceAsList[ExplanationsVpcAttributes](e.ref.Append("vpc"))
}

func (e ExplanationsAttributes) VpcEndpoint() terra.ListValue[VpcEndpointAttributes] {
	return terra.ReferenceAsList[VpcEndpointAttributes](e.ref.Append("vpc_endpoint"))
}

func (e ExplanationsAttributes) VpcPeeringConnection() terra.ListValue[VpcPeeringConnectionAttributes] {
	return terra.ReferenceAsList[VpcPeeringConnectionAttributes](e.ref.Append("vpc_peering_connection"))
}

func (e ExplanationsAttributes) VpnConnection() terra.ListValue[VpnConnectionAttributes] {
	return terra.ReferenceAsList[VpnConnectionAttributes](e.ref.Append("vpn_connection"))
}

func (e ExplanationsAttributes) VpnGateway() terra.ListValue[VpnGatewayAttributes] {
	return terra.ReferenceAsList[VpnGatewayAttributes](e.ref.Append("vpn_gateway"))
}

type AclAttributes struct {
	ref terra.Reference
}

func (a AclAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AclAttributes) InternalWithRef(ref terra.Reference) AclAttributes {
	return AclAttributes{ref: ref}
}

func (a AclAttributes) InternalTokens() hclwrite.Tokens {
	return a.ref.InternalTokens()
}

func (a AclAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("arn"))
}

func (a AclAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("id"))
}

func (a AclAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

type ExplanationsAclRuleAttributes struct {
	ref terra.Reference
}

func (ar ExplanationsAclRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar ExplanationsAclRuleAttributes) InternalWithRef(ref terra.Reference) ExplanationsAclRuleAttributes {
	return ExplanationsAclRuleAttributes{ref: ref}
}

func (ar ExplanationsAclRuleAttributes) InternalTokens() hclwrite.Tokens {
	return ar.ref.InternalTokens()
}

func (ar ExplanationsAclRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("cidr"))
}

func (ar ExplanationsAclRuleAttributes) Egress() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("egress"))
}

func (ar ExplanationsAclRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("protocol"))
}

func (ar ExplanationsAclRuleAttributes) RuleAction() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_action"))
}

func (ar ExplanationsAclRuleAttributes) RuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("rule_number"))
}

func (ar ExplanationsAclRuleAttributes) PortRange() terra.ListValue[ExplanationsAclRulePortRangeAttributes] {
	return terra.ReferenceAsList[ExplanationsAclRulePortRangeAttributes](ar.ref.Append("port_range"))
}

type ExplanationsAclRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr ExplanationsAclRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr ExplanationsAclRulePortRangeAttributes) InternalWithRef(ref terra.Reference) ExplanationsAclRulePortRangeAttributes {
	return ExplanationsAclRulePortRangeAttributes{ref: ref}
}

func (pr ExplanationsAclRulePortRangeAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr ExplanationsAclRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr ExplanationsAclRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type ExplanationsAttachedToAttributes struct {
	ref terra.Reference
}

func (at ExplanationsAttachedToAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at ExplanationsAttachedToAttributes) InternalWithRef(ref terra.Reference) ExplanationsAttachedToAttributes {
	return ExplanationsAttachedToAttributes{ref: ref}
}

func (at ExplanationsAttachedToAttributes) InternalTokens() hclwrite.Tokens {
	return at.ref.InternalTokens()
}

func (at ExplanationsAttachedToAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("arn"))
}

func (at ExplanationsAttachedToAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

func (at ExplanationsAttachedToAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

type ClassicLoadBalancerListenerAttributes struct {
	ref terra.Reference
}

func (clbl ClassicLoadBalancerListenerAttributes) InternalRef() (terra.Reference, error) {
	return clbl.ref, nil
}

func (clbl ClassicLoadBalancerListenerAttributes) InternalWithRef(ref terra.Reference) ClassicLoadBalancerListenerAttributes {
	return ClassicLoadBalancerListenerAttributes{ref: ref}
}

func (clbl ClassicLoadBalancerListenerAttributes) InternalTokens() hclwrite.Tokens {
	return clbl.ref.InternalTokens()
}

func (clbl ClassicLoadBalancerListenerAttributes) InstancePort() terra.NumberValue {
	return terra.ReferenceAsNumber(clbl.ref.Append("instance_port"))
}

func (clbl ClassicLoadBalancerListenerAttributes) LoadBalancerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(clbl.ref.Append("load_balancer_port"))
}

type ExplanationsComponentAttributes struct {
	ref terra.Reference
}

func (c ExplanationsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ExplanationsComponentAttributes) InternalWithRef(ref terra.Reference) ExplanationsComponentAttributes {
	return ExplanationsComponentAttributes{ref: ref}
}

func (c ExplanationsComponentAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ExplanationsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c ExplanationsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c ExplanationsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type CustomerGatewayAttributes struct {
	ref terra.Reference
}

func (cg CustomerGatewayAttributes) InternalRef() (terra.Reference, error) {
	return cg.ref, nil
}

func (cg CustomerGatewayAttributes) InternalWithRef(ref terra.Reference) CustomerGatewayAttributes {
	return CustomerGatewayAttributes{ref: ref}
}

func (cg CustomerGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return cg.ref.InternalTokens()
}

func (cg CustomerGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(cg.ref.Append("arn"))
}

func (cg CustomerGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cg.ref.Append("id"))
}

func (cg CustomerGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cg.ref.Append("name"))
}

type DestinationAttributes struct {
	ref terra.Reference
}

func (d DestinationAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DestinationAttributes) InternalWithRef(ref terra.Reference) DestinationAttributes {
	return DestinationAttributes{ref: ref}
}

func (d DestinationAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d DestinationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("arn"))
}

func (d DestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("id"))
}

func (d DestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

type ExplanationsDestinationVpcAttributes struct {
	ref terra.Reference
}

func (dv ExplanationsDestinationVpcAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv ExplanationsDestinationVpcAttributes) InternalWithRef(ref terra.Reference) ExplanationsDestinationVpcAttributes {
	return ExplanationsDestinationVpcAttributes{ref: ref}
}

func (dv ExplanationsDestinationVpcAttributes) InternalTokens() hclwrite.Tokens {
	return dv.ref.InternalTokens()
}

func (dv ExplanationsDestinationVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("arn"))
}

func (dv ExplanationsDestinationVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("id"))
}

func (dv ExplanationsDestinationVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type ElasticLoadBalancerListenerAttributes struct {
	ref terra.Reference
}

func (elbl ElasticLoadBalancerListenerAttributes) InternalRef() (terra.Reference, error) {
	return elbl.ref, nil
}

func (elbl ElasticLoadBalancerListenerAttributes) InternalWithRef(ref terra.Reference) ElasticLoadBalancerListenerAttributes {
	return ElasticLoadBalancerListenerAttributes{ref: ref}
}

func (elbl ElasticLoadBalancerListenerAttributes) InternalTokens() hclwrite.Tokens {
	return elbl.ref.InternalTokens()
}

func (elbl ElasticLoadBalancerListenerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(elbl.ref.Append("arn"))
}

func (elbl ElasticLoadBalancerListenerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(elbl.ref.Append("id"))
}

func (elbl ElasticLoadBalancerListenerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(elbl.ref.Append("name"))
}

type IngressRouteTableAttributes struct {
	ref terra.Reference
}

func (irt IngressRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return irt.ref, nil
}

func (irt IngressRouteTableAttributes) InternalWithRef(ref terra.Reference) IngressRouteTableAttributes {
	return IngressRouteTableAttributes{ref: ref}
}

func (irt IngressRouteTableAttributes) InternalTokens() hclwrite.Tokens {
	return irt.ref.InternalTokens()
}

func (irt IngressRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(irt.ref.Append("arn"))
}

func (irt IngressRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(irt.ref.Append("id"))
}

func (irt IngressRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(irt.ref.Append("name"))
}

type InternetGatewayAttributes struct {
	ref terra.Reference
}

func (ig InternetGatewayAttributes) InternalRef() (terra.Reference, error) {
	return ig.ref, nil
}

func (ig InternetGatewayAttributes) InternalWithRef(ref terra.Reference) InternetGatewayAttributes {
	return InternetGatewayAttributes{ref: ref}
}

func (ig InternetGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return ig.ref.InternalTokens()
}

func (ig InternetGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ig.ref.Append("arn"))
}

func (ig InternetGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ig.ref.Append("id"))
}

func (ig InternetGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ig.ref.Append("name"))
}

type LoadBalancerTargetGroupAttributes struct {
	ref terra.Reference
}

func (lbtg LoadBalancerTargetGroupAttributes) InternalRef() (terra.Reference, error) {
	return lbtg.ref, nil
}

func (lbtg LoadBalancerTargetGroupAttributes) InternalWithRef(ref terra.Reference) LoadBalancerTargetGroupAttributes {
	return LoadBalancerTargetGroupAttributes{ref: ref}
}

func (lbtg LoadBalancerTargetGroupAttributes) InternalTokens() hclwrite.Tokens {
	return lbtg.ref.InternalTokens()
}

func (lbtg LoadBalancerTargetGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("arn"))
}

func (lbtg LoadBalancerTargetGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("id"))
}

func (lbtg LoadBalancerTargetGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("name"))
}

type LoadBalancerTargetGroupsAttributes struct {
	ref terra.Reference
}

func (lbtg LoadBalancerTargetGroupsAttributes) InternalRef() (terra.Reference, error) {
	return lbtg.ref, nil
}

func (lbtg LoadBalancerTargetGroupsAttributes) InternalWithRef(ref terra.Reference) LoadBalancerTargetGroupsAttributes {
	return LoadBalancerTargetGroupsAttributes{ref: ref}
}

func (lbtg LoadBalancerTargetGroupsAttributes) InternalTokens() hclwrite.Tokens {
	return lbtg.ref.InternalTokens()
}

func (lbtg LoadBalancerTargetGroupsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("arn"))
}

func (lbtg LoadBalancerTargetGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("id"))
}

func (lbtg LoadBalancerTargetGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("name"))
}

type NatGatewayAttributes struct {
	ref terra.Reference
}

func (ng NatGatewayAttributes) InternalRef() (terra.Reference, error) {
	return ng.ref, nil
}

func (ng NatGatewayAttributes) InternalWithRef(ref terra.Reference) NatGatewayAttributes {
	return NatGatewayAttributes{ref: ref}
}

func (ng NatGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return ng.ref.InternalTokens()
}

func (ng NatGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ng.ref.Append("arn"))
}

func (ng NatGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ng.ref.Append("id"))
}

func (ng NatGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ng.ref.Append("name"))
}

type NetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (ni NetworkInterfaceAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni NetworkInterfaceAttributes) InternalWithRef(ref terra.Reference) NetworkInterfaceAttributes {
	return NetworkInterfaceAttributes{ref: ref}
}

func (ni NetworkInterfaceAttributes) InternalTokens() hclwrite.Tokens {
	return ni.ref.InternalTokens()
}

func (ni NetworkInterfaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("arn"))
}

func (ni NetworkInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("id"))
}

func (ni NetworkInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("name"))
}

type PortRangesAttributes struct {
	ref terra.Reference
}

func (pr PortRangesAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr PortRangesAttributes) InternalWithRef(ref terra.Reference) PortRangesAttributes {
	return PortRangesAttributes{ref: ref}
}

func (pr PortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr PortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr PortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type PrefixListAttributes struct {
	ref terra.Reference
}

func (pl PrefixListAttributes) InternalRef() (terra.Reference, error) {
	return pl.ref, nil
}

func (pl PrefixListAttributes) InternalWithRef(ref terra.Reference) PrefixListAttributes {
	return PrefixListAttributes{ref: ref}
}

func (pl PrefixListAttributes) InternalTokens() hclwrite.Tokens {
	return pl.ref.InternalTokens()
}

func (pl PrefixListAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(pl.ref.Append("arn"))
}

func (pl PrefixListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pl.ref.Append("id"))
}

func (pl PrefixListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pl.ref.Append("name"))
}

type RouteTableAttributes struct {
	ref terra.Reference
}

func (rt RouteTableAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt RouteTableAttributes) InternalWithRef(ref terra.Reference) RouteTableAttributes {
	return RouteTableAttributes{ref: ref}
}

func (rt RouteTableAttributes) InternalTokens() hclwrite.Tokens {
	return rt.ref.InternalTokens()
}

func (rt RouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("arn"))
}

func (rt RouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("id"))
}

func (rt RouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("name"))
}

type ExplanationsRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (rtr ExplanationsRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return rtr.ref, nil
}

func (rtr ExplanationsRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) ExplanationsRouteTableRouteAttributes {
	return ExplanationsRouteTableRouteAttributes{ref: ref}
}

func (rtr ExplanationsRouteTableRouteAttributes) InternalTokens() hclwrite.Tokens {
	return rtr.ref.InternalTokens()
}

func (rtr ExplanationsRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_cidr"))
}

func (rtr ExplanationsRouteTableRouteAttributes) DestinationPrefixListId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_prefix_list_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) EgressOnlyInternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("egress_only_internet_gateway_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) GatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("gateway_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("instance_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) NatGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("nat_gateway_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("network_interface_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("origin"))
}

func (rtr ExplanationsRouteTableRouteAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("transit_gateway_id"))
}

func (rtr ExplanationsRouteTableRouteAttributes) VpcPeeringConnectionId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("vpc_peering_connection_id"))
}

type SecurityGroupAttributes struct {
	ref terra.Reference
}

func (sg SecurityGroupAttributes) InternalRef() (terra.Reference, error) {
	return sg.ref, nil
}

func (sg SecurityGroupAttributes) InternalWithRef(ref terra.Reference) SecurityGroupAttributes {
	return SecurityGroupAttributes{ref: ref}
}

func (sg SecurityGroupAttributes) InternalTokens() hclwrite.Tokens {
	return sg.ref.InternalTokens()
}

func (sg SecurityGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("arn"))
}

func (sg SecurityGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("id"))
}

func (sg SecurityGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("name"))
}

type ExplanationsSecurityGroupRuleAttributes struct {
	ref terra.Reference
}

func (sgr ExplanationsSecurityGroupRuleAttributes) InternalRef() (terra.Reference, error) {
	return sgr.ref, nil
}

func (sgr ExplanationsSecurityGroupRuleAttributes) InternalWithRef(ref terra.Reference) ExplanationsSecurityGroupRuleAttributes {
	return ExplanationsSecurityGroupRuleAttributes{ref: ref}
}

func (sgr ExplanationsSecurityGroupRuleAttributes) InternalTokens() hclwrite.Tokens {
	return sgr.ref.InternalTokens()
}

func (sgr ExplanationsSecurityGroupRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("cidr"))
}

func (sgr ExplanationsSecurityGroupRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("direction"))
}

func (sgr ExplanationsSecurityGroupRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("prefix_list_id"))
}

func (sgr ExplanationsSecurityGroupRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("protocol"))
}

func (sgr ExplanationsSecurityGroupRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("security_group_id"))
}

func (sgr ExplanationsSecurityGroupRuleAttributes) PortRange() terra.ListValue[ExplanationsSecurityGroupRulePortRangeAttributes] {
	return terra.ReferenceAsList[ExplanationsSecurityGroupRulePortRangeAttributes](sgr.ref.Append("port_range"))
}

type ExplanationsSecurityGroupRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr ExplanationsSecurityGroupRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr ExplanationsSecurityGroupRulePortRangeAttributes) InternalWithRef(ref terra.Reference) ExplanationsSecurityGroupRulePortRangeAttributes {
	return ExplanationsSecurityGroupRulePortRangeAttributes{ref: ref}
}

func (pr ExplanationsSecurityGroupRulePortRangeAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr ExplanationsSecurityGroupRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr ExplanationsSecurityGroupRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type SecurityGroupsAttributes struct {
	ref terra.Reference
}

func (sg SecurityGroupsAttributes) InternalRef() (terra.Reference, error) {
	return sg.ref, nil
}

func (sg SecurityGroupsAttributes) InternalWithRef(ref terra.Reference) SecurityGroupsAttributes {
	return SecurityGroupsAttributes{ref: ref}
}

func (sg SecurityGroupsAttributes) InternalTokens() hclwrite.Tokens {
	return sg.ref.InternalTokens()
}

func (sg SecurityGroupsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("arn"))
}

func (sg SecurityGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("id"))
}

func (sg SecurityGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("name"))
}

type ExplanationsSourceVpcAttributes struct {
	ref terra.Reference
}

func (sv ExplanationsSourceVpcAttributes) InternalRef() (terra.Reference, error) {
	return sv.ref, nil
}

func (sv ExplanationsSourceVpcAttributes) InternalWithRef(ref terra.Reference) ExplanationsSourceVpcAttributes {
	return ExplanationsSourceVpcAttributes{ref: ref}
}

func (sv ExplanationsSourceVpcAttributes) InternalTokens() hclwrite.Tokens {
	return sv.ref.InternalTokens()
}

func (sv ExplanationsSourceVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("arn"))
}

func (sv ExplanationsSourceVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("id"))
}

func (sv ExplanationsSourceVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("name"))
}

type ExplanationsSubnetAttributes struct {
	ref terra.Reference
}

func (s ExplanationsSubnetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ExplanationsSubnetAttributes) InternalWithRef(ref terra.Reference) ExplanationsSubnetAttributes {
	return ExplanationsSubnetAttributes{ref: ref}
}

func (s ExplanationsSubnetAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ExplanationsSubnetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("arn"))
}

func (s ExplanationsSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s ExplanationsSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type SubnetRouteTableAttributes struct {
	ref terra.Reference
}

func (srt SubnetRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return srt.ref, nil
}

func (srt SubnetRouteTableAttributes) InternalWithRef(ref terra.Reference) SubnetRouteTableAttributes {
	return SubnetRouteTableAttributes{ref: ref}
}

func (srt SubnetRouteTableAttributes) InternalTokens() hclwrite.Tokens {
	return srt.ref.InternalTokens()
}

func (srt SubnetRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(srt.ref.Append("arn"))
}

func (srt SubnetRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(srt.ref.Append("id"))
}

func (srt SubnetRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(srt.ref.Append("name"))
}

type ExplanationsTransitGatewayAttributes struct {
	ref terra.Reference
}

func (tg ExplanationsTransitGatewayAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg ExplanationsTransitGatewayAttributes) InternalWithRef(ref terra.Reference) ExplanationsTransitGatewayAttributes {
	return ExplanationsTransitGatewayAttributes{ref: ref}
}

func (tg ExplanationsTransitGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return tg.ref.InternalTokens()
}

func (tg ExplanationsTransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg ExplanationsTransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("id"))
}

func (tg ExplanationsTransitGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("name"))
}

type TransitGatewayAttachmentAttributes struct {
	ref terra.Reference
}

func (tga TransitGatewayAttachmentAttributes) InternalRef() (terra.Reference, error) {
	return tga.ref, nil
}

func (tga TransitGatewayAttachmentAttributes) InternalWithRef(ref terra.Reference) TransitGatewayAttachmentAttributes {
	return TransitGatewayAttachmentAttributes{ref: ref}
}

func (tga TransitGatewayAttachmentAttributes) InternalTokens() hclwrite.Tokens {
	return tga.ref.InternalTokens()
}

func (tga TransitGatewayAttachmentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tga.ref.Append("arn"))
}

func (tga TransitGatewayAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tga.ref.Append("id"))
}

func (tga TransitGatewayAttachmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tga.ref.Append("name"))
}

type TransitGatewayRouteTableAttributes struct {
	ref terra.Reference
}

func (tgrt TransitGatewayRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return tgrt.ref, nil
}

func (tgrt TransitGatewayRouteTableAttributes) InternalWithRef(ref terra.Reference) TransitGatewayRouteTableAttributes {
	return TransitGatewayRouteTableAttributes{ref: ref}
}

func (tgrt TransitGatewayRouteTableAttributes) InternalTokens() hclwrite.Tokens {
	return tgrt.ref.InternalTokens()
}

func (tgrt TransitGatewayRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tgrt.ref.Append("arn"))
}

func (tgrt TransitGatewayRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tgrt.ref.Append("id"))
}

func (tgrt TransitGatewayRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tgrt.ref.Append("name"))
}

type ExplanationsTransitGatewayRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return tgrtr.ref, nil
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) ExplanationsTransitGatewayRouteTableRouteAttributes {
	return ExplanationsTransitGatewayRouteTableRouteAttributes{ref: ref}
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) InternalTokens() hclwrite.Tokens {
	return tgrtr.ref.InternalTokens()
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("attachment_id"))
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("destination_cidr"))
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("prefix_list_id"))
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_id"))
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_type"))
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) RouteOrigin() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("route_origin"))
}

func (tgrtr ExplanationsTransitGatewayRouteTableRouteAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("state"))
}

type ExplanationsVpcAttributes struct {
	ref terra.Reference
}

func (v ExplanationsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ExplanationsVpcAttributes) InternalWithRef(ref terra.Reference) ExplanationsVpcAttributes {
	return ExplanationsVpcAttributes{ref: ref}
}

func (v ExplanationsVpcAttributes) InternalTokens() hclwrite.Tokens {
	return v.ref.InternalTokens()
}

func (v ExplanationsVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("arn"))
}

func (v ExplanationsVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v ExplanationsVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

type VpcEndpointAttributes struct {
	ref terra.Reference
}

func (ve VpcEndpointAttributes) InternalRef() (terra.Reference, error) {
	return ve.ref, nil
}

func (ve VpcEndpointAttributes) InternalWithRef(ref terra.Reference) VpcEndpointAttributes {
	return VpcEndpointAttributes{ref: ref}
}

func (ve VpcEndpointAttributes) InternalTokens() hclwrite.Tokens {
	return ve.ref.InternalTokens()
}

func (ve VpcEndpointAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("arn"))
}

func (ve VpcEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("id"))
}

func (ve VpcEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("name"))
}

type VpcPeeringConnectionAttributes struct {
	ref terra.Reference
}

func (vpc VpcPeeringConnectionAttributes) InternalRef() (terra.Reference, error) {
	return vpc.ref, nil
}

func (vpc VpcPeeringConnectionAttributes) InternalWithRef(ref terra.Reference) VpcPeeringConnectionAttributes {
	return VpcPeeringConnectionAttributes{ref: ref}
}

func (vpc VpcPeeringConnectionAttributes) InternalTokens() hclwrite.Tokens {
	return vpc.ref.InternalTokens()
}

func (vpc VpcPeeringConnectionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vpc.ref.Append("arn"))
}

func (vpc VpcPeeringConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vpc.ref.Append("id"))
}

func (vpc VpcPeeringConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vpc.ref.Append("name"))
}

type VpnConnectionAttributes struct {
	ref terra.Reference
}

func (vc VpnConnectionAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc VpnConnectionAttributes) InternalWithRef(ref terra.Reference) VpnConnectionAttributes {
	return VpnConnectionAttributes{ref: ref}
}

func (vc VpnConnectionAttributes) InternalTokens() hclwrite.Tokens {
	return vc.ref.InternalTokens()
}

func (vc VpnConnectionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("arn"))
}

func (vc VpnConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("id"))
}

func (vc VpnConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("name"))
}

type VpnGatewayAttributes struct {
	ref terra.Reference
}

func (vg VpnGatewayAttributes) InternalRef() (terra.Reference, error) {
	return vg.ref, nil
}

func (vg VpnGatewayAttributes) InternalWithRef(ref terra.Reference) VpnGatewayAttributes {
	return VpnGatewayAttributes{ref: ref}
}

func (vg VpnGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return vg.ref.InternalTokens()
}

func (vg VpnGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vg.ref.Append("arn"))
}

func (vg VpnGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vg.ref.Append("id"))
}

func (vg VpnGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vg.ref.Append("name"))
}

type ForwardPathComponentsAttributes struct {
	ref terra.Reference
}

func (fpc ForwardPathComponentsAttributes) InternalRef() (terra.Reference, error) {
	return fpc.ref, nil
}

func (fpc ForwardPathComponentsAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsAttributes {
	return ForwardPathComponentsAttributes{ref: ref}
}

func (fpc ForwardPathComponentsAttributes) InternalTokens() hclwrite.Tokens {
	return fpc.ref.InternalTokens()
}

func (fpc ForwardPathComponentsAttributes) SequenceNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(fpc.ref.Append("sequence_number"))
}

func (fpc ForwardPathComponentsAttributes) AclRule() terra.ListValue[ForwardPathComponentsAclRuleAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsAclRuleAttributes](fpc.ref.Append("acl_rule"))
}

func (fpc ForwardPathComponentsAttributes) AdditionalDetails() terra.ListValue[ForwardPathComponentsAdditionalDetailsAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsAdditionalDetailsAttributes](fpc.ref.Append("additional_details"))
}

func (fpc ForwardPathComponentsAttributes) AttachedTo() terra.ListValue[ForwardPathComponentsAttachedToAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsAttachedToAttributes](fpc.ref.Append("attached_to"))
}

func (fpc ForwardPathComponentsAttributes) Component() terra.ListValue[ForwardPathComponentsComponentAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsComponentAttributes](fpc.ref.Append("component"))
}

func (fpc ForwardPathComponentsAttributes) DestinationVpc() terra.ListValue[ForwardPathComponentsDestinationVpcAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsDestinationVpcAttributes](fpc.ref.Append("destination_vpc"))
}

func (fpc ForwardPathComponentsAttributes) InboundHeader() terra.ListValue[ForwardPathComponentsInboundHeaderAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsInboundHeaderAttributes](fpc.ref.Append("inbound_header"))
}

func (fpc ForwardPathComponentsAttributes) OutboundHeader() terra.ListValue[ForwardPathComponentsOutboundHeaderAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsOutboundHeaderAttributes](fpc.ref.Append("outbound_header"))
}

func (fpc ForwardPathComponentsAttributes) RouteTableRoute() terra.ListValue[ForwardPathComponentsRouteTableRouteAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsRouteTableRouteAttributes](fpc.ref.Append("route_table_route"))
}

func (fpc ForwardPathComponentsAttributes) SecurityGroupRule() terra.ListValue[ForwardPathComponentsSecurityGroupRuleAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsSecurityGroupRuleAttributes](fpc.ref.Append("security_group_rule"))
}

func (fpc ForwardPathComponentsAttributes) SourceVpc() terra.ListValue[ForwardPathComponentsSourceVpcAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsSourceVpcAttributes](fpc.ref.Append("source_vpc"))
}

func (fpc ForwardPathComponentsAttributes) Subnet() terra.ListValue[ForwardPathComponentsSubnetAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsSubnetAttributes](fpc.ref.Append("subnet"))
}

func (fpc ForwardPathComponentsAttributes) TransitGateway() terra.ListValue[ForwardPathComponentsTransitGatewayAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsTransitGatewayAttributes](fpc.ref.Append("transit_gateway"))
}

func (fpc ForwardPathComponentsAttributes) TransitGatewayRouteTableRoute() terra.ListValue[ForwardPathComponentsTransitGatewayRouteTableRouteAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsTransitGatewayRouteTableRouteAttributes](fpc.ref.Append("transit_gateway_route_table_route"))
}

func (fpc ForwardPathComponentsAttributes) Vpc() terra.ListValue[ForwardPathComponentsVpcAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsVpcAttributes](fpc.ref.Append("vpc"))
}

type ForwardPathComponentsAclRuleAttributes struct {
	ref terra.Reference
}

func (ar ForwardPathComponentsAclRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar ForwardPathComponentsAclRuleAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsAclRuleAttributes {
	return ForwardPathComponentsAclRuleAttributes{ref: ref}
}

func (ar ForwardPathComponentsAclRuleAttributes) InternalTokens() hclwrite.Tokens {
	return ar.ref.InternalTokens()
}

func (ar ForwardPathComponentsAclRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("cidr"))
}

func (ar ForwardPathComponentsAclRuleAttributes) Egress() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("egress"))
}

func (ar ForwardPathComponentsAclRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("protocol"))
}

func (ar ForwardPathComponentsAclRuleAttributes) RuleAction() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_action"))
}

func (ar ForwardPathComponentsAclRuleAttributes) RuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("rule_number"))
}

func (ar ForwardPathComponentsAclRuleAttributes) PortRange() terra.ListValue[ForwardPathComponentsAclRulePortRangeAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsAclRulePortRangeAttributes](ar.ref.Append("port_range"))
}

type ForwardPathComponentsAclRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr ForwardPathComponentsAclRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr ForwardPathComponentsAclRulePortRangeAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsAclRulePortRangeAttributes {
	return ForwardPathComponentsAclRulePortRangeAttributes{ref: ref}
}

func (pr ForwardPathComponentsAclRulePortRangeAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr ForwardPathComponentsAclRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr ForwardPathComponentsAclRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type ForwardPathComponentsAdditionalDetailsAttributes struct {
	ref terra.Reference
}

func (ad ForwardPathComponentsAdditionalDetailsAttributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad ForwardPathComponentsAdditionalDetailsAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsAdditionalDetailsAttributes {
	return ForwardPathComponentsAdditionalDetailsAttributes{ref: ref}
}

func (ad ForwardPathComponentsAdditionalDetailsAttributes) InternalTokens() hclwrite.Tokens {
	return ad.ref.InternalTokens()
}

func (ad ForwardPathComponentsAdditionalDetailsAttributes) AdditionalDetailType() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("additional_detail_type"))
}

func (ad ForwardPathComponentsAdditionalDetailsAttributes) Component() terra.ListValue[ForwardPathComponentsAdditionalDetailsComponentAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsAdditionalDetailsComponentAttributes](ad.ref.Append("component"))
}

type ForwardPathComponentsAdditionalDetailsComponentAttributes struct {
	ref terra.Reference
}

func (c ForwardPathComponentsAdditionalDetailsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ForwardPathComponentsAdditionalDetailsComponentAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsAdditionalDetailsComponentAttributes {
	return ForwardPathComponentsAdditionalDetailsComponentAttributes{ref: ref}
}

func (c ForwardPathComponentsAdditionalDetailsComponentAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ForwardPathComponentsAdditionalDetailsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c ForwardPathComponentsAdditionalDetailsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c ForwardPathComponentsAdditionalDetailsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type ForwardPathComponentsAttachedToAttributes struct {
	ref terra.Reference
}

func (at ForwardPathComponentsAttachedToAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at ForwardPathComponentsAttachedToAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsAttachedToAttributes {
	return ForwardPathComponentsAttachedToAttributes{ref: ref}
}

func (at ForwardPathComponentsAttachedToAttributes) InternalTokens() hclwrite.Tokens {
	return at.ref.InternalTokens()
}

func (at ForwardPathComponentsAttachedToAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("arn"))
}

func (at ForwardPathComponentsAttachedToAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

func (at ForwardPathComponentsAttachedToAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

type ForwardPathComponentsComponentAttributes struct {
	ref terra.Reference
}

func (c ForwardPathComponentsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ForwardPathComponentsComponentAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsComponentAttributes {
	return ForwardPathComponentsComponentAttributes{ref: ref}
}

func (c ForwardPathComponentsComponentAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ForwardPathComponentsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c ForwardPathComponentsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c ForwardPathComponentsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type ForwardPathComponentsDestinationVpcAttributes struct {
	ref terra.Reference
}

func (dv ForwardPathComponentsDestinationVpcAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv ForwardPathComponentsDestinationVpcAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsDestinationVpcAttributes {
	return ForwardPathComponentsDestinationVpcAttributes{ref: ref}
}

func (dv ForwardPathComponentsDestinationVpcAttributes) InternalTokens() hclwrite.Tokens {
	return dv.ref.InternalTokens()
}

func (dv ForwardPathComponentsDestinationVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("arn"))
}

func (dv ForwardPathComponentsDestinationVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("id"))
}

func (dv ForwardPathComponentsDestinationVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type ForwardPathComponentsInboundHeaderAttributes struct {
	ref terra.Reference
}

func (ih ForwardPathComponentsInboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return ih.ref, nil
}

func (ih ForwardPathComponentsInboundHeaderAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsInboundHeaderAttributes {
	return ForwardPathComponentsInboundHeaderAttributes{ref: ref}
}

func (ih ForwardPathComponentsInboundHeaderAttributes) InternalTokens() hclwrite.Tokens {
	return ih.ref.InternalTokens()
}

func (ih ForwardPathComponentsInboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("destination_addresses"))
}

func (ih ForwardPathComponentsInboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ih.ref.Append("protocol"))
}

func (ih ForwardPathComponentsInboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("source_addresses"))
}

func (ih ForwardPathComponentsInboundHeaderAttributes) DestinationPortRanges() terra.ListValue[ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes](ih.ref.Append("destination_port_ranges"))
}

func (ih ForwardPathComponentsInboundHeaderAttributes) SourcePortRanges() terra.ListValue[ForwardPathComponentsInboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsInboundHeaderSourcePortRangesAttributes](ih.ref.Append("source_port_ranges"))
}

type ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes {
	return ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return dpr.ref.InternalTokens()
}

func (dpr ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr ForwardPathComponentsInboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type ForwardPathComponentsInboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr ForwardPathComponentsInboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr ForwardPathComponentsInboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsInboundHeaderSourcePortRangesAttributes {
	return ForwardPathComponentsInboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr ForwardPathComponentsInboundHeaderSourcePortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return spr.ref.InternalTokens()
}

func (spr ForwardPathComponentsInboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr ForwardPathComponentsInboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type ForwardPathComponentsOutboundHeaderAttributes struct {
	ref terra.Reference
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return oh.ref, nil
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsOutboundHeaderAttributes {
	return ForwardPathComponentsOutboundHeaderAttributes{ref: ref}
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) InternalTokens() hclwrite.Tokens {
	return oh.ref.InternalTokens()
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("destination_addresses"))
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(oh.ref.Append("protocol"))
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("source_addresses"))
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) DestinationPortRanges() terra.ListValue[ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes](oh.ref.Append("destination_port_ranges"))
}

func (oh ForwardPathComponentsOutboundHeaderAttributes) SourcePortRanges() terra.ListValue[ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes](oh.ref.Append("source_port_ranges"))
}

type ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes {
	return ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return dpr.ref.InternalTokens()
}

func (dpr ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr ForwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes {
	return ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return spr.ref.InternalTokens()
}

func (spr ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr ForwardPathComponentsOutboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type ForwardPathComponentsRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return rtr.ref, nil
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsRouteTableRouteAttributes {
	return ForwardPathComponentsRouteTableRouteAttributes{ref: ref}
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) InternalTokens() hclwrite.Tokens {
	return rtr.ref.InternalTokens()
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_cidr"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) DestinationPrefixListId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_prefix_list_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) EgressOnlyInternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("egress_only_internet_gateway_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) GatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("gateway_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("instance_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) NatGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("nat_gateway_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("network_interface_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("origin"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("transit_gateway_id"))
}

func (rtr ForwardPathComponentsRouteTableRouteAttributes) VpcPeeringConnectionId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("vpc_peering_connection_id"))
}

type ForwardPathComponentsSecurityGroupRuleAttributes struct {
	ref terra.Reference
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) InternalRef() (terra.Reference, error) {
	return sgr.ref, nil
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsSecurityGroupRuleAttributes {
	return ForwardPathComponentsSecurityGroupRuleAttributes{ref: ref}
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) InternalTokens() hclwrite.Tokens {
	return sgr.ref.InternalTokens()
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("cidr"))
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("direction"))
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("prefix_list_id"))
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("protocol"))
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("security_group_id"))
}

func (sgr ForwardPathComponentsSecurityGroupRuleAttributes) PortRange() terra.ListValue[ForwardPathComponentsSecurityGroupRulePortRangeAttributes] {
	return terra.ReferenceAsList[ForwardPathComponentsSecurityGroupRulePortRangeAttributes](sgr.ref.Append("port_range"))
}

type ForwardPathComponentsSecurityGroupRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr ForwardPathComponentsSecurityGroupRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr ForwardPathComponentsSecurityGroupRulePortRangeAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsSecurityGroupRulePortRangeAttributes {
	return ForwardPathComponentsSecurityGroupRulePortRangeAttributes{ref: ref}
}

func (pr ForwardPathComponentsSecurityGroupRulePortRangeAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr ForwardPathComponentsSecurityGroupRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr ForwardPathComponentsSecurityGroupRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type ForwardPathComponentsSourceVpcAttributes struct {
	ref terra.Reference
}

func (sv ForwardPathComponentsSourceVpcAttributes) InternalRef() (terra.Reference, error) {
	return sv.ref, nil
}

func (sv ForwardPathComponentsSourceVpcAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsSourceVpcAttributes {
	return ForwardPathComponentsSourceVpcAttributes{ref: ref}
}

func (sv ForwardPathComponentsSourceVpcAttributes) InternalTokens() hclwrite.Tokens {
	return sv.ref.InternalTokens()
}

func (sv ForwardPathComponentsSourceVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("arn"))
}

func (sv ForwardPathComponentsSourceVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("id"))
}

func (sv ForwardPathComponentsSourceVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("name"))
}

type ForwardPathComponentsSubnetAttributes struct {
	ref terra.Reference
}

func (s ForwardPathComponentsSubnetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ForwardPathComponentsSubnetAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsSubnetAttributes {
	return ForwardPathComponentsSubnetAttributes{ref: ref}
}

func (s ForwardPathComponentsSubnetAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ForwardPathComponentsSubnetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("arn"))
}

func (s ForwardPathComponentsSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s ForwardPathComponentsSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type ForwardPathComponentsTransitGatewayAttributes struct {
	ref terra.Reference
}

func (tg ForwardPathComponentsTransitGatewayAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg ForwardPathComponentsTransitGatewayAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsTransitGatewayAttributes {
	return ForwardPathComponentsTransitGatewayAttributes{ref: ref}
}

func (tg ForwardPathComponentsTransitGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return tg.ref.InternalTokens()
}

func (tg ForwardPathComponentsTransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg ForwardPathComponentsTransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("id"))
}

func (tg ForwardPathComponentsTransitGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("name"))
}

type ForwardPathComponentsTransitGatewayRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return tgrtr.ref, nil
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsTransitGatewayRouteTableRouteAttributes {
	return ForwardPathComponentsTransitGatewayRouteTableRouteAttributes{ref: ref}
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) InternalTokens() hclwrite.Tokens {
	return tgrtr.ref.InternalTokens()
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("attachment_id"))
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("destination_cidr"))
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("prefix_list_id"))
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_id"))
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_type"))
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) RouteOrigin() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("route_origin"))
}

func (tgrtr ForwardPathComponentsTransitGatewayRouteTableRouteAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("state"))
}

type ForwardPathComponentsVpcAttributes struct {
	ref terra.Reference
}

func (v ForwardPathComponentsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ForwardPathComponentsVpcAttributes) InternalWithRef(ref terra.Reference) ForwardPathComponentsVpcAttributes {
	return ForwardPathComponentsVpcAttributes{ref: ref}
}

func (v ForwardPathComponentsVpcAttributes) InternalTokens() hclwrite.Tokens {
	return v.ref.InternalTokens()
}

func (v ForwardPathComponentsVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("arn"))
}

func (v ForwardPathComponentsVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v ForwardPathComponentsVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

type ReturnPathComponentsAttributes struct {
	ref terra.Reference
}

func (rpc ReturnPathComponentsAttributes) InternalRef() (terra.Reference, error) {
	return rpc.ref, nil
}

func (rpc ReturnPathComponentsAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsAttributes {
	return ReturnPathComponentsAttributes{ref: ref}
}

func (rpc ReturnPathComponentsAttributes) InternalTokens() hclwrite.Tokens {
	return rpc.ref.InternalTokens()
}

func (rpc ReturnPathComponentsAttributes) SequenceNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(rpc.ref.Append("sequence_number"))
}

func (rpc ReturnPathComponentsAttributes) AclRule() terra.ListValue[ReturnPathComponentsAclRuleAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsAclRuleAttributes](rpc.ref.Append("acl_rule"))
}

func (rpc ReturnPathComponentsAttributes) AdditionalDetails() terra.ListValue[ReturnPathComponentsAdditionalDetailsAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsAdditionalDetailsAttributes](rpc.ref.Append("additional_details"))
}

func (rpc ReturnPathComponentsAttributes) AttachedTo() terra.ListValue[ReturnPathComponentsAttachedToAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsAttachedToAttributes](rpc.ref.Append("attached_to"))
}

func (rpc ReturnPathComponentsAttributes) Component() terra.ListValue[ReturnPathComponentsComponentAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsComponentAttributes](rpc.ref.Append("component"))
}

func (rpc ReturnPathComponentsAttributes) DestinationVpc() terra.ListValue[ReturnPathComponentsDestinationVpcAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsDestinationVpcAttributes](rpc.ref.Append("destination_vpc"))
}

func (rpc ReturnPathComponentsAttributes) InboundHeader() terra.ListValue[ReturnPathComponentsInboundHeaderAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsInboundHeaderAttributes](rpc.ref.Append("inbound_header"))
}

func (rpc ReturnPathComponentsAttributes) OutboundHeader() terra.ListValue[ReturnPathComponentsOutboundHeaderAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsOutboundHeaderAttributes](rpc.ref.Append("outbound_header"))
}

func (rpc ReturnPathComponentsAttributes) RouteTableRoute() terra.ListValue[ReturnPathComponentsRouteTableRouteAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsRouteTableRouteAttributes](rpc.ref.Append("route_table_route"))
}

func (rpc ReturnPathComponentsAttributes) SecurityGroupRule() terra.ListValue[ReturnPathComponentsSecurityGroupRuleAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsSecurityGroupRuleAttributes](rpc.ref.Append("security_group_rule"))
}

func (rpc ReturnPathComponentsAttributes) SourceVpc() terra.ListValue[ReturnPathComponentsSourceVpcAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsSourceVpcAttributes](rpc.ref.Append("source_vpc"))
}

func (rpc ReturnPathComponentsAttributes) Subnet() terra.ListValue[ReturnPathComponentsSubnetAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsSubnetAttributes](rpc.ref.Append("subnet"))
}

func (rpc ReturnPathComponentsAttributes) TransitGateway() terra.ListValue[ReturnPathComponentsTransitGatewayAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsTransitGatewayAttributes](rpc.ref.Append("transit_gateway"))
}

func (rpc ReturnPathComponentsAttributes) TransitGatewayRouteTableRoute() terra.ListValue[ReturnPathComponentsTransitGatewayRouteTableRouteAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsTransitGatewayRouteTableRouteAttributes](rpc.ref.Append("transit_gateway_route_table_route"))
}

func (rpc ReturnPathComponentsAttributes) Vpc() terra.ListValue[ReturnPathComponentsVpcAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsVpcAttributes](rpc.ref.Append("vpc"))
}

type ReturnPathComponentsAclRuleAttributes struct {
	ref terra.Reference
}

func (ar ReturnPathComponentsAclRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar ReturnPathComponentsAclRuleAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsAclRuleAttributes {
	return ReturnPathComponentsAclRuleAttributes{ref: ref}
}

func (ar ReturnPathComponentsAclRuleAttributes) InternalTokens() hclwrite.Tokens {
	return ar.ref.InternalTokens()
}

func (ar ReturnPathComponentsAclRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("cidr"))
}

func (ar ReturnPathComponentsAclRuleAttributes) Egress() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("egress"))
}

func (ar ReturnPathComponentsAclRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("protocol"))
}

func (ar ReturnPathComponentsAclRuleAttributes) RuleAction() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_action"))
}

func (ar ReturnPathComponentsAclRuleAttributes) RuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("rule_number"))
}

func (ar ReturnPathComponentsAclRuleAttributes) PortRange() terra.ListValue[ReturnPathComponentsAclRulePortRangeAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsAclRulePortRangeAttributes](ar.ref.Append("port_range"))
}

type ReturnPathComponentsAclRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr ReturnPathComponentsAclRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr ReturnPathComponentsAclRulePortRangeAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsAclRulePortRangeAttributes {
	return ReturnPathComponentsAclRulePortRangeAttributes{ref: ref}
}

func (pr ReturnPathComponentsAclRulePortRangeAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr ReturnPathComponentsAclRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr ReturnPathComponentsAclRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type ReturnPathComponentsAdditionalDetailsAttributes struct {
	ref terra.Reference
}

func (ad ReturnPathComponentsAdditionalDetailsAttributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad ReturnPathComponentsAdditionalDetailsAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsAdditionalDetailsAttributes {
	return ReturnPathComponentsAdditionalDetailsAttributes{ref: ref}
}

func (ad ReturnPathComponentsAdditionalDetailsAttributes) InternalTokens() hclwrite.Tokens {
	return ad.ref.InternalTokens()
}

func (ad ReturnPathComponentsAdditionalDetailsAttributes) AdditionalDetailType() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("additional_detail_type"))
}

func (ad ReturnPathComponentsAdditionalDetailsAttributes) Component() terra.ListValue[ReturnPathComponentsAdditionalDetailsComponentAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsAdditionalDetailsComponentAttributes](ad.ref.Append("component"))
}

type ReturnPathComponentsAdditionalDetailsComponentAttributes struct {
	ref terra.Reference
}

func (c ReturnPathComponentsAdditionalDetailsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ReturnPathComponentsAdditionalDetailsComponentAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsAdditionalDetailsComponentAttributes {
	return ReturnPathComponentsAdditionalDetailsComponentAttributes{ref: ref}
}

func (c ReturnPathComponentsAdditionalDetailsComponentAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ReturnPathComponentsAdditionalDetailsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c ReturnPathComponentsAdditionalDetailsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c ReturnPathComponentsAdditionalDetailsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type ReturnPathComponentsAttachedToAttributes struct {
	ref terra.Reference
}

func (at ReturnPathComponentsAttachedToAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at ReturnPathComponentsAttachedToAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsAttachedToAttributes {
	return ReturnPathComponentsAttachedToAttributes{ref: ref}
}

func (at ReturnPathComponentsAttachedToAttributes) InternalTokens() hclwrite.Tokens {
	return at.ref.InternalTokens()
}

func (at ReturnPathComponentsAttachedToAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("arn"))
}

func (at ReturnPathComponentsAttachedToAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

func (at ReturnPathComponentsAttachedToAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

type ReturnPathComponentsComponentAttributes struct {
	ref terra.Reference
}

func (c ReturnPathComponentsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ReturnPathComponentsComponentAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsComponentAttributes {
	return ReturnPathComponentsComponentAttributes{ref: ref}
}

func (c ReturnPathComponentsComponentAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ReturnPathComponentsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c ReturnPathComponentsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c ReturnPathComponentsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type ReturnPathComponentsDestinationVpcAttributes struct {
	ref terra.Reference
}

func (dv ReturnPathComponentsDestinationVpcAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv ReturnPathComponentsDestinationVpcAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsDestinationVpcAttributes {
	return ReturnPathComponentsDestinationVpcAttributes{ref: ref}
}

func (dv ReturnPathComponentsDestinationVpcAttributes) InternalTokens() hclwrite.Tokens {
	return dv.ref.InternalTokens()
}

func (dv ReturnPathComponentsDestinationVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("arn"))
}

func (dv ReturnPathComponentsDestinationVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("id"))
}

func (dv ReturnPathComponentsDestinationVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type ReturnPathComponentsInboundHeaderAttributes struct {
	ref terra.Reference
}

func (ih ReturnPathComponentsInboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return ih.ref, nil
}

func (ih ReturnPathComponentsInboundHeaderAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsInboundHeaderAttributes {
	return ReturnPathComponentsInboundHeaderAttributes{ref: ref}
}

func (ih ReturnPathComponentsInboundHeaderAttributes) InternalTokens() hclwrite.Tokens {
	return ih.ref.InternalTokens()
}

func (ih ReturnPathComponentsInboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("destination_addresses"))
}

func (ih ReturnPathComponentsInboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ih.ref.Append("protocol"))
}

func (ih ReturnPathComponentsInboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("source_addresses"))
}

func (ih ReturnPathComponentsInboundHeaderAttributes) DestinationPortRanges() terra.ListValue[ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes](ih.ref.Append("destination_port_ranges"))
}

func (ih ReturnPathComponentsInboundHeaderAttributes) SourcePortRanges() terra.ListValue[ReturnPathComponentsInboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsInboundHeaderSourcePortRangesAttributes](ih.ref.Append("source_port_ranges"))
}

type ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes {
	return ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return dpr.ref.InternalTokens()
}

func (dpr ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr ReturnPathComponentsInboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type ReturnPathComponentsInboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr ReturnPathComponentsInboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr ReturnPathComponentsInboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsInboundHeaderSourcePortRangesAttributes {
	return ReturnPathComponentsInboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr ReturnPathComponentsInboundHeaderSourcePortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return spr.ref.InternalTokens()
}

func (spr ReturnPathComponentsInboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr ReturnPathComponentsInboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type ReturnPathComponentsOutboundHeaderAttributes struct {
	ref terra.Reference
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return oh.ref, nil
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsOutboundHeaderAttributes {
	return ReturnPathComponentsOutboundHeaderAttributes{ref: ref}
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) InternalTokens() hclwrite.Tokens {
	return oh.ref.InternalTokens()
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("destination_addresses"))
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(oh.ref.Append("protocol"))
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("source_addresses"))
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) DestinationPortRanges() terra.ListValue[ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes](oh.ref.Append("destination_port_ranges"))
}

func (oh ReturnPathComponentsOutboundHeaderAttributes) SourcePortRanges() terra.ListValue[ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes](oh.ref.Append("source_port_ranges"))
}

type ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes {
	return ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return dpr.ref.InternalTokens()
}

func (dpr ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr ReturnPathComponentsOutboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes {
	return ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalTokens() hclwrite.Tokens {
	return spr.ref.InternalTokens()
}

func (spr ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr ReturnPathComponentsOutboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type ReturnPathComponentsRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return rtr.ref, nil
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsRouteTableRouteAttributes {
	return ReturnPathComponentsRouteTableRouteAttributes{ref: ref}
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) InternalTokens() hclwrite.Tokens {
	return rtr.ref.InternalTokens()
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_cidr"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) DestinationPrefixListId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_prefix_list_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) EgressOnlyInternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("egress_only_internet_gateway_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) GatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("gateway_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("instance_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) NatGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("nat_gateway_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("network_interface_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("origin"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("transit_gateway_id"))
}

func (rtr ReturnPathComponentsRouteTableRouteAttributes) VpcPeeringConnectionId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("vpc_peering_connection_id"))
}

type ReturnPathComponentsSecurityGroupRuleAttributes struct {
	ref terra.Reference
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) InternalRef() (terra.Reference, error) {
	return sgr.ref, nil
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsSecurityGroupRuleAttributes {
	return ReturnPathComponentsSecurityGroupRuleAttributes{ref: ref}
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) InternalTokens() hclwrite.Tokens {
	return sgr.ref.InternalTokens()
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("cidr"))
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("direction"))
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("prefix_list_id"))
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("protocol"))
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("security_group_id"))
}

func (sgr ReturnPathComponentsSecurityGroupRuleAttributes) PortRange() terra.ListValue[ReturnPathComponentsSecurityGroupRulePortRangeAttributes] {
	return terra.ReferenceAsList[ReturnPathComponentsSecurityGroupRulePortRangeAttributes](sgr.ref.Append("port_range"))
}

type ReturnPathComponentsSecurityGroupRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr ReturnPathComponentsSecurityGroupRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr ReturnPathComponentsSecurityGroupRulePortRangeAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsSecurityGroupRulePortRangeAttributes {
	return ReturnPathComponentsSecurityGroupRulePortRangeAttributes{ref: ref}
}

func (pr ReturnPathComponentsSecurityGroupRulePortRangeAttributes) InternalTokens() hclwrite.Tokens {
	return pr.ref.InternalTokens()
}

func (pr ReturnPathComponentsSecurityGroupRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr ReturnPathComponentsSecurityGroupRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type ReturnPathComponentsSourceVpcAttributes struct {
	ref terra.Reference
}

func (sv ReturnPathComponentsSourceVpcAttributes) InternalRef() (terra.Reference, error) {
	return sv.ref, nil
}

func (sv ReturnPathComponentsSourceVpcAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsSourceVpcAttributes {
	return ReturnPathComponentsSourceVpcAttributes{ref: ref}
}

func (sv ReturnPathComponentsSourceVpcAttributes) InternalTokens() hclwrite.Tokens {
	return sv.ref.InternalTokens()
}

func (sv ReturnPathComponentsSourceVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("arn"))
}

func (sv ReturnPathComponentsSourceVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("id"))
}

func (sv ReturnPathComponentsSourceVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("name"))
}

type ReturnPathComponentsSubnetAttributes struct {
	ref terra.Reference
}

func (s ReturnPathComponentsSubnetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ReturnPathComponentsSubnetAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsSubnetAttributes {
	return ReturnPathComponentsSubnetAttributes{ref: ref}
}

func (s ReturnPathComponentsSubnetAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ReturnPathComponentsSubnetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("arn"))
}

func (s ReturnPathComponentsSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s ReturnPathComponentsSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type ReturnPathComponentsTransitGatewayAttributes struct {
	ref terra.Reference
}

func (tg ReturnPathComponentsTransitGatewayAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg ReturnPathComponentsTransitGatewayAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsTransitGatewayAttributes {
	return ReturnPathComponentsTransitGatewayAttributes{ref: ref}
}

func (tg ReturnPathComponentsTransitGatewayAttributes) InternalTokens() hclwrite.Tokens {
	return tg.ref.InternalTokens()
}

func (tg ReturnPathComponentsTransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg ReturnPathComponentsTransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("id"))
}

func (tg ReturnPathComponentsTransitGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("name"))
}

type ReturnPathComponentsTransitGatewayRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return tgrtr.ref, nil
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsTransitGatewayRouteTableRouteAttributes {
	return ReturnPathComponentsTransitGatewayRouteTableRouteAttributes{ref: ref}
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) InternalTokens() hclwrite.Tokens {
	return tgrtr.ref.InternalTokens()
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("attachment_id"))
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("destination_cidr"))
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("prefix_list_id"))
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_id"))
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_type"))
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) RouteOrigin() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("route_origin"))
}

func (tgrtr ReturnPathComponentsTransitGatewayRouteTableRouteAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("state"))
}

type ReturnPathComponentsVpcAttributes struct {
	ref terra.Reference
}

func (v ReturnPathComponentsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v ReturnPathComponentsVpcAttributes) InternalWithRef(ref terra.Reference) ReturnPathComponentsVpcAttributes {
	return ReturnPathComponentsVpcAttributes{ref: ref}
}

func (v ReturnPathComponentsVpcAttributes) InternalTokens() hclwrite.Tokens {
	return v.ref.InternalTokens()
}

func (v ReturnPathComponentsVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("arn"))
}

func (v ReturnPathComponentsVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v ReturnPathComponentsVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

type AlternatePathHintsState struct {
	ComponentArn string `json:"component_arn"`
	ComponentId  string `json:"component_id"`
}

type ExplanationsState struct {
	Address                       string                                           `json:"address"`
	Addresses                     []string                                         `json:"addresses"`
	AvailabilityZones             []string                                         `json:"availability_zones"`
	Cidrs                         []string                                         `json:"cidrs"`
	Direction                     string                                           `json:"direction"`
	ExplanationCode               string                                           `json:"explanation_code"`
	LoadBalancerArn               string                                           `json:"load_balancer_arn"`
	LoadBalancerListenerPort      float64                                          `json:"load_balancer_listener_port"`
	LoadBalancerTargetPort        float64                                          `json:"load_balancer_target_port"`
	MissingComponent              string                                           `json:"missing_component"`
	PacketField                   string                                           `json:"packet_field"`
	Port                          float64                                          `json:"port"`
	Protocols                     []string                                         `json:"protocols"`
	State                         string                                           `json:"state"`
	Acl                           []AclState                                       `json:"acl"`
	AclRule                       []ExplanationsAclRuleState                       `json:"acl_rule"`
	AttachedTo                    []ExplanationsAttachedToState                    `json:"attached_to"`
	ClassicLoadBalancerListener   []ClassicLoadBalancerListenerState               `json:"classic_load_balancer_listener"`
	Component                     []ExplanationsComponentState                     `json:"component"`
	CustomerGateway               []CustomerGatewayState                           `json:"customer_gateway"`
	Destination                   []DestinationState                               `json:"destination"`
	DestinationVpc                []ExplanationsDestinationVpcState                `json:"destination_vpc"`
	ElasticLoadBalancerListener   []ElasticLoadBalancerListenerState               `json:"elastic_load_balancer_listener"`
	IngressRouteTable             []IngressRouteTableState                         `json:"ingress_route_table"`
	InternetGateway               []InternetGatewayState                           `json:"internet_gateway"`
	LoadBalancerTargetGroup       []LoadBalancerTargetGroupState                   `json:"load_balancer_target_group"`
	LoadBalancerTargetGroups      []LoadBalancerTargetGroupsState                  `json:"load_balancer_target_groups"`
	NatGateway                    []NatGatewayState                                `json:"nat_gateway"`
	NetworkInterface              []NetworkInterfaceState                          `json:"network_interface"`
	PortRanges                    []PortRangesState                                `json:"port_ranges"`
	PrefixList                    []PrefixListState                                `json:"prefix_list"`
	RouteTable                    []RouteTableState                                `json:"route_table"`
	RouteTableRoute               []ExplanationsRouteTableRouteState               `json:"route_table_route"`
	SecurityGroup                 []SecurityGroupState                             `json:"security_group"`
	SecurityGroupRule             []ExplanationsSecurityGroupRuleState             `json:"security_group_rule"`
	SecurityGroups                []SecurityGroupsState                            `json:"security_groups"`
	SourceVpc                     []ExplanationsSourceVpcState                     `json:"source_vpc"`
	Subnet                        []ExplanationsSubnetState                        `json:"subnet"`
	SubnetRouteTable              []SubnetRouteTableState                          `json:"subnet_route_table"`
	TransitGateway                []ExplanationsTransitGatewayState                `json:"transit_gateway"`
	TransitGatewayAttachment      []TransitGatewayAttachmentState                  `json:"transit_gateway_attachment"`
	TransitGatewayRouteTable      []TransitGatewayRouteTableState                  `json:"transit_gateway_route_table"`
	TransitGatewayRouteTableRoute []ExplanationsTransitGatewayRouteTableRouteState `json:"transit_gateway_route_table_route"`
	Vpc                           []ExplanationsVpcState                           `json:"vpc"`
	VpcEndpoint                   []VpcEndpointState                               `json:"vpc_endpoint"`
	VpcPeeringConnection          []VpcPeeringConnectionState                      `json:"vpc_peering_connection"`
	VpnConnection                 []VpnConnectionState                             `json:"vpn_connection"`
	VpnGateway                    []VpnGatewayState                                `json:"vpn_gateway"`
}

type AclState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsAclRuleState struct {
	Cidr       string                              `json:"cidr"`
	Egress     bool                                `json:"egress"`
	Protocol   string                              `json:"protocol"`
	RuleAction string                              `json:"rule_action"`
	RuleNumber float64                             `json:"rule_number"`
	PortRange  []ExplanationsAclRulePortRangeState `json:"port_range"`
}

type ExplanationsAclRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ExplanationsAttachedToState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ClassicLoadBalancerListenerState struct {
	InstancePort     float64 `json:"instance_port"`
	LoadBalancerPort float64 `json:"load_balancer_port"`
}

type ExplanationsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type CustomerGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DestinationState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsDestinationVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ElasticLoadBalancerListenerState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type IngressRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type InternetGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type LoadBalancerTargetGroupState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type LoadBalancerTargetGroupsState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type NatGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type NetworkInterfaceState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type PortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type PrefixListState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type RouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsRouteTableRouteState struct {
	DestinationCidr             string `json:"destination_cidr"`
	DestinationPrefixListId     string `json:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `json:"egress_only_internet_gateway_id"`
	GatewayId                   string `json:"gateway_id"`
	InstanceId                  string `json:"instance_id"`
	NatGatewayId                string `json:"nat_gateway_id"`
	NetworkInterfaceId          string `json:"network_interface_id"`
	Origin                      string `json:"origin"`
	TransitGatewayId            string `json:"transit_gateway_id"`
	VpcPeeringConnectionId      string `json:"vpc_peering_connection_id"`
}

type SecurityGroupState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSecurityGroupRuleState struct {
	Cidr            string                                        `json:"cidr"`
	Direction       string                                        `json:"direction"`
	PrefixListId    string                                        `json:"prefix_list_id"`
	Protocol        string                                        `json:"protocol"`
	SecurityGroupId string                                        `json:"security_group_id"`
	PortRange       []ExplanationsSecurityGroupRulePortRangeState `json:"port_range"`
}

type ExplanationsSecurityGroupRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type SecurityGroupsState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSourceVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSubnetState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type SubnetRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsTransitGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type TransitGatewayAttachmentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type TransitGatewayRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsTransitGatewayRouteTableRouteState struct {
	AttachmentId    string `json:"attachment_id"`
	DestinationCidr string `json:"destination_cidr"`
	PrefixListId    string `json:"prefix_list_id"`
	ResourceId      string `json:"resource_id"`
	ResourceType    string `json:"resource_type"`
	RouteOrigin     string `json:"route_origin"`
	State           string `json:"state"`
}

type ExplanationsVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type VpcEndpointState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type VpcPeeringConnectionState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type VpnConnectionState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type VpnGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsState struct {
	SequenceNumber                float64                                                   `json:"sequence_number"`
	AclRule                       []ForwardPathComponentsAclRuleState                       `json:"acl_rule"`
	AdditionalDetails             []ForwardPathComponentsAdditionalDetailsState             `json:"additional_details"`
	AttachedTo                    []ForwardPathComponentsAttachedToState                    `json:"attached_to"`
	Component                     []ForwardPathComponentsComponentState                     `json:"component"`
	DestinationVpc                []ForwardPathComponentsDestinationVpcState                `json:"destination_vpc"`
	InboundHeader                 []ForwardPathComponentsInboundHeaderState                 `json:"inbound_header"`
	OutboundHeader                []ForwardPathComponentsOutboundHeaderState                `json:"outbound_header"`
	RouteTableRoute               []ForwardPathComponentsRouteTableRouteState               `json:"route_table_route"`
	SecurityGroupRule             []ForwardPathComponentsSecurityGroupRuleState             `json:"security_group_rule"`
	SourceVpc                     []ForwardPathComponentsSourceVpcState                     `json:"source_vpc"`
	Subnet                        []ForwardPathComponentsSubnetState                        `json:"subnet"`
	TransitGateway                []ForwardPathComponentsTransitGatewayState                `json:"transit_gateway"`
	TransitGatewayRouteTableRoute []ForwardPathComponentsTransitGatewayRouteTableRouteState `json:"transit_gateway_route_table_route"`
	Vpc                           []ForwardPathComponentsVpcState                           `json:"vpc"`
}

type ForwardPathComponentsAclRuleState struct {
	Cidr       string                                       `json:"cidr"`
	Egress     bool                                         `json:"egress"`
	Protocol   string                                       `json:"protocol"`
	RuleAction string                                       `json:"rule_action"`
	RuleNumber float64                                      `json:"rule_number"`
	PortRange  []ForwardPathComponentsAclRulePortRangeState `json:"port_range"`
}

type ForwardPathComponentsAclRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsAdditionalDetailsState struct {
	AdditionalDetailType string                                                 `json:"additional_detail_type"`
	Component            []ForwardPathComponentsAdditionalDetailsComponentState `json:"component"`
}

type ForwardPathComponentsAdditionalDetailsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsAttachedToState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsDestinationVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsInboundHeaderState struct {
	DestinationAddresses  []string                                                       `json:"destination_addresses"`
	Protocol              string                                                         `json:"protocol"`
	SourceAddresses       []string                                                       `json:"source_addresses"`
	DestinationPortRanges []ForwardPathComponentsInboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ForwardPathComponentsInboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ForwardPathComponentsInboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsInboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsOutboundHeaderState struct {
	DestinationAddresses  []string                                                        `json:"destination_addresses"`
	Protocol              string                                                          `json:"protocol"`
	SourceAddresses       []string                                                        `json:"source_addresses"`
	DestinationPortRanges []ForwardPathComponentsOutboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ForwardPathComponentsOutboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ForwardPathComponentsOutboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsOutboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsRouteTableRouteState struct {
	DestinationCidr             string `json:"destination_cidr"`
	DestinationPrefixListId     string `json:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `json:"egress_only_internet_gateway_id"`
	GatewayId                   string `json:"gateway_id"`
	InstanceId                  string `json:"instance_id"`
	NatGatewayId                string `json:"nat_gateway_id"`
	NetworkInterfaceId          string `json:"network_interface_id"`
	Origin                      string `json:"origin"`
	TransitGatewayId            string `json:"transit_gateway_id"`
	VpcPeeringConnectionId      string `json:"vpc_peering_connection_id"`
}

type ForwardPathComponentsSecurityGroupRuleState struct {
	Cidr            string                                                 `json:"cidr"`
	Direction       string                                                 `json:"direction"`
	PrefixListId    string                                                 `json:"prefix_list_id"`
	Protocol        string                                                 `json:"protocol"`
	SecurityGroupId string                                                 `json:"security_group_id"`
	PortRange       []ForwardPathComponentsSecurityGroupRulePortRangeState `json:"port_range"`
}

type ForwardPathComponentsSecurityGroupRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsSourceVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsSubnetState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsTransitGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsTransitGatewayRouteTableRouteState struct {
	AttachmentId    string `json:"attachment_id"`
	DestinationCidr string `json:"destination_cidr"`
	PrefixListId    string `json:"prefix_list_id"`
	ResourceId      string `json:"resource_id"`
	ResourceType    string `json:"resource_type"`
	RouteOrigin     string `json:"route_origin"`
	State           string `json:"state"`
}

type ForwardPathComponentsVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsState struct {
	SequenceNumber                float64                                                  `json:"sequence_number"`
	AclRule                       []ReturnPathComponentsAclRuleState                       `json:"acl_rule"`
	AdditionalDetails             []ReturnPathComponentsAdditionalDetailsState             `json:"additional_details"`
	AttachedTo                    []ReturnPathComponentsAttachedToState                    `json:"attached_to"`
	Component                     []ReturnPathComponentsComponentState                     `json:"component"`
	DestinationVpc                []ReturnPathComponentsDestinationVpcState                `json:"destination_vpc"`
	InboundHeader                 []ReturnPathComponentsInboundHeaderState                 `json:"inbound_header"`
	OutboundHeader                []ReturnPathComponentsOutboundHeaderState                `json:"outbound_header"`
	RouteTableRoute               []ReturnPathComponentsRouteTableRouteState               `json:"route_table_route"`
	SecurityGroupRule             []ReturnPathComponentsSecurityGroupRuleState             `json:"security_group_rule"`
	SourceVpc                     []ReturnPathComponentsSourceVpcState                     `json:"source_vpc"`
	Subnet                        []ReturnPathComponentsSubnetState                        `json:"subnet"`
	TransitGateway                []ReturnPathComponentsTransitGatewayState                `json:"transit_gateway"`
	TransitGatewayRouteTableRoute []ReturnPathComponentsTransitGatewayRouteTableRouteState `json:"transit_gateway_route_table_route"`
	Vpc                           []ReturnPathComponentsVpcState                           `json:"vpc"`
}

type ReturnPathComponentsAclRuleState struct {
	Cidr       string                                      `json:"cidr"`
	Egress     bool                                        `json:"egress"`
	Protocol   string                                      `json:"protocol"`
	RuleAction string                                      `json:"rule_action"`
	RuleNumber float64                                     `json:"rule_number"`
	PortRange  []ReturnPathComponentsAclRulePortRangeState `json:"port_range"`
}

type ReturnPathComponentsAclRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsAdditionalDetailsState struct {
	AdditionalDetailType string                                                `json:"additional_detail_type"`
	Component            []ReturnPathComponentsAdditionalDetailsComponentState `json:"component"`
}

type ReturnPathComponentsAdditionalDetailsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsAttachedToState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsDestinationVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsInboundHeaderState struct {
	DestinationAddresses  []string                                                      `json:"destination_addresses"`
	Protocol              string                                                        `json:"protocol"`
	SourceAddresses       []string                                                      `json:"source_addresses"`
	DestinationPortRanges []ReturnPathComponentsInboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ReturnPathComponentsInboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ReturnPathComponentsInboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsInboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsOutboundHeaderState struct {
	DestinationAddresses  []string                                                       `json:"destination_addresses"`
	Protocol              string                                                         `json:"protocol"`
	SourceAddresses       []string                                                       `json:"source_addresses"`
	DestinationPortRanges []ReturnPathComponentsOutboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ReturnPathComponentsOutboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ReturnPathComponentsOutboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsOutboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsRouteTableRouteState struct {
	DestinationCidr             string `json:"destination_cidr"`
	DestinationPrefixListId     string `json:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `json:"egress_only_internet_gateway_id"`
	GatewayId                   string `json:"gateway_id"`
	InstanceId                  string `json:"instance_id"`
	NatGatewayId                string `json:"nat_gateway_id"`
	NetworkInterfaceId          string `json:"network_interface_id"`
	Origin                      string `json:"origin"`
	TransitGatewayId            string `json:"transit_gateway_id"`
	VpcPeeringConnectionId      string `json:"vpc_peering_connection_id"`
}

type ReturnPathComponentsSecurityGroupRuleState struct {
	Cidr            string                                                `json:"cidr"`
	Direction       string                                                `json:"direction"`
	PrefixListId    string                                                `json:"prefix_list_id"`
	Protocol        string                                                `json:"protocol"`
	SecurityGroupId string                                                `json:"security_group_id"`
	PortRange       []ReturnPathComponentsSecurityGroupRulePortRangeState `json:"port_range"`
}

type ReturnPathComponentsSecurityGroupRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsSourceVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsSubnetState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsTransitGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsTransitGatewayRouteTableRouteState struct {
	AttachmentId    string `json:"attachment_id"`
	DestinationCidr string `json:"destination_cidr"`
	PrefixListId    string `json:"prefix_list_id"`
	ResourceId      string `json:"resource_id"`
	ResourceType    string `json:"resource_type"`
	RouteOrigin     string `json:"route_origin"`
	State           string `json:"state"`
}

type ReturnPathComponentsVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
