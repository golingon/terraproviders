// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datakeypair "github.com/golingon/terraproviders/aws/4.60.0/datakeypair"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKeyPair(name string, args DataKeyPairArgs) *DataKeyPair {
	return &DataKeyPair{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKeyPair)(nil)

type DataKeyPair struct {
	Name string
	Args DataKeyPairArgs
}

func (kp *DataKeyPair) DataSource() string {
	return "aws_key_pair"
}

func (kp *DataKeyPair) LocalName() string {
	return kp.Name
}

func (kp *DataKeyPair) Configuration() interface{} {
	return kp.Args
}

func (kp *DataKeyPair) Attributes() dataKeyPairAttributes {
	return dataKeyPairAttributes{ref: terra.ReferenceDataResource(kp)}
}

type DataKeyPairArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IncludePublicKey: bool, optional
	IncludePublicKey terra.BoolValue `hcl:"include_public_key,attr"`
	// KeyName: string, optional
	KeyName terra.StringValue `hcl:"key_name,attr"`
	// KeyPairId: string, optional
	KeyPairId terra.StringValue `hcl:"key_pair_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []datakeypair.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datakeypair.Timeouts `hcl:"timeouts,block"`
}
type dataKeyPairAttributes struct {
	ref terra.Reference
}

func (kp dataKeyPairAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("arn"))
}

func (kp dataKeyPairAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("create_time"))
}

func (kp dataKeyPairAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("fingerprint"))
}

func (kp dataKeyPairAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("id"))
}

func (kp dataKeyPairAttributes) IncludePublicKey() terra.BoolValue {
	return terra.ReferenceBool(kp.ref.Append("include_public_key"))
}

func (kp dataKeyPairAttributes) KeyName() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("key_name"))
}

func (kp dataKeyPairAttributes) KeyPairId() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("key_pair_id"))
}

func (kp dataKeyPairAttributes) KeyType() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("key_type"))
}

func (kp dataKeyPairAttributes) PublicKey() terra.StringValue {
	return terra.ReferenceString(kp.ref.Append("public_key"))
}

func (kp dataKeyPairAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kp.ref.Append("tags"))
}

func (kp dataKeyPairAttributes) Filter() terra.SetValue[datakeypair.FilterAttributes] {
	return terra.ReferenceSet[datakeypair.FilterAttributes](kp.ref.Append("filter"))
}

func (kp dataKeyPairAttributes) Timeouts() datakeypair.TimeoutsAttributes {
	return terra.ReferenceSingle[datakeypair.TimeoutsAttributes](kp.ref.Append("timeouts"))
}
