// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	ssoadmincustomermanagedpolicyattachment "github.com/golingon/terraproviders/aws/4.60.0/ssoadmincustomermanagedpolicyattachment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSsoadminCustomerManagedPolicyAttachment(name string, args SsoadminCustomerManagedPolicyAttachmentArgs) *SsoadminCustomerManagedPolicyAttachment {
	return &SsoadminCustomerManagedPolicyAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SsoadminCustomerManagedPolicyAttachment)(nil)

type SsoadminCustomerManagedPolicyAttachment struct {
	Name  string
	Args  SsoadminCustomerManagedPolicyAttachmentArgs
	state *ssoadminCustomerManagedPolicyAttachmentState
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) Type() string {
	return "aws_ssoadmin_customer_managed_policy_attachment"
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) LocalName() string {
	return scmpa.Name
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) Configuration() interface{} {
	return scmpa.Args
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) Attributes() ssoadminCustomerManagedPolicyAttachmentAttributes {
	return ssoadminCustomerManagedPolicyAttachmentAttributes{ref: terra.ReferenceResource(scmpa)}
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) ImportState(av io.Reader) error {
	scmpa.state = &ssoadminCustomerManagedPolicyAttachmentState{}
	if err := json.NewDecoder(av).Decode(scmpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", scmpa.Type(), scmpa.LocalName(), err)
	}
	return nil
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) State() (*ssoadminCustomerManagedPolicyAttachmentState, bool) {
	return scmpa.state, scmpa.state != nil
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) StateMust() *ssoadminCustomerManagedPolicyAttachmentState {
	if scmpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", scmpa.Type(), scmpa.LocalName()))
	}
	return scmpa.state
}

func (scmpa *SsoadminCustomerManagedPolicyAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(scmpa)
}

type SsoadminCustomerManagedPolicyAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceArn: string, required
	InstanceArn terra.StringValue `hcl:"instance_arn,attr" validate:"required"`
	// PermissionSetArn: string, required
	PermissionSetArn terra.StringValue `hcl:"permission_set_arn,attr" validate:"required"`
	// CustomerManagedPolicyReference: required
	CustomerManagedPolicyReference *ssoadmincustomermanagedpolicyattachment.CustomerManagedPolicyReference `hcl:"customer_managed_policy_reference,block" validate:"required"`
	// DependsOn contains resources that SsoadminCustomerManagedPolicyAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ssoadminCustomerManagedPolicyAttachmentAttributes struct {
	ref terra.Reference
}

func (scmpa ssoadminCustomerManagedPolicyAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(scmpa.ref.Append("id"))
}

func (scmpa ssoadminCustomerManagedPolicyAttachmentAttributes) InstanceArn() terra.StringValue {
	return terra.ReferenceString(scmpa.ref.Append("instance_arn"))
}

func (scmpa ssoadminCustomerManagedPolicyAttachmentAttributes) PermissionSetArn() terra.StringValue {
	return terra.ReferenceString(scmpa.ref.Append("permission_set_arn"))
}

func (scmpa ssoadminCustomerManagedPolicyAttachmentAttributes) CustomerManagedPolicyReference() terra.ListValue[ssoadmincustomermanagedpolicyattachment.CustomerManagedPolicyReferenceAttributes] {
	return terra.ReferenceList[ssoadmincustomermanagedpolicyattachment.CustomerManagedPolicyReferenceAttributes](scmpa.ref.Append("customer_managed_policy_reference"))
}

type ssoadminCustomerManagedPolicyAttachmentState struct {
	Id                             string                                                                        `json:"id"`
	InstanceArn                    string                                                                        `json:"instance_arn"`
	PermissionSetArn               string                                                                        `json:"permission_set_arn"`
	CustomerManagedPolicyReference []ssoadmincustomermanagedpolicyattachment.CustomerManagedPolicyReferenceState `json:"customer_managed_policy_reference"`
}
