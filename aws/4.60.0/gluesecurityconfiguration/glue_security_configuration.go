// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package gluesecurityconfiguration

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type EncryptionConfiguration struct {
	// CloudwatchEncryption: required
	CloudwatchEncryption *CloudwatchEncryption `hcl:"cloudwatch_encryption,block" validate:"required"`
	// JobBookmarksEncryption: required
	JobBookmarksEncryption *JobBookmarksEncryption `hcl:"job_bookmarks_encryption,block" validate:"required"`
	// S3Encryption: required
	S3Encryption *S3Encryption `hcl:"s3_encryption,block" validate:"required"`
}

type CloudwatchEncryption struct {
	// CloudwatchEncryptionMode: string, optional
	CloudwatchEncryptionMode terra.StringValue `hcl:"cloudwatch_encryption_mode,attr"`
	// KmsKeyArn: string, optional
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
}

type JobBookmarksEncryption struct {
	// JobBookmarksEncryptionMode: string, optional
	JobBookmarksEncryptionMode terra.StringValue `hcl:"job_bookmarks_encryption_mode,attr"`
	// KmsKeyArn: string, optional
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
}

type S3Encryption struct {
	// KmsKeyArn: string, optional
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
	// S3EncryptionMode: string, optional
	S3EncryptionMode terra.StringValue `hcl:"s3_encryption_mode,attr"`
}

type EncryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec EncryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec EncryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) EncryptionConfigurationAttributes {
	return EncryptionConfigurationAttributes{ref: ref}
}

func (ec EncryptionConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ec.ref.InternalTokens()
}

func (ec EncryptionConfigurationAttributes) CloudwatchEncryption() terra.ListValue[CloudwatchEncryptionAttributes] {
	return terra.ReferenceAsList[CloudwatchEncryptionAttributes](ec.ref.Append("cloudwatch_encryption"))
}

func (ec EncryptionConfigurationAttributes) JobBookmarksEncryption() terra.ListValue[JobBookmarksEncryptionAttributes] {
	return terra.ReferenceAsList[JobBookmarksEncryptionAttributes](ec.ref.Append("job_bookmarks_encryption"))
}

func (ec EncryptionConfigurationAttributes) S3Encryption() terra.ListValue[S3EncryptionAttributes] {
	return terra.ReferenceAsList[S3EncryptionAttributes](ec.ref.Append("s3_encryption"))
}

type CloudwatchEncryptionAttributes struct {
	ref terra.Reference
}

func (ce CloudwatchEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return ce.ref, nil
}

func (ce CloudwatchEncryptionAttributes) InternalWithRef(ref terra.Reference) CloudwatchEncryptionAttributes {
	return CloudwatchEncryptionAttributes{ref: ref}
}

func (ce CloudwatchEncryptionAttributes) InternalTokens() hclwrite.Tokens {
	return ce.ref.InternalTokens()
}

func (ce CloudwatchEncryptionAttributes) CloudwatchEncryptionMode() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("cloudwatch_encryption_mode"))
}

func (ce CloudwatchEncryptionAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("kms_key_arn"))
}

type JobBookmarksEncryptionAttributes struct {
	ref terra.Reference
}

func (jbe JobBookmarksEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return jbe.ref, nil
}

func (jbe JobBookmarksEncryptionAttributes) InternalWithRef(ref terra.Reference) JobBookmarksEncryptionAttributes {
	return JobBookmarksEncryptionAttributes{ref: ref}
}

func (jbe JobBookmarksEncryptionAttributes) InternalTokens() hclwrite.Tokens {
	return jbe.ref.InternalTokens()
}

func (jbe JobBookmarksEncryptionAttributes) JobBookmarksEncryptionMode() terra.StringValue {
	return terra.ReferenceAsString(jbe.ref.Append("job_bookmarks_encryption_mode"))
}

func (jbe JobBookmarksEncryptionAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(jbe.ref.Append("kms_key_arn"))
}

type S3EncryptionAttributes struct {
	ref terra.Reference
}

func (se S3EncryptionAttributes) InternalRef() (terra.Reference, error) {
	return se.ref, nil
}

func (se S3EncryptionAttributes) InternalWithRef(ref terra.Reference) S3EncryptionAttributes {
	return S3EncryptionAttributes{ref: ref}
}

func (se S3EncryptionAttributes) InternalTokens() hclwrite.Tokens {
	return se.ref.InternalTokens()
}

func (se S3EncryptionAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(se.ref.Append("kms_key_arn"))
}

func (se S3EncryptionAttributes) S3EncryptionMode() terra.StringValue {
	return terra.ReferenceAsString(se.ref.Append("s3_encryption_mode"))
}

type EncryptionConfigurationState struct {
	CloudwatchEncryption   []CloudwatchEncryptionState   `json:"cloudwatch_encryption"`
	JobBookmarksEncryption []JobBookmarksEncryptionState `json:"job_bookmarks_encryption"`
	S3Encryption           []S3EncryptionState           `json:"s3_encryption"`
}

type CloudwatchEncryptionState struct {
	CloudwatchEncryptionMode string `json:"cloudwatch_encryption_mode"`
	KmsKeyArn                string `json:"kms_key_arn"`
}

type JobBookmarksEncryptionState struct {
	JobBookmarksEncryptionMode string `json:"job_bookmarks_encryption_mode"`
	KmsKeyArn                  string `json:"kms_key_arn"`
}

type S3EncryptionState struct {
	KmsKeyArn        string `json:"kms_key_arn"`
	S3EncryptionMode string `json:"s3_encryption_mode"`
}
