// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataMskCluster(name string, args DataMskClusterArgs) *DataMskCluster {
	return &DataMskCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMskCluster)(nil)

type DataMskCluster struct {
	Name string
	Args DataMskClusterArgs
}

func (mc *DataMskCluster) DataSource() string {
	return "aws_msk_cluster"
}

func (mc *DataMskCluster) LocalName() string {
	return mc.Name
}

func (mc *DataMskCluster) Configuration() interface{} {
	return mc.Args
}

func (mc *DataMskCluster) Attributes() dataMskClusterAttributes {
	return dataMskClusterAttributes{ref: terra.ReferenceDataResource(mc)}
}

type DataMskClusterArgs struct {
	// ClusterName: string, required
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}
type dataMskClusterAttributes struct {
	ref terra.Reference
}

func (mc dataMskClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("arn"))
}

func (mc dataMskClusterAttributes) BootstrapBrokers() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers"))
}

func (mc dataMskClusterAttributes) BootstrapBrokersPublicSaslIam() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers_public_sasl_iam"))
}

func (mc dataMskClusterAttributes) BootstrapBrokersPublicSaslScram() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers_public_sasl_scram"))
}

func (mc dataMskClusterAttributes) BootstrapBrokersPublicTls() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers_public_tls"))
}

func (mc dataMskClusterAttributes) BootstrapBrokersSaslIam() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers_sasl_iam"))
}

func (mc dataMskClusterAttributes) BootstrapBrokersSaslScram() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers_sasl_scram"))
}

func (mc dataMskClusterAttributes) BootstrapBrokersTls() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("bootstrap_brokers_tls"))
}

func (mc dataMskClusterAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("cluster_name"))
}

func (mc dataMskClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("id"))
}

func (mc dataMskClusterAttributes) KafkaVersion() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("kafka_version"))
}

func (mc dataMskClusterAttributes) NumberOfBrokerNodes() terra.NumberValue {
	return terra.ReferenceNumber(mc.ref.Append("number_of_broker_nodes"))
}

func (mc dataMskClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mc.ref.Append("tags"))
}

func (mc dataMskClusterAttributes) ZookeeperConnectString() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("zookeeper_connect_string"))
}

func (mc dataMskClusterAttributes) ZookeeperConnectStringTls() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("zookeeper_connect_string_tls"))
}
