// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewQuicksightGroupMembership(name string, args QuicksightGroupMembershipArgs) *QuicksightGroupMembership {
	return &QuicksightGroupMembership{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*QuicksightGroupMembership)(nil)

type QuicksightGroupMembership struct {
	Name  string
	Args  QuicksightGroupMembershipArgs
	state *quicksightGroupMembershipState
}

func (qgm *QuicksightGroupMembership) Type() string {
	return "aws_quicksight_group_membership"
}

func (qgm *QuicksightGroupMembership) LocalName() string {
	return qgm.Name
}

func (qgm *QuicksightGroupMembership) Configuration() interface{} {
	return qgm.Args
}

func (qgm *QuicksightGroupMembership) Attributes() quicksightGroupMembershipAttributes {
	return quicksightGroupMembershipAttributes{ref: terra.ReferenceResource(qgm)}
}

func (qgm *QuicksightGroupMembership) ImportState(av io.Reader) error {
	qgm.state = &quicksightGroupMembershipState{}
	if err := json.NewDecoder(av).Decode(qgm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", qgm.Type(), qgm.LocalName(), err)
	}
	return nil
}

func (qgm *QuicksightGroupMembership) State() (*quicksightGroupMembershipState, bool) {
	return qgm.state, qgm.state != nil
}

func (qgm *QuicksightGroupMembership) StateMust() *quicksightGroupMembershipState {
	if qgm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", qgm.Type(), qgm.LocalName()))
	}
	return qgm.state
}

func (qgm *QuicksightGroupMembership) DependOn() terra.Reference {
	return terra.ReferenceResource(qgm)
}

type QuicksightGroupMembershipArgs struct {
	// AwsAccountId: string, optional
	AwsAccountId terra.StringValue `hcl:"aws_account_id,attr"`
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MemberName: string, required
	MemberName terra.StringValue `hcl:"member_name,attr" validate:"required"`
	// Namespace: string, optional
	Namespace terra.StringValue `hcl:"namespace,attr"`
	// DependsOn contains resources that QuicksightGroupMembership depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type quicksightGroupMembershipAttributes struct {
	ref terra.Reference
}

func (qgm quicksightGroupMembershipAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(qgm.ref.Append("arn"))
}

func (qgm quicksightGroupMembershipAttributes) AwsAccountId() terra.StringValue {
	return terra.ReferenceString(qgm.ref.Append("aws_account_id"))
}

func (qgm quicksightGroupMembershipAttributes) GroupName() terra.StringValue {
	return terra.ReferenceString(qgm.ref.Append("group_name"))
}

func (qgm quicksightGroupMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceString(qgm.ref.Append("id"))
}

func (qgm quicksightGroupMembershipAttributes) MemberName() terra.StringValue {
	return terra.ReferenceString(qgm.ref.Append("member_name"))
}

func (qgm quicksightGroupMembershipAttributes) Namespace() terra.StringValue {
	return terra.ReferenceString(qgm.ref.Append("namespace"))
}

type quicksightGroupMembershipState struct {
	Arn          string `json:"arn"`
	AwsAccountId string `json:"aws_account_id"`
	GroupName    string `json:"group_name"`
	Id           string `json:"id"`
	MemberName   string `json:"member_name"`
	Namespace    string `json:"namespace"`
}
