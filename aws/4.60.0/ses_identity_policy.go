// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSesIdentityPolicy(name string, args SesIdentityPolicyArgs) *SesIdentityPolicy {
	return &SesIdentityPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SesIdentityPolicy)(nil)

type SesIdentityPolicy struct {
	Name  string
	Args  SesIdentityPolicyArgs
	state *sesIdentityPolicyState
}

func (sip *SesIdentityPolicy) Type() string {
	return "aws_ses_identity_policy"
}

func (sip *SesIdentityPolicy) LocalName() string {
	return sip.Name
}

func (sip *SesIdentityPolicy) Configuration() interface{} {
	return sip.Args
}

func (sip *SesIdentityPolicy) Attributes() sesIdentityPolicyAttributes {
	return sesIdentityPolicyAttributes{ref: terra.ReferenceResource(sip)}
}

func (sip *SesIdentityPolicy) ImportState(av io.Reader) error {
	sip.state = &sesIdentityPolicyState{}
	if err := json.NewDecoder(av).Decode(sip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sip.Type(), sip.LocalName(), err)
	}
	return nil
}

func (sip *SesIdentityPolicy) State() (*sesIdentityPolicyState, bool) {
	return sip.state, sip.state != nil
}

func (sip *SesIdentityPolicy) StateMust() *sesIdentityPolicyState {
	if sip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sip.Type(), sip.LocalName()))
	}
	return sip.state
}

func (sip *SesIdentityPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(sip)
}

type SesIdentityPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Identity: string, required
	Identity terra.StringValue `hcl:"identity,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// DependsOn contains resources that SesIdentityPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sesIdentityPolicyAttributes struct {
	ref terra.Reference
}

func (sip sesIdentityPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sip.ref.Append("id"))
}

func (sip sesIdentityPolicyAttributes) Identity() terra.StringValue {
	return terra.ReferenceString(sip.ref.Append("identity"))
}

func (sip sesIdentityPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sip.ref.Append("name"))
}

func (sip sesIdentityPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(sip.ref.Append("policy"))
}

type sesIdentityPolicyState struct {
	Id       string `json:"id"`
	Identity string `json:"identity"`
	Name     string `json:"name"`
	Policy   string `json:"policy"`
}
