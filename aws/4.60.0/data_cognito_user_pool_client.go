// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datacognitouserpoolclient "github.com/golingon/terraproviders/aws/4.60.0/datacognitouserpoolclient"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCognitoUserPoolClient(name string, args DataCognitoUserPoolClientArgs) *DataCognitoUserPoolClient {
	return &DataCognitoUserPoolClient{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCognitoUserPoolClient)(nil)

type DataCognitoUserPoolClient struct {
	Name string
	Args DataCognitoUserPoolClientArgs
}

func (cupc *DataCognitoUserPoolClient) DataSource() string {
	return "aws_cognito_user_pool_client"
}

func (cupc *DataCognitoUserPoolClient) LocalName() string {
	return cupc.Name
}

func (cupc *DataCognitoUserPoolClient) Configuration() interface{} {
	return cupc.Args
}

func (cupc *DataCognitoUserPoolClient) Attributes() dataCognitoUserPoolClientAttributes {
	return dataCognitoUserPoolClientAttributes{ref: terra.ReferenceDataResource(cupc)}
}

type DataCognitoUserPoolClientArgs struct {
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// UserPoolId: string, required
	UserPoolId terra.StringValue `hcl:"user_pool_id,attr" validate:"required"`
	// AnalyticsConfiguration: min=0
	AnalyticsConfiguration []datacognitouserpoolclient.AnalyticsConfiguration `hcl:"analytics_configuration,block" validate:"min=0"`
	// TokenValidityUnits: min=0
	TokenValidityUnits []datacognitouserpoolclient.TokenValidityUnits `hcl:"token_validity_units,block" validate:"min=0"`
}
type dataCognitoUserPoolClientAttributes struct {
	ref terra.Reference
}

func (cupc dataCognitoUserPoolClientAttributes) AccessTokenValidity() terra.NumberValue {
	return terra.ReferenceNumber(cupc.ref.Append("access_token_validity"))
}

func (cupc dataCognitoUserPoolClientAttributes) AllowedOauthFlows() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("allowed_oauth_flows"))
}

func (cupc dataCognitoUserPoolClientAttributes) AllowedOauthFlowsUserPoolClient() terra.BoolValue {
	return terra.ReferenceBool(cupc.ref.Append("allowed_oauth_flows_user_pool_client"))
}

func (cupc dataCognitoUserPoolClientAttributes) AllowedOauthScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("allowed_oauth_scopes"))
}

func (cupc dataCognitoUserPoolClientAttributes) CallbackUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("callback_urls"))
}

func (cupc dataCognitoUserPoolClientAttributes) ClientId() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("client_id"))
}

func (cupc dataCognitoUserPoolClientAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("client_secret"))
}

func (cupc dataCognitoUserPoolClientAttributes) DefaultRedirectUri() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("default_redirect_uri"))
}

func (cupc dataCognitoUserPoolClientAttributes) EnablePropagateAdditionalUserContextData() terra.BoolValue {
	return terra.ReferenceBool(cupc.ref.Append("enable_propagate_additional_user_context_data"))
}

func (cupc dataCognitoUserPoolClientAttributes) EnableTokenRevocation() terra.BoolValue {
	return terra.ReferenceBool(cupc.ref.Append("enable_token_revocation"))
}

func (cupc dataCognitoUserPoolClientAttributes) ExplicitAuthFlows() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("explicit_auth_flows"))
}

func (cupc dataCognitoUserPoolClientAttributes) GenerateSecret() terra.BoolValue {
	return terra.ReferenceBool(cupc.ref.Append("generate_secret"))
}

func (cupc dataCognitoUserPoolClientAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("id"))
}

func (cupc dataCognitoUserPoolClientAttributes) IdTokenValidity() terra.NumberValue {
	return terra.ReferenceNumber(cupc.ref.Append("id_token_validity"))
}

func (cupc dataCognitoUserPoolClientAttributes) LogoutUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("logout_urls"))
}

func (cupc dataCognitoUserPoolClientAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("name"))
}

func (cupc dataCognitoUserPoolClientAttributes) PreventUserExistenceErrors() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("prevent_user_existence_errors"))
}

func (cupc dataCognitoUserPoolClientAttributes) ReadAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("read_attributes"))
}

func (cupc dataCognitoUserPoolClientAttributes) RefreshTokenValidity() terra.NumberValue {
	return terra.ReferenceNumber(cupc.ref.Append("refresh_token_validity"))
}

func (cupc dataCognitoUserPoolClientAttributes) SupportedIdentityProviders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("supported_identity_providers"))
}

func (cupc dataCognitoUserPoolClientAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceString(cupc.ref.Append("user_pool_id"))
}

func (cupc dataCognitoUserPoolClientAttributes) WriteAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cupc.ref.Append("write_attributes"))
}

func (cupc dataCognitoUserPoolClientAttributes) AnalyticsConfiguration() terra.ListValue[datacognitouserpoolclient.AnalyticsConfigurationAttributes] {
	return terra.ReferenceList[datacognitouserpoolclient.AnalyticsConfigurationAttributes](cupc.ref.Append("analytics_configuration"))
}

func (cupc dataCognitoUserPoolClientAttributes) TokenValidityUnits() terra.ListValue[datacognitouserpoolclient.TokenValidityUnitsAttributes] {
	return terra.ReferenceList[datacognitouserpoolclient.TokenValidityUnitsAttributes](cupc.ref.Append("token_validity_units"))
}
