// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewCloud9EnvironmentMembership creates a new instance of [Cloud9EnvironmentMembership].
func NewCloud9EnvironmentMembership(name string, args Cloud9EnvironmentMembershipArgs) *Cloud9EnvironmentMembership {
	return &Cloud9EnvironmentMembership{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Cloud9EnvironmentMembership)(nil)

// Cloud9EnvironmentMembership represents the Terraform resource aws_cloud9_environment_membership.
type Cloud9EnvironmentMembership struct {
	Name      string
	Args      Cloud9EnvironmentMembershipArgs
	state     *cloud9EnvironmentMembershipState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Cloud9EnvironmentMembership].
func (cem *Cloud9EnvironmentMembership) Type() string {
	return "aws_cloud9_environment_membership"
}

// LocalName returns the local name for [Cloud9EnvironmentMembership].
func (cem *Cloud9EnvironmentMembership) LocalName() string {
	return cem.Name
}

// Configuration returns the configuration (args) for [Cloud9EnvironmentMembership].
func (cem *Cloud9EnvironmentMembership) Configuration() interface{} {
	return cem.Args
}

// DependOn is used for other resources to depend on [Cloud9EnvironmentMembership].
func (cem *Cloud9EnvironmentMembership) DependOn() terra.Reference {
	return terra.ReferenceResource(cem)
}

// Dependencies returns the list of resources [Cloud9EnvironmentMembership] depends_on.
func (cem *Cloud9EnvironmentMembership) Dependencies() terra.Dependencies {
	return cem.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Cloud9EnvironmentMembership].
func (cem *Cloud9EnvironmentMembership) LifecycleManagement() *terra.Lifecycle {
	return cem.Lifecycle
}

// Attributes returns the attributes for [Cloud9EnvironmentMembership].
func (cem *Cloud9EnvironmentMembership) Attributes() cloud9EnvironmentMembershipAttributes {
	return cloud9EnvironmentMembershipAttributes{ref: terra.ReferenceResource(cem)}
}

// ImportState imports the given attribute values into [Cloud9EnvironmentMembership]'s state.
func (cem *Cloud9EnvironmentMembership) ImportState(av io.Reader) error {
	cem.state = &cloud9EnvironmentMembershipState{}
	if err := json.NewDecoder(av).Decode(cem.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cem.Type(), cem.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Cloud9EnvironmentMembership] has state.
func (cem *Cloud9EnvironmentMembership) State() (*cloud9EnvironmentMembershipState, bool) {
	return cem.state, cem.state != nil
}

// StateMust returns the state for [Cloud9EnvironmentMembership]. Panics if the state is nil.
func (cem *Cloud9EnvironmentMembership) StateMust() *cloud9EnvironmentMembershipState {
	if cem.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cem.Type(), cem.LocalName()))
	}
	return cem.state
}

// Cloud9EnvironmentMembershipArgs contains the configurations for aws_cloud9_environment_membership.
type Cloud9EnvironmentMembershipArgs struct {
	// EnvironmentId: string, required
	EnvironmentId terra.StringValue `hcl:"environment_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Permissions: string, required
	Permissions terra.StringValue `hcl:"permissions,attr" validate:"required"`
	// UserArn: string, required
	UserArn terra.StringValue `hcl:"user_arn,attr" validate:"required"`
}
type cloud9EnvironmentMembershipAttributes struct {
	ref terra.Reference
}

// EnvironmentId returns a reference to field environment_id of aws_cloud9_environment_membership.
func (cem cloud9EnvironmentMembershipAttributes) EnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(cem.ref.Append("environment_id"))
}

// Id returns a reference to field id of aws_cloud9_environment_membership.
func (cem cloud9EnvironmentMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cem.ref.Append("id"))
}

// Permissions returns a reference to field permissions of aws_cloud9_environment_membership.
func (cem cloud9EnvironmentMembershipAttributes) Permissions() terra.StringValue {
	return terra.ReferenceAsString(cem.ref.Append("permissions"))
}

// UserArn returns a reference to field user_arn of aws_cloud9_environment_membership.
func (cem cloud9EnvironmentMembershipAttributes) UserArn() terra.StringValue {
	return terra.ReferenceAsString(cem.ref.Append("user_arn"))
}

// UserId returns a reference to field user_id of aws_cloud9_environment_membership.
func (cem cloud9EnvironmentMembershipAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(cem.ref.Append("user_id"))
}

type cloud9EnvironmentMembershipState struct {
	EnvironmentId string `json:"environment_id"`
	Id            string `json:"id"`
	Permissions   string `json:"permissions"`
	UserArn       string `json:"user_arn"`
	UserId        string `json:"user_id"`
}
