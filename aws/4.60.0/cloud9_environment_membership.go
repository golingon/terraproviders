// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCloud9EnvironmentMembership(name string, args Cloud9EnvironmentMembershipArgs) *Cloud9EnvironmentMembership {
	return &Cloud9EnvironmentMembership{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Cloud9EnvironmentMembership)(nil)

type Cloud9EnvironmentMembership struct {
	Name  string
	Args  Cloud9EnvironmentMembershipArgs
	state *cloud9EnvironmentMembershipState
}

func (cem *Cloud9EnvironmentMembership) Type() string {
	return "aws_cloud9_environment_membership"
}

func (cem *Cloud9EnvironmentMembership) LocalName() string {
	return cem.Name
}

func (cem *Cloud9EnvironmentMembership) Configuration() interface{} {
	return cem.Args
}

func (cem *Cloud9EnvironmentMembership) Attributes() cloud9EnvironmentMembershipAttributes {
	return cloud9EnvironmentMembershipAttributes{ref: terra.ReferenceResource(cem)}
}

func (cem *Cloud9EnvironmentMembership) ImportState(av io.Reader) error {
	cem.state = &cloud9EnvironmentMembershipState{}
	if err := json.NewDecoder(av).Decode(cem.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cem.Type(), cem.LocalName(), err)
	}
	return nil
}

func (cem *Cloud9EnvironmentMembership) State() (*cloud9EnvironmentMembershipState, bool) {
	return cem.state, cem.state != nil
}

func (cem *Cloud9EnvironmentMembership) StateMust() *cloud9EnvironmentMembershipState {
	if cem.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cem.Type(), cem.LocalName()))
	}
	return cem.state
}

func (cem *Cloud9EnvironmentMembership) DependOn() terra.Reference {
	return terra.ReferenceResource(cem)
}

type Cloud9EnvironmentMembershipArgs struct {
	// EnvironmentId: string, required
	EnvironmentId terra.StringValue `hcl:"environment_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Permissions: string, required
	Permissions terra.StringValue `hcl:"permissions,attr" validate:"required"`
	// UserArn: string, required
	UserArn terra.StringValue `hcl:"user_arn,attr" validate:"required"`
	// DependsOn contains resources that Cloud9EnvironmentMembership depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cloud9EnvironmentMembershipAttributes struct {
	ref terra.Reference
}

func (cem cloud9EnvironmentMembershipAttributes) EnvironmentId() terra.StringValue {
	return terra.ReferenceString(cem.ref.Append("environment_id"))
}

func (cem cloud9EnvironmentMembershipAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cem.ref.Append("id"))
}

func (cem cloud9EnvironmentMembershipAttributes) Permissions() terra.StringValue {
	return terra.ReferenceString(cem.ref.Append("permissions"))
}

func (cem cloud9EnvironmentMembershipAttributes) UserArn() terra.StringValue {
	return terra.ReferenceString(cem.ref.Append("user_arn"))
}

func (cem cloud9EnvironmentMembershipAttributes) UserId() terra.StringValue {
	return terra.ReferenceString(cem.ref.Append("user_id"))
}

type cloud9EnvironmentMembershipState struct {
	EnvironmentId string `json:"environment_id"`
	Id            string `json:"id"`
	Permissions   string `json:"permissions"`
	UserArn       string `json:"user_arn"`
	UserId        string `json:"user_id"`
}
