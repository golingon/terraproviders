// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	lightsailcontainerservicedeploymentversion "github.com/golingon/terraproviders/aws/4.60.0/lightsailcontainerservicedeploymentversion"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLightsailContainerServiceDeploymentVersion(name string, args LightsailContainerServiceDeploymentVersionArgs) *LightsailContainerServiceDeploymentVersion {
	return &LightsailContainerServiceDeploymentVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LightsailContainerServiceDeploymentVersion)(nil)

type LightsailContainerServiceDeploymentVersion struct {
	Name  string
	Args  LightsailContainerServiceDeploymentVersionArgs
	state *lightsailContainerServiceDeploymentVersionState
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) Type() string {
	return "aws_lightsail_container_service_deployment_version"
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) LocalName() string {
	return lcsdv.Name
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) Configuration() interface{} {
	return lcsdv.Args
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) Attributes() lightsailContainerServiceDeploymentVersionAttributes {
	return lightsailContainerServiceDeploymentVersionAttributes{ref: terra.ReferenceResource(lcsdv)}
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) ImportState(av io.Reader) error {
	lcsdv.state = &lightsailContainerServiceDeploymentVersionState{}
	if err := json.NewDecoder(av).Decode(lcsdv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lcsdv.Type(), lcsdv.LocalName(), err)
	}
	return nil
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) State() (*lightsailContainerServiceDeploymentVersionState, bool) {
	return lcsdv.state, lcsdv.state != nil
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) StateMust() *lightsailContainerServiceDeploymentVersionState {
	if lcsdv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lcsdv.Type(), lcsdv.LocalName()))
	}
	return lcsdv.state
}

func (lcsdv *LightsailContainerServiceDeploymentVersion) DependOn() terra.Reference {
	return terra.ReferenceResource(lcsdv)
}

type LightsailContainerServiceDeploymentVersionArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// Container: min=1,max=53
	Container []lightsailcontainerservicedeploymentversion.Container `hcl:"container,block" validate:"min=1,max=53"`
	// PublicEndpoint: optional
	PublicEndpoint *lightsailcontainerservicedeploymentversion.PublicEndpoint `hcl:"public_endpoint,block"`
	// Timeouts: optional
	Timeouts *lightsailcontainerservicedeploymentversion.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that LightsailContainerServiceDeploymentVersion depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type lightsailContainerServiceDeploymentVersionAttributes struct {
	ref terra.Reference
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceString(lcsdv.ref.Append("created_at"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lcsdv.ref.Append("id"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(lcsdv.ref.Append("service_name"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) State() terra.StringValue {
	return terra.ReferenceString(lcsdv.ref.Append("state"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) Version() terra.NumberValue {
	return terra.ReferenceNumber(lcsdv.ref.Append("version"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) Container() terra.SetValue[lightsailcontainerservicedeploymentversion.ContainerAttributes] {
	return terra.ReferenceSet[lightsailcontainerservicedeploymentversion.ContainerAttributes](lcsdv.ref.Append("container"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) PublicEndpoint() terra.ListValue[lightsailcontainerservicedeploymentversion.PublicEndpointAttributes] {
	return terra.ReferenceList[lightsailcontainerservicedeploymentversion.PublicEndpointAttributes](lcsdv.ref.Append("public_endpoint"))
}

func (lcsdv lightsailContainerServiceDeploymentVersionAttributes) Timeouts() lightsailcontainerservicedeploymentversion.TimeoutsAttributes {
	return terra.ReferenceSingle[lightsailcontainerservicedeploymentversion.TimeoutsAttributes](lcsdv.ref.Append("timeouts"))
}

type lightsailContainerServiceDeploymentVersionState struct {
	CreatedAt      string                                                           `json:"created_at"`
	Id             string                                                           `json:"id"`
	ServiceName    string                                                           `json:"service_name"`
	State          string                                                           `json:"state"`
	Version        float64                                                          `json:"version"`
	Container      []lightsailcontainerservicedeploymentversion.ContainerState      `json:"container"`
	PublicEndpoint []lightsailcontainerservicedeploymentversion.PublicEndpointState `json:"public_endpoint"`
	Timeouts       *lightsailcontainerservicedeploymentversion.TimeoutsState        `json:"timeouts"`
}
