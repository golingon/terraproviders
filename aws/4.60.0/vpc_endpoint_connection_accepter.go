// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewVpcEndpointConnectionAccepter creates a new instance of [VpcEndpointConnectionAccepter].
func NewVpcEndpointConnectionAccepter(name string, args VpcEndpointConnectionAccepterArgs) *VpcEndpointConnectionAccepter {
	return &VpcEndpointConnectionAccepter{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpcEndpointConnectionAccepter)(nil)

// VpcEndpointConnectionAccepter represents the Terraform resource aws_vpc_endpoint_connection_accepter.
type VpcEndpointConnectionAccepter struct {
	Name      string
	Args      VpcEndpointConnectionAccepterArgs
	state     *vpcEndpointConnectionAccepterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VpcEndpointConnectionAccepter].
func (veca *VpcEndpointConnectionAccepter) Type() string {
	return "aws_vpc_endpoint_connection_accepter"
}

// LocalName returns the local name for [VpcEndpointConnectionAccepter].
func (veca *VpcEndpointConnectionAccepter) LocalName() string {
	return veca.Name
}

// Configuration returns the configuration (args) for [VpcEndpointConnectionAccepter].
func (veca *VpcEndpointConnectionAccepter) Configuration() interface{} {
	return veca.Args
}

// DependOn is used for other resources to depend on [VpcEndpointConnectionAccepter].
func (veca *VpcEndpointConnectionAccepter) DependOn() terra.Reference {
	return terra.ReferenceResource(veca)
}

// Dependencies returns the list of resources [VpcEndpointConnectionAccepter] depends_on.
func (veca *VpcEndpointConnectionAccepter) Dependencies() terra.Dependencies {
	return veca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VpcEndpointConnectionAccepter].
func (veca *VpcEndpointConnectionAccepter) LifecycleManagement() *terra.Lifecycle {
	return veca.Lifecycle
}

// Attributes returns the attributes for [VpcEndpointConnectionAccepter].
func (veca *VpcEndpointConnectionAccepter) Attributes() vpcEndpointConnectionAccepterAttributes {
	return vpcEndpointConnectionAccepterAttributes{ref: terra.ReferenceResource(veca)}
}

// ImportState imports the given attribute values into [VpcEndpointConnectionAccepter]'s state.
func (veca *VpcEndpointConnectionAccepter) ImportState(av io.Reader) error {
	veca.state = &vpcEndpointConnectionAccepterState{}
	if err := json.NewDecoder(av).Decode(veca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", veca.Type(), veca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VpcEndpointConnectionAccepter] has state.
func (veca *VpcEndpointConnectionAccepter) State() (*vpcEndpointConnectionAccepterState, bool) {
	return veca.state, veca.state != nil
}

// StateMust returns the state for [VpcEndpointConnectionAccepter]. Panics if the state is nil.
func (veca *VpcEndpointConnectionAccepter) StateMust() *vpcEndpointConnectionAccepterState {
	if veca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", veca.Type(), veca.LocalName()))
	}
	return veca.state
}

// VpcEndpointConnectionAccepterArgs contains the configurations for aws_vpc_endpoint_connection_accepter.
type VpcEndpointConnectionAccepterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VpcEndpointId: string, required
	VpcEndpointId terra.StringValue `hcl:"vpc_endpoint_id,attr" validate:"required"`
	// VpcEndpointServiceId: string, required
	VpcEndpointServiceId terra.StringValue `hcl:"vpc_endpoint_service_id,attr" validate:"required"`
}
type vpcEndpointConnectionAccepterAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_vpc_endpoint_connection_accepter.
func (veca vpcEndpointConnectionAccepterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(veca.ref.Append("id"))
}

// VpcEndpointId returns a reference to field vpc_endpoint_id of aws_vpc_endpoint_connection_accepter.
func (veca vpcEndpointConnectionAccepterAttributes) VpcEndpointId() terra.StringValue {
	return terra.ReferenceAsString(veca.ref.Append("vpc_endpoint_id"))
}

// VpcEndpointServiceId returns a reference to field vpc_endpoint_service_id of aws_vpc_endpoint_connection_accepter.
func (veca vpcEndpointConnectionAccepterAttributes) VpcEndpointServiceId() terra.StringValue {
	return terra.ReferenceAsString(veca.ref.Append("vpc_endpoint_service_id"))
}

// VpcEndpointState returns a reference to field vpc_endpoint_state of aws_vpc_endpoint_connection_accepter.
func (veca vpcEndpointConnectionAccepterAttributes) VpcEndpointState() terra.StringValue {
	return terra.ReferenceAsString(veca.ref.Append("vpc_endpoint_state"))
}

type vpcEndpointConnectionAccepterState struct {
	Id                   string `json:"id"`
	VpcEndpointId        string `json:"vpc_endpoint_id"`
	VpcEndpointServiceId string `json:"vpc_endpoint_service_id"`
	VpcEndpointState     string `json:"vpc_endpoint_state"`
}
