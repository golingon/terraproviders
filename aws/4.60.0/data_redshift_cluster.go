// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataredshiftcluster "github.com/golingon/terraproviders/aws/4.60.0/dataredshiftcluster"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataRedshiftCluster(name string, args DataRedshiftClusterArgs) *DataRedshiftCluster {
	return &DataRedshiftCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedshiftCluster)(nil)

type DataRedshiftCluster struct {
	Name string
	Args DataRedshiftClusterArgs
}

func (rc *DataRedshiftCluster) DataSource() string {
	return "aws_redshift_cluster"
}

func (rc *DataRedshiftCluster) LocalName() string {
	return rc.Name
}

func (rc *DataRedshiftCluster) Configuration() interface{} {
	return rc.Args
}

func (rc *DataRedshiftCluster) Attributes() dataRedshiftClusterAttributes {
	return dataRedshiftClusterAttributes{ref: terra.ReferenceDataResource(rc)}
}

type DataRedshiftClusterArgs struct {
	// ClusterIdentifier: string, required
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ClusterNodes: min=0
	ClusterNodes []dataredshiftcluster.ClusterNodes `hcl:"cluster_nodes,block" validate:"min=0"`
}
type dataRedshiftClusterAttributes struct {
	ref terra.Reference
}

func (rc dataRedshiftClusterAttributes) AllowVersionUpgrade() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("allow_version_upgrade"))
}

func (rc dataRedshiftClusterAttributes) AquaConfigurationStatus() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("aqua_configuration_status"))
}

func (rc dataRedshiftClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("arn"))
}

func (rc dataRedshiftClusterAttributes) AutomatedSnapshotRetentionPeriod() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("automated_snapshot_retention_period"))
}

func (rc dataRedshiftClusterAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("availability_zone"))
}

func (rc dataRedshiftClusterAttributes) AvailabilityZoneRelocationEnabled() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("availability_zone_relocation_enabled"))
}

func (rc dataRedshiftClusterAttributes) BucketName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("bucket_name"))
}

func (rc dataRedshiftClusterAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_identifier"))
}

func (rc dataRedshiftClusterAttributes) ClusterParameterGroupName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_parameter_group_name"))
}

func (rc dataRedshiftClusterAttributes) ClusterPublicKey() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_public_key"))
}

func (rc dataRedshiftClusterAttributes) ClusterRevisionNumber() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_revision_number"))
}

func (rc dataRedshiftClusterAttributes) ClusterSecurityGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rc.ref.Append("cluster_security_groups"))
}

func (rc dataRedshiftClusterAttributes) ClusterSubnetGroupName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_subnet_group_name"))
}

func (rc dataRedshiftClusterAttributes) ClusterType() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_type"))
}

func (rc dataRedshiftClusterAttributes) ClusterVersion() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("cluster_version"))
}

func (rc dataRedshiftClusterAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("database_name"))
}

func (rc dataRedshiftClusterAttributes) DefaultIamRoleArn() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("default_iam_role_arn"))
}

func (rc dataRedshiftClusterAttributes) ElasticIp() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("elastic_ip"))
}

func (rc dataRedshiftClusterAttributes) EnableLogging() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("enable_logging"))
}

func (rc dataRedshiftClusterAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("encrypted"))
}

func (rc dataRedshiftClusterAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("endpoint"))
}

func (rc dataRedshiftClusterAttributes) EnhancedVpcRouting() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("enhanced_vpc_routing"))
}

func (rc dataRedshiftClusterAttributes) IamRoles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rc.ref.Append("iam_roles"))
}

func (rc dataRedshiftClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("id"))
}

func (rc dataRedshiftClusterAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("kms_key_id"))
}

func (rc dataRedshiftClusterAttributes) LogDestinationType() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("log_destination_type"))
}

func (rc dataRedshiftClusterAttributes) LogExports() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](rc.ref.Append("log_exports"))
}

func (rc dataRedshiftClusterAttributes) MaintenanceTrackName() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("maintenance_track_name"))
}

func (rc dataRedshiftClusterAttributes) ManualSnapshotRetentionPeriod() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("manual_snapshot_retention_period"))
}

func (rc dataRedshiftClusterAttributes) MasterUsername() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("master_username"))
}

func (rc dataRedshiftClusterAttributes) NodeType() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("node_type"))
}

func (rc dataRedshiftClusterAttributes) NumberOfNodes() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("number_of_nodes"))
}

func (rc dataRedshiftClusterAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(rc.ref.Append("port"))
}

func (rc dataRedshiftClusterAttributes) PreferredMaintenanceWindow() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("preferred_maintenance_window"))
}

func (rc dataRedshiftClusterAttributes) PubliclyAccessible() terra.BoolValue {
	return terra.ReferenceBool(rc.ref.Append("publicly_accessible"))
}

func (rc dataRedshiftClusterAttributes) S3KeyPrefix() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("s3_key_prefix"))
}

func (rc dataRedshiftClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](rc.ref.Append("tags"))
}

func (rc dataRedshiftClusterAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(rc.ref.Append("vpc_id"))
}

func (rc dataRedshiftClusterAttributes) VpcSecurityGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rc.ref.Append("vpc_security_group_ids"))
}

func (rc dataRedshiftClusterAttributes) ClusterNodes() terra.ListValue[dataredshiftcluster.ClusterNodesAttributes] {
	return terra.ReferenceList[dataredshiftcluster.ClusterNodesAttributes](rc.ref.Append("cluster_nodes"))
}
