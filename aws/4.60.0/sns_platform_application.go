// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSnsPlatformApplication(name string, args SnsPlatformApplicationArgs) *SnsPlatformApplication {
	return &SnsPlatformApplication{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SnsPlatformApplication)(nil)

type SnsPlatformApplication struct {
	Name  string
	Args  SnsPlatformApplicationArgs
	state *snsPlatformApplicationState
}

func (spa *SnsPlatformApplication) Type() string {
	return "aws_sns_platform_application"
}

func (spa *SnsPlatformApplication) LocalName() string {
	return spa.Name
}

func (spa *SnsPlatformApplication) Configuration() interface{} {
	return spa.Args
}

func (spa *SnsPlatformApplication) Attributes() snsPlatformApplicationAttributes {
	return snsPlatformApplicationAttributes{ref: terra.ReferenceResource(spa)}
}

func (spa *SnsPlatformApplication) ImportState(av io.Reader) error {
	spa.state = &snsPlatformApplicationState{}
	if err := json.NewDecoder(av).Decode(spa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", spa.Type(), spa.LocalName(), err)
	}
	return nil
}

func (spa *SnsPlatformApplication) State() (*snsPlatformApplicationState, bool) {
	return spa.state, spa.state != nil
}

func (spa *SnsPlatformApplication) StateMust() *snsPlatformApplicationState {
	if spa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", spa.Type(), spa.LocalName()))
	}
	return spa.state
}

func (spa *SnsPlatformApplication) DependOn() terra.Reference {
	return terra.ReferenceResource(spa)
}

type SnsPlatformApplicationArgs struct {
	// ApplePlatformBundleId: string, optional
	ApplePlatformBundleId terra.StringValue `hcl:"apple_platform_bundle_id,attr"`
	// ApplePlatformTeamId: string, optional
	ApplePlatformTeamId terra.StringValue `hcl:"apple_platform_team_id,attr"`
	// EventDeliveryFailureTopicArn: string, optional
	EventDeliveryFailureTopicArn terra.StringValue `hcl:"event_delivery_failure_topic_arn,attr"`
	// EventEndpointCreatedTopicArn: string, optional
	EventEndpointCreatedTopicArn terra.StringValue `hcl:"event_endpoint_created_topic_arn,attr"`
	// EventEndpointDeletedTopicArn: string, optional
	EventEndpointDeletedTopicArn terra.StringValue `hcl:"event_endpoint_deleted_topic_arn,attr"`
	// EventEndpointUpdatedTopicArn: string, optional
	EventEndpointUpdatedTopicArn terra.StringValue `hcl:"event_endpoint_updated_topic_arn,attr"`
	// FailureFeedbackRoleArn: string, optional
	FailureFeedbackRoleArn terra.StringValue `hcl:"failure_feedback_role_arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Platform: string, required
	Platform terra.StringValue `hcl:"platform,attr" validate:"required"`
	// PlatformCredential: string, required
	PlatformCredential terra.StringValue `hcl:"platform_credential,attr" validate:"required"`
	// PlatformPrincipal: string, optional
	PlatformPrincipal terra.StringValue `hcl:"platform_principal,attr"`
	// SuccessFeedbackRoleArn: string, optional
	SuccessFeedbackRoleArn terra.StringValue `hcl:"success_feedback_role_arn,attr"`
	// SuccessFeedbackSampleRate: string, optional
	SuccessFeedbackSampleRate terra.StringValue `hcl:"success_feedback_sample_rate,attr"`
	// DependsOn contains resources that SnsPlatformApplication depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type snsPlatformApplicationAttributes struct {
	ref terra.Reference
}

func (spa snsPlatformApplicationAttributes) ApplePlatformBundleId() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("apple_platform_bundle_id"))
}

func (spa snsPlatformApplicationAttributes) ApplePlatformTeamId() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("apple_platform_team_id"))
}

func (spa snsPlatformApplicationAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("arn"))
}

func (spa snsPlatformApplicationAttributes) EventDeliveryFailureTopicArn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("event_delivery_failure_topic_arn"))
}

func (spa snsPlatformApplicationAttributes) EventEndpointCreatedTopicArn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("event_endpoint_created_topic_arn"))
}

func (spa snsPlatformApplicationAttributes) EventEndpointDeletedTopicArn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("event_endpoint_deleted_topic_arn"))
}

func (spa snsPlatformApplicationAttributes) EventEndpointUpdatedTopicArn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("event_endpoint_updated_topic_arn"))
}

func (spa snsPlatformApplicationAttributes) FailureFeedbackRoleArn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("failure_feedback_role_arn"))
}

func (spa snsPlatformApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("id"))
}

func (spa snsPlatformApplicationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("name"))
}

func (spa snsPlatformApplicationAttributes) Platform() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("platform"))
}

func (spa snsPlatformApplicationAttributes) PlatformCredential() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("platform_credential"))
}

func (spa snsPlatformApplicationAttributes) PlatformPrincipal() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("platform_principal"))
}

func (spa snsPlatformApplicationAttributes) SuccessFeedbackRoleArn() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("success_feedback_role_arn"))
}

func (spa snsPlatformApplicationAttributes) SuccessFeedbackSampleRate() terra.StringValue {
	return terra.ReferenceString(spa.ref.Append("success_feedback_sample_rate"))
}

type snsPlatformApplicationState struct {
	ApplePlatformBundleId        string `json:"apple_platform_bundle_id"`
	ApplePlatformTeamId          string `json:"apple_platform_team_id"`
	Arn                          string `json:"arn"`
	EventDeliveryFailureTopicArn string `json:"event_delivery_failure_topic_arn"`
	EventEndpointCreatedTopicArn string `json:"event_endpoint_created_topic_arn"`
	EventEndpointDeletedTopicArn string `json:"event_endpoint_deleted_topic_arn"`
	EventEndpointUpdatedTopicArn string `json:"event_endpoint_updated_topic_arn"`
	FailureFeedbackRoleArn       string `json:"failure_feedback_role_arn"`
	Id                           string `json:"id"`
	Name                         string `json:"name"`
	Platform                     string `json:"platform"`
	PlatformCredential           string `json:"platform_credential"`
	PlatformPrincipal            string `json:"platform_principal"`
	SuccessFeedbackRoleArn       string `json:"success_feedback_role_arn"`
	SuccessFeedbackSampleRate    string `json:"success_feedback_sample_rate"`
}
