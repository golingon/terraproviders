// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	pinpointapp "github.com/golingon/terraproviders/aws/4.60.0/pinpointapp"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPinpointApp(name string, args PinpointAppArgs) *PinpointApp {
	return &PinpointApp{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PinpointApp)(nil)

type PinpointApp struct {
	Name  string
	Args  PinpointAppArgs
	state *pinpointAppState
}

func (pa *PinpointApp) Type() string {
	return "aws_pinpoint_app"
}

func (pa *PinpointApp) LocalName() string {
	return pa.Name
}

func (pa *PinpointApp) Configuration() interface{} {
	return pa.Args
}

func (pa *PinpointApp) Attributes() pinpointAppAttributes {
	return pinpointAppAttributes{ref: terra.ReferenceResource(pa)}
}

func (pa *PinpointApp) ImportState(av io.Reader) error {
	pa.state = &pinpointAppState{}
	if err := json.NewDecoder(av).Decode(pa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pa.Type(), pa.LocalName(), err)
	}
	return nil
}

func (pa *PinpointApp) State() (*pinpointAppState, bool) {
	return pa.state, pa.state != nil
}

func (pa *PinpointApp) StateMust() *pinpointAppState {
	if pa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pa.Type(), pa.LocalName()))
	}
	return pa.state
}

func (pa *PinpointApp) DependOn() terra.Reference {
	return terra.ReferenceResource(pa)
}

type PinpointAppArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// CampaignHook: optional
	CampaignHook *pinpointapp.CampaignHook `hcl:"campaign_hook,block"`
	// Limits: optional
	Limits *pinpointapp.Limits `hcl:"limits,block"`
	// QuietTime: optional
	QuietTime *pinpointapp.QuietTime `hcl:"quiet_time,block"`
	// DependsOn contains resources that PinpointApp depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type pinpointAppAttributes struct {
	ref terra.Reference
}

func (pa pinpointAppAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("application_id"))
}

func (pa pinpointAppAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("arn"))
}

func (pa pinpointAppAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("id"))
}

func (pa pinpointAppAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("name"))
}

func (pa pinpointAppAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceString(pa.ref.Append("name_prefix"))
}

func (pa pinpointAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](pa.ref.Append("tags"))
}

func (pa pinpointAppAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](pa.ref.Append("tags_all"))
}

func (pa pinpointAppAttributes) CampaignHook() terra.ListValue[pinpointapp.CampaignHookAttributes] {
	return terra.ReferenceList[pinpointapp.CampaignHookAttributes](pa.ref.Append("campaign_hook"))
}

func (pa pinpointAppAttributes) Limits() terra.ListValue[pinpointapp.LimitsAttributes] {
	return terra.ReferenceList[pinpointapp.LimitsAttributes](pa.ref.Append("limits"))
}

func (pa pinpointAppAttributes) QuietTime() terra.ListValue[pinpointapp.QuietTimeAttributes] {
	return terra.ReferenceList[pinpointapp.QuietTimeAttributes](pa.ref.Append("quiet_time"))
}

type pinpointAppState struct {
	ApplicationId string                          `json:"application_id"`
	Arn           string                          `json:"arn"`
	Id            string                          `json:"id"`
	Name          string                          `json:"name"`
	NamePrefix    string                          `json:"name_prefix"`
	Tags          map[string]string               `json:"tags"`
	TagsAll       map[string]string               `json:"tags_all"`
	CampaignHook  []pinpointapp.CampaignHookState `json:"campaign_hook"`
	Limits        []pinpointapp.LimitsState       `json:"limits"`
	QuietTime     []pinpointapp.QuietTimeState    `json:"quiet_time"`
}
