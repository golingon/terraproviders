// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataLambdaLayerVersion(name string, args DataLambdaLayerVersionArgs) *DataLambdaLayerVersion {
	return &DataLambdaLayerVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLambdaLayerVersion)(nil)

type DataLambdaLayerVersion struct {
	Name string
	Args DataLambdaLayerVersionArgs
}

func (llv *DataLambdaLayerVersion) DataSource() string {
	return "aws_lambda_layer_version"
}

func (llv *DataLambdaLayerVersion) LocalName() string {
	return llv.Name
}

func (llv *DataLambdaLayerVersion) Configuration() interface{} {
	return llv.Args
}

func (llv *DataLambdaLayerVersion) Attributes() dataLambdaLayerVersionAttributes {
	return dataLambdaLayerVersionAttributes{ref: terra.ReferenceDataResource(llv)}
}

type DataLambdaLayerVersionArgs struct {
	// CompatibleArchitecture: string, optional
	CompatibleArchitecture terra.StringValue `hcl:"compatible_architecture,attr"`
	// CompatibleRuntime: string, optional
	CompatibleRuntime terra.StringValue `hcl:"compatible_runtime,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LayerName: string, required
	LayerName terra.StringValue `hcl:"layer_name,attr" validate:"required"`
	// Version: number, optional
	Version terra.NumberValue `hcl:"version,attr"`
}
type dataLambdaLayerVersionAttributes struct {
	ref terra.Reference
}

func (llv dataLambdaLayerVersionAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("arn"))
}

func (llv dataLambdaLayerVersionAttributes) CompatibleArchitecture() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("compatible_architecture"))
}

func (llv dataLambdaLayerVersionAttributes) CompatibleArchitectures() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](llv.ref.Append("compatible_architectures"))
}

func (llv dataLambdaLayerVersionAttributes) CompatibleRuntime() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("compatible_runtime"))
}

func (llv dataLambdaLayerVersionAttributes) CompatibleRuntimes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](llv.ref.Append("compatible_runtimes"))
}

func (llv dataLambdaLayerVersionAttributes) CreatedDate() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("created_date"))
}

func (llv dataLambdaLayerVersionAttributes) Description() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("description"))
}

func (llv dataLambdaLayerVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("id"))
}

func (llv dataLambdaLayerVersionAttributes) LayerArn() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("layer_arn"))
}

func (llv dataLambdaLayerVersionAttributes) LayerName() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("layer_name"))
}

func (llv dataLambdaLayerVersionAttributes) LicenseInfo() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("license_info"))
}

func (llv dataLambdaLayerVersionAttributes) SigningJobArn() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("signing_job_arn"))
}

func (llv dataLambdaLayerVersionAttributes) SigningProfileVersionArn() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("signing_profile_version_arn"))
}

func (llv dataLambdaLayerVersionAttributes) SourceCodeHash() terra.StringValue {
	return terra.ReferenceString(llv.ref.Append("source_code_hash"))
}

func (llv dataLambdaLayerVersionAttributes) SourceCodeSize() terra.NumberValue {
	return terra.ReferenceNumber(llv.ref.Append("source_code_size"))
}

func (llv dataLambdaLayerVersionAttributes) Version() terra.NumberValue {
	return terra.ReferenceNumber(llv.ref.Append("version"))
}
