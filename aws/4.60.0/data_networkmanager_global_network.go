// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataNetworkmanagerGlobalNetwork(name string, args DataNetworkmanagerGlobalNetworkArgs) *DataNetworkmanagerGlobalNetwork {
	return &DataNetworkmanagerGlobalNetwork{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNetworkmanagerGlobalNetwork)(nil)

type DataNetworkmanagerGlobalNetwork struct {
	Name string
	Args DataNetworkmanagerGlobalNetworkArgs
}

func (ngn *DataNetworkmanagerGlobalNetwork) DataSource() string {
	return "aws_networkmanager_global_network"
}

func (ngn *DataNetworkmanagerGlobalNetwork) LocalName() string {
	return ngn.Name
}

func (ngn *DataNetworkmanagerGlobalNetwork) Configuration() interface{} {
	return ngn.Args
}

func (ngn *DataNetworkmanagerGlobalNetwork) Attributes() dataNetworkmanagerGlobalNetworkAttributes {
	return dataNetworkmanagerGlobalNetworkAttributes{ref: terra.ReferenceDataResource(ngn)}
}

type DataNetworkmanagerGlobalNetworkArgs struct {
	// GlobalNetworkId: string, required
	GlobalNetworkId terra.StringValue `hcl:"global_network_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}
type dataNetworkmanagerGlobalNetworkAttributes struct {
	ref terra.Reference
}

func (ngn dataNetworkmanagerGlobalNetworkAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(ngn.ref.Append("arn"))
}

func (ngn dataNetworkmanagerGlobalNetworkAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ngn.ref.Append("description"))
}

func (ngn dataNetworkmanagerGlobalNetworkAttributes) GlobalNetworkId() terra.StringValue {
	return terra.ReferenceString(ngn.ref.Append("global_network_id"))
}

func (ngn dataNetworkmanagerGlobalNetworkAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ngn.ref.Append("id"))
}

func (ngn dataNetworkmanagerGlobalNetworkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ngn.ref.Append("tags"))
}
