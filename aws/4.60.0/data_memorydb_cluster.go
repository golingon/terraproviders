// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datamemorydbcluster "github.com/golingon/terraproviders/aws/4.60.0/datamemorydbcluster"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMemorydbCluster(name string, args DataMemorydbClusterArgs) *DataMemorydbCluster {
	return &DataMemorydbCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMemorydbCluster)(nil)

type DataMemorydbCluster struct {
	Name string
	Args DataMemorydbClusterArgs
}

func (mc *DataMemorydbCluster) DataSource() string {
	return "aws_memorydb_cluster"
}

func (mc *DataMemorydbCluster) LocalName() string {
	return mc.Name
}

func (mc *DataMemorydbCluster) Configuration() interface{} {
	return mc.Args
}

func (mc *DataMemorydbCluster) Attributes() dataMemorydbClusterAttributes {
	return dataMemorydbClusterAttributes{ref: terra.ReferenceDataResource(mc)}
}

type DataMemorydbClusterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ClusterEndpoint: min=0
	ClusterEndpoint []datamemorydbcluster.ClusterEndpoint `hcl:"cluster_endpoint,block" validate:"min=0"`
	// Shards: min=0
	Shards []datamemorydbcluster.Shards `hcl:"shards,block" validate:"min=0"`
}
type dataMemorydbClusterAttributes struct {
	ref terra.Reference
}

func (mc dataMemorydbClusterAttributes) AclName() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("acl_name"))
}

func (mc dataMemorydbClusterAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("arn"))
}

func (mc dataMemorydbClusterAttributes) AutoMinorVersionUpgrade() terra.BoolValue {
	return terra.ReferenceBool(mc.ref.Append("auto_minor_version_upgrade"))
}

func (mc dataMemorydbClusterAttributes) DataTiering() terra.BoolValue {
	return terra.ReferenceBool(mc.ref.Append("data_tiering"))
}

func (mc dataMemorydbClusterAttributes) Description() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("description"))
}

func (mc dataMemorydbClusterAttributes) EnginePatchVersion() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("engine_patch_version"))
}

func (mc dataMemorydbClusterAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("engine_version"))
}

func (mc dataMemorydbClusterAttributes) FinalSnapshotName() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("final_snapshot_name"))
}

func (mc dataMemorydbClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("id"))
}

func (mc dataMemorydbClusterAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("kms_key_arn"))
}

func (mc dataMemorydbClusterAttributes) MaintenanceWindow() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("maintenance_window"))
}

func (mc dataMemorydbClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("name"))
}

func (mc dataMemorydbClusterAttributes) NodeType() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("node_type"))
}

func (mc dataMemorydbClusterAttributes) NumReplicasPerShard() terra.NumberValue {
	return terra.ReferenceNumber(mc.ref.Append("num_replicas_per_shard"))
}

func (mc dataMemorydbClusterAttributes) NumShards() terra.NumberValue {
	return terra.ReferenceNumber(mc.ref.Append("num_shards"))
}

func (mc dataMemorydbClusterAttributes) ParameterGroupName() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("parameter_group_name"))
}

func (mc dataMemorydbClusterAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(mc.ref.Append("port"))
}

func (mc dataMemorydbClusterAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](mc.ref.Append("security_group_ids"))
}

func (mc dataMemorydbClusterAttributes) SnapshotRetentionLimit() terra.NumberValue {
	return terra.ReferenceNumber(mc.ref.Append("snapshot_retention_limit"))
}

func (mc dataMemorydbClusterAttributes) SnapshotWindow() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("snapshot_window"))
}

func (mc dataMemorydbClusterAttributes) SnsTopicArn() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("sns_topic_arn"))
}

func (mc dataMemorydbClusterAttributes) SubnetGroupName() terra.StringValue {
	return terra.ReferenceString(mc.ref.Append("subnet_group_name"))
}

func (mc dataMemorydbClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mc.ref.Append("tags"))
}

func (mc dataMemorydbClusterAttributes) TlsEnabled() terra.BoolValue {
	return terra.ReferenceBool(mc.ref.Append("tls_enabled"))
}

func (mc dataMemorydbClusterAttributes) ClusterEndpoint() terra.ListValue[datamemorydbcluster.ClusterEndpointAttributes] {
	return terra.ReferenceList[datamemorydbcluster.ClusterEndpointAttributes](mc.ref.Append("cluster_endpoint"))
}

func (mc dataMemorydbClusterAttributes) Shards() terra.SetValue[datamemorydbcluster.ShardsAttributes] {
	return terra.ReferenceSet[datamemorydbcluster.ShardsAttributes](mc.ref.Append("shards"))
}
