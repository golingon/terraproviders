// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	cloudsearchdomain "github.com/golingon/terraproviders/aws/4.60.0/cloudsearchdomain"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCloudsearchDomain(name string, args CloudsearchDomainArgs) *CloudsearchDomain {
	return &CloudsearchDomain{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudsearchDomain)(nil)

type CloudsearchDomain struct {
	Name  string
	Args  CloudsearchDomainArgs
	state *cloudsearchDomainState
}

func (cd *CloudsearchDomain) Type() string {
	return "aws_cloudsearch_domain"
}

func (cd *CloudsearchDomain) LocalName() string {
	return cd.Name
}

func (cd *CloudsearchDomain) Configuration() interface{} {
	return cd.Args
}

func (cd *CloudsearchDomain) Attributes() cloudsearchDomainAttributes {
	return cloudsearchDomainAttributes{ref: terra.ReferenceResource(cd)}
}

func (cd *CloudsearchDomain) ImportState(av io.Reader) error {
	cd.state = &cloudsearchDomainState{}
	if err := json.NewDecoder(av).Decode(cd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cd.Type(), cd.LocalName(), err)
	}
	return nil
}

func (cd *CloudsearchDomain) State() (*cloudsearchDomainState, bool) {
	return cd.state, cd.state != nil
}

func (cd *CloudsearchDomain) StateMust() *cloudsearchDomainState {
	if cd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cd.Type(), cd.LocalName()))
	}
	return cd.state
}

func (cd *CloudsearchDomain) DependOn() terra.Reference {
	return terra.ReferenceResource(cd)
}

type CloudsearchDomainArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MultiAz: bool, optional
	MultiAz terra.BoolValue `hcl:"multi_az,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// EndpointOptions: optional
	EndpointOptions *cloudsearchdomain.EndpointOptions `hcl:"endpoint_options,block"`
	// IndexField: min=0
	IndexField []cloudsearchdomain.IndexField `hcl:"index_field,block" validate:"min=0"`
	// ScalingParameters: optional
	ScalingParameters *cloudsearchdomain.ScalingParameters `hcl:"scaling_parameters,block"`
	// Timeouts: optional
	Timeouts *cloudsearchdomain.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CloudsearchDomain depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cloudsearchDomainAttributes struct {
	ref terra.Reference
}

func (cd cloudsearchDomainAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("arn"))
}

func (cd cloudsearchDomainAttributes) DocumentServiceEndpoint() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("document_service_endpoint"))
}

func (cd cloudsearchDomainAttributes) DomainId() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("domain_id"))
}

func (cd cloudsearchDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("id"))
}

func (cd cloudsearchDomainAttributes) MultiAz() terra.BoolValue {
	return terra.ReferenceBool(cd.ref.Append("multi_az"))
}

func (cd cloudsearchDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("name"))
}

func (cd cloudsearchDomainAttributes) SearchServiceEndpoint() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("search_service_endpoint"))
}

func (cd cloudsearchDomainAttributes) EndpointOptions() terra.ListValue[cloudsearchdomain.EndpointOptionsAttributes] {
	return terra.ReferenceList[cloudsearchdomain.EndpointOptionsAttributes](cd.ref.Append("endpoint_options"))
}

func (cd cloudsearchDomainAttributes) IndexField() terra.SetValue[cloudsearchdomain.IndexFieldAttributes] {
	return terra.ReferenceSet[cloudsearchdomain.IndexFieldAttributes](cd.ref.Append("index_field"))
}

func (cd cloudsearchDomainAttributes) ScalingParameters() terra.ListValue[cloudsearchdomain.ScalingParametersAttributes] {
	return terra.ReferenceList[cloudsearchdomain.ScalingParametersAttributes](cd.ref.Append("scaling_parameters"))
}

func (cd cloudsearchDomainAttributes) Timeouts() cloudsearchdomain.TimeoutsAttributes {
	return terra.ReferenceSingle[cloudsearchdomain.TimeoutsAttributes](cd.ref.Append("timeouts"))
}

type cloudsearchDomainState struct {
	Arn                     string                                     `json:"arn"`
	DocumentServiceEndpoint string                                     `json:"document_service_endpoint"`
	DomainId                string                                     `json:"domain_id"`
	Id                      string                                     `json:"id"`
	MultiAz                 bool                                       `json:"multi_az"`
	Name                    string                                     `json:"name"`
	SearchServiceEndpoint   string                                     `json:"search_service_endpoint"`
	EndpointOptions         []cloudsearchdomain.EndpointOptionsState   `json:"endpoint_options"`
	IndexField              []cloudsearchdomain.IndexFieldState        `json:"index_field"`
	ScalingParameters       []cloudsearchdomain.ScalingParametersState `json:"scaling_parameters"`
	Timeouts                *cloudsearchdomain.TimeoutsState           `json:"timeouts"`
}
