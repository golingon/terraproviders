// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	dbinstanceautomatedbackupsreplication "github.com/golingon/terraproviders/aws/4.60.0/dbinstanceautomatedbackupsreplication"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDbInstanceAutomatedBackupsReplication(name string, args DbInstanceAutomatedBackupsReplicationArgs) *DbInstanceAutomatedBackupsReplication {
	return &DbInstanceAutomatedBackupsReplication{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DbInstanceAutomatedBackupsReplication)(nil)

type DbInstanceAutomatedBackupsReplication struct {
	Name  string
	Args  DbInstanceAutomatedBackupsReplicationArgs
	state *dbInstanceAutomatedBackupsReplicationState
}

func (diabr *DbInstanceAutomatedBackupsReplication) Type() string {
	return "aws_db_instance_automated_backups_replication"
}

func (diabr *DbInstanceAutomatedBackupsReplication) LocalName() string {
	return diabr.Name
}

func (diabr *DbInstanceAutomatedBackupsReplication) Configuration() interface{} {
	return diabr.Args
}

func (diabr *DbInstanceAutomatedBackupsReplication) Attributes() dbInstanceAutomatedBackupsReplicationAttributes {
	return dbInstanceAutomatedBackupsReplicationAttributes{ref: terra.ReferenceResource(diabr)}
}

func (diabr *DbInstanceAutomatedBackupsReplication) ImportState(av io.Reader) error {
	diabr.state = &dbInstanceAutomatedBackupsReplicationState{}
	if err := json.NewDecoder(av).Decode(diabr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", diabr.Type(), diabr.LocalName(), err)
	}
	return nil
}

func (diabr *DbInstanceAutomatedBackupsReplication) State() (*dbInstanceAutomatedBackupsReplicationState, bool) {
	return diabr.state, diabr.state != nil
}

func (diabr *DbInstanceAutomatedBackupsReplication) StateMust() *dbInstanceAutomatedBackupsReplicationState {
	if diabr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", diabr.Type(), diabr.LocalName()))
	}
	return diabr.state
}

func (diabr *DbInstanceAutomatedBackupsReplication) DependOn() terra.Reference {
	return terra.ReferenceResource(diabr)
}

type DbInstanceAutomatedBackupsReplicationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyId: string, optional
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// PreSignedUrl: string, optional
	PreSignedUrl terra.StringValue `hcl:"pre_signed_url,attr"`
	// RetentionPeriod: number, optional
	RetentionPeriod terra.NumberValue `hcl:"retention_period,attr"`
	// SourceDbInstanceArn: string, required
	SourceDbInstanceArn terra.StringValue `hcl:"source_db_instance_arn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dbinstanceautomatedbackupsreplication.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DbInstanceAutomatedBackupsReplication depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dbInstanceAutomatedBackupsReplicationAttributes struct {
	ref terra.Reference
}

func (diabr dbInstanceAutomatedBackupsReplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(diabr.ref.Append("id"))
}

func (diabr dbInstanceAutomatedBackupsReplicationAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceString(diabr.ref.Append("kms_key_id"))
}

func (diabr dbInstanceAutomatedBackupsReplicationAttributes) PreSignedUrl() terra.StringValue {
	return terra.ReferenceString(diabr.ref.Append("pre_signed_url"))
}

func (diabr dbInstanceAutomatedBackupsReplicationAttributes) RetentionPeriod() terra.NumberValue {
	return terra.ReferenceNumber(diabr.ref.Append("retention_period"))
}

func (diabr dbInstanceAutomatedBackupsReplicationAttributes) SourceDbInstanceArn() terra.StringValue {
	return terra.ReferenceString(diabr.ref.Append("source_db_instance_arn"))
}

func (diabr dbInstanceAutomatedBackupsReplicationAttributes) Timeouts() dbinstanceautomatedbackupsreplication.TimeoutsAttributes {
	return terra.ReferenceSingle[dbinstanceautomatedbackupsreplication.TimeoutsAttributes](diabr.ref.Append("timeouts"))
}

type dbInstanceAutomatedBackupsReplicationState struct {
	Id                  string                                               `json:"id"`
	KmsKeyId            string                                               `json:"kms_key_id"`
	PreSignedUrl        string                                               `json:"pre_signed_url"`
	RetentionPeriod     float64                                              `json:"retention_period"`
	SourceDbInstanceArn string                                               `json:"source_db_instance_arn"`
	Timeouts            *dbinstanceautomatedbackupsreplication.TimeoutsState `json:"timeouts"`
}
