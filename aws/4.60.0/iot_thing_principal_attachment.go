// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotThingPrincipalAttachment(name string, args IotThingPrincipalAttachmentArgs) *IotThingPrincipalAttachment {
	return &IotThingPrincipalAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotThingPrincipalAttachment)(nil)

type IotThingPrincipalAttachment struct {
	Name  string
	Args  IotThingPrincipalAttachmentArgs
	state *iotThingPrincipalAttachmentState
}

func (itpa *IotThingPrincipalAttachment) Type() string {
	return "aws_iot_thing_principal_attachment"
}

func (itpa *IotThingPrincipalAttachment) LocalName() string {
	return itpa.Name
}

func (itpa *IotThingPrincipalAttachment) Configuration() interface{} {
	return itpa.Args
}

func (itpa *IotThingPrincipalAttachment) Attributes() iotThingPrincipalAttachmentAttributes {
	return iotThingPrincipalAttachmentAttributes{ref: terra.ReferenceResource(itpa)}
}

func (itpa *IotThingPrincipalAttachment) ImportState(av io.Reader) error {
	itpa.state = &iotThingPrincipalAttachmentState{}
	if err := json.NewDecoder(av).Decode(itpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itpa.Type(), itpa.LocalName(), err)
	}
	return nil
}

func (itpa *IotThingPrincipalAttachment) State() (*iotThingPrincipalAttachmentState, bool) {
	return itpa.state, itpa.state != nil
}

func (itpa *IotThingPrincipalAttachment) StateMust() *iotThingPrincipalAttachmentState {
	if itpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itpa.Type(), itpa.LocalName()))
	}
	return itpa.state
}

func (itpa *IotThingPrincipalAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(itpa)
}

type IotThingPrincipalAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Principal: string, required
	Principal terra.StringValue `hcl:"principal,attr" validate:"required"`
	// Thing: string, required
	Thing terra.StringValue `hcl:"thing,attr" validate:"required"`
	// DependsOn contains resources that IotThingPrincipalAttachment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotThingPrincipalAttachmentAttributes struct {
	ref terra.Reference
}

func (itpa iotThingPrincipalAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(itpa.ref.Append("id"))
}

func (itpa iotThingPrincipalAttachmentAttributes) Principal() terra.StringValue {
	return terra.ReferenceString(itpa.ref.Append("principal"))
}

func (itpa iotThingPrincipalAttachmentAttributes) Thing() terra.StringValue {
	return terra.ReferenceString(itpa.ref.Append("thing"))
}

type iotThingPrincipalAttachmentState struct {
	Id        string `json:"id"`
	Principal string `json:"principal"`
	Thing     string `json:"thing"`
}
