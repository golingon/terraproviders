// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	dataacmpcacertificateauthority "github.com/golingon/terraproviders/aws/4.60.0/dataacmpcacertificateauthority"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataAcmpcaCertificateAuthority(name string, args DataAcmpcaCertificateAuthorityArgs) *DataAcmpcaCertificateAuthority {
	return &DataAcmpcaCertificateAuthority{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAcmpcaCertificateAuthority)(nil)

type DataAcmpcaCertificateAuthority struct {
	Name string
	Args DataAcmpcaCertificateAuthorityArgs
}

func (aca *DataAcmpcaCertificateAuthority) DataSource() string {
	return "aws_acmpca_certificate_authority"
}

func (aca *DataAcmpcaCertificateAuthority) LocalName() string {
	return aca.Name
}

func (aca *DataAcmpcaCertificateAuthority) Configuration() interface{} {
	return aca.Args
}

func (aca *DataAcmpcaCertificateAuthority) Attributes() dataAcmpcaCertificateAuthorityAttributes {
	return dataAcmpcaCertificateAuthorityAttributes{ref: terra.ReferenceDataResource(aca)}
}

type DataAcmpcaCertificateAuthorityArgs struct {
	// Arn: string, required
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// RevocationConfiguration: min=0
	RevocationConfiguration []dataacmpcacertificateauthority.RevocationConfiguration `hcl:"revocation_configuration,block" validate:"min=0"`
}
type dataAcmpcaCertificateAuthorityAttributes struct {
	ref terra.Reference
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("arn"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Certificate() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("certificate"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("certificate_chain"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) CertificateSigningRequest() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("certificate_signing_request"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("id"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) NotAfter() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("not_after"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) NotBefore() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("not_before"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Serial() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("serial"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Status() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("status"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aca.ref.Append("tags"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) Type() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("type"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) UsageMode() terra.StringValue {
	return terra.ReferenceString(aca.ref.Append("usage_mode"))
}

func (aca dataAcmpcaCertificateAuthorityAttributes) RevocationConfiguration() terra.ListValue[dataacmpcacertificateauthority.RevocationConfigurationAttributes] {
	return terra.ReferenceList[dataacmpcacertificateauthority.RevocationConfigurationAttributes](aca.ref.Append("revocation_configuration"))
}
