// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewVpcIpamPoolCidrAllocation(name string, args VpcIpamPoolCidrAllocationArgs) *VpcIpamPoolCidrAllocation {
	return &VpcIpamPoolCidrAllocation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VpcIpamPoolCidrAllocation)(nil)

type VpcIpamPoolCidrAllocation struct {
	Name  string
	Args  VpcIpamPoolCidrAllocationArgs
	state *vpcIpamPoolCidrAllocationState
}

func (vipca *VpcIpamPoolCidrAllocation) Type() string {
	return "aws_vpc_ipam_pool_cidr_allocation"
}

func (vipca *VpcIpamPoolCidrAllocation) LocalName() string {
	return vipca.Name
}

func (vipca *VpcIpamPoolCidrAllocation) Configuration() interface{} {
	return vipca.Args
}

func (vipca *VpcIpamPoolCidrAllocation) Attributes() vpcIpamPoolCidrAllocationAttributes {
	return vpcIpamPoolCidrAllocationAttributes{ref: terra.ReferenceResource(vipca)}
}

func (vipca *VpcIpamPoolCidrAllocation) ImportState(av io.Reader) error {
	vipca.state = &vpcIpamPoolCidrAllocationState{}
	if err := json.NewDecoder(av).Decode(vipca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vipca.Type(), vipca.LocalName(), err)
	}
	return nil
}

func (vipca *VpcIpamPoolCidrAllocation) State() (*vpcIpamPoolCidrAllocationState, bool) {
	return vipca.state, vipca.state != nil
}

func (vipca *VpcIpamPoolCidrAllocation) StateMust() *vpcIpamPoolCidrAllocationState {
	if vipca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vipca.Type(), vipca.LocalName()))
	}
	return vipca.state
}

func (vipca *VpcIpamPoolCidrAllocation) DependOn() terra.Reference {
	return terra.ReferenceResource(vipca)
}

type VpcIpamPoolCidrAllocationArgs struct {
	// Cidr: string, optional
	Cidr terra.StringValue `hcl:"cidr,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisallowedCidrs: set of string, optional
	DisallowedCidrs terra.SetValue[terra.StringValue] `hcl:"disallowed_cidrs,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpamPoolId: string, required
	IpamPoolId terra.StringValue `hcl:"ipam_pool_id,attr" validate:"required"`
	// NetmaskLength: number, optional
	NetmaskLength terra.NumberValue `hcl:"netmask_length,attr"`
	// DependsOn contains resources that VpcIpamPoolCidrAllocation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type vpcIpamPoolCidrAllocationAttributes struct {
	ref terra.Reference
}

func (vipca vpcIpamPoolCidrAllocationAttributes) Cidr() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("cidr"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) Description() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("description"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) DisallowedCidrs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](vipca.ref.Append("disallowed_cidrs"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("id"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) IpamPoolAllocationId() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("ipam_pool_allocation_id"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) IpamPoolId() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("ipam_pool_id"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) NetmaskLength() terra.NumberValue {
	return terra.ReferenceNumber(vipca.ref.Append("netmask_length"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("resource_id"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) ResourceOwner() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("resource_owner"))
}

func (vipca vpcIpamPoolCidrAllocationAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceString(vipca.ref.Append("resource_type"))
}

type vpcIpamPoolCidrAllocationState struct {
	Cidr                 string   `json:"cidr"`
	Description          string   `json:"description"`
	DisallowedCidrs      []string `json:"disallowed_cidrs"`
	Id                   string   `json:"id"`
	IpamPoolAllocationId string   `json:"ipam_pool_allocation_id"`
	IpamPoolId           string   `json:"ipam_pool_id"`
	NetmaskLength        float64  `json:"netmask_length"`
	ResourceId           string   `json:"resource_id"`
	ResourceOwner        string   `json:"resource_owner"`
	ResourceType         string   `json:"resource_type"`
}
