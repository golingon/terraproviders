// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datalb "github.com/golingon/terraproviders/aws/4.60.0/datalb"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataLb(name string, args DataLbArgs) *DataLb {
	return &DataLb{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLb)(nil)

type DataLb struct {
	Name string
	Args DataLbArgs
}

func (l *DataLb) DataSource() string {
	return "aws_lb"
}

func (l *DataLb) LocalName() string {
	return l.Name
}

func (l *DataLb) Configuration() interface{} {
	return l.Args
}

func (l *DataLb) Attributes() dataLbAttributes {
	return dataLbAttributes{ref: terra.ReferenceDataResource(l)}
}

type DataLbArgs struct {
	// Arn: string, optional
	Arn terra.StringValue `hcl:"arn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// AccessLogs: min=0
	AccessLogs []datalb.AccessLogs `hcl:"access_logs,block" validate:"min=0"`
	// SubnetMapping: min=0
	SubnetMapping []datalb.SubnetMapping `hcl:"subnet_mapping,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datalb.Timeouts `hcl:"timeouts,block"`
}
type dataLbAttributes struct {
	ref terra.Reference
}

func (l dataLbAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("arn"))
}

func (l dataLbAttributes) ArnSuffix() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("arn_suffix"))
}

func (l dataLbAttributes) CustomerOwnedIpv4Pool() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("customer_owned_ipv4_pool"))
}

func (l dataLbAttributes) DesyncMitigationMode() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("desync_mitigation_mode"))
}

func (l dataLbAttributes) DnsName() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("dns_name"))
}

func (l dataLbAttributes) DropInvalidHeaderFields() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("drop_invalid_header_fields"))
}

func (l dataLbAttributes) EnableCrossZoneLoadBalancing() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("enable_cross_zone_load_balancing"))
}

func (l dataLbAttributes) EnableDeletionProtection() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("enable_deletion_protection"))
}

func (l dataLbAttributes) EnableHttp2() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("enable_http2"))
}

func (l dataLbAttributes) EnableTlsVersionAndCipherSuiteHeaders() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("enable_tls_version_and_cipher_suite_headers"))
}

func (l dataLbAttributes) EnableWafFailOpen() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("enable_waf_fail_open"))
}

func (l dataLbAttributes) EnableXffClientPort() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("enable_xff_client_port"))
}

func (l dataLbAttributes) Id() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("id"))
}

func (l dataLbAttributes) IdleTimeout() terra.NumberValue {
	return terra.ReferenceNumber(l.ref.Append("idle_timeout"))
}

func (l dataLbAttributes) Internal() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("internal"))
}

func (l dataLbAttributes) IpAddressType() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("ip_address_type"))
}

func (l dataLbAttributes) LoadBalancerType() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("load_balancer_type"))
}

func (l dataLbAttributes) Name() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("name"))
}

func (l dataLbAttributes) PreserveHostHeader() terra.BoolValue {
	return terra.ReferenceBool(l.ref.Append("preserve_host_header"))
}

func (l dataLbAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](l.ref.Append("security_groups"))
}

func (l dataLbAttributes) Subnets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](l.ref.Append("subnets"))
}

func (l dataLbAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](l.ref.Append("tags"))
}

func (l dataLbAttributes) VpcId() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("vpc_id"))
}

func (l dataLbAttributes) XffHeaderProcessingMode() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("xff_header_processing_mode"))
}

func (l dataLbAttributes) ZoneId() terra.StringValue {
	return terra.ReferenceString(l.ref.Append("zone_id"))
}

func (l dataLbAttributes) AccessLogs() terra.ListValue[datalb.AccessLogsAttributes] {
	return terra.ReferenceList[datalb.AccessLogsAttributes](l.ref.Append("access_logs"))
}

func (l dataLbAttributes) SubnetMapping() terra.SetValue[datalb.SubnetMappingAttributes] {
	return terra.ReferenceSet[datalb.SubnetMappingAttributes](l.ref.Append("subnet_mapping"))
}

func (l dataLbAttributes) Timeouts() datalb.TimeoutsAttributes {
	return terra.ReferenceSingle[datalb.TimeoutsAttributes](l.ref.Append("timeouts"))
}
