// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDevicefarmProject(name string, args DevicefarmProjectArgs) *DevicefarmProject {
	return &DevicefarmProject{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DevicefarmProject)(nil)

type DevicefarmProject struct {
	Name  string
	Args  DevicefarmProjectArgs
	state *devicefarmProjectState
}

func (dp *DevicefarmProject) Type() string {
	return "aws_devicefarm_project"
}

func (dp *DevicefarmProject) LocalName() string {
	return dp.Name
}

func (dp *DevicefarmProject) Configuration() interface{} {
	return dp.Args
}

func (dp *DevicefarmProject) Attributes() devicefarmProjectAttributes {
	return devicefarmProjectAttributes{ref: terra.ReferenceResource(dp)}
}

func (dp *DevicefarmProject) ImportState(av io.Reader) error {
	dp.state = &devicefarmProjectState{}
	if err := json.NewDecoder(av).Decode(dp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dp.Type(), dp.LocalName(), err)
	}
	return nil
}

func (dp *DevicefarmProject) State() (*devicefarmProjectState, bool) {
	return dp.state, dp.state != nil
}

func (dp *DevicefarmProject) StateMust() *devicefarmProjectState {
	if dp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dp.Type(), dp.LocalName()))
	}
	return dp.state
}

func (dp *DevicefarmProject) DependOn() terra.Reference {
	return terra.ReferenceResource(dp)
}

type DevicefarmProjectArgs struct {
	// DefaultJobTimeoutMinutes: number, optional
	DefaultJobTimeoutMinutes terra.NumberValue `hcl:"default_job_timeout_minutes,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll: map of string, optional
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// DependsOn contains resources that DevicefarmProject depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type devicefarmProjectAttributes struct {
	ref terra.Reference
}

func (dp devicefarmProjectAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("arn"))
}

func (dp devicefarmProjectAttributes) DefaultJobTimeoutMinutes() terra.NumberValue {
	return terra.ReferenceNumber(dp.ref.Append("default_job_timeout_minutes"))
}

func (dp devicefarmProjectAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("id"))
}

func (dp devicefarmProjectAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("name"))
}

func (dp devicefarmProjectAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dp.ref.Append("tags"))
}

func (dp devicefarmProjectAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dp.ref.Append("tags_all"))
}

type devicefarmProjectState struct {
	Arn                      string            `json:"arn"`
	DefaultJobTimeoutMinutes float64           `json:"default_job_timeout_minutes"`
	Id                       string            `json:"id"`
	Name                     string            `json:"name"`
	Tags                     map[string]string `json:"tags"`
	TagsAll                  map[string]string `json:"tags_all"`
}
