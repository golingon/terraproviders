// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewEcrRegistryPolicy(name string, args EcrRegistryPolicyArgs) *EcrRegistryPolicy {
	return &EcrRegistryPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*EcrRegistryPolicy)(nil)

type EcrRegistryPolicy struct {
	Name  string
	Args  EcrRegistryPolicyArgs
	state *ecrRegistryPolicyState
}

func (erp *EcrRegistryPolicy) Type() string {
	return "aws_ecr_registry_policy"
}

func (erp *EcrRegistryPolicy) LocalName() string {
	return erp.Name
}

func (erp *EcrRegistryPolicy) Configuration() interface{} {
	return erp.Args
}

func (erp *EcrRegistryPolicy) Attributes() ecrRegistryPolicyAttributes {
	return ecrRegistryPolicyAttributes{ref: terra.ReferenceResource(erp)}
}

func (erp *EcrRegistryPolicy) ImportState(av io.Reader) error {
	erp.state = &ecrRegistryPolicyState{}
	if err := json.NewDecoder(av).Decode(erp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", erp.Type(), erp.LocalName(), err)
	}
	return nil
}

func (erp *EcrRegistryPolicy) State() (*ecrRegistryPolicyState, bool) {
	return erp.state, erp.state != nil
}

func (erp *EcrRegistryPolicy) StateMust() *ecrRegistryPolicyState {
	if erp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", erp.Type(), erp.LocalName()))
	}
	return erp.state
}

func (erp *EcrRegistryPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(erp)
}

type EcrRegistryPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Policy: string, required
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
	// DependsOn contains resources that EcrRegistryPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type ecrRegistryPolicyAttributes struct {
	ref terra.Reference
}

func (erp ecrRegistryPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(erp.ref.Append("id"))
}

func (erp ecrRegistryPolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceString(erp.ref.Append("policy"))
}

func (erp ecrRegistryPolicyAttributes) RegistryId() terra.StringValue {
	return terra.ReferenceString(erp.ref.Append("registry_id"))
}

type ecrRegistryPolicyState struct {
	Id         string `json:"id"`
	Policy     string `json:"policy"`
	RegistryId string `json:"registry_id"`
}
