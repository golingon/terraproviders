// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataCodecommitRepository(name string, args DataCodecommitRepositoryArgs) *DataCodecommitRepository {
	return &DataCodecommitRepository{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCodecommitRepository)(nil)

type DataCodecommitRepository struct {
	Name string
	Args DataCodecommitRepositoryArgs
}

func (cr *DataCodecommitRepository) DataSource() string {
	return "aws_codecommit_repository"
}

func (cr *DataCodecommitRepository) LocalName() string {
	return cr.Name
}

func (cr *DataCodecommitRepository) Configuration() interface{} {
	return cr.Args
}

func (cr *DataCodecommitRepository) Attributes() dataCodecommitRepositoryAttributes {
	return dataCodecommitRepositoryAttributes{ref: terra.ReferenceDataResource(cr)}
}

type DataCodecommitRepositoryArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RepositoryName: string, required
	RepositoryName terra.StringValue `hcl:"repository_name,attr" validate:"required"`
}
type dataCodecommitRepositoryAttributes struct {
	ref terra.Reference
}

func (cr dataCodecommitRepositoryAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("arn"))
}

func (cr dataCodecommitRepositoryAttributes) CloneUrlHttp() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("clone_url_http"))
}

func (cr dataCodecommitRepositoryAttributes) CloneUrlSsh() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("clone_url_ssh"))
}

func (cr dataCodecommitRepositoryAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("id"))
}

func (cr dataCodecommitRepositoryAttributes) RepositoryId() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("repository_id"))
}

func (cr dataCodecommitRepositoryAttributes) RepositoryName() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("repository_name"))
}
