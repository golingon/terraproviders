// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package connectquickconnect

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type QuickConnectConfig struct {
	// QuickConnectType: string, required
	QuickConnectType terra.StringValue `hcl:"quick_connect_type,attr" validate:"required"`
	// PhoneConfig: min=0
	PhoneConfig []PhoneConfig `hcl:"phone_config,block" validate:"min=0"`
	// QueueConfig: min=0
	QueueConfig []QueueConfig `hcl:"queue_config,block" validate:"min=0"`
	// UserConfig: min=0
	UserConfig []UserConfig `hcl:"user_config,block" validate:"min=0"`
}

type PhoneConfig struct {
	// PhoneNumber: string, required
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
}

type QueueConfig struct {
	// ContactFlowId: string, required
	ContactFlowId terra.StringValue `hcl:"contact_flow_id,attr" validate:"required"`
	// QueueId: string, required
	QueueId terra.StringValue `hcl:"queue_id,attr" validate:"required"`
}

type UserConfig struct {
	// ContactFlowId: string, required
	ContactFlowId terra.StringValue `hcl:"contact_flow_id,attr" validate:"required"`
	// UserId: string, required
	UserId terra.StringValue `hcl:"user_id,attr" validate:"required"`
}

type QuickConnectConfigAttributes struct {
	ref terra.Reference
}

func (qcc QuickConnectConfigAttributes) InternalRef() (terra.Reference, error) {
	return qcc.ref, nil
}

func (qcc QuickConnectConfigAttributes) InternalWithRef(ref terra.Reference) QuickConnectConfigAttributes {
	return QuickConnectConfigAttributes{ref: ref}
}

func (qcc QuickConnectConfigAttributes) InternalTokens() hclwrite.Tokens {
	return qcc.ref.InternalTokens()
}

func (qcc QuickConnectConfigAttributes) QuickConnectType() terra.StringValue {
	return terra.ReferenceAsString(qcc.ref.Append("quick_connect_type"))
}

func (qcc QuickConnectConfigAttributes) PhoneConfig() terra.ListValue[PhoneConfigAttributes] {
	return terra.ReferenceAsList[PhoneConfigAttributes](qcc.ref.Append("phone_config"))
}

func (qcc QuickConnectConfigAttributes) QueueConfig() terra.ListValue[QueueConfigAttributes] {
	return terra.ReferenceAsList[QueueConfigAttributes](qcc.ref.Append("queue_config"))
}

func (qcc QuickConnectConfigAttributes) UserConfig() terra.ListValue[UserConfigAttributes] {
	return terra.ReferenceAsList[UserConfigAttributes](qcc.ref.Append("user_config"))
}

type PhoneConfigAttributes struct {
	ref terra.Reference
}

func (pc PhoneConfigAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc PhoneConfigAttributes) InternalWithRef(ref terra.Reference) PhoneConfigAttributes {
	return PhoneConfigAttributes{ref: ref}
}

func (pc PhoneConfigAttributes) InternalTokens() hclwrite.Tokens {
	return pc.ref.InternalTokens()
}

func (pc PhoneConfigAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("phone_number"))
}

type QueueConfigAttributes struct {
	ref terra.Reference
}

func (qc QueueConfigAttributes) InternalRef() (terra.Reference, error) {
	return qc.ref, nil
}

func (qc QueueConfigAttributes) InternalWithRef(ref terra.Reference) QueueConfigAttributes {
	return QueueConfigAttributes{ref: ref}
}

func (qc QueueConfigAttributes) InternalTokens() hclwrite.Tokens {
	return qc.ref.InternalTokens()
}

func (qc QueueConfigAttributes) ContactFlowId() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("contact_flow_id"))
}

func (qc QueueConfigAttributes) QueueId() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("queue_id"))
}

type UserConfigAttributes struct {
	ref terra.Reference
}

func (uc UserConfigAttributes) InternalRef() (terra.Reference, error) {
	return uc.ref, nil
}

func (uc UserConfigAttributes) InternalWithRef(ref terra.Reference) UserConfigAttributes {
	return UserConfigAttributes{ref: ref}
}

func (uc UserConfigAttributes) InternalTokens() hclwrite.Tokens {
	return uc.ref.InternalTokens()
}

func (uc UserConfigAttributes) ContactFlowId() terra.StringValue {
	return terra.ReferenceAsString(uc.ref.Append("contact_flow_id"))
}

func (uc UserConfigAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(uc.ref.Append("user_id"))
}

type QuickConnectConfigState struct {
	QuickConnectType string             `json:"quick_connect_type"`
	PhoneConfig      []PhoneConfigState `json:"phone_config"`
	QueueConfig      []QueueConfigState `json:"queue_config"`
	UserConfig       []UserConfigState  `json:"user_config"`
}

type PhoneConfigState struct {
	PhoneNumber string `json:"phone_number"`
}

type QueueConfigState struct {
	ContactFlowId string `json:"contact_flow_id"`
	QueueId       string `json:"queue_id"`
}

type UserConfigState struct {
	ContactFlowId string `json:"contact_flow_id"`
	UserId        string `json:"user_id"`
}
