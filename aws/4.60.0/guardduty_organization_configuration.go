// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	guarddutyorganizationconfiguration "github.com/golingon/terraproviders/aws/4.60.0/guarddutyorganizationconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewGuarddutyOrganizationConfiguration(name string, args GuarddutyOrganizationConfigurationArgs) *GuarddutyOrganizationConfiguration {
	return &GuarddutyOrganizationConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GuarddutyOrganizationConfiguration)(nil)

type GuarddutyOrganizationConfiguration struct {
	Name  string
	Args  GuarddutyOrganizationConfigurationArgs
	state *guarddutyOrganizationConfigurationState
}

func (goc *GuarddutyOrganizationConfiguration) Type() string {
	return "aws_guardduty_organization_configuration"
}

func (goc *GuarddutyOrganizationConfiguration) LocalName() string {
	return goc.Name
}

func (goc *GuarddutyOrganizationConfiguration) Configuration() interface{} {
	return goc.Args
}

func (goc *GuarddutyOrganizationConfiguration) Attributes() guarddutyOrganizationConfigurationAttributes {
	return guarddutyOrganizationConfigurationAttributes{ref: terra.ReferenceResource(goc)}
}

func (goc *GuarddutyOrganizationConfiguration) ImportState(av io.Reader) error {
	goc.state = &guarddutyOrganizationConfigurationState{}
	if err := json.NewDecoder(av).Decode(goc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", goc.Type(), goc.LocalName(), err)
	}
	return nil
}

func (goc *GuarddutyOrganizationConfiguration) State() (*guarddutyOrganizationConfigurationState, bool) {
	return goc.state, goc.state != nil
}

func (goc *GuarddutyOrganizationConfiguration) StateMust() *guarddutyOrganizationConfigurationState {
	if goc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", goc.Type(), goc.LocalName()))
	}
	return goc.state
}

func (goc *GuarddutyOrganizationConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(goc)
}

type GuarddutyOrganizationConfigurationArgs struct {
	// AutoEnable: bool, required
	AutoEnable terra.BoolValue `hcl:"auto_enable,attr" validate:"required"`
	// DetectorId: string, required
	DetectorId terra.StringValue `hcl:"detector_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Datasources: optional
	Datasources *guarddutyorganizationconfiguration.Datasources `hcl:"datasources,block"`
	// DependsOn contains resources that GuarddutyOrganizationConfiguration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type guarddutyOrganizationConfigurationAttributes struct {
	ref terra.Reference
}

func (goc guarddutyOrganizationConfigurationAttributes) AutoEnable() terra.BoolValue {
	return terra.ReferenceBool(goc.ref.Append("auto_enable"))
}

func (goc guarddutyOrganizationConfigurationAttributes) DetectorId() terra.StringValue {
	return terra.ReferenceString(goc.ref.Append("detector_id"))
}

func (goc guarddutyOrganizationConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(goc.ref.Append("id"))
}

func (goc guarddutyOrganizationConfigurationAttributes) Datasources() terra.ListValue[guarddutyorganizationconfiguration.DatasourcesAttributes] {
	return terra.ReferenceList[guarddutyorganizationconfiguration.DatasourcesAttributes](goc.ref.Append("datasources"))
}

type guarddutyOrganizationConfigurationState struct {
	AutoEnable  bool                                                  `json:"auto_enable"`
	DetectorId  string                                                `json:"detector_id"`
	Id          string                                                `json:"id"`
	Datasources []guarddutyorganizationconfiguration.DatasourcesState `json:"datasources"`
}
