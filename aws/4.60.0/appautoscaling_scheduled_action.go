// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	appautoscalingscheduledaction "github.com/golingon/terraproviders/aws/4.60.0/appautoscalingscheduledaction"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAppautoscalingScheduledAction(name string, args AppautoscalingScheduledActionArgs) *AppautoscalingScheduledAction {
	return &AppautoscalingScheduledAction{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AppautoscalingScheduledAction)(nil)

type AppautoscalingScheduledAction struct {
	Name  string
	Args  AppautoscalingScheduledActionArgs
	state *appautoscalingScheduledActionState
}

func (asa *AppautoscalingScheduledAction) Type() string {
	return "aws_appautoscaling_scheduled_action"
}

func (asa *AppautoscalingScheduledAction) LocalName() string {
	return asa.Name
}

func (asa *AppautoscalingScheduledAction) Configuration() interface{} {
	return asa.Args
}

func (asa *AppautoscalingScheduledAction) Attributes() appautoscalingScheduledActionAttributes {
	return appautoscalingScheduledActionAttributes{ref: terra.ReferenceResource(asa)}
}

func (asa *AppautoscalingScheduledAction) ImportState(av io.Reader) error {
	asa.state = &appautoscalingScheduledActionState{}
	if err := json.NewDecoder(av).Decode(asa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asa.Type(), asa.LocalName(), err)
	}
	return nil
}

func (asa *AppautoscalingScheduledAction) State() (*appautoscalingScheduledActionState, bool) {
	return asa.state, asa.state != nil
}

func (asa *AppautoscalingScheduledAction) StateMust() *appautoscalingScheduledActionState {
	if asa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asa.Type(), asa.LocalName()))
	}
	return asa.state
}

func (asa *AppautoscalingScheduledAction) DependOn() terra.Reference {
	return terra.ReferenceResource(asa)
}

type AppautoscalingScheduledActionArgs struct {
	// EndTime: string, optional
	EndTime terra.StringValue `hcl:"end_time,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceId: string, required
	ResourceId terra.StringValue `hcl:"resource_id,attr" validate:"required"`
	// ScalableDimension: string, required
	ScalableDimension terra.StringValue `hcl:"scalable_dimension,attr" validate:"required"`
	// Schedule: string, required
	Schedule terra.StringValue `hcl:"schedule,attr" validate:"required"`
	// ServiceNamespace: string, required
	ServiceNamespace terra.StringValue `hcl:"service_namespace,attr" validate:"required"`
	// StartTime: string, optional
	StartTime terra.StringValue `hcl:"start_time,attr"`
	// Timezone: string, optional
	Timezone terra.StringValue `hcl:"timezone,attr"`
	// ScalableTargetAction: required
	ScalableTargetAction *appautoscalingscheduledaction.ScalableTargetAction `hcl:"scalable_target_action,block" validate:"required"`
	// DependsOn contains resources that AppautoscalingScheduledAction depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type appautoscalingScheduledActionAttributes struct {
	ref terra.Reference
}

func (asa appautoscalingScheduledActionAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("arn"))
}

func (asa appautoscalingScheduledActionAttributes) EndTime() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("end_time"))
}

func (asa appautoscalingScheduledActionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("id"))
}

func (asa appautoscalingScheduledActionAttributes) Name() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("name"))
}

func (asa appautoscalingScheduledActionAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("resource_id"))
}

func (asa appautoscalingScheduledActionAttributes) ScalableDimension() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("scalable_dimension"))
}

func (asa appautoscalingScheduledActionAttributes) Schedule() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("schedule"))
}

func (asa appautoscalingScheduledActionAttributes) ServiceNamespace() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("service_namespace"))
}

func (asa appautoscalingScheduledActionAttributes) StartTime() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("start_time"))
}

func (asa appautoscalingScheduledActionAttributes) Timezone() terra.StringValue {
	return terra.ReferenceString(asa.ref.Append("timezone"))
}

func (asa appautoscalingScheduledActionAttributes) ScalableTargetAction() terra.ListValue[appautoscalingscheduledaction.ScalableTargetActionAttributes] {
	return terra.ReferenceList[appautoscalingscheduledaction.ScalableTargetActionAttributes](asa.ref.Append("scalable_target_action"))
}

type appautoscalingScheduledActionState struct {
	Arn                  string                                                    `json:"arn"`
	EndTime              string                                                    `json:"end_time"`
	Id                   string                                                    `json:"id"`
	Name                 string                                                    `json:"name"`
	ResourceId           string                                                    `json:"resource_id"`
	ScalableDimension    string                                                    `json:"scalable_dimension"`
	Schedule             string                                                    `json:"schedule"`
	ServiceNamespace     string                                                    `json:"service_namespace"`
	StartTime            string                                                    `json:"start_time"`
	Timezone             string                                                    `json:"timezone"`
	ScalableTargetAction []appautoscalingscheduledaction.ScalableTargetActionState `json:"scalable_target_action"`
}
