// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package kendradatasource

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Configuration struct {
	// S3Configuration: optional
	S3Configuration *S3Configuration `hcl:"s3_configuration,block"`
	// WebCrawlerConfiguration: optional
	WebCrawlerConfiguration *WebCrawlerConfiguration `hcl:"web_crawler_configuration,block"`
}

type S3Configuration struct {
	// BucketName: string, required
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// ExclusionPatterns: set of string, optional
	ExclusionPatterns terra.SetValue[terra.StringValue] `hcl:"exclusion_patterns,attr"`
	// InclusionPatterns: set of string, optional
	InclusionPatterns terra.SetValue[terra.StringValue] `hcl:"inclusion_patterns,attr"`
	// InclusionPrefixes: set of string, optional
	InclusionPrefixes terra.SetValue[terra.StringValue] `hcl:"inclusion_prefixes,attr"`
	// AccessControlListConfiguration: optional
	AccessControlListConfiguration *AccessControlListConfiguration `hcl:"access_control_list_configuration,block"`
	// DocumentsMetadataConfiguration: optional
	DocumentsMetadataConfiguration *DocumentsMetadataConfiguration `hcl:"documents_metadata_configuration,block"`
}

type AccessControlListConfiguration struct {
	// KeyPath: string, optional
	KeyPath terra.StringValue `hcl:"key_path,attr"`
}

type DocumentsMetadataConfiguration struct {
	// S3Prefix: string, optional
	S3Prefix terra.StringValue `hcl:"s3_prefix,attr"`
}

type WebCrawlerConfiguration struct {
	// CrawlDepth: number, optional
	CrawlDepth terra.NumberValue `hcl:"crawl_depth,attr"`
	// MaxContentSizePerPageInMegaBytes: number, optional
	MaxContentSizePerPageInMegaBytes terra.NumberValue `hcl:"max_content_size_per_page_in_mega_bytes,attr"`
	// MaxLinksPerPage: number, optional
	MaxLinksPerPage terra.NumberValue `hcl:"max_links_per_page,attr"`
	// MaxUrlsPerMinuteCrawlRate: number, optional
	MaxUrlsPerMinuteCrawlRate terra.NumberValue `hcl:"max_urls_per_minute_crawl_rate,attr"`
	// UrlExclusionPatterns: set of string, optional
	UrlExclusionPatterns terra.SetValue[terra.StringValue] `hcl:"url_exclusion_patterns,attr"`
	// UrlInclusionPatterns: set of string, optional
	UrlInclusionPatterns terra.SetValue[terra.StringValue] `hcl:"url_inclusion_patterns,attr"`
	// AuthenticationConfiguration: optional
	AuthenticationConfiguration *AuthenticationConfiguration `hcl:"authentication_configuration,block"`
	// ProxyConfiguration: optional
	ProxyConfiguration *ProxyConfiguration `hcl:"proxy_configuration,block"`
	// Urls: required
	Urls *Urls `hcl:"urls,block" validate:"required"`
}

type AuthenticationConfiguration struct {
	// BasicAuthentication: min=0,max=10
	BasicAuthentication []BasicAuthentication `hcl:"basic_authentication,block" validate:"min=0,max=10"`
}

type BasicAuthentication struct {
	// Credentials: string, required
	Credentials terra.StringValue `hcl:"credentials,attr" validate:"required"`
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
}

type ProxyConfiguration struct {
	// Credentials: string, optional
	Credentials terra.StringValue `hcl:"credentials,attr"`
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
}

type Urls struct {
	// SeedUrlConfiguration: optional
	SeedUrlConfiguration *SeedUrlConfiguration `hcl:"seed_url_configuration,block"`
	// SiteMapsConfiguration: optional
	SiteMapsConfiguration *SiteMapsConfiguration `hcl:"site_maps_configuration,block"`
}

type SeedUrlConfiguration struct {
	// SeedUrls: set of string, required
	SeedUrls terra.SetValue[terra.StringValue] `hcl:"seed_urls,attr" validate:"required"`
	// WebCrawlerMode: string, optional
	WebCrawlerMode terra.StringValue `hcl:"web_crawler_mode,attr"`
}

type SiteMapsConfiguration struct {
	// SiteMaps: set of string, required
	SiteMaps terra.SetValue[terra.StringValue] `hcl:"site_maps,attr" validate:"required"`
}

type CustomDocumentEnrichmentConfiguration struct {
	// RoleArn: string, optional
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// InlineConfigurations: min=0,max=100
	InlineConfigurations []InlineConfigurations `hcl:"inline_configurations,block" validate:"min=0,max=100"`
	// PostExtractionHookConfiguration: optional
	PostExtractionHookConfiguration *PostExtractionHookConfiguration `hcl:"post_extraction_hook_configuration,block"`
	// PreExtractionHookConfiguration: optional
	PreExtractionHookConfiguration *PreExtractionHookConfiguration `hcl:"pre_extraction_hook_configuration,block"`
}

type InlineConfigurations struct {
	// DocumentContentDeletion: bool, optional
	DocumentContentDeletion terra.BoolValue `hcl:"document_content_deletion,attr"`
	// Condition: optional
	Condition *Condition `hcl:"condition,block"`
	// Target: optional
	Target *Target `hcl:"target,block"`
}

type Condition struct {
	// ConditionDocumentAttributeKey: string, required
	ConditionDocumentAttributeKey terra.StringValue `hcl:"condition_document_attribute_key,attr" validate:"required"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// ConditionConditionOnValue: optional
	ConditionOnValue *ConditionConditionOnValue `hcl:"condition_on_value,block"`
}

type ConditionConditionOnValue struct {
	// DateValue: string, optional
	DateValue terra.StringValue `hcl:"date_value,attr"`
	// LongValue: number, optional
	LongValue terra.NumberValue `hcl:"long_value,attr"`
	// StringListValue: set of string, optional
	StringListValue terra.SetValue[terra.StringValue] `hcl:"string_list_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
}

type Target struct {
	// TargetDocumentAttributeKey: string, optional
	TargetDocumentAttributeKey terra.StringValue `hcl:"target_document_attribute_key,attr"`
	// TargetDocumentAttributeValueDeletion: bool, optional
	TargetDocumentAttributeValueDeletion terra.BoolValue `hcl:"target_document_attribute_value_deletion,attr"`
	// TargetDocumentAttributeValue: optional
	TargetDocumentAttributeValue *TargetDocumentAttributeValue `hcl:"target_document_attribute_value,block"`
}

type TargetDocumentAttributeValue struct {
	// DateValue: string, optional
	DateValue terra.StringValue `hcl:"date_value,attr"`
	// LongValue: number, optional
	LongValue terra.NumberValue `hcl:"long_value,attr"`
	// StringListValue: set of string, optional
	StringListValue terra.SetValue[terra.StringValue] `hcl:"string_list_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
}

type PostExtractionHookConfiguration struct {
	// LambdaArn: string, required
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
	// S3Bucket: string, required
	S3Bucket terra.StringValue `hcl:"s3_bucket,attr" validate:"required"`
	// PostExtractionHookConfigurationInvocationCondition: optional
	InvocationCondition *PostExtractionHookConfigurationInvocationCondition `hcl:"invocation_condition,block"`
}

type PostExtractionHookConfigurationInvocationCondition struct {
	// ConditionDocumentAttributeKey: string, required
	ConditionDocumentAttributeKey terra.StringValue `hcl:"condition_document_attribute_key,attr" validate:"required"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// PostExtractionHookConfigurationInvocationConditionConditionOnValue: optional
	ConditionOnValue *PostExtractionHookConfigurationInvocationConditionConditionOnValue `hcl:"condition_on_value,block"`
}

type PostExtractionHookConfigurationInvocationConditionConditionOnValue struct {
	// DateValue: string, optional
	DateValue terra.StringValue `hcl:"date_value,attr"`
	// LongValue: number, optional
	LongValue terra.NumberValue `hcl:"long_value,attr"`
	// StringListValue: set of string, optional
	StringListValue terra.SetValue[terra.StringValue] `hcl:"string_list_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
}

type PreExtractionHookConfiguration struct {
	// LambdaArn: string, required
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
	// S3Bucket: string, required
	S3Bucket terra.StringValue `hcl:"s3_bucket,attr" validate:"required"`
	// PreExtractionHookConfigurationInvocationCondition: optional
	InvocationCondition *PreExtractionHookConfigurationInvocationCondition `hcl:"invocation_condition,block"`
}

type PreExtractionHookConfigurationInvocationCondition struct {
	// ConditionDocumentAttributeKey: string, required
	ConditionDocumentAttributeKey terra.StringValue `hcl:"condition_document_attribute_key,attr" validate:"required"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// PreExtractionHookConfigurationInvocationConditionConditionOnValue: optional
	ConditionOnValue *PreExtractionHookConfigurationInvocationConditionConditionOnValue `hcl:"condition_on_value,block"`
}

type PreExtractionHookConfigurationInvocationConditionConditionOnValue struct {
	// DateValue: string, optional
	DateValue terra.StringValue `hcl:"date_value,attr"`
	// LongValue: number, optional
	LongValue terra.NumberValue `hcl:"long_value,attr"`
	// StringListValue: set of string, optional
	StringListValue terra.SetValue[terra.StringValue] `hcl:"string_list_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ConfigurationAttributes struct {
	ref terra.Reference
}

func (c ConfigurationAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c ConfigurationAttributes) InternalWithRef(ref terra.Reference) ConfigurationAttributes {
	return ConfigurationAttributes{ref: ref}
}

func (c ConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ConfigurationAttributes) S3Configuration() terra.ListValue[S3ConfigurationAttributes] {
	return terra.ReferenceList[S3ConfigurationAttributes](c.ref.Append("s3_configuration"))
}

func (c ConfigurationAttributes) WebCrawlerConfiguration() terra.ListValue[WebCrawlerConfigurationAttributes] {
	return terra.ReferenceList[WebCrawlerConfigurationAttributes](c.ref.Append("web_crawler_configuration"))
}

type S3ConfigurationAttributes struct {
	ref terra.Reference
}

func (sc S3ConfigurationAttributes) InternalRef() terra.Reference {
	return sc.ref
}

func (sc S3ConfigurationAttributes) InternalWithRef(ref terra.Reference) S3ConfigurationAttributes {
	return S3ConfigurationAttributes{ref: ref}
}

func (sc S3ConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return sc.ref.InternalTokens()
}

func (sc S3ConfigurationAttributes) BucketName() terra.StringValue {
	return terra.ReferenceString(sc.ref.Append("bucket_name"))
}

func (sc S3ConfigurationAttributes) ExclusionPatterns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sc.ref.Append("exclusion_patterns"))
}

func (sc S3ConfigurationAttributes) InclusionPatterns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sc.ref.Append("inclusion_patterns"))
}

func (sc S3ConfigurationAttributes) InclusionPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sc.ref.Append("inclusion_prefixes"))
}

func (sc S3ConfigurationAttributes) AccessControlListConfiguration() terra.ListValue[AccessControlListConfigurationAttributes] {
	return terra.ReferenceList[AccessControlListConfigurationAttributes](sc.ref.Append("access_control_list_configuration"))
}

func (sc S3ConfigurationAttributes) DocumentsMetadataConfiguration() terra.ListValue[DocumentsMetadataConfigurationAttributes] {
	return terra.ReferenceList[DocumentsMetadataConfigurationAttributes](sc.ref.Append("documents_metadata_configuration"))
}

type AccessControlListConfigurationAttributes struct {
	ref terra.Reference
}

func (aclc AccessControlListConfigurationAttributes) InternalRef() terra.Reference {
	return aclc.ref
}

func (aclc AccessControlListConfigurationAttributes) InternalWithRef(ref terra.Reference) AccessControlListConfigurationAttributes {
	return AccessControlListConfigurationAttributes{ref: ref}
}

func (aclc AccessControlListConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return aclc.ref.InternalTokens()
}

func (aclc AccessControlListConfigurationAttributes) KeyPath() terra.StringValue {
	return terra.ReferenceString(aclc.ref.Append("key_path"))
}

type DocumentsMetadataConfigurationAttributes struct {
	ref terra.Reference
}

func (dmc DocumentsMetadataConfigurationAttributes) InternalRef() terra.Reference {
	return dmc.ref
}

func (dmc DocumentsMetadataConfigurationAttributes) InternalWithRef(ref terra.Reference) DocumentsMetadataConfigurationAttributes {
	return DocumentsMetadataConfigurationAttributes{ref: ref}
}

func (dmc DocumentsMetadataConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return dmc.ref.InternalTokens()
}

func (dmc DocumentsMetadataConfigurationAttributes) S3Prefix() terra.StringValue {
	return terra.ReferenceString(dmc.ref.Append("s3_prefix"))
}

type WebCrawlerConfigurationAttributes struct {
	ref terra.Reference
}

func (wcc WebCrawlerConfigurationAttributes) InternalRef() terra.Reference {
	return wcc.ref
}

func (wcc WebCrawlerConfigurationAttributes) InternalWithRef(ref terra.Reference) WebCrawlerConfigurationAttributes {
	return WebCrawlerConfigurationAttributes{ref: ref}
}

func (wcc WebCrawlerConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return wcc.ref.InternalTokens()
}

func (wcc WebCrawlerConfigurationAttributes) CrawlDepth() terra.NumberValue {
	return terra.ReferenceNumber(wcc.ref.Append("crawl_depth"))
}

func (wcc WebCrawlerConfigurationAttributes) MaxContentSizePerPageInMegaBytes() terra.NumberValue {
	return terra.ReferenceNumber(wcc.ref.Append("max_content_size_per_page_in_mega_bytes"))
}

func (wcc WebCrawlerConfigurationAttributes) MaxLinksPerPage() terra.NumberValue {
	return terra.ReferenceNumber(wcc.ref.Append("max_links_per_page"))
}

func (wcc WebCrawlerConfigurationAttributes) MaxUrlsPerMinuteCrawlRate() terra.NumberValue {
	return terra.ReferenceNumber(wcc.ref.Append("max_urls_per_minute_crawl_rate"))
}

func (wcc WebCrawlerConfigurationAttributes) UrlExclusionPatterns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](wcc.ref.Append("url_exclusion_patterns"))
}

func (wcc WebCrawlerConfigurationAttributes) UrlInclusionPatterns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](wcc.ref.Append("url_inclusion_patterns"))
}

func (wcc WebCrawlerConfigurationAttributes) AuthenticationConfiguration() terra.ListValue[AuthenticationConfigurationAttributes] {
	return terra.ReferenceList[AuthenticationConfigurationAttributes](wcc.ref.Append("authentication_configuration"))
}

func (wcc WebCrawlerConfigurationAttributes) ProxyConfiguration() terra.ListValue[ProxyConfigurationAttributes] {
	return terra.ReferenceList[ProxyConfigurationAttributes](wcc.ref.Append("proxy_configuration"))
}

func (wcc WebCrawlerConfigurationAttributes) Urls() terra.ListValue[UrlsAttributes] {
	return terra.ReferenceList[UrlsAttributes](wcc.ref.Append("urls"))
}

type AuthenticationConfigurationAttributes struct {
	ref terra.Reference
}

func (ac AuthenticationConfigurationAttributes) InternalRef() terra.Reference {
	return ac.ref
}

func (ac AuthenticationConfigurationAttributes) InternalWithRef(ref terra.Reference) AuthenticationConfigurationAttributes {
	return AuthenticationConfigurationAttributes{ref: ref}
}

func (ac AuthenticationConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ac.ref.InternalTokens()
}

func (ac AuthenticationConfigurationAttributes) BasicAuthentication() terra.SetValue[BasicAuthenticationAttributes] {
	return terra.ReferenceSet[BasicAuthenticationAttributes](ac.ref.Append("basic_authentication"))
}

type BasicAuthenticationAttributes struct {
	ref terra.Reference
}

func (ba BasicAuthenticationAttributes) InternalRef() terra.Reference {
	return ba.ref
}

func (ba BasicAuthenticationAttributes) InternalWithRef(ref terra.Reference) BasicAuthenticationAttributes {
	return BasicAuthenticationAttributes{ref: ref}
}

func (ba BasicAuthenticationAttributes) InternalTokens() hclwrite.Tokens {
	return ba.ref.InternalTokens()
}

func (ba BasicAuthenticationAttributes) Credentials() terra.StringValue {
	return terra.ReferenceString(ba.ref.Append("credentials"))
}

func (ba BasicAuthenticationAttributes) Host() terra.StringValue {
	return terra.ReferenceString(ba.ref.Append("host"))
}

func (ba BasicAuthenticationAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(ba.ref.Append("port"))
}

type ProxyConfigurationAttributes struct {
	ref terra.Reference
}

func (pc ProxyConfigurationAttributes) InternalRef() terra.Reference {
	return pc.ref
}

func (pc ProxyConfigurationAttributes) InternalWithRef(ref terra.Reference) ProxyConfigurationAttributes {
	return ProxyConfigurationAttributes{ref: ref}
}

func (pc ProxyConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return pc.ref.InternalTokens()
}

func (pc ProxyConfigurationAttributes) Credentials() terra.StringValue {
	return terra.ReferenceString(pc.ref.Append("credentials"))
}

func (pc ProxyConfigurationAttributes) Host() terra.StringValue {
	return terra.ReferenceString(pc.ref.Append("host"))
}

func (pc ProxyConfigurationAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(pc.ref.Append("port"))
}

type UrlsAttributes struct {
	ref terra.Reference
}

func (u UrlsAttributes) InternalRef() terra.Reference {
	return u.ref
}

func (u UrlsAttributes) InternalWithRef(ref terra.Reference) UrlsAttributes {
	return UrlsAttributes{ref: ref}
}

func (u UrlsAttributes) InternalTokens() hclwrite.Tokens {
	return u.ref.InternalTokens()
}

func (u UrlsAttributes) SeedUrlConfiguration() terra.ListValue[SeedUrlConfigurationAttributes] {
	return terra.ReferenceList[SeedUrlConfigurationAttributes](u.ref.Append("seed_url_configuration"))
}

func (u UrlsAttributes) SiteMapsConfiguration() terra.ListValue[SiteMapsConfigurationAttributes] {
	return terra.ReferenceList[SiteMapsConfigurationAttributes](u.ref.Append("site_maps_configuration"))
}

type SeedUrlConfigurationAttributes struct {
	ref terra.Reference
}

func (suc SeedUrlConfigurationAttributes) InternalRef() terra.Reference {
	return suc.ref
}

func (suc SeedUrlConfigurationAttributes) InternalWithRef(ref terra.Reference) SeedUrlConfigurationAttributes {
	return SeedUrlConfigurationAttributes{ref: ref}
}

func (suc SeedUrlConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return suc.ref.InternalTokens()
}

func (suc SeedUrlConfigurationAttributes) SeedUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](suc.ref.Append("seed_urls"))
}

func (suc SeedUrlConfigurationAttributes) WebCrawlerMode() terra.StringValue {
	return terra.ReferenceString(suc.ref.Append("web_crawler_mode"))
}

type SiteMapsConfigurationAttributes struct {
	ref terra.Reference
}

func (smc SiteMapsConfigurationAttributes) InternalRef() terra.Reference {
	return smc.ref
}

func (smc SiteMapsConfigurationAttributes) InternalWithRef(ref terra.Reference) SiteMapsConfigurationAttributes {
	return SiteMapsConfigurationAttributes{ref: ref}
}

func (smc SiteMapsConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return smc.ref.InternalTokens()
}

func (smc SiteMapsConfigurationAttributes) SiteMaps() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](smc.ref.Append("site_maps"))
}

type CustomDocumentEnrichmentConfigurationAttributes struct {
	ref terra.Reference
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) InternalRef() terra.Reference {
	return cdec.ref
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) InternalWithRef(ref terra.Reference) CustomDocumentEnrichmentConfigurationAttributes {
	return CustomDocumentEnrichmentConfigurationAttributes{ref: ref}
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return cdec.ref.InternalTokens()
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceString(cdec.ref.Append("role_arn"))
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) InlineConfigurations() terra.SetValue[InlineConfigurationsAttributes] {
	return terra.ReferenceSet[InlineConfigurationsAttributes](cdec.ref.Append("inline_configurations"))
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) PostExtractionHookConfiguration() terra.ListValue[PostExtractionHookConfigurationAttributes] {
	return terra.ReferenceList[PostExtractionHookConfigurationAttributes](cdec.ref.Append("post_extraction_hook_configuration"))
}

func (cdec CustomDocumentEnrichmentConfigurationAttributes) PreExtractionHookConfiguration() terra.ListValue[PreExtractionHookConfigurationAttributes] {
	return terra.ReferenceList[PreExtractionHookConfigurationAttributes](cdec.ref.Append("pre_extraction_hook_configuration"))
}

type InlineConfigurationsAttributes struct {
	ref terra.Reference
}

func (ic InlineConfigurationsAttributes) InternalRef() terra.Reference {
	return ic.ref
}

func (ic InlineConfigurationsAttributes) InternalWithRef(ref terra.Reference) InlineConfigurationsAttributes {
	return InlineConfigurationsAttributes{ref: ref}
}

func (ic InlineConfigurationsAttributes) InternalTokens() hclwrite.Tokens {
	return ic.ref.InternalTokens()
}

func (ic InlineConfigurationsAttributes) DocumentContentDeletion() terra.BoolValue {
	return terra.ReferenceBool(ic.ref.Append("document_content_deletion"))
}

func (ic InlineConfigurationsAttributes) Condition() terra.ListValue[ConditionAttributes] {
	return terra.ReferenceList[ConditionAttributes](ic.ref.Append("condition"))
}

func (ic InlineConfigurationsAttributes) Target() terra.ListValue[TargetAttributes] {
	return terra.ReferenceList[TargetAttributes](ic.ref.Append("target"))
}

type ConditionAttributes struct {
	ref terra.Reference
}

func (c ConditionAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c ConditionAttributes) InternalWithRef(ref terra.Reference) ConditionAttributes {
	return ConditionAttributes{ref: ref}
}

func (c ConditionAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ConditionAttributes) ConditionDocumentAttributeKey() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("condition_document_attribute_key"))
}

func (c ConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("operator"))
}

func (c ConditionAttributes) ConditionOnValue() terra.ListValue[ConditionConditionOnValueAttributes] {
	return terra.ReferenceList[ConditionConditionOnValueAttributes](c.ref.Append("condition_on_value"))
}

type ConditionConditionOnValueAttributes struct {
	ref terra.Reference
}

func (cov ConditionConditionOnValueAttributes) InternalRef() terra.Reference {
	return cov.ref
}

func (cov ConditionConditionOnValueAttributes) InternalWithRef(ref terra.Reference) ConditionConditionOnValueAttributes {
	return ConditionConditionOnValueAttributes{ref: ref}
}

func (cov ConditionConditionOnValueAttributes) InternalTokens() hclwrite.Tokens {
	return cov.ref.InternalTokens()
}

func (cov ConditionConditionOnValueAttributes) DateValue() terra.StringValue {
	return terra.ReferenceString(cov.ref.Append("date_value"))
}

func (cov ConditionConditionOnValueAttributes) LongValue() terra.NumberValue {
	return terra.ReferenceNumber(cov.ref.Append("long_value"))
}

func (cov ConditionConditionOnValueAttributes) StringListValue() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cov.ref.Append("string_list_value"))
}

func (cov ConditionConditionOnValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceString(cov.ref.Append("string_value"))
}

type TargetAttributes struct {
	ref terra.Reference
}

func (t TargetAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TargetAttributes) InternalWithRef(ref terra.Reference) TargetAttributes {
	return TargetAttributes{ref: ref}
}

func (t TargetAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TargetAttributes) TargetDocumentAttributeKey() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("target_document_attribute_key"))
}

func (t TargetAttributes) TargetDocumentAttributeValueDeletion() terra.BoolValue {
	return terra.ReferenceBool(t.ref.Append("target_document_attribute_value_deletion"))
}

func (t TargetAttributes) TargetDocumentAttributeValue() terra.ListValue[TargetDocumentAttributeValueAttributes] {
	return terra.ReferenceList[TargetDocumentAttributeValueAttributes](t.ref.Append("target_document_attribute_value"))
}

type TargetDocumentAttributeValueAttributes struct {
	ref terra.Reference
}

func (tdav TargetDocumentAttributeValueAttributes) InternalRef() terra.Reference {
	return tdav.ref
}

func (tdav TargetDocumentAttributeValueAttributes) InternalWithRef(ref terra.Reference) TargetDocumentAttributeValueAttributes {
	return TargetDocumentAttributeValueAttributes{ref: ref}
}

func (tdav TargetDocumentAttributeValueAttributes) InternalTokens() hclwrite.Tokens {
	return tdav.ref.InternalTokens()
}

func (tdav TargetDocumentAttributeValueAttributes) DateValue() terra.StringValue {
	return terra.ReferenceString(tdav.ref.Append("date_value"))
}

func (tdav TargetDocumentAttributeValueAttributes) LongValue() terra.NumberValue {
	return terra.ReferenceNumber(tdav.ref.Append("long_value"))
}

func (tdav TargetDocumentAttributeValueAttributes) StringListValue() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](tdav.ref.Append("string_list_value"))
}

func (tdav TargetDocumentAttributeValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceString(tdav.ref.Append("string_value"))
}

type PostExtractionHookConfigurationAttributes struct {
	ref terra.Reference
}

func (pehc PostExtractionHookConfigurationAttributes) InternalRef() terra.Reference {
	return pehc.ref
}

func (pehc PostExtractionHookConfigurationAttributes) InternalWithRef(ref terra.Reference) PostExtractionHookConfigurationAttributes {
	return PostExtractionHookConfigurationAttributes{ref: ref}
}

func (pehc PostExtractionHookConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return pehc.ref.InternalTokens()
}

func (pehc PostExtractionHookConfigurationAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceString(pehc.ref.Append("lambda_arn"))
}

func (pehc PostExtractionHookConfigurationAttributes) S3Bucket() terra.StringValue {
	return terra.ReferenceString(pehc.ref.Append("s3_bucket"))
}

func (pehc PostExtractionHookConfigurationAttributes) InvocationCondition() terra.ListValue[PostExtractionHookConfigurationInvocationConditionAttributes] {
	return terra.ReferenceList[PostExtractionHookConfigurationInvocationConditionAttributes](pehc.ref.Append("invocation_condition"))
}

type PostExtractionHookConfigurationInvocationConditionAttributes struct {
	ref terra.Reference
}

func (ic PostExtractionHookConfigurationInvocationConditionAttributes) InternalRef() terra.Reference {
	return ic.ref
}

func (ic PostExtractionHookConfigurationInvocationConditionAttributes) InternalWithRef(ref terra.Reference) PostExtractionHookConfigurationInvocationConditionAttributes {
	return PostExtractionHookConfigurationInvocationConditionAttributes{ref: ref}
}

func (ic PostExtractionHookConfigurationInvocationConditionAttributes) InternalTokens() hclwrite.Tokens {
	return ic.ref.InternalTokens()
}

func (ic PostExtractionHookConfigurationInvocationConditionAttributes) ConditionDocumentAttributeKey() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("condition_document_attribute_key"))
}

func (ic PostExtractionHookConfigurationInvocationConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("operator"))
}

func (ic PostExtractionHookConfigurationInvocationConditionAttributes) ConditionOnValue() terra.ListValue[PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes] {
	return terra.ReferenceList[PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes](ic.ref.Append("condition_on_value"))
}

type PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes struct {
	ref terra.Reference
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) InternalRef() terra.Reference {
	return cov.ref
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) InternalWithRef(ref terra.Reference) PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes {
	return PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes{ref: ref}
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) InternalTokens() hclwrite.Tokens {
	return cov.ref.InternalTokens()
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) DateValue() terra.StringValue {
	return terra.ReferenceString(cov.ref.Append("date_value"))
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) LongValue() terra.NumberValue {
	return terra.ReferenceNumber(cov.ref.Append("long_value"))
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) StringListValue() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cov.ref.Append("string_list_value"))
}

func (cov PostExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceString(cov.ref.Append("string_value"))
}

type PreExtractionHookConfigurationAttributes struct {
	ref terra.Reference
}

func (pehc PreExtractionHookConfigurationAttributes) InternalRef() terra.Reference {
	return pehc.ref
}

func (pehc PreExtractionHookConfigurationAttributes) InternalWithRef(ref terra.Reference) PreExtractionHookConfigurationAttributes {
	return PreExtractionHookConfigurationAttributes{ref: ref}
}

func (pehc PreExtractionHookConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return pehc.ref.InternalTokens()
}

func (pehc PreExtractionHookConfigurationAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceString(pehc.ref.Append("lambda_arn"))
}

func (pehc PreExtractionHookConfigurationAttributes) S3Bucket() terra.StringValue {
	return terra.ReferenceString(pehc.ref.Append("s3_bucket"))
}

func (pehc PreExtractionHookConfigurationAttributes) InvocationCondition() terra.ListValue[PreExtractionHookConfigurationInvocationConditionAttributes] {
	return terra.ReferenceList[PreExtractionHookConfigurationInvocationConditionAttributes](pehc.ref.Append("invocation_condition"))
}

type PreExtractionHookConfigurationInvocationConditionAttributes struct {
	ref terra.Reference
}

func (ic PreExtractionHookConfigurationInvocationConditionAttributes) InternalRef() terra.Reference {
	return ic.ref
}

func (ic PreExtractionHookConfigurationInvocationConditionAttributes) InternalWithRef(ref terra.Reference) PreExtractionHookConfigurationInvocationConditionAttributes {
	return PreExtractionHookConfigurationInvocationConditionAttributes{ref: ref}
}

func (ic PreExtractionHookConfigurationInvocationConditionAttributes) InternalTokens() hclwrite.Tokens {
	return ic.ref.InternalTokens()
}

func (ic PreExtractionHookConfigurationInvocationConditionAttributes) ConditionDocumentAttributeKey() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("condition_document_attribute_key"))
}

func (ic PreExtractionHookConfigurationInvocationConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("operator"))
}

func (ic PreExtractionHookConfigurationInvocationConditionAttributes) ConditionOnValue() terra.ListValue[PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes] {
	return terra.ReferenceList[PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes](ic.ref.Append("condition_on_value"))
}

type PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes struct {
	ref terra.Reference
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) InternalRef() terra.Reference {
	return cov.ref
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) InternalWithRef(ref terra.Reference) PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes {
	return PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes{ref: ref}
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) InternalTokens() hclwrite.Tokens {
	return cov.ref.InternalTokens()
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) DateValue() terra.StringValue {
	return terra.ReferenceString(cov.ref.Append("date_value"))
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) LongValue() terra.NumberValue {
	return terra.ReferenceNumber(cov.ref.Append("long_value"))
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) StringListValue() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cov.ref.Append("string_list_value"))
}

func (cov PreExtractionHookConfigurationInvocationConditionConditionOnValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceString(cov.ref.Append("string_value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type ConfigurationState struct {
	S3Configuration         []S3ConfigurationState         `json:"s3_configuration"`
	WebCrawlerConfiguration []WebCrawlerConfigurationState `json:"web_crawler_configuration"`
}

type S3ConfigurationState struct {
	BucketName                     string                                `json:"bucket_name"`
	ExclusionPatterns              []string                              `json:"exclusion_patterns"`
	InclusionPatterns              []string                              `json:"inclusion_patterns"`
	InclusionPrefixes              []string                              `json:"inclusion_prefixes"`
	AccessControlListConfiguration []AccessControlListConfigurationState `json:"access_control_list_configuration"`
	DocumentsMetadataConfiguration []DocumentsMetadataConfigurationState `json:"documents_metadata_configuration"`
}

type AccessControlListConfigurationState struct {
	KeyPath string `json:"key_path"`
}

type DocumentsMetadataConfigurationState struct {
	S3Prefix string `json:"s3_prefix"`
}

type WebCrawlerConfigurationState struct {
	CrawlDepth                       float64                            `json:"crawl_depth"`
	MaxContentSizePerPageInMegaBytes float64                            `json:"max_content_size_per_page_in_mega_bytes"`
	MaxLinksPerPage                  float64                            `json:"max_links_per_page"`
	MaxUrlsPerMinuteCrawlRate        float64                            `json:"max_urls_per_minute_crawl_rate"`
	UrlExclusionPatterns             []string                           `json:"url_exclusion_patterns"`
	UrlInclusionPatterns             []string                           `json:"url_inclusion_patterns"`
	AuthenticationConfiguration      []AuthenticationConfigurationState `json:"authentication_configuration"`
	ProxyConfiguration               []ProxyConfigurationState          `json:"proxy_configuration"`
	Urls                             []UrlsState                        `json:"urls"`
}

type AuthenticationConfigurationState struct {
	BasicAuthentication []BasicAuthenticationState `json:"basic_authentication"`
}

type BasicAuthenticationState struct {
	Credentials string  `json:"credentials"`
	Host        string  `json:"host"`
	Port        float64 `json:"port"`
}

type ProxyConfigurationState struct {
	Credentials string  `json:"credentials"`
	Host        string  `json:"host"`
	Port        float64 `json:"port"`
}

type UrlsState struct {
	SeedUrlConfiguration  []SeedUrlConfigurationState  `json:"seed_url_configuration"`
	SiteMapsConfiguration []SiteMapsConfigurationState `json:"site_maps_configuration"`
}

type SeedUrlConfigurationState struct {
	SeedUrls       []string `json:"seed_urls"`
	WebCrawlerMode string   `json:"web_crawler_mode"`
}

type SiteMapsConfigurationState struct {
	SiteMaps []string `json:"site_maps"`
}

type CustomDocumentEnrichmentConfigurationState struct {
	RoleArn                         string                                 `json:"role_arn"`
	InlineConfigurations            []InlineConfigurationsState            `json:"inline_configurations"`
	PostExtractionHookConfiguration []PostExtractionHookConfigurationState `json:"post_extraction_hook_configuration"`
	PreExtractionHookConfiguration  []PreExtractionHookConfigurationState  `json:"pre_extraction_hook_configuration"`
}

type InlineConfigurationsState struct {
	DocumentContentDeletion bool             `json:"document_content_deletion"`
	Condition               []ConditionState `json:"condition"`
	Target                  []TargetState    `json:"target"`
}

type ConditionState struct {
	ConditionDocumentAttributeKey string                           `json:"condition_document_attribute_key"`
	Operator                      string                           `json:"operator"`
	ConditionOnValue              []ConditionConditionOnValueState `json:"condition_on_value"`
}

type ConditionConditionOnValueState struct {
	DateValue       string   `json:"date_value"`
	LongValue       float64  `json:"long_value"`
	StringListValue []string `json:"string_list_value"`
	StringValue     string   `json:"string_value"`
}

type TargetState struct {
	TargetDocumentAttributeKey           string                              `json:"target_document_attribute_key"`
	TargetDocumentAttributeValueDeletion bool                                `json:"target_document_attribute_value_deletion"`
	TargetDocumentAttributeValue         []TargetDocumentAttributeValueState `json:"target_document_attribute_value"`
}

type TargetDocumentAttributeValueState struct {
	DateValue       string   `json:"date_value"`
	LongValue       float64  `json:"long_value"`
	StringListValue []string `json:"string_list_value"`
	StringValue     string   `json:"string_value"`
}

type PostExtractionHookConfigurationState struct {
	LambdaArn           string                                                    `json:"lambda_arn"`
	S3Bucket            string                                                    `json:"s3_bucket"`
	InvocationCondition []PostExtractionHookConfigurationInvocationConditionState `json:"invocation_condition"`
}

type PostExtractionHookConfigurationInvocationConditionState struct {
	ConditionDocumentAttributeKey string                                                                    `json:"condition_document_attribute_key"`
	Operator                      string                                                                    `json:"operator"`
	ConditionOnValue              []PostExtractionHookConfigurationInvocationConditionConditionOnValueState `json:"condition_on_value"`
}

type PostExtractionHookConfigurationInvocationConditionConditionOnValueState struct {
	DateValue       string   `json:"date_value"`
	LongValue       float64  `json:"long_value"`
	StringListValue []string `json:"string_list_value"`
	StringValue     string   `json:"string_value"`
}

type PreExtractionHookConfigurationState struct {
	LambdaArn           string                                                   `json:"lambda_arn"`
	S3Bucket            string                                                   `json:"s3_bucket"`
	InvocationCondition []PreExtractionHookConfigurationInvocationConditionState `json:"invocation_condition"`
}

type PreExtractionHookConfigurationInvocationConditionState struct {
	ConditionDocumentAttributeKey string                                                                   `json:"condition_document_attribute_key"`
	Operator                      string                                                                   `json:"operator"`
	ConditionOnValue              []PreExtractionHookConfigurationInvocationConditionConditionOnValueState `json:"condition_on_value"`
}

type PreExtractionHookConfigurationInvocationConditionConditionOnValueState struct {
	DateValue       string   `json:"date_value"`
	LongValue       float64  `json:"long_value"`
	StringListValue []string `json:"string_list_value"`
	StringValue     string   `json:"string_value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
