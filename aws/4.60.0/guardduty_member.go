// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	"encoding/json"
	"fmt"
	guarddutymember "github.com/golingon/terraproviders/aws/4.60.0/guarddutymember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewGuarddutyMember(name string, args GuarddutyMemberArgs) *GuarddutyMember {
	return &GuarddutyMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GuarddutyMember)(nil)

type GuarddutyMember struct {
	Name  string
	Args  GuarddutyMemberArgs
	state *guarddutyMemberState
}

func (gm *GuarddutyMember) Type() string {
	return "aws_guardduty_member"
}

func (gm *GuarddutyMember) LocalName() string {
	return gm.Name
}

func (gm *GuarddutyMember) Configuration() interface{} {
	return gm.Args
}

func (gm *GuarddutyMember) Attributes() guarddutyMemberAttributes {
	return guarddutyMemberAttributes{ref: terra.ReferenceResource(gm)}
}

func (gm *GuarddutyMember) ImportState(av io.Reader) error {
	gm.state = &guarddutyMemberState{}
	if err := json.NewDecoder(av).Decode(gm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gm.Type(), gm.LocalName(), err)
	}
	return nil
}

func (gm *GuarddutyMember) State() (*guarddutyMemberState, bool) {
	return gm.state, gm.state != nil
}

func (gm *GuarddutyMember) StateMust() *guarddutyMemberState {
	if gm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gm.Type(), gm.LocalName()))
	}
	return gm.state
}

func (gm *GuarddutyMember) DependOn() terra.Reference {
	return terra.ReferenceResource(gm)
}

type GuarddutyMemberArgs struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// DetectorId: string, required
	DetectorId terra.StringValue `hcl:"detector_id,attr" validate:"required"`
	// DisableEmailNotification: bool, optional
	DisableEmailNotification terra.BoolValue `hcl:"disable_email_notification,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InvitationMessage: string, optional
	InvitationMessage terra.StringValue `hcl:"invitation_message,attr"`
	// Invite: bool, optional
	Invite terra.BoolValue `hcl:"invite,attr"`
	// Timeouts: optional
	Timeouts *guarddutymember.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that GuarddutyMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type guarddutyMemberAttributes struct {
	ref terra.Reference
}

func (gm guarddutyMemberAttributes) AccountId() terra.StringValue {
	return terra.ReferenceString(gm.ref.Append("account_id"))
}

func (gm guarddutyMemberAttributes) DetectorId() terra.StringValue {
	return terra.ReferenceString(gm.ref.Append("detector_id"))
}

func (gm guarddutyMemberAttributes) DisableEmailNotification() terra.BoolValue {
	return terra.ReferenceBool(gm.ref.Append("disable_email_notification"))
}

func (gm guarddutyMemberAttributes) Email() terra.StringValue {
	return terra.ReferenceString(gm.ref.Append("email"))
}

func (gm guarddutyMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(gm.ref.Append("id"))
}

func (gm guarddutyMemberAttributes) InvitationMessage() terra.StringValue {
	return terra.ReferenceString(gm.ref.Append("invitation_message"))
}

func (gm guarddutyMemberAttributes) Invite() terra.BoolValue {
	return terra.ReferenceBool(gm.ref.Append("invite"))
}

func (gm guarddutyMemberAttributes) RelationshipStatus() terra.StringValue {
	return terra.ReferenceString(gm.ref.Append("relationship_status"))
}

func (gm guarddutyMemberAttributes) Timeouts() guarddutymember.TimeoutsAttributes {
	return terra.ReferenceSingle[guarddutymember.TimeoutsAttributes](gm.ref.Append("timeouts"))
}

type guarddutyMemberState struct {
	AccountId                string                         `json:"account_id"`
	DetectorId               string                         `json:"detector_id"`
	DisableEmailNotification bool                           `json:"disable_email_notification"`
	Email                    string                         `json:"email"`
	Id                       string                         `json:"id"`
	InvitationMessage        string                         `json:"invitation_message"`
	Invite                   bool                           `json:"invite"`
	RelationshipStatus       string                         `json:"relationship_status"`
	Timeouts                 *guarddutymember.TimeoutsState `json:"timeouts"`
}
