// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataglobalacceleratoraccelerator

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Attributes struct{}

type IpSets struct{}

type AttributesAttributes struct {
	ref terra.Reference
}

func (a AttributesAttributes) InternalRef() terra.Reference {
	return a.ref
}

func (a AttributesAttributes) InternalWithRef(ref terra.Reference) AttributesAttributes {
	return AttributesAttributes{ref: ref}
}

func (a AttributesAttributes) InternalTokens() hclwrite.Tokens {
	return a.ref.InternalTokens()
}

func (a AttributesAttributes) FlowLogsEnabled() terra.BoolValue {
	return terra.ReferenceBool(a.ref.Append("flow_logs_enabled"))
}

func (a AttributesAttributes) FlowLogsS3Bucket() terra.StringValue {
	return terra.ReferenceString(a.ref.Append("flow_logs_s3_bucket"))
}

func (a AttributesAttributes) FlowLogsS3Prefix() terra.StringValue {
	return terra.ReferenceString(a.ref.Append("flow_logs_s3_prefix"))
}

type IpSetsAttributes struct {
	ref terra.Reference
}

func (is IpSetsAttributes) InternalRef() terra.Reference {
	return is.ref
}

func (is IpSetsAttributes) InternalWithRef(ref terra.Reference) IpSetsAttributes {
	return IpSetsAttributes{ref: ref}
}

func (is IpSetsAttributes) InternalTokens() hclwrite.Tokens {
	return is.ref.InternalTokens()
}

func (is IpSetsAttributes) IpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](is.ref.Append("ip_addresses"))
}

func (is IpSetsAttributes) IpFamily() terra.StringValue {
	return terra.ReferenceString(is.ref.Append("ip_family"))
}

type AttributesState struct {
	FlowLogsEnabled  bool   `json:"flow_logs_enabled"`
	FlowLogsS3Bucket string `json:"flow_logs_s3_bucket"`
	FlowLogsS3Prefix string `json:"flow_logs_s3_prefix"`
}

type IpSetsState struct {
	IpAddresses []string `json:"ip_addresses"`
	IpFamily    string   `json:"ip_family"`
}
