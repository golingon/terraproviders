// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package aws

import (
	datacustomergateway "github.com/golingon/terraproviders/aws/4.60.0/datacustomergateway"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCustomerGateway(name string, args DataCustomerGatewayArgs) *DataCustomerGateway {
	return &DataCustomerGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCustomerGateway)(nil)

type DataCustomerGateway struct {
	Name string
	Args DataCustomerGatewayArgs
}

func (cg *DataCustomerGateway) DataSource() string {
	return "aws_customer_gateway"
}

func (cg *DataCustomerGateway) LocalName() string {
	return cg.Name
}

func (cg *DataCustomerGateway) Configuration() interface{} {
	return cg.Args
}

func (cg *DataCustomerGateway) Attributes() dataCustomerGatewayAttributes {
	return dataCustomerGatewayAttributes{ref: terra.ReferenceDataResource(cg)}
}

type DataCustomerGatewayArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter: min=0
	Filter []datacustomergateway.Filter `hcl:"filter,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datacustomergateway.Timeouts `hcl:"timeouts,block"`
}
type dataCustomerGatewayAttributes struct {
	ref terra.Reference
}

func (cg dataCustomerGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceString(cg.ref.Append("arn"))
}

func (cg dataCustomerGatewayAttributes) BgpAsn() terra.NumberValue {
	return terra.ReferenceNumber(cg.ref.Append("bgp_asn"))
}

func (cg dataCustomerGatewayAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceString(cg.ref.Append("certificate_arn"))
}

func (cg dataCustomerGatewayAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceString(cg.ref.Append("device_name"))
}

func (cg dataCustomerGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cg.ref.Append("id"))
}

func (cg dataCustomerGatewayAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceString(cg.ref.Append("ip_address"))
}

func (cg dataCustomerGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cg.ref.Append("tags"))
}

func (cg dataCustomerGatewayAttributes) Type() terra.StringValue {
	return terra.ReferenceString(cg.ref.Append("type"))
}

func (cg dataCustomerGatewayAttributes) Filter() terra.SetValue[datacustomergateway.FilterAttributes] {
	return terra.ReferenceSet[datacustomergateway.FilterAttributes](cg.ref.Append("filter"))
}

func (cg dataCustomerGatewayAttributes) Timeouts() datacustomergateway.TimeoutsAttributes {
	return terra.ReferenceSingle[datacustomergateway.TimeoutsAttributes](cg.ref.Append("timeouts"))
}
