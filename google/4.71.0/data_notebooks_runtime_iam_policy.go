// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataNotebooksRuntimeIamPolicy creates a new instance of [DataNotebooksRuntimeIamPolicy].
func NewDataNotebooksRuntimeIamPolicy(name string, args DataNotebooksRuntimeIamPolicyArgs) *DataNotebooksRuntimeIamPolicy {
	return &DataNotebooksRuntimeIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNotebooksRuntimeIamPolicy)(nil)

// DataNotebooksRuntimeIamPolicy represents the Terraform data resource google_notebooks_runtime_iam_policy.
type DataNotebooksRuntimeIamPolicy struct {
	Name string
	Args DataNotebooksRuntimeIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataNotebooksRuntimeIamPolicy].
func (nrip *DataNotebooksRuntimeIamPolicy) DataSource() string {
	return "google_notebooks_runtime_iam_policy"
}

// LocalName returns the local name for [DataNotebooksRuntimeIamPolicy].
func (nrip *DataNotebooksRuntimeIamPolicy) LocalName() string {
	return nrip.Name
}

// Configuration returns the configuration (args) for [DataNotebooksRuntimeIamPolicy].
func (nrip *DataNotebooksRuntimeIamPolicy) Configuration() interface{} {
	return nrip.Args
}

// Attributes returns the attributes for [DataNotebooksRuntimeIamPolicy].
func (nrip *DataNotebooksRuntimeIamPolicy) Attributes() dataNotebooksRuntimeIamPolicyAttributes {
	return dataNotebooksRuntimeIamPolicyAttributes{ref: terra.ReferenceDataResource(nrip)}
}

// DataNotebooksRuntimeIamPolicyArgs contains the configurations for google_notebooks_runtime_iam_policy.
type DataNotebooksRuntimeIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// RuntimeName: string, required
	RuntimeName terra.StringValue `hcl:"runtime_name,attr" validate:"required"`
}
type dataNotebooksRuntimeIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_notebooks_runtime_iam_policy.
func (nrip dataNotebooksRuntimeIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(nrip.ref.Append("etag"))
}

// Id returns a reference to field id of google_notebooks_runtime_iam_policy.
func (nrip dataNotebooksRuntimeIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nrip.ref.Append("id"))
}

// Location returns a reference to field location of google_notebooks_runtime_iam_policy.
func (nrip dataNotebooksRuntimeIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(nrip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_notebooks_runtime_iam_policy.
func (nrip dataNotebooksRuntimeIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(nrip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_notebooks_runtime_iam_policy.
func (nrip dataNotebooksRuntimeIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(nrip.ref.Append("project"))
}

// RuntimeName returns a reference to field runtime_name of google_notebooks_runtime_iam_policy.
func (nrip dataNotebooksRuntimeIamPolicyAttributes) RuntimeName() terra.StringValue {
	return terra.ReferenceAsString(nrip.ref.Append("runtime_name"))
}
