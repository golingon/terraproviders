// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIapWebTypeAppEngineIamPolicy creates a new instance of [IapWebTypeAppEngineIamPolicy].
func NewIapWebTypeAppEngineIamPolicy(name string, args IapWebTypeAppEngineIamPolicyArgs) *IapWebTypeAppEngineIamPolicy {
	return &IapWebTypeAppEngineIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebTypeAppEngineIamPolicy)(nil)

// IapWebTypeAppEngineIamPolicy represents the Terraform resource google_iap_web_type_app_engine_iam_policy.
type IapWebTypeAppEngineIamPolicy struct {
	Name      string
	Args      IapWebTypeAppEngineIamPolicyArgs
	state     *iapWebTypeAppEngineIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IapWebTypeAppEngineIamPolicy].
func (iwtaeip *IapWebTypeAppEngineIamPolicy) Type() string {
	return "google_iap_web_type_app_engine_iam_policy"
}

// LocalName returns the local name for [IapWebTypeAppEngineIamPolicy].
func (iwtaeip *IapWebTypeAppEngineIamPolicy) LocalName() string {
	return iwtaeip.Name
}

// Configuration returns the configuration (args) for [IapWebTypeAppEngineIamPolicy].
func (iwtaeip *IapWebTypeAppEngineIamPolicy) Configuration() interface{} {
	return iwtaeip.Args
}

// DependOn is used for other resources to depend on [IapWebTypeAppEngineIamPolicy].
func (iwtaeip *IapWebTypeAppEngineIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(iwtaeip)
}

// Dependencies returns the list of resources [IapWebTypeAppEngineIamPolicy] depends_on.
func (iwtaeip *IapWebTypeAppEngineIamPolicy) Dependencies() terra.Dependencies {
	return iwtaeip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IapWebTypeAppEngineIamPolicy].
func (iwtaeip *IapWebTypeAppEngineIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return iwtaeip.Lifecycle
}

// Attributes returns the attributes for [IapWebTypeAppEngineIamPolicy].
func (iwtaeip *IapWebTypeAppEngineIamPolicy) Attributes() iapWebTypeAppEngineIamPolicyAttributes {
	return iapWebTypeAppEngineIamPolicyAttributes{ref: terra.ReferenceResource(iwtaeip)}
}

// ImportState imports the given attribute values into [IapWebTypeAppEngineIamPolicy]'s state.
func (iwtaeip *IapWebTypeAppEngineIamPolicy) ImportState(av io.Reader) error {
	iwtaeip.state = &iapWebTypeAppEngineIamPolicyState{}
	if err := json.NewDecoder(av).Decode(iwtaeip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwtaeip.Type(), iwtaeip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IapWebTypeAppEngineIamPolicy] has state.
func (iwtaeip *IapWebTypeAppEngineIamPolicy) State() (*iapWebTypeAppEngineIamPolicyState, bool) {
	return iwtaeip.state, iwtaeip.state != nil
}

// StateMust returns the state for [IapWebTypeAppEngineIamPolicy]. Panics if the state is nil.
func (iwtaeip *IapWebTypeAppEngineIamPolicy) StateMust() *iapWebTypeAppEngineIamPolicyState {
	if iwtaeip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwtaeip.Type(), iwtaeip.LocalName()))
	}
	return iwtaeip.state
}

// IapWebTypeAppEngineIamPolicyArgs contains the configurations for google_iap_web_type_app_engine_iam_policy.
type IapWebTypeAppEngineIamPolicyArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type iapWebTypeAppEngineIamPolicyAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of google_iap_web_type_app_engine_iam_policy.
func (iwtaeip iapWebTypeAppEngineIamPolicyAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(iwtaeip.ref.Append("app_id"))
}

// Etag returns a reference to field etag of google_iap_web_type_app_engine_iam_policy.
func (iwtaeip iapWebTypeAppEngineIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(iwtaeip.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_web_type_app_engine_iam_policy.
func (iwtaeip iapWebTypeAppEngineIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iwtaeip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_iap_web_type_app_engine_iam_policy.
func (iwtaeip iapWebTypeAppEngineIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(iwtaeip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_iap_web_type_app_engine_iam_policy.
func (iwtaeip iapWebTypeAppEngineIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(iwtaeip.ref.Append("project"))
}

type iapWebTypeAppEngineIamPolicyState struct {
	AppId      string `json:"app_id"`
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
