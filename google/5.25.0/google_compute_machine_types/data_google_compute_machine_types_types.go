// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_machine_types

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataMachineTypesAttributes struct {
	ref terra.Reference
}

func (mt DataMachineTypesAttributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt DataMachineTypesAttributes) InternalWithRef(ref terra.Reference) DataMachineTypesAttributes {
	return DataMachineTypesAttributes{ref: ref}
}

func (mt DataMachineTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt DataMachineTypesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("description"))
}

func (mt DataMachineTypesAttributes) GuestCpus() terra.NumberValue {
	return terra.ReferenceAsNumber(mt.ref.Append("guest_cpus"))
}

func (mt DataMachineTypesAttributes) IsSharedCpus() terra.BoolValue {
	return terra.ReferenceAsBool(mt.ref.Append("is_shared_cpus"))
}

func (mt DataMachineTypesAttributes) MaximumPersistentDisks() terra.NumberValue {
	return terra.ReferenceAsNumber(mt.ref.Append("maximum_persistent_disks"))
}

func (mt DataMachineTypesAttributes) MaximumPersistentDisksSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(mt.ref.Append("maximum_persistent_disks_size_gb"))
}

func (mt DataMachineTypesAttributes) MemoryMb() terra.NumberValue {
	return terra.ReferenceAsNumber(mt.ref.Append("memory_mb"))
}

func (mt DataMachineTypesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("name"))
}

func (mt DataMachineTypesAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("self_link"))
}

func (mt DataMachineTypesAttributes) Accelerators() terra.ListValue[DataMachineTypesAcceleratorsAttributes] {
	return terra.ReferenceAsList[DataMachineTypesAcceleratorsAttributes](mt.ref.Append("accelerators"))
}

func (mt DataMachineTypesAttributes) Deprecated() terra.SetValue[DataMachineTypesDeprecatedAttributes] {
	return terra.ReferenceAsSet[DataMachineTypesDeprecatedAttributes](mt.ref.Append("deprecated"))
}

type DataMachineTypesAcceleratorsAttributes struct {
	ref terra.Reference
}

func (a DataMachineTypesAcceleratorsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataMachineTypesAcceleratorsAttributes) InternalWithRef(ref terra.Reference) DataMachineTypesAcceleratorsAttributes {
	return DataMachineTypesAcceleratorsAttributes{ref: ref}
}

func (a DataMachineTypesAcceleratorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataMachineTypesAcceleratorsAttributes) GuestAcceleratorCount() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("guest_accelerator_count"))
}

func (a DataMachineTypesAcceleratorsAttributes) GuestAcceleratorType() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("guest_accelerator_type"))
}

type DataMachineTypesDeprecatedAttributes struct {
	ref terra.Reference
}

func (d DataMachineTypesDeprecatedAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataMachineTypesDeprecatedAttributes) InternalWithRef(ref terra.Reference) DataMachineTypesDeprecatedAttributes {
	return DataMachineTypesDeprecatedAttributes{ref: ref}
}

func (d DataMachineTypesDeprecatedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataMachineTypesDeprecatedAttributes) Replacement() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("replacement"))
}

func (d DataMachineTypesDeprecatedAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("state"))
}

type DataMachineTypesState struct {
	Description                  string                              `json:"description"`
	GuestCpus                    float64                             `json:"guest_cpus"`
	IsSharedCpus                 bool                                `json:"is_shared_cpus"`
	MaximumPersistentDisks       float64                             `json:"maximum_persistent_disks"`
	MaximumPersistentDisksSizeGb float64                             `json:"maximum_persistent_disks_size_gb"`
	MemoryMb                     float64                             `json:"memory_mb"`
	Name                         string                              `json:"name"`
	SelfLink                     string                              `json:"self_link"`
	Accelerators                 []DataMachineTypesAcceleratorsState `json:"accelerators"`
	Deprecated                   []DataMachineTypesDeprecatedState   `json:"deprecated"`
}

type DataMachineTypesAcceleratorsState struct {
	GuestAcceleratorCount float64 `json:"guest_accelerator_count"`
	GuestAcceleratorType  string  `json:"guest_accelerator_type"`
}

type DataMachineTypesDeprecatedState struct {
	Replacement string `json:"replacement"`
	State       string `json:"state"`
}
