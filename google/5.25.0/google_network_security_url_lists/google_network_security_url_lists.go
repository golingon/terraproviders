// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_network_security_url_lists

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_network_security_url_lists.
type Resource struct {
	Name      string
	Args      Args
	state     *googleNetworkSecurityUrlListsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gnsul *Resource) Type() string {
	return "google_network_security_url_lists"
}

// LocalName returns the local name for [Resource].
func (gnsul *Resource) LocalName() string {
	return gnsul.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gnsul *Resource) Configuration() interface{} {
	return gnsul.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gnsul *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gnsul)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gnsul *Resource) Dependencies() terra.Dependencies {
	return gnsul.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gnsul *Resource) LifecycleManagement() *terra.Lifecycle {
	return gnsul.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gnsul *Resource) Attributes() googleNetworkSecurityUrlListsAttributes {
	return googleNetworkSecurityUrlListsAttributes{ref: terra.ReferenceResource(gnsul)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gnsul *Resource) ImportState(state io.Reader) error {
	gnsul.state = &googleNetworkSecurityUrlListsState{}
	if err := json.NewDecoder(state).Decode(gnsul.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gnsul.Type(), gnsul.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gnsul *Resource) State() (*googleNetworkSecurityUrlListsState, bool) {
	return gnsul.state, gnsul.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gnsul *Resource) StateMust() *googleNetworkSecurityUrlListsState {
	if gnsul.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gnsul.Type(), gnsul.LocalName()))
	}
	return gnsul.state
}

// Args contains the configurations for google_network_security_url_lists.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleNetworkSecurityUrlListsAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("create_time"))
}

// Description returns a reference to field description of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("description"))
}

// Id returns a reference to field id of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("id"))
}

// Location returns a reference to field location of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("location"))
}

// Name returns a reference to field name of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("name"))
}

// Project returns a reference to field project of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("project"))
}

// UpdateTime returns a reference to field update_time of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gnsul.ref.Append("update_time"))
}

// Values returns a reference to field values of google_network_security_url_lists.
func (gnsul googleNetworkSecurityUrlListsAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gnsul.ref.Append("values"))
}

func (gnsul googleNetworkSecurityUrlListsAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gnsul.ref.Append("timeouts"))
}

type googleNetworkSecurityUrlListsState struct {
	CreateTime  string         `json:"create_time"`
	Description string         `json:"description"`
	Id          string         `json:"id"`
	Location    string         `json:"location"`
	Name        string         `json:"name"`
	Project     string         `json:"project"`
	UpdateTime  string         `json:"update_time"`
	Values      []string       `json:"values"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
