// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dialogflow_intent

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_dialogflow_intent.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDialogflowIntentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdi *Resource) Type() string {
	return "google_dialogflow_intent"
}

// LocalName returns the local name for [Resource].
func (gdi *Resource) LocalName() string {
	return gdi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdi *Resource) Configuration() interface{} {
	return gdi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdi *Resource) Dependencies() terra.Dependencies {
	return gdi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdi *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdi *Resource) Attributes() googleDialogflowIntentAttributes {
	return googleDialogflowIntentAttributes{ref: terra.ReferenceResource(gdi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdi *Resource) ImportState(state io.Reader) error {
	gdi.state = &googleDialogflowIntentState{}
	if err := json.NewDecoder(state).Decode(gdi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdi.Type(), gdi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdi *Resource) State() (*googleDialogflowIntentState, bool) {
	return gdi.state, gdi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdi *Resource) StateMust() *googleDialogflowIntentState {
	if gdi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdi.Type(), gdi.LocalName()))
	}
	return gdi.state
}

// Args contains the configurations for google_dialogflow_intent.
type Args struct {
	// Action: string, optional
	Action terra.StringValue `hcl:"action,attr"`
	// DefaultResponsePlatforms: list of string, optional
	DefaultResponsePlatforms terra.ListValue[terra.StringValue] `hcl:"default_response_platforms,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Events: list of string, optional
	Events terra.ListValue[terra.StringValue] `hcl:"events,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InputContextNames: list of string, optional
	InputContextNames terra.ListValue[terra.StringValue] `hcl:"input_context_names,attr"`
	// IsFallback: bool, optional
	IsFallback terra.BoolValue `hcl:"is_fallback,attr"`
	// MlDisabled: bool, optional
	MlDisabled terra.BoolValue `hcl:"ml_disabled,attr"`
	// ParentFollowupIntentName: string, optional
	ParentFollowupIntentName terra.StringValue `hcl:"parent_followup_intent_name,attr"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// ResetContexts: bool, optional
	ResetContexts terra.BoolValue `hcl:"reset_contexts,attr"`
	// WebhookState: string, optional
	WebhookState terra.StringValue `hcl:"webhook_state,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleDialogflowIntentAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("action"))
}

// DefaultResponsePlatforms returns a reference to field default_response_platforms of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) DefaultResponsePlatforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gdi.ref.Append("default_response_platforms"))
}

// DisplayName returns a reference to field display_name of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("display_name"))
}

// Events returns a reference to field events of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) Events() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gdi.ref.Append("events"))
}

// Id returns a reference to field id of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("id"))
}

// InputContextNames returns a reference to field input_context_names of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) InputContextNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gdi.ref.Append("input_context_names"))
}

// IsFallback returns a reference to field is_fallback of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) IsFallback() terra.BoolValue {
	return terra.ReferenceAsBool(gdi.ref.Append("is_fallback"))
}

// MlDisabled returns a reference to field ml_disabled of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) MlDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(gdi.ref.Append("ml_disabled"))
}

// Name returns a reference to field name of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("name"))
}

// ParentFollowupIntentName returns a reference to field parent_followup_intent_name of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) ParentFollowupIntentName() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("parent_followup_intent_name"))
}

// Priority returns a reference to field priority of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(gdi.ref.Append("priority"))
}

// Project returns a reference to field project of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("project"))
}

// ResetContexts returns a reference to field reset_contexts of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) ResetContexts() terra.BoolValue {
	return terra.ReferenceAsBool(gdi.ref.Append("reset_contexts"))
}

// RootFollowupIntentName returns a reference to field root_followup_intent_name of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) RootFollowupIntentName() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("root_followup_intent_name"))
}

// WebhookState returns a reference to field webhook_state of google_dialogflow_intent.
func (gdi googleDialogflowIntentAttributes) WebhookState() terra.StringValue {
	return terra.ReferenceAsString(gdi.ref.Append("webhook_state"))
}

func (gdi googleDialogflowIntentAttributes) FollowupIntentInfo() terra.ListValue[FollowupIntentInfoAttributes] {
	return terra.ReferenceAsList[FollowupIntentInfoAttributes](gdi.ref.Append("followup_intent_info"))
}

func (gdi googleDialogflowIntentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdi.ref.Append("timeouts"))
}

type googleDialogflowIntentState struct {
	Action                   string                    `json:"action"`
	DefaultResponsePlatforms []string                  `json:"default_response_platforms"`
	DisplayName              string                    `json:"display_name"`
	Events                   []string                  `json:"events"`
	Id                       string                    `json:"id"`
	InputContextNames        []string                  `json:"input_context_names"`
	IsFallback               bool                      `json:"is_fallback"`
	MlDisabled               bool                      `json:"ml_disabled"`
	Name                     string                    `json:"name"`
	ParentFollowupIntentName string                    `json:"parent_followup_intent_name"`
	Priority                 float64                   `json:"priority"`
	Project                  string                    `json:"project"`
	ResetContexts            bool                      `json:"reset_contexts"`
	RootFollowupIntentName   string                    `json:"root_followup_intent_name"`
	WebhookState             string                    `json:"webhook_state"`
	FollowupIntentInfo       []FollowupIntentInfoState `json:"followup_intent_info"`
	Timeouts                 *TimeoutsState            `json:"timeouts"`
}
