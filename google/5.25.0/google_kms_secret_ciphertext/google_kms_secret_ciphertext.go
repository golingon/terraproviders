// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_kms_secret_ciphertext

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_kms_secret_ciphertext.
type Resource struct {
	Name      string
	Args      Args
	state     *googleKmsSecretCiphertextState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gksc *Resource) Type() string {
	return "google_kms_secret_ciphertext"
}

// LocalName returns the local name for [Resource].
func (gksc *Resource) LocalName() string {
	return gksc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gksc *Resource) Configuration() interface{} {
	return gksc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gksc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gksc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gksc *Resource) Dependencies() terra.Dependencies {
	return gksc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gksc *Resource) LifecycleManagement() *terra.Lifecycle {
	return gksc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gksc *Resource) Attributes() googleKmsSecretCiphertextAttributes {
	return googleKmsSecretCiphertextAttributes{ref: terra.ReferenceResource(gksc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gksc *Resource) ImportState(state io.Reader) error {
	gksc.state = &googleKmsSecretCiphertextState{}
	if err := json.NewDecoder(state).Decode(gksc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gksc.Type(), gksc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gksc *Resource) State() (*googleKmsSecretCiphertextState, bool) {
	return gksc.state, gksc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gksc *Resource) StateMust() *googleKmsSecretCiphertextState {
	if gksc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gksc.Type(), gksc.LocalName()))
	}
	return gksc.state
}

// Args contains the configurations for google_kms_secret_ciphertext.
type Args struct {
	// AdditionalAuthenticatedData: string, optional
	AdditionalAuthenticatedData terra.StringValue `hcl:"additional_authenticated_data,attr"`
	// CryptoKey: string, required
	CryptoKey terra.StringValue `hcl:"crypto_key,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Plaintext: string, required
	Plaintext terra.StringValue `hcl:"plaintext,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleKmsSecretCiphertextAttributes struct {
	ref terra.Reference
}

// AdditionalAuthenticatedData returns a reference to field additional_authenticated_data of google_kms_secret_ciphertext.
func (gksc googleKmsSecretCiphertextAttributes) AdditionalAuthenticatedData() terra.StringValue {
	return terra.ReferenceAsString(gksc.ref.Append("additional_authenticated_data"))
}

// Ciphertext returns a reference to field ciphertext of google_kms_secret_ciphertext.
func (gksc googleKmsSecretCiphertextAttributes) Ciphertext() terra.StringValue {
	return terra.ReferenceAsString(gksc.ref.Append("ciphertext"))
}

// CryptoKey returns a reference to field crypto_key of google_kms_secret_ciphertext.
func (gksc googleKmsSecretCiphertextAttributes) CryptoKey() terra.StringValue {
	return terra.ReferenceAsString(gksc.ref.Append("crypto_key"))
}

// Id returns a reference to field id of google_kms_secret_ciphertext.
func (gksc googleKmsSecretCiphertextAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gksc.ref.Append("id"))
}

// Plaintext returns a reference to field plaintext of google_kms_secret_ciphertext.
func (gksc googleKmsSecretCiphertextAttributes) Plaintext() terra.StringValue {
	return terra.ReferenceAsString(gksc.ref.Append("plaintext"))
}

func (gksc googleKmsSecretCiphertextAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gksc.ref.Append("timeouts"))
}

type googleKmsSecretCiphertextState struct {
	AdditionalAuthenticatedData string         `json:"additional_authenticated_data"`
	Ciphertext                  string         `json:"ciphertext"`
	CryptoKey                   string         `json:"crypto_key"`
	Id                          string         `json:"id"`
	Plaintext                   string         `json:"plaintext"`
	Timeouts                    *TimeoutsState `json:"timeouts"`
}
