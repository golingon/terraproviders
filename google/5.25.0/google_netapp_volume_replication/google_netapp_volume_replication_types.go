// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_netapp_volume_replication

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DestinationVolumeParameters struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ShareName: string, optional
	ShareName terra.StringValue `hcl:"share_name,attr"`
	// StoragePool: string, required
	StoragePool terra.StringValue `hcl:"storage_pool,attr" validate:"required"`
	// VolumeId: string, optional
	VolumeId terra.StringValue `hcl:"volume_id,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type TransferStatsAttributes struct {
	ref terra.Reference
}

func (ts TransferStatsAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts TransferStatsAttributes) InternalWithRef(ref terra.Reference) TransferStatsAttributes {
	return TransferStatsAttributes{ref: ref}
}

func (ts TransferStatsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts TransferStatsAttributes) LagDuration() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("lag_duration"))
}

func (ts TransferStatsAttributes) LastTransferBytes() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("last_transfer_bytes"))
}

func (ts TransferStatsAttributes) LastTransferDuration() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("last_transfer_duration"))
}

func (ts TransferStatsAttributes) LastTransferEndTime() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("last_transfer_end_time"))
}

func (ts TransferStatsAttributes) LastTransferError() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("last_transfer_error"))
}

func (ts TransferStatsAttributes) TotalTransferDuration() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("total_transfer_duration"))
}

func (ts TransferStatsAttributes) TransferBytes() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("transfer_bytes"))
}

func (ts TransferStatsAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("update_time"))
}

type DestinationVolumeParametersAttributes struct {
	ref terra.Reference
}

func (dvp DestinationVolumeParametersAttributes) InternalRef() (terra.Reference, error) {
	return dvp.ref, nil
}

func (dvp DestinationVolumeParametersAttributes) InternalWithRef(ref terra.Reference) DestinationVolumeParametersAttributes {
	return DestinationVolumeParametersAttributes{ref: ref}
}

func (dvp DestinationVolumeParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dvp.ref.InternalTokens()
}

func (dvp DestinationVolumeParametersAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(dvp.ref.Append("description"))
}

func (dvp DestinationVolumeParametersAttributes) ShareName() terra.StringValue {
	return terra.ReferenceAsString(dvp.ref.Append("share_name"))
}

func (dvp DestinationVolumeParametersAttributes) StoragePool() terra.StringValue {
	return terra.ReferenceAsString(dvp.ref.Append("storage_pool"))
}

func (dvp DestinationVolumeParametersAttributes) VolumeId() terra.StringValue {
	return terra.ReferenceAsString(dvp.ref.Append("volume_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TransferStatsState struct {
	LagDuration           string `json:"lag_duration"`
	LastTransferBytes     string `json:"last_transfer_bytes"`
	LastTransferDuration  string `json:"last_transfer_duration"`
	LastTransferEndTime   string `json:"last_transfer_end_time"`
	LastTransferError     string `json:"last_transfer_error"`
	TotalTransferDuration string `json:"total_transfer_duration"`
	TransferBytes         string `json:"transfer_bytes"`
	UpdateTime            string `json:"update_time"`
}

type DestinationVolumeParametersState struct {
	Description string `json:"description"`
	ShareName   string `json:"share_name"`
	StoragePool string `json:"storage_pool"`
	VolumeId    string `json:"volume_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
