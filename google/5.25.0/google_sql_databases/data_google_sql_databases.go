// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_sql_databases

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_sql_databases.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gsd *DataSource) DataSource() string {
	return "google_sql_databases"
}

// LocalName returns the local name for [DataSource].
func (gsd *DataSource) LocalName() string {
	return gsd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gsd *DataSource) Configuration() interface{} {
	return gsd.Args
}

// Attributes returns the attributes for [DataSource].
func (gsd *DataSource) Attributes() dataGoogleSqlDatabasesAttributes {
	return dataGoogleSqlDatabasesAttributes{ref: terra.ReferenceDataSource(gsd)}
}

// DataArgs contains the configurations for google_sql_databases.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Instance: string, required
	Instance terra.StringValue `hcl:"instance,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleSqlDatabasesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_sql_databases.
func (gsd dataGoogleSqlDatabasesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsd.ref.Append("id"))
}

// Instance returns a reference to field instance of google_sql_databases.
func (gsd dataGoogleSqlDatabasesAttributes) Instance() terra.StringValue {
	return terra.ReferenceAsString(gsd.ref.Append("instance"))
}

// Project returns a reference to field project of google_sql_databases.
func (gsd dataGoogleSqlDatabasesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gsd.ref.Append("project"))
}

func (gsd dataGoogleSqlDatabasesAttributes) Databases() terra.ListValue[DataDatabasesAttributes] {
	return terra.ReferenceAsList[DataDatabasesAttributes](gsd.ref.Append("databases"))
}
