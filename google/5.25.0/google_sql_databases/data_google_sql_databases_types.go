// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_sql_databases

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataDatabasesAttributes struct {
	ref terra.Reference
}

func (d DataDatabasesAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataDatabasesAttributes) InternalWithRef(ref terra.Reference) DataDatabasesAttributes {
	return DataDatabasesAttributes{ref: ref}
}

func (d DataDatabasesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataDatabasesAttributes) Charset() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("charset"))
}

func (d DataDatabasesAttributes) Collation() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("collation"))
}

func (d DataDatabasesAttributes) DeletionPolicy() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("deletion_policy"))
}

func (d DataDatabasesAttributes) Instance() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("instance"))
}

func (d DataDatabasesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d DataDatabasesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("project"))
}

func (d DataDatabasesAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("self_link"))
}

type DataDatabasesState struct {
	Charset        string `json:"charset"`
	Collation      string `json:"collation"`
	DeletionPolicy string `json:"deletion_policy"`
	Instance       string `json:"instance"`
	Name           string `json:"name"`
	Project        string `json:"project"`
	SelfLink       string `json:"self_link"`
}
