// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_identity_platform_project_default_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SignIn struct {
	// AllowDuplicateEmails: bool, optional
	AllowDuplicateEmails terra.BoolValue `hcl:"allow_duplicate_emails,attr"`
	// SignInAnonymous: optional
	Anonymous *SignInAnonymous `hcl:"anonymous,block"`
	// SignInEmail: optional
	Email *SignInEmail `hcl:"email,block"`
	// SignInPhoneNumber: optional
	PhoneNumber *SignInPhoneNumber `hcl:"phone_number,block"`
}

type SignInAnonymous struct {
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
}

type SignInEmail struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// PasswordRequired: bool, optional
	PasswordRequired terra.BoolValue `hcl:"password_required,attr"`
}

type SignInPhoneNumber struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// TestPhoneNumbers: map of string, optional
	TestPhoneNumbers terra.MapValue[terra.StringValue] `hcl:"test_phone_numbers,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type SignInAttributes struct {
	ref terra.Reference
}

func (si SignInAttributes) InternalRef() (terra.Reference, error) {
	return si.ref, nil
}

func (si SignInAttributes) InternalWithRef(ref terra.Reference) SignInAttributes {
	return SignInAttributes{ref: ref}
}

func (si SignInAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return si.ref.InternalTokens()
}

func (si SignInAttributes) AllowDuplicateEmails() terra.BoolValue {
	return terra.ReferenceAsBool(si.ref.Append("allow_duplicate_emails"))
}

func (si SignInAttributes) HashConfig() terra.ListValue[SignInHashConfigAttributes] {
	return terra.ReferenceAsList[SignInHashConfigAttributes](si.ref.Append("hash_config"))
}

func (si SignInAttributes) Anonymous() terra.ListValue[SignInAnonymousAttributes] {
	return terra.ReferenceAsList[SignInAnonymousAttributes](si.ref.Append("anonymous"))
}

func (si SignInAttributes) Email() terra.ListValue[SignInEmailAttributes] {
	return terra.ReferenceAsList[SignInEmailAttributes](si.ref.Append("email"))
}

func (si SignInAttributes) PhoneNumber() terra.ListValue[SignInPhoneNumberAttributes] {
	return terra.ReferenceAsList[SignInPhoneNumberAttributes](si.ref.Append("phone_number"))
}

type SignInHashConfigAttributes struct {
	ref terra.Reference
}

func (hc SignInHashConfigAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc SignInHashConfigAttributes) InternalWithRef(ref terra.Reference) SignInHashConfigAttributes {
	return SignInHashConfigAttributes{ref: ref}
}

func (hc SignInHashConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc SignInHashConfigAttributes) Algorithm() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("algorithm"))
}

func (hc SignInHashConfigAttributes) MemoryCost() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("memory_cost"))
}

func (hc SignInHashConfigAttributes) Rounds() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("rounds"))
}

func (hc SignInHashConfigAttributes) SaltSeparator() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("salt_separator"))
}

func (hc SignInHashConfigAttributes) SignerKey() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("signer_key"))
}

type SignInAnonymousAttributes struct {
	ref terra.Reference
}

func (a SignInAnonymousAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a SignInAnonymousAttributes) InternalWithRef(ref terra.Reference) SignInAnonymousAttributes {
	return SignInAnonymousAttributes{ref: ref}
}

func (a SignInAnonymousAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a SignInAnonymousAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("enabled"))
}

type SignInEmailAttributes struct {
	ref terra.Reference
}

func (e SignInEmailAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e SignInEmailAttributes) InternalWithRef(ref terra.Reference) SignInEmailAttributes {
	return SignInEmailAttributes{ref: ref}
}

func (e SignInEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e SignInEmailAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("enabled"))
}

func (e SignInEmailAttributes) PasswordRequired() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("password_required"))
}

type SignInPhoneNumberAttributes struct {
	ref terra.Reference
}

func (pn SignInPhoneNumberAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn SignInPhoneNumberAttributes) InternalWithRef(ref terra.Reference) SignInPhoneNumberAttributes {
	return SignInPhoneNumberAttributes{ref: ref}
}

func (pn SignInPhoneNumberAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pn.ref.InternalTokens()
}

func (pn SignInPhoneNumberAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(pn.ref.Append("enabled"))
}

func (pn SignInPhoneNumberAttributes) TestPhoneNumbers() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](pn.ref.Append("test_phone_numbers"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type SignInState struct {
	AllowDuplicateEmails bool                     `json:"allow_duplicate_emails"`
	HashConfig           []SignInHashConfigState  `json:"hash_config"`
	Anonymous            []SignInAnonymousState   `json:"anonymous"`
	Email                []SignInEmailState       `json:"email"`
	PhoneNumber          []SignInPhoneNumberState `json:"phone_number"`
}

type SignInHashConfigState struct {
	Algorithm     string  `json:"algorithm"`
	MemoryCost    float64 `json:"memory_cost"`
	Rounds        float64 `json:"rounds"`
	SaltSeparator string  `json:"salt_separator"`
	SignerKey     string  `json:"signer_key"`
}

type SignInAnonymousState struct {
	Enabled bool `json:"enabled"`
}

type SignInEmailState struct {
	Enabled          bool `json:"enabled"`
	PasswordRequired bool `json:"password_required"`
}

type SignInPhoneNumberState struct {
	Enabled          bool              `json:"enabled"`
	TestPhoneNumbers map[string]string `json:"test_phone_numbers"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
