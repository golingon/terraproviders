// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_identity_platform_project_default_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_identity_platform_project_default_config.
type Resource struct {
	Name      string
	Args      Args
	state     *googleIdentityPlatformProjectDefaultConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gippdc *Resource) Type() string {
	return "google_identity_platform_project_default_config"
}

// LocalName returns the local name for [Resource].
func (gippdc *Resource) LocalName() string {
	return gippdc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gippdc *Resource) Configuration() interface{} {
	return gippdc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gippdc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gippdc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gippdc *Resource) Dependencies() terra.Dependencies {
	return gippdc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gippdc *Resource) LifecycleManagement() *terra.Lifecycle {
	return gippdc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gippdc *Resource) Attributes() googleIdentityPlatformProjectDefaultConfigAttributes {
	return googleIdentityPlatformProjectDefaultConfigAttributes{ref: terra.ReferenceResource(gippdc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gippdc *Resource) ImportState(state io.Reader) error {
	gippdc.state = &googleIdentityPlatformProjectDefaultConfigState{}
	if err := json.NewDecoder(state).Decode(gippdc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gippdc.Type(), gippdc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gippdc *Resource) State() (*googleIdentityPlatformProjectDefaultConfigState, bool) {
	return gippdc.state, gippdc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gippdc *Resource) StateMust() *googleIdentityPlatformProjectDefaultConfigState {
	if gippdc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gippdc.Type(), gippdc.LocalName()))
	}
	return gippdc.state
}

// Args contains the configurations for google_identity_platform_project_default_config.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SignIn: optional
	SignIn *SignIn `hcl:"sign_in,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleIdentityPlatformProjectDefaultConfigAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_identity_platform_project_default_config.
func (gippdc googleIdentityPlatformProjectDefaultConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gippdc.ref.Append("id"))
}

// Name returns a reference to field name of google_identity_platform_project_default_config.
func (gippdc googleIdentityPlatformProjectDefaultConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gippdc.ref.Append("name"))
}

// Project returns a reference to field project of google_identity_platform_project_default_config.
func (gippdc googleIdentityPlatformProjectDefaultConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gippdc.ref.Append("project"))
}

func (gippdc googleIdentityPlatformProjectDefaultConfigAttributes) SignIn() terra.ListValue[SignInAttributes] {
	return terra.ReferenceAsList[SignInAttributes](gippdc.ref.Append("sign_in"))
}

func (gippdc googleIdentityPlatformProjectDefaultConfigAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gippdc.ref.Append("timeouts"))
}

type googleIdentityPlatformProjectDefaultConfigState struct {
	Id       string         `json:"id"`
	Name     string         `json:"name"`
	Project  string         `json:"project"`
	SignIn   []SignInState  `json:"sign_in"`
	Timeouts *TimeoutsState `json:"timeouts"`
}
