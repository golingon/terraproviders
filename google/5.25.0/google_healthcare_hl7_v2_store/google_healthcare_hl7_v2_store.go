// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_healthcare_hl7_v2_store

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_healthcare_hl7_v2_store.
type Resource struct {
	Name      string
	Args      Args
	state     *googleHealthcareHl7V2StoreState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ghhvs *Resource) Type() string {
	return "google_healthcare_hl7_v2_store"
}

// LocalName returns the local name for [Resource].
func (ghhvs *Resource) LocalName() string {
	return ghhvs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ghhvs *Resource) Configuration() interface{} {
	return ghhvs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ghhvs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ghhvs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ghhvs *Resource) Dependencies() terra.Dependencies {
	return ghhvs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ghhvs *Resource) LifecycleManagement() *terra.Lifecycle {
	return ghhvs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ghhvs *Resource) Attributes() googleHealthcareHl7V2StoreAttributes {
	return googleHealthcareHl7V2StoreAttributes{ref: terra.ReferenceResource(ghhvs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ghhvs *Resource) ImportState(state io.Reader) error {
	ghhvs.state = &googleHealthcareHl7V2StoreState{}
	if err := json.NewDecoder(state).Decode(ghhvs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ghhvs.Type(), ghhvs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ghhvs *Resource) State() (*googleHealthcareHl7V2StoreState, bool) {
	return ghhvs.state, ghhvs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ghhvs *Resource) StateMust() *googleHealthcareHl7V2StoreState {
	if ghhvs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ghhvs.Type(), ghhvs.LocalName()))
	}
	return ghhvs.state
}

// Args contains the configurations for google_healthcare_hl7_v2_store.
type Args struct {
	// Dataset: string, required
	Dataset terra.StringValue `hcl:"dataset,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RejectDuplicateMessage: bool, optional
	RejectDuplicateMessage terra.BoolValue `hcl:"reject_duplicate_message,attr"`
	// NotificationConfig: optional
	NotificationConfig *NotificationConfig `hcl:"notification_config,block"`
	// NotificationConfigs: min=0
	NotificationConfigs []NotificationConfigs `hcl:"notification_configs,block" validate:"min=0"`
	// ParserConfig: optional
	ParserConfig *ParserConfig `hcl:"parser_config,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleHealthcareHl7V2StoreAttributes struct {
	ref terra.Reference
}

// Dataset returns a reference to field dataset of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) Dataset() terra.StringValue {
	return terra.ReferenceAsString(ghhvs.ref.Append("dataset"))
}

// EffectiveLabels returns a reference to field effective_labels of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ghhvs.ref.Append("effective_labels"))
}

// Id returns a reference to field id of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ghhvs.ref.Append("id"))
}

// Labels returns a reference to field labels of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ghhvs.ref.Append("labels"))
}

// Name returns a reference to field name of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ghhvs.ref.Append("name"))
}

// RejectDuplicateMessage returns a reference to field reject_duplicate_message of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) RejectDuplicateMessage() terra.BoolValue {
	return terra.ReferenceAsBool(ghhvs.ref.Append("reject_duplicate_message"))
}

// SelfLink returns a reference to field self_link of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(ghhvs.ref.Append("self_link"))
}

// TerraformLabels returns a reference to field terraform_labels of google_healthcare_hl7_v2_store.
func (ghhvs googleHealthcareHl7V2StoreAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ghhvs.ref.Append("terraform_labels"))
}

func (ghhvs googleHealthcareHl7V2StoreAttributes) NotificationConfig() terra.ListValue[NotificationConfigAttributes] {
	return terra.ReferenceAsList[NotificationConfigAttributes](ghhvs.ref.Append("notification_config"))
}

func (ghhvs googleHealthcareHl7V2StoreAttributes) NotificationConfigs() terra.ListValue[NotificationConfigsAttributes] {
	return terra.ReferenceAsList[NotificationConfigsAttributes](ghhvs.ref.Append("notification_configs"))
}

func (ghhvs googleHealthcareHl7V2StoreAttributes) ParserConfig() terra.ListValue[ParserConfigAttributes] {
	return terra.ReferenceAsList[ParserConfigAttributes](ghhvs.ref.Append("parser_config"))
}

func (ghhvs googleHealthcareHl7V2StoreAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ghhvs.ref.Append("timeouts"))
}

type googleHealthcareHl7V2StoreState struct {
	Dataset                string                     `json:"dataset"`
	EffectiveLabels        map[string]string          `json:"effective_labels"`
	Id                     string                     `json:"id"`
	Labels                 map[string]string          `json:"labels"`
	Name                   string                     `json:"name"`
	RejectDuplicateMessage bool                       `json:"reject_duplicate_message"`
	SelfLink               string                     `json:"self_link"`
	TerraformLabels        map[string]string          `json:"terraform_labels"`
	NotificationConfig     []NotificationConfigState  `json:"notification_config"`
	NotificationConfigs    []NotificationConfigsState `json:"notification_configs"`
	ParserConfig           []ParserConfigState        `json:"parser_config"`
	Timeouts               *TimeoutsState             `json:"timeouts"`
}
