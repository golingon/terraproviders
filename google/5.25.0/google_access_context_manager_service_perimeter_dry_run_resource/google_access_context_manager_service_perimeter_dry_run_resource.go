// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_access_context_manager_service_perimeter_dry_run_resource

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_access_context_manager_service_perimeter_dry_run_resource.
type Resource struct {
	Name      string
	Args      Args
	state     *googleAccessContextManagerServicePerimeterDryRunResourceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gacmspdrr *Resource) Type() string {
	return "google_access_context_manager_service_perimeter_dry_run_resource"
}

// LocalName returns the local name for [Resource].
func (gacmspdrr *Resource) LocalName() string {
	return gacmspdrr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gacmspdrr *Resource) Configuration() interface{} {
	return gacmspdrr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gacmspdrr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gacmspdrr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gacmspdrr *Resource) Dependencies() terra.Dependencies {
	return gacmspdrr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gacmspdrr *Resource) LifecycleManagement() *terra.Lifecycle {
	return gacmspdrr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gacmspdrr *Resource) Attributes() googleAccessContextManagerServicePerimeterDryRunResourceAttributes {
	return googleAccessContextManagerServicePerimeterDryRunResourceAttributes{ref: terra.ReferenceResource(gacmspdrr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gacmspdrr *Resource) ImportState(state io.Reader) error {
	gacmspdrr.state = &googleAccessContextManagerServicePerimeterDryRunResourceState{}
	if err := json.NewDecoder(state).Decode(gacmspdrr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gacmspdrr.Type(), gacmspdrr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gacmspdrr *Resource) State() (*googleAccessContextManagerServicePerimeterDryRunResourceState, bool) {
	return gacmspdrr.state, gacmspdrr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gacmspdrr *Resource) StateMust() *googleAccessContextManagerServicePerimeterDryRunResourceState {
	if gacmspdrr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gacmspdrr.Type(), gacmspdrr.LocalName()))
	}
	return gacmspdrr.state
}

// Args contains the configurations for google_access_context_manager_service_perimeter_dry_run_resource.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PerimeterName: string, required
	PerimeterName terra.StringValue `hcl:"perimeter_name,attr" validate:"required"`
	// Resource: string, required
	Resource terra.StringValue `hcl:"resource,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleAccessContextManagerServicePerimeterDryRunResourceAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_access_context_manager_service_perimeter_dry_run_resource.
func (gacmspdrr googleAccessContextManagerServicePerimeterDryRunResourceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gacmspdrr.ref.Append("id"))
}

// PerimeterName returns a reference to field perimeter_name of google_access_context_manager_service_perimeter_dry_run_resource.
func (gacmspdrr googleAccessContextManagerServicePerimeterDryRunResourceAttributes) PerimeterName() terra.StringValue {
	return terra.ReferenceAsString(gacmspdrr.ref.Append("perimeter_name"))
}

// Resource returns a reference to field resource of google_access_context_manager_service_perimeter_dry_run_resource.
func (gacmspdrr googleAccessContextManagerServicePerimeterDryRunResourceAttributes) Resource() terra.StringValue {
	return terra.ReferenceAsString(gacmspdrr.ref.Append("resource"))
}

func (gacmspdrr googleAccessContextManagerServicePerimeterDryRunResourceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gacmspdrr.ref.Append("timeouts"))
}

type googleAccessContextManagerServicePerimeterDryRunResourceState struct {
	Id            string         `json:"id"`
	PerimeterName string         `json:"perimeter_name"`
	Resource      string         `json:"resource"`
	Timeouts      *TimeoutsState `json:"timeouts"`
}
