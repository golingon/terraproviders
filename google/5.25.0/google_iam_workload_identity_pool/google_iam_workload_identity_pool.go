// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_iam_workload_identity_pool

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_iam_workload_identity_pool.
type Resource struct {
	Name      string
	Args      Args
	state     *googleIamWorkloadIdentityPoolState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (giwip *Resource) Type() string {
	return "google_iam_workload_identity_pool"
}

// LocalName returns the local name for [Resource].
func (giwip *Resource) LocalName() string {
	return giwip.Name
}

// Configuration returns the configuration (args) for [Resource].
func (giwip *Resource) Configuration() interface{} {
	return giwip.Args
}

// DependOn is used for other resources to depend on [Resource].
func (giwip *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(giwip)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (giwip *Resource) Dependencies() terra.Dependencies {
	return giwip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (giwip *Resource) LifecycleManagement() *terra.Lifecycle {
	return giwip.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (giwip *Resource) Attributes() googleIamWorkloadIdentityPoolAttributes {
	return googleIamWorkloadIdentityPoolAttributes{ref: terra.ReferenceResource(giwip)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (giwip *Resource) ImportState(state io.Reader) error {
	giwip.state = &googleIamWorkloadIdentityPoolState{}
	if err := json.NewDecoder(state).Decode(giwip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", giwip.Type(), giwip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (giwip *Resource) State() (*googleIamWorkloadIdentityPoolState, bool) {
	return giwip.state, giwip.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (giwip *Resource) StateMust() *googleIamWorkloadIdentityPoolState {
	if giwip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", giwip.Type(), giwip.LocalName()))
	}
	return giwip.state
}

// Args contains the configurations for google_iam_workload_identity_pool.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// WorkloadIdentityPoolId: string, required
	WorkloadIdentityPoolId terra.StringValue `hcl:"workload_identity_pool_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleIamWorkloadIdentityPoolAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("description"))
}

// Disabled returns a reference to field disabled of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(giwip.ref.Append("disabled"))
}

// DisplayName returns a reference to field display_name of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("display_name"))
}

// Id returns a reference to field id of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("id"))
}

// Name returns a reference to field name of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("name"))
}

// Project returns a reference to field project of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("project"))
}

// State returns a reference to field state of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("state"))
}

// WorkloadIdentityPoolId returns a reference to field workload_identity_pool_id of google_iam_workload_identity_pool.
func (giwip googleIamWorkloadIdentityPoolAttributes) WorkloadIdentityPoolId() terra.StringValue {
	return terra.ReferenceAsString(giwip.ref.Append("workload_identity_pool_id"))
}

func (giwip googleIamWorkloadIdentityPoolAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](giwip.ref.Append("timeouts"))
}

type googleIamWorkloadIdentityPoolState struct {
	Description            string         `json:"description"`
	Disabled               bool           `json:"disabled"`
	DisplayName            string         `json:"display_name"`
	Id                     string         `json:"id"`
	Name                   string         `json:"name"`
	Project                string         `json:"project"`
	State                  string         `json:"state"`
	WorkloadIdentityPoolId string         `json:"workload_identity_pool_id"`
	Timeouts               *TimeoutsState `json:"timeouts"`
}
