// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_regions

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_regions.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcr *DataSource) DataSource() string {
	return "google_compute_regions"
}

// LocalName returns the local name for [DataSource].
func (gcr *DataSource) LocalName() string {
	return gcr.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcr *DataSource) Configuration() interface{} {
	return gcr.Args
}

// Attributes returns the attributes for [DataSource].
func (gcr *DataSource) Attributes() dataGoogleComputeRegionsAttributes {
	return dataGoogleComputeRegionsAttributes{ref: terra.ReferenceDataSource(gcr)}
}

// DataArgs contains the configurations for google_compute_regions.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}

type dataGoogleComputeRegionsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_compute_regions.
func (gcr dataGoogleComputeRegionsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("id"))
}

// Names returns a reference to field names of google_compute_regions.
func (gcr dataGoogleComputeRegionsAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcr.ref.Append("names"))
}

// Project returns a reference to field project of google_compute_regions.
func (gcr dataGoogleComputeRegionsAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("project"))
}

// Status returns a reference to field status of google_compute_regions.
func (gcr dataGoogleComputeRegionsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("status"))
}
