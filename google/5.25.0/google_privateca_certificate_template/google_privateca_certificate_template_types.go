// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_privateca_certificate_template

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type IdentityConstraints struct {
	// AllowSubjectAltNamesPassthrough: bool, required
	AllowSubjectAltNamesPassthrough terra.BoolValue `hcl:"allow_subject_alt_names_passthrough,attr" validate:"required"`
	// AllowSubjectPassthrough: bool, required
	AllowSubjectPassthrough terra.BoolValue `hcl:"allow_subject_passthrough,attr" validate:"required"`
	// IdentityConstraintsCelExpression: optional
	CelExpression *IdentityConstraintsCelExpression `hcl:"cel_expression,block"`
}

type IdentityConstraintsCelExpression struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Expression: string, optional
	Expression terra.StringValue `hcl:"expression,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Title: string, optional
	Title terra.StringValue `hcl:"title,attr"`
}

type PassthroughExtensions struct {
	// KnownExtensions: list of string, optional
	KnownExtensions terra.ListValue[terra.StringValue] `hcl:"known_extensions,attr"`
	// PassthroughExtensionsAdditionalExtensions: min=0
	AdditionalExtensions []PassthroughExtensionsAdditionalExtensions `hcl:"additional_extensions,block" validate:"min=0"`
}

type PassthroughExtensionsAdditionalExtensions struct {
	// ObjectIdPath: list of number, required
	ObjectIdPath terra.ListValue[terra.NumberValue] `hcl:"object_id_path,attr" validate:"required"`
}

type PredefinedValues struct {
	// AiaOcspServers: list of string, optional
	AiaOcspServers terra.ListValue[terra.StringValue] `hcl:"aia_ocsp_servers,attr"`
	// PredefinedValuesAdditionalExtensions: min=0
	AdditionalExtensions []PredefinedValuesAdditionalExtensions `hcl:"additional_extensions,block" validate:"min=0"`
	// PredefinedValuesCaOptions: optional
	CaOptions *PredefinedValuesCaOptions `hcl:"ca_options,block"`
	// PredefinedValuesKeyUsage: optional
	KeyUsage *PredefinedValuesKeyUsage `hcl:"key_usage,block"`
	// PredefinedValuesPolicyIds: min=0
	PolicyIds []PredefinedValuesPolicyIds `hcl:"policy_ids,block" validate:"min=0"`
}

type PredefinedValuesAdditionalExtensions struct {
	// Critical: bool, optional
	Critical terra.BoolValue `hcl:"critical,attr"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
	// PredefinedValuesAdditionalExtensionsObjectId: required
	ObjectId *PredefinedValuesAdditionalExtensionsObjectId `hcl:"object_id,block" validate:"required"`
}

type PredefinedValuesAdditionalExtensionsObjectId struct {
	// ObjectIdPath: list of number, required
	ObjectIdPath terra.ListValue[terra.NumberValue] `hcl:"object_id_path,attr" validate:"required"`
}

type PredefinedValuesCaOptions struct {
	// IsCa: bool, optional
	IsCa terra.BoolValue `hcl:"is_ca,attr"`
	// MaxIssuerPathLength: number, optional
	MaxIssuerPathLength terra.NumberValue `hcl:"max_issuer_path_length,attr"`
}

type PredefinedValuesKeyUsage struct {
	// PredefinedValuesKeyUsageBaseKeyUsage: optional
	BaseKeyUsage *PredefinedValuesKeyUsageBaseKeyUsage `hcl:"base_key_usage,block"`
	// PredefinedValuesKeyUsageExtendedKeyUsage: optional
	ExtendedKeyUsage *PredefinedValuesKeyUsageExtendedKeyUsage `hcl:"extended_key_usage,block"`
	// PredefinedValuesKeyUsageUnknownExtendedKeyUsages: min=0
	UnknownExtendedKeyUsages []PredefinedValuesKeyUsageUnknownExtendedKeyUsages `hcl:"unknown_extended_key_usages,block" validate:"min=0"`
}

type PredefinedValuesKeyUsageBaseKeyUsage struct {
	// CertSign: bool, optional
	CertSign terra.BoolValue `hcl:"cert_sign,attr"`
	// ContentCommitment: bool, optional
	ContentCommitment terra.BoolValue `hcl:"content_commitment,attr"`
	// CrlSign: bool, optional
	CrlSign terra.BoolValue `hcl:"crl_sign,attr"`
	// DataEncipherment: bool, optional
	DataEncipherment terra.BoolValue `hcl:"data_encipherment,attr"`
	// DecipherOnly: bool, optional
	DecipherOnly terra.BoolValue `hcl:"decipher_only,attr"`
	// DigitalSignature: bool, optional
	DigitalSignature terra.BoolValue `hcl:"digital_signature,attr"`
	// EncipherOnly: bool, optional
	EncipherOnly terra.BoolValue `hcl:"encipher_only,attr"`
	// KeyAgreement: bool, optional
	KeyAgreement terra.BoolValue `hcl:"key_agreement,attr"`
	// KeyEncipherment: bool, optional
	KeyEncipherment terra.BoolValue `hcl:"key_encipherment,attr"`
}

type PredefinedValuesKeyUsageExtendedKeyUsage struct {
	// ClientAuth: bool, optional
	ClientAuth terra.BoolValue `hcl:"client_auth,attr"`
	// CodeSigning: bool, optional
	CodeSigning terra.BoolValue `hcl:"code_signing,attr"`
	// EmailProtection: bool, optional
	EmailProtection terra.BoolValue `hcl:"email_protection,attr"`
	// OcspSigning: bool, optional
	OcspSigning terra.BoolValue `hcl:"ocsp_signing,attr"`
	// ServerAuth: bool, optional
	ServerAuth terra.BoolValue `hcl:"server_auth,attr"`
	// TimeStamping: bool, optional
	TimeStamping terra.BoolValue `hcl:"time_stamping,attr"`
}

type PredefinedValuesKeyUsageUnknownExtendedKeyUsages struct {
	// ObjectIdPath: list of number, required
	ObjectIdPath terra.ListValue[terra.NumberValue] `hcl:"object_id_path,attr" validate:"required"`
}

type PredefinedValuesPolicyIds struct {
	// ObjectIdPath: list of number, required
	ObjectIdPath terra.ListValue[terra.NumberValue] `hcl:"object_id_path,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type IdentityConstraintsAttributes struct {
	ref terra.Reference
}

func (ic IdentityConstraintsAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic IdentityConstraintsAttributes) InternalWithRef(ref terra.Reference) IdentityConstraintsAttributes {
	return IdentityConstraintsAttributes{ref: ref}
}

func (ic IdentityConstraintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic IdentityConstraintsAttributes) AllowSubjectAltNamesPassthrough() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("allow_subject_alt_names_passthrough"))
}

func (ic IdentityConstraintsAttributes) AllowSubjectPassthrough() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("allow_subject_passthrough"))
}

func (ic IdentityConstraintsAttributes) CelExpression() terra.ListValue[IdentityConstraintsCelExpressionAttributes] {
	return terra.ReferenceAsList[IdentityConstraintsCelExpressionAttributes](ic.ref.Append("cel_expression"))
}

type IdentityConstraintsCelExpressionAttributes struct {
	ref terra.Reference
}

func (ce IdentityConstraintsCelExpressionAttributes) InternalRef() (terra.Reference, error) {
	return ce.ref, nil
}

func (ce IdentityConstraintsCelExpressionAttributes) InternalWithRef(ref terra.Reference) IdentityConstraintsCelExpressionAttributes {
	return IdentityConstraintsCelExpressionAttributes{ref: ref}
}

func (ce IdentityConstraintsCelExpressionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ce.ref.InternalTokens()
}

func (ce IdentityConstraintsCelExpressionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("description"))
}

func (ce IdentityConstraintsCelExpressionAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("expression"))
}

func (ce IdentityConstraintsCelExpressionAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("location"))
}

func (ce IdentityConstraintsCelExpressionAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("title"))
}

type PassthroughExtensionsAttributes struct {
	ref terra.Reference
}

func (pe PassthroughExtensionsAttributes) InternalRef() (terra.Reference, error) {
	return pe.ref, nil
}

func (pe PassthroughExtensionsAttributes) InternalWithRef(ref terra.Reference) PassthroughExtensionsAttributes {
	return PassthroughExtensionsAttributes{ref: ref}
}

func (pe PassthroughExtensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pe.ref.InternalTokens()
}

func (pe PassthroughExtensionsAttributes) KnownExtensions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pe.ref.Append("known_extensions"))
}

func (pe PassthroughExtensionsAttributes) AdditionalExtensions() terra.ListValue[PassthroughExtensionsAdditionalExtensionsAttributes] {
	return terra.ReferenceAsList[PassthroughExtensionsAdditionalExtensionsAttributes](pe.ref.Append("additional_extensions"))
}

type PassthroughExtensionsAdditionalExtensionsAttributes struct {
	ref terra.Reference
}

func (ae PassthroughExtensionsAdditionalExtensionsAttributes) InternalRef() (terra.Reference, error) {
	return ae.ref, nil
}

func (ae PassthroughExtensionsAdditionalExtensionsAttributes) InternalWithRef(ref terra.Reference) PassthroughExtensionsAdditionalExtensionsAttributes {
	return PassthroughExtensionsAdditionalExtensionsAttributes{ref: ref}
}

func (ae PassthroughExtensionsAdditionalExtensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ae.ref.InternalTokens()
}

func (ae PassthroughExtensionsAdditionalExtensionsAttributes) ObjectIdPath() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](ae.ref.Append("object_id_path"))
}

type PredefinedValuesAttributes struct {
	ref terra.Reference
}

func (pv PredefinedValuesAttributes) InternalRef() (terra.Reference, error) {
	return pv.ref, nil
}

func (pv PredefinedValuesAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesAttributes {
	return PredefinedValuesAttributes{ref: ref}
}

func (pv PredefinedValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pv.ref.InternalTokens()
}

func (pv PredefinedValuesAttributes) AiaOcspServers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pv.ref.Append("aia_ocsp_servers"))
}

func (pv PredefinedValuesAttributes) AdditionalExtensions() terra.ListValue[PredefinedValuesAdditionalExtensionsAttributes] {
	return terra.ReferenceAsList[PredefinedValuesAdditionalExtensionsAttributes](pv.ref.Append("additional_extensions"))
}

func (pv PredefinedValuesAttributes) CaOptions() terra.ListValue[PredefinedValuesCaOptionsAttributes] {
	return terra.ReferenceAsList[PredefinedValuesCaOptionsAttributes](pv.ref.Append("ca_options"))
}

func (pv PredefinedValuesAttributes) KeyUsage() terra.ListValue[PredefinedValuesKeyUsageAttributes] {
	return terra.ReferenceAsList[PredefinedValuesKeyUsageAttributes](pv.ref.Append("key_usage"))
}

func (pv PredefinedValuesAttributes) PolicyIds() terra.ListValue[PredefinedValuesPolicyIdsAttributes] {
	return terra.ReferenceAsList[PredefinedValuesPolicyIdsAttributes](pv.ref.Append("policy_ids"))
}

type PredefinedValuesAdditionalExtensionsAttributes struct {
	ref terra.Reference
}

func (ae PredefinedValuesAdditionalExtensionsAttributes) InternalRef() (terra.Reference, error) {
	return ae.ref, nil
}

func (ae PredefinedValuesAdditionalExtensionsAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesAdditionalExtensionsAttributes {
	return PredefinedValuesAdditionalExtensionsAttributes{ref: ref}
}

func (ae PredefinedValuesAdditionalExtensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ae.ref.InternalTokens()
}

func (ae PredefinedValuesAdditionalExtensionsAttributes) Critical() terra.BoolValue {
	return terra.ReferenceAsBool(ae.ref.Append("critical"))
}

func (ae PredefinedValuesAdditionalExtensionsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ae.ref.Append("value"))
}

func (ae PredefinedValuesAdditionalExtensionsAttributes) ObjectId() terra.ListValue[PredefinedValuesAdditionalExtensionsObjectIdAttributes] {
	return terra.ReferenceAsList[PredefinedValuesAdditionalExtensionsObjectIdAttributes](ae.ref.Append("object_id"))
}

type PredefinedValuesAdditionalExtensionsObjectIdAttributes struct {
	ref terra.Reference
}

func (oi PredefinedValuesAdditionalExtensionsObjectIdAttributes) InternalRef() (terra.Reference, error) {
	return oi.ref, nil
}

func (oi PredefinedValuesAdditionalExtensionsObjectIdAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesAdditionalExtensionsObjectIdAttributes {
	return PredefinedValuesAdditionalExtensionsObjectIdAttributes{ref: ref}
}

func (oi PredefinedValuesAdditionalExtensionsObjectIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oi.ref.InternalTokens()
}

func (oi PredefinedValuesAdditionalExtensionsObjectIdAttributes) ObjectIdPath() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](oi.ref.Append("object_id_path"))
}

type PredefinedValuesCaOptionsAttributes struct {
	ref terra.Reference
}

func (co PredefinedValuesCaOptionsAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co PredefinedValuesCaOptionsAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesCaOptionsAttributes {
	return PredefinedValuesCaOptionsAttributes{ref: ref}
}

func (co PredefinedValuesCaOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co PredefinedValuesCaOptionsAttributes) IsCa() terra.BoolValue {
	return terra.ReferenceAsBool(co.ref.Append("is_ca"))
}

func (co PredefinedValuesCaOptionsAttributes) MaxIssuerPathLength() terra.NumberValue {
	return terra.ReferenceAsNumber(co.ref.Append("max_issuer_path_length"))
}

type PredefinedValuesKeyUsageAttributes struct {
	ref terra.Reference
}

func (ku PredefinedValuesKeyUsageAttributes) InternalRef() (terra.Reference, error) {
	return ku.ref, nil
}

func (ku PredefinedValuesKeyUsageAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesKeyUsageAttributes {
	return PredefinedValuesKeyUsageAttributes{ref: ref}
}

func (ku PredefinedValuesKeyUsageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ku.ref.InternalTokens()
}

func (ku PredefinedValuesKeyUsageAttributes) BaseKeyUsage() terra.ListValue[PredefinedValuesKeyUsageBaseKeyUsageAttributes] {
	return terra.ReferenceAsList[PredefinedValuesKeyUsageBaseKeyUsageAttributes](ku.ref.Append("base_key_usage"))
}

func (ku PredefinedValuesKeyUsageAttributes) ExtendedKeyUsage() terra.ListValue[PredefinedValuesKeyUsageExtendedKeyUsageAttributes] {
	return terra.ReferenceAsList[PredefinedValuesKeyUsageExtendedKeyUsageAttributes](ku.ref.Append("extended_key_usage"))
}

func (ku PredefinedValuesKeyUsageAttributes) UnknownExtendedKeyUsages() terra.ListValue[PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes] {
	return terra.ReferenceAsList[PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes](ku.ref.Append("unknown_extended_key_usages"))
}

type PredefinedValuesKeyUsageBaseKeyUsageAttributes struct {
	ref terra.Reference
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) InternalRef() (terra.Reference, error) {
	return bku.ref, nil
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesKeyUsageBaseKeyUsageAttributes {
	return PredefinedValuesKeyUsageBaseKeyUsageAttributes{ref: ref}
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bku.ref.InternalTokens()
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) CertSign() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("cert_sign"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) ContentCommitment() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("content_commitment"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) CrlSign() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("crl_sign"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) DataEncipherment() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("data_encipherment"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) DecipherOnly() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("decipher_only"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) DigitalSignature() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("digital_signature"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) EncipherOnly() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("encipher_only"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) KeyAgreement() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("key_agreement"))
}

func (bku PredefinedValuesKeyUsageBaseKeyUsageAttributes) KeyEncipherment() terra.BoolValue {
	return terra.ReferenceAsBool(bku.ref.Append("key_encipherment"))
}

type PredefinedValuesKeyUsageExtendedKeyUsageAttributes struct {
	ref terra.Reference
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) InternalRef() (terra.Reference, error) {
	return eku.ref, nil
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesKeyUsageExtendedKeyUsageAttributes {
	return PredefinedValuesKeyUsageExtendedKeyUsageAttributes{ref: ref}
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eku.ref.InternalTokens()
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) ClientAuth() terra.BoolValue {
	return terra.ReferenceAsBool(eku.ref.Append("client_auth"))
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) CodeSigning() terra.BoolValue {
	return terra.ReferenceAsBool(eku.ref.Append("code_signing"))
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) EmailProtection() terra.BoolValue {
	return terra.ReferenceAsBool(eku.ref.Append("email_protection"))
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) OcspSigning() terra.BoolValue {
	return terra.ReferenceAsBool(eku.ref.Append("ocsp_signing"))
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) ServerAuth() terra.BoolValue {
	return terra.ReferenceAsBool(eku.ref.Append("server_auth"))
}

func (eku PredefinedValuesKeyUsageExtendedKeyUsageAttributes) TimeStamping() terra.BoolValue {
	return terra.ReferenceAsBool(eku.ref.Append("time_stamping"))
}

type PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes struct {
	ref terra.Reference
}

func (ueku PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes) InternalRef() (terra.Reference, error) {
	return ueku.ref, nil
}

func (ueku PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes {
	return PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes{ref: ref}
}

func (ueku PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ueku.ref.InternalTokens()
}

func (ueku PredefinedValuesKeyUsageUnknownExtendedKeyUsagesAttributes) ObjectIdPath() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](ueku.ref.Append("object_id_path"))
}

type PredefinedValuesPolicyIdsAttributes struct {
	ref terra.Reference
}

func (pi PredefinedValuesPolicyIdsAttributes) InternalRef() (terra.Reference, error) {
	return pi.ref, nil
}

func (pi PredefinedValuesPolicyIdsAttributes) InternalWithRef(ref terra.Reference) PredefinedValuesPolicyIdsAttributes {
	return PredefinedValuesPolicyIdsAttributes{ref: ref}
}

func (pi PredefinedValuesPolicyIdsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pi.ref.InternalTokens()
}

func (pi PredefinedValuesPolicyIdsAttributes) ObjectIdPath() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](pi.ref.Append("object_id_path"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type IdentityConstraintsState struct {
	AllowSubjectAltNamesPassthrough bool                                    `json:"allow_subject_alt_names_passthrough"`
	AllowSubjectPassthrough         bool                                    `json:"allow_subject_passthrough"`
	CelExpression                   []IdentityConstraintsCelExpressionState `json:"cel_expression"`
}

type IdentityConstraintsCelExpressionState struct {
	Description string `json:"description"`
	Expression  string `json:"expression"`
	Location    string `json:"location"`
	Title       string `json:"title"`
}

type PassthroughExtensionsState struct {
	KnownExtensions      []string                                         `json:"known_extensions"`
	AdditionalExtensions []PassthroughExtensionsAdditionalExtensionsState `json:"additional_extensions"`
}

type PassthroughExtensionsAdditionalExtensionsState struct {
	ObjectIdPath []float64 `json:"object_id_path"`
}

type PredefinedValuesState struct {
	AiaOcspServers       []string                                    `json:"aia_ocsp_servers"`
	AdditionalExtensions []PredefinedValuesAdditionalExtensionsState `json:"additional_extensions"`
	CaOptions            []PredefinedValuesCaOptionsState            `json:"ca_options"`
	KeyUsage             []PredefinedValuesKeyUsageState             `json:"key_usage"`
	PolicyIds            []PredefinedValuesPolicyIdsState            `json:"policy_ids"`
}

type PredefinedValuesAdditionalExtensionsState struct {
	Critical bool                                                `json:"critical"`
	Value    string                                              `json:"value"`
	ObjectId []PredefinedValuesAdditionalExtensionsObjectIdState `json:"object_id"`
}

type PredefinedValuesAdditionalExtensionsObjectIdState struct {
	ObjectIdPath []float64 `json:"object_id_path"`
}

type PredefinedValuesCaOptionsState struct {
	IsCa                bool    `json:"is_ca"`
	MaxIssuerPathLength float64 `json:"max_issuer_path_length"`
}

type PredefinedValuesKeyUsageState struct {
	BaseKeyUsage             []PredefinedValuesKeyUsageBaseKeyUsageState             `json:"base_key_usage"`
	ExtendedKeyUsage         []PredefinedValuesKeyUsageExtendedKeyUsageState         `json:"extended_key_usage"`
	UnknownExtendedKeyUsages []PredefinedValuesKeyUsageUnknownExtendedKeyUsagesState `json:"unknown_extended_key_usages"`
}

type PredefinedValuesKeyUsageBaseKeyUsageState struct {
	CertSign          bool `json:"cert_sign"`
	ContentCommitment bool `json:"content_commitment"`
	CrlSign           bool `json:"crl_sign"`
	DataEncipherment  bool `json:"data_encipherment"`
	DecipherOnly      bool `json:"decipher_only"`
	DigitalSignature  bool `json:"digital_signature"`
	EncipherOnly      bool `json:"encipher_only"`
	KeyAgreement      bool `json:"key_agreement"`
	KeyEncipherment   bool `json:"key_encipherment"`
}

type PredefinedValuesKeyUsageExtendedKeyUsageState struct {
	ClientAuth      bool `json:"client_auth"`
	CodeSigning     bool `json:"code_signing"`
	EmailProtection bool `json:"email_protection"`
	OcspSigning     bool `json:"ocsp_signing"`
	ServerAuth      bool `json:"server_auth"`
	TimeStamping    bool `json:"time_stamping"`
}

type PredefinedValuesKeyUsageUnknownExtendedKeyUsagesState struct {
	ObjectIdPath []float64 `json:"object_id_path"`
}

type PredefinedValuesPolicyIdsState struct {
	ObjectIdPath []float64 `json:"object_id_path"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
