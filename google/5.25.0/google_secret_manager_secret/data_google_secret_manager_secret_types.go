// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_secret_manager_secret

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataReplicationAttributes struct {
	ref terra.Reference
}

func (r DataReplicationAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataReplicationAttributes) InternalWithRef(ref terra.Reference) DataReplicationAttributes {
	return DataReplicationAttributes{ref: ref}
}

func (r DataReplicationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataReplicationAttributes) Auto() terra.ListValue[DataReplicationAutoAttributes] {
	return terra.ReferenceAsList[DataReplicationAutoAttributes](r.ref.Append("auto"))
}

func (r DataReplicationAttributes) UserManaged() terra.ListValue[DataReplicationUserManagedAttributes] {
	return terra.ReferenceAsList[DataReplicationUserManagedAttributes](r.ref.Append("user_managed"))
}

type DataReplicationAutoAttributes struct {
	ref terra.Reference
}

func (a DataReplicationAutoAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataReplicationAutoAttributes) InternalWithRef(ref terra.Reference) DataReplicationAutoAttributes {
	return DataReplicationAutoAttributes{ref: ref}
}

func (a DataReplicationAutoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataReplicationAutoAttributes) CustomerManagedEncryption() terra.ListValue[DataReplicationAutoCustomerManagedEncryptionAttributes] {
	return terra.ReferenceAsList[DataReplicationAutoCustomerManagedEncryptionAttributes](a.ref.Append("customer_managed_encryption"))
}

type DataReplicationAutoCustomerManagedEncryptionAttributes struct {
	ref terra.Reference
}

func (cme DataReplicationAutoCustomerManagedEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return cme.ref, nil
}

func (cme DataReplicationAutoCustomerManagedEncryptionAttributes) InternalWithRef(ref terra.Reference) DataReplicationAutoCustomerManagedEncryptionAttributes {
	return DataReplicationAutoCustomerManagedEncryptionAttributes{ref: ref}
}

func (cme DataReplicationAutoCustomerManagedEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cme.ref.InternalTokens()
}

func (cme DataReplicationAutoCustomerManagedEncryptionAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(cme.ref.Append("kms_key_name"))
}

type DataReplicationUserManagedAttributes struct {
	ref terra.Reference
}

func (um DataReplicationUserManagedAttributes) InternalRef() (terra.Reference, error) {
	return um.ref, nil
}

func (um DataReplicationUserManagedAttributes) InternalWithRef(ref terra.Reference) DataReplicationUserManagedAttributes {
	return DataReplicationUserManagedAttributes{ref: ref}
}

func (um DataReplicationUserManagedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return um.ref.InternalTokens()
}

func (um DataReplicationUserManagedAttributes) Replicas() terra.ListValue[DataReplicationUserManagedReplicasAttributes] {
	return terra.ReferenceAsList[DataReplicationUserManagedReplicasAttributes](um.ref.Append("replicas"))
}

type DataReplicationUserManagedReplicasAttributes struct {
	ref terra.Reference
}

func (r DataReplicationUserManagedReplicasAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataReplicationUserManagedReplicasAttributes) InternalWithRef(ref terra.Reference) DataReplicationUserManagedReplicasAttributes {
	return DataReplicationUserManagedReplicasAttributes{ref: ref}
}

func (r DataReplicationUserManagedReplicasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataReplicationUserManagedReplicasAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("location"))
}

func (r DataReplicationUserManagedReplicasAttributes) CustomerManagedEncryption() terra.ListValue[DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes] {
	return terra.ReferenceAsList[DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes](r.ref.Append("customer_managed_encryption"))
}

type DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes struct {
	ref terra.Reference
}

func (cme DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return cme.ref, nil
}

func (cme DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes) InternalWithRef(ref terra.Reference) DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes {
	return DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes{ref: ref}
}

func (cme DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cme.ref.InternalTokens()
}

func (cme DataReplicationUserManagedReplicasCustomerManagedEncryptionAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(cme.ref.Append("kms_key_name"))
}

type DataRotationAttributes struct {
	ref terra.Reference
}

func (r DataRotationAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataRotationAttributes) InternalWithRef(ref terra.Reference) DataRotationAttributes {
	return DataRotationAttributes{ref: ref}
}

func (r DataRotationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataRotationAttributes) NextRotationTime() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("next_rotation_time"))
}

func (r DataRotationAttributes) RotationPeriod() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("rotation_period"))
}

type DataTopicsAttributes struct {
	ref terra.Reference
}

func (t DataTopicsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTopicsAttributes) InternalWithRef(ref terra.Reference) DataTopicsAttributes {
	return DataTopicsAttributes{ref: ref}
}

func (t DataTopicsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTopicsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type DataReplicationState struct {
	Auto        []DataReplicationAutoState        `json:"auto"`
	UserManaged []DataReplicationUserManagedState `json:"user_managed"`
}

type DataReplicationAutoState struct {
	CustomerManagedEncryption []DataReplicationAutoCustomerManagedEncryptionState `json:"customer_managed_encryption"`
}

type DataReplicationAutoCustomerManagedEncryptionState struct {
	KmsKeyName string `json:"kms_key_name"`
}

type DataReplicationUserManagedState struct {
	Replicas []DataReplicationUserManagedReplicasState `json:"replicas"`
}

type DataReplicationUserManagedReplicasState struct {
	Location                  string                                                             `json:"location"`
	CustomerManagedEncryption []DataReplicationUserManagedReplicasCustomerManagedEncryptionState `json:"customer_managed_encryption"`
}

type DataReplicationUserManagedReplicasCustomerManagedEncryptionState struct {
	KmsKeyName string `json:"kms_key_name"`
}

type DataRotationState struct {
	NextRotationTime string `json:"next_rotation_time"`
	RotationPeriod   string `json:"rotation_period"`
}

type DataTopicsState struct {
	Name string `json:"name"`
}
