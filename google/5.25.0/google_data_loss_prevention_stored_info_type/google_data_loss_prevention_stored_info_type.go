// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_data_loss_prevention_stored_info_type

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_data_loss_prevention_stored_info_type.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDataLossPreventionStoredInfoTypeState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdlpsit *Resource) Type() string {
	return "google_data_loss_prevention_stored_info_type"
}

// LocalName returns the local name for [Resource].
func (gdlpsit *Resource) LocalName() string {
	return gdlpsit.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdlpsit *Resource) Configuration() interface{} {
	return gdlpsit.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdlpsit *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdlpsit)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdlpsit *Resource) Dependencies() terra.Dependencies {
	return gdlpsit.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdlpsit *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdlpsit.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdlpsit *Resource) Attributes() googleDataLossPreventionStoredInfoTypeAttributes {
	return googleDataLossPreventionStoredInfoTypeAttributes{ref: terra.ReferenceResource(gdlpsit)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdlpsit *Resource) ImportState(state io.Reader) error {
	gdlpsit.state = &googleDataLossPreventionStoredInfoTypeState{}
	if err := json.NewDecoder(state).Decode(gdlpsit.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdlpsit.Type(), gdlpsit.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdlpsit *Resource) State() (*googleDataLossPreventionStoredInfoTypeState, bool) {
	return gdlpsit.state, gdlpsit.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdlpsit *Resource) StateMust() *googleDataLossPreventionStoredInfoTypeState {
	if gdlpsit.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdlpsit.Type(), gdlpsit.LocalName()))
	}
	return gdlpsit.state
}

// Args contains the configurations for google_data_loss_prevention_stored_info_type.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// StoredInfoTypeId: string, optional
	StoredInfoTypeId terra.StringValue `hcl:"stored_info_type_id,attr"`
	// Dictionary: optional
	Dictionary *Dictionary `hcl:"dictionary,block"`
	// LargeCustomDictionary: optional
	LargeCustomDictionary *LargeCustomDictionary `hcl:"large_custom_dictionary,block"`
	// Regex: optional
	Regex *Regex `hcl:"regex,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleDataLossPreventionStoredInfoTypeAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_data_loss_prevention_stored_info_type.
func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gdlpsit.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_data_loss_prevention_stored_info_type.
func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdlpsit.ref.Append("display_name"))
}

// Id returns a reference to field id of google_data_loss_prevention_stored_info_type.
func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdlpsit.ref.Append("id"))
}

// Name returns a reference to field name of google_data_loss_prevention_stored_info_type.
func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdlpsit.ref.Append("name"))
}

// Parent returns a reference to field parent of google_data_loss_prevention_stored_info_type.
func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gdlpsit.ref.Append("parent"))
}

// StoredInfoTypeId returns a reference to field stored_info_type_id of google_data_loss_prevention_stored_info_type.
func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) StoredInfoTypeId() terra.StringValue {
	return terra.ReferenceAsString(gdlpsit.ref.Append("stored_info_type_id"))
}

func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Dictionary() terra.ListValue[DictionaryAttributes] {
	return terra.ReferenceAsList[DictionaryAttributes](gdlpsit.ref.Append("dictionary"))
}

func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) LargeCustomDictionary() terra.ListValue[LargeCustomDictionaryAttributes] {
	return terra.ReferenceAsList[LargeCustomDictionaryAttributes](gdlpsit.ref.Append("large_custom_dictionary"))
}

func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Regex() terra.ListValue[RegexAttributes] {
	return terra.ReferenceAsList[RegexAttributes](gdlpsit.ref.Append("regex"))
}

func (gdlpsit googleDataLossPreventionStoredInfoTypeAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdlpsit.ref.Append("timeouts"))
}

type googleDataLossPreventionStoredInfoTypeState struct {
	Description           string                       `json:"description"`
	DisplayName           string                       `json:"display_name"`
	Id                    string                       `json:"id"`
	Name                  string                       `json:"name"`
	Parent                string                       `json:"parent"`
	StoredInfoTypeId      string                       `json:"stored_info_type_id"`
	Dictionary            []DictionaryState            `json:"dictionary"`
	LargeCustomDictionary []LargeCustomDictionaryState `json:"large_custom_dictionary"`
	Regex                 []RegexState                 `json:"regex"`
	Timeouts              *TimeoutsState               `json:"timeouts"`
}
