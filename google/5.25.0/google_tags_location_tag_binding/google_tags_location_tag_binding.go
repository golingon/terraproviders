// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_tags_location_tag_binding

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_tags_location_tag_binding.
type Resource struct {
	Name      string
	Args      Args
	state     *googleTagsLocationTagBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gtltb *Resource) Type() string {
	return "google_tags_location_tag_binding"
}

// LocalName returns the local name for [Resource].
func (gtltb *Resource) LocalName() string {
	return gtltb.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gtltb *Resource) Configuration() interface{} {
	return gtltb.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gtltb *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gtltb)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gtltb *Resource) Dependencies() terra.Dependencies {
	return gtltb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gtltb *Resource) LifecycleManagement() *terra.Lifecycle {
	return gtltb.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gtltb *Resource) Attributes() googleTagsLocationTagBindingAttributes {
	return googleTagsLocationTagBindingAttributes{ref: terra.ReferenceResource(gtltb)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gtltb *Resource) ImportState(state io.Reader) error {
	gtltb.state = &googleTagsLocationTagBindingState{}
	if err := json.NewDecoder(state).Decode(gtltb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gtltb.Type(), gtltb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gtltb *Resource) State() (*googleTagsLocationTagBindingState, bool) {
	return gtltb.state, gtltb.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gtltb *Resource) StateMust() *googleTagsLocationTagBindingState {
	if gtltb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gtltb.Type(), gtltb.LocalName()))
	}
	return gtltb.state
}

// Args contains the configurations for google_tags_location_tag_binding.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// TagValue: string, required
	TagValue terra.StringValue `hcl:"tag_value,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleTagsLocationTagBindingAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_tags_location_tag_binding.
func (gtltb googleTagsLocationTagBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gtltb.ref.Append("id"))
}

// Location returns a reference to field location of google_tags_location_tag_binding.
func (gtltb googleTagsLocationTagBindingAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gtltb.ref.Append("location"))
}

// Name returns a reference to field name of google_tags_location_tag_binding.
func (gtltb googleTagsLocationTagBindingAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gtltb.ref.Append("name"))
}

// Parent returns a reference to field parent of google_tags_location_tag_binding.
func (gtltb googleTagsLocationTagBindingAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gtltb.ref.Append("parent"))
}

// TagValue returns a reference to field tag_value of google_tags_location_tag_binding.
func (gtltb googleTagsLocationTagBindingAttributes) TagValue() terra.StringValue {
	return terra.ReferenceAsString(gtltb.ref.Append("tag_value"))
}

func (gtltb googleTagsLocationTagBindingAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gtltb.ref.Append("timeouts"))
}

type googleTagsLocationTagBindingState struct {
	Id       string         `json:"id"`
	Location string         `json:"location"`
	Name     string         `json:"name"`
	Parent   string         `json:"parent"`
	TagValue string         `json:"tag_value"`
	Timeouts *TimeoutsState `json:"timeouts"`
}
