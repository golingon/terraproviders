// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_router_status

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataBestRoutesAttributes struct {
	ref terra.Reference
}

func (br DataBestRoutesAttributes) InternalRef() (terra.Reference, error) {
	return br.ref, nil
}

func (br DataBestRoutesAttributes) InternalWithRef(ref terra.Reference) DataBestRoutesAttributes {
	return DataBestRoutesAttributes{ref: ref}
}

func (br DataBestRoutesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return br.ref.InternalTokens()
}

func (br DataBestRoutesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("description"))
}

func (br DataBestRoutesAttributes) DestRange() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("dest_range"))
}

func (br DataBestRoutesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("name"))
}

func (br DataBestRoutesAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("network"))
}

func (br DataBestRoutesAttributes) NextHopGateway() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_gateway"))
}

func (br DataBestRoutesAttributes) NextHopIlb() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_ilb"))
}

func (br DataBestRoutesAttributes) NextHopInstance() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_instance"))
}

func (br DataBestRoutesAttributes) NextHopInstanceZone() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_instance_zone"))
}

func (br DataBestRoutesAttributes) NextHopIp() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_ip"))
}

func (br DataBestRoutesAttributes) NextHopNetwork() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_network"))
}

func (br DataBestRoutesAttributes) NextHopVpnTunnel() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("next_hop_vpn_tunnel"))
}

func (br DataBestRoutesAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(br.ref.Append("priority"))
}

func (br DataBestRoutesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("project"))
}

func (br DataBestRoutesAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(br.ref.Append("self_link"))
}

func (br DataBestRoutesAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](br.ref.Append("tags"))
}

type DataBestRoutesForRouterAttributes struct {
	ref terra.Reference
}

func (brfr DataBestRoutesForRouterAttributes) InternalRef() (terra.Reference, error) {
	return brfr.ref, nil
}

func (brfr DataBestRoutesForRouterAttributes) InternalWithRef(ref terra.Reference) DataBestRoutesForRouterAttributes {
	return DataBestRoutesForRouterAttributes{ref: ref}
}

func (brfr DataBestRoutesForRouterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return brfr.ref.InternalTokens()
}

func (brfr DataBestRoutesForRouterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("description"))
}

func (brfr DataBestRoutesForRouterAttributes) DestRange() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("dest_range"))
}

func (brfr DataBestRoutesForRouterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("name"))
}

func (brfr DataBestRoutesForRouterAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("network"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopGateway() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_gateway"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopIlb() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_ilb"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopInstance() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_instance"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopInstanceZone() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_instance_zone"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopIp() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_ip"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopNetwork() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_network"))
}

func (brfr DataBestRoutesForRouterAttributes) NextHopVpnTunnel() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("next_hop_vpn_tunnel"))
}

func (brfr DataBestRoutesForRouterAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(brfr.ref.Append("priority"))
}

func (brfr DataBestRoutesForRouterAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("project"))
}

func (brfr DataBestRoutesForRouterAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(brfr.ref.Append("self_link"))
}

func (brfr DataBestRoutesForRouterAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](brfr.ref.Append("tags"))
}

type DataBestRoutesState struct {
	Description         string   `json:"description"`
	DestRange           string   `json:"dest_range"`
	Name                string   `json:"name"`
	Network             string   `json:"network"`
	NextHopGateway      string   `json:"next_hop_gateway"`
	NextHopIlb          string   `json:"next_hop_ilb"`
	NextHopInstance     string   `json:"next_hop_instance"`
	NextHopInstanceZone string   `json:"next_hop_instance_zone"`
	NextHopIp           string   `json:"next_hop_ip"`
	NextHopNetwork      string   `json:"next_hop_network"`
	NextHopVpnTunnel    string   `json:"next_hop_vpn_tunnel"`
	Priority            float64  `json:"priority"`
	Project             string   `json:"project"`
	SelfLink            string   `json:"self_link"`
	Tags                []string `json:"tags"`
}

type DataBestRoutesForRouterState struct {
	Description         string   `json:"description"`
	DestRange           string   `json:"dest_range"`
	Name                string   `json:"name"`
	Network             string   `json:"network"`
	NextHopGateway      string   `json:"next_hop_gateway"`
	NextHopIlb          string   `json:"next_hop_ilb"`
	NextHopInstance     string   `json:"next_hop_instance"`
	NextHopInstanceZone string   `json:"next_hop_instance_zone"`
	NextHopIp           string   `json:"next_hop_ip"`
	NextHopNetwork      string   `json:"next_hop_network"`
	NextHopVpnTunnel    string   `json:"next_hop_vpn_tunnel"`
	Priority            float64  `json:"priority"`
	Project             string   `json:"project"`
	SelfLink            string   `json:"self_link"`
	Tags                []string `json:"tags"`
}
