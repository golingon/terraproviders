// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_run_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataMetadataAttributes struct {
	ref terra.Reference
}

func (m DataMetadataAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataMetadataAttributes) InternalWithRef(ref terra.Reference) DataMetadataAttributes {
	return DataMetadataAttributes{ref: ref}
}

func (m DataMetadataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataMetadataAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("annotations"))
}

func (m DataMetadataAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("effective_annotations"))
}

func (m DataMetadataAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("effective_labels"))
}

func (m DataMetadataAttributes) Generation() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("generation"))
}

func (m DataMetadataAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("labels"))
}

func (m DataMetadataAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("namespace"))
}

func (m DataMetadataAttributes) ResourceVersion() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("resource_version"))
}

func (m DataMetadataAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("self_link"))
}

func (m DataMetadataAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("terraform_labels"))
}

func (m DataMetadataAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("uid"))
}

type DataStatusAttributes struct {
	ref terra.Reference
}

func (s DataStatusAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataStatusAttributes) InternalWithRef(ref terra.Reference) DataStatusAttributes {
	return DataStatusAttributes{ref: ref}
}

func (s DataStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataStatusAttributes) LatestCreatedRevisionName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("latest_created_revision_name"))
}

func (s DataStatusAttributes) LatestReadyRevisionName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("latest_ready_revision_name"))
}

func (s DataStatusAttributes) ObservedGeneration() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("observed_generation"))
}

func (s DataStatusAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("url"))
}

func (s DataStatusAttributes) Conditions() terra.ListValue[DataStatusConditionsAttributes] {
	return terra.ReferenceAsList[DataStatusConditionsAttributes](s.ref.Append("conditions"))
}

func (s DataStatusAttributes) Traffic() terra.ListValue[DataStatusTrafficAttributes] {
	return terra.ReferenceAsList[DataStatusTrafficAttributes](s.ref.Append("traffic"))
}

type DataStatusConditionsAttributes struct {
	ref terra.Reference
}

func (c DataStatusConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataStatusConditionsAttributes) InternalWithRef(ref terra.Reference) DataStatusConditionsAttributes {
	return DataStatusConditionsAttributes{ref: ref}
}

func (c DataStatusConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataStatusConditionsAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("message"))
}

func (c DataStatusConditionsAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("reason"))
}

func (c DataStatusConditionsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("status"))
}

func (c DataStatusConditionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("type"))
}

type DataStatusTrafficAttributes struct {
	ref terra.Reference
}

func (t DataStatusTrafficAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataStatusTrafficAttributes) InternalWithRef(ref terra.Reference) DataStatusTrafficAttributes {
	return DataStatusTrafficAttributes{ref: ref}
}

func (t DataStatusTrafficAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataStatusTrafficAttributes) LatestRevision() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("latest_revision"))
}

func (t DataStatusTrafficAttributes) Percent() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("percent"))
}

func (t DataStatusTrafficAttributes) RevisionName() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("revision_name"))
}

func (t DataStatusTrafficAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("tag"))
}

func (t DataStatusTrafficAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("url"))
}

type DataTemplateAttributes struct {
	ref terra.Reference
}

func (t DataTemplateAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTemplateAttributes) InternalWithRef(ref terra.Reference) DataTemplateAttributes {
	return DataTemplateAttributes{ref: ref}
}

func (t DataTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTemplateAttributes) Metadata() terra.ListValue[DataTemplateMetadataAttributes] {
	return terra.ReferenceAsList[DataTemplateMetadataAttributes](t.ref.Append("metadata"))
}

func (t DataTemplateAttributes) Spec() terra.ListValue[DataTemplateSpecAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecAttributes](t.ref.Append("spec"))
}

type DataTemplateMetadataAttributes struct {
	ref terra.Reference
}

func (m DataTemplateMetadataAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataTemplateMetadataAttributes) InternalWithRef(ref terra.Reference) DataTemplateMetadataAttributes {
	return DataTemplateMetadataAttributes{ref: ref}
}

func (m DataTemplateMetadataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataTemplateMetadataAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("annotations"))
}

func (m DataTemplateMetadataAttributes) Generation() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("generation"))
}

func (m DataTemplateMetadataAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](m.ref.Append("labels"))
}

func (m DataTemplateMetadataAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("name"))
}

func (m DataTemplateMetadataAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("namespace"))
}

func (m DataTemplateMetadataAttributes) ResourceVersion() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("resource_version"))
}

func (m DataTemplateMetadataAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("self_link"))
}

func (m DataTemplateMetadataAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("uid"))
}

type DataTemplateSpecAttributes struct {
	ref terra.Reference
}

func (s DataTemplateSpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataTemplateSpecAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecAttributes {
	return DataTemplateSpecAttributes{ref: ref}
}

func (s DataTemplateSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataTemplateSpecAttributes) ContainerConcurrency() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("container_concurrency"))
}

func (s DataTemplateSpecAttributes) ServiceAccountName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("service_account_name"))
}

func (s DataTemplateSpecAttributes) ServingState() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("serving_state"))
}

func (s DataTemplateSpecAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("timeout_seconds"))
}

func (s DataTemplateSpecAttributes) Containers() terra.ListValue[DataTemplateSpecContainersAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersAttributes](s.ref.Append("containers"))
}

func (s DataTemplateSpecAttributes) Volumes() terra.ListValue[DataTemplateSpecVolumesAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecVolumesAttributes](s.ref.Append("volumes"))
}

type DataTemplateSpecContainersAttributes struct {
	ref terra.Reference
}

func (c DataTemplateSpecContainersAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataTemplateSpecContainersAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersAttributes {
	return DataTemplateSpecContainersAttributes{ref: ref}
}

func (c DataTemplateSpecContainersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataTemplateSpecContainersAttributes) Args() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("args"))
}

func (c DataTemplateSpecContainersAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("command"))
}

func (c DataTemplateSpecContainersAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image"))
}

func (c DataTemplateSpecContainersAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DataTemplateSpecContainersAttributes) WorkingDir() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("working_dir"))
}

func (c DataTemplateSpecContainersAttributes) Env() terra.SetValue[DataTemplateSpecContainersEnvAttributes] {
	return terra.ReferenceAsSet[DataTemplateSpecContainersEnvAttributes](c.ref.Append("env"))
}

func (c DataTemplateSpecContainersAttributes) EnvFrom() terra.ListValue[DataTemplateSpecContainersEnvFromAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersEnvFromAttributes](c.ref.Append("env_from"))
}

func (c DataTemplateSpecContainersAttributes) LivenessProbe() terra.ListValue[DataTemplateSpecContainersLivenessProbeAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersLivenessProbeAttributes](c.ref.Append("liveness_probe"))
}

func (c DataTemplateSpecContainersAttributes) Ports() terra.ListValue[DataTemplateSpecContainersPortsAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersPortsAttributes](c.ref.Append("ports"))
}

func (c DataTemplateSpecContainersAttributes) Resources() terra.ListValue[DataTemplateSpecContainersResourcesAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersResourcesAttributes](c.ref.Append("resources"))
}

func (c DataTemplateSpecContainersAttributes) StartupProbe() terra.ListValue[DataTemplateSpecContainersStartupProbeAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersStartupProbeAttributes](c.ref.Append("startup_probe"))
}

func (c DataTemplateSpecContainersAttributes) VolumeMounts() terra.ListValue[DataTemplateSpecContainersVolumeMountsAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecContainersVolumeMountsAttributes](c.ref.Append("volume_mounts"))
}

type DataTemplateSpecContainersEnvAttributes struct {
	ref terra.Reference
}

func (e DataTemplateSpecContainersEnvAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataTemplateSpecContainersEnvAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersEnvAttributes {
	return DataTemplateSpecContainersEnvAttributes{ref: ref}
}

func (e DataTemplateSpecContainersEnvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataTemplateSpecContainersEnvAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataTemplateSpecContainersEnvAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

func (e DataTemplateSpecContainersEnvAttributes) ValueFrom() terra.ListValue[DataTemplateSpec1Ea42B41Attributes] {
	return terra.ReferenceAsList[DataTemplateSpec1Ea42B41Attributes](e.ref.Append("value_from"))
}

type DataTemplateSpec1Ea42B41Attributes struct {
	ref terra.Reference
}

func (vf DataTemplateSpec1Ea42B41Attributes) InternalRef() (terra.Reference, error) {
	return vf.ref, nil
}

func (vf DataTemplateSpec1Ea42B41Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpec1Ea42B41Attributes {
	return DataTemplateSpec1Ea42B41Attributes{ref: ref}
}

func (vf DataTemplateSpec1Ea42B41Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return vf.ref.InternalTokens()
}

func (vf DataTemplateSpec1Ea42B41Attributes) SecretKeyRef() terra.ListValue[DataTemplateSpecEe7Fd6E1Attributes] {
	return terra.ReferenceAsList[DataTemplateSpecEe7Fd6E1Attributes](vf.ref.Append("secret_key_ref"))
}

type DataTemplateSpecEe7Fd6E1Attributes struct {
	ref terra.Reference
}

func (skr DataTemplateSpecEe7Fd6E1Attributes) InternalRef() (terra.Reference, error) {
	return skr.ref, nil
}

func (skr DataTemplateSpecEe7Fd6E1Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpecEe7Fd6E1Attributes {
	return DataTemplateSpecEe7Fd6E1Attributes{ref: ref}
}

func (skr DataTemplateSpecEe7Fd6E1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return skr.ref.InternalTokens()
}

func (skr DataTemplateSpecEe7Fd6E1Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(skr.ref.Append("key"))
}

func (skr DataTemplateSpecEe7Fd6E1Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(skr.ref.Append("name"))
}

type DataTemplateSpecContainersEnvFromAttributes struct {
	ref terra.Reference
}

func (ef DataTemplateSpecContainersEnvFromAttributes) InternalRef() (terra.Reference, error) {
	return ef.ref, nil
}

func (ef DataTemplateSpecContainersEnvFromAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersEnvFromAttributes {
	return DataTemplateSpecContainersEnvFromAttributes{ref: ref}
}

func (ef DataTemplateSpecContainersEnvFromAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ef.ref.InternalTokens()
}

func (ef DataTemplateSpecContainersEnvFromAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(ef.ref.Append("prefix"))
}

func (ef DataTemplateSpecContainersEnvFromAttributes) ConfigMapRef() terra.ListValue[DataTemplateSpec364D790CAttributes] {
	return terra.ReferenceAsList[DataTemplateSpec364D790CAttributes](ef.ref.Append("config_map_ref"))
}

func (ef DataTemplateSpecContainersEnvFromAttributes) SecretRef() terra.ListValue[DataTemplateSpec1532Eb36Attributes] {
	return terra.ReferenceAsList[DataTemplateSpec1532Eb36Attributes](ef.ref.Append("secret_ref"))
}

type DataTemplateSpec364D790CAttributes struct {
	ref terra.Reference
}

func (cmr DataTemplateSpec364D790CAttributes) InternalRef() (terra.Reference, error) {
	return cmr.ref, nil
}

func (cmr DataTemplateSpec364D790CAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpec364D790CAttributes {
	return DataTemplateSpec364D790CAttributes{ref: ref}
}

func (cmr DataTemplateSpec364D790CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmr.ref.InternalTokens()
}

func (cmr DataTemplateSpec364D790CAttributes) Optional() terra.BoolValue {
	return terra.ReferenceAsBool(cmr.ref.Append("optional"))
}

func (cmr DataTemplateSpec364D790CAttributes) LocalObjectReference() terra.ListValue[DataTemplateSpecF5F9B7D9Attributes] {
	return terra.ReferenceAsList[DataTemplateSpecF5F9B7D9Attributes](cmr.ref.Append("local_object_reference"))
}

type DataTemplateSpecF5F9B7D9Attributes struct {
	ref terra.Reference
}

func (lor DataTemplateSpecF5F9B7D9Attributes) InternalRef() (terra.Reference, error) {
	return lor.ref, nil
}

func (lor DataTemplateSpecF5F9B7D9Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpecF5F9B7D9Attributes {
	return DataTemplateSpecF5F9B7D9Attributes{ref: ref}
}

func (lor DataTemplateSpecF5F9B7D9Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return lor.ref.InternalTokens()
}

func (lor DataTemplateSpecF5F9B7D9Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lor.ref.Append("name"))
}

type DataTemplateSpec1532Eb36Attributes struct {
	ref terra.Reference
}

func (sr DataTemplateSpec1532Eb36Attributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr DataTemplateSpec1532Eb36Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpec1532Eb36Attributes {
	return DataTemplateSpec1532Eb36Attributes{ref: ref}
}

func (sr DataTemplateSpec1532Eb36Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr DataTemplateSpec1532Eb36Attributes) Optional() terra.BoolValue {
	return terra.ReferenceAsBool(sr.ref.Append("optional"))
}

func (sr DataTemplateSpec1532Eb36Attributes) LocalObjectReference() terra.ListValue[DataTemplateSpecF134D3F7Attributes] {
	return terra.ReferenceAsList[DataTemplateSpecF134D3F7Attributes](sr.ref.Append("local_object_reference"))
}

type DataTemplateSpecF134D3F7Attributes struct {
	ref terra.Reference
}

func (lor DataTemplateSpecF134D3F7Attributes) InternalRef() (terra.Reference, error) {
	return lor.ref, nil
}

func (lor DataTemplateSpecF134D3F7Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpecF134D3F7Attributes {
	return DataTemplateSpecF134D3F7Attributes{ref: ref}
}

func (lor DataTemplateSpecF134D3F7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return lor.ref.InternalTokens()
}

func (lor DataTemplateSpecF134D3F7Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lor.ref.Append("name"))
}

type DataTemplateSpecContainersLivenessProbeAttributes struct {
	ref terra.Reference
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersLivenessProbeAttributes {
	return DataTemplateSpecContainersLivenessProbeAttributes{ref: ref}
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("failure_threshold"))
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) InitialDelaySeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("initial_delay_seconds"))
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) PeriodSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("period_seconds"))
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("timeout_seconds"))
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) Grpc() terra.ListValue[DataTemplateSpec7Eb28A1FAttributes] {
	return terra.ReferenceAsList[DataTemplateSpec7Eb28A1FAttributes](lp.ref.Append("grpc"))
}

func (lp DataTemplateSpecContainersLivenessProbeAttributes) HttpGet() terra.ListValue[DataTemplateSpecEd9D52FeAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecEd9D52FeAttributes](lp.ref.Append("http_get"))
}

type DataTemplateSpec7Eb28A1FAttributes struct {
	ref terra.Reference
}

func (g DataTemplateSpec7Eb28A1FAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataTemplateSpec7Eb28A1FAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpec7Eb28A1FAttributes {
	return DataTemplateSpec7Eb28A1FAttributes{ref: ref}
}

func (g DataTemplateSpec7Eb28A1FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataTemplateSpec7Eb28A1FAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("port"))
}

func (g DataTemplateSpec7Eb28A1FAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("service"))
}

type DataTemplateSpecEd9D52FeAttributes struct {
	ref terra.Reference
}

func (hg DataTemplateSpecEd9D52FeAttributes) InternalRef() (terra.Reference, error) {
	return hg.ref, nil
}

func (hg DataTemplateSpecEd9D52FeAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecEd9D52FeAttributes {
	return DataTemplateSpecEd9D52FeAttributes{ref: ref}
}

func (hg DataTemplateSpecEd9D52FeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hg.ref.InternalTokens()
}

func (hg DataTemplateSpecEd9D52FeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hg.ref.Append("path"))
}

func (hg DataTemplateSpecEd9D52FeAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hg.ref.Append("port"))
}

func (hg DataTemplateSpecEd9D52FeAttributes) HttpHeaders() terra.ListValue[DataTemplateSpec043B4C66Attributes] {
	return terra.ReferenceAsList[DataTemplateSpec043B4C66Attributes](hg.ref.Append("http_headers"))
}

type DataTemplateSpec043B4C66Attributes struct {
	ref terra.Reference
}

func (hh DataTemplateSpec043B4C66Attributes) InternalRef() (terra.Reference, error) {
	return hh.ref, nil
}

func (hh DataTemplateSpec043B4C66Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpec043B4C66Attributes {
	return DataTemplateSpec043B4C66Attributes{ref: ref}
}

func (hh DataTemplateSpec043B4C66Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hh.ref.InternalTokens()
}

func (hh DataTemplateSpec043B4C66Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("name"))
}

func (hh DataTemplateSpec043B4C66Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("value"))
}

type DataTemplateSpecContainersPortsAttributes struct {
	ref terra.Reference
}

func (p DataTemplateSpecContainersPortsAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataTemplateSpecContainersPortsAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersPortsAttributes {
	return DataTemplateSpecContainersPortsAttributes{ref: ref}
}

func (p DataTemplateSpecContainersPortsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataTemplateSpecContainersPortsAttributes) ContainerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("container_port"))
}

func (p DataTemplateSpecContainersPortsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p DataTemplateSpecContainersPortsAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("protocol"))
}

type DataTemplateSpecContainersResourcesAttributes struct {
	ref terra.Reference
}

func (r DataTemplateSpecContainersResourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataTemplateSpecContainersResourcesAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersResourcesAttributes {
	return DataTemplateSpecContainersResourcesAttributes{ref: ref}
}

func (r DataTemplateSpecContainersResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataTemplateSpecContainersResourcesAttributes) Limits() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("limits"))
}

func (r DataTemplateSpecContainersResourcesAttributes) Requests() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("requests"))
}

type DataTemplateSpecContainersStartupProbeAttributes struct {
	ref terra.Reference
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersStartupProbeAttributes {
	return DataTemplateSpecContainersStartupProbeAttributes{ref: ref}
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("failure_threshold"))
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) InitialDelaySeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("initial_delay_seconds"))
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) PeriodSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("period_seconds"))
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("timeout_seconds"))
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) Grpc() terra.ListValue[DataTemplateSpecA50Df3C6Attributes] {
	return terra.ReferenceAsList[DataTemplateSpecA50Df3C6Attributes](sp.ref.Append("grpc"))
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) HttpGet() terra.ListValue[DataTemplateSpec46Ff3E99Attributes] {
	return terra.ReferenceAsList[DataTemplateSpec46Ff3E99Attributes](sp.ref.Append("http_get"))
}

func (sp DataTemplateSpecContainersStartupProbeAttributes) TcpSocket() terra.ListValue[DataTemplateSpec21E69F43Attributes] {
	return terra.ReferenceAsList[DataTemplateSpec21E69F43Attributes](sp.ref.Append("tcp_socket"))
}

type DataTemplateSpecA50Df3C6Attributes struct {
	ref terra.Reference
}

func (g DataTemplateSpecA50Df3C6Attributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataTemplateSpecA50Df3C6Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpecA50Df3C6Attributes {
	return DataTemplateSpecA50Df3C6Attributes{ref: ref}
}

func (g DataTemplateSpecA50Df3C6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataTemplateSpecA50Df3C6Attributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("port"))
}

func (g DataTemplateSpecA50Df3C6Attributes) Service() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("service"))
}

type DataTemplateSpec46Ff3E99Attributes struct {
	ref terra.Reference
}

func (hg DataTemplateSpec46Ff3E99Attributes) InternalRef() (terra.Reference, error) {
	return hg.ref, nil
}

func (hg DataTemplateSpec46Ff3E99Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpec46Ff3E99Attributes {
	return DataTemplateSpec46Ff3E99Attributes{ref: ref}
}

func (hg DataTemplateSpec46Ff3E99Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hg.ref.InternalTokens()
}

func (hg DataTemplateSpec46Ff3E99Attributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hg.ref.Append("path"))
}

func (hg DataTemplateSpec46Ff3E99Attributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hg.ref.Append("port"))
}

func (hg DataTemplateSpec46Ff3E99Attributes) HttpHeaders() terra.ListValue[DataTemplateSpec2A4Ec41BAttributes] {
	return terra.ReferenceAsList[DataTemplateSpec2A4Ec41BAttributes](hg.ref.Append("http_headers"))
}

type DataTemplateSpec2A4Ec41BAttributes struct {
	ref terra.Reference
}

func (hh DataTemplateSpec2A4Ec41BAttributes) InternalRef() (terra.Reference, error) {
	return hh.ref, nil
}

func (hh DataTemplateSpec2A4Ec41BAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpec2A4Ec41BAttributes {
	return DataTemplateSpec2A4Ec41BAttributes{ref: ref}
}

func (hh DataTemplateSpec2A4Ec41BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hh.ref.InternalTokens()
}

func (hh DataTemplateSpec2A4Ec41BAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("name"))
}

func (hh DataTemplateSpec2A4Ec41BAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("value"))
}

type DataTemplateSpec21E69F43Attributes struct {
	ref terra.Reference
}

func (ts DataTemplateSpec21E69F43Attributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts DataTemplateSpec21E69F43Attributes) InternalWithRef(ref terra.Reference) DataTemplateSpec21E69F43Attributes {
	return DataTemplateSpec21E69F43Attributes{ref: ref}
}

func (ts DataTemplateSpec21E69F43Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts DataTemplateSpec21E69F43Attributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("port"))
}

type DataTemplateSpecContainersVolumeMountsAttributes struct {
	ref terra.Reference
}

func (vm DataTemplateSpecContainersVolumeMountsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm DataTemplateSpecContainersVolumeMountsAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecContainersVolumeMountsAttributes {
	return DataTemplateSpecContainersVolumeMountsAttributes{ref: ref}
}

func (vm DataTemplateSpecContainersVolumeMountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm DataTemplateSpecContainersVolumeMountsAttributes) MountPath() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("mount_path"))
}

func (vm DataTemplateSpecContainersVolumeMountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("name"))
}

type DataTemplateSpecVolumesAttributes struct {
	ref terra.Reference
}

func (v DataTemplateSpecVolumesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataTemplateSpecVolumesAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecVolumesAttributes {
	return DataTemplateSpecVolumesAttributes{ref: ref}
}

func (v DataTemplateSpecVolumesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataTemplateSpecVolumesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataTemplateSpecVolumesAttributes) Secret() terra.ListValue[DataTemplateSpecVolumesSecretAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecVolumesSecretAttributes](v.ref.Append("secret"))
}

type DataTemplateSpecVolumesSecretAttributes struct {
	ref terra.Reference
}

func (s DataTemplateSpecVolumesSecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataTemplateSpecVolumesSecretAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecVolumesSecretAttributes {
	return DataTemplateSpecVolumesSecretAttributes{ref: ref}
}

func (s DataTemplateSpecVolumesSecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataTemplateSpecVolumesSecretAttributes) DefaultMode() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("default_mode"))
}

func (s DataTemplateSpecVolumesSecretAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

func (s DataTemplateSpecVolumesSecretAttributes) Items() terra.ListValue[DataTemplateSpecF0A964DcAttributes] {
	return terra.ReferenceAsList[DataTemplateSpecF0A964DcAttributes](s.ref.Append("items"))
}

type DataTemplateSpecF0A964DcAttributes struct {
	ref terra.Reference
}

func (i DataTemplateSpecF0A964DcAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataTemplateSpecF0A964DcAttributes) InternalWithRef(ref terra.Reference) DataTemplateSpecF0A964DcAttributes {
	return DataTemplateSpecF0A964DcAttributes{ref: ref}
}

func (i DataTemplateSpecF0A964DcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataTemplateSpecF0A964DcAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("key"))
}

func (i DataTemplateSpecF0A964DcAttributes) Mode() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("mode"))
}

func (i DataTemplateSpecF0A964DcAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("path"))
}

type DataTrafficAttributes struct {
	ref terra.Reference
}

func (t DataTrafficAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTrafficAttributes) InternalWithRef(ref terra.Reference) DataTrafficAttributes {
	return DataTrafficAttributes{ref: ref}
}

func (t DataTrafficAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTrafficAttributes) LatestRevision() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("latest_revision"))
}

func (t DataTrafficAttributes) Percent() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("percent"))
}

func (t DataTrafficAttributes) RevisionName() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("revision_name"))
}

func (t DataTrafficAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("tag"))
}

func (t DataTrafficAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("url"))
}

type DataMetadataState struct {
	Annotations          map[string]string `json:"annotations"`
	EffectiveAnnotations map[string]string `json:"effective_annotations"`
	EffectiveLabels      map[string]string `json:"effective_labels"`
	Generation           float64           `json:"generation"`
	Labels               map[string]string `json:"labels"`
	Namespace            string            `json:"namespace"`
	ResourceVersion      string            `json:"resource_version"`
	SelfLink             string            `json:"self_link"`
	TerraformLabels      map[string]string `json:"terraform_labels"`
	Uid                  string            `json:"uid"`
}

type DataStatusState struct {
	LatestCreatedRevisionName string                      `json:"latest_created_revision_name"`
	LatestReadyRevisionName   string                      `json:"latest_ready_revision_name"`
	ObservedGeneration        float64                     `json:"observed_generation"`
	Url                       string                      `json:"url"`
	Conditions                []DataStatusConditionsState `json:"conditions"`
	Traffic                   []DataStatusTrafficState    `json:"traffic"`
}

type DataStatusConditionsState struct {
	Message string `json:"message"`
	Reason  string `json:"reason"`
	Status  string `json:"status"`
	Type    string `json:"type"`
}

type DataStatusTrafficState struct {
	LatestRevision bool    `json:"latest_revision"`
	Percent        float64 `json:"percent"`
	RevisionName   string  `json:"revision_name"`
	Tag            string  `json:"tag"`
	Url            string  `json:"url"`
}

type DataTemplateState struct {
	Metadata []DataTemplateMetadataState `json:"metadata"`
	Spec     []DataTemplateSpecState     `json:"spec"`
}

type DataTemplateMetadataState struct {
	Annotations     map[string]string `json:"annotations"`
	Generation      float64           `json:"generation"`
	Labels          map[string]string `json:"labels"`
	Name            string            `json:"name"`
	Namespace       string            `json:"namespace"`
	ResourceVersion string            `json:"resource_version"`
	SelfLink        string            `json:"self_link"`
	Uid             string            `json:"uid"`
}

type DataTemplateSpecState struct {
	ContainerConcurrency float64                           `json:"container_concurrency"`
	ServiceAccountName   string                            `json:"service_account_name"`
	ServingState         string                            `json:"serving_state"`
	TimeoutSeconds       float64                           `json:"timeout_seconds"`
	Containers           []DataTemplateSpecContainersState `json:"containers"`
	Volumes              []DataTemplateSpecVolumesState    `json:"volumes"`
}

type DataTemplateSpecContainersState struct {
	Args          []string                                       `json:"args"`
	Command       []string                                       `json:"command"`
	Image         string                                         `json:"image"`
	Name          string                                         `json:"name"`
	WorkingDir    string                                         `json:"working_dir"`
	Env           []DataTemplateSpecContainersEnvState           `json:"env"`
	EnvFrom       []DataTemplateSpecContainersEnvFromState       `json:"env_from"`
	LivenessProbe []DataTemplateSpecContainersLivenessProbeState `json:"liveness_probe"`
	Ports         []DataTemplateSpecContainersPortsState         `json:"ports"`
	Resources     []DataTemplateSpecContainersResourcesState     `json:"resources"`
	StartupProbe  []DataTemplateSpecContainersStartupProbeState  `json:"startup_probe"`
	VolumeMounts  []DataTemplateSpecContainersVolumeMountsState  `json:"volume_mounts"`
}

type DataTemplateSpecContainersEnvState struct {
	Name      string                          `json:"name"`
	Value     string                          `json:"value"`
	ValueFrom []DataTemplateSpec1Ea42B41State `json:"value_from"`
}

type DataTemplateSpec1Ea42B41State struct {
	SecretKeyRef []DataTemplateSpecEe7Fd6E1State `json:"secret_key_ref"`
}

type DataTemplateSpecEe7Fd6E1State struct {
	Key  string `json:"key"`
	Name string `json:"name"`
}

type DataTemplateSpecContainersEnvFromState struct {
	Prefix       string                          `json:"prefix"`
	ConfigMapRef []DataTemplateSpec364D790CState `json:"config_map_ref"`
	SecretRef    []DataTemplateSpec1532Eb36State `json:"secret_ref"`
}

type DataTemplateSpec364D790CState struct {
	Optional             bool                            `json:"optional"`
	LocalObjectReference []DataTemplateSpecF5F9B7D9State `json:"local_object_reference"`
}

type DataTemplateSpecF5F9B7D9State struct {
	Name string `json:"name"`
}

type DataTemplateSpec1532Eb36State struct {
	Optional             bool                            `json:"optional"`
	LocalObjectReference []DataTemplateSpecF134D3F7State `json:"local_object_reference"`
}

type DataTemplateSpecF134D3F7State struct {
	Name string `json:"name"`
}

type DataTemplateSpecContainersLivenessProbeState struct {
	FailureThreshold    float64                         `json:"failure_threshold"`
	InitialDelaySeconds float64                         `json:"initial_delay_seconds"`
	PeriodSeconds       float64                         `json:"period_seconds"`
	TimeoutSeconds      float64                         `json:"timeout_seconds"`
	Grpc                []DataTemplateSpec7Eb28A1FState `json:"grpc"`
	HttpGet             []DataTemplateSpecEd9D52FeState `json:"http_get"`
}

type DataTemplateSpec7Eb28A1FState struct {
	Port    float64 `json:"port"`
	Service string  `json:"service"`
}

type DataTemplateSpecEd9D52FeState struct {
	Path        string                          `json:"path"`
	Port        float64                         `json:"port"`
	HttpHeaders []DataTemplateSpec043B4C66State `json:"http_headers"`
}

type DataTemplateSpec043B4C66State struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataTemplateSpecContainersPortsState struct {
	ContainerPort float64 `json:"container_port"`
	Name          string  `json:"name"`
	Protocol      string  `json:"protocol"`
}

type DataTemplateSpecContainersResourcesState struct {
	Limits   map[string]string `json:"limits"`
	Requests map[string]string `json:"requests"`
}

type DataTemplateSpecContainersStartupProbeState struct {
	FailureThreshold    float64                         `json:"failure_threshold"`
	InitialDelaySeconds float64                         `json:"initial_delay_seconds"`
	PeriodSeconds       float64                         `json:"period_seconds"`
	TimeoutSeconds      float64                         `json:"timeout_seconds"`
	Grpc                []DataTemplateSpecA50Df3C6State `json:"grpc"`
	HttpGet             []DataTemplateSpec46Ff3E99State `json:"http_get"`
	TcpSocket           []DataTemplateSpec21E69F43State `json:"tcp_socket"`
}

type DataTemplateSpecA50Df3C6State struct {
	Port    float64 `json:"port"`
	Service string  `json:"service"`
}

type DataTemplateSpec46Ff3E99State struct {
	Path        string                          `json:"path"`
	Port        float64                         `json:"port"`
	HttpHeaders []DataTemplateSpec2A4Ec41BState `json:"http_headers"`
}

type DataTemplateSpec2A4Ec41BState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataTemplateSpec21E69F43State struct {
	Port float64 `json:"port"`
}

type DataTemplateSpecContainersVolumeMountsState struct {
	MountPath string `json:"mount_path"`
	Name      string `json:"name"`
}

type DataTemplateSpecVolumesState struct {
	Name   string                               `json:"name"`
	Secret []DataTemplateSpecVolumesSecretState `json:"secret"`
}

type DataTemplateSpecVolumesSecretState struct {
	DefaultMode float64                         `json:"default_mode"`
	SecretName  string                          `json:"secret_name"`
	Items       []DataTemplateSpecF0A964DcState `json:"items"`
}

type DataTemplateSpecF0A964DcState struct {
	Key  string  `json:"key"`
	Mode float64 `json:"mode"`
	Path string  `json:"path"`
}

type DataTrafficState struct {
	LatestRevision bool    `json:"latest_revision"`
	Percent        float64 `json:"percent"`
	RevisionName   string  `json:"revision_name"`
	Tag            string  `json:"tag"`
	Url            string  `json:"url"`
}
