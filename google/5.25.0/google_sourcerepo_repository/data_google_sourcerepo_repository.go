// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_sourcerepo_repository

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_sourcerepo_repository.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gsr *DataSource) DataSource() string {
	return "google_sourcerepo_repository"
}

// LocalName returns the local name for [DataSource].
func (gsr *DataSource) LocalName() string {
	return gsr.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gsr *DataSource) Configuration() interface{} {
	return gsr.Args
}

// Attributes returns the attributes for [DataSource].
func (gsr *DataSource) Attributes() dataGoogleSourcerepoRepositoryAttributes {
	return dataGoogleSourcerepoRepositoryAttributes{ref: terra.ReferenceDataSource(gsr)}
}

// DataArgs contains the configurations for google_sourcerepo_repository.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleSourcerepoRepositoryAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_sourcerepo_repository.
func (gsr dataGoogleSourcerepoRepositoryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsr.ref.Append("id"))
}

// Name returns a reference to field name of google_sourcerepo_repository.
func (gsr dataGoogleSourcerepoRepositoryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gsr.ref.Append("name"))
}

// Project returns a reference to field project of google_sourcerepo_repository.
func (gsr dataGoogleSourcerepoRepositoryAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gsr.ref.Append("project"))
}

// Size returns a reference to field size of google_sourcerepo_repository.
func (gsr dataGoogleSourcerepoRepositoryAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(gsr.ref.Append("size"))
}

// Url returns a reference to field url of google_sourcerepo_repository.
func (gsr dataGoogleSourcerepoRepositoryAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(gsr.ref.Append("url"))
}

func (gsr dataGoogleSourcerepoRepositoryAttributes) PubsubConfigs() terra.SetValue[DataPubsubConfigsAttributes] {
	return terra.ReferenceAsSet[DataPubsubConfigsAttributes](gsr.ref.Append("pubsub_configs"))
}
