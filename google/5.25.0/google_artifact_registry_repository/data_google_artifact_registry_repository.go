// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_artifact_registry_repository

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_artifact_registry_repository.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (garr *DataSource) DataSource() string {
	return "google_artifact_registry_repository"
}

// LocalName returns the local name for [DataSource].
func (garr *DataSource) LocalName() string {
	return garr.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (garr *DataSource) Configuration() interface{} {
	return garr.Args
}

// Attributes returns the attributes for [DataSource].
func (garr *DataSource) Attributes() dataGoogleArtifactRegistryRepositoryAttributes {
	return dataGoogleArtifactRegistryRepositoryAttributes{ref: terra.ReferenceDataSource(garr)}
}

// DataArgs contains the configurations for google_artifact_registry_repository.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// RepositoryId: string, required
	RepositoryId terra.StringValue `hcl:"repository_id,attr" validate:"required"`
}

type dataGoogleArtifactRegistryRepositoryAttributes struct {
	ref terra.Reference
}

// CleanupPolicyDryRun returns a reference to field cleanup_policy_dry_run of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) CleanupPolicyDryRun() terra.BoolValue {
	return terra.ReferenceAsBool(garr.ref.Append("cleanup_policy_dry_run"))
}

// CreateTime returns a reference to field create_time of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("create_time"))
}

// Description returns a reference to field description of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](garr.ref.Append("effective_labels"))
}

// Format returns a reference to field format of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Format() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("format"))
}

// Id returns a reference to field id of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("id"))
}

// KmsKeyName returns a reference to field kms_key_name of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("kms_key_name"))
}

// Labels returns a reference to field labels of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](garr.ref.Append("labels"))
}

// Location returns a reference to field location of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("location"))
}

// Mode returns a reference to field mode of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("mode"))
}

// Name returns a reference to field name of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("name"))
}

// Project returns a reference to field project of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("project"))
}

// RepositoryId returns a reference to field repository_id of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) RepositoryId() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("repository_id"))
}

// TerraformLabels returns a reference to field terraform_labels of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](garr.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_artifact_registry_repository.
func (garr dataGoogleArtifactRegistryRepositoryAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(garr.ref.Append("update_time"))
}

func (garr dataGoogleArtifactRegistryRepositoryAttributes) CleanupPolicies() terra.SetValue[DataCleanupPoliciesAttributes] {
	return terra.ReferenceAsSet[DataCleanupPoliciesAttributes](garr.ref.Append("cleanup_policies"))
}

func (garr dataGoogleArtifactRegistryRepositoryAttributes) DockerConfig() terra.ListValue[DataDockerConfigAttributes] {
	return terra.ReferenceAsList[DataDockerConfigAttributes](garr.ref.Append("docker_config"))
}

func (garr dataGoogleArtifactRegistryRepositoryAttributes) MavenConfig() terra.ListValue[DataMavenConfigAttributes] {
	return terra.ReferenceAsList[DataMavenConfigAttributes](garr.ref.Append("maven_config"))
}

func (garr dataGoogleArtifactRegistryRepositoryAttributes) RemoteRepositoryConfig() terra.ListValue[DataRemoteRepositoryConfigAttributes] {
	return terra.ReferenceAsList[DataRemoteRepositoryConfigAttributes](garr.ref.Append("remote_repository_config"))
}

func (garr dataGoogleArtifactRegistryRepositoryAttributes) VirtualRepositoryConfig() terra.ListValue[DataVirtualRepositoryConfigAttributes] {
	return terra.ReferenceAsList[DataVirtualRepositoryConfigAttributes](garr.ref.Append("virtual_repository_config"))
}
