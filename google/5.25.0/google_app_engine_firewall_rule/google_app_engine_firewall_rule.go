// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_app_engine_firewall_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_app_engine_firewall_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *googleAppEngineFirewallRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gaefr *Resource) Type() string {
	return "google_app_engine_firewall_rule"
}

// LocalName returns the local name for [Resource].
func (gaefr *Resource) LocalName() string {
	return gaefr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gaefr *Resource) Configuration() interface{} {
	return gaefr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gaefr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gaefr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gaefr *Resource) Dependencies() terra.Dependencies {
	return gaefr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gaefr *Resource) LifecycleManagement() *terra.Lifecycle {
	return gaefr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gaefr *Resource) Attributes() googleAppEngineFirewallRuleAttributes {
	return googleAppEngineFirewallRuleAttributes{ref: terra.ReferenceResource(gaefr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gaefr *Resource) ImportState(state io.Reader) error {
	gaefr.state = &googleAppEngineFirewallRuleState{}
	if err := json.NewDecoder(state).Decode(gaefr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gaefr.Type(), gaefr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gaefr *Resource) State() (*googleAppEngineFirewallRuleState, bool) {
	return gaefr.state, gaefr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gaefr *Resource) StateMust() *googleAppEngineFirewallRuleState {
	if gaefr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gaefr.Type(), gaefr.LocalName()))
	}
	return gaefr.state
}

// Args contains the configurations for google_app_engine_firewall_rule.
type Args struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SourceRange: string, required
	SourceRange terra.StringValue `hcl:"source_range,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleAppEngineFirewallRuleAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of google_app_engine_firewall_rule.
func (gaefr googleAppEngineFirewallRuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(gaefr.ref.Append("action"))
}

// Description returns a reference to field description of google_app_engine_firewall_rule.
func (gaefr googleAppEngineFirewallRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gaefr.ref.Append("description"))
}

// Id returns a reference to field id of google_app_engine_firewall_rule.
func (gaefr googleAppEngineFirewallRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gaefr.ref.Append("id"))
}

// Priority returns a reference to field priority of google_app_engine_firewall_rule.
func (gaefr googleAppEngineFirewallRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(gaefr.ref.Append("priority"))
}

// Project returns a reference to field project of google_app_engine_firewall_rule.
func (gaefr googleAppEngineFirewallRuleAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gaefr.ref.Append("project"))
}

// SourceRange returns a reference to field source_range of google_app_engine_firewall_rule.
func (gaefr googleAppEngineFirewallRuleAttributes) SourceRange() terra.StringValue {
	return terra.ReferenceAsString(gaefr.ref.Append("source_range"))
}

func (gaefr googleAppEngineFirewallRuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gaefr.ref.Append("timeouts"))
}

type googleAppEngineFirewallRuleState struct {
	Action      string         `json:"action"`
	Description string         `json:"description"`
	Id          string         `json:"id"`
	Priority    float64        `json:"priority"`
	Project     string         `json:"project"`
	SourceRange string         `json:"source_range"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
