// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_gke_backup_restore_plan

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type RestoreConfig struct {
	// AllNamespaces: bool, optional
	AllNamespaces terra.BoolValue `hcl:"all_namespaces,attr"`
	// ClusterResourceConflictPolicy: string, optional
	ClusterResourceConflictPolicy terra.StringValue `hcl:"cluster_resource_conflict_policy,attr"`
	// NamespacedResourceRestoreMode: string, optional
	NamespacedResourceRestoreMode terra.StringValue `hcl:"namespaced_resource_restore_mode,attr"`
	// NoNamespaces: bool, optional
	NoNamespaces terra.BoolValue `hcl:"no_namespaces,attr"`
	// VolumeDataRestorePolicy: string, optional
	VolumeDataRestorePolicy terra.StringValue `hcl:"volume_data_restore_policy,attr"`
	// RestoreConfigClusterResourceRestoreScope: optional
	ClusterResourceRestoreScope *RestoreConfigClusterResourceRestoreScope `hcl:"cluster_resource_restore_scope,block"`
	// RestoreConfigExcludedNamespaces: optional
	ExcludedNamespaces *RestoreConfigExcludedNamespaces `hcl:"excluded_namespaces,block"`
	// RestoreConfigSelectedApplications: optional
	SelectedApplications *RestoreConfigSelectedApplications `hcl:"selected_applications,block"`
	// RestoreConfigSelectedNamespaces: optional
	SelectedNamespaces *RestoreConfigSelectedNamespaces `hcl:"selected_namespaces,block"`
	// RestoreConfigTransformationRules: min=0
	TransformationRules []RestoreConfigTransformationRules `hcl:"transformation_rules,block" validate:"min=0"`
}

type RestoreConfigClusterResourceRestoreScope struct {
	// AllGroupKinds: bool, optional
	AllGroupKinds terra.BoolValue `hcl:"all_group_kinds,attr"`
	// NoGroupKinds: bool, optional
	NoGroupKinds terra.BoolValue `hcl:"no_group_kinds,attr"`
	// RestoreConfigClusterResourceRestoreScopeExcludedGroupKinds: min=0
	ExcludedGroupKinds []RestoreConfigClusterResourceRestoreScopeExcludedGroupKinds `hcl:"excluded_group_kinds,block" validate:"min=0"`
	// RestoreConfigClusterResourceRestoreScopeSelectedGroupKinds: min=0
	SelectedGroupKinds []RestoreConfigClusterResourceRestoreScopeSelectedGroupKinds `hcl:"selected_group_kinds,block" validate:"min=0"`
}

type RestoreConfigClusterResourceRestoreScopeExcludedGroupKinds struct {
	// ResourceGroup: string, optional
	ResourceGroup terra.StringValue `hcl:"resource_group,attr"`
	// ResourceKind: string, optional
	ResourceKind terra.StringValue `hcl:"resource_kind,attr"`
}

type RestoreConfigClusterResourceRestoreScopeSelectedGroupKinds struct {
	// ResourceGroup: string, optional
	ResourceGroup terra.StringValue `hcl:"resource_group,attr"`
	// ResourceKind: string, optional
	ResourceKind terra.StringValue `hcl:"resource_kind,attr"`
}

type RestoreConfigExcludedNamespaces struct {
	// Namespaces: list of string, required
	Namespaces terra.ListValue[terra.StringValue] `hcl:"namespaces,attr" validate:"required"`
}

type RestoreConfigSelectedApplications struct {
	// RestoreConfigSelectedApplicationsNamespacedNames: min=1
	NamespacedNames []RestoreConfigSelectedApplicationsNamespacedNames `hcl:"namespaced_names,block" validate:"min=1"`
}

type RestoreConfigSelectedApplicationsNamespacedNames struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Namespace: string, required
	Namespace terra.StringValue `hcl:"namespace,attr" validate:"required"`
}

type RestoreConfigSelectedNamespaces struct {
	// Namespaces: list of string, required
	Namespaces terra.ListValue[terra.StringValue] `hcl:"namespaces,attr" validate:"required"`
}

type RestoreConfigTransformationRules struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// RestoreConfigTransformationRulesFieldActions: min=1
	FieldActions []RestoreConfigTransformationRulesFieldActions `hcl:"field_actions,block" validate:"min=1"`
	// RestoreConfigTransformationRulesResourceFilter: optional
	ResourceFilter *RestoreConfigTransformationRulesResourceFilter `hcl:"resource_filter,block"`
}

type RestoreConfigTransformationRulesFieldActions struct {
	// FromPath: string, optional
	FromPath terra.StringValue `hcl:"from_path,attr"`
	// Op: string, required
	Op terra.StringValue `hcl:"op,attr" validate:"required"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RestoreConfigTransformationRulesResourceFilter struct {
	// JsonPath: string, optional
	JsonPath terra.StringValue `hcl:"json_path,attr"`
	// Namespaces: list of string, optional
	Namespaces terra.ListValue[terra.StringValue] `hcl:"namespaces,attr"`
	// RestoreConfigTransformationRulesResourceFilterGroupKinds: min=0
	GroupKinds []RestoreConfigTransformationRulesResourceFilterGroupKinds `hcl:"group_kinds,block" validate:"min=0"`
}

type RestoreConfigTransformationRulesResourceFilterGroupKinds struct {
	// ResourceGroup: string, optional
	ResourceGroup terra.StringValue `hcl:"resource_group,attr"`
	// ResourceKind: string, optional
	ResourceKind terra.StringValue `hcl:"resource_kind,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type RestoreConfigAttributes struct {
	ref terra.Reference
}

func (rc RestoreConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc RestoreConfigAttributes) InternalWithRef(ref terra.Reference) RestoreConfigAttributes {
	return RestoreConfigAttributes{ref: ref}
}

func (rc RestoreConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc RestoreConfigAttributes) AllNamespaces() terra.BoolValue {
	return terra.ReferenceAsBool(rc.ref.Append("all_namespaces"))
}

func (rc RestoreConfigAttributes) ClusterResourceConflictPolicy() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("cluster_resource_conflict_policy"))
}

func (rc RestoreConfigAttributes) NamespacedResourceRestoreMode() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("namespaced_resource_restore_mode"))
}

func (rc RestoreConfigAttributes) NoNamespaces() terra.BoolValue {
	return terra.ReferenceAsBool(rc.ref.Append("no_namespaces"))
}

func (rc RestoreConfigAttributes) VolumeDataRestorePolicy() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("volume_data_restore_policy"))
}

func (rc RestoreConfigAttributes) ClusterResourceRestoreScope() terra.ListValue[RestoreConfigClusterResourceRestoreScopeAttributes] {
	return terra.ReferenceAsList[RestoreConfigClusterResourceRestoreScopeAttributes](rc.ref.Append("cluster_resource_restore_scope"))
}

func (rc RestoreConfigAttributes) ExcludedNamespaces() terra.ListValue[RestoreConfigExcludedNamespacesAttributes] {
	return terra.ReferenceAsList[RestoreConfigExcludedNamespacesAttributes](rc.ref.Append("excluded_namespaces"))
}

func (rc RestoreConfigAttributes) SelectedApplications() terra.ListValue[RestoreConfigSelectedApplicationsAttributes] {
	return terra.ReferenceAsList[RestoreConfigSelectedApplicationsAttributes](rc.ref.Append("selected_applications"))
}

func (rc RestoreConfigAttributes) SelectedNamespaces() terra.ListValue[RestoreConfigSelectedNamespacesAttributes] {
	return terra.ReferenceAsList[RestoreConfigSelectedNamespacesAttributes](rc.ref.Append("selected_namespaces"))
}

func (rc RestoreConfigAttributes) TransformationRules() terra.ListValue[RestoreConfigTransformationRulesAttributes] {
	return terra.ReferenceAsList[RestoreConfigTransformationRulesAttributes](rc.ref.Append("transformation_rules"))
}

type RestoreConfigClusterResourceRestoreScopeAttributes struct {
	ref terra.Reference
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) InternalRef() (terra.Reference, error) {
	return crrs.ref, nil
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) InternalWithRef(ref terra.Reference) RestoreConfigClusterResourceRestoreScopeAttributes {
	return RestoreConfigClusterResourceRestoreScopeAttributes{ref: ref}
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return crrs.ref.InternalTokens()
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) AllGroupKinds() terra.BoolValue {
	return terra.ReferenceAsBool(crrs.ref.Append("all_group_kinds"))
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) NoGroupKinds() terra.BoolValue {
	return terra.ReferenceAsBool(crrs.ref.Append("no_group_kinds"))
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) ExcludedGroupKinds() terra.ListValue[RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes] {
	return terra.ReferenceAsList[RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes](crrs.ref.Append("excluded_group_kinds"))
}

func (crrs RestoreConfigClusterResourceRestoreScopeAttributes) SelectedGroupKinds() terra.ListValue[RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes] {
	return terra.ReferenceAsList[RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes](crrs.ref.Append("selected_group_kinds"))
}

type RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes struct {
	ref terra.Reference
}

func (egk RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes) InternalRef() (terra.Reference, error) {
	return egk.ref, nil
}

func (egk RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes) InternalWithRef(ref terra.Reference) RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes {
	return RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes{ref: ref}
}

func (egk RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return egk.ref.InternalTokens()
}

func (egk RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes) ResourceGroup() terra.StringValue {
	return terra.ReferenceAsString(egk.ref.Append("resource_group"))
}

func (egk RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsAttributes) ResourceKind() terra.StringValue {
	return terra.ReferenceAsString(egk.ref.Append("resource_kind"))
}

type RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes struct {
	ref terra.Reference
}

func (sgk RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes) InternalRef() (terra.Reference, error) {
	return sgk.ref, nil
}

func (sgk RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes) InternalWithRef(ref terra.Reference) RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes {
	return RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes{ref: ref}
}

func (sgk RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sgk.ref.InternalTokens()
}

func (sgk RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes) ResourceGroup() terra.StringValue {
	return terra.ReferenceAsString(sgk.ref.Append("resource_group"))
}

func (sgk RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsAttributes) ResourceKind() terra.StringValue {
	return terra.ReferenceAsString(sgk.ref.Append("resource_kind"))
}

type RestoreConfigExcludedNamespacesAttributes struct {
	ref terra.Reference
}

func (en RestoreConfigExcludedNamespacesAttributes) InternalRef() (terra.Reference, error) {
	return en.ref, nil
}

func (en RestoreConfigExcludedNamespacesAttributes) InternalWithRef(ref terra.Reference) RestoreConfigExcludedNamespacesAttributes {
	return RestoreConfigExcludedNamespacesAttributes{ref: ref}
}

func (en RestoreConfigExcludedNamespacesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return en.ref.InternalTokens()
}

func (en RestoreConfigExcludedNamespacesAttributes) Namespaces() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](en.ref.Append("namespaces"))
}

type RestoreConfigSelectedApplicationsAttributes struct {
	ref terra.Reference
}

func (sa RestoreConfigSelectedApplicationsAttributes) InternalRef() (terra.Reference, error) {
	return sa.ref, nil
}

func (sa RestoreConfigSelectedApplicationsAttributes) InternalWithRef(ref terra.Reference) RestoreConfigSelectedApplicationsAttributes {
	return RestoreConfigSelectedApplicationsAttributes{ref: ref}
}

func (sa RestoreConfigSelectedApplicationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sa.ref.InternalTokens()
}

func (sa RestoreConfigSelectedApplicationsAttributes) NamespacedNames() terra.ListValue[RestoreConfigSelectedApplicationsNamespacedNamesAttributes] {
	return terra.ReferenceAsList[RestoreConfigSelectedApplicationsNamespacedNamesAttributes](sa.ref.Append("namespaced_names"))
}

type RestoreConfigSelectedApplicationsNamespacedNamesAttributes struct {
	ref terra.Reference
}

func (nn RestoreConfigSelectedApplicationsNamespacedNamesAttributes) InternalRef() (terra.Reference, error) {
	return nn.ref, nil
}

func (nn RestoreConfigSelectedApplicationsNamespacedNamesAttributes) InternalWithRef(ref terra.Reference) RestoreConfigSelectedApplicationsNamespacedNamesAttributes {
	return RestoreConfigSelectedApplicationsNamespacedNamesAttributes{ref: ref}
}

func (nn RestoreConfigSelectedApplicationsNamespacedNamesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nn.ref.InternalTokens()
}

func (nn RestoreConfigSelectedApplicationsNamespacedNamesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nn.ref.Append("name"))
}

func (nn RestoreConfigSelectedApplicationsNamespacedNamesAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(nn.ref.Append("namespace"))
}

type RestoreConfigSelectedNamespacesAttributes struct {
	ref terra.Reference
}

func (sn RestoreConfigSelectedNamespacesAttributes) InternalRef() (terra.Reference, error) {
	return sn.ref, nil
}

func (sn RestoreConfigSelectedNamespacesAttributes) InternalWithRef(ref terra.Reference) RestoreConfigSelectedNamespacesAttributes {
	return RestoreConfigSelectedNamespacesAttributes{ref: ref}
}

func (sn RestoreConfigSelectedNamespacesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sn.ref.InternalTokens()
}

func (sn RestoreConfigSelectedNamespacesAttributes) Namespaces() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sn.ref.Append("namespaces"))
}

type RestoreConfigTransformationRulesAttributes struct {
	ref terra.Reference
}

func (tr RestoreConfigTransformationRulesAttributes) InternalRef() (terra.Reference, error) {
	return tr.ref, nil
}

func (tr RestoreConfigTransformationRulesAttributes) InternalWithRef(ref terra.Reference) RestoreConfigTransformationRulesAttributes {
	return RestoreConfigTransformationRulesAttributes{ref: ref}
}

func (tr RestoreConfigTransformationRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tr.ref.InternalTokens()
}

func (tr RestoreConfigTransformationRulesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("description"))
}

func (tr RestoreConfigTransformationRulesAttributes) FieldActions() terra.ListValue[RestoreConfigTransformationRulesFieldActionsAttributes] {
	return terra.ReferenceAsList[RestoreConfigTransformationRulesFieldActionsAttributes](tr.ref.Append("field_actions"))
}

func (tr RestoreConfigTransformationRulesAttributes) ResourceFilter() terra.ListValue[RestoreConfigTransformationRulesResourceFilterAttributes] {
	return terra.ReferenceAsList[RestoreConfigTransformationRulesResourceFilterAttributes](tr.ref.Append("resource_filter"))
}

type RestoreConfigTransformationRulesFieldActionsAttributes struct {
	ref terra.Reference
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) InternalRef() (terra.Reference, error) {
	return fa.ref, nil
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) InternalWithRef(ref terra.Reference) RestoreConfigTransformationRulesFieldActionsAttributes {
	return RestoreConfigTransformationRulesFieldActionsAttributes{ref: ref}
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fa.ref.InternalTokens()
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) FromPath() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("from_path"))
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) Op() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("op"))
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("path"))
}

func (fa RestoreConfigTransformationRulesFieldActionsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("value"))
}

type RestoreConfigTransformationRulesResourceFilterAttributes struct {
	ref terra.Reference
}

func (rf RestoreConfigTransformationRulesResourceFilterAttributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf RestoreConfigTransformationRulesResourceFilterAttributes) InternalWithRef(ref terra.Reference) RestoreConfigTransformationRulesResourceFilterAttributes {
	return RestoreConfigTransformationRulesResourceFilterAttributes{ref: ref}
}

func (rf RestoreConfigTransformationRulesResourceFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf RestoreConfigTransformationRulesResourceFilterAttributes) JsonPath() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("json_path"))
}

func (rf RestoreConfigTransformationRulesResourceFilterAttributes) Namespaces() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](rf.ref.Append("namespaces"))
}

func (rf RestoreConfigTransformationRulesResourceFilterAttributes) GroupKinds() terra.ListValue[RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes] {
	return terra.ReferenceAsList[RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes](rf.ref.Append("group_kinds"))
}

type RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes struct {
	ref terra.Reference
}

func (gk RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes) InternalRef() (terra.Reference, error) {
	return gk.ref, nil
}

func (gk RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes) InternalWithRef(ref terra.Reference) RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes {
	return RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes{ref: ref}
}

func (gk RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gk.ref.InternalTokens()
}

func (gk RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes) ResourceGroup() terra.StringValue {
	return terra.ReferenceAsString(gk.ref.Append("resource_group"))
}

func (gk RestoreConfigTransformationRulesResourceFilterGroupKindsAttributes) ResourceKind() terra.StringValue {
	return terra.ReferenceAsString(gk.ref.Append("resource_kind"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type RestoreConfigState struct {
	AllNamespaces                 bool                                            `json:"all_namespaces"`
	ClusterResourceConflictPolicy string                                          `json:"cluster_resource_conflict_policy"`
	NamespacedResourceRestoreMode string                                          `json:"namespaced_resource_restore_mode"`
	NoNamespaces                  bool                                            `json:"no_namespaces"`
	VolumeDataRestorePolicy       string                                          `json:"volume_data_restore_policy"`
	ClusterResourceRestoreScope   []RestoreConfigClusterResourceRestoreScopeState `json:"cluster_resource_restore_scope"`
	ExcludedNamespaces            []RestoreConfigExcludedNamespacesState          `json:"excluded_namespaces"`
	SelectedApplications          []RestoreConfigSelectedApplicationsState        `json:"selected_applications"`
	SelectedNamespaces            []RestoreConfigSelectedNamespacesState          `json:"selected_namespaces"`
	TransformationRules           []RestoreConfigTransformationRulesState         `json:"transformation_rules"`
}

type RestoreConfigClusterResourceRestoreScopeState struct {
	AllGroupKinds      bool                                                              `json:"all_group_kinds"`
	NoGroupKinds       bool                                                              `json:"no_group_kinds"`
	ExcludedGroupKinds []RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsState `json:"excluded_group_kinds"`
	SelectedGroupKinds []RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsState `json:"selected_group_kinds"`
}

type RestoreConfigClusterResourceRestoreScopeExcludedGroupKindsState struct {
	ResourceGroup string `json:"resource_group"`
	ResourceKind  string `json:"resource_kind"`
}

type RestoreConfigClusterResourceRestoreScopeSelectedGroupKindsState struct {
	ResourceGroup string `json:"resource_group"`
	ResourceKind  string `json:"resource_kind"`
}

type RestoreConfigExcludedNamespacesState struct {
	Namespaces []string `json:"namespaces"`
}

type RestoreConfigSelectedApplicationsState struct {
	NamespacedNames []RestoreConfigSelectedApplicationsNamespacedNamesState `json:"namespaced_names"`
}

type RestoreConfigSelectedApplicationsNamespacedNamesState struct {
	Name      string `json:"name"`
	Namespace string `json:"namespace"`
}

type RestoreConfigSelectedNamespacesState struct {
	Namespaces []string `json:"namespaces"`
}

type RestoreConfigTransformationRulesState struct {
	Description    string                                                `json:"description"`
	FieldActions   []RestoreConfigTransformationRulesFieldActionsState   `json:"field_actions"`
	ResourceFilter []RestoreConfigTransformationRulesResourceFilterState `json:"resource_filter"`
}

type RestoreConfigTransformationRulesFieldActionsState struct {
	FromPath string `json:"from_path"`
	Op       string `json:"op"`
	Path     string `json:"path"`
	Value    string `json:"value"`
}

type RestoreConfigTransformationRulesResourceFilterState struct {
	JsonPath   string                                                          `json:"json_path"`
	Namespaces []string                                                        `json:"namespaces"`
	GroupKinds []RestoreConfigTransformationRulesResourceFilterGroupKindsState `json:"group_kinds"`
}

type RestoreConfigTransformationRulesResourceFilterGroupKindsState struct {
	ResourceGroup string `json:"resource_group"`
	ResourceKind  string `json:"resource_kind"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
