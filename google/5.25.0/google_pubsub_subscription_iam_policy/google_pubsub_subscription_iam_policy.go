// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_pubsub_subscription_iam_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_pubsub_subscription_iam_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googlePubsubSubscriptionIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gpsip *Resource) Type() string {
	return "google_pubsub_subscription_iam_policy"
}

// LocalName returns the local name for [Resource].
func (gpsip *Resource) LocalName() string {
	return gpsip.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gpsip *Resource) Configuration() interface{} {
	return gpsip.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gpsip *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gpsip)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gpsip *Resource) Dependencies() terra.Dependencies {
	return gpsip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gpsip *Resource) LifecycleManagement() *terra.Lifecycle {
	return gpsip.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gpsip *Resource) Attributes() googlePubsubSubscriptionIamPolicyAttributes {
	return googlePubsubSubscriptionIamPolicyAttributes{ref: terra.ReferenceResource(gpsip)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gpsip *Resource) ImportState(state io.Reader) error {
	gpsip.state = &googlePubsubSubscriptionIamPolicyState{}
	if err := json.NewDecoder(state).Decode(gpsip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gpsip.Type(), gpsip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gpsip *Resource) State() (*googlePubsubSubscriptionIamPolicyState, bool) {
	return gpsip.state, gpsip.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gpsip *Resource) StateMust() *googlePubsubSubscriptionIamPolicyState {
	if gpsip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gpsip.Type(), gpsip.LocalName()))
	}
	return gpsip.state
}

// Args contains the configurations for google_pubsub_subscription_iam_policy.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Subscription: string, required
	Subscription terra.StringValue `hcl:"subscription,attr" validate:"required"`
}

type googlePubsubSubscriptionIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_pubsub_subscription_iam_policy.
func (gpsip googlePubsubSubscriptionIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gpsip.ref.Append("etag"))
}

// Id returns a reference to field id of google_pubsub_subscription_iam_policy.
func (gpsip googlePubsubSubscriptionIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gpsip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_pubsub_subscription_iam_policy.
func (gpsip googlePubsubSubscriptionIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(gpsip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_pubsub_subscription_iam_policy.
func (gpsip googlePubsubSubscriptionIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gpsip.ref.Append("project"))
}

// Subscription returns a reference to field subscription of google_pubsub_subscription_iam_policy.
func (gpsip googlePubsubSubscriptionIamPolicyAttributes) Subscription() terra.StringValue {
	return terra.ReferenceAsString(gpsip.ref.Append("subscription"))
}

type googlePubsubSubscriptionIamPolicyState struct {
	Etag         string `json:"etag"`
	Id           string `json:"id"`
	PolicyData   string `json:"policy_data"`
	Project      string `json:"project"`
	Subscription string `json:"subscription"`
}
