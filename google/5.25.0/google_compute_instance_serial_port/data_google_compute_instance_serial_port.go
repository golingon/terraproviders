// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_instance_serial_port

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_instance_serial_port.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcisp *DataSource) DataSource() string {
	return "google_compute_instance_serial_port"
}

// LocalName returns the local name for [DataSource].
func (gcisp *DataSource) LocalName() string {
	return gcisp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcisp *DataSource) Configuration() interface{} {
	return gcisp.Args
}

// Attributes returns the attributes for [DataSource].
func (gcisp *DataSource) Attributes() dataGoogleComputeInstanceSerialPortAttributes {
	return dataGoogleComputeInstanceSerialPortAttributes{ref: terra.ReferenceDataSource(gcisp)}
}

// DataArgs contains the configurations for google_compute_instance_serial_port.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Instance: string, required
	Instance terra.StringValue `hcl:"instance,attr" validate:"required"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
}

type dataGoogleComputeInstanceSerialPortAttributes struct {
	ref terra.Reference
}

// Contents returns a reference to field contents of google_compute_instance_serial_port.
func (gcisp dataGoogleComputeInstanceSerialPortAttributes) Contents() terra.StringValue {
	return terra.ReferenceAsString(gcisp.ref.Append("contents"))
}

// Id returns a reference to field id of google_compute_instance_serial_port.
func (gcisp dataGoogleComputeInstanceSerialPortAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcisp.ref.Append("id"))
}

// Instance returns a reference to field instance of google_compute_instance_serial_port.
func (gcisp dataGoogleComputeInstanceSerialPortAttributes) Instance() terra.StringValue {
	return terra.ReferenceAsString(gcisp.ref.Append("instance"))
}

// Port returns a reference to field port of google_compute_instance_serial_port.
func (gcisp dataGoogleComputeInstanceSerialPortAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(gcisp.ref.Append("port"))
}

// Project returns a reference to field project of google_compute_instance_serial_port.
func (gcisp dataGoogleComputeInstanceSerialPortAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcisp.ref.Append("project"))
}

// Zone returns a reference to field zone of google_compute_instance_serial_port.
func (gcisp dataGoogleComputeInstanceSerialPortAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(gcisp.ref.Append("zone"))
}
