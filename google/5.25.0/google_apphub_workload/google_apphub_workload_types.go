// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apphub_workload

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Attributes struct {
	// AttributesBusinessOwners: min=0
	BusinessOwners []AttributesBusinessOwners `hcl:"business_owners,block" validate:"min=0"`
	// AttributesCriticality: optional
	Criticality *AttributesCriticality `hcl:"criticality,block"`
	// AttributesDeveloperOwners: min=0
	DeveloperOwners []AttributesDeveloperOwners `hcl:"developer_owners,block" validate:"min=0"`
	// AttributesEnvironment: optional
	Environment *AttributesEnvironment `hcl:"environment,block"`
	// AttributesOperatorOwners: min=0
	OperatorOwners []AttributesOperatorOwners `hcl:"operator_owners,block" validate:"min=0"`
}

type AttributesBusinessOwners struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
}

type AttributesCriticality struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type AttributesDeveloperOwners struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
}

type AttributesEnvironment struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type AttributesOperatorOwners struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type WorkloadPropertiesAttributes struct {
	ref terra.Reference
}

func (wp WorkloadPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return wp.ref, nil
}

func (wp WorkloadPropertiesAttributes) InternalWithRef(ref terra.Reference) WorkloadPropertiesAttributes {
	return WorkloadPropertiesAttributes{ref: ref}
}

func (wp WorkloadPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wp.ref.InternalTokens()
}

func (wp WorkloadPropertiesAttributes) GcpProject() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("gcp_project"))
}

func (wp WorkloadPropertiesAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("location"))
}

func (wp WorkloadPropertiesAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("zone"))
}

type WorkloadReferenceAttributes struct {
	ref terra.Reference
}

func (wr WorkloadReferenceAttributes) InternalRef() (terra.Reference, error) {
	return wr.ref, nil
}

func (wr WorkloadReferenceAttributes) InternalWithRef(ref terra.Reference) WorkloadReferenceAttributes {
	return WorkloadReferenceAttributes{ref: ref}
}

func (wr WorkloadReferenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wr.ref.InternalTokens()
}

func (wr WorkloadReferenceAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(wr.ref.Append("uri"))
}

type AttributesAttributes struct {
	ref terra.Reference
}

func (a AttributesAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AttributesAttributes) InternalWithRef(ref terra.Reference) AttributesAttributes {
	return AttributesAttributes{ref: ref}
}

func (a AttributesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a AttributesAttributes) BusinessOwners() terra.ListValue[AttributesBusinessOwnersAttributes] {
	return terra.ReferenceAsList[AttributesBusinessOwnersAttributes](a.ref.Append("business_owners"))
}

func (a AttributesAttributes) Criticality() terra.ListValue[AttributesCriticalityAttributes] {
	return terra.ReferenceAsList[AttributesCriticalityAttributes](a.ref.Append("criticality"))
}

func (a AttributesAttributes) DeveloperOwners() terra.ListValue[AttributesDeveloperOwnersAttributes] {
	return terra.ReferenceAsList[AttributesDeveloperOwnersAttributes](a.ref.Append("developer_owners"))
}

func (a AttributesAttributes) Environment() terra.ListValue[AttributesEnvironmentAttributes] {
	return terra.ReferenceAsList[AttributesEnvironmentAttributes](a.ref.Append("environment"))
}

func (a AttributesAttributes) OperatorOwners() terra.ListValue[AttributesOperatorOwnersAttributes] {
	return terra.ReferenceAsList[AttributesOperatorOwnersAttributes](a.ref.Append("operator_owners"))
}

type AttributesBusinessOwnersAttributes struct {
	ref terra.Reference
}

func (bo AttributesBusinessOwnersAttributes) InternalRef() (terra.Reference, error) {
	return bo.ref, nil
}

func (bo AttributesBusinessOwnersAttributes) InternalWithRef(ref terra.Reference) AttributesBusinessOwnersAttributes {
	return AttributesBusinessOwnersAttributes{ref: ref}
}

func (bo AttributesBusinessOwnersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bo.ref.InternalTokens()
}

func (bo AttributesBusinessOwnersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(bo.ref.Append("display_name"))
}

func (bo AttributesBusinessOwnersAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(bo.ref.Append("email"))
}

type AttributesCriticalityAttributes struct {
	ref terra.Reference
}

func (c AttributesCriticalityAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c AttributesCriticalityAttributes) InternalWithRef(ref terra.Reference) AttributesCriticalityAttributes {
	return AttributesCriticalityAttributes{ref: ref}
}

func (c AttributesCriticalityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c AttributesCriticalityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("type"))
}

type AttributesDeveloperOwnersAttributes struct {
	ref terra.Reference
}

func (do AttributesDeveloperOwnersAttributes) InternalRef() (terra.Reference, error) {
	return do.ref, nil
}

func (do AttributesDeveloperOwnersAttributes) InternalWithRef(ref terra.Reference) AttributesDeveloperOwnersAttributes {
	return AttributesDeveloperOwnersAttributes{ref: ref}
}

func (do AttributesDeveloperOwnersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return do.ref.InternalTokens()
}

func (do AttributesDeveloperOwnersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(do.ref.Append("display_name"))
}

func (do AttributesDeveloperOwnersAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(do.ref.Append("email"))
}

type AttributesEnvironmentAttributes struct {
	ref terra.Reference
}

func (e AttributesEnvironmentAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e AttributesEnvironmentAttributes) InternalWithRef(ref terra.Reference) AttributesEnvironmentAttributes {
	return AttributesEnvironmentAttributes{ref: ref}
}

func (e AttributesEnvironmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e AttributesEnvironmentAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("type"))
}

type AttributesOperatorOwnersAttributes struct {
	ref terra.Reference
}

func (oo AttributesOperatorOwnersAttributes) InternalRef() (terra.Reference, error) {
	return oo.ref, nil
}

func (oo AttributesOperatorOwnersAttributes) InternalWithRef(ref terra.Reference) AttributesOperatorOwnersAttributes {
	return AttributesOperatorOwnersAttributes{ref: ref}
}

func (oo AttributesOperatorOwnersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oo.ref.InternalTokens()
}

func (oo AttributesOperatorOwnersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("display_name"))
}

func (oo AttributesOperatorOwnersAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(oo.ref.Append("email"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type WorkloadPropertiesState struct {
	GcpProject string `json:"gcp_project"`
	Location   string `json:"location"`
	Zone       string `json:"zone"`
}

type WorkloadReferenceState struct {
	Uri string `json:"uri"`
}

type AttributesState struct {
	BusinessOwners  []AttributesBusinessOwnersState  `json:"business_owners"`
	Criticality     []AttributesCriticalityState     `json:"criticality"`
	DeveloperOwners []AttributesDeveloperOwnersState `json:"developer_owners"`
	Environment     []AttributesEnvironmentState     `json:"environment"`
	OperatorOwners  []AttributesOperatorOwnersState  `json:"operator_owners"`
}

type AttributesBusinessOwnersState struct {
	DisplayName string `json:"display_name"`
	Email       string `json:"email"`
}

type AttributesCriticalityState struct {
	Type string `json:"type"`
}

type AttributesDeveloperOwnersState struct {
	DisplayName string `json:"display_name"`
	Email       string `json:"email"`
}

type AttributesEnvironmentState struct {
	Type string `json:"type"`
}

type AttributesOperatorOwnersState struct {
	DisplayName string `json:"display_name"`
	Email       string `json:"email"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
