// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dialogflow_cx_environment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_dialogflow_cx_environment.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDialogflowCxEnvironmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdce *Resource) Type() string {
	return "google_dialogflow_cx_environment"
}

// LocalName returns the local name for [Resource].
func (gdce *Resource) LocalName() string {
	return gdce.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdce *Resource) Configuration() interface{} {
	return gdce.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdce *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdce)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdce *Resource) Dependencies() terra.Dependencies {
	return gdce.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdce *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdce.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdce *Resource) Attributes() googleDialogflowCxEnvironmentAttributes {
	return googleDialogflowCxEnvironmentAttributes{ref: terra.ReferenceResource(gdce)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdce *Resource) ImportState(state io.Reader) error {
	gdce.state = &googleDialogflowCxEnvironmentState{}
	if err := json.NewDecoder(state).Decode(gdce.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdce.Type(), gdce.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdce *Resource) State() (*googleDialogflowCxEnvironmentState, bool) {
	return gdce.state, gdce.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdce *Resource) StateMust() *googleDialogflowCxEnvironmentState {
	if gdce.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdce.Type(), gdce.LocalName()))
	}
	return gdce.state
}

// Args contains the configurations for google_dialogflow_cx_environment.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// VersionConfigs: min=1
	VersionConfigs []VersionConfigs `hcl:"version_configs,block" validate:"min=1"`
}

type googleDialogflowCxEnvironmentAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_dialogflow_cx_environment.
func (gdce googleDialogflowCxEnvironmentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gdce.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_dialogflow_cx_environment.
func (gdce googleDialogflowCxEnvironmentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdce.ref.Append("display_name"))
}

// Id returns a reference to field id of google_dialogflow_cx_environment.
func (gdce googleDialogflowCxEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdce.ref.Append("id"))
}

// Name returns a reference to field name of google_dialogflow_cx_environment.
func (gdce googleDialogflowCxEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdce.ref.Append("name"))
}

// Parent returns a reference to field parent of google_dialogflow_cx_environment.
func (gdce googleDialogflowCxEnvironmentAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gdce.ref.Append("parent"))
}

// UpdateTime returns a reference to field update_time of google_dialogflow_cx_environment.
func (gdce googleDialogflowCxEnvironmentAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gdce.ref.Append("update_time"))
}

func (gdce googleDialogflowCxEnvironmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdce.ref.Append("timeouts"))
}

func (gdce googleDialogflowCxEnvironmentAttributes) VersionConfigs() terra.ListValue[VersionConfigsAttributes] {
	return terra.ReferenceAsList[VersionConfigsAttributes](gdce.ref.Append("version_configs"))
}

type googleDialogflowCxEnvironmentState struct {
	Description    string                `json:"description"`
	DisplayName    string                `json:"display_name"`
	Id             string                `json:"id"`
	Name           string                `json:"name"`
	Parent         string                `json:"parent"`
	UpdateTime     string                `json:"update_time"`
	Timeouts       *TimeoutsState        `json:"timeouts"`
	VersionConfigs []VersionConfigsState `json:"version_configs"`
}
