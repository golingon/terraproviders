// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dns_response_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type GkeClusters struct {
	// GkeClusterName: string, required
	GkeClusterName terra.StringValue `hcl:"gke_cluster_name,attr" validate:"required"`
}

type Networks struct {
	// NetworkUrl: string, required
	NetworkUrl terra.StringValue `hcl:"network_url,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type GkeClustersAttributes struct {
	ref terra.Reference
}

func (gc GkeClustersAttributes) InternalRef() (terra.Reference, error) {
	return gc.ref, nil
}

func (gc GkeClustersAttributes) InternalWithRef(ref terra.Reference) GkeClustersAttributes {
	return GkeClustersAttributes{ref: ref}
}

func (gc GkeClustersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gc.ref.InternalTokens()
}

func (gc GkeClustersAttributes) GkeClusterName() terra.StringValue {
	return terra.ReferenceAsString(gc.ref.Append("gke_cluster_name"))
}

type NetworksAttributes struct {
	ref terra.Reference
}

func (n NetworksAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n NetworksAttributes) InternalWithRef(ref terra.Reference) NetworksAttributes {
	return NetworksAttributes{ref: ref}
}

func (n NetworksAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n NetworksAttributes) NetworkUrl() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("network_url"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type GkeClustersState struct {
	GkeClusterName string `json:"gke_cluster_name"`
}

type NetworksState struct {
	NetworkUrl string `json:"network_url"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
