// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_external_vpn_gateway

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_compute_external_vpn_gateway.
type Resource struct {
	Name      string
	Args      Args
	state     *googleComputeExternalVpnGatewayState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gcevg *Resource) Type() string {
	return "google_compute_external_vpn_gateway"
}

// LocalName returns the local name for [Resource].
func (gcevg *Resource) LocalName() string {
	return gcevg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gcevg *Resource) Configuration() interface{} {
	return gcevg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gcevg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gcevg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gcevg *Resource) Dependencies() terra.Dependencies {
	return gcevg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gcevg *Resource) LifecycleManagement() *terra.Lifecycle {
	return gcevg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gcevg *Resource) Attributes() googleComputeExternalVpnGatewayAttributes {
	return googleComputeExternalVpnGatewayAttributes{ref: terra.ReferenceResource(gcevg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gcevg *Resource) ImportState(state io.Reader) error {
	gcevg.state = &googleComputeExternalVpnGatewayState{}
	if err := json.NewDecoder(state).Decode(gcevg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gcevg.Type(), gcevg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gcevg *Resource) State() (*googleComputeExternalVpnGatewayState, bool) {
	return gcevg.state, gcevg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gcevg *Resource) StateMust() *googleComputeExternalVpnGatewayState {
	if gcevg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gcevg.Type(), gcevg.LocalName()))
	}
	return gcevg.state
}

// Args contains the configurations for google_compute_external_vpn_gateway.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// RedundancyType: string, optional
	RedundancyType terra.StringValue `hcl:"redundancy_type,attr"`
	// Interface: min=0
	Interface []Interface `hcl:"interface,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleComputeExternalVpnGatewayAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcevg.ref.Append("effective_labels"))
}

// Id returns a reference to field id of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("id"))
}

// LabelFingerprint returns a reference to field label_fingerprint of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("label_fingerprint"))
}

// Labels returns a reference to field labels of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcevg.ref.Append("labels"))
}

// Name returns a reference to field name of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("name"))
}

// Project returns a reference to field project of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("project"))
}

// RedundancyType returns a reference to field redundancy_type of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) RedundancyType() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("redundancy_type"))
}

// SelfLink returns a reference to field self_link of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcevg.ref.Append("self_link"))
}

// TerraformLabels returns a reference to field terraform_labels of google_compute_external_vpn_gateway.
func (gcevg googleComputeExternalVpnGatewayAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcevg.ref.Append("terraform_labels"))
}

func (gcevg googleComputeExternalVpnGatewayAttributes) Interface() terra.ListValue[InterfaceAttributes] {
	return terra.ReferenceAsList[InterfaceAttributes](gcevg.ref.Append("interface"))
}

func (gcevg googleComputeExternalVpnGatewayAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gcevg.ref.Append("timeouts"))
}

type googleComputeExternalVpnGatewayState struct {
	Description      string            `json:"description"`
	EffectiveLabels  map[string]string `json:"effective_labels"`
	Id               string            `json:"id"`
	LabelFingerprint string            `json:"label_fingerprint"`
	Labels           map[string]string `json:"labels"`
	Name             string            `json:"name"`
	Project          string            `json:"project"`
	RedundancyType   string            `json:"redundancy_type"`
	SelfLink         string            `json:"self_link"`
	TerraformLabels  map[string]string `json:"terraform_labels"`
	Interface        []InterfaceState  `json:"interface"`
	Timeouts         *TimeoutsState    `json:"timeouts"`
}
