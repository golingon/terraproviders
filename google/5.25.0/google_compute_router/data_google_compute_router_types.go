// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_router

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataBgpAttributes struct {
	ref terra.Reference
}

func (b DataBgpAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b DataBgpAttributes) InternalWithRef(ref terra.Reference) DataBgpAttributes {
	return DataBgpAttributes{ref: ref}
}

func (b DataBgpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b DataBgpAttributes) AdvertiseMode() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("advertise_mode"))
}

func (b DataBgpAttributes) AdvertisedGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](b.ref.Append("advertised_groups"))
}

func (b DataBgpAttributes) Asn() terra.NumberValue {
	return terra.ReferenceAsNumber(b.ref.Append("asn"))
}

func (b DataBgpAttributes) KeepaliveInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(b.ref.Append("keepalive_interval"))
}

func (b DataBgpAttributes) AdvertisedIpRanges() terra.ListValue[DataBgpAdvertisedIpRangesAttributes] {
	return terra.ReferenceAsList[DataBgpAdvertisedIpRangesAttributes](b.ref.Append("advertised_ip_ranges"))
}

type DataBgpAdvertisedIpRangesAttributes struct {
	ref terra.Reference
}

func (air DataBgpAdvertisedIpRangesAttributes) InternalRef() (terra.Reference, error) {
	return air.ref, nil
}

func (air DataBgpAdvertisedIpRangesAttributes) InternalWithRef(ref terra.Reference) DataBgpAdvertisedIpRangesAttributes {
	return DataBgpAdvertisedIpRangesAttributes{ref: ref}
}

func (air DataBgpAdvertisedIpRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return air.ref.InternalTokens()
}

func (air DataBgpAdvertisedIpRangesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("description"))
}

func (air DataBgpAdvertisedIpRangesAttributes) Range() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("range"))
}

type DataBgpState struct {
	AdvertiseMode      string                           `json:"advertise_mode"`
	AdvertisedGroups   []string                         `json:"advertised_groups"`
	Asn                float64                          `json:"asn"`
	KeepaliveInterval  float64                          `json:"keepalive_interval"`
	AdvertisedIpRanges []DataBgpAdvertisedIpRangesState `json:"advertised_ip_ranges"`
}

type DataBgpAdvertisedIpRangesState struct {
	Description string `json:"description"`
	Range       string `json:"range"`
}
