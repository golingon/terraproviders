// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_privateca_certificate_authority

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_privateca_certificate_authority.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gpca *DataSource) DataSource() string {
	return "google_privateca_certificate_authority"
}

// LocalName returns the local name for [DataSource].
func (gpca *DataSource) LocalName() string {
	return gpca.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gpca *DataSource) Configuration() interface{} {
	return gpca.Args
}

// Attributes returns the attributes for [DataSource].
func (gpca *DataSource) Attributes() dataGooglePrivatecaCertificateAuthorityAttributes {
	return dataGooglePrivatecaCertificateAuthorityAttributes{ref: terra.ReferenceDataSource(gpca)}
}

// DataArgs contains the configurations for google_privateca_certificate_authority.
type DataArgs struct {
	// CertificateAuthorityId: string, optional
	CertificateAuthorityId terra.StringValue `hcl:"certificate_authority_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Pool: string, optional
	Pool terra.StringValue `hcl:"pool,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGooglePrivatecaCertificateAuthorityAttributes struct {
	ref terra.Reference
}

// CertificateAuthorityId returns a reference to field certificate_authority_id of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) CertificateAuthorityId() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("certificate_authority_id"))
}

// CreateTime returns a reference to field create_time of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("create_time"))
}

// DeletionProtection returns a reference to field deletion_protection of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(gpca.ref.Append("deletion_protection"))
}

// DesiredState returns a reference to field desired_state of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) DesiredState() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("desired_state"))
}

// EffectiveLabels returns a reference to field effective_labels of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gpca.ref.Append("effective_labels"))
}

// GcsBucket returns a reference to field gcs_bucket of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) GcsBucket() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("gcs_bucket"))
}

// Id returns a reference to field id of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("id"))
}

// IgnoreActiveCertificatesOnDeletion returns a reference to field ignore_active_certificates_on_deletion of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) IgnoreActiveCertificatesOnDeletion() terra.BoolValue {
	return terra.ReferenceAsBool(gpca.ref.Append("ignore_active_certificates_on_deletion"))
}

// Labels returns a reference to field labels of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gpca.ref.Append("labels"))
}

// Lifetime returns a reference to field lifetime of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Lifetime() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("lifetime"))
}

// Location returns a reference to field location of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("location"))
}

// Name returns a reference to field name of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("name"))
}

// PemCaCertificate returns a reference to field pem_ca_certificate of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) PemCaCertificate() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("pem_ca_certificate"))
}

// PemCaCertificates returns a reference to field pem_ca_certificates of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) PemCaCertificates() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gpca.ref.Append("pem_ca_certificates"))
}

// PemCsr returns a reference to field pem_csr of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) PemCsr() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("pem_csr"))
}

// Pool returns a reference to field pool of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Pool() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("pool"))
}

// Project returns a reference to field project of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("project"))
}

// SkipGracePeriod returns a reference to field skip_grace_period of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) SkipGracePeriod() terra.BoolValue {
	return terra.ReferenceAsBool(gpca.ref.Append("skip_grace_period"))
}

// State returns a reference to field state of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("state"))
}

// TerraformLabels returns a reference to field terraform_labels of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gpca.ref.Append("terraform_labels"))
}

// Type returns a reference to field type of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("type"))
}

// UpdateTime returns a reference to field update_time of google_privateca_certificate_authority.
func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gpca.ref.Append("update_time"))
}

func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) AccessUrls() terra.ListValue[DataAccessUrlsAttributes] {
	return terra.ReferenceAsList[DataAccessUrlsAttributes](gpca.ref.Append("access_urls"))
}

func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) Config() terra.ListValue[DataConfigAttributes] {
	return terra.ReferenceAsList[DataConfigAttributes](gpca.ref.Append("config"))
}

func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) KeySpec() terra.ListValue[DataKeySpecAttributes] {
	return terra.ReferenceAsList[DataKeySpecAttributes](gpca.ref.Append("key_spec"))
}

func (gpca dataGooglePrivatecaCertificateAuthorityAttributes) SubordinateConfig() terra.ListValue[DataSubordinateConfigAttributes] {
	return terra.ReferenceAsList[DataSubordinateConfigAttributes](gpca.ref.Append("subordinate_config"))
}
