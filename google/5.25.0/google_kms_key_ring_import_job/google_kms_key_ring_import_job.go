// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_kms_key_ring_import_job

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_kms_key_ring_import_job.
type Resource struct {
	Name      string
	Args      Args
	state     *googleKmsKeyRingImportJobState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gkkrij *Resource) Type() string {
	return "google_kms_key_ring_import_job"
}

// LocalName returns the local name for [Resource].
func (gkkrij *Resource) LocalName() string {
	return gkkrij.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gkkrij *Resource) Configuration() interface{} {
	return gkkrij.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gkkrij *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gkkrij)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gkkrij *Resource) Dependencies() terra.Dependencies {
	return gkkrij.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gkkrij *Resource) LifecycleManagement() *terra.Lifecycle {
	return gkkrij.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gkkrij *Resource) Attributes() googleKmsKeyRingImportJobAttributes {
	return googleKmsKeyRingImportJobAttributes{ref: terra.ReferenceResource(gkkrij)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gkkrij *Resource) ImportState(state io.Reader) error {
	gkkrij.state = &googleKmsKeyRingImportJobState{}
	if err := json.NewDecoder(state).Decode(gkkrij.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gkkrij.Type(), gkkrij.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gkkrij *Resource) State() (*googleKmsKeyRingImportJobState, bool) {
	return gkkrij.state, gkkrij.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gkkrij *Resource) StateMust() *googleKmsKeyRingImportJobState {
	if gkkrij.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gkkrij.Type(), gkkrij.LocalName()))
	}
	return gkkrij.state
}

// Args contains the configurations for google_kms_key_ring_import_job.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImportJobId: string, required
	ImportJobId terra.StringValue `hcl:"import_job_id,attr" validate:"required"`
	// ImportMethod: string, required
	ImportMethod terra.StringValue `hcl:"import_method,attr" validate:"required"`
	// KeyRing: string, required
	KeyRing terra.StringValue `hcl:"key_ring,attr" validate:"required"`
	// ProtectionLevel: string, required
	ProtectionLevel terra.StringValue `hcl:"protection_level,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleKmsKeyRingImportJobAttributes struct {
	ref terra.Reference
}

// ExpireTime returns a reference to field expire_time of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("expire_time"))
}

// Id returns a reference to field id of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("id"))
}

// ImportJobId returns a reference to field import_job_id of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) ImportJobId() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("import_job_id"))
}

// ImportMethod returns a reference to field import_method of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) ImportMethod() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("import_method"))
}

// KeyRing returns a reference to field key_ring of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) KeyRing() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("key_ring"))
}

// Name returns a reference to field name of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("name"))
}

// ProtectionLevel returns a reference to field protection_level of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) ProtectionLevel() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("protection_level"))
}

// State returns a reference to field state of google_kms_key_ring_import_job.
func (gkkrij googleKmsKeyRingImportJobAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gkkrij.ref.Append("state"))
}

func (gkkrij googleKmsKeyRingImportJobAttributes) Attestation() terra.ListValue[AttestationAttributes] {
	return terra.ReferenceAsList[AttestationAttributes](gkkrij.ref.Append("attestation"))
}

func (gkkrij googleKmsKeyRingImportJobAttributes) PublicKey() terra.ListValue[PublicKeyAttributes] {
	return terra.ReferenceAsList[PublicKeyAttributes](gkkrij.ref.Append("public_key"))
}

func (gkkrij googleKmsKeyRingImportJobAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gkkrij.ref.Append("timeouts"))
}

type googleKmsKeyRingImportJobState struct {
	ExpireTime      string             `json:"expire_time"`
	Id              string             `json:"id"`
	ImportJobId     string             `json:"import_job_id"`
	ImportMethod    string             `json:"import_method"`
	KeyRing         string             `json:"key_ring"`
	Name            string             `json:"name"`
	ProtectionLevel string             `json:"protection_level"`
	State           string             `json:"state"`
	Attestation     []AttestationState `json:"attestation"`
	PublicKey       []PublicKeyState   `json:"public_key"`
	Timeouts        *TimeoutsState     `json:"timeouts"`
}
