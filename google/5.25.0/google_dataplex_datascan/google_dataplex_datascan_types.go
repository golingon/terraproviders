// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dataplex_datascan

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Data struct {
	// Entity: string, optional
	Entity terra.StringValue `hcl:"entity,attr"`
	// Resource: string, optional
	Resource terra.StringValue `hcl:"resource,attr"`
}

type DataProfileSpec struct {
	// RowFilter: string, optional
	RowFilter terra.StringValue `hcl:"row_filter,attr"`
	// SamplingPercent: number, optional
	SamplingPercent terra.NumberValue `hcl:"sampling_percent,attr"`
	// DataProfileSpecExcludeFields: optional
	ExcludeFields *DataProfileSpecExcludeFields `hcl:"exclude_fields,block"`
	// DataProfileSpecIncludeFields: optional
	IncludeFields *DataProfileSpecIncludeFields `hcl:"include_fields,block"`
	// DataProfileSpecPostScanActions: optional
	PostScanActions *DataProfileSpecPostScanActions `hcl:"post_scan_actions,block"`
}

type DataProfileSpecExcludeFields struct {
	// FieldNames: list of string, optional
	FieldNames terra.ListValue[terra.StringValue] `hcl:"field_names,attr"`
}

type DataProfileSpecIncludeFields struct {
	// FieldNames: list of string, optional
	FieldNames terra.ListValue[terra.StringValue] `hcl:"field_names,attr"`
}

type DataProfileSpecPostScanActions struct {
	// DataProfileSpecPostScanActionsBigqueryExport: optional
	BigqueryExport *DataProfileSpecPostScanActionsBigqueryExport `hcl:"bigquery_export,block"`
}

type DataProfileSpecPostScanActionsBigqueryExport struct {
	// ResultsTable: string, optional
	ResultsTable terra.StringValue `hcl:"results_table,attr"`
}

type DataQualitySpec struct {
	// RowFilter: string, optional
	RowFilter terra.StringValue `hcl:"row_filter,attr"`
	// SamplingPercent: number, optional
	SamplingPercent terra.NumberValue `hcl:"sampling_percent,attr"`
	// DataQualitySpecPostScanActions: optional
	PostScanActions *DataQualitySpecPostScanActions `hcl:"post_scan_actions,block"`
	// DataQualitySpecRules: min=0
	Rules []DataQualitySpecRules `hcl:"rules,block" validate:"min=0"`
}

type DataQualitySpecPostScanActions struct {
	// DataQualitySpecPostScanActionsBigqueryExport: optional
	BigqueryExport *DataQualitySpecPostScanActionsBigqueryExport `hcl:"bigquery_export,block"`
}

type DataQualitySpecPostScanActionsBigqueryExport struct {
	// ResultsTable: string, optional
	ResultsTable terra.StringValue `hcl:"results_table,attr"`
}

type DataQualitySpecRules struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Dimension: string, required
	Dimension terra.StringValue `hcl:"dimension,attr" validate:"required"`
	// IgnoreNull: bool, optional
	IgnoreNull terra.BoolValue `hcl:"ignore_null,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Threshold: number, optional
	Threshold terra.NumberValue `hcl:"threshold,attr"`
	// DataQualitySpecRulesNonNullExpectation: optional
	NonNullExpectation *DataQualitySpecRulesNonNullExpectation `hcl:"non_null_expectation,block"`
	// DataQualitySpecRulesRangeExpectation: optional
	RangeExpectation *DataQualitySpecRulesRangeExpectation `hcl:"range_expectation,block"`
	// DataQualitySpecRulesRegexExpectation: optional
	RegexExpectation *DataQualitySpecRulesRegexExpectation `hcl:"regex_expectation,block"`
	// DataQualitySpecRulesRowConditionExpectation: optional
	RowConditionExpectation *DataQualitySpecRulesRowConditionExpectation `hcl:"row_condition_expectation,block"`
	// DataQualitySpecRulesSetExpectation: optional
	SetExpectation *DataQualitySpecRulesSetExpectation `hcl:"set_expectation,block"`
	// DataQualitySpecRulesStatisticRangeExpectation: optional
	StatisticRangeExpectation *DataQualitySpecRulesStatisticRangeExpectation `hcl:"statistic_range_expectation,block"`
	// DataQualitySpecRulesTableConditionExpectation: optional
	TableConditionExpectation *DataQualitySpecRulesTableConditionExpectation `hcl:"table_condition_expectation,block"`
	// DataQualitySpecRulesUniquenessExpectation: optional
	UniquenessExpectation *DataQualitySpecRulesUniquenessExpectation `hcl:"uniqueness_expectation,block"`
}

type DataQualitySpecRulesNonNullExpectation struct{}

type DataQualitySpecRulesRangeExpectation struct {
	// MaxValue: string, optional
	MaxValue terra.StringValue `hcl:"max_value,attr"`
	// MinValue: string, optional
	MinValue terra.StringValue `hcl:"min_value,attr"`
	// StrictMaxEnabled: bool, optional
	StrictMaxEnabled terra.BoolValue `hcl:"strict_max_enabled,attr"`
	// StrictMinEnabled: bool, optional
	StrictMinEnabled terra.BoolValue `hcl:"strict_min_enabled,attr"`
}

type DataQualitySpecRulesRegexExpectation struct {
	// Regex: string, required
	Regex terra.StringValue `hcl:"regex,attr" validate:"required"`
}

type DataQualitySpecRulesRowConditionExpectation struct {
	// SqlExpression: string, required
	SqlExpression terra.StringValue `hcl:"sql_expression,attr" validate:"required"`
}

type DataQualitySpecRulesSetExpectation struct {
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataQualitySpecRulesStatisticRangeExpectation struct {
	// MaxValue: string, optional
	MaxValue terra.StringValue `hcl:"max_value,attr"`
	// MinValue: string, optional
	MinValue terra.StringValue `hcl:"min_value,attr"`
	// Statistic: string, required
	Statistic terra.StringValue `hcl:"statistic,attr" validate:"required"`
	// StrictMaxEnabled: bool, optional
	StrictMaxEnabled terra.BoolValue `hcl:"strict_max_enabled,attr"`
	// StrictMinEnabled: bool, optional
	StrictMinEnabled terra.BoolValue `hcl:"strict_min_enabled,attr"`
}

type DataQualitySpecRulesTableConditionExpectation struct {
	// SqlExpression: string, required
	SqlExpression terra.StringValue `hcl:"sql_expression,attr" validate:"required"`
}

type DataQualitySpecRulesUniquenessExpectation struct{}

type ExecutionSpec struct {
	// Field: string, optional
	Field terra.StringValue `hcl:"field,attr"`
	// ExecutionSpecTrigger: required
	Trigger *ExecutionSpecTrigger `hcl:"trigger,block" validate:"required"`
}

type ExecutionSpecTrigger struct {
	// ExecutionSpecTriggerOnDemand: optional
	OnDemand *ExecutionSpecTriggerOnDemand `hcl:"on_demand,block"`
	// ExecutionSpecTriggerSchedule: optional
	Schedule *ExecutionSpecTriggerSchedule `hcl:"schedule,block"`
}

type ExecutionSpecTriggerOnDemand struct{}

type ExecutionSpecTriggerSchedule struct {
	// Cron: string, required
	Cron terra.StringValue `hcl:"cron,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ExecutionStatusAttributes struct {
	ref terra.Reference
}

func (es ExecutionStatusAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es ExecutionStatusAttributes) InternalWithRef(ref terra.Reference) ExecutionStatusAttributes {
	return ExecutionStatusAttributes{ref: ref}
}

func (es ExecutionStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es ExecutionStatusAttributes) LatestJobEndTime() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("latest_job_end_time"))
}

func (es ExecutionStatusAttributes) LatestJobStartTime() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("latest_job_start_time"))
}

type DataAttributes struct {
	ref terra.Reference
}

func (d DataAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataAttributes) InternalWithRef(ref terra.Reference) DataAttributes {
	return DataAttributes{ref: ref}
}

func (d DataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataAttributes) Entity() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("entity"))
}

func (d DataAttributes) Resource() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("resource"))
}

type DataProfileSpecAttributes struct {
	ref terra.Reference
}

func (dps DataProfileSpecAttributes) InternalRef() (terra.Reference, error) {
	return dps.ref, nil
}

func (dps DataProfileSpecAttributes) InternalWithRef(ref terra.Reference) DataProfileSpecAttributes {
	return DataProfileSpecAttributes{ref: ref}
}

func (dps DataProfileSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dps.ref.InternalTokens()
}

func (dps DataProfileSpecAttributes) RowFilter() terra.StringValue {
	return terra.ReferenceAsString(dps.ref.Append("row_filter"))
}

func (dps DataProfileSpecAttributes) SamplingPercent() terra.NumberValue {
	return terra.ReferenceAsNumber(dps.ref.Append("sampling_percent"))
}

func (dps DataProfileSpecAttributes) ExcludeFields() terra.ListValue[DataProfileSpecExcludeFieldsAttributes] {
	return terra.ReferenceAsList[DataProfileSpecExcludeFieldsAttributes](dps.ref.Append("exclude_fields"))
}

func (dps DataProfileSpecAttributes) IncludeFields() terra.ListValue[DataProfileSpecIncludeFieldsAttributes] {
	return terra.ReferenceAsList[DataProfileSpecIncludeFieldsAttributes](dps.ref.Append("include_fields"))
}

func (dps DataProfileSpecAttributes) PostScanActions() terra.ListValue[DataProfileSpecPostScanActionsAttributes] {
	return terra.ReferenceAsList[DataProfileSpecPostScanActionsAttributes](dps.ref.Append("post_scan_actions"))
}

type DataProfileSpecExcludeFieldsAttributes struct {
	ref terra.Reference
}

func (ef DataProfileSpecExcludeFieldsAttributes) InternalRef() (terra.Reference, error) {
	return ef.ref, nil
}

func (ef DataProfileSpecExcludeFieldsAttributes) InternalWithRef(ref terra.Reference) DataProfileSpecExcludeFieldsAttributes {
	return DataProfileSpecExcludeFieldsAttributes{ref: ref}
}

func (ef DataProfileSpecExcludeFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ef.ref.InternalTokens()
}

func (ef DataProfileSpecExcludeFieldsAttributes) FieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ef.ref.Append("field_names"))
}

type DataProfileSpecIncludeFieldsAttributes struct {
	ref terra.Reference
}

func (_if DataProfileSpecIncludeFieldsAttributes) InternalRef() (terra.Reference, error) {
	return _if.ref, nil
}

func (_if DataProfileSpecIncludeFieldsAttributes) InternalWithRef(ref terra.Reference) DataProfileSpecIncludeFieldsAttributes {
	return DataProfileSpecIncludeFieldsAttributes{ref: ref}
}

func (_if DataProfileSpecIncludeFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return _if.ref.InternalTokens()
}

func (_if DataProfileSpecIncludeFieldsAttributes) FieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](_if.ref.Append("field_names"))
}

type DataProfileSpecPostScanActionsAttributes struct {
	ref terra.Reference
}

func (psa DataProfileSpecPostScanActionsAttributes) InternalRef() (terra.Reference, error) {
	return psa.ref, nil
}

func (psa DataProfileSpecPostScanActionsAttributes) InternalWithRef(ref terra.Reference) DataProfileSpecPostScanActionsAttributes {
	return DataProfileSpecPostScanActionsAttributes{ref: ref}
}

func (psa DataProfileSpecPostScanActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return psa.ref.InternalTokens()
}

func (psa DataProfileSpecPostScanActionsAttributes) BigqueryExport() terra.ListValue[DataProfileSpecPostScanActionsBigqueryExportAttributes] {
	return terra.ReferenceAsList[DataProfileSpecPostScanActionsBigqueryExportAttributes](psa.ref.Append("bigquery_export"))
}

type DataProfileSpecPostScanActionsBigqueryExportAttributes struct {
	ref terra.Reference
}

func (be DataProfileSpecPostScanActionsBigqueryExportAttributes) InternalRef() (terra.Reference, error) {
	return be.ref, nil
}

func (be DataProfileSpecPostScanActionsBigqueryExportAttributes) InternalWithRef(ref terra.Reference) DataProfileSpecPostScanActionsBigqueryExportAttributes {
	return DataProfileSpecPostScanActionsBigqueryExportAttributes{ref: ref}
}

func (be DataProfileSpecPostScanActionsBigqueryExportAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return be.ref.InternalTokens()
}

func (be DataProfileSpecPostScanActionsBigqueryExportAttributes) ResultsTable() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("results_table"))
}

type DataQualitySpecAttributes struct {
	ref terra.Reference
}

func (dqs DataQualitySpecAttributes) InternalRef() (terra.Reference, error) {
	return dqs.ref, nil
}

func (dqs DataQualitySpecAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecAttributes {
	return DataQualitySpecAttributes{ref: ref}
}

func (dqs DataQualitySpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dqs.ref.InternalTokens()
}

func (dqs DataQualitySpecAttributes) RowFilter() terra.StringValue {
	return terra.ReferenceAsString(dqs.ref.Append("row_filter"))
}

func (dqs DataQualitySpecAttributes) SamplingPercent() terra.NumberValue {
	return terra.ReferenceAsNumber(dqs.ref.Append("sampling_percent"))
}

func (dqs DataQualitySpecAttributes) PostScanActions() terra.ListValue[DataQualitySpecPostScanActionsAttributes] {
	return terra.ReferenceAsList[DataQualitySpecPostScanActionsAttributes](dqs.ref.Append("post_scan_actions"))
}

func (dqs DataQualitySpecAttributes) Rules() terra.ListValue[DataQualitySpecRulesAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesAttributes](dqs.ref.Append("rules"))
}

type DataQualitySpecPostScanActionsAttributes struct {
	ref terra.Reference
}

func (psa DataQualitySpecPostScanActionsAttributes) InternalRef() (terra.Reference, error) {
	return psa.ref, nil
}

func (psa DataQualitySpecPostScanActionsAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecPostScanActionsAttributes {
	return DataQualitySpecPostScanActionsAttributes{ref: ref}
}

func (psa DataQualitySpecPostScanActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return psa.ref.InternalTokens()
}

func (psa DataQualitySpecPostScanActionsAttributes) BigqueryExport() terra.ListValue[DataQualitySpecPostScanActionsBigqueryExportAttributes] {
	return terra.ReferenceAsList[DataQualitySpecPostScanActionsBigqueryExportAttributes](psa.ref.Append("bigquery_export"))
}

type DataQualitySpecPostScanActionsBigqueryExportAttributes struct {
	ref terra.Reference
}

func (be DataQualitySpecPostScanActionsBigqueryExportAttributes) InternalRef() (terra.Reference, error) {
	return be.ref, nil
}

func (be DataQualitySpecPostScanActionsBigqueryExportAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecPostScanActionsBigqueryExportAttributes {
	return DataQualitySpecPostScanActionsBigqueryExportAttributes{ref: ref}
}

func (be DataQualitySpecPostScanActionsBigqueryExportAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return be.ref.InternalTokens()
}

func (be DataQualitySpecPostScanActionsBigqueryExportAttributes) ResultsTable() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("results_table"))
}

type DataQualitySpecRulesAttributes struct {
	ref terra.Reference
}

func (r DataQualitySpecRulesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataQualitySpecRulesAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesAttributes {
	return DataQualitySpecRulesAttributes{ref: ref}
}

func (r DataQualitySpecRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataQualitySpecRulesAttributes) Column() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("column"))
}

func (r DataQualitySpecRulesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r DataQualitySpecRulesAttributes) Dimension() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("dimension"))
}

func (r DataQualitySpecRulesAttributes) IgnoreNull() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("ignore_null"))
}

func (r DataQualitySpecRulesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("name"))
}

func (r DataQualitySpecRulesAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("threshold"))
}

func (r DataQualitySpecRulesAttributes) NonNullExpectation() terra.ListValue[DataQualitySpecRulesNonNullExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesNonNullExpectationAttributes](r.ref.Append("non_null_expectation"))
}

func (r DataQualitySpecRulesAttributes) RangeExpectation() terra.ListValue[DataQualitySpecRulesRangeExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesRangeExpectationAttributes](r.ref.Append("range_expectation"))
}

func (r DataQualitySpecRulesAttributes) RegexExpectation() terra.ListValue[DataQualitySpecRulesRegexExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesRegexExpectationAttributes](r.ref.Append("regex_expectation"))
}

func (r DataQualitySpecRulesAttributes) RowConditionExpectation() terra.ListValue[DataQualitySpecRulesRowConditionExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesRowConditionExpectationAttributes](r.ref.Append("row_condition_expectation"))
}

func (r DataQualitySpecRulesAttributes) SetExpectation() terra.ListValue[DataQualitySpecRulesSetExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesSetExpectationAttributes](r.ref.Append("set_expectation"))
}

func (r DataQualitySpecRulesAttributes) StatisticRangeExpectation() terra.ListValue[DataQualitySpecRulesStatisticRangeExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesStatisticRangeExpectationAttributes](r.ref.Append("statistic_range_expectation"))
}

func (r DataQualitySpecRulesAttributes) TableConditionExpectation() terra.ListValue[DataQualitySpecRulesTableConditionExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesTableConditionExpectationAttributes](r.ref.Append("table_condition_expectation"))
}

func (r DataQualitySpecRulesAttributes) UniquenessExpectation() terra.ListValue[DataQualitySpecRulesUniquenessExpectationAttributes] {
	return terra.ReferenceAsList[DataQualitySpecRulesUniquenessExpectationAttributes](r.ref.Append("uniqueness_expectation"))
}

type DataQualitySpecRulesNonNullExpectationAttributes struct {
	ref terra.Reference
}

func (nne DataQualitySpecRulesNonNullExpectationAttributes) InternalRef() (terra.Reference, error) {
	return nne.ref, nil
}

func (nne DataQualitySpecRulesNonNullExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesNonNullExpectationAttributes {
	return DataQualitySpecRulesNonNullExpectationAttributes{ref: ref}
}

func (nne DataQualitySpecRulesNonNullExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nne.ref.InternalTokens()
}

type DataQualitySpecRulesRangeExpectationAttributes struct {
	ref terra.Reference
}

func (re DataQualitySpecRulesRangeExpectationAttributes) InternalRef() (terra.Reference, error) {
	return re.ref, nil
}

func (re DataQualitySpecRulesRangeExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesRangeExpectationAttributes {
	return DataQualitySpecRulesRangeExpectationAttributes{ref: ref}
}

func (re DataQualitySpecRulesRangeExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return re.ref.InternalTokens()
}

func (re DataQualitySpecRulesRangeExpectationAttributes) MaxValue() terra.StringValue {
	return terra.ReferenceAsString(re.ref.Append("max_value"))
}

func (re DataQualitySpecRulesRangeExpectationAttributes) MinValue() terra.StringValue {
	return terra.ReferenceAsString(re.ref.Append("min_value"))
}

func (re DataQualitySpecRulesRangeExpectationAttributes) StrictMaxEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("strict_max_enabled"))
}

func (re DataQualitySpecRulesRangeExpectationAttributes) StrictMinEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("strict_min_enabled"))
}

type DataQualitySpecRulesRegexExpectationAttributes struct {
	ref terra.Reference
}

func (re DataQualitySpecRulesRegexExpectationAttributes) InternalRef() (terra.Reference, error) {
	return re.ref, nil
}

func (re DataQualitySpecRulesRegexExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesRegexExpectationAttributes {
	return DataQualitySpecRulesRegexExpectationAttributes{ref: ref}
}

func (re DataQualitySpecRulesRegexExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return re.ref.InternalTokens()
}

func (re DataQualitySpecRulesRegexExpectationAttributes) Regex() terra.StringValue {
	return terra.ReferenceAsString(re.ref.Append("regex"))
}

type DataQualitySpecRulesRowConditionExpectationAttributes struct {
	ref terra.Reference
}

func (rce DataQualitySpecRulesRowConditionExpectationAttributes) InternalRef() (terra.Reference, error) {
	return rce.ref, nil
}

func (rce DataQualitySpecRulesRowConditionExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesRowConditionExpectationAttributes {
	return DataQualitySpecRulesRowConditionExpectationAttributes{ref: ref}
}

func (rce DataQualitySpecRulesRowConditionExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rce.ref.InternalTokens()
}

func (rce DataQualitySpecRulesRowConditionExpectationAttributes) SqlExpression() terra.StringValue {
	return terra.ReferenceAsString(rce.ref.Append("sql_expression"))
}

type DataQualitySpecRulesSetExpectationAttributes struct {
	ref terra.Reference
}

func (se DataQualitySpecRulesSetExpectationAttributes) InternalRef() (terra.Reference, error) {
	return se.ref, nil
}

func (se DataQualitySpecRulesSetExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesSetExpectationAttributes {
	return DataQualitySpecRulesSetExpectationAttributes{ref: ref}
}

func (se DataQualitySpecRulesSetExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return se.ref.InternalTokens()
}

func (se DataQualitySpecRulesSetExpectationAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](se.ref.Append("values"))
}

type DataQualitySpecRulesStatisticRangeExpectationAttributes struct {
	ref terra.Reference
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) InternalRef() (terra.Reference, error) {
	return sre.ref, nil
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesStatisticRangeExpectationAttributes {
	return DataQualitySpecRulesStatisticRangeExpectationAttributes{ref: ref}
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sre.ref.InternalTokens()
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) MaxValue() terra.StringValue {
	return terra.ReferenceAsString(sre.ref.Append("max_value"))
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) MinValue() terra.StringValue {
	return terra.ReferenceAsString(sre.ref.Append("min_value"))
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) Statistic() terra.StringValue {
	return terra.ReferenceAsString(sre.ref.Append("statistic"))
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) StrictMaxEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sre.ref.Append("strict_max_enabled"))
}

func (sre DataQualitySpecRulesStatisticRangeExpectationAttributes) StrictMinEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sre.ref.Append("strict_min_enabled"))
}

type DataQualitySpecRulesTableConditionExpectationAttributes struct {
	ref terra.Reference
}

func (tce DataQualitySpecRulesTableConditionExpectationAttributes) InternalRef() (terra.Reference, error) {
	return tce.ref, nil
}

func (tce DataQualitySpecRulesTableConditionExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesTableConditionExpectationAttributes {
	return DataQualitySpecRulesTableConditionExpectationAttributes{ref: ref}
}

func (tce DataQualitySpecRulesTableConditionExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tce.ref.InternalTokens()
}

func (tce DataQualitySpecRulesTableConditionExpectationAttributes) SqlExpression() terra.StringValue {
	return terra.ReferenceAsString(tce.ref.Append("sql_expression"))
}

type DataQualitySpecRulesUniquenessExpectationAttributes struct {
	ref terra.Reference
}

func (ue DataQualitySpecRulesUniquenessExpectationAttributes) InternalRef() (terra.Reference, error) {
	return ue.ref, nil
}

func (ue DataQualitySpecRulesUniquenessExpectationAttributes) InternalWithRef(ref terra.Reference) DataQualitySpecRulesUniquenessExpectationAttributes {
	return DataQualitySpecRulesUniquenessExpectationAttributes{ref: ref}
}

func (ue DataQualitySpecRulesUniquenessExpectationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ue.ref.InternalTokens()
}

type ExecutionSpecAttributes struct {
	ref terra.Reference
}

func (es ExecutionSpecAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es ExecutionSpecAttributes) InternalWithRef(ref terra.Reference) ExecutionSpecAttributes {
	return ExecutionSpecAttributes{ref: ref}
}

func (es ExecutionSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es ExecutionSpecAttributes) Field() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("field"))
}

func (es ExecutionSpecAttributes) Trigger() terra.ListValue[ExecutionSpecTriggerAttributes] {
	return terra.ReferenceAsList[ExecutionSpecTriggerAttributes](es.ref.Append("trigger"))
}

type ExecutionSpecTriggerAttributes struct {
	ref terra.Reference
}

func (t ExecutionSpecTriggerAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ExecutionSpecTriggerAttributes) InternalWithRef(ref terra.Reference) ExecutionSpecTriggerAttributes {
	return ExecutionSpecTriggerAttributes{ref: ref}
}

func (t ExecutionSpecTriggerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ExecutionSpecTriggerAttributes) OnDemand() terra.ListValue[ExecutionSpecTriggerOnDemandAttributes] {
	return terra.ReferenceAsList[ExecutionSpecTriggerOnDemandAttributes](t.ref.Append("on_demand"))
}

func (t ExecutionSpecTriggerAttributes) Schedule() terra.ListValue[ExecutionSpecTriggerScheduleAttributes] {
	return terra.ReferenceAsList[ExecutionSpecTriggerScheduleAttributes](t.ref.Append("schedule"))
}

type ExecutionSpecTriggerOnDemandAttributes struct {
	ref terra.Reference
}

func (od ExecutionSpecTriggerOnDemandAttributes) InternalRef() (terra.Reference, error) {
	return od.ref, nil
}

func (od ExecutionSpecTriggerOnDemandAttributes) InternalWithRef(ref terra.Reference) ExecutionSpecTriggerOnDemandAttributes {
	return ExecutionSpecTriggerOnDemandAttributes{ref: ref}
}

func (od ExecutionSpecTriggerOnDemandAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return od.ref.InternalTokens()
}

type ExecutionSpecTriggerScheduleAttributes struct {
	ref terra.Reference
}

func (s ExecutionSpecTriggerScheduleAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ExecutionSpecTriggerScheduleAttributes) InternalWithRef(ref terra.Reference) ExecutionSpecTriggerScheduleAttributes {
	return ExecutionSpecTriggerScheduleAttributes{ref: ref}
}

func (s ExecutionSpecTriggerScheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ExecutionSpecTriggerScheduleAttributes) Cron() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("cron"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ExecutionStatusState struct {
	LatestJobEndTime   string `json:"latest_job_end_time"`
	LatestJobStartTime string `json:"latest_job_start_time"`
}

type DataState struct {
	Entity   string `json:"entity"`
	Resource string `json:"resource"`
}

type DataProfileSpecState struct {
	RowFilter       string                                `json:"row_filter"`
	SamplingPercent float64                               `json:"sampling_percent"`
	ExcludeFields   []DataProfileSpecExcludeFieldsState   `json:"exclude_fields"`
	IncludeFields   []DataProfileSpecIncludeFieldsState   `json:"include_fields"`
	PostScanActions []DataProfileSpecPostScanActionsState `json:"post_scan_actions"`
}

type DataProfileSpecExcludeFieldsState struct {
	FieldNames []string `json:"field_names"`
}

type DataProfileSpecIncludeFieldsState struct {
	FieldNames []string `json:"field_names"`
}

type DataProfileSpecPostScanActionsState struct {
	BigqueryExport []DataProfileSpecPostScanActionsBigqueryExportState `json:"bigquery_export"`
}

type DataProfileSpecPostScanActionsBigqueryExportState struct {
	ResultsTable string `json:"results_table"`
}

type DataQualitySpecState struct {
	RowFilter       string                                `json:"row_filter"`
	SamplingPercent float64                               `json:"sampling_percent"`
	PostScanActions []DataQualitySpecPostScanActionsState `json:"post_scan_actions"`
	Rules           []DataQualitySpecRulesState           `json:"rules"`
}

type DataQualitySpecPostScanActionsState struct {
	BigqueryExport []DataQualitySpecPostScanActionsBigqueryExportState `json:"bigquery_export"`
}

type DataQualitySpecPostScanActionsBigqueryExportState struct {
	ResultsTable string `json:"results_table"`
}

type DataQualitySpecRulesState struct {
	Column                    string                                               `json:"column"`
	Description               string                                               `json:"description"`
	Dimension                 string                                               `json:"dimension"`
	IgnoreNull                bool                                                 `json:"ignore_null"`
	Name                      string                                               `json:"name"`
	Threshold                 float64                                              `json:"threshold"`
	NonNullExpectation        []DataQualitySpecRulesNonNullExpectationState        `json:"non_null_expectation"`
	RangeExpectation          []DataQualitySpecRulesRangeExpectationState          `json:"range_expectation"`
	RegexExpectation          []DataQualitySpecRulesRegexExpectationState          `json:"regex_expectation"`
	RowConditionExpectation   []DataQualitySpecRulesRowConditionExpectationState   `json:"row_condition_expectation"`
	SetExpectation            []DataQualitySpecRulesSetExpectationState            `json:"set_expectation"`
	StatisticRangeExpectation []DataQualitySpecRulesStatisticRangeExpectationState `json:"statistic_range_expectation"`
	TableConditionExpectation []DataQualitySpecRulesTableConditionExpectationState `json:"table_condition_expectation"`
	UniquenessExpectation     []DataQualitySpecRulesUniquenessExpectationState     `json:"uniqueness_expectation"`
}

type DataQualitySpecRulesNonNullExpectationState struct{}

type DataQualitySpecRulesRangeExpectationState struct {
	MaxValue         string `json:"max_value"`
	MinValue         string `json:"min_value"`
	StrictMaxEnabled bool   `json:"strict_max_enabled"`
	StrictMinEnabled bool   `json:"strict_min_enabled"`
}

type DataQualitySpecRulesRegexExpectationState struct {
	Regex string `json:"regex"`
}

type DataQualitySpecRulesRowConditionExpectationState struct {
	SqlExpression string `json:"sql_expression"`
}

type DataQualitySpecRulesSetExpectationState struct {
	Values []string `json:"values"`
}

type DataQualitySpecRulesStatisticRangeExpectationState struct {
	MaxValue         string `json:"max_value"`
	MinValue         string `json:"min_value"`
	Statistic        string `json:"statistic"`
	StrictMaxEnabled bool   `json:"strict_max_enabled"`
	StrictMinEnabled bool   `json:"strict_min_enabled"`
}

type DataQualitySpecRulesTableConditionExpectationState struct {
	SqlExpression string `json:"sql_expression"`
}

type DataQualitySpecRulesUniquenessExpectationState struct{}

type ExecutionSpecState struct {
	Field   string                      `json:"field"`
	Trigger []ExecutionSpecTriggerState `json:"trigger"`
}

type ExecutionSpecTriggerState struct {
	OnDemand []ExecutionSpecTriggerOnDemandState `json:"on_demand"`
	Schedule []ExecutionSpecTriggerScheduleState `json:"schedule"`
}

type ExecutionSpecTriggerOnDemandState struct{}

type ExecutionSpecTriggerScheduleState struct {
	Cron string `json:"cron"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
