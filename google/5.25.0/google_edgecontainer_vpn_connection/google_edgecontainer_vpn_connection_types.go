// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_edgecontainer_vpn_connection

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type VpcProject struct {
	// ProjectId: string, optional
	ProjectId terra.StringValue `hcl:"project_id,attr"`
}

type DetailsAttributes struct {
	ref terra.Reference
}

func (d DetailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DetailsAttributes) InternalWithRef(ref terra.Reference) DetailsAttributes {
	return DetailsAttributes{ref: ref}
}

func (d DetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DetailsAttributes) Error() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("error"))
}

func (d DetailsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("state"))
}

func (d DetailsAttributes) CloudRouter() terra.ListValue[DetailsCloudRouterAttributes] {
	return terra.ReferenceAsList[DetailsCloudRouterAttributes](d.ref.Append("cloud_router"))
}

func (d DetailsAttributes) CloudVpns() terra.ListValue[DetailsCloudVpnsAttributes] {
	return terra.ReferenceAsList[DetailsCloudVpnsAttributes](d.ref.Append("cloud_vpns"))
}

type DetailsCloudRouterAttributes struct {
	ref terra.Reference
}

func (cr DetailsCloudRouterAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr DetailsCloudRouterAttributes) InternalWithRef(ref terra.Reference) DetailsCloudRouterAttributes {
	return DetailsCloudRouterAttributes{ref: ref}
}

func (cr DetailsCloudRouterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr DetailsCloudRouterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("name"))
}

type DetailsCloudVpnsAttributes struct {
	ref terra.Reference
}

func (cv DetailsCloudVpnsAttributes) InternalRef() (terra.Reference, error) {
	return cv.ref, nil
}

func (cv DetailsCloudVpnsAttributes) InternalWithRef(ref terra.Reference) DetailsCloudVpnsAttributes {
	return DetailsCloudVpnsAttributes{ref: ref}
}

func (cv DetailsCloudVpnsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cv.ref.InternalTokens()
}

func (cv DetailsCloudVpnsAttributes) Gateway() terra.StringValue {
	return terra.ReferenceAsString(cv.ref.Append("gateway"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type VpcProjectAttributes struct {
	ref terra.Reference
}

func (vp VpcProjectAttributes) InternalRef() (terra.Reference, error) {
	return vp.ref, nil
}

func (vp VpcProjectAttributes) InternalWithRef(ref terra.Reference) VpcProjectAttributes {
	return VpcProjectAttributes{ref: ref}
}

func (vp VpcProjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vp.ref.InternalTokens()
}

func (vp VpcProjectAttributes) ProjectId() terra.StringValue {
	return terra.ReferenceAsString(vp.ref.Append("project_id"))
}

type DetailsState struct {
	Error       string                    `json:"error"`
	State       string                    `json:"state"`
	CloudRouter []DetailsCloudRouterState `json:"cloud_router"`
	CloudVpns   []DetailsCloudVpnsState   `json:"cloud_vpns"`
}

type DetailsCloudRouterState struct {
	Name string `json:"name"`
}

type DetailsCloudVpnsState struct {
	Gateway string `json:"gateway"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type VpcProjectState struct {
	ProjectId string `json:"project_id"`
}
