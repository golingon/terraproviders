// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_identity_group_memberships

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataMembershipsAttributes struct {
	ref terra.Reference
}

func (m DataMembershipsAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataMembershipsAttributes) InternalWithRef(ref terra.Reference) DataMembershipsAttributes {
	return DataMembershipsAttributes{ref: ref}
}

func (m DataMembershipsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataMembershipsAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("create_time"))
}

func (m DataMembershipsAttributes) Group() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("group"))
}

func (m DataMembershipsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("name"))
}

func (m DataMembershipsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("type"))
}

func (m DataMembershipsAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("update_time"))
}

func (m DataMembershipsAttributes) PreferredMemberKey() terra.ListValue[DataMembershipsPreferredMemberKeyAttributes] {
	return terra.ReferenceAsList[DataMembershipsPreferredMemberKeyAttributes](m.ref.Append("preferred_member_key"))
}

func (m DataMembershipsAttributes) Roles() terra.SetValue[DataMembershipsRolesAttributes] {
	return terra.ReferenceAsSet[DataMembershipsRolesAttributes](m.ref.Append("roles"))
}

type DataMembershipsPreferredMemberKeyAttributes struct {
	ref terra.Reference
}

func (pmk DataMembershipsPreferredMemberKeyAttributes) InternalRef() (terra.Reference, error) {
	return pmk.ref, nil
}

func (pmk DataMembershipsPreferredMemberKeyAttributes) InternalWithRef(ref terra.Reference) DataMembershipsPreferredMemberKeyAttributes {
	return DataMembershipsPreferredMemberKeyAttributes{ref: ref}
}

func (pmk DataMembershipsPreferredMemberKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pmk.ref.InternalTokens()
}

func (pmk DataMembershipsPreferredMemberKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pmk.ref.Append("id"))
}

func (pmk DataMembershipsPreferredMemberKeyAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(pmk.ref.Append("namespace"))
}

type DataMembershipsRolesAttributes struct {
	ref terra.Reference
}

func (r DataMembershipsRolesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataMembershipsRolesAttributes) InternalWithRef(ref terra.Reference) DataMembershipsRolesAttributes {
	return DataMembershipsRolesAttributes{ref: ref}
}

func (r DataMembershipsRolesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataMembershipsRolesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("name"))
}

func (r DataMembershipsRolesAttributes) ExpiryDetail() terra.ListValue[DataMembershipsRolesExpiryDetailAttributes] {
	return terra.ReferenceAsList[DataMembershipsRolesExpiryDetailAttributes](r.ref.Append("expiry_detail"))
}

type DataMembershipsRolesExpiryDetailAttributes struct {
	ref terra.Reference
}

func (ed DataMembershipsRolesExpiryDetailAttributes) InternalRef() (terra.Reference, error) {
	return ed.ref, nil
}

func (ed DataMembershipsRolesExpiryDetailAttributes) InternalWithRef(ref terra.Reference) DataMembershipsRolesExpiryDetailAttributes {
	return DataMembershipsRolesExpiryDetailAttributes{ref: ref}
}

func (ed DataMembershipsRolesExpiryDetailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ed.ref.InternalTokens()
}

func (ed DataMembershipsRolesExpiryDetailAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("expire_time"))
}

type DataMembershipsState struct {
	CreateTime         string                                   `json:"create_time"`
	Group              string                                   `json:"group"`
	Name               string                                   `json:"name"`
	Type               string                                   `json:"type"`
	UpdateTime         string                                   `json:"update_time"`
	PreferredMemberKey []DataMembershipsPreferredMemberKeyState `json:"preferred_member_key"`
	Roles              []DataMembershipsRolesState              `json:"roles"`
}

type DataMembershipsPreferredMemberKeyState struct {
	Id        string `json:"id"`
	Namespace string `json:"namespace"`
}

type DataMembershipsRolesState struct {
	Name         string                                  `json:"name"`
	ExpiryDetail []DataMembershipsRolesExpiryDetailState `json:"expiry_detail"`
}

type DataMembershipsRolesExpiryDetailState struct {
	ExpireTime string `json:"expire_time"`
}
