// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_access_context_manager_authorized_orgs_desc

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_access_context_manager_authorized_orgs_desc.
type Resource struct {
	Name      string
	Args      Args
	state     *googleAccessContextManagerAuthorizedOrgsDescState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gacmaod *Resource) Type() string {
	return "google_access_context_manager_authorized_orgs_desc"
}

// LocalName returns the local name for [Resource].
func (gacmaod *Resource) LocalName() string {
	return gacmaod.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gacmaod *Resource) Configuration() interface{} {
	return gacmaod.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gacmaod *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gacmaod)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gacmaod *Resource) Dependencies() terra.Dependencies {
	return gacmaod.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gacmaod *Resource) LifecycleManagement() *terra.Lifecycle {
	return gacmaod.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gacmaod *Resource) Attributes() googleAccessContextManagerAuthorizedOrgsDescAttributes {
	return googleAccessContextManagerAuthorizedOrgsDescAttributes{ref: terra.ReferenceResource(gacmaod)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gacmaod *Resource) ImportState(state io.Reader) error {
	gacmaod.state = &googleAccessContextManagerAuthorizedOrgsDescState{}
	if err := json.NewDecoder(state).Decode(gacmaod.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gacmaod.Type(), gacmaod.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gacmaod *Resource) State() (*googleAccessContextManagerAuthorizedOrgsDescState, bool) {
	return gacmaod.state, gacmaod.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gacmaod *Resource) StateMust() *googleAccessContextManagerAuthorizedOrgsDescState {
	if gacmaod.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gacmaod.Type(), gacmaod.LocalName()))
	}
	return gacmaod.state
}

// Args contains the configurations for google_access_context_manager_authorized_orgs_desc.
type Args struct {
	// AssetType: string, optional
	AssetType terra.StringValue `hcl:"asset_type,attr"`
	// AuthorizationDirection: string, optional
	AuthorizationDirection terra.StringValue `hcl:"authorization_direction,attr"`
	// AuthorizationType: string, optional
	AuthorizationType terra.StringValue `hcl:"authorization_type,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Orgs: list of string, optional
	Orgs terra.ListValue[terra.StringValue] `hcl:"orgs,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleAccessContextManagerAuthorizedOrgsDescAttributes struct {
	ref terra.Reference
}

// AssetType returns a reference to field asset_type of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) AssetType() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("asset_type"))
}

// AuthorizationDirection returns a reference to field authorization_direction of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) AuthorizationDirection() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("authorization_direction"))
}

// AuthorizationType returns a reference to field authorization_type of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) AuthorizationType() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("authorization_type"))
}

// CreateTime returns a reference to field create_time of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("create_time"))
}

// Id returns a reference to field id of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("id"))
}

// Name returns a reference to field name of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("name"))
}

// Orgs returns a reference to field orgs of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) Orgs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gacmaod.ref.Append("orgs"))
}

// Parent returns a reference to field parent of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("parent"))
}

// UpdateTime returns a reference to field update_time of google_access_context_manager_authorized_orgs_desc.
func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gacmaod.ref.Append("update_time"))
}

func (gacmaod googleAccessContextManagerAuthorizedOrgsDescAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gacmaod.ref.Append("timeouts"))
}

type googleAccessContextManagerAuthorizedOrgsDescState struct {
	AssetType              string         `json:"asset_type"`
	AuthorizationDirection string         `json:"authorization_direction"`
	AuthorizationType      string         `json:"authorization_type"`
	CreateTime             string         `json:"create_time"`
	Id                     string         `json:"id"`
	Name                   string         `json:"name"`
	Orgs                   []string       `json:"orgs"`
	Parent                 string         `json:"parent"`
	UpdateTime             string         `json:"update_time"`
	Timeouts               *TimeoutsState `json:"timeouts"`
}
