// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_node_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AutoscalingPolicy struct {
	// MaxNodes: number, optional
	MaxNodes terra.NumberValue `hcl:"max_nodes,attr"`
	// MinNodes: number, optional
	MinNodes terra.NumberValue `hcl:"min_nodes,attr"`
	// Mode: string, optional
	Mode terra.StringValue `hcl:"mode,attr"`
}

type MaintenanceWindow struct {
	// StartTime: string, required
	StartTime terra.StringValue `hcl:"start_time,attr" validate:"required"`
}

type ShareSettings struct {
	// ShareType: string, required
	ShareType terra.StringValue `hcl:"share_type,attr" validate:"required"`
	// ShareSettingsProjectMap: min=0
	ProjectMap []ShareSettingsProjectMap `hcl:"project_map,block" validate:"min=0"`
}

type ShareSettingsProjectMap struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// ProjectId: string, required
	ProjectId terra.StringValue `hcl:"project_id,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AutoscalingPolicyAttributes struct {
	ref terra.Reference
}

func (ap AutoscalingPolicyAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap AutoscalingPolicyAttributes) InternalWithRef(ref terra.Reference) AutoscalingPolicyAttributes {
	return AutoscalingPolicyAttributes{ref: ref}
}

func (ap AutoscalingPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap AutoscalingPolicyAttributes) MaxNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(ap.ref.Append("max_nodes"))
}

func (ap AutoscalingPolicyAttributes) MinNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(ap.ref.Append("min_nodes"))
}

func (ap AutoscalingPolicyAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("mode"))
}

type MaintenanceWindowAttributes struct {
	ref terra.Reference
}

func (mw MaintenanceWindowAttributes) InternalRef() (terra.Reference, error) {
	return mw.ref, nil
}

func (mw MaintenanceWindowAttributes) InternalWithRef(ref terra.Reference) MaintenanceWindowAttributes {
	return MaintenanceWindowAttributes{ref: ref}
}

func (mw MaintenanceWindowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mw.ref.InternalTokens()
}

func (mw MaintenanceWindowAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("start_time"))
}

type ShareSettingsAttributes struct {
	ref terra.Reference
}

func (ss ShareSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss ShareSettingsAttributes) InternalWithRef(ref terra.Reference) ShareSettingsAttributes {
	return ShareSettingsAttributes{ref: ref}
}

func (ss ShareSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss ShareSettingsAttributes) ShareType() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("share_type"))
}

func (ss ShareSettingsAttributes) ProjectMap() terra.SetValue[ShareSettingsProjectMapAttributes] {
	return terra.ReferenceAsSet[ShareSettingsProjectMapAttributes](ss.ref.Append("project_map"))
}

type ShareSettingsProjectMapAttributes struct {
	ref terra.Reference
}

func (pm ShareSettingsProjectMapAttributes) InternalRef() (terra.Reference, error) {
	return pm.ref, nil
}

func (pm ShareSettingsProjectMapAttributes) InternalWithRef(ref terra.Reference) ShareSettingsProjectMapAttributes {
	return ShareSettingsProjectMapAttributes{ref: ref}
}

func (pm ShareSettingsProjectMapAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pm.ref.InternalTokens()
}

func (pm ShareSettingsProjectMapAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pm.ref.Append("id"))
}

func (pm ShareSettingsProjectMapAttributes) ProjectId() terra.StringValue {
	return terra.ReferenceAsString(pm.ref.Append("project_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AutoscalingPolicyState struct {
	MaxNodes float64 `json:"max_nodes"`
	MinNodes float64 `json:"min_nodes"`
	Mode     string  `json:"mode"`
}

type MaintenanceWindowState struct {
	StartTime string `json:"start_time"`
}

type ShareSettingsState struct {
	ShareType  string                         `json:"share_type"`
	ProjectMap []ShareSettingsProjectMapState `json:"project_map"`
}

type ShareSettingsProjectMapState struct {
	Id        string `json:"id"`
	ProjectId string `json:"project_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
