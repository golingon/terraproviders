// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_storage_default_object_access_control

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_storage_default_object_access_control.
type Resource struct {
	Name      string
	Args      Args
	state     *googleStorageDefaultObjectAccessControlState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gsdoac *Resource) Type() string {
	return "google_storage_default_object_access_control"
}

// LocalName returns the local name for [Resource].
func (gsdoac *Resource) LocalName() string {
	return gsdoac.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gsdoac *Resource) Configuration() interface{} {
	return gsdoac.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gsdoac *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gsdoac)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gsdoac *Resource) Dependencies() terra.Dependencies {
	return gsdoac.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gsdoac *Resource) LifecycleManagement() *terra.Lifecycle {
	return gsdoac.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gsdoac *Resource) Attributes() googleStorageDefaultObjectAccessControlAttributes {
	return googleStorageDefaultObjectAccessControlAttributes{ref: terra.ReferenceResource(gsdoac)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gsdoac *Resource) ImportState(state io.Reader) error {
	gsdoac.state = &googleStorageDefaultObjectAccessControlState{}
	if err := json.NewDecoder(state).Decode(gsdoac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gsdoac.Type(), gsdoac.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gsdoac *Resource) State() (*googleStorageDefaultObjectAccessControlState, bool) {
	return gsdoac.state, gsdoac.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gsdoac *Resource) StateMust() *googleStorageDefaultObjectAccessControlState {
	if gsdoac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gsdoac.Type(), gsdoac.LocalName()))
	}
	return gsdoac.state
}

// Args contains the configurations for google_storage_default_object_access_control.
type Args struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// Entity: string, required
	Entity terra.StringValue `hcl:"entity,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Object: string, optional
	Object terra.StringValue `hcl:"object,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleStorageDefaultObjectAccessControlAttributes struct {
	ref terra.Reference
}

// Bucket returns a reference to field bucket of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("bucket"))
}

// Domain returns a reference to field domain of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("domain"))
}

// Email returns a reference to field email of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("email"))
}

// Entity returns a reference to field entity of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Entity() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("entity"))
}

// EntityId returns a reference to field entity_id of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) EntityId() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("entity_id"))
}

// Generation returns a reference to field generation of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Generation() terra.NumberValue {
	return terra.ReferenceAsNumber(gsdoac.ref.Append("generation"))
}

// Id returns a reference to field id of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("id"))
}

// Object returns a reference to field object of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("object"))
}

// Role returns a reference to field role of google_storage_default_object_access_control.
func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(gsdoac.ref.Append("role"))
}

func (gsdoac googleStorageDefaultObjectAccessControlAttributes) ProjectTeam() terra.ListValue[ProjectTeamAttributes] {
	return terra.ReferenceAsList[ProjectTeamAttributes](gsdoac.ref.Append("project_team"))
}

func (gsdoac googleStorageDefaultObjectAccessControlAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gsdoac.ref.Append("timeouts"))
}

type googleStorageDefaultObjectAccessControlState struct {
	Bucket      string             `json:"bucket"`
	Domain      string             `json:"domain"`
	Email       string             `json:"email"`
	Entity      string             `json:"entity"`
	EntityId    string             `json:"entity_id"`
	Generation  float64            `json:"generation"`
	Id          string             `json:"id"`
	Object      string             `json:"object"`
	Role        string             `json:"role"`
	ProjectTeam []ProjectTeamState `json:"project_team"`
	Timeouts    *TimeoutsState     `json:"timeouts"`
}
