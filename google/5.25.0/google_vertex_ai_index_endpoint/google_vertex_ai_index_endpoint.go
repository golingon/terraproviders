// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_vertex_ai_index_endpoint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_vertex_ai_index_endpoint.
type Resource struct {
	Name      string
	Args      Args
	state     *googleVertexAiIndexEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gvaie *Resource) Type() string {
	return "google_vertex_ai_index_endpoint"
}

// LocalName returns the local name for [Resource].
func (gvaie *Resource) LocalName() string {
	return gvaie.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gvaie *Resource) Configuration() interface{} {
	return gvaie.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gvaie *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gvaie)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gvaie *Resource) Dependencies() terra.Dependencies {
	return gvaie.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gvaie *Resource) LifecycleManagement() *terra.Lifecycle {
	return gvaie.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gvaie *Resource) Attributes() googleVertexAiIndexEndpointAttributes {
	return googleVertexAiIndexEndpointAttributes{ref: terra.ReferenceResource(gvaie)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gvaie *Resource) ImportState(state io.Reader) error {
	gvaie.state = &googleVertexAiIndexEndpointState{}
	if err := json.NewDecoder(state).Decode(gvaie.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gvaie.Type(), gvaie.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gvaie *Resource) State() (*googleVertexAiIndexEndpointState, bool) {
	return gvaie.state, gvaie.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gvaie *Resource) StateMust() *googleVertexAiIndexEndpointState {
	if gvaie.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gvaie.Type(), gvaie.LocalName()))
	}
	return gvaie.state
}

// Args contains the configurations for google_vertex_ai_index_endpoint.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Network: string, optional
	Network terra.StringValue `hcl:"network,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// PublicEndpointEnabled: bool, optional
	PublicEndpointEnabled terra.BoolValue `hcl:"public_endpoint_enabled,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// PrivateServiceConnectConfig: optional
	PrivateServiceConnectConfig *PrivateServiceConnectConfig `hcl:"private_service_connect_config,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleVertexAiIndexEndpointAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("create_time"))
}

// Description returns a reference to field description of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("display_name"))
}

// EffectiveLabels returns a reference to field effective_labels of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gvaie.ref.Append("effective_labels"))
}

// Etag returns a reference to field etag of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("etag"))
}

// Id returns a reference to field id of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("id"))
}

// Labels returns a reference to field labels of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gvaie.ref.Append("labels"))
}

// Name returns a reference to field name of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("name"))
}

// Network returns a reference to field network of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("network"))
}

// Project returns a reference to field project of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("project"))
}

// PublicEndpointDomainName returns a reference to field public_endpoint_domain_name of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) PublicEndpointDomainName() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("public_endpoint_domain_name"))
}

// PublicEndpointEnabled returns a reference to field public_endpoint_enabled of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) PublicEndpointEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(gvaie.ref.Append("public_endpoint_enabled"))
}

// Region returns a reference to field region of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("region"))
}

// TerraformLabels returns a reference to field terraform_labels of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gvaie.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_vertex_ai_index_endpoint.
func (gvaie googleVertexAiIndexEndpointAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gvaie.ref.Append("update_time"))
}

func (gvaie googleVertexAiIndexEndpointAttributes) PrivateServiceConnectConfig() terra.ListValue[PrivateServiceConnectConfigAttributes] {
	return terra.ReferenceAsList[PrivateServiceConnectConfigAttributes](gvaie.ref.Append("private_service_connect_config"))
}

func (gvaie googleVertexAiIndexEndpointAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gvaie.ref.Append("timeouts"))
}

type googleVertexAiIndexEndpointState struct {
	CreateTime                  string                             `json:"create_time"`
	Description                 string                             `json:"description"`
	DisplayName                 string                             `json:"display_name"`
	EffectiveLabels             map[string]string                  `json:"effective_labels"`
	Etag                        string                             `json:"etag"`
	Id                          string                             `json:"id"`
	Labels                      map[string]string                  `json:"labels"`
	Name                        string                             `json:"name"`
	Network                     string                             `json:"network"`
	Project                     string                             `json:"project"`
	PublicEndpointDomainName    string                             `json:"public_endpoint_domain_name"`
	PublicEndpointEnabled       bool                               `json:"public_endpoint_enabled"`
	Region                      string                             `json:"region"`
	TerraformLabels             map[string]string                  `json:"terraform_labels"`
	UpdateTime                  string                             `json:"update_time"`
	PrivateServiceConnectConfig []PrivateServiceConnectConfigState `json:"private_service_connect_config"`
	Timeouts                    *TimeoutsState                     `json:"timeouts"`
}
