// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_gkeonprem_bare_metal_admin_cluster

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_gkeonprem_bare_metal_admin_cluster.
type Resource struct {
	Name      string
	Args      Args
	state     *googleGkeonpremBareMetalAdminClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ggbmac *Resource) Type() string {
	return "google_gkeonprem_bare_metal_admin_cluster"
}

// LocalName returns the local name for [Resource].
func (ggbmac *Resource) LocalName() string {
	return ggbmac.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ggbmac *Resource) Configuration() interface{} {
	return ggbmac.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ggbmac *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ggbmac)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ggbmac *Resource) Dependencies() terra.Dependencies {
	return ggbmac.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ggbmac *Resource) LifecycleManagement() *terra.Lifecycle {
	return ggbmac.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ggbmac *Resource) Attributes() googleGkeonpremBareMetalAdminClusterAttributes {
	return googleGkeonpremBareMetalAdminClusterAttributes{ref: terra.ReferenceResource(ggbmac)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ggbmac *Resource) ImportState(state io.Reader) error {
	ggbmac.state = &googleGkeonpremBareMetalAdminClusterState{}
	if err := json.NewDecoder(state).Decode(ggbmac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ggbmac.Type(), ggbmac.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ggbmac *Resource) State() (*googleGkeonpremBareMetalAdminClusterState, bool) {
	return ggbmac.state, ggbmac.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ggbmac *Resource) StateMust() *googleGkeonpremBareMetalAdminClusterState {
	if ggbmac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ggbmac.Type(), ggbmac.LocalName()))
	}
	return ggbmac.state
}

// Args contains the configurations for google_gkeonprem_bare_metal_admin_cluster.
type Args struct {
	// Annotations: map of string, optional
	Annotations terra.MapValue[terra.StringValue] `hcl:"annotations,attr"`
	// BareMetalVersion: string, optional
	BareMetalVersion terra.StringValue `hcl:"bare_metal_version,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// ClusterOperations: optional
	ClusterOperations *ClusterOperations `hcl:"cluster_operations,block"`
	// ControlPlane: optional
	ControlPlane *ControlPlane `hcl:"control_plane,block"`
	// LoadBalancer: optional
	LoadBalancer *LoadBalancer `hcl:"load_balancer,block"`
	// MaintenanceConfig: optional
	MaintenanceConfig *MaintenanceConfig `hcl:"maintenance_config,block"`
	// NetworkConfig: optional
	NetworkConfig *NetworkConfig `hcl:"network_config,block"`
	// NodeAccessConfig: optional
	NodeAccessConfig *NodeAccessConfig `hcl:"node_access_config,block"`
	// NodeConfig: optional
	NodeConfig *NodeConfig `hcl:"node_config,block"`
	// Proxy: optional
	Proxy *Proxy `hcl:"proxy,block"`
	// SecurityConfig: optional
	SecurityConfig *SecurityConfig `hcl:"security_config,block"`
	// Storage: optional
	Storage *Storage `hcl:"storage,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleGkeonpremBareMetalAdminClusterAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ggbmac.ref.Append("annotations"))
}

// BareMetalVersion returns a reference to field bare_metal_version of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) BareMetalVersion() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("bare_metal_version"))
}

// CreateTime returns a reference to field create_time of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("create_time"))
}

// DeleteTime returns a reference to field delete_time of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("delete_time"))
}

// Description returns a reference to field description of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("description"))
}

// EffectiveAnnotations returns a reference to field effective_annotations of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ggbmac.ref.Append("effective_annotations"))
}

// Endpoint returns a reference to field endpoint of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("endpoint"))
}

// Etag returns a reference to field etag of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("etag"))
}

// Id returns a reference to field id of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("id"))
}

// LocalName returns a reference to field local_name of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) LocalName() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("local_name"))
}

// Location returns a reference to field location of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("location"))
}

// Name returns a reference to field name of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("name"))
}

// Project returns a reference to field project of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("project"))
}

// Reconciling returns a reference to field reconciling of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(ggbmac.ref.Append("reconciling"))
}

// State returns a reference to field state of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("state"))
}

// Uid returns a reference to field uid of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_gkeonprem_bare_metal_admin_cluster.
func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(ggbmac.ref.Append("update_time"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Fleet() terra.ListValue[FleetAttributes] {
	return terra.ReferenceAsList[FleetAttributes](ggbmac.ref.Append("fleet"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Status() terra.ListValue[StatusAttributes] {
	return terra.ReferenceAsList[StatusAttributes](ggbmac.ref.Append("status"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) ValidationCheck() terra.ListValue[ValidationCheckAttributes] {
	return terra.ReferenceAsList[ValidationCheckAttributes](ggbmac.ref.Append("validation_check"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) ClusterOperations() terra.ListValue[ClusterOperationsAttributes] {
	return terra.ReferenceAsList[ClusterOperationsAttributes](ggbmac.ref.Append("cluster_operations"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) ControlPlane() terra.ListValue[ControlPlaneAttributes] {
	return terra.ReferenceAsList[ControlPlaneAttributes](ggbmac.ref.Append("control_plane"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) LoadBalancer() terra.ListValue[LoadBalancerAttributes] {
	return terra.ReferenceAsList[LoadBalancerAttributes](ggbmac.ref.Append("load_balancer"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) MaintenanceConfig() terra.ListValue[MaintenanceConfigAttributes] {
	return terra.ReferenceAsList[MaintenanceConfigAttributes](ggbmac.ref.Append("maintenance_config"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) NetworkConfig() terra.ListValue[NetworkConfigAttributes] {
	return terra.ReferenceAsList[NetworkConfigAttributes](ggbmac.ref.Append("network_config"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) NodeAccessConfig() terra.ListValue[NodeAccessConfigAttributes] {
	return terra.ReferenceAsList[NodeAccessConfigAttributes](ggbmac.ref.Append("node_access_config"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) NodeConfig() terra.ListValue[NodeConfigAttributes] {
	return terra.ReferenceAsList[NodeConfigAttributes](ggbmac.ref.Append("node_config"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Proxy() terra.ListValue[ProxyAttributes] {
	return terra.ReferenceAsList[ProxyAttributes](ggbmac.ref.Append("proxy"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) SecurityConfig() terra.ListValue[SecurityConfigAttributes] {
	return terra.ReferenceAsList[SecurityConfigAttributes](ggbmac.ref.Append("security_config"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Storage() terra.ListValue[StorageAttributes] {
	return terra.ReferenceAsList[StorageAttributes](ggbmac.ref.Append("storage"))
}

func (ggbmac googleGkeonpremBareMetalAdminClusterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ggbmac.ref.Append("timeouts"))
}

type googleGkeonpremBareMetalAdminClusterState struct {
	Annotations          map[string]string        `json:"annotations"`
	BareMetalVersion     string                   `json:"bare_metal_version"`
	CreateTime           string                   `json:"create_time"`
	DeleteTime           string                   `json:"delete_time"`
	Description          string                   `json:"description"`
	EffectiveAnnotations map[string]string        `json:"effective_annotations"`
	Endpoint             string                   `json:"endpoint"`
	Etag                 string                   `json:"etag"`
	Id                   string                   `json:"id"`
	LocalName            string                   `json:"local_name"`
	Location             string                   `json:"location"`
	Name                 string                   `json:"name"`
	Project              string                   `json:"project"`
	Reconciling          bool                     `json:"reconciling"`
	State                string                   `json:"state"`
	Uid                  string                   `json:"uid"`
	UpdateTime           string                   `json:"update_time"`
	Fleet                []FleetState             `json:"fleet"`
	Status               []StatusState            `json:"status"`
	ValidationCheck      []ValidationCheckState   `json:"validation_check"`
	ClusterOperations    []ClusterOperationsState `json:"cluster_operations"`
	ControlPlane         []ControlPlaneState      `json:"control_plane"`
	LoadBalancer         []LoadBalancerState      `json:"load_balancer"`
	MaintenanceConfig    []MaintenanceConfigState `json:"maintenance_config"`
	NetworkConfig        []NetworkConfigState     `json:"network_config"`
	NodeAccessConfig     []NodeAccessConfigState  `json:"node_access_config"`
	NodeConfig           []NodeConfigState        `json:"node_config"`
	Proxy                []ProxyState             `json:"proxy"`
	SecurityConfig       []SecurityConfigState    `json:"security_config"`
	Storage              []StorageState           `json:"storage"`
	Timeouts             *TimeoutsState           `json:"timeouts"`
}
