// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_datastream_stream

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type BackfillAll struct {
	// BackfillAllMysqlExcludedObjects: optional
	MysqlExcludedObjects *BackfillAllMysqlExcludedObjects `hcl:"mysql_excluded_objects,block"`
	// BackfillAllOracleExcludedObjects: optional
	OracleExcludedObjects *BackfillAllOracleExcludedObjects `hcl:"oracle_excluded_objects,block"`
	// BackfillAllPostgresqlExcludedObjects: optional
	PostgresqlExcludedObjects *BackfillAllPostgresqlExcludedObjects `hcl:"postgresql_excluded_objects,block"`
}

type BackfillAllMysqlExcludedObjects struct {
	// BackfillAllMysqlExcludedObjectsMysqlDatabases: min=1
	MysqlDatabases []BackfillAllMysqlExcludedObjectsMysqlDatabases `hcl:"mysql_databases,block" validate:"min=1"`
}

type BackfillAllMysqlExcludedObjectsMysqlDatabases struct {
	// Database: string, required
	Database terra.StringValue `hcl:"database,attr" validate:"required"`
	// BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTables: min=0
	MysqlTables []BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTables `hcl:"mysql_tables,block" validate:"min=0"`
}

type BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTables struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// BackfillAllMysqlExcludedObjectsC57Fad3A: min=0
	MysqlColumns []BackfillAllMysqlExcludedObjectsC57Fad3A `hcl:"mysql_columns,block" validate:"min=0"`
}

type BackfillAllMysqlExcludedObjectsC57Fad3A struct {
	// Collation: string, optional
	Collation terra.StringValue `hcl:"collation,attr"`
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
	// Nullable: bool, optional
	Nullable terra.BoolValue `hcl:"nullable,attr"`
	// OrdinalPosition: number, optional
	OrdinalPosition terra.NumberValue `hcl:"ordinal_position,attr"`
	// PrimaryKey: bool, optional
	PrimaryKey terra.BoolValue `hcl:"primary_key,attr"`
}

type BackfillAllOracleExcludedObjects struct {
	// BackfillAllOracleExcludedObjectsOracleSchemas: min=1
	OracleSchemas []BackfillAllOracleExcludedObjectsOracleSchemas `hcl:"oracle_schemas,block" validate:"min=1"`
}

type BackfillAllOracleExcludedObjectsOracleSchemas struct {
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// BackfillAllOracleExcludedObjectsOracleSchemasOracleTables: min=0
	OracleTables []BackfillAllOracleExcludedObjectsOracleSchemasOracleTables `hcl:"oracle_tables,block" validate:"min=0"`
}

type BackfillAllOracleExcludedObjectsOracleSchemasOracleTables struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// BackfillAllOracleExcludedObjectsE045B63F: min=0
	OracleColumns []BackfillAllOracleExcludedObjectsE045B63F `hcl:"oracle_columns,block" validate:"min=0"`
}

type BackfillAllOracleExcludedObjectsE045B63F struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
}

type BackfillAllPostgresqlExcludedObjects struct {
	// BackfillAllPostgresqlExcludedObjectsPostgresqlSchemas: min=1
	PostgresqlSchemas []BackfillAllPostgresqlExcludedObjectsPostgresqlSchemas `hcl:"postgresql_schemas,block" validate:"min=1"`
}

type BackfillAllPostgresqlExcludedObjectsPostgresqlSchemas struct {
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTables: min=0
	PostgresqlTables []BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTables `hcl:"postgresql_tables,block" validate:"min=0"`
}

type BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTables struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// BackfillAllPostgresqlExcludedObjects3F20E9Ab: min=0
	PostgresqlColumns []BackfillAllPostgresqlExcludedObjects3F20E9Ab `hcl:"postgresql_columns,block" validate:"min=0"`
}

type BackfillAllPostgresqlExcludedObjects3F20E9Ab struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
	// Nullable: bool, optional
	Nullable terra.BoolValue `hcl:"nullable,attr"`
	// OrdinalPosition: number, optional
	OrdinalPosition terra.NumberValue `hcl:"ordinal_position,attr"`
	// PrimaryKey: bool, optional
	PrimaryKey terra.BoolValue `hcl:"primary_key,attr"`
}

type BackfillNone struct{}

type DestinationConfig struct {
	// DestinationConnectionProfile: string, required
	DestinationConnectionProfile terra.StringValue `hcl:"destination_connection_profile,attr" validate:"required"`
	// DestinationConfigBigqueryDestinationConfig: optional
	BigqueryDestinationConfig *DestinationConfigBigqueryDestinationConfig `hcl:"bigquery_destination_config,block"`
	// DestinationConfigGcsDestinationConfig: optional
	GcsDestinationConfig *DestinationConfigGcsDestinationConfig `hcl:"gcs_destination_config,block"`
}

type DestinationConfigBigqueryDestinationConfig struct {
	// DataFreshness: string, optional
	DataFreshness terra.StringValue `hcl:"data_freshness,attr"`
	// DestinationConfigBigqueryDestinationConfigSingleTargetDataset: optional
	SingleTargetDataset *DestinationConfigBigqueryDestinationConfigSingleTargetDataset `hcl:"single_target_dataset,block"`
	// DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasets: optional
	SourceHierarchyDatasets *DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasets `hcl:"source_hierarchy_datasets,block"`
}

type DestinationConfigBigqueryDestinationConfigSingleTargetDataset struct {
	// DatasetId: string, required
	DatasetId terra.StringValue `hcl:"dataset_id,attr" validate:"required"`
}

type DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasets struct {
	// DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplate: required
	DatasetTemplate *DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplate `hcl:"dataset_template,block" validate:"required"`
}

type DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplate struct {
	// DatasetIdPrefix: string, optional
	DatasetIdPrefix terra.StringValue `hcl:"dataset_id_prefix,attr"`
	// KmsKeyName: string, optional
	KmsKeyName terra.StringValue `hcl:"kms_key_name,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
}

type DestinationConfigGcsDestinationConfig struct {
	// FileRotationInterval: string, optional
	FileRotationInterval terra.StringValue `hcl:"file_rotation_interval,attr"`
	// FileRotationMb: number, optional
	FileRotationMb terra.NumberValue `hcl:"file_rotation_mb,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// DestinationConfigGcsDestinationConfigAvroFileFormat: optional
	AvroFileFormat *DestinationConfigGcsDestinationConfigAvroFileFormat `hcl:"avro_file_format,block"`
	// DestinationConfigGcsDestinationConfigJsonFileFormat: optional
	JsonFileFormat *DestinationConfigGcsDestinationConfigJsonFileFormat `hcl:"json_file_format,block"`
}

type DestinationConfigGcsDestinationConfigAvroFileFormat struct{}

type DestinationConfigGcsDestinationConfigJsonFileFormat struct {
	// Compression: string, optional
	Compression terra.StringValue `hcl:"compression,attr"`
	// SchemaFileFormat: string, optional
	SchemaFileFormat terra.StringValue `hcl:"schema_file_format,attr"`
}

type SourceConfig struct {
	// SourceConnectionProfile: string, required
	SourceConnectionProfile terra.StringValue `hcl:"source_connection_profile,attr" validate:"required"`
	// SourceConfigMysqlSourceConfig: optional
	MysqlSourceConfig *SourceConfigMysqlSourceConfig `hcl:"mysql_source_config,block"`
	// SourceConfigOracleSourceConfig: optional
	OracleSourceConfig *SourceConfigOracleSourceConfig `hcl:"oracle_source_config,block"`
	// SourceConfigPostgresqlSourceConfig: optional
	PostgresqlSourceConfig *SourceConfigPostgresqlSourceConfig `hcl:"postgresql_source_config,block"`
}

type SourceConfigMysqlSourceConfig struct {
	// MaxConcurrentBackfillTasks: number, optional
	MaxConcurrentBackfillTasks terra.NumberValue `hcl:"max_concurrent_backfill_tasks,attr"`
	// MaxConcurrentCdcTasks: number, optional
	MaxConcurrentCdcTasks terra.NumberValue `hcl:"max_concurrent_cdc_tasks,attr"`
	// SourceConfigMysqlSourceConfigExcludeObjects: optional
	ExcludeObjects *SourceConfigMysqlSourceConfigExcludeObjects `hcl:"exclude_objects,block"`
	// SourceConfigMysqlSourceConfigIncludeObjects: optional
	IncludeObjects *SourceConfigMysqlSourceConfigIncludeObjects `hcl:"include_objects,block"`
}

type SourceConfigMysqlSourceConfigExcludeObjects struct {
	// SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabases: min=1
	MysqlDatabases []SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabases `hcl:"mysql_databases,block" validate:"min=1"`
}

type SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabases struct {
	// Database: string, required
	Database terra.StringValue `hcl:"database,attr" validate:"required"`
	// SourceConfigMysqlSourceConfig4Cc7Dddf: min=0
	MysqlTables []SourceConfigMysqlSourceConfig4Cc7Dddf `hcl:"mysql_tables,block" validate:"min=0"`
}

type SourceConfigMysqlSourceConfig4Cc7Dddf struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// SourceConfigMysqlSourceConfig93Cd2A06: min=0
	MysqlColumns []SourceConfigMysqlSourceConfig93Cd2A06 `hcl:"mysql_columns,block" validate:"min=0"`
}

type SourceConfigMysqlSourceConfig93Cd2A06 struct {
	// Collation: string, optional
	Collation terra.StringValue `hcl:"collation,attr"`
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
	// Nullable: bool, optional
	Nullable terra.BoolValue `hcl:"nullable,attr"`
	// OrdinalPosition: number, optional
	OrdinalPosition terra.NumberValue `hcl:"ordinal_position,attr"`
	// PrimaryKey: bool, optional
	PrimaryKey terra.BoolValue `hcl:"primary_key,attr"`
}

type SourceConfigMysqlSourceConfigIncludeObjects struct {
	// SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabases: min=1
	MysqlDatabases []SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabases `hcl:"mysql_databases,block" validate:"min=1"`
}

type SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabases struct {
	// Database: string, required
	Database terra.StringValue `hcl:"database,attr" validate:"required"`
	// SourceConfigMysqlSourceConfig19Afe7B2: min=0
	MysqlTables []SourceConfigMysqlSourceConfig19Afe7B2 `hcl:"mysql_tables,block" validate:"min=0"`
}

type SourceConfigMysqlSourceConfig19Afe7B2 struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// SourceConfigMysqlSourceConfig028E7F74: min=0
	MysqlColumns []SourceConfigMysqlSourceConfig028E7F74 `hcl:"mysql_columns,block" validate:"min=0"`
}

type SourceConfigMysqlSourceConfig028E7F74 struct {
	// Collation: string, optional
	Collation terra.StringValue `hcl:"collation,attr"`
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
	// Nullable: bool, optional
	Nullable terra.BoolValue `hcl:"nullable,attr"`
	// OrdinalPosition: number, optional
	OrdinalPosition terra.NumberValue `hcl:"ordinal_position,attr"`
	// PrimaryKey: bool, optional
	PrimaryKey terra.BoolValue `hcl:"primary_key,attr"`
}

type SourceConfigOracleSourceConfig struct {
	// MaxConcurrentBackfillTasks: number, optional
	MaxConcurrentBackfillTasks terra.NumberValue `hcl:"max_concurrent_backfill_tasks,attr"`
	// MaxConcurrentCdcTasks: number, optional
	MaxConcurrentCdcTasks terra.NumberValue `hcl:"max_concurrent_cdc_tasks,attr"`
	// SourceConfigOracleSourceConfigDropLargeObjects: optional
	DropLargeObjects *SourceConfigOracleSourceConfigDropLargeObjects `hcl:"drop_large_objects,block"`
	// SourceConfigOracleSourceConfigExcludeObjects: optional
	ExcludeObjects *SourceConfigOracleSourceConfigExcludeObjects `hcl:"exclude_objects,block"`
	// SourceConfigOracleSourceConfigIncludeObjects: optional
	IncludeObjects *SourceConfigOracleSourceConfigIncludeObjects `hcl:"include_objects,block"`
	// SourceConfigOracleSourceConfigStreamLargeObjects: optional
	StreamLargeObjects *SourceConfigOracleSourceConfigStreamLargeObjects `hcl:"stream_large_objects,block"`
}

type SourceConfigOracleSourceConfigDropLargeObjects struct{}

type SourceConfigOracleSourceConfigExcludeObjects struct {
	// SourceConfigOracleSourceConfigExcludeObjectsOracleSchemas: min=1
	OracleSchemas []SourceConfigOracleSourceConfigExcludeObjectsOracleSchemas `hcl:"oracle_schemas,block" validate:"min=1"`
}

type SourceConfigOracleSourceConfigExcludeObjectsOracleSchemas struct {
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// SourceConfigOracleSourceConfig3506F864: min=0
	OracleTables []SourceConfigOracleSourceConfig3506F864 `hcl:"oracle_tables,block" validate:"min=0"`
}

type SourceConfigOracleSourceConfig3506F864 struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// SourceConfigOracleSourceConfigA3C5Fec1: min=0
	OracleColumns []SourceConfigOracleSourceConfigA3C5Fec1 `hcl:"oracle_columns,block" validate:"min=0"`
}

type SourceConfigOracleSourceConfigA3C5Fec1 struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
}

type SourceConfigOracleSourceConfigIncludeObjects struct {
	// SourceConfigOracleSourceConfigIncludeObjectsOracleSchemas: min=1
	OracleSchemas []SourceConfigOracleSourceConfigIncludeObjectsOracleSchemas `hcl:"oracle_schemas,block" validate:"min=1"`
}

type SourceConfigOracleSourceConfigIncludeObjectsOracleSchemas struct {
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// SourceConfigOracleSourceConfig3E317B9A: min=0
	OracleTables []SourceConfigOracleSourceConfig3E317B9A `hcl:"oracle_tables,block" validate:"min=0"`
}

type SourceConfigOracleSourceConfig3E317B9A struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// SourceConfigOracleSourceConfig1C1Ecebb: min=0
	OracleColumns []SourceConfigOracleSourceConfig1C1Ecebb `hcl:"oracle_columns,block" validate:"min=0"`
}

type SourceConfigOracleSourceConfig1C1Ecebb struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
}

type SourceConfigOracleSourceConfigStreamLargeObjects struct{}

type SourceConfigPostgresqlSourceConfig struct {
	// MaxConcurrentBackfillTasks: number, optional
	MaxConcurrentBackfillTasks terra.NumberValue `hcl:"max_concurrent_backfill_tasks,attr"`
	// Publication: string, required
	Publication terra.StringValue `hcl:"publication,attr" validate:"required"`
	// ReplicationSlot: string, required
	ReplicationSlot terra.StringValue `hcl:"replication_slot,attr" validate:"required"`
	// SourceConfigPostgresqlSourceConfigExcludeObjects: optional
	ExcludeObjects *SourceConfigPostgresqlSourceConfigExcludeObjects `hcl:"exclude_objects,block"`
	// SourceConfigPostgresqlSourceConfigIncludeObjects: optional
	IncludeObjects *SourceConfigPostgresqlSourceConfigIncludeObjects `hcl:"include_objects,block"`
}

type SourceConfigPostgresqlSourceConfigExcludeObjects struct {
	// SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemas: min=1
	PostgresqlSchemas []SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemas `hcl:"postgresql_schemas,block" validate:"min=1"`
}

type SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemas struct {
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// SourceConfigPostgresqlSourceConfigBd3089E9: min=0
	PostgresqlTables []SourceConfigPostgresqlSourceConfigBd3089E9 `hcl:"postgresql_tables,block" validate:"min=0"`
}

type SourceConfigPostgresqlSourceConfigBd3089E9 struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// SourceConfigPostgresqlSourceConfigF8E1A27A: min=0
	PostgresqlColumns []SourceConfigPostgresqlSourceConfigF8E1A27A `hcl:"postgresql_columns,block" validate:"min=0"`
}

type SourceConfigPostgresqlSourceConfigF8E1A27A struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
	// Nullable: bool, optional
	Nullable terra.BoolValue `hcl:"nullable,attr"`
	// OrdinalPosition: number, optional
	OrdinalPosition terra.NumberValue `hcl:"ordinal_position,attr"`
	// PrimaryKey: bool, optional
	PrimaryKey terra.BoolValue `hcl:"primary_key,attr"`
}

type SourceConfigPostgresqlSourceConfigIncludeObjects struct {
	// SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemas: min=1
	PostgresqlSchemas []SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemas `hcl:"postgresql_schemas,block" validate:"min=1"`
}

type SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemas struct {
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// SourceConfigPostgresqlSourceConfig93186Bd4: min=0
	PostgresqlTables []SourceConfigPostgresqlSourceConfig93186Bd4 `hcl:"postgresql_tables,block" validate:"min=0"`
}

type SourceConfigPostgresqlSourceConfig93186Bd4 struct {
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// SourceConfigPostgresqlSourceConfigBdc85Fc1: min=0
	PostgresqlColumns []SourceConfigPostgresqlSourceConfigBdc85Fc1 `hcl:"postgresql_columns,block" validate:"min=0"`
}

type SourceConfigPostgresqlSourceConfigBdc85Fc1 struct {
	// Column: string, optional
	Column terra.StringValue `hcl:"column,attr"`
	// DataType: string, optional
	DataType terra.StringValue `hcl:"data_type,attr"`
	// Nullable: bool, optional
	Nullable terra.BoolValue `hcl:"nullable,attr"`
	// OrdinalPosition: number, optional
	OrdinalPosition terra.NumberValue `hcl:"ordinal_position,attr"`
	// PrimaryKey: bool, optional
	PrimaryKey terra.BoolValue `hcl:"primary_key,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type BackfillAllAttributes struct {
	ref terra.Reference
}

func (ba BackfillAllAttributes) InternalRef() (terra.Reference, error) {
	return ba.ref, nil
}

func (ba BackfillAllAttributes) InternalWithRef(ref terra.Reference) BackfillAllAttributes {
	return BackfillAllAttributes{ref: ref}
}

func (ba BackfillAllAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ba.ref.InternalTokens()
}

func (ba BackfillAllAttributes) MysqlExcludedObjects() terra.ListValue[BackfillAllMysqlExcludedObjectsAttributes] {
	return terra.ReferenceAsList[BackfillAllMysqlExcludedObjectsAttributes](ba.ref.Append("mysql_excluded_objects"))
}

func (ba BackfillAllAttributes) OracleExcludedObjects() terra.ListValue[BackfillAllOracleExcludedObjectsAttributes] {
	return terra.ReferenceAsList[BackfillAllOracleExcludedObjectsAttributes](ba.ref.Append("oracle_excluded_objects"))
}

func (ba BackfillAllAttributes) PostgresqlExcludedObjects() terra.ListValue[BackfillAllPostgresqlExcludedObjectsAttributes] {
	return terra.ReferenceAsList[BackfillAllPostgresqlExcludedObjectsAttributes](ba.ref.Append("postgresql_excluded_objects"))
}

type BackfillAllMysqlExcludedObjectsAttributes struct {
	ref terra.Reference
}

func (meo BackfillAllMysqlExcludedObjectsAttributes) InternalRef() (terra.Reference, error) {
	return meo.ref, nil
}

func (meo BackfillAllMysqlExcludedObjectsAttributes) InternalWithRef(ref terra.Reference) BackfillAllMysqlExcludedObjectsAttributes {
	return BackfillAllMysqlExcludedObjectsAttributes{ref: ref}
}

func (meo BackfillAllMysqlExcludedObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return meo.ref.InternalTokens()
}

func (meo BackfillAllMysqlExcludedObjectsAttributes) MysqlDatabases() terra.ListValue[BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes] {
	return terra.ReferenceAsList[BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes](meo.ref.Append("mysql_databases"))
}

type BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes struct {
	ref terra.Reference
}

func (md BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes) InternalRef() (terra.Reference, error) {
	return md.ref, nil
}

func (md BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes) InternalWithRef(ref terra.Reference) BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes {
	return BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes{ref: ref}
}

func (md BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return md.ref.InternalTokens()
}

func (md BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes) Database() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("database"))
}

func (md BackfillAllMysqlExcludedObjectsMysqlDatabasesAttributes) MysqlTables() terra.ListValue[BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes] {
	return terra.ReferenceAsList[BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes](md.ref.Append("mysql_tables"))
}

type BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes struct {
	ref terra.Reference
}

func (mt BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes) InternalWithRef(ref terra.Reference) BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes {
	return BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes{ref: ref}
}

func (mt BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes) Table() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("table"))
}

func (mt BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesAttributes) MysqlColumns() terra.ListValue[BackfillAllMysqlExcludedObjectsC57Fad3AAttributes] {
	return terra.ReferenceAsList[BackfillAllMysqlExcludedObjectsC57Fad3AAttributes](mt.ref.Append("mysql_columns"))
}

type BackfillAllMysqlExcludedObjectsC57Fad3AAttributes struct {
	ref terra.Reference
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) InternalWithRef(ref terra.Reference) BackfillAllMysqlExcludedObjectsC57Fad3AAttributes {
	return BackfillAllMysqlExcludedObjectsC57Fad3AAttributes{ref: ref}
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) Collation() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("collation"))
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) Column() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("column"))
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("data_type"))
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("length"))
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("nullable"))
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("ordinal_position"))
}

func (mc BackfillAllMysqlExcludedObjectsC57Fad3AAttributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("primary_key"))
}

type BackfillAllOracleExcludedObjectsAttributes struct {
	ref terra.Reference
}

func (oeo BackfillAllOracleExcludedObjectsAttributes) InternalRef() (terra.Reference, error) {
	return oeo.ref, nil
}

func (oeo BackfillAllOracleExcludedObjectsAttributes) InternalWithRef(ref terra.Reference) BackfillAllOracleExcludedObjectsAttributes {
	return BackfillAllOracleExcludedObjectsAttributes{ref: ref}
}

func (oeo BackfillAllOracleExcludedObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oeo.ref.InternalTokens()
}

func (oeo BackfillAllOracleExcludedObjectsAttributes) OracleSchemas() terra.ListValue[BackfillAllOracleExcludedObjectsOracleSchemasAttributes] {
	return terra.ReferenceAsList[BackfillAllOracleExcludedObjectsOracleSchemasAttributes](oeo.ref.Append("oracle_schemas"))
}

type BackfillAllOracleExcludedObjectsOracleSchemasAttributes struct {
	ref terra.Reference
}

func (os BackfillAllOracleExcludedObjectsOracleSchemasAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os BackfillAllOracleExcludedObjectsOracleSchemasAttributes) InternalWithRef(ref terra.Reference) BackfillAllOracleExcludedObjectsOracleSchemasAttributes {
	return BackfillAllOracleExcludedObjectsOracleSchemasAttributes{ref: ref}
}

func (os BackfillAllOracleExcludedObjectsOracleSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os BackfillAllOracleExcludedObjectsOracleSchemasAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("schema"))
}

func (os BackfillAllOracleExcludedObjectsOracleSchemasAttributes) OracleTables() terra.ListValue[BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes] {
	return terra.ReferenceAsList[BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes](os.ref.Append("oracle_tables"))
}

type BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes struct {
	ref terra.Reference
}

func (ot BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes) InternalRef() (terra.Reference, error) {
	return ot.ref, nil
}

func (ot BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes) InternalWithRef(ref terra.Reference) BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes {
	return BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes{ref: ref}
}

func (ot BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ot.ref.InternalTokens()
}

func (ot BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes) Table() terra.StringValue {
	return terra.ReferenceAsString(ot.ref.Append("table"))
}

func (ot BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesAttributes) OracleColumns() terra.ListValue[BackfillAllOracleExcludedObjectsE045B63FAttributes] {
	return terra.ReferenceAsList[BackfillAllOracleExcludedObjectsE045B63FAttributes](ot.ref.Append("oracle_columns"))
}

type BackfillAllOracleExcludedObjectsE045B63FAttributes struct {
	ref terra.Reference
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) InternalWithRef(ref terra.Reference) BackfillAllOracleExcludedObjectsE045B63FAttributes {
	return BackfillAllOracleExcludedObjectsE045B63FAttributes{ref: ref}
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) Column() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("column"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("data_type"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) Encoding() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("encoding"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("length"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("nullable"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("ordinal_position"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) Precision() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("precision"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("primary_key"))
}

func (oc BackfillAllOracleExcludedObjectsE045B63FAttributes) Scale() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("scale"))
}

type BackfillAllPostgresqlExcludedObjectsAttributes struct {
	ref terra.Reference
}

func (peo BackfillAllPostgresqlExcludedObjectsAttributes) InternalRef() (terra.Reference, error) {
	return peo.ref, nil
}

func (peo BackfillAllPostgresqlExcludedObjectsAttributes) InternalWithRef(ref terra.Reference) BackfillAllPostgresqlExcludedObjectsAttributes {
	return BackfillAllPostgresqlExcludedObjectsAttributes{ref: ref}
}

func (peo BackfillAllPostgresqlExcludedObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return peo.ref.InternalTokens()
}

func (peo BackfillAllPostgresqlExcludedObjectsAttributes) PostgresqlSchemas() terra.ListValue[BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes] {
	return terra.ReferenceAsList[BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes](peo.ref.Append("postgresql_schemas"))
}

type BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes struct {
	ref terra.Reference
}

func (ps BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes) InternalWithRef(ref terra.Reference) BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes {
	return BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes{ref: ref}
}

func (ps BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("schema"))
}

func (ps BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasAttributes) PostgresqlTables() terra.ListValue[BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes] {
	return terra.ReferenceAsList[BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes](ps.ref.Append("postgresql_tables"))
}

type BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes struct {
	ref terra.Reference
}

func (pt BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes) InternalWithRef(ref terra.Reference) BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes {
	return BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes{ref: ref}
}

func (pt BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes) Table() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("table"))
}

func (pt BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesAttributes) PostgresqlColumns() terra.ListValue[BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes] {
	return terra.ReferenceAsList[BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes](pt.ref.Append("postgresql_columns"))
}

type BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes struct {
	ref terra.Reference
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) InternalWithRef(ref terra.Reference) BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes {
	return BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes{ref: ref}
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) Column() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("column"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("data_type"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("length"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("nullable"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("ordinal_position"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) Precision() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("precision"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("primary_key"))
}

func (pc BackfillAllPostgresqlExcludedObjects3F20E9AbAttributes) Scale() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("scale"))
}

type BackfillNoneAttributes struct {
	ref terra.Reference
}

func (bn BackfillNoneAttributes) InternalRef() (terra.Reference, error) {
	return bn.ref, nil
}

func (bn BackfillNoneAttributes) InternalWithRef(ref terra.Reference) BackfillNoneAttributes {
	return BackfillNoneAttributes{ref: ref}
}

func (bn BackfillNoneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bn.ref.InternalTokens()
}

type DestinationConfigAttributes struct {
	ref terra.Reference
}

func (dc DestinationConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DestinationConfigAttributes) InternalWithRef(ref terra.Reference) DestinationConfigAttributes {
	return DestinationConfigAttributes{ref: ref}
}

func (dc DestinationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DestinationConfigAttributes) DestinationConnectionProfile() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("destination_connection_profile"))
}

func (dc DestinationConfigAttributes) BigqueryDestinationConfig() terra.ListValue[DestinationConfigBigqueryDestinationConfigAttributes] {
	return terra.ReferenceAsList[DestinationConfigBigqueryDestinationConfigAttributes](dc.ref.Append("bigquery_destination_config"))
}

func (dc DestinationConfigAttributes) GcsDestinationConfig() terra.ListValue[DestinationConfigGcsDestinationConfigAttributes] {
	return terra.ReferenceAsList[DestinationConfigGcsDestinationConfigAttributes](dc.ref.Append("gcs_destination_config"))
}

type DestinationConfigBigqueryDestinationConfigAttributes struct {
	ref terra.Reference
}

func (bdc DestinationConfigBigqueryDestinationConfigAttributes) InternalRef() (terra.Reference, error) {
	return bdc.ref, nil
}

func (bdc DestinationConfigBigqueryDestinationConfigAttributes) InternalWithRef(ref terra.Reference) DestinationConfigBigqueryDestinationConfigAttributes {
	return DestinationConfigBigqueryDestinationConfigAttributes{ref: ref}
}

func (bdc DestinationConfigBigqueryDestinationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bdc.ref.InternalTokens()
}

func (bdc DestinationConfigBigqueryDestinationConfigAttributes) DataFreshness() terra.StringValue {
	return terra.ReferenceAsString(bdc.ref.Append("data_freshness"))
}

func (bdc DestinationConfigBigqueryDestinationConfigAttributes) SingleTargetDataset() terra.ListValue[DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes] {
	return terra.ReferenceAsList[DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes](bdc.ref.Append("single_target_dataset"))
}

func (bdc DestinationConfigBigqueryDestinationConfigAttributes) SourceHierarchyDatasets() terra.ListValue[DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes] {
	return terra.ReferenceAsList[DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes](bdc.ref.Append("source_hierarchy_datasets"))
}

type DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes struct {
	ref terra.Reference
}

func (std DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes) InternalRef() (terra.Reference, error) {
	return std.ref, nil
}

func (std DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes) InternalWithRef(ref terra.Reference) DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes {
	return DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes{ref: ref}
}

func (std DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return std.ref.InternalTokens()
}

func (std DestinationConfigBigqueryDestinationConfigSingleTargetDatasetAttributes) DatasetId() terra.StringValue {
	return terra.ReferenceAsString(std.ref.Append("dataset_id"))
}

type DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes struct {
	ref terra.Reference
}

func (shd DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes) InternalRef() (terra.Reference, error) {
	return shd.ref, nil
}

func (shd DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes) InternalWithRef(ref terra.Reference) DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes {
	return DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes{ref: ref}
}

func (shd DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return shd.ref.InternalTokens()
}

func (shd DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsAttributes) DatasetTemplate() terra.ListValue[DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes] {
	return terra.ReferenceAsList[DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes](shd.ref.Append("dataset_template"))
}

type DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes struct {
	ref terra.Reference
}

func (dt DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes) InternalRef() (terra.Reference, error) {
	return dt.ref, nil
}

func (dt DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes) InternalWithRef(ref terra.Reference) DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes {
	return DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes{ref: ref}
}

func (dt DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dt.ref.InternalTokens()
}

func (dt DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes) DatasetIdPrefix() terra.StringValue {
	return terra.ReferenceAsString(dt.ref.Append("dataset_id_prefix"))
}

func (dt DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(dt.ref.Append("kms_key_name"))
}

func (dt DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(dt.ref.Append("location"))
}

type DestinationConfigGcsDestinationConfigAttributes struct {
	ref terra.Reference
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) InternalRef() (terra.Reference, error) {
	return gdc.ref, nil
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) InternalWithRef(ref terra.Reference) DestinationConfigGcsDestinationConfigAttributes {
	return DestinationConfigGcsDestinationConfigAttributes{ref: ref}
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gdc.ref.InternalTokens()
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) FileRotationInterval() terra.StringValue {
	return terra.ReferenceAsString(gdc.ref.Append("file_rotation_interval"))
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) FileRotationMb() terra.NumberValue {
	return terra.ReferenceAsNumber(gdc.ref.Append("file_rotation_mb"))
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(gdc.ref.Append("path"))
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) AvroFileFormat() terra.ListValue[DestinationConfigGcsDestinationConfigAvroFileFormatAttributes] {
	return terra.ReferenceAsList[DestinationConfigGcsDestinationConfigAvroFileFormatAttributes](gdc.ref.Append("avro_file_format"))
}

func (gdc DestinationConfigGcsDestinationConfigAttributes) JsonFileFormat() terra.ListValue[DestinationConfigGcsDestinationConfigJsonFileFormatAttributes] {
	return terra.ReferenceAsList[DestinationConfigGcsDestinationConfigJsonFileFormatAttributes](gdc.ref.Append("json_file_format"))
}

type DestinationConfigGcsDestinationConfigAvroFileFormatAttributes struct {
	ref terra.Reference
}

func (aff DestinationConfigGcsDestinationConfigAvroFileFormatAttributes) InternalRef() (terra.Reference, error) {
	return aff.ref, nil
}

func (aff DestinationConfigGcsDestinationConfigAvroFileFormatAttributes) InternalWithRef(ref terra.Reference) DestinationConfigGcsDestinationConfigAvroFileFormatAttributes {
	return DestinationConfigGcsDestinationConfigAvroFileFormatAttributes{ref: ref}
}

func (aff DestinationConfigGcsDestinationConfigAvroFileFormatAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aff.ref.InternalTokens()
}

type DestinationConfigGcsDestinationConfigJsonFileFormatAttributes struct {
	ref terra.Reference
}

func (jff DestinationConfigGcsDestinationConfigJsonFileFormatAttributes) InternalRef() (terra.Reference, error) {
	return jff.ref, nil
}

func (jff DestinationConfigGcsDestinationConfigJsonFileFormatAttributes) InternalWithRef(ref terra.Reference) DestinationConfigGcsDestinationConfigJsonFileFormatAttributes {
	return DestinationConfigGcsDestinationConfigJsonFileFormatAttributes{ref: ref}
}

func (jff DestinationConfigGcsDestinationConfigJsonFileFormatAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jff.ref.InternalTokens()
}

func (jff DestinationConfigGcsDestinationConfigJsonFileFormatAttributes) Compression() terra.StringValue {
	return terra.ReferenceAsString(jff.ref.Append("compression"))
}

func (jff DestinationConfigGcsDestinationConfigJsonFileFormatAttributes) SchemaFileFormat() terra.StringValue {
	return terra.ReferenceAsString(jff.ref.Append("schema_file_format"))
}

type SourceConfigAttributes struct {
	ref terra.Reference
}

func (sc SourceConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc SourceConfigAttributes) InternalWithRef(ref terra.Reference) SourceConfigAttributes {
	return SourceConfigAttributes{ref: ref}
}

func (sc SourceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc SourceConfigAttributes) SourceConnectionProfile() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("source_connection_profile"))
}

func (sc SourceConfigAttributes) MysqlSourceConfig() terra.ListValue[SourceConfigMysqlSourceConfigAttributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfigAttributes](sc.ref.Append("mysql_source_config"))
}

func (sc SourceConfigAttributes) OracleSourceConfig() terra.ListValue[SourceConfigOracleSourceConfigAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigAttributes](sc.ref.Append("oracle_source_config"))
}

func (sc SourceConfigAttributes) PostgresqlSourceConfig() terra.ListValue[SourceConfigPostgresqlSourceConfigAttributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigAttributes](sc.ref.Append("postgresql_source_config"))
}

type SourceConfigMysqlSourceConfigAttributes struct {
	ref terra.Reference
}

func (msc SourceConfigMysqlSourceConfigAttributes) InternalRef() (terra.Reference, error) {
	return msc.ref, nil
}

func (msc SourceConfigMysqlSourceConfigAttributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfigAttributes {
	return SourceConfigMysqlSourceConfigAttributes{ref: ref}
}

func (msc SourceConfigMysqlSourceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return msc.ref.InternalTokens()
}

func (msc SourceConfigMysqlSourceConfigAttributes) MaxConcurrentBackfillTasks() terra.NumberValue {
	return terra.ReferenceAsNumber(msc.ref.Append("max_concurrent_backfill_tasks"))
}

func (msc SourceConfigMysqlSourceConfigAttributes) MaxConcurrentCdcTasks() terra.NumberValue {
	return terra.ReferenceAsNumber(msc.ref.Append("max_concurrent_cdc_tasks"))
}

func (msc SourceConfigMysqlSourceConfigAttributes) ExcludeObjects() terra.ListValue[SourceConfigMysqlSourceConfigExcludeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfigExcludeObjectsAttributes](msc.ref.Append("exclude_objects"))
}

func (msc SourceConfigMysqlSourceConfigAttributes) IncludeObjects() terra.ListValue[SourceConfigMysqlSourceConfigIncludeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfigIncludeObjectsAttributes](msc.ref.Append("include_objects"))
}

type SourceConfigMysqlSourceConfigExcludeObjectsAttributes struct {
	ref terra.Reference
}

func (eo SourceConfigMysqlSourceConfigExcludeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo SourceConfigMysqlSourceConfigExcludeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfigExcludeObjectsAttributes {
	return SourceConfigMysqlSourceConfigExcludeObjectsAttributes{ref: ref}
}

func (eo SourceConfigMysqlSourceConfigExcludeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo SourceConfigMysqlSourceConfigExcludeObjectsAttributes) MysqlDatabases() terra.ListValue[SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes](eo.ref.Append("mysql_databases"))
}

type SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes struct {
	ref terra.Reference
}

func (md SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes) InternalRef() (terra.Reference, error) {
	return md.ref, nil
}

func (md SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes {
	return SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes{ref: ref}
}

func (md SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return md.ref.InternalTokens()
}

func (md SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes) Database() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("database"))
}

func (md SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesAttributes) MysqlTables() terra.ListValue[SourceConfigMysqlSourceConfig4Cc7DddfAttributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfig4Cc7DddfAttributes](md.ref.Append("mysql_tables"))
}

type SourceConfigMysqlSourceConfig4Cc7DddfAttributes struct {
	ref terra.Reference
}

func (mt SourceConfigMysqlSourceConfig4Cc7DddfAttributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt SourceConfigMysqlSourceConfig4Cc7DddfAttributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfig4Cc7DddfAttributes {
	return SourceConfigMysqlSourceConfig4Cc7DddfAttributes{ref: ref}
}

func (mt SourceConfigMysqlSourceConfig4Cc7DddfAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt SourceConfigMysqlSourceConfig4Cc7DddfAttributes) Table() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("table"))
}

func (mt SourceConfigMysqlSourceConfig4Cc7DddfAttributes) MysqlColumns() terra.ListValue[SourceConfigMysqlSourceConfig93Cd2A06Attributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfig93Cd2A06Attributes](mt.ref.Append("mysql_columns"))
}

type SourceConfigMysqlSourceConfig93Cd2A06Attributes struct {
	ref terra.Reference
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfig93Cd2A06Attributes {
	return SourceConfigMysqlSourceConfig93Cd2A06Attributes{ref: ref}
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) Collation() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("collation"))
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) Column() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("column"))
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("data_type"))
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("length"))
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("nullable"))
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("ordinal_position"))
}

func (mc SourceConfigMysqlSourceConfig93Cd2A06Attributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("primary_key"))
}

type SourceConfigMysqlSourceConfigIncludeObjectsAttributes struct {
	ref terra.Reference
}

func (io SourceConfigMysqlSourceConfigIncludeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return io.ref, nil
}

func (io SourceConfigMysqlSourceConfigIncludeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfigIncludeObjectsAttributes {
	return SourceConfigMysqlSourceConfigIncludeObjectsAttributes{ref: ref}
}

func (io SourceConfigMysqlSourceConfigIncludeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return io.ref.InternalTokens()
}

func (io SourceConfigMysqlSourceConfigIncludeObjectsAttributes) MysqlDatabases() terra.ListValue[SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes](io.ref.Append("mysql_databases"))
}

type SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes struct {
	ref terra.Reference
}

func (md SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes) InternalRef() (terra.Reference, error) {
	return md.ref, nil
}

func (md SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes {
	return SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes{ref: ref}
}

func (md SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return md.ref.InternalTokens()
}

func (md SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes) Database() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("database"))
}

func (md SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesAttributes) MysqlTables() terra.ListValue[SourceConfigMysqlSourceConfig19Afe7B2Attributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfig19Afe7B2Attributes](md.ref.Append("mysql_tables"))
}

type SourceConfigMysqlSourceConfig19Afe7B2Attributes struct {
	ref terra.Reference
}

func (mt SourceConfigMysqlSourceConfig19Afe7B2Attributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt SourceConfigMysqlSourceConfig19Afe7B2Attributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfig19Afe7B2Attributes {
	return SourceConfigMysqlSourceConfig19Afe7B2Attributes{ref: ref}
}

func (mt SourceConfigMysqlSourceConfig19Afe7B2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt SourceConfigMysqlSourceConfig19Afe7B2Attributes) Table() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("table"))
}

func (mt SourceConfigMysqlSourceConfig19Afe7B2Attributes) MysqlColumns() terra.ListValue[SourceConfigMysqlSourceConfig028E7F74Attributes] {
	return terra.ReferenceAsList[SourceConfigMysqlSourceConfig028E7F74Attributes](mt.ref.Append("mysql_columns"))
}

type SourceConfigMysqlSourceConfig028E7F74Attributes struct {
	ref terra.Reference
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) InternalWithRef(ref terra.Reference) SourceConfigMysqlSourceConfig028E7F74Attributes {
	return SourceConfigMysqlSourceConfig028E7F74Attributes{ref: ref}
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) Collation() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("collation"))
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) Column() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("column"))
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("data_type"))
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("length"))
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("nullable"))
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("ordinal_position"))
}

func (mc SourceConfigMysqlSourceConfig028E7F74Attributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("primary_key"))
}

type SourceConfigOracleSourceConfigAttributes struct {
	ref terra.Reference
}

func (osc SourceConfigOracleSourceConfigAttributes) InternalRef() (terra.Reference, error) {
	return osc.ref, nil
}

func (osc SourceConfigOracleSourceConfigAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigAttributes {
	return SourceConfigOracleSourceConfigAttributes{ref: ref}
}

func (osc SourceConfigOracleSourceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return osc.ref.InternalTokens()
}

func (osc SourceConfigOracleSourceConfigAttributes) MaxConcurrentBackfillTasks() terra.NumberValue {
	return terra.ReferenceAsNumber(osc.ref.Append("max_concurrent_backfill_tasks"))
}

func (osc SourceConfigOracleSourceConfigAttributes) MaxConcurrentCdcTasks() terra.NumberValue {
	return terra.ReferenceAsNumber(osc.ref.Append("max_concurrent_cdc_tasks"))
}

func (osc SourceConfigOracleSourceConfigAttributes) DropLargeObjects() terra.ListValue[SourceConfigOracleSourceConfigDropLargeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigDropLargeObjectsAttributes](osc.ref.Append("drop_large_objects"))
}

func (osc SourceConfigOracleSourceConfigAttributes) ExcludeObjects() terra.ListValue[SourceConfigOracleSourceConfigExcludeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigExcludeObjectsAttributes](osc.ref.Append("exclude_objects"))
}

func (osc SourceConfigOracleSourceConfigAttributes) IncludeObjects() terra.ListValue[SourceConfigOracleSourceConfigIncludeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigIncludeObjectsAttributes](osc.ref.Append("include_objects"))
}

func (osc SourceConfigOracleSourceConfigAttributes) StreamLargeObjects() terra.ListValue[SourceConfigOracleSourceConfigStreamLargeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigStreamLargeObjectsAttributes](osc.ref.Append("stream_large_objects"))
}

type SourceConfigOracleSourceConfigDropLargeObjectsAttributes struct {
	ref terra.Reference
}

func (dlo SourceConfigOracleSourceConfigDropLargeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return dlo.ref, nil
}

func (dlo SourceConfigOracleSourceConfigDropLargeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigDropLargeObjectsAttributes {
	return SourceConfigOracleSourceConfigDropLargeObjectsAttributes{ref: ref}
}

func (dlo SourceConfigOracleSourceConfigDropLargeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dlo.ref.InternalTokens()
}

type SourceConfigOracleSourceConfigExcludeObjectsAttributes struct {
	ref terra.Reference
}

func (eo SourceConfigOracleSourceConfigExcludeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo SourceConfigOracleSourceConfigExcludeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigExcludeObjectsAttributes {
	return SourceConfigOracleSourceConfigExcludeObjectsAttributes{ref: ref}
}

func (eo SourceConfigOracleSourceConfigExcludeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo SourceConfigOracleSourceConfigExcludeObjectsAttributes) OracleSchemas() terra.ListValue[SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes](eo.ref.Append("oracle_schemas"))
}

type SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes struct {
	ref terra.Reference
}

func (os SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes {
	return SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes{ref: ref}
}

func (os SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("schema"))
}

func (os SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasAttributes) OracleTables() terra.ListValue[SourceConfigOracleSourceConfig3506F864Attributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfig3506F864Attributes](os.ref.Append("oracle_tables"))
}

type SourceConfigOracleSourceConfig3506F864Attributes struct {
	ref terra.Reference
}

func (ot SourceConfigOracleSourceConfig3506F864Attributes) InternalRef() (terra.Reference, error) {
	return ot.ref, nil
}

func (ot SourceConfigOracleSourceConfig3506F864Attributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfig3506F864Attributes {
	return SourceConfigOracleSourceConfig3506F864Attributes{ref: ref}
}

func (ot SourceConfigOracleSourceConfig3506F864Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ot.ref.InternalTokens()
}

func (ot SourceConfigOracleSourceConfig3506F864Attributes) Table() terra.StringValue {
	return terra.ReferenceAsString(ot.ref.Append("table"))
}

func (ot SourceConfigOracleSourceConfig3506F864Attributes) OracleColumns() terra.ListValue[SourceConfigOracleSourceConfigA3C5Fec1Attributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigA3C5Fec1Attributes](ot.ref.Append("oracle_columns"))
}

type SourceConfigOracleSourceConfigA3C5Fec1Attributes struct {
	ref terra.Reference
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigA3C5Fec1Attributes {
	return SourceConfigOracleSourceConfigA3C5Fec1Attributes{ref: ref}
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) Column() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("column"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("data_type"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) Encoding() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("encoding"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("length"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("nullable"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("ordinal_position"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) Precision() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("precision"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("primary_key"))
}

func (oc SourceConfigOracleSourceConfigA3C5Fec1Attributes) Scale() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("scale"))
}

type SourceConfigOracleSourceConfigIncludeObjectsAttributes struct {
	ref terra.Reference
}

func (io SourceConfigOracleSourceConfigIncludeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return io.ref, nil
}

func (io SourceConfigOracleSourceConfigIncludeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigIncludeObjectsAttributes {
	return SourceConfigOracleSourceConfigIncludeObjectsAttributes{ref: ref}
}

func (io SourceConfigOracleSourceConfigIncludeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return io.ref.InternalTokens()
}

func (io SourceConfigOracleSourceConfigIncludeObjectsAttributes) OracleSchemas() terra.ListValue[SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes](io.ref.Append("oracle_schemas"))
}

type SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes struct {
	ref terra.Reference
}

func (os SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes {
	return SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes{ref: ref}
}

func (os SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("schema"))
}

func (os SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasAttributes) OracleTables() terra.ListValue[SourceConfigOracleSourceConfig3E317B9AAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfig3E317B9AAttributes](os.ref.Append("oracle_tables"))
}

type SourceConfigOracleSourceConfig3E317B9AAttributes struct {
	ref terra.Reference
}

func (ot SourceConfigOracleSourceConfig3E317B9AAttributes) InternalRef() (terra.Reference, error) {
	return ot.ref, nil
}

func (ot SourceConfigOracleSourceConfig3E317B9AAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfig3E317B9AAttributes {
	return SourceConfigOracleSourceConfig3E317B9AAttributes{ref: ref}
}

func (ot SourceConfigOracleSourceConfig3E317B9AAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ot.ref.InternalTokens()
}

func (ot SourceConfigOracleSourceConfig3E317B9AAttributes) Table() terra.StringValue {
	return terra.ReferenceAsString(ot.ref.Append("table"))
}

func (ot SourceConfigOracleSourceConfig3E317B9AAttributes) OracleColumns() terra.ListValue[SourceConfigOracleSourceConfig1C1EcebbAttributes] {
	return terra.ReferenceAsList[SourceConfigOracleSourceConfig1C1EcebbAttributes](ot.ref.Append("oracle_columns"))
}

type SourceConfigOracleSourceConfig1C1EcebbAttributes struct {
	ref terra.Reference
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfig1C1EcebbAttributes {
	return SourceConfigOracleSourceConfig1C1EcebbAttributes{ref: ref}
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) Column() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("column"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("data_type"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) Encoding() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("encoding"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("length"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("nullable"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("ordinal_position"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) Precision() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("precision"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("primary_key"))
}

func (oc SourceConfigOracleSourceConfig1C1EcebbAttributes) Scale() terra.NumberValue {
	return terra.ReferenceAsNumber(oc.ref.Append("scale"))
}

type SourceConfigOracleSourceConfigStreamLargeObjectsAttributes struct {
	ref terra.Reference
}

func (slo SourceConfigOracleSourceConfigStreamLargeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return slo.ref, nil
}

func (slo SourceConfigOracleSourceConfigStreamLargeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigOracleSourceConfigStreamLargeObjectsAttributes {
	return SourceConfigOracleSourceConfigStreamLargeObjectsAttributes{ref: ref}
}

func (slo SourceConfigOracleSourceConfigStreamLargeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return slo.ref.InternalTokens()
}

type SourceConfigPostgresqlSourceConfigAttributes struct {
	ref terra.Reference
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) InternalRef() (terra.Reference, error) {
	return psc.ref, nil
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigAttributes {
	return SourceConfigPostgresqlSourceConfigAttributes{ref: ref}
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return psc.ref.InternalTokens()
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) MaxConcurrentBackfillTasks() terra.NumberValue {
	return terra.ReferenceAsNumber(psc.ref.Append("max_concurrent_backfill_tasks"))
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) Publication() terra.StringValue {
	return terra.ReferenceAsString(psc.ref.Append("publication"))
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) ReplicationSlot() terra.StringValue {
	return terra.ReferenceAsString(psc.ref.Append("replication_slot"))
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) ExcludeObjects() terra.ListValue[SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes](psc.ref.Append("exclude_objects"))
}

func (psc SourceConfigPostgresqlSourceConfigAttributes) IncludeObjects() terra.ListValue[SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes](psc.ref.Append("include_objects"))
}

type SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes struct {
	ref terra.Reference
}

func (eo SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes {
	return SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes{ref: ref}
}

func (eo SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo SourceConfigPostgresqlSourceConfigExcludeObjectsAttributes) PostgresqlSchemas() terra.ListValue[SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes](eo.ref.Append("postgresql_schemas"))
}

type SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes struct {
	ref terra.Reference
}

func (ps SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes {
	return SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes{ref: ref}
}

func (ps SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("schema"))
}

func (ps SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasAttributes) PostgresqlTables() terra.ListValue[SourceConfigPostgresqlSourceConfigBd3089E9Attributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigBd3089E9Attributes](ps.ref.Append("postgresql_tables"))
}

type SourceConfigPostgresqlSourceConfigBd3089E9Attributes struct {
	ref terra.Reference
}

func (pt SourceConfigPostgresqlSourceConfigBd3089E9Attributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt SourceConfigPostgresqlSourceConfigBd3089E9Attributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigBd3089E9Attributes {
	return SourceConfigPostgresqlSourceConfigBd3089E9Attributes{ref: ref}
}

func (pt SourceConfigPostgresqlSourceConfigBd3089E9Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt SourceConfigPostgresqlSourceConfigBd3089E9Attributes) Table() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("table"))
}

func (pt SourceConfigPostgresqlSourceConfigBd3089E9Attributes) PostgresqlColumns() terra.ListValue[SourceConfigPostgresqlSourceConfigF8E1A27AAttributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigF8E1A27AAttributes](pt.ref.Append("postgresql_columns"))
}

type SourceConfigPostgresqlSourceConfigF8E1A27AAttributes struct {
	ref terra.Reference
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigF8E1A27AAttributes {
	return SourceConfigPostgresqlSourceConfigF8E1A27AAttributes{ref: ref}
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) Column() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("column"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("data_type"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("length"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("nullable"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("ordinal_position"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) Precision() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("precision"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("primary_key"))
}

func (pc SourceConfigPostgresqlSourceConfigF8E1A27AAttributes) Scale() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("scale"))
}

type SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes struct {
	ref terra.Reference
}

func (io SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes) InternalRef() (terra.Reference, error) {
	return io.ref, nil
}

func (io SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes {
	return SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes{ref: ref}
}

func (io SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return io.ref.InternalTokens()
}

func (io SourceConfigPostgresqlSourceConfigIncludeObjectsAttributes) PostgresqlSchemas() terra.ListValue[SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes](io.ref.Append("postgresql_schemas"))
}

type SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes struct {
	ref terra.Reference
}

func (ps SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes {
	return SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes{ref: ref}
}

func (ps SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("schema"))
}

func (ps SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasAttributes) PostgresqlTables() terra.ListValue[SourceConfigPostgresqlSourceConfig93186Bd4Attributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfig93186Bd4Attributes](ps.ref.Append("postgresql_tables"))
}

type SourceConfigPostgresqlSourceConfig93186Bd4Attributes struct {
	ref terra.Reference
}

func (pt SourceConfigPostgresqlSourceConfig93186Bd4Attributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt SourceConfigPostgresqlSourceConfig93186Bd4Attributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfig93186Bd4Attributes {
	return SourceConfigPostgresqlSourceConfig93186Bd4Attributes{ref: ref}
}

func (pt SourceConfigPostgresqlSourceConfig93186Bd4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt SourceConfigPostgresqlSourceConfig93186Bd4Attributes) Table() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("table"))
}

func (pt SourceConfigPostgresqlSourceConfig93186Bd4Attributes) PostgresqlColumns() terra.ListValue[SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes] {
	return terra.ReferenceAsList[SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes](pt.ref.Append("postgresql_columns"))
}

type SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes struct {
	ref terra.Reference
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) InternalWithRef(ref terra.Reference) SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes {
	return SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes{ref: ref}
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) Column() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("column"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("data_type"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) Length() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("length"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) Nullable() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("nullable"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) OrdinalPosition() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("ordinal_position"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) Precision() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("precision"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) PrimaryKey() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("primary_key"))
}

func (pc SourceConfigPostgresqlSourceConfigBdc85Fc1Attributes) Scale() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("scale"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type BackfillAllState struct {
	MysqlExcludedObjects      []BackfillAllMysqlExcludedObjectsState      `json:"mysql_excluded_objects"`
	OracleExcludedObjects     []BackfillAllOracleExcludedObjectsState     `json:"oracle_excluded_objects"`
	PostgresqlExcludedObjects []BackfillAllPostgresqlExcludedObjectsState `json:"postgresql_excluded_objects"`
}

type BackfillAllMysqlExcludedObjectsState struct {
	MysqlDatabases []BackfillAllMysqlExcludedObjectsMysqlDatabasesState `json:"mysql_databases"`
}

type BackfillAllMysqlExcludedObjectsMysqlDatabasesState struct {
	Database    string                                                          `json:"database"`
	MysqlTables []BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesState `json:"mysql_tables"`
}

type BackfillAllMysqlExcludedObjectsMysqlDatabasesMysqlTablesState struct {
	Table        string                                         `json:"table"`
	MysqlColumns []BackfillAllMysqlExcludedObjectsC57Fad3AState `json:"mysql_columns"`
}

type BackfillAllMysqlExcludedObjectsC57Fad3AState struct {
	Collation       string  `json:"collation"`
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	PrimaryKey      bool    `json:"primary_key"`
}

type BackfillAllOracleExcludedObjectsState struct {
	OracleSchemas []BackfillAllOracleExcludedObjectsOracleSchemasState `json:"oracle_schemas"`
}

type BackfillAllOracleExcludedObjectsOracleSchemasState struct {
	Schema       string                                                           `json:"schema"`
	OracleTables []BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesState `json:"oracle_tables"`
}

type BackfillAllOracleExcludedObjectsOracleSchemasOracleTablesState struct {
	Table         string                                          `json:"table"`
	OracleColumns []BackfillAllOracleExcludedObjectsE045B63FState `json:"oracle_columns"`
}

type BackfillAllOracleExcludedObjectsE045B63FState struct {
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Encoding        string  `json:"encoding"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	Precision       float64 `json:"precision"`
	PrimaryKey      bool    `json:"primary_key"`
	Scale           float64 `json:"scale"`
}

type BackfillAllPostgresqlExcludedObjectsState struct {
	PostgresqlSchemas []BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasState `json:"postgresql_schemas"`
}

type BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasState struct {
	Schema           string                                                                       `json:"schema"`
	PostgresqlTables []BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesState `json:"postgresql_tables"`
}

type BackfillAllPostgresqlExcludedObjectsPostgresqlSchemasPostgresqlTablesState struct {
	Table             string                                              `json:"table"`
	PostgresqlColumns []BackfillAllPostgresqlExcludedObjects3F20E9AbState `json:"postgresql_columns"`
}

type BackfillAllPostgresqlExcludedObjects3F20E9AbState struct {
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	Precision       float64 `json:"precision"`
	PrimaryKey      bool    `json:"primary_key"`
	Scale           float64 `json:"scale"`
}

type BackfillNoneState struct{}

type DestinationConfigState struct {
	DestinationConnectionProfile string                                            `json:"destination_connection_profile"`
	BigqueryDestinationConfig    []DestinationConfigBigqueryDestinationConfigState `json:"bigquery_destination_config"`
	GcsDestinationConfig         []DestinationConfigGcsDestinationConfigState      `json:"gcs_destination_config"`
}

type DestinationConfigBigqueryDestinationConfigState struct {
	DataFreshness           string                                                                   `json:"data_freshness"`
	SingleTargetDataset     []DestinationConfigBigqueryDestinationConfigSingleTargetDatasetState     `json:"single_target_dataset"`
	SourceHierarchyDatasets []DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsState `json:"source_hierarchy_datasets"`
}

type DestinationConfigBigqueryDestinationConfigSingleTargetDatasetState struct {
	DatasetId string `json:"dataset_id"`
}

type DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsState struct {
	DatasetTemplate []DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateState `json:"dataset_template"`
}

type DestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateState struct {
	DatasetIdPrefix string `json:"dataset_id_prefix"`
	KmsKeyName      string `json:"kms_key_name"`
	Location        string `json:"location"`
}

type DestinationConfigGcsDestinationConfigState struct {
	FileRotationInterval string                                                     `json:"file_rotation_interval"`
	FileRotationMb       float64                                                    `json:"file_rotation_mb"`
	Path                 string                                                     `json:"path"`
	AvroFileFormat       []DestinationConfigGcsDestinationConfigAvroFileFormatState `json:"avro_file_format"`
	JsonFileFormat       []DestinationConfigGcsDestinationConfigJsonFileFormatState `json:"json_file_format"`
}

type DestinationConfigGcsDestinationConfigAvroFileFormatState struct{}

type DestinationConfigGcsDestinationConfigJsonFileFormatState struct {
	Compression      string `json:"compression"`
	SchemaFileFormat string `json:"schema_file_format"`
}

type SourceConfigState struct {
	SourceConnectionProfile string                                    `json:"source_connection_profile"`
	MysqlSourceConfig       []SourceConfigMysqlSourceConfigState      `json:"mysql_source_config"`
	OracleSourceConfig      []SourceConfigOracleSourceConfigState     `json:"oracle_source_config"`
	PostgresqlSourceConfig  []SourceConfigPostgresqlSourceConfigState `json:"postgresql_source_config"`
}

type SourceConfigMysqlSourceConfigState struct {
	MaxConcurrentBackfillTasks float64                                            `json:"max_concurrent_backfill_tasks"`
	MaxConcurrentCdcTasks      float64                                            `json:"max_concurrent_cdc_tasks"`
	ExcludeObjects             []SourceConfigMysqlSourceConfigExcludeObjectsState `json:"exclude_objects"`
	IncludeObjects             []SourceConfigMysqlSourceConfigIncludeObjectsState `json:"include_objects"`
}

type SourceConfigMysqlSourceConfigExcludeObjectsState struct {
	MysqlDatabases []SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesState `json:"mysql_databases"`
}

type SourceConfigMysqlSourceConfigExcludeObjectsMysqlDatabasesState struct {
	Database    string                                       `json:"database"`
	MysqlTables []SourceConfigMysqlSourceConfig4Cc7DddfState `json:"mysql_tables"`
}

type SourceConfigMysqlSourceConfig4Cc7DddfState struct {
	Table        string                                       `json:"table"`
	MysqlColumns []SourceConfigMysqlSourceConfig93Cd2A06State `json:"mysql_columns"`
}

type SourceConfigMysqlSourceConfig93Cd2A06State struct {
	Collation       string  `json:"collation"`
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	PrimaryKey      bool    `json:"primary_key"`
}

type SourceConfigMysqlSourceConfigIncludeObjectsState struct {
	MysqlDatabases []SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesState `json:"mysql_databases"`
}

type SourceConfigMysqlSourceConfigIncludeObjectsMysqlDatabasesState struct {
	Database    string                                       `json:"database"`
	MysqlTables []SourceConfigMysqlSourceConfig19Afe7B2State `json:"mysql_tables"`
}

type SourceConfigMysqlSourceConfig19Afe7B2State struct {
	Table        string                                       `json:"table"`
	MysqlColumns []SourceConfigMysqlSourceConfig028E7F74State `json:"mysql_columns"`
}

type SourceConfigMysqlSourceConfig028E7F74State struct {
	Collation       string  `json:"collation"`
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	PrimaryKey      bool    `json:"primary_key"`
}

type SourceConfigOracleSourceConfigState struct {
	MaxConcurrentBackfillTasks float64                                                 `json:"max_concurrent_backfill_tasks"`
	MaxConcurrentCdcTasks      float64                                                 `json:"max_concurrent_cdc_tasks"`
	DropLargeObjects           []SourceConfigOracleSourceConfigDropLargeObjectsState   `json:"drop_large_objects"`
	ExcludeObjects             []SourceConfigOracleSourceConfigExcludeObjectsState     `json:"exclude_objects"`
	IncludeObjects             []SourceConfigOracleSourceConfigIncludeObjectsState     `json:"include_objects"`
	StreamLargeObjects         []SourceConfigOracleSourceConfigStreamLargeObjectsState `json:"stream_large_objects"`
}

type SourceConfigOracleSourceConfigDropLargeObjectsState struct{}

type SourceConfigOracleSourceConfigExcludeObjectsState struct {
	OracleSchemas []SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasState `json:"oracle_schemas"`
}

type SourceConfigOracleSourceConfigExcludeObjectsOracleSchemasState struct {
	Schema       string                                        `json:"schema"`
	OracleTables []SourceConfigOracleSourceConfig3506F864State `json:"oracle_tables"`
}

type SourceConfigOracleSourceConfig3506F864State struct {
	Table         string                                        `json:"table"`
	OracleColumns []SourceConfigOracleSourceConfigA3C5Fec1State `json:"oracle_columns"`
}

type SourceConfigOracleSourceConfigA3C5Fec1State struct {
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Encoding        string  `json:"encoding"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	Precision       float64 `json:"precision"`
	PrimaryKey      bool    `json:"primary_key"`
	Scale           float64 `json:"scale"`
}

type SourceConfigOracleSourceConfigIncludeObjectsState struct {
	OracleSchemas []SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasState `json:"oracle_schemas"`
}

type SourceConfigOracleSourceConfigIncludeObjectsOracleSchemasState struct {
	Schema       string                                        `json:"schema"`
	OracleTables []SourceConfigOracleSourceConfig3E317B9AState `json:"oracle_tables"`
}

type SourceConfigOracleSourceConfig3E317B9AState struct {
	Table         string                                        `json:"table"`
	OracleColumns []SourceConfigOracleSourceConfig1C1EcebbState `json:"oracle_columns"`
}

type SourceConfigOracleSourceConfig1C1EcebbState struct {
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Encoding        string  `json:"encoding"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	Precision       float64 `json:"precision"`
	PrimaryKey      bool    `json:"primary_key"`
	Scale           float64 `json:"scale"`
}

type SourceConfigOracleSourceConfigStreamLargeObjectsState struct{}

type SourceConfigPostgresqlSourceConfigState struct {
	MaxConcurrentBackfillTasks float64                                                 `json:"max_concurrent_backfill_tasks"`
	Publication                string                                                  `json:"publication"`
	ReplicationSlot            string                                                  `json:"replication_slot"`
	ExcludeObjects             []SourceConfigPostgresqlSourceConfigExcludeObjectsState `json:"exclude_objects"`
	IncludeObjects             []SourceConfigPostgresqlSourceConfigIncludeObjectsState `json:"include_objects"`
}

type SourceConfigPostgresqlSourceConfigExcludeObjectsState struct {
	PostgresqlSchemas []SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasState `json:"postgresql_schemas"`
}

type SourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemasState struct {
	Schema           string                                            `json:"schema"`
	PostgresqlTables []SourceConfigPostgresqlSourceConfigBd3089E9State `json:"postgresql_tables"`
}

type SourceConfigPostgresqlSourceConfigBd3089E9State struct {
	Table             string                                            `json:"table"`
	PostgresqlColumns []SourceConfigPostgresqlSourceConfigF8E1A27AState `json:"postgresql_columns"`
}

type SourceConfigPostgresqlSourceConfigF8E1A27AState struct {
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	Precision       float64 `json:"precision"`
	PrimaryKey      bool    `json:"primary_key"`
	Scale           float64 `json:"scale"`
}

type SourceConfigPostgresqlSourceConfigIncludeObjectsState struct {
	PostgresqlSchemas []SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasState `json:"postgresql_schemas"`
}

type SourceConfigPostgresqlSourceConfigIncludeObjectsPostgresqlSchemasState struct {
	Schema           string                                            `json:"schema"`
	PostgresqlTables []SourceConfigPostgresqlSourceConfig93186Bd4State `json:"postgresql_tables"`
}

type SourceConfigPostgresqlSourceConfig93186Bd4State struct {
	Table             string                                            `json:"table"`
	PostgresqlColumns []SourceConfigPostgresqlSourceConfigBdc85Fc1State `json:"postgresql_columns"`
}

type SourceConfigPostgresqlSourceConfigBdc85Fc1State struct {
	Column          string  `json:"column"`
	DataType        string  `json:"data_type"`
	Length          float64 `json:"length"`
	Nullable        bool    `json:"nullable"`
	OrdinalPosition float64 `json:"ordinal_position"`
	Precision       float64 `json:"precision"`
	PrimaryKey      bool    `json:"primary_key"`
	Scale           float64 `json:"scale"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
