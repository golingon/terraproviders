// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_tags_tag_values

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataValuesAttributes struct {
	ref terra.Reference
}

func (v DataValuesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataValuesAttributes) InternalWithRef(ref terra.Reference) DataValuesAttributes {
	return DataValuesAttributes{ref: ref}
}

func (v DataValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataValuesAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("create_time"))
}

func (v DataValuesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("description"))
}

func (v DataValuesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataValuesAttributes) NamespacedName() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("namespaced_name"))
}

func (v DataValuesAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("parent"))
}

func (v DataValuesAttributes) ShortName() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("short_name"))
}

func (v DataValuesAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("update_time"))
}

type DataValuesState struct {
	CreateTime     string `json:"create_time"`
	Description    string `json:"description"`
	Name           string `json:"name"`
	NamespacedName string `json:"namespaced_name"`
	Parent         string `json:"parent"`
	ShortName      string `json:"short_name"`
	UpdateTime     string `json:"update_time"`
}
