// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_run_v2_job

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataBinaryAuthorizationAttributes struct {
	ref terra.Reference
}

func (ba DataBinaryAuthorizationAttributes) InternalRef() (terra.Reference, error) {
	return ba.ref, nil
}

func (ba DataBinaryAuthorizationAttributes) InternalWithRef(ref terra.Reference) DataBinaryAuthorizationAttributes {
	return DataBinaryAuthorizationAttributes{ref: ref}
}

func (ba DataBinaryAuthorizationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ba.ref.InternalTokens()
}

func (ba DataBinaryAuthorizationAttributes) BreakglassJustification() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("breakglass_justification"))
}

func (ba DataBinaryAuthorizationAttributes) UseDefault() terra.BoolValue {
	return terra.ReferenceAsBool(ba.ref.Append("use_default"))
}

type DataConditionsAttributes struct {
	ref terra.Reference
}

func (c DataConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataConditionsAttributes) InternalWithRef(ref terra.Reference) DataConditionsAttributes {
	return DataConditionsAttributes{ref: ref}
}

func (c DataConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataConditionsAttributes) ExecutionReason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("execution_reason"))
}

func (c DataConditionsAttributes) LastTransitionTime() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("last_transition_time"))
}

func (c DataConditionsAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("message"))
}

func (c DataConditionsAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("reason"))
}

func (c DataConditionsAttributes) RevisionReason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("revision_reason"))
}

func (c DataConditionsAttributes) Severity() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("severity"))
}

func (c DataConditionsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("state"))
}

func (c DataConditionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("type"))
}

type DataLatestCreatedExecutionAttributes struct {
	ref terra.Reference
}

func (lce DataLatestCreatedExecutionAttributes) InternalRef() (terra.Reference, error) {
	return lce.ref, nil
}

func (lce DataLatestCreatedExecutionAttributes) InternalWithRef(ref terra.Reference) DataLatestCreatedExecutionAttributes {
	return DataLatestCreatedExecutionAttributes{ref: ref}
}

func (lce DataLatestCreatedExecutionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lce.ref.InternalTokens()
}

func (lce DataLatestCreatedExecutionAttributes) CompletionTime() terra.StringValue {
	return terra.ReferenceAsString(lce.ref.Append("completion_time"))
}

func (lce DataLatestCreatedExecutionAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(lce.ref.Append("create_time"))
}

func (lce DataLatestCreatedExecutionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lce.ref.Append("name"))
}

type DataTemplateAttributes struct {
	ref terra.Reference
}

func (t DataTemplateAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTemplateAttributes) InternalWithRef(ref terra.Reference) DataTemplateAttributes {
	return DataTemplateAttributes{ref: ref}
}

func (t DataTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTemplateAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](t.ref.Append("annotations"))
}

func (t DataTemplateAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](t.ref.Append("labels"))
}

func (t DataTemplateAttributes) Parallelism() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("parallelism"))
}

func (t DataTemplateAttributes) TaskCount() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("task_count"))
}

func (t DataTemplateAttributes) Template() terra.ListValue[DataTemplateTemplateAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateAttributes](t.ref.Append("template"))
}

type DataTemplateTemplateAttributes struct {
	ref terra.Reference
}

func (t DataTemplateTemplateAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTemplateTemplateAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateAttributes {
	return DataTemplateTemplateAttributes{ref: ref}
}

func (t DataTemplateTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTemplateTemplateAttributes) EncryptionKey() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("encryption_key"))
}

func (t DataTemplateTemplateAttributes) ExecutionEnvironment() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("execution_environment"))
}

func (t DataTemplateTemplateAttributes) MaxRetries() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("max_retries"))
}

func (t DataTemplateTemplateAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("service_account"))
}

func (t DataTemplateTemplateAttributes) Timeout() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("timeout"))
}

func (t DataTemplateTemplateAttributes) Containers() terra.ListValue[DataTemplateTemplateContainersAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateContainersAttributes](t.ref.Append("containers"))
}

func (t DataTemplateTemplateAttributes) Volumes() terra.ListValue[DataTemplateTemplateVolumesAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateVolumesAttributes](t.ref.Append("volumes"))
}

func (t DataTemplateTemplateAttributes) VpcAccess() terra.ListValue[DataTemplateTemplateVpcAccessAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateVpcAccessAttributes](t.ref.Append("vpc_access"))
}

type DataTemplateTemplateContainersAttributes struct {
	ref terra.Reference
}

func (c DataTemplateTemplateContainersAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataTemplateTemplateContainersAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateContainersAttributes {
	return DataTemplateTemplateContainersAttributes{ref: ref}
}

func (c DataTemplateTemplateContainersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataTemplateTemplateContainersAttributes) Args() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("args"))
}

func (c DataTemplateTemplateContainersAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("command"))
}

func (c DataTemplateTemplateContainersAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image"))
}

func (c DataTemplateTemplateContainersAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DataTemplateTemplateContainersAttributes) WorkingDir() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("working_dir"))
}

func (c DataTemplateTemplateContainersAttributes) Env() terra.ListValue[DataTemplateTemplateContainersEnvAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateContainersEnvAttributes](c.ref.Append("env"))
}

func (c DataTemplateTemplateContainersAttributes) Ports() terra.ListValue[DataTemplateTemplateContainersPortsAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateContainersPortsAttributes](c.ref.Append("ports"))
}

func (c DataTemplateTemplateContainersAttributes) Resources() terra.ListValue[DataTemplateTemplateContainersResourcesAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateContainersResourcesAttributes](c.ref.Append("resources"))
}

func (c DataTemplateTemplateContainersAttributes) VolumeMounts() terra.ListValue[DataTemplateTemplateContainersVolumeMountsAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateContainersVolumeMountsAttributes](c.ref.Append("volume_mounts"))
}

type DataTemplateTemplateContainersEnvAttributes struct {
	ref terra.Reference
}

func (e DataTemplateTemplateContainersEnvAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataTemplateTemplateContainersEnvAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateContainersEnvAttributes {
	return DataTemplateTemplateContainersEnvAttributes{ref: ref}
}

func (e DataTemplateTemplateContainersEnvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataTemplateTemplateContainersEnvAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataTemplateTemplateContainersEnvAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

func (e DataTemplateTemplateContainersEnvAttributes) ValueSource() terra.ListValue[DataTemplateTemplateA639A679Attributes] {
	return terra.ReferenceAsList[DataTemplateTemplateA639A679Attributes](e.ref.Append("value_source"))
}

type DataTemplateTemplateA639A679Attributes struct {
	ref terra.Reference
}

func (vs DataTemplateTemplateA639A679Attributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs DataTemplateTemplateA639A679Attributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateA639A679Attributes {
	return DataTemplateTemplateA639A679Attributes{ref: ref}
}

func (vs DataTemplateTemplateA639A679Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs DataTemplateTemplateA639A679Attributes) SecretKeyRef() terra.ListValue[DataTemplateTemplate55A5Aff7Attributes] {
	return terra.ReferenceAsList[DataTemplateTemplate55A5Aff7Attributes](vs.ref.Append("secret_key_ref"))
}

type DataTemplateTemplate55A5Aff7Attributes struct {
	ref terra.Reference
}

func (skr DataTemplateTemplate55A5Aff7Attributes) InternalRef() (terra.Reference, error) {
	return skr.ref, nil
}

func (skr DataTemplateTemplate55A5Aff7Attributes) InternalWithRef(ref terra.Reference) DataTemplateTemplate55A5Aff7Attributes {
	return DataTemplateTemplate55A5Aff7Attributes{ref: ref}
}

func (skr DataTemplateTemplate55A5Aff7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return skr.ref.InternalTokens()
}

func (skr DataTemplateTemplate55A5Aff7Attributes) Secret() terra.StringValue {
	return terra.ReferenceAsString(skr.ref.Append("secret"))
}

func (skr DataTemplateTemplate55A5Aff7Attributes) Version() terra.StringValue {
	return terra.ReferenceAsString(skr.ref.Append("version"))
}

type DataTemplateTemplateContainersPortsAttributes struct {
	ref terra.Reference
}

func (p DataTemplateTemplateContainersPortsAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataTemplateTemplateContainersPortsAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateContainersPortsAttributes {
	return DataTemplateTemplateContainersPortsAttributes{ref: ref}
}

func (p DataTemplateTemplateContainersPortsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataTemplateTemplateContainersPortsAttributes) ContainerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("container_port"))
}

func (p DataTemplateTemplateContainersPortsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

type DataTemplateTemplateContainersResourcesAttributes struct {
	ref terra.Reference
}

func (r DataTemplateTemplateContainersResourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataTemplateTemplateContainersResourcesAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateContainersResourcesAttributes {
	return DataTemplateTemplateContainersResourcesAttributes{ref: ref}
}

func (r DataTemplateTemplateContainersResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataTemplateTemplateContainersResourcesAttributes) Limits() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("limits"))
}

type DataTemplateTemplateContainersVolumeMountsAttributes struct {
	ref terra.Reference
}

func (vm DataTemplateTemplateContainersVolumeMountsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm DataTemplateTemplateContainersVolumeMountsAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateContainersVolumeMountsAttributes {
	return DataTemplateTemplateContainersVolumeMountsAttributes{ref: ref}
}

func (vm DataTemplateTemplateContainersVolumeMountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm DataTemplateTemplateContainersVolumeMountsAttributes) MountPath() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("mount_path"))
}

func (vm DataTemplateTemplateContainersVolumeMountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("name"))
}

type DataTemplateTemplateVolumesAttributes struct {
	ref terra.Reference
}

func (v DataTemplateTemplateVolumesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataTemplateTemplateVolumesAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateVolumesAttributes {
	return DataTemplateTemplateVolumesAttributes{ref: ref}
}

func (v DataTemplateTemplateVolumesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataTemplateTemplateVolumesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataTemplateTemplateVolumesAttributes) CloudSqlInstance() terra.ListValue[DataTemplateTemplateVolumesCloudSqlInstanceAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateVolumesCloudSqlInstanceAttributes](v.ref.Append("cloud_sql_instance"))
}

func (v DataTemplateTemplateVolumesAttributes) Secret() terra.ListValue[DataTemplateTemplateVolumesSecretAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateVolumesSecretAttributes](v.ref.Append("secret"))
}

type DataTemplateTemplateVolumesCloudSqlInstanceAttributes struct {
	ref terra.Reference
}

func (csi DataTemplateTemplateVolumesCloudSqlInstanceAttributes) InternalRef() (terra.Reference, error) {
	return csi.ref, nil
}

func (csi DataTemplateTemplateVolumesCloudSqlInstanceAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateVolumesCloudSqlInstanceAttributes {
	return DataTemplateTemplateVolumesCloudSqlInstanceAttributes{ref: ref}
}

func (csi DataTemplateTemplateVolumesCloudSqlInstanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csi.ref.InternalTokens()
}

func (csi DataTemplateTemplateVolumesCloudSqlInstanceAttributes) Instances() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](csi.ref.Append("instances"))
}

type DataTemplateTemplateVolumesSecretAttributes struct {
	ref terra.Reference
}

func (s DataTemplateTemplateVolumesSecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataTemplateTemplateVolumesSecretAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateVolumesSecretAttributes {
	return DataTemplateTemplateVolumesSecretAttributes{ref: ref}
}

func (s DataTemplateTemplateVolumesSecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataTemplateTemplateVolumesSecretAttributes) DefaultMode() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("default_mode"))
}

func (s DataTemplateTemplateVolumesSecretAttributes) Secret() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret"))
}

func (s DataTemplateTemplateVolumesSecretAttributes) Items() terra.ListValue[DataTemplateTemplateF0A964DcAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateF0A964DcAttributes](s.ref.Append("items"))
}

type DataTemplateTemplateF0A964DcAttributes struct {
	ref terra.Reference
}

func (i DataTemplateTemplateF0A964DcAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataTemplateTemplateF0A964DcAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateF0A964DcAttributes {
	return DataTemplateTemplateF0A964DcAttributes{ref: ref}
}

func (i DataTemplateTemplateF0A964DcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataTemplateTemplateF0A964DcAttributes) Mode() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("mode"))
}

func (i DataTemplateTemplateF0A964DcAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("path"))
}

func (i DataTemplateTemplateF0A964DcAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("version"))
}

type DataTemplateTemplateVpcAccessAttributes struct {
	ref terra.Reference
}

func (va DataTemplateTemplateVpcAccessAttributes) InternalRef() (terra.Reference, error) {
	return va.ref, nil
}

func (va DataTemplateTemplateVpcAccessAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateVpcAccessAttributes {
	return DataTemplateTemplateVpcAccessAttributes{ref: ref}
}

func (va DataTemplateTemplateVpcAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return va.ref.InternalTokens()
}

func (va DataTemplateTemplateVpcAccessAttributes) Connector() terra.StringValue {
	return terra.ReferenceAsString(va.ref.Append("connector"))
}

func (va DataTemplateTemplateVpcAccessAttributes) Egress() terra.StringValue {
	return terra.ReferenceAsString(va.ref.Append("egress"))
}

func (va DataTemplateTemplateVpcAccessAttributes) NetworkInterfaces() terra.ListValue[DataTemplateTemplateVpcAccessNetworkInterfacesAttributes] {
	return terra.ReferenceAsList[DataTemplateTemplateVpcAccessNetworkInterfacesAttributes](va.ref.Append("network_interfaces"))
}

type DataTemplateTemplateVpcAccessNetworkInterfacesAttributes struct {
	ref terra.Reference
}

func (ni DataTemplateTemplateVpcAccessNetworkInterfacesAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni DataTemplateTemplateVpcAccessNetworkInterfacesAttributes) InternalWithRef(ref terra.Reference) DataTemplateTemplateVpcAccessNetworkInterfacesAttributes {
	return DataTemplateTemplateVpcAccessNetworkInterfacesAttributes{ref: ref}
}

func (ni DataTemplateTemplateVpcAccessNetworkInterfacesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ni.ref.InternalTokens()
}

func (ni DataTemplateTemplateVpcAccessNetworkInterfacesAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("network"))
}

func (ni DataTemplateTemplateVpcAccessNetworkInterfacesAttributes) Subnetwork() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("subnetwork"))
}

func (ni DataTemplateTemplateVpcAccessNetworkInterfacesAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ni.ref.Append("tags"))
}

type DataTerminalConditionAttributes struct {
	ref terra.Reference
}

func (tc DataTerminalConditionAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc DataTerminalConditionAttributes) InternalWithRef(ref terra.Reference) DataTerminalConditionAttributes {
	return DataTerminalConditionAttributes{ref: ref}
}

func (tc DataTerminalConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc DataTerminalConditionAttributes) ExecutionReason() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("execution_reason"))
}

func (tc DataTerminalConditionAttributes) LastTransitionTime() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("last_transition_time"))
}

func (tc DataTerminalConditionAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("message"))
}

func (tc DataTerminalConditionAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("reason"))
}

func (tc DataTerminalConditionAttributes) RevisionReason() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("revision_reason"))
}

func (tc DataTerminalConditionAttributes) Severity() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("severity"))
}

func (tc DataTerminalConditionAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("state"))
}

func (tc DataTerminalConditionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("type"))
}

type DataBinaryAuthorizationState struct {
	BreakglassJustification string `json:"breakglass_justification"`
	UseDefault              bool   `json:"use_default"`
}

type DataConditionsState struct {
	ExecutionReason    string `json:"execution_reason"`
	LastTransitionTime string `json:"last_transition_time"`
	Message            string `json:"message"`
	Reason             string `json:"reason"`
	RevisionReason     string `json:"revision_reason"`
	Severity           string `json:"severity"`
	State              string `json:"state"`
	Type               string `json:"type"`
}

type DataLatestCreatedExecutionState struct {
	CompletionTime string `json:"completion_time"`
	CreateTime     string `json:"create_time"`
	Name           string `json:"name"`
}

type DataTemplateState struct {
	Annotations map[string]string           `json:"annotations"`
	Labels      map[string]string           `json:"labels"`
	Parallelism float64                     `json:"parallelism"`
	TaskCount   float64                     `json:"task_count"`
	Template    []DataTemplateTemplateState `json:"template"`
}

type DataTemplateTemplateState struct {
	EncryptionKey        string                                `json:"encryption_key"`
	ExecutionEnvironment string                                `json:"execution_environment"`
	MaxRetries           float64                               `json:"max_retries"`
	ServiceAccount       string                                `json:"service_account"`
	Timeout              string                                `json:"timeout"`
	Containers           []DataTemplateTemplateContainersState `json:"containers"`
	Volumes              []DataTemplateTemplateVolumesState    `json:"volumes"`
	VpcAccess            []DataTemplateTemplateVpcAccessState  `json:"vpc_access"`
}

type DataTemplateTemplateContainersState struct {
	Args         []string                                          `json:"args"`
	Command      []string                                          `json:"command"`
	Image        string                                            `json:"image"`
	Name         string                                            `json:"name"`
	WorkingDir   string                                            `json:"working_dir"`
	Env          []DataTemplateTemplateContainersEnvState          `json:"env"`
	Ports        []DataTemplateTemplateContainersPortsState        `json:"ports"`
	Resources    []DataTemplateTemplateContainersResourcesState    `json:"resources"`
	VolumeMounts []DataTemplateTemplateContainersVolumeMountsState `json:"volume_mounts"`
}

type DataTemplateTemplateContainersEnvState struct {
	Name        string                              `json:"name"`
	Value       string                              `json:"value"`
	ValueSource []DataTemplateTemplateA639A679State `json:"value_source"`
}

type DataTemplateTemplateA639A679State struct {
	SecretKeyRef []DataTemplateTemplate55A5Aff7State `json:"secret_key_ref"`
}

type DataTemplateTemplate55A5Aff7State struct {
	Secret  string `json:"secret"`
	Version string `json:"version"`
}

type DataTemplateTemplateContainersPortsState struct {
	ContainerPort float64 `json:"container_port"`
	Name          string  `json:"name"`
}

type DataTemplateTemplateContainersResourcesState struct {
	Limits map[string]string `json:"limits"`
}

type DataTemplateTemplateContainersVolumeMountsState struct {
	MountPath string `json:"mount_path"`
	Name      string `json:"name"`
}

type DataTemplateTemplateVolumesState struct {
	Name             string                                             `json:"name"`
	CloudSqlInstance []DataTemplateTemplateVolumesCloudSqlInstanceState `json:"cloud_sql_instance"`
	Secret           []DataTemplateTemplateVolumesSecretState           `json:"secret"`
}

type DataTemplateTemplateVolumesCloudSqlInstanceState struct {
	Instances []string `json:"instances"`
}

type DataTemplateTemplateVolumesSecretState struct {
	DefaultMode float64                             `json:"default_mode"`
	Secret      string                              `json:"secret"`
	Items       []DataTemplateTemplateF0A964DcState `json:"items"`
}

type DataTemplateTemplateF0A964DcState struct {
	Mode    float64 `json:"mode"`
	Path    string  `json:"path"`
	Version string  `json:"version"`
}

type DataTemplateTemplateVpcAccessState struct {
	Connector         string                                                `json:"connector"`
	Egress            string                                                `json:"egress"`
	NetworkInterfaces []DataTemplateTemplateVpcAccessNetworkInterfacesState `json:"network_interfaces"`
}

type DataTemplateTemplateVpcAccessNetworkInterfacesState struct {
	Network    string   `json:"network"`
	Subnetwork string   `json:"subnetwork"`
	Tags       []string `json:"tags"`
}

type DataTerminalConditionState struct {
	ExecutionReason    string `json:"execution_reason"`
	LastTransitionTime string `json:"last_transition_time"`
	Message            string `json:"message"`
	Reason             string `json:"reason"`
	RevisionReason     string `json:"revision_reason"`
	Severity           string `json:"severity"`
	State              string `json:"state"`
	Type               string `json:"type"`
}
