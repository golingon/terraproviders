// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_run_v2_job

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_cloud_run_v2_job.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcrvj *DataSource) DataSource() string {
	return "google_cloud_run_v2_job"
}

// LocalName returns the local name for [DataSource].
func (gcrvj *DataSource) LocalName() string {
	return gcrvj.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcrvj *DataSource) Configuration() interface{} {
	return gcrvj.Args
}

// Attributes returns the attributes for [DataSource].
func (gcrvj *DataSource) Attributes() dataGoogleCloudRunV2JobAttributes {
	return dataGoogleCloudRunV2JobAttributes{ref: terra.ReferenceDataSource(gcrvj)}
}

// DataArgs contains the configurations for google_cloud_run_v2_job.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleCloudRunV2JobAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrvj.ref.Append("annotations"))
}

// Client returns a reference to field client of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Client() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("client"))
}

// ClientVersion returns a reference to field client_version of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) ClientVersion() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("client_version"))
}

// CreateTime returns a reference to field create_time of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("create_time"))
}

// Creator returns a reference to field creator of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Creator() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("creator"))
}

// DeleteTime returns a reference to field delete_time of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("delete_time"))
}

// EffectiveAnnotations returns a reference to field effective_annotations of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrvj.ref.Append("effective_annotations"))
}

// EffectiveLabels returns a reference to field effective_labels of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrvj.ref.Append("effective_labels"))
}

// Etag returns a reference to field etag of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("etag"))
}

// ExecutionCount returns a reference to field execution_count of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) ExecutionCount() terra.NumberValue {
	return terra.ReferenceAsNumber(gcrvj.ref.Append("execution_count"))
}

// ExpireTime returns a reference to field expire_time of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("expire_time"))
}

// Generation returns a reference to field generation of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Generation() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("generation"))
}

// Id returns a reference to field id of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("id"))
}

// Labels returns a reference to field labels of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrvj.ref.Append("labels"))
}

// LastModifier returns a reference to field last_modifier of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) LastModifier() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("last_modifier"))
}

// LaunchStage returns a reference to field launch_stage of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) LaunchStage() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("launch_stage"))
}

// Location returns a reference to field location of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("location"))
}

// Name returns a reference to field name of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("name"))
}

// ObservedGeneration returns a reference to field observed_generation of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) ObservedGeneration() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("observed_generation"))
}

// Project returns a reference to field project of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("project"))
}

// Reconciling returns a reference to field reconciling of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(gcrvj.ref.Append("reconciling"))
}

// TerraformLabels returns a reference to field terraform_labels of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrvj.ref.Append("terraform_labels"))
}

// Uid returns a reference to field uid of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_cloud_run_v2_job.
func (gcrvj dataGoogleCloudRunV2JobAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gcrvj.ref.Append("update_time"))
}

func (gcrvj dataGoogleCloudRunV2JobAttributes) BinaryAuthorization() terra.ListValue[DataBinaryAuthorizationAttributes] {
	return terra.ReferenceAsList[DataBinaryAuthorizationAttributes](gcrvj.ref.Append("binary_authorization"))
}

func (gcrvj dataGoogleCloudRunV2JobAttributes) Conditions() terra.ListValue[DataConditionsAttributes] {
	return terra.ReferenceAsList[DataConditionsAttributes](gcrvj.ref.Append("conditions"))
}

func (gcrvj dataGoogleCloudRunV2JobAttributes) LatestCreatedExecution() terra.ListValue[DataLatestCreatedExecutionAttributes] {
	return terra.ReferenceAsList[DataLatestCreatedExecutionAttributes](gcrvj.ref.Append("latest_created_execution"))
}

func (gcrvj dataGoogleCloudRunV2JobAttributes) Template() terra.ListValue[DataTemplateAttributes] {
	return terra.ReferenceAsList[DataTemplateAttributes](gcrvj.ref.Append("template"))
}

func (gcrvj dataGoogleCloudRunV2JobAttributes) TerminalCondition() terra.ListValue[DataTerminalConditionAttributes] {
	return terra.ReferenceAsList[DataTerminalConditionAttributes](gcrvj.ref.Append("terminal_condition"))
}
