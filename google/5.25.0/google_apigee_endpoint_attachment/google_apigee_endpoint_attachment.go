// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apigee_endpoint_attachment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_apigee_endpoint_attachment.
type Resource struct {
	Name      string
	Args      Args
	state     *googleApigeeEndpointAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gaea *Resource) Type() string {
	return "google_apigee_endpoint_attachment"
}

// LocalName returns the local name for [Resource].
func (gaea *Resource) LocalName() string {
	return gaea.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gaea *Resource) Configuration() interface{} {
	return gaea.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gaea *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gaea)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gaea *Resource) Dependencies() terra.Dependencies {
	return gaea.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gaea *Resource) LifecycleManagement() *terra.Lifecycle {
	return gaea.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gaea *Resource) Attributes() googleApigeeEndpointAttachmentAttributes {
	return googleApigeeEndpointAttachmentAttributes{ref: terra.ReferenceResource(gaea)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gaea *Resource) ImportState(state io.Reader) error {
	gaea.state = &googleApigeeEndpointAttachmentState{}
	if err := json.NewDecoder(state).Decode(gaea.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gaea.Type(), gaea.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gaea *Resource) State() (*googleApigeeEndpointAttachmentState, bool) {
	return gaea.state, gaea.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gaea *Resource) StateMust() *googleApigeeEndpointAttachmentState {
	if gaea.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gaea.Type(), gaea.LocalName()))
	}
	return gaea.state
}

// Args contains the configurations for google_apigee_endpoint_attachment.
type Args struct {
	// EndpointAttachmentId: string, required
	EndpointAttachmentId terra.StringValue `hcl:"endpoint_attachment_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// OrgId: string, required
	OrgId terra.StringValue `hcl:"org_id,attr" validate:"required"`
	// ServiceAttachment: string, required
	ServiceAttachment terra.StringValue `hcl:"service_attachment,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleApigeeEndpointAttachmentAttributes struct {
	ref terra.Reference
}

// ConnectionState returns a reference to field connection_state of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) ConnectionState() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("connection_state"))
}

// EndpointAttachmentId returns a reference to field endpoint_attachment_id of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) EndpointAttachmentId() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("endpoint_attachment_id"))
}

// Host returns a reference to field host of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("host"))
}

// Id returns a reference to field id of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("id"))
}

// Location returns a reference to field location of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("location"))
}

// Name returns a reference to field name of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("name"))
}

// OrgId returns a reference to field org_id of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) OrgId() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("org_id"))
}

// ServiceAttachment returns a reference to field service_attachment of google_apigee_endpoint_attachment.
func (gaea googleApigeeEndpointAttachmentAttributes) ServiceAttachment() terra.StringValue {
	return terra.ReferenceAsString(gaea.ref.Append("service_attachment"))
}

func (gaea googleApigeeEndpointAttachmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gaea.ref.Append("timeouts"))
}

type googleApigeeEndpointAttachmentState struct {
	ConnectionState      string         `json:"connection_state"`
	EndpointAttachmentId string         `json:"endpoint_attachment_id"`
	Host                 string         `json:"host"`
	Id                   string         `json:"id"`
	Location             string         `json:"location"`
	Name                 string         `json:"name"`
	OrgId                string         `json:"org_id"`
	ServiceAttachment    string         `json:"service_attachment"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
