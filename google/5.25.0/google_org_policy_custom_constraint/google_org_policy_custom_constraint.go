// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_org_policy_custom_constraint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_org_policy_custom_constraint.
type Resource struct {
	Name      string
	Args      Args
	state     *googleOrgPolicyCustomConstraintState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gopcc *Resource) Type() string {
	return "google_org_policy_custom_constraint"
}

// LocalName returns the local name for [Resource].
func (gopcc *Resource) LocalName() string {
	return gopcc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gopcc *Resource) Configuration() interface{} {
	return gopcc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gopcc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gopcc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gopcc *Resource) Dependencies() terra.Dependencies {
	return gopcc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gopcc *Resource) LifecycleManagement() *terra.Lifecycle {
	return gopcc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gopcc *Resource) Attributes() googleOrgPolicyCustomConstraintAttributes {
	return googleOrgPolicyCustomConstraintAttributes{ref: terra.ReferenceResource(gopcc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gopcc *Resource) ImportState(state io.Reader) error {
	gopcc.state = &googleOrgPolicyCustomConstraintState{}
	if err := json.NewDecoder(state).Decode(gopcc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gopcc.Type(), gopcc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gopcc *Resource) State() (*googleOrgPolicyCustomConstraintState, bool) {
	return gopcc.state, gopcc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gopcc *Resource) StateMust() *googleOrgPolicyCustomConstraintState {
	if gopcc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gopcc.Type(), gopcc.LocalName()))
	}
	return gopcc.state
}

// Args contains the configurations for google_org_policy_custom_constraint.
type Args struct {
	// ActionType: string, required
	ActionType terra.StringValue `hcl:"action_type,attr" validate:"required"`
	// Condition: string, required
	Condition terra.StringValue `hcl:"condition,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MethodTypes: list of string, required
	MethodTypes terra.ListValue[terra.StringValue] `hcl:"method_types,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// ResourceTypes: list of string, required
	ResourceTypes terra.ListValue[terra.StringValue] `hcl:"resource_types,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleOrgPolicyCustomConstraintAttributes struct {
	ref terra.Reference
}

// ActionType returns a reference to field action_type of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) ActionType() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("action_type"))
}

// Condition returns a reference to field condition of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) Condition() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("condition"))
}

// Description returns a reference to field description of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("display_name"))
}

// Id returns a reference to field id of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("id"))
}

// MethodTypes returns a reference to field method_types of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) MethodTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gopcc.ref.Append("method_types"))
}

// Name returns a reference to field name of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("name"))
}

// Parent returns a reference to field parent of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("parent"))
}

// ResourceTypes returns a reference to field resource_types of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) ResourceTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gopcc.ref.Append("resource_types"))
}

// UpdateTime returns a reference to field update_time of google_org_policy_custom_constraint.
func (gopcc googleOrgPolicyCustomConstraintAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gopcc.ref.Append("update_time"))
}

func (gopcc googleOrgPolicyCustomConstraintAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gopcc.ref.Append("timeouts"))
}

type googleOrgPolicyCustomConstraintState struct {
	ActionType    string         `json:"action_type"`
	Condition     string         `json:"condition"`
	Description   string         `json:"description"`
	DisplayName   string         `json:"display_name"`
	Id            string         `json:"id"`
	MethodTypes   []string       `json:"method_types"`
	Name          string         `json:"name"`
	Parent        string         `json:"parent"`
	ResourceTypes []string       `json:"resource_types"`
	UpdateTime    string         `json:"update_time"`
	Timeouts      *TimeoutsState `json:"timeouts"`
}
