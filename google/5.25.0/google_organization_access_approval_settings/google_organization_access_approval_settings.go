// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_organization_access_approval_settings

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_organization_access_approval_settings.
type Resource struct {
	Name      string
	Args      Args
	state     *googleOrganizationAccessApprovalSettingsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (goaas *Resource) Type() string {
	return "google_organization_access_approval_settings"
}

// LocalName returns the local name for [Resource].
func (goaas *Resource) LocalName() string {
	return goaas.Name
}

// Configuration returns the configuration (args) for [Resource].
func (goaas *Resource) Configuration() interface{} {
	return goaas.Args
}

// DependOn is used for other resources to depend on [Resource].
func (goaas *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(goaas)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (goaas *Resource) Dependencies() terra.Dependencies {
	return goaas.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (goaas *Resource) LifecycleManagement() *terra.Lifecycle {
	return goaas.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (goaas *Resource) Attributes() googleOrganizationAccessApprovalSettingsAttributes {
	return googleOrganizationAccessApprovalSettingsAttributes{ref: terra.ReferenceResource(goaas)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (goaas *Resource) ImportState(state io.Reader) error {
	goaas.state = &googleOrganizationAccessApprovalSettingsState{}
	if err := json.NewDecoder(state).Decode(goaas.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", goaas.Type(), goaas.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (goaas *Resource) State() (*googleOrganizationAccessApprovalSettingsState, bool) {
	return goaas.state, goaas.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (goaas *Resource) StateMust() *googleOrganizationAccessApprovalSettingsState {
	if goaas.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", goaas.Type(), goaas.LocalName()))
	}
	return goaas.state
}

// Args contains the configurations for google_organization_access_approval_settings.
type Args struct {
	// ActiveKeyVersion: string, optional
	ActiveKeyVersion terra.StringValue `hcl:"active_key_version,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NotificationEmails: set of string, optional
	NotificationEmails terra.SetValue[terra.StringValue] `hcl:"notification_emails,attr"`
	// OrganizationId: string, required
	OrganizationId terra.StringValue `hcl:"organization_id,attr" validate:"required"`
	// EnrolledServices: min=1
	EnrolledServices []EnrolledServices `hcl:"enrolled_services,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleOrganizationAccessApprovalSettingsAttributes struct {
	ref terra.Reference
}

// ActiveKeyVersion returns a reference to field active_key_version of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) ActiveKeyVersion() terra.StringValue {
	return terra.ReferenceAsString(goaas.ref.Append("active_key_version"))
}

// AncestorHasActiveKeyVersion returns a reference to field ancestor_has_active_key_version of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) AncestorHasActiveKeyVersion() terra.BoolValue {
	return terra.ReferenceAsBool(goaas.ref.Append("ancestor_has_active_key_version"))
}

// EnrolledAncestor returns a reference to field enrolled_ancestor of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) EnrolledAncestor() terra.BoolValue {
	return terra.ReferenceAsBool(goaas.ref.Append("enrolled_ancestor"))
}

// Id returns a reference to field id of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(goaas.ref.Append("id"))
}

// InvalidKeyVersion returns a reference to field invalid_key_version of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) InvalidKeyVersion() terra.BoolValue {
	return terra.ReferenceAsBool(goaas.ref.Append("invalid_key_version"))
}

// Name returns a reference to field name of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(goaas.ref.Append("name"))
}

// NotificationEmails returns a reference to field notification_emails of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) NotificationEmails() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](goaas.ref.Append("notification_emails"))
}

// OrganizationId returns a reference to field organization_id of google_organization_access_approval_settings.
func (goaas googleOrganizationAccessApprovalSettingsAttributes) OrganizationId() terra.StringValue {
	return terra.ReferenceAsString(goaas.ref.Append("organization_id"))
}

func (goaas googleOrganizationAccessApprovalSettingsAttributes) EnrolledServices() terra.SetValue[EnrolledServicesAttributes] {
	return terra.ReferenceAsSet[EnrolledServicesAttributes](goaas.ref.Append("enrolled_services"))
}

func (goaas googleOrganizationAccessApprovalSettingsAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](goaas.ref.Append("timeouts"))
}

type googleOrganizationAccessApprovalSettingsState struct {
	ActiveKeyVersion            string                  `json:"active_key_version"`
	AncestorHasActiveKeyVersion bool                    `json:"ancestor_has_active_key_version"`
	EnrolledAncestor            bool                    `json:"enrolled_ancestor"`
	Id                          string                  `json:"id"`
	InvalidKeyVersion           bool                    `json:"invalid_key_version"`
	Name                        string                  `json:"name"`
	NotificationEmails          []string                `json:"notification_emails"`
	OrganizationId              string                  `json:"organization_id"`
	EnrolledServices            []EnrolledServicesState `json:"enrolled_services"`
	Timeouts                    *TimeoutsState          `json:"timeouts"`
}
