// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_region_disk

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_region_disk.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcrd *DataSource) DataSource() string {
	return "google_compute_region_disk"
}

// LocalName returns the local name for [DataSource].
func (gcrd *DataSource) LocalName() string {
	return gcrd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcrd *DataSource) Configuration() interface{} {
	return gcrd.Args
}

// Attributes returns the attributes for [DataSource].
func (gcrd *DataSource) Attributes() dataGoogleComputeRegionDiskAttributes {
	return dataGoogleComputeRegionDiskAttributes{ref: terra.ReferenceDataSource(gcrd)}
}

// DataArgs contains the configurations for google_compute_region_disk.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type dataGoogleComputeRegionDiskAttributes struct {
	ref terra.Reference
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrd.ref.Append("effective_labels"))
}

// Id returns a reference to field id of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("id"))
}

// LabelFingerprint returns a reference to field label_fingerprint of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("label_fingerprint"))
}

// Labels returns a reference to field labels of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrd.ref.Append("labels"))
}

// LastAttachTimestamp returns a reference to field last_attach_timestamp of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) LastAttachTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("last_attach_timestamp"))
}

// LastDetachTimestamp returns a reference to field last_detach_timestamp of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) LastDetachTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("last_detach_timestamp"))
}

// Licenses returns a reference to field licenses of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Licenses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcrd.ref.Append("licenses"))
}

// Name returns a reference to field name of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("name"))
}

// PhysicalBlockSizeBytes returns a reference to field physical_block_size_bytes of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) PhysicalBlockSizeBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(gcrd.ref.Append("physical_block_size_bytes"))
}

// Project returns a reference to field project of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("region"))
}

// ReplicaZones returns a reference to field replica_zones of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) ReplicaZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcrd.ref.Append("replica_zones"))
}

// SelfLink returns a reference to field self_link of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("self_link"))
}

// Size returns a reference to field size of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(gcrd.ref.Append("size"))
}

// Snapshot returns a reference to field snapshot of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Snapshot() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("snapshot"))
}

// SourceDisk returns a reference to field source_disk of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) SourceDisk() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("source_disk"))
}

// SourceDiskId returns a reference to field source_disk_id of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) SourceDiskId() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("source_disk_id"))
}

// SourceSnapshotId returns a reference to field source_snapshot_id of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) SourceSnapshotId() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("source_snapshot_id"))
}

// TerraformLabels returns a reference to field terraform_labels of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcrd.ref.Append("terraform_labels"))
}

// Type returns a reference to field type of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gcrd.ref.Append("type"))
}

// Users returns a reference to field users of google_compute_region_disk.
func (gcrd dataGoogleComputeRegionDiskAttributes) Users() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcrd.ref.Append("users"))
}

func (gcrd dataGoogleComputeRegionDiskAttributes) AsyncPrimaryDisk() terra.ListValue[DataAsyncPrimaryDiskAttributes] {
	return terra.ReferenceAsList[DataAsyncPrimaryDiskAttributes](gcrd.ref.Append("async_primary_disk"))
}

func (gcrd dataGoogleComputeRegionDiskAttributes) DiskEncryptionKey() terra.ListValue[DataDiskEncryptionKeyAttributes] {
	return terra.ReferenceAsList[DataDiskEncryptionKeyAttributes](gcrd.ref.Append("disk_encryption_key"))
}

func (gcrd dataGoogleComputeRegionDiskAttributes) GuestOsFeatures() terra.SetValue[DataGuestOsFeaturesAttributes] {
	return terra.ReferenceAsSet[DataGuestOsFeaturesAttributes](gcrd.ref.Append("guest_os_features"))
}

func (gcrd dataGoogleComputeRegionDiskAttributes) SourceSnapshotEncryptionKey() terra.ListValue[DataSourceSnapshotEncryptionKeyAttributes] {
	return terra.ReferenceAsList[DataSourceSnapshotEncryptionKeyAttributes](gcrd.ref.Append("source_snapshot_encryption_key"))
}
