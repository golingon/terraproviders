// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_access_context_manager_access_levels

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccessLevels struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Title: string, required
	Title terra.StringValue `hcl:"title,attr" validate:"required"`
	// AccessLevelsBasic: optional
	Basic *AccessLevelsBasic `hcl:"basic,block"`
	// AccessLevelsCustom: optional
	Custom *AccessLevelsCustom `hcl:"custom,block"`
}

type AccessLevelsBasic struct {
	// CombiningFunction: string, optional
	CombiningFunction terra.StringValue `hcl:"combining_function,attr"`
	// AccessLevelsBasicConditions: min=1
	Conditions []AccessLevelsBasicConditions `hcl:"conditions,block" validate:"min=1"`
}

type AccessLevelsBasicConditions struct {
	// IpSubnetworks: list of string, optional
	IpSubnetworks terra.ListValue[terra.StringValue] `hcl:"ip_subnetworks,attr"`
	// Members: list of string, optional
	Members terra.ListValue[terra.StringValue] `hcl:"members,attr"`
	// Negate: bool, optional
	Negate terra.BoolValue `hcl:"negate,attr"`
	// Regions: list of string, optional
	Regions terra.ListValue[terra.StringValue] `hcl:"regions,attr"`
	// RequiredAccessLevels: list of string, optional
	RequiredAccessLevels terra.ListValue[terra.StringValue] `hcl:"required_access_levels,attr"`
	// AccessLevelsBasicConditionsDevicePolicy: optional
	DevicePolicy *AccessLevelsBasicConditionsDevicePolicy `hcl:"device_policy,block"`
	// AccessLevelsBasicConditionsVpcNetworkSources: min=0
	VpcNetworkSources []AccessLevelsBasicConditionsVpcNetworkSources `hcl:"vpc_network_sources,block" validate:"min=0"`
}

type AccessLevelsBasicConditionsDevicePolicy struct {
	// AllowedDeviceManagementLevels: list of string, optional
	AllowedDeviceManagementLevels terra.ListValue[terra.StringValue] `hcl:"allowed_device_management_levels,attr"`
	// AllowedEncryptionStatuses: list of string, optional
	AllowedEncryptionStatuses terra.ListValue[terra.StringValue] `hcl:"allowed_encryption_statuses,attr"`
	// RequireAdminApproval: bool, optional
	RequireAdminApproval terra.BoolValue `hcl:"require_admin_approval,attr"`
	// RequireCorpOwned: bool, optional
	RequireCorpOwned terra.BoolValue `hcl:"require_corp_owned,attr"`
	// RequireScreenLock: bool, optional
	RequireScreenLock terra.BoolValue `hcl:"require_screen_lock,attr"`
	// AccessLevelsBasic0D9E0498: min=0
	OsConstraints []AccessLevelsBasic0D9E0498 `hcl:"os_constraints,block" validate:"min=0"`
}

type AccessLevelsBasic0D9E0498 struct {
	// MinimumVersion: string, optional
	MinimumVersion terra.StringValue `hcl:"minimum_version,attr"`
	// OsType: string, required
	OsType terra.StringValue `hcl:"os_type,attr" validate:"required"`
}

type AccessLevelsBasicConditionsVpcNetworkSources struct {
	// AccessLevelsBasic2F5506A2: optional
	VpcSubnetwork *AccessLevelsBasic2F5506A2 `hcl:"vpc_subnetwork,block"`
}

type AccessLevelsBasic2F5506A2 struct {
	// Network: string, required
	Network terra.StringValue `hcl:"network,attr" validate:"required"`
	// VpcIpSubnetworks: list of string, optional
	VpcIpSubnetworks terra.ListValue[terra.StringValue] `hcl:"vpc_ip_subnetworks,attr"`
}

type AccessLevelsCustom struct {
	// AccessLevelsCustomExpr: required
	Expr *AccessLevelsCustomExpr `hcl:"expr,block" validate:"required"`
}

type AccessLevelsCustomExpr struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Expression: string, required
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Title: string, optional
	Title terra.StringValue `hcl:"title,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AccessLevelsAttributes struct {
	ref terra.Reference
}

func (al AccessLevelsAttributes) InternalRef() (terra.Reference, error) {
	return al.ref, nil
}

func (al AccessLevelsAttributes) InternalWithRef(ref terra.Reference) AccessLevelsAttributes {
	return AccessLevelsAttributes{ref: ref}
}

func (al AccessLevelsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return al.ref.InternalTokens()
}

func (al AccessLevelsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(al.ref.Append("description"))
}

func (al AccessLevelsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(al.ref.Append("name"))
}

func (al AccessLevelsAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(al.ref.Append("title"))
}

func (al AccessLevelsAttributes) Basic() terra.ListValue[AccessLevelsBasicAttributes] {
	return terra.ReferenceAsList[AccessLevelsBasicAttributes](al.ref.Append("basic"))
}

func (al AccessLevelsAttributes) Custom() terra.ListValue[AccessLevelsCustomAttributes] {
	return terra.ReferenceAsList[AccessLevelsCustomAttributes](al.ref.Append("custom"))
}

type AccessLevelsBasicAttributes struct {
	ref terra.Reference
}

func (b AccessLevelsBasicAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b AccessLevelsBasicAttributes) InternalWithRef(ref terra.Reference) AccessLevelsBasicAttributes {
	return AccessLevelsBasicAttributes{ref: ref}
}

func (b AccessLevelsBasicAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b AccessLevelsBasicAttributes) CombiningFunction() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("combining_function"))
}

func (b AccessLevelsBasicAttributes) Conditions() terra.ListValue[AccessLevelsBasicConditionsAttributes] {
	return terra.ReferenceAsList[AccessLevelsBasicConditionsAttributes](b.ref.Append("conditions"))
}

type AccessLevelsBasicConditionsAttributes struct {
	ref terra.Reference
}

func (c AccessLevelsBasicConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c AccessLevelsBasicConditionsAttributes) InternalWithRef(ref terra.Reference) AccessLevelsBasicConditionsAttributes {
	return AccessLevelsBasicConditionsAttributes{ref: ref}
}

func (c AccessLevelsBasicConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c AccessLevelsBasicConditionsAttributes) IpSubnetworks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("ip_subnetworks"))
}

func (c AccessLevelsBasicConditionsAttributes) Members() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("members"))
}

func (c AccessLevelsBasicConditionsAttributes) Negate() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("negate"))
}

func (c AccessLevelsBasicConditionsAttributes) Regions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("regions"))
}

func (c AccessLevelsBasicConditionsAttributes) RequiredAccessLevels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("required_access_levels"))
}

func (c AccessLevelsBasicConditionsAttributes) DevicePolicy() terra.ListValue[AccessLevelsBasicConditionsDevicePolicyAttributes] {
	return terra.ReferenceAsList[AccessLevelsBasicConditionsDevicePolicyAttributes](c.ref.Append("device_policy"))
}

func (c AccessLevelsBasicConditionsAttributes) VpcNetworkSources() terra.ListValue[AccessLevelsBasicConditionsVpcNetworkSourcesAttributes] {
	return terra.ReferenceAsList[AccessLevelsBasicConditionsVpcNetworkSourcesAttributes](c.ref.Append("vpc_network_sources"))
}

type AccessLevelsBasicConditionsDevicePolicyAttributes struct {
	ref terra.Reference
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) InternalRef() (terra.Reference, error) {
	return dp.ref, nil
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) InternalWithRef(ref terra.Reference) AccessLevelsBasicConditionsDevicePolicyAttributes {
	return AccessLevelsBasicConditionsDevicePolicyAttributes{ref: ref}
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dp.ref.InternalTokens()
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) AllowedDeviceManagementLevels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dp.ref.Append("allowed_device_management_levels"))
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) AllowedEncryptionStatuses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dp.ref.Append("allowed_encryption_statuses"))
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) RequireAdminApproval() terra.BoolValue {
	return terra.ReferenceAsBool(dp.ref.Append("require_admin_approval"))
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) RequireCorpOwned() terra.BoolValue {
	return terra.ReferenceAsBool(dp.ref.Append("require_corp_owned"))
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) RequireScreenLock() terra.BoolValue {
	return terra.ReferenceAsBool(dp.ref.Append("require_screen_lock"))
}

func (dp AccessLevelsBasicConditionsDevicePolicyAttributes) OsConstraints() terra.ListValue[AccessLevelsBasic0D9E0498Attributes] {
	return terra.ReferenceAsList[AccessLevelsBasic0D9E0498Attributes](dp.ref.Append("os_constraints"))
}

type AccessLevelsBasic0D9E0498Attributes struct {
	ref terra.Reference
}

func (oc AccessLevelsBasic0D9E0498Attributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc AccessLevelsBasic0D9E0498Attributes) InternalWithRef(ref terra.Reference) AccessLevelsBasic0D9E0498Attributes {
	return AccessLevelsBasic0D9E0498Attributes{ref: ref}
}

func (oc AccessLevelsBasic0D9E0498Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc AccessLevelsBasic0D9E0498Attributes) MinimumVersion() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("minimum_version"))
}

func (oc AccessLevelsBasic0D9E0498Attributes) OsType() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("os_type"))
}

type AccessLevelsBasicConditionsVpcNetworkSourcesAttributes struct {
	ref terra.Reference
}

func (vns AccessLevelsBasicConditionsVpcNetworkSourcesAttributes) InternalRef() (terra.Reference, error) {
	return vns.ref, nil
}

func (vns AccessLevelsBasicConditionsVpcNetworkSourcesAttributes) InternalWithRef(ref terra.Reference) AccessLevelsBasicConditionsVpcNetworkSourcesAttributes {
	return AccessLevelsBasicConditionsVpcNetworkSourcesAttributes{ref: ref}
}

func (vns AccessLevelsBasicConditionsVpcNetworkSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vns.ref.InternalTokens()
}

func (vns AccessLevelsBasicConditionsVpcNetworkSourcesAttributes) VpcSubnetwork() terra.ListValue[AccessLevelsBasic2F5506A2Attributes] {
	return terra.ReferenceAsList[AccessLevelsBasic2F5506A2Attributes](vns.ref.Append("vpc_subnetwork"))
}

type AccessLevelsBasic2F5506A2Attributes struct {
	ref terra.Reference
}

func (vs AccessLevelsBasic2F5506A2Attributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs AccessLevelsBasic2F5506A2Attributes) InternalWithRef(ref terra.Reference) AccessLevelsBasic2F5506A2Attributes {
	return AccessLevelsBasic2F5506A2Attributes{ref: ref}
}

func (vs AccessLevelsBasic2F5506A2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs AccessLevelsBasic2F5506A2Attributes) Network() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("network"))
}

func (vs AccessLevelsBasic2F5506A2Attributes) VpcIpSubnetworks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vs.ref.Append("vpc_ip_subnetworks"))
}

type AccessLevelsCustomAttributes struct {
	ref terra.Reference
}

func (c AccessLevelsCustomAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c AccessLevelsCustomAttributes) InternalWithRef(ref terra.Reference) AccessLevelsCustomAttributes {
	return AccessLevelsCustomAttributes{ref: ref}
}

func (c AccessLevelsCustomAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c AccessLevelsCustomAttributes) Expr() terra.ListValue[AccessLevelsCustomExprAttributes] {
	return terra.ReferenceAsList[AccessLevelsCustomExprAttributes](c.ref.Append("expr"))
}

type AccessLevelsCustomExprAttributes struct {
	ref terra.Reference
}

func (e AccessLevelsCustomExprAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e AccessLevelsCustomExprAttributes) InternalWithRef(ref terra.Reference) AccessLevelsCustomExprAttributes {
	return AccessLevelsCustomExprAttributes{ref: ref}
}

func (e AccessLevelsCustomExprAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e AccessLevelsCustomExprAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e AccessLevelsCustomExprAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("expression"))
}

func (e AccessLevelsCustomExprAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("location"))
}

func (e AccessLevelsCustomExprAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("title"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AccessLevelsState struct {
	Description string                    `json:"description"`
	Name        string                    `json:"name"`
	Title       string                    `json:"title"`
	Basic       []AccessLevelsBasicState  `json:"basic"`
	Custom      []AccessLevelsCustomState `json:"custom"`
}

type AccessLevelsBasicState struct {
	CombiningFunction string                             `json:"combining_function"`
	Conditions        []AccessLevelsBasicConditionsState `json:"conditions"`
}

type AccessLevelsBasicConditionsState struct {
	IpSubnetworks        []string                                            `json:"ip_subnetworks"`
	Members              []string                                            `json:"members"`
	Negate               bool                                                `json:"negate"`
	Regions              []string                                            `json:"regions"`
	RequiredAccessLevels []string                                            `json:"required_access_levels"`
	DevicePolicy         []AccessLevelsBasicConditionsDevicePolicyState      `json:"device_policy"`
	VpcNetworkSources    []AccessLevelsBasicConditionsVpcNetworkSourcesState `json:"vpc_network_sources"`
}

type AccessLevelsBasicConditionsDevicePolicyState struct {
	AllowedDeviceManagementLevels []string                         `json:"allowed_device_management_levels"`
	AllowedEncryptionStatuses     []string                         `json:"allowed_encryption_statuses"`
	RequireAdminApproval          bool                             `json:"require_admin_approval"`
	RequireCorpOwned              bool                             `json:"require_corp_owned"`
	RequireScreenLock             bool                             `json:"require_screen_lock"`
	OsConstraints                 []AccessLevelsBasic0D9E0498State `json:"os_constraints"`
}

type AccessLevelsBasic0D9E0498State struct {
	MinimumVersion string `json:"minimum_version"`
	OsType         string `json:"os_type"`
}

type AccessLevelsBasicConditionsVpcNetworkSourcesState struct {
	VpcSubnetwork []AccessLevelsBasic2F5506A2State `json:"vpc_subnetwork"`
}

type AccessLevelsBasic2F5506A2State struct {
	Network          string   `json:"network"`
	VpcIpSubnetworks []string `json:"vpc_ip_subnetworks"`
}

type AccessLevelsCustomState struct {
	Expr []AccessLevelsCustomExprState `json:"expr"`
}

type AccessLevelsCustomExprState struct {
	Description string `json:"description"`
	Expression  string `json:"expression"`
	Location    string `json:"location"`
	Title       string `json:"title"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
