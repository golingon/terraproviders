// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_spanner_instance

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_spanner_instance.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gsi *DataSource) DataSource() string {
	return "google_spanner_instance"
}

// LocalName returns the local name for [DataSource].
func (gsi *DataSource) LocalName() string {
	return gsi.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gsi *DataSource) Configuration() interface{} {
	return gsi.Args
}

// Attributes returns the attributes for [DataSource].
func (gsi *DataSource) Attributes() dataGoogleSpannerInstanceAttributes {
	return dataGoogleSpannerInstanceAttributes{ref: terra.ReferenceDataSource(gsi)}
}

// DataArgs contains the configurations for google_spanner_instance.
type DataArgs struct {
	// Config: string, optional
	Config terra.StringValue `hcl:"config,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleSpannerInstanceAttributes struct {
	ref terra.Reference
}

// Config returns a reference to field config of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) Config() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("config"))
}

// DisplayName returns a reference to field display_name of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("display_name"))
}

// EffectiveLabels returns a reference to field effective_labels of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gsi.ref.Append("effective_labels"))
}

// ForceDestroy returns a reference to field force_destroy of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) ForceDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(gsi.ref.Append("force_destroy"))
}

// Id returns a reference to field id of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("id"))
}

// Labels returns a reference to field labels of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gsi.ref.Append("labels"))
}

// Name returns a reference to field name of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("name"))
}

// NumNodes returns a reference to field num_nodes of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) NumNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(gsi.ref.Append("num_nodes"))
}

// ProcessingUnits returns a reference to field processing_units of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) ProcessingUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(gsi.ref.Append("processing_units"))
}

// Project returns a reference to field project of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("project"))
}

// State returns a reference to field state of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("state"))
}

// TerraformLabels returns a reference to field terraform_labels of google_spanner_instance.
func (gsi dataGoogleSpannerInstanceAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gsi.ref.Append("terraform_labels"))
}

func (gsi dataGoogleSpannerInstanceAttributes) AutoscalingConfig() terra.ListValue[DataAutoscalingConfigAttributes] {
	return terra.ReferenceAsList[DataAutoscalingConfigAttributes](gsi.ref.Append("autoscaling_config"))
}
