// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_iam_access_boundary_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_iam_access_boundary_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleIamAccessBoundaryPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (giabp *Resource) Type() string {
	return "google_iam_access_boundary_policy"
}

// LocalName returns the local name for [Resource].
func (giabp *Resource) LocalName() string {
	return giabp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (giabp *Resource) Configuration() interface{} {
	return giabp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (giabp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(giabp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (giabp *Resource) Dependencies() terra.Dependencies {
	return giabp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (giabp *Resource) LifecycleManagement() *terra.Lifecycle {
	return giabp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (giabp *Resource) Attributes() googleIamAccessBoundaryPolicyAttributes {
	return googleIamAccessBoundaryPolicyAttributes{ref: terra.ReferenceResource(giabp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (giabp *Resource) ImportState(state io.Reader) error {
	giabp.state = &googleIamAccessBoundaryPolicyState{}
	if err := json.NewDecoder(state).Decode(giabp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", giabp.Type(), giabp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (giabp *Resource) State() (*googleIamAccessBoundaryPolicyState, bool) {
	return giabp.state, giabp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (giabp *Resource) StateMust() *googleIamAccessBoundaryPolicyState {
	if giabp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", giabp.Type(), giabp.LocalName()))
	}
	return giabp.state
}

// Args contains the configurations for google_iam_access_boundary_policy.
type Args struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Rules: min=1
	Rules []Rules `hcl:"rules,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleIamAccessBoundaryPolicyAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of google_iam_access_boundary_policy.
func (giabp googleIamAccessBoundaryPolicyAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(giabp.ref.Append("display_name"))
}

// Etag returns a reference to field etag of google_iam_access_boundary_policy.
func (giabp googleIamAccessBoundaryPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(giabp.ref.Append("etag"))
}

// Id returns a reference to field id of google_iam_access_boundary_policy.
func (giabp googleIamAccessBoundaryPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(giabp.ref.Append("id"))
}

// Name returns a reference to field name of google_iam_access_boundary_policy.
func (giabp googleIamAccessBoundaryPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(giabp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_iam_access_boundary_policy.
func (giabp googleIamAccessBoundaryPolicyAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(giabp.ref.Append("parent"))
}

func (giabp googleIamAccessBoundaryPolicyAttributes) Rules() terra.ListValue[RulesAttributes] {
	return terra.ReferenceAsList[RulesAttributes](giabp.ref.Append("rules"))
}

func (giabp googleIamAccessBoundaryPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](giabp.ref.Append("timeouts"))
}

type googleIamAccessBoundaryPolicyState struct {
	DisplayName string         `json:"display_name"`
	Etag        string         `json:"etag"`
	Id          string         `json:"id"`
	Name        string         `json:"name"`
	Parent      string         `json:"parent"`
	Rules       []RulesState   `json:"rules"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
