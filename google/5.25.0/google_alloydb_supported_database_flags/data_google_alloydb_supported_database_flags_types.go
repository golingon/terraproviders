// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_alloydb_supported_database_flags

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataSupportedDatabaseFlagsAttributes struct {
	ref terra.Reference
}

func (sdf DataSupportedDatabaseFlagsAttributes) InternalRef() (terra.Reference, error) {
	return sdf.ref, nil
}

func (sdf DataSupportedDatabaseFlagsAttributes) InternalWithRef(ref terra.Reference) DataSupportedDatabaseFlagsAttributes {
	return DataSupportedDatabaseFlagsAttributes{ref: ref}
}

func (sdf DataSupportedDatabaseFlagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sdf.ref.InternalTokens()
}

func (sdf DataSupportedDatabaseFlagsAttributes) AcceptsMultipleValues() terra.BoolValue {
	return terra.ReferenceAsBool(sdf.ref.Append("accepts_multiple_values"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) FlagName() terra.StringValue {
	return terra.ReferenceAsString(sdf.ref.Append("flag_name"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sdf.ref.Append("name"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) RequiresDbRestart() terra.BoolValue {
	return terra.ReferenceAsBool(sdf.ref.Append("requires_db_restart"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) SupportedDbVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sdf.ref.Append("supported_db_versions"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) ValueType() terra.StringValue {
	return terra.ReferenceAsString(sdf.ref.Append("value_type"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) IntegerRestrictions() terra.ListValue[DataSupportedDatabaseFlagsIntegerRestrictionsAttributes] {
	return terra.ReferenceAsList[DataSupportedDatabaseFlagsIntegerRestrictionsAttributes](sdf.ref.Append("integer_restrictions"))
}

func (sdf DataSupportedDatabaseFlagsAttributes) StringRestrictions() terra.ListValue[DataSupportedDatabaseFlagsStringRestrictionsAttributes] {
	return terra.ReferenceAsList[DataSupportedDatabaseFlagsStringRestrictionsAttributes](sdf.ref.Append("string_restrictions"))
}

type DataSupportedDatabaseFlagsIntegerRestrictionsAttributes struct {
	ref terra.Reference
}

func (ir DataSupportedDatabaseFlagsIntegerRestrictionsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir DataSupportedDatabaseFlagsIntegerRestrictionsAttributes) InternalWithRef(ref terra.Reference) DataSupportedDatabaseFlagsIntegerRestrictionsAttributes {
	return DataSupportedDatabaseFlagsIntegerRestrictionsAttributes{ref: ref}
}

func (ir DataSupportedDatabaseFlagsIntegerRestrictionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir DataSupportedDatabaseFlagsIntegerRestrictionsAttributes) MaxValue() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("max_value"))
}

func (ir DataSupportedDatabaseFlagsIntegerRestrictionsAttributes) MinValue() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("min_value"))
}

type DataSupportedDatabaseFlagsStringRestrictionsAttributes struct {
	ref terra.Reference
}

func (sr DataSupportedDatabaseFlagsStringRestrictionsAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr DataSupportedDatabaseFlagsStringRestrictionsAttributes) InternalWithRef(ref terra.Reference) DataSupportedDatabaseFlagsStringRestrictionsAttributes {
	return DataSupportedDatabaseFlagsStringRestrictionsAttributes{ref: ref}
}

func (sr DataSupportedDatabaseFlagsStringRestrictionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr DataSupportedDatabaseFlagsStringRestrictionsAttributes) AllowedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sr.ref.Append("allowed_values"))
}

type DataSupportedDatabaseFlagsState struct {
	AcceptsMultipleValues bool                                                 `json:"accepts_multiple_values"`
	FlagName              string                                               `json:"flag_name"`
	Name                  string                                               `json:"name"`
	RequiresDbRestart     bool                                                 `json:"requires_db_restart"`
	SupportedDbVersions   []string                                             `json:"supported_db_versions"`
	ValueType             string                                               `json:"value_type"`
	IntegerRestrictions   []DataSupportedDatabaseFlagsIntegerRestrictionsState `json:"integer_restrictions"`
	StringRestrictions    []DataSupportedDatabaseFlagsStringRestrictionsState  `json:"string_restrictions"`
}

type DataSupportedDatabaseFlagsIntegerRestrictionsState struct {
	MaxValue string `json:"max_value"`
	MinValue string `json:"min_value"`
}

type DataSupportedDatabaseFlagsStringRestrictionsState struct {
	AllowedValues []string `json:"allowed_values"`
}
