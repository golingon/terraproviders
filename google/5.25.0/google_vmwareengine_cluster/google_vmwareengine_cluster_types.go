// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_vmwareengine_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type NodeTypeConfigs struct {
	// CustomCoreCount: number, optional
	CustomCoreCount terra.NumberValue `hcl:"custom_core_count,attr"`
	// NodeCount: number, required
	NodeCount terra.NumberValue `hcl:"node_count,attr" validate:"required"`
	// NodeTypeId: string, required
	NodeTypeId terra.StringValue `hcl:"node_type_id,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type NodeTypeConfigsAttributes struct {
	ref terra.Reference
}

func (ntc NodeTypeConfigsAttributes) InternalRef() (terra.Reference, error) {
	return ntc.ref, nil
}

func (ntc NodeTypeConfigsAttributes) InternalWithRef(ref terra.Reference) NodeTypeConfigsAttributes {
	return NodeTypeConfigsAttributes{ref: ref}
}

func (ntc NodeTypeConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ntc.ref.InternalTokens()
}

func (ntc NodeTypeConfigsAttributes) CustomCoreCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ntc.ref.Append("custom_core_count"))
}

func (ntc NodeTypeConfigsAttributes) NodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ntc.ref.Append("node_count"))
}

func (ntc NodeTypeConfigsAttributes) NodeTypeId() terra.StringValue {
	return terra.ReferenceAsString(ntc.ref.Append("node_type_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type NodeTypeConfigsState struct {
	CustomCoreCount float64 `json:"custom_core_count"`
	NodeCount       float64 `json:"node_count"`
	NodeTypeId      string  `json:"node_type_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
