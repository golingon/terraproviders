// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_project_organization_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataBooleanPolicyAttributes struct {
	ref terra.Reference
}

func (bp DataBooleanPolicyAttributes) InternalRef() (terra.Reference, error) {
	return bp.ref, nil
}

func (bp DataBooleanPolicyAttributes) InternalWithRef(ref terra.Reference) DataBooleanPolicyAttributes {
	return DataBooleanPolicyAttributes{ref: ref}
}

func (bp DataBooleanPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bp.ref.InternalTokens()
}

func (bp DataBooleanPolicyAttributes) Enforced() terra.BoolValue {
	return terra.ReferenceAsBool(bp.ref.Append("enforced"))
}

type DataListPolicyAttributes struct {
	ref terra.Reference
}

func (lp DataListPolicyAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp DataListPolicyAttributes) InternalWithRef(ref terra.Reference) DataListPolicyAttributes {
	return DataListPolicyAttributes{ref: ref}
}

func (lp DataListPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp DataListPolicyAttributes) InheritFromParent() terra.BoolValue {
	return terra.ReferenceAsBool(lp.ref.Append("inherit_from_parent"))
}

func (lp DataListPolicyAttributes) SuggestedValue() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("suggested_value"))
}

func (lp DataListPolicyAttributes) Allow() terra.ListValue[DataListPolicyAllowAttributes] {
	return terra.ReferenceAsList[DataListPolicyAllowAttributes](lp.ref.Append("allow"))
}

func (lp DataListPolicyAttributes) Deny() terra.ListValue[DataListPolicyDenyAttributes] {
	return terra.ReferenceAsList[DataListPolicyDenyAttributes](lp.ref.Append("deny"))
}

type DataListPolicyAllowAttributes struct {
	ref terra.Reference
}

func (a DataListPolicyAllowAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataListPolicyAllowAttributes) InternalWithRef(ref terra.Reference) DataListPolicyAllowAttributes {
	return DataListPolicyAllowAttributes{ref: ref}
}

func (a DataListPolicyAllowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataListPolicyAllowAttributes) All() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("all"))
}

func (a DataListPolicyAllowAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("values"))
}

type DataListPolicyDenyAttributes struct {
	ref terra.Reference
}

func (d DataListPolicyDenyAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataListPolicyDenyAttributes) InternalWithRef(ref terra.Reference) DataListPolicyDenyAttributes {
	return DataListPolicyDenyAttributes{ref: ref}
}

func (d DataListPolicyDenyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataListPolicyDenyAttributes) All() terra.BoolValue {
	return terra.ReferenceAsBool(d.ref.Append("all"))
}

func (d DataListPolicyDenyAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](d.ref.Append("values"))
}

type DataRestorePolicyAttributes struct {
	ref terra.Reference
}

func (rp DataRestorePolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp DataRestorePolicyAttributes) InternalWithRef(ref terra.Reference) DataRestorePolicyAttributes {
	return DataRestorePolicyAttributes{ref: ref}
}

func (rp DataRestorePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp DataRestorePolicyAttributes) Default() terra.BoolValue {
	return terra.ReferenceAsBool(rp.ref.Append("default"))
}

type DataBooleanPolicyState struct {
	Enforced bool `json:"enforced"`
}

type DataListPolicyState struct {
	InheritFromParent bool                       `json:"inherit_from_parent"`
	SuggestedValue    string                     `json:"suggested_value"`
	Allow             []DataListPolicyAllowState `json:"allow"`
	Deny              []DataListPolicyDenyState  `json:"deny"`
}

type DataListPolicyAllowState struct {
	All    bool     `json:"all"`
	Values []string `json:"values"`
}

type DataListPolicyDenyState struct {
	All    bool     `json:"all"`
	Values []string `json:"values"`
}

type DataRestorePolicyState struct {
	Default bool `json:"default"`
}
