// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_service_attachment

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ConsumerAcceptLists struct {
	// ConnectionLimit: number, required
	ConnectionLimit terra.NumberValue `hcl:"connection_limit,attr" validate:"required"`
	// NetworkUrl: string, optional
	NetworkUrl terra.StringValue `hcl:"network_url,attr"`
	// ProjectIdOrNum: string, optional
	ProjectIdOrNum terra.StringValue `hcl:"project_id_or_num,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ConnectedEndpointsAttributes struct {
	ref terra.Reference
}

func (ce ConnectedEndpointsAttributes) InternalRef() (terra.Reference, error) {
	return ce.ref, nil
}

func (ce ConnectedEndpointsAttributes) InternalWithRef(ref terra.Reference) ConnectedEndpointsAttributes {
	return ConnectedEndpointsAttributes{ref: ref}
}

func (ce ConnectedEndpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ce.ref.InternalTokens()
}

func (ce ConnectedEndpointsAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("endpoint"))
}

func (ce ConnectedEndpointsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("status"))
}

type ConsumerAcceptListsAttributes struct {
	ref terra.Reference
}

func (cal ConsumerAcceptListsAttributes) InternalRef() (terra.Reference, error) {
	return cal.ref, nil
}

func (cal ConsumerAcceptListsAttributes) InternalWithRef(ref terra.Reference) ConsumerAcceptListsAttributes {
	return ConsumerAcceptListsAttributes{ref: ref}
}

func (cal ConsumerAcceptListsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cal.ref.InternalTokens()
}

func (cal ConsumerAcceptListsAttributes) ConnectionLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(cal.ref.Append("connection_limit"))
}

func (cal ConsumerAcceptListsAttributes) NetworkUrl() terra.StringValue {
	return terra.ReferenceAsString(cal.ref.Append("network_url"))
}

func (cal ConsumerAcceptListsAttributes) ProjectIdOrNum() terra.StringValue {
	return terra.ReferenceAsString(cal.ref.Append("project_id_or_num"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ConnectedEndpointsState struct {
	Endpoint string `json:"endpoint"`
	Status   string `json:"status"`
}

type ConsumerAcceptListsState struct {
	ConnectionLimit float64 `json:"connection_limit"`
	NetworkUrl      string  `json:"network_url"`
	ProjectIdOrNum  string  `json:"project_id_or_num"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
