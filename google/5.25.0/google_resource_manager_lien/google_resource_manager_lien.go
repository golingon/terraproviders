// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_resource_manager_lien

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_resource_manager_lien.
type Resource struct {
	Name      string
	Args      Args
	state     *googleResourceManagerLienState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (grml *Resource) Type() string {
	return "google_resource_manager_lien"
}

// LocalName returns the local name for [Resource].
func (grml *Resource) LocalName() string {
	return grml.Name
}

// Configuration returns the configuration (args) for [Resource].
func (grml *Resource) Configuration() interface{} {
	return grml.Args
}

// DependOn is used for other resources to depend on [Resource].
func (grml *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(grml)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (grml *Resource) Dependencies() terra.Dependencies {
	return grml.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (grml *Resource) LifecycleManagement() *terra.Lifecycle {
	return grml.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (grml *Resource) Attributes() googleResourceManagerLienAttributes {
	return googleResourceManagerLienAttributes{ref: terra.ReferenceResource(grml)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (grml *Resource) ImportState(state io.Reader) error {
	grml.state = &googleResourceManagerLienState{}
	if err := json.NewDecoder(state).Decode(grml.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", grml.Type(), grml.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (grml *Resource) State() (*googleResourceManagerLienState, bool) {
	return grml.state, grml.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (grml *Resource) StateMust() *googleResourceManagerLienState {
	if grml.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", grml.Type(), grml.LocalName()))
	}
	return grml.state
}

// Args contains the configurations for google_resource_manager_lien.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Origin: string, required
	Origin terra.StringValue `hcl:"origin,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Reason: string, required
	Reason terra.StringValue `hcl:"reason,attr" validate:"required"`
	// Restrictions: list of string, required
	Restrictions terra.ListValue[terra.StringValue] `hcl:"restrictions,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleResourceManagerLienAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(grml.ref.Append("create_time"))
}

// Id returns a reference to field id of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(grml.ref.Append("id"))
}

// Name returns a reference to field name of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(grml.ref.Append("name"))
}

// Origin returns a reference to field origin of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(grml.ref.Append("origin"))
}

// Parent returns a reference to field parent of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(grml.ref.Append("parent"))
}

// Reason returns a reference to field reason of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(grml.ref.Append("reason"))
}

// Restrictions returns a reference to field restrictions of google_resource_manager_lien.
func (grml googleResourceManagerLienAttributes) Restrictions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](grml.ref.Append("restrictions"))
}

func (grml googleResourceManagerLienAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](grml.ref.Append("timeouts"))
}

type googleResourceManagerLienState struct {
	CreateTime   string         `json:"create_time"`
	Id           string         `json:"id"`
	Name         string         `json:"name"`
	Origin       string         `json:"origin"`
	Parent       string         `json:"parent"`
	Reason       string         `json:"reason"`
	Restrictions []string       `json:"restrictions"`
	Timeouts     *TimeoutsState `json:"timeouts"`
}
