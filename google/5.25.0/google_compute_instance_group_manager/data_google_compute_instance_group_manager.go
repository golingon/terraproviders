// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_instance_group_manager

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_instance_group_manager.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcigm *DataSource) DataSource() string {
	return "google_compute_instance_group_manager"
}

// LocalName returns the local name for [DataSource].
func (gcigm *DataSource) LocalName() string {
	return gcigm.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcigm *DataSource) Configuration() interface{} {
	return gcigm.Args
}

// Attributes returns the attributes for [DataSource].
func (gcigm *DataSource) Attributes() dataGoogleComputeInstanceGroupManagerAttributes {
	return dataGoogleComputeInstanceGroupManagerAttributes{ref: terra.ReferenceDataSource(gcigm)}
}

// DataArgs contains the configurations for google_compute_instance_group_manager.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SelfLink: string, optional
	SelfLink terra.StringValue `hcl:"self_link,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
}

type dataGoogleComputeInstanceGroupManagerAttributes struct {
	ref terra.Reference
}

// BaseInstanceName returns a reference to field base_instance_name of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) BaseInstanceName() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("base_instance_name"))
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("description"))
}

// Fingerprint returns a reference to field fingerprint of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("fingerprint"))
}

// Id returns a reference to field id of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("id"))
}

// InstanceGroup returns a reference to field instance_group of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) InstanceGroup() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("instance_group"))
}

// ListManagedInstancesResults returns a reference to field list_managed_instances_results of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) ListManagedInstancesResults() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("list_managed_instances_results"))
}

// Name returns a reference to field name of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("name"))
}

// Operation returns a reference to field operation of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Operation() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("operation"))
}

// Project returns a reference to field project of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("project"))
}

// SelfLink returns a reference to field self_link of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("self_link"))
}

// TargetPools returns a reference to field target_pools of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) TargetPools() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gcigm.ref.Append("target_pools"))
}

// TargetSize returns a reference to field target_size of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) TargetSize() terra.NumberValue {
	return terra.ReferenceAsNumber(gcigm.ref.Append("target_size"))
}

// WaitForInstances returns a reference to field wait_for_instances of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) WaitForInstances() terra.BoolValue {
	return terra.ReferenceAsBool(gcigm.ref.Append("wait_for_instances"))
}

// WaitForInstancesStatus returns a reference to field wait_for_instances_status of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) WaitForInstancesStatus() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("wait_for_instances_status"))
}

// Zone returns a reference to field zone of google_compute_instance_group_manager.
func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(gcigm.ref.Append("zone"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) AllInstancesConfig() terra.ListValue[DataAllInstancesConfigAttributes] {
	return terra.ReferenceAsList[DataAllInstancesConfigAttributes](gcigm.ref.Append("all_instances_config"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) AutoHealingPolicies() terra.ListValue[DataAutoHealingPoliciesAttributes] {
	return terra.ReferenceAsList[DataAutoHealingPoliciesAttributes](gcigm.ref.Append("auto_healing_policies"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) InstanceLifecyclePolicy() terra.ListValue[DataInstanceLifecyclePolicyAttributes] {
	return terra.ReferenceAsList[DataInstanceLifecyclePolicyAttributes](gcigm.ref.Append("instance_lifecycle_policy"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) NamedPort() terra.SetValue[DataNamedPortAttributes] {
	return terra.ReferenceAsSet[DataNamedPortAttributes](gcigm.ref.Append("named_port"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) StatefulDisk() terra.SetValue[DataStatefulDiskAttributes] {
	return terra.ReferenceAsSet[DataStatefulDiskAttributes](gcigm.ref.Append("stateful_disk"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) StatefulExternalIp() terra.ListValue[DataStatefulExternalIpAttributes] {
	return terra.ReferenceAsList[DataStatefulExternalIpAttributes](gcigm.ref.Append("stateful_external_ip"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) StatefulInternalIp() terra.ListValue[DataStatefulInternalIpAttributes] {
	return terra.ReferenceAsList[DataStatefulInternalIpAttributes](gcigm.ref.Append("stateful_internal_ip"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Status() terra.ListValue[DataStatusAttributes] {
	return terra.ReferenceAsList[DataStatusAttributes](gcigm.ref.Append("status"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) UpdatePolicy() terra.ListValue[DataUpdatePolicyAttributes] {
	return terra.ReferenceAsList[DataUpdatePolicyAttributes](gcigm.ref.Append("update_policy"))
}

func (gcigm dataGoogleComputeInstanceGroupManagerAttributes) Version() terra.ListValue[DataVersionAttributes] {
	return terra.ReferenceAsList[DataVersionAttributes](gcigm.ref.Append("version"))
}
