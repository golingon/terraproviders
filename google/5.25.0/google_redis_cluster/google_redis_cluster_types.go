// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_redis_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PscConfigs struct {
	// Network: string, required
	Network terra.StringValue `hcl:"network,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type DiscoveryEndpointsAttributes struct {
	ref terra.Reference
}

func (de DiscoveryEndpointsAttributes) InternalRef() (terra.Reference, error) {
	return de.ref, nil
}

func (de DiscoveryEndpointsAttributes) InternalWithRef(ref terra.Reference) DiscoveryEndpointsAttributes {
	return DiscoveryEndpointsAttributes{ref: ref}
}

func (de DiscoveryEndpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return de.ref.InternalTokens()
}

func (de DiscoveryEndpointsAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(de.ref.Append("address"))
}

func (de DiscoveryEndpointsAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(de.ref.Append("port"))
}

func (de DiscoveryEndpointsAttributes) PscConfig() terra.ListValue[DiscoveryEndpointsPscConfigAttributes] {
	return terra.ReferenceAsList[DiscoveryEndpointsPscConfigAttributes](de.ref.Append("psc_config"))
}

type DiscoveryEndpointsPscConfigAttributes struct {
	ref terra.Reference
}

func (pc DiscoveryEndpointsPscConfigAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc DiscoveryEndpointsPscConfigAttributes) InternalWithRef(ref terra.Reference) DiscoveryEndpointsPscConfigAttributes {
	return DiscoveryEndpointsPscConfigAttributes{ref: ref}
}

func (pc DiscoveryEndpointsPscConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc DiscoveryEndpointsPscConfigAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("network"))
}

type PscConnectionsAttributes struct {
	ref terra.Reference
}

func (pc PscConnectionsAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc PscConnectionsAttributes) InternalWithRef(ref terra.Reference) PscConnectionsAttributes {
	return PscConnectionsAttributes{ref: ref}
}

func (pc PscConnectionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc PscConnectionsAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("address"))
}

func (pc PscConnectionsAttributes) ForwardingRule() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("forwarding_rule"))
}

func (pc PscConnectionsAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("network"))
}

func (pc PscConnectionsAttributes) ProjectId() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("project_id"))
}

func (pc PscConnectionsAttributes) PscConnectionId() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("psc_connection_id"))
}

type StateInfoAttributes struct {
	ref terra.Reference
}

func (si StateInfoAttributes) InternalRef() (terra.Reference, error) {
	return si.ref, nil
}

func (si StateInfoAttributes) InternalWithRef(ref terra.Reference) StateInfoAttributes {
	return StateInfoAttributes{ref: ref}
}

func (si StateInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return si.ref.InternalTokens()
}

func (si StateInfoAttributes) UpdateInfo() terra.ListValue[StateInfoUpdateInfoAttributes] {
	return terra.ReferenceAsList[StateInfoUpdateInfoAttributes](si.ref.Append("update_info"))
}

type StateInfoUpdateInfoAttributes struct {
	ref terra.Reference
}

func (ui StateInfoUpdateInfoAttributes) InternalRef() (terra.Reference, error) {
	return ui.ref, nil
}

func (ui StateInfoUpdateInfoAttributes) InternalWithRef(ref terra.Reference) StateInfoUpdateInfoAttributes {
	return StateInfoUpdateInfoAttributes{ref: ref}
}

func (ui StateInfoUpdateInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ui.ref.InternalTokens()
}

func (ui StateInfoUpdateInfoAttributes) TargetReplicaCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ui.ref.Append("target_replica_count"))
}

func (ui StateInfoUpdateInfoAttributes) TargetShardCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ui.ref.Append("target_shard_count"))
}

type PscConfigsAttributes struct {
	ref terra.Reference
}

func (pc PscConfigsAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc PscConfigsAttributes) InternalWithRef(ref terra.Reference) PscConfigsAttributes {
	return PscConfigsAttributes{ref: ref}
}

func (pc PscConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc PscConfigsAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("network"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DiscoveryEndpointsState struct {
	Address   string                             `json:"address"`
	Port      float64                            `json:"port"`
	PscConfig []DiscoveryEndpointsPscConfigState `json:"psc_config"`
}

type DiscoveryEndpointsPscConfigState struct {
	Network string `json:"network"`
}

type PscConnectionsState struct {
	Address         string `json:"address"`
	ForwardingRule  string `json:"forwarding_rule"`
	Network         string `json:"network"`
	ProjectId       string `json:"project_id"`
	PscConnectionId string `json:"psc_connection_id"`
}

type StateInfoState struct {
	UpdateInfo []StateInfoUpdateInfoState `json:"update_info"`
}

type StateInfoUpdateInfoState struct {
	TargetReplicaCount float64 `json:"target_replica_count"`
	TargetShardCount   float64 `json:"target_shard_count"`
}

type PscConfigsState struct {
	Network string `json:"network"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
