// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_discovery_engine_chat_engine

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ChatEngineConfig struct {
	// ChatEngineConfigAgentCreationConfig: required
	AgentCreationConfig *ChatEngineConfigAgentCreationConfig `hcl:"agent_creation_config,block" validate:"required"`
}

type ChatEngineConfigAgentCreationConfig struct {
	// Business: string, optional
	Business terra.StringValue `hcl:"business,attr"`
	// DefaultLanguageCode: string, required
	DefaultLanguageCode terra.StringValue `hcl:"default_language_code,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// TimeZone: string, required
	TimeZone terra.StringValue `hcl:"time_zone,attr" validate:"required"`
}

type CommonConfig struct {
	// CompanyName: string, optional
	CompanyName terra.StringValue `hcl:"company_name,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ChatEngineMetadataAttributes struct {
	ref terra.Reference
}

func (cem ChatEngineMetadataAttributes) InternalRef() (terra.Reference, error) {
	return cem.ref, nil
}

func (cem ChatEngineMetadataAttributes) InternalWithRef(ref terra.Reference) ChatEngineMetadataAttributes {
	return ChatEngineMetadataAttributes{ref: ref}
}

func (cem ChatEngineMetadataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cem.ref.InternalTokens()
}

func (cem ChatEngineMetadataAttributes) DialogflowAgent() terra.StringValue {
	return terra.ReferenceAsString(cem.ref.Append("dialogflow_agent"))
}

type ChatEngineConfigAttributes struct {
	ref terra.Reference
}

func (cec ChatEngineConfigAttributes) InternalRef() (terra.Reference, error) {
	return cec.ref, nil
}

func (cec ChatEngineConfigAttributes) InternalWithRef(ref terra.Reference) ChatEngineConfigAttributes {
	return ChatEngineConfigAttributes{ref: ref}
}

func (cec ChatEngineConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cec.ref.InternalTokens()
}

func (cec ChatEngineConfigAttributes) AgentCreationConfig() terra.ListValue[ChatEngineConfigAgentCreationConfigAttributes] {
	return terra.ReferenceAsList[ChatEngineConfigAgentCreationConfigAttributes](cec.ref.Append("agent_creation_config"))
}

type ChatEngineConfigAgentCreationConfigAttributes struct {
	ref terra.Reference
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) InternalRef() (terra.Reference, error) {
	return acc.ref, nil
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) InternalWithRef(ref terra.Reference) ChatEngineConfigAgentCreationConfigAttributes {
	return ChatEngineConfigAgentCreationConfigAttributes{ref: ref}
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acc.ref.InternalTokens()
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) Business() terra.StringValue {
	return terra.ReferenceAsString(acc.ref.Append("business"))
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) DefaultLanguageCode() terra.StringValue {
	return terra.ReferenceAsString(acc.ref.Append("default_language_code"))
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(acc.ref.Append("location"))
}

func (acc ChatEngineConfigAgentCreationConfigAttributes) TimeZone() terra.StringValue {
	return terra.ReferenceAsString(acc.ref.Append("time_zone"))
}

type CommonConfigAttributes struct {
	ref terra.Reference
}

func (cc CommonConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc CommonConfigAttributes) InternalWithRef(ref terra.Reference) CommonConfigAttributes {
	return CommonConfigAttributes{ref: ref}
}

func (cc CommonConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc CommonConfigAttributes) CompanyName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("company_name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ChatEngineMetadataState struct {
	DialogflowAgent string `json:"dialogflow_agent"`
}

type ChatEngineConfigState struct {
	AgentCreationConfig []ChatEngineConfigAgentCreationConfigState `json:"agent_creation_config"`
}

type ChatEngineConfigAgentCreationConfigState struct {
	Business            string `json:"business"`
	DefaultLanguageCode string `json:"default_language_code"`
	Location            string `json:"location"`
	TimeZone            string `json:"time_zone"`
}

type CommonConfigState struct {
	CompanyName string `json:"company_name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
