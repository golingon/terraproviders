// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	serviceaccountiambinding "github.com/golingon/terraproviders/google/4.77.0/serviceaccountiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewServiceAccountIamBinding creates a new instance of [ServiceAccountIamBinding].
func NewServiceAccountIamBinding(name string, args ServiceAccountIamBindingArgs) *ServiceAccountIamBinding {
	return &ServiceAccountIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServiceAccountIamBinding)(nil)

// ServiceAccountIamBinding represents the Terraform resource google_service_account_iam_binding.
type ServiceAccountIamBinding struct {
	Name      string
	Args      ServiceAccountIamBindingArgs
	state     *serviceAccountIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ServiceAccountIamBinding].
func (saib *ServiceAccountIamBinding) Type() string {
	return "google_service_account_iam_binding"
}

// LocalName returns the local name for [ServiceAccountIamBinding].
func (saib *ServiceAccountIamBinding) LocalName() string {
	return saib.Name
}

// Configuration returns the configuration (args) for [ServiceAccountIamBinding].
func (saib *ServiceAccountIamBinding) Configuration() interface{} {
	return saib.Args
}

// DependOn is used for other resources to depend on [ServiceAccountIamBinding].
func (saib *ServiceAccountIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(saib)
}

// Dependencies returns the list of resources [ServiceAccountIamBinding] depends_on.
func (saib *ServiceAccountIamBinding) Dependencies() terra.Dependencies {
	return saib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ServiceAccountIamBinding].
func (saib *ServiceAccountIamBinding) LifecycleManagement() *terra.Lifecycle {
	return saib.Lifecycle
}

// Attributes returns the attributes for [ServiceAccountIamBinding].
func (saib *ServiceAccountIamBinding) Attributes() serviceAccountIamBindingAttributes {
	return serviceAccountIamBindingAttributes{ref: terra.ReferenceResource(saib)}
}

// ImportState imports the given attribute values into [ServiceAccountIamBinding]'s state.
func (saib *ServiceAccountIamBinding) ImportState(av io.Reader) error {
	saib.state = &serviceAccountIamBindingState{}
	if err := json.NewDecoder(av).Decode(saib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", saib.Type(), saib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ServiceAccountIamBinding] has state.
func (saib *ServiceAccountIamBinding) State() (*serviceAccountIamBindingState, bool) {
	return saib.state, saib.state != nil
}

// StateMust returns the state for [ServiceAccountIamBinding]. Panics if the state is nil.
func (saib *ServiceAccountIamBinding) StateMust() *serviceAccountIamBindingState {
	if saib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", saib.Type(), saib.LocalName()))
	}
	return saib.state
}

// ServiceAccountIamBindingArgs contains the configurations for google_service_account_iam_binding.
type ServiceAccountIamBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// ServiceAccountId: string, required
	ServiceAccountId terra.StringValue `hcl:"service_account_id,attr" validate:"required"`
	// Condition: optional
	Condition *serviceaccountiambinding.Condition `hcl:"condition,block"`
}
type serviceAccountIamBindingAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_service_account_iam_binding.
func (saib serviceAccountIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(saib.ref.Append("etag"))
}

// Id returns a reference to field id of google_service_account_iam_binding.
func (saib serviceAccountIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(saib.ref.Append("id"))
}

// Members returns a reference to field members of google_service_account_iam_binding.
func (saib serviceAccountIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](saib.ref.Append("members"))
}

// Role returns a reference to field role of google_service_account_iam_binding.
func (saib serviceAccountIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(saib.ref.Append("role"))
}

// ServiceAccountId returns a reference to field service_account_id of google_service_account_iam_binding.
func (saib serviceAccountIamBindingAttributes) ServiceAccountId() terra.StringValue {
	return terra.ReferenceAsString(saib.ref.Append("service_account_id"))
}

func (saib serviceAccountIamBindingAttributes) Condition() terra.ListValue[serviceaccountiambinding.ConditionAttributes] {
	return terra.ReferenceAsList[serviceaccountiambinding.ConditionAttributes](saib.ref.Append("condition"))
}

type serviceAccountIamBindingState struct {
	Etag             string                                    `json:"etag"`
	Id               string                                    `json:"id"`
	Members          []string                                  `json:"members"`
	Role             string                                    `json:"role"`
	ServiceAccountId string                                    `json:"service_account_id"`
	Condition        []serviceaccountiambinding.ConditionState `json:"condition"`
}
