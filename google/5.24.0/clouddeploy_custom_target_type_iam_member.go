// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	clouddeploycustomtargettypeiammember "github.com/golingon/terraproviders/google/5.24.0/clouddeploycustomtargettypeiammember"
	"io"
)

// NewClouddeployCustomTargetTypeIamMember creates a new instance of [ClouddeployCustomTargetTypeIamMember].
func NewClouddeployCustomTargetTypeIamMember(name string, args ClouddeployCustomTargetTypeIamMemberArgs) *ClouddeployCustomTargetTypeIamMember {
	return &ClouddeployCustomTargetTypeIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ClouddeployCustomTargetTypeIamMember)(nil)

// ClouddeployCustomTargetTypeIamMember represents the Terraform resource google_clouddeploy_custom_target_type_iam_member.
type ClouddeployCustomTargetTypeIamMember struct {
	Name      string
	Args      ClouddeployCustomTargetTypeIamMemberArgs
	state     *clouddeployCustomTargetTypeIamMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ClouddeployCustomTargetTypeIamMember].
func (ccttim *ClouddeployCustomTargetTypeIamMember) Type() string {
	return "google_clouddeploy_custom_target_type_iam_member"
}

// LocalName returns the local name for [ClouddeployCustomTargetTypeIamMember].
func (ccttim *ClouddeployCustomTargetTypeIamMember) LocalName() string {
	return ccttim.Name
}

// Configuration returns the configuration (args) for [ClouddeployCustomTargetTypeIamMember].
func (ccttim *ClouddeployCustomTargetTypeIamMember) Configuration() interface{} {
	return ccttim.Args
}

// DependOn is used for other resources to depend on [ClouddeployCustomTargetTypeIamMember].
func (ccttim *ClouddeployCustomTargetTypeIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(ccttim)
}

// Dependencies returns the list of resources [ClouddeployCustomTargetTypeIamMember] depends_on.
func (ccttim *ClouddeployCustomTargetTypeIamMember) Dependencies() terra.Dependencies {
	return ccttim.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ClouddeployCustomTargetTypeIamMember].
func (ccttim *ClouddeployCustomTargetTypeIamMember) LifecycleManagement() *terra.Lifecycle {
	return ccttim.Lifecycle
}

// Attributes returns the attributes for [ClouddeployCustomTargetTypeIamMember].
func (ccttim *ClouddeployCustomTargetTypeIamMember) Attributes() clouddeployCustomTargetTypeIamMemberAttributes {
	return clouddeployCustomTargetTypeIamMemberAttributes{ref: terra.ReferenceResource(ccttim)}
}

// ImportState imports the given attribute values into [ClouddeployCustomTargetTypeIamMember]'s state.
func (ccttim *ClouddeployCustomTargetTypeIamMember) ImportState(av io.Reader) error {
	ccttim.state = &clouddeployCustomTargetTypeIamMemberState{}
	if err := json.NewDecoder(av).Decode(ccttim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ccttim.Type(), ccttim.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ClouddeployCustomTargetTypeIamMember] has state.
func (ccttim *ClouddeployCustomTargetTypeIamMember) State() (*clouddeployCustomTargetTypeIamMemberState, bool) {
	return ccttim.state, ccttim.state != nil
}

// StateMust returns the state for [ClouddeployCustomTargetTypeIamMember]. Panics if the state is nil.
func (ccttim *ClouddeployCustomTargetTypeIamMember) StateMust() *clouddeployCustomTargetTypeIamMemberState {
	if ccttim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ccttim.Type(), ccttim.LocalName()))
	}
	return ccttim.state
}

// ClouddeployCustomTargetTypeIamMemberArgs contains the configurations for google_clouddeploy_custom_target_type_iam_member.
type ClouddeployCustomTargetTypeIamMemberArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *clouddeploycustomtargettypeiammember.Condition `hcl:"condition,block"`
}
type clouddeployCustomTargetTypeIamMemberAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("etag"))
}

// Id returns a reference to field id of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("id"))
}

// Location returns a reference to field location of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("location"))
}

// Member returns a reference to field member of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("member"))
}

// Name returns a reference to field name of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("name"))
}

// Project returns a reference to field project of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("project"))
}

// Role returns a reference to field role of google_clouddeploy_custom_target_type_iam_member.
func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(ccttim.ref.Append("role"))
}

func (ccttim clouddeployCustomTargetTypeIamMemberAttributes) Condition() terra.ListValue[clouddeploycustomtargettypeiammember.ConditionAttributes] {
	return terra.ReferenceAsList[clouddeploycustomtargettypeiammember.ConditionAttributes](ccttim.ref.Append("condition"))
}

type clouddeployCustomTargetTypeIamMemberState struct {
	Etag      string                                                `json:"etag"`
	Id        string                                                `json:"id"`
	Location  string                                                `json:"location"`
	Member    string                                                `json:"member"`
	Name      string                                                `json:"name"`
	Project   string                                                `json:"project"`
	Role      string                                                `json:"role"`
	Condition []clouddeploycustomtargettypeiammember.ConditionState `json:"condition"`
}
