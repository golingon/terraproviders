// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datacomputerouter

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Bgp struct {
	// AdvertisedIpRanges: min=0
	AdvertisedIpRanges []AdvertisedIpRanges `hcl:"advertised_ip_ranges,block" validate:"min=0"`
}

type AdvertisedIpRanges struct{}

type BgpAttributes struct {
	ref terra.Reference
}

func (b BgpAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b BgpAttributes) InternalWithRef(ref terra.Reference) BgpAttributes {
	return BgpAttributes{ref: ref}
}

func (b BgpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b BgpAttributes) AdvertiseMode() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("advertise_mode"))
}

func (b BgpAttributes) AdvertisedGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](b.ref.Append("advertised_groups"))
}

func (b BgpAttributes) Asn() terra.NumberValue {
	return terra.ReferenceAsNumber(b.ref.Append("asn"))
}

func (b BgpAttributes) KeepaliveInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(b.ref.Append("keepalive_interval"))
}

func (b BgpAttributes) AdvertisedIpRanges() terra.ListValue[AdvertisedIpRangesAttributes] {
	return terra.ReferenceAsList[AdvertisedIpRangesAttributes](b.ref.Append("advertised_ip_ranges"))
}

type AdvertisedIpRangesAttributes struct {
	ref terra.Reference
}

func (air AdvertisedIpRangesAttributes) InternalRef() (terra.Reference, error) {
	return air.ref, nil
}

func (air AdvertisedIpRangesAttributes) InternalWithRef(ref terra.Reference) AdvertisedIpRangesAttributes {
	return AdvertisedIpRangesAttributes{ref: ref}
}

func (air AdvertisedIpRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return air.ref.InternalTokens()
}

func (air AdvertisedIpRangesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("description"))
}

func (air AdvertisedIpRangesAttributes) Range() terra.StringValue {
	return terra.ReferenceAsString(air.ref.Append("range"))
}

type BgpState struct {
	AdvertiseMode      string                    `json:"advertise_mode"`
	AdvertisedGroups   []string                  `json:"advertised_groups"`
	Asn                float64                   `json:"asn"`
	KeepaliveInterval  float64                   `json:"keepalive_interval"`
	AdvertisedIpRanges []AdvertisedIpRangesState `json:"advertised_ip_ranges"`
}

type AdvertisedIpRangesState struct {
	Description string `json:"description"`
	Range       string `json:"range"`
}
