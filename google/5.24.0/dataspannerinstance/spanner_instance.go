// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataspannerinstance

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AutoscalingConfig struct {
	// AutoscalingLimits: min=0
	AutoscalingLimits []AutoscalingLimits `hcl:"autoscaling_limits,block" validate:"min=0"`
	// AutoscalingTargets: min=0
	AutoscalingTargets []AutoscalingTargets `hcl:"autoscaling_targets,block" validate:"min=0"`
}

type AutoscalingLimits struct{}

type AutoscalingTargets struct{}

type AutoscalingConfigAttributes struct {
	ref terra.Reference
}

func (ac AutoscalingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac AutoscalingConfigAttributes) InternalWithRef(ref terra.Reference) AutoscalingConfigAttributes {
	return AutoscalingConfigAttributes{ref: ref}
}

func (ac AutoscalingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac AutoscalingConfigAttributes) AutoscalingLimits() terra.ListValue[AutoscalingLimitsAttributes] {
	return terra.ReferenceAsList[AutoscalingLimitsAttributes](ac.ref.Append("autoscaling_limits"))
}

func (ac AutoscalingConfigAttributes) AutoscalingTargets() terra.ListValue[AutoscalingTargetsAttributes] {
	return terra.ReferenceAsList[AutoscalingTargetsAttributes](ac.ref.Append("autoscaling_targets"))
}

type AutoscalingLimitsAttributes struct {
	ref terra.Reference
}

func (al AutoscalingLimitsAttributes) InternalRef() (terra.Reference, error) {
	return al.ref, nil
}

func (al AutoscalingLimitsAttributes) InternalWithRef(ref terra.Reference) AutoscalingLimitsAttributes {
	return AutoscalingLimitsAttributes{ref: ref}
}

func (al AutoscalingLimitsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return al.ref.InternalTokens()
}

func (al AutoscalingLimitsAttributes) MaxNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(al.ref.Append("max_nodes"))
}

func (al AutoscalingLimitsAttributes) MaxProcessingUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(al.ref.Append("max_processing_units"))
}

func (al AutoscalingLimitsAttributes) MinNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(al.ref.Append("min_nodes"))
}

func (al AutoscalingLimitsAttributes) MinProcessingUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(al.ref.Append("min_processing_units"))
}

type AutoscalingTargetsAttributes struct {
	ref terra.Reference
}

func (at AutoscalingTargetsAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at AutoscalingTargetsAttributes) InternalWithRef(ref terra.Reference) AutoscalingTargetsAttributes {
	return AutoscalingTargetsAttributes{ref: ref}
}

func (at AutoscalingTargetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

func (at AutoscalingTargetsAttributes) HighPriorityCpuUtilizationPercent() terra.NumberValue {
	return terra.ReferenceAsNumber(at.ref.Append("high_priority_cpu_utilization_percent"))
}

func (at AutoscalingTargetsAttributes) StorageUtilizationPercent() terra.NumberValue {
	return terra.ReferenceAsNumber(at.ref.Append("storage_utilization_percent"))
}

type AutoscalingConfigState struct {
	AutoscalingLimits  []AutoscalingLimitsState  `json:"autoscaling_limits"`
	AutoscalingTargets []AutoscalingTargetsState `json:"autoscaling_targets"`
}

type AutoscalingLimitsState struct {
	MaxNodes           float64 `json:"max_nodes"`
	MaxProcessingUnits float64 `json:"max_processing_units"`
	MinNodes           float64 `json:"min_nodes"`
	MinProcessingUnits float64 `json:"min_processing_units"`
}

type AutoscalingTargetsState struct {
	HighPriorityCpuUtilizationPercent float64 `json:"high_priority_cpu_utilization_percent"`
	StorageUtilizationPercent         float64 `json:"storage_utilization_percent"`
}
