// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datakmscryptokey

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Primary struct{}

type VersionTemplate struct{}

type PrimaryAttributes struct {
	ref terra.Reference
}

func (p PrimaryAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PrimaryAttributes) InternalWithRef(ref terra.Reference) PrimaryAttributes {
	return PrimaryAttributes{ref: ref}
}

func (p PrimaryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PrimaryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p PrimaryAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("state"))
}

type VersionTemplateAttributes struct {
	ref terra.Reference
}

func (vt VersionTemplateAttributes) InternalRef() (terra.Reference, error) {
	return vt.ref, nil
}

func (vt VersionTemplateAttributes) InternalWithRef(ref terra.Reference) VersionTemplateAttributes {
	return VersionTemplateAttributes{ref: ref}
}

func (vt VersionTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vt.ref.InternalTokens()
}

func (vt VersionTemplateAttributes) Algorithm() terra.StringValue {
	return terra.ReferenceAsString(vt.ref.Append("algorithm"))
}

func (vt VersionTemplateAttributes) ProtectionLevel() terra.StringValue {
	return terra.ReferenceAsString(vt.ref.Append("protection_level"))
}

type PrimaryState struct {
	Name  string `json:"name"`
	State string `json:"state"`
}

type VersionTemplateState struct {
	Algorithm       string `json:"algorithm"`
	ProtectionLevel string `json:"protection_level"`
}
