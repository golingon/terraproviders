// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewPubsubSchemaIamPolicy creates a new instance of [PubsubSchemaIamPolicy].
func NewPubsubSchemaIamPolicy(name string, args PubsubSchemaIamPolicyArgs) *PubsubSchemaIamPolicy {
	return &PubsubSchemaIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PubsubSchemaIamPolicy)(nil)

// PubsubSchemaIamPolicy represents the Terraform resource google_pubsub_schema_iam_policy.
type PubsubSchemaIamPolicy struct {
	Name      string
	Args      PubsubSchemaIamPolicyArgs
	state     *pubsubSchemaIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PubsubSchemaIamPolicy].
func (psip *PubsubSchemaIamPolicy) Type() string {
	return "google_pubsub_schema_iam_policy"
}

// LocalName returns the local name for [PubsubSchemaIamPolicy].
func (psip *PubsubSchemaIamPolicy) LocalName() string {
	return psip.Name
}

// Configuration returns the configuration (args) for [PubsubSchemaIamPolicy].
func (psip *PubsubSchemaIamPolicy) Configuration() interface{} {
	return psip.Args
}

// DependOn is used for other resources to depend on [PubsubSchemaIamPolicy].
func (psip *PubsubSchemaIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(psip)
}

// Dependencies returns the list of resources [PubsubSchemaIamPolicy] depends_on.
func (psip *PubsubSchemaIamPolicy) Dependencies() terra.Dependencies {
	return psip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PubsubSchemaIamPolicy].
func (psip *PubsubSchemaIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return psip.Lifecycle
}

// Attributes returns the attributes for [PubsubSchemaIamPolicy].
func (psip *PubsubSchemaIamPolicy) Attributes() pubsubSchemaIamPolicyAttributes {
	return pubsubSchemaIamPolicyAttributes{ref: terra.ReferenceResource(psip)}
}

// ImportState imports the given attribute values into [PubsubSchemaIamPolicy]'s state.
func (psip *PubsubSchemaIamPolicy) ImportState(av io.Reader) error {
	psip.state = &pubsubSchemaIamPolicyState{}
	if err := json.NewDecoder(av).Decode(psip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", psip.Type(), psip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PubsubSchemaIamPolicy] has state.
func (psip *PubsubSchemaIamPolicy) State() (*pubsubSchemaIamPolicyState, bool) {
	return psip.state, psip.state != nil
}

// StateMust returns the state for [PubsubSchemaIamPolicy]. Panics if the state is nil.
func (psip *PubsubSchemaIamPolicy) StateMust() *pubsubSchemaIamPolicyState {
	if psip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", psip.Type(), psip.LocalName()))
	}
	return psip.state
}

// PubsubSchemaIamPolicyArgs contains the configurations for google_pubsub_schema_iam_policy.
type PubsubSchemaIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
}
type pubsubSchemaIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_pubsub_schema_iam_policy.
func (psip pubsubSchemaIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(psip.ref.Append("etag"))
}

// Id returns a reference to field id of google_pubsub_schema_iam_policy.
func (psip pubsubSchemaIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(psip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_pubsub_schema_iam_policy.
func (psip pubsubSchemaIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(psip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_pubsub_schema_iam_policy.
func (psip pubsubSchemaIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(psip.ref.Append("project"))
}

// Schema returns a reference to field schema of google_pubsub_schema_iam_policy.
func (psip pubsubSchemaIamPolicyAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(psip.ref.Append("schema"))
}

type pubsubSchemaIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
	Schema     string `json:"schema"`
}
