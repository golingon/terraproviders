// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	apphubserviceprojectattachment "github.com/golingon/terraproviders/google/5.24.0/apphubserviceprojectattachment"
	"io"
)

// NewApphubServiceProjectAttachment creates a new instance of [ApphubServiceProjectAttachment].
func NewApphubServiceProjectAttachment(name string, args ApphubServiceProjectAttachmentArgs) *ApphubServiceProjectAttachment {
	return &ApphubServiceProjectAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApphubServiceProjectAttachment)(nil)

// ApphubServiceProjectAttachment represents the Terraform resource google_apphub_service_project_attachment.
type ApphubServiceProjectAttachment struct {
	Name      string
	Args      ApphubServiceProjectAttachmentArgs
	state     *apphubServiceProjectAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApphubServiceProjectAttachment].
func (aspa *ApphubServiceProjectAttachment) Type() string {
	return "google_apphub_service_project_attachment"
}

// LocalName returns the local name for [ApphubServiceProjectAttachment].
func (aspa *ApphubServiceProjectAttachment) LocalName() string {
	return aspa.Name
}

// Configuration returns the configuration (args) for [ApphubServiceProjectAttachment].
func (aspa *ApphubServiceProjectAttachment) Configuration() interface{} {
	return aspa.Args
}

// DependOn is used for other resources to depend on [ApphubServiceProjectAttachment].
func (aspa *ApphubServiceProjectAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(aspa)
}

// Dependencies returns the list of resources [ApphubServiceProjectAttachment] depends_on.
func (aspa *ApphubServiceProjectAttachment) Dependencies() terra.Dependencies {
	return aspa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApphubServiceProjectAttachment].
func (aspa *ApphubServiceProjectAttachment) LifecycleManagement() *terra.Lifecycle {
	return aspa.Lifecycle
}

// Attributes returns the attributes for [ApphubServiceProjectAttachment].
func (aspa *ApphubServiceProjectAttachment) Attributes() apphubServiceProjectAttachmentAttributes {
	return apphubServiceProjectAttachmentAttributes{ref: terra.ReferenceResource(aspa)}
}

// ImportState imports the given attribute values into [ApphubServiceProjectAttachment]'s state.
func (aspa *ApphubServiceProjectAttachment) ImportState(av io.Reader) error {
	aspa.state = &apphubServiceProjectAttachmentState{}
	if err := json.NewDecoder(av).Decode(aspa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aspa.Type(), aspa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApphubServiceProjectAttachment] has state.
func (aspa *ApphubServiceProjectAttachment) State() (*apphubServiceProjectAttachmentState, bool) {
	return aspa.state, aspa.state != nil
}

// StateMust returns the state for [ApphubServiceProjectAttachment]. Panics if the state is nil.
func (aspa *ApphubServiceProjectAttachment) StateMust() *apphubServiceProjectAttachmentState {
	if aspa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aspa.Type(), aspa.LocalName()))
	}
	return aspa.state
}

// ApphubServiceProjectAttachmentArgs contains the configurations for google_apphub_service_project_attachment.
type ApphubServiceProjectAttachmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// ServiceProject: string, optional
	ServiceProject terra.StringValue `hcl:"service_project,attr"`
	// ServiceProjectAttachmentId: string, required
	ServiceProjectAttachmentId terra.StringValue `hcl:"service_project_attachment_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *apphubserviceprojectattachment.Timeouts `hcl:"timeouts,block"`
}
type apphubServiceProjectAttachmentAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("create_time"))
}

// Id returns a reference to field id of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("id"))
}

// Name returns a reference to field name of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("name"))
}

// Project returns a reference to field project of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("project"))
}

// ServiceProject returns a reference to field service_project of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) ServiceProject() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("service_project"))
}

// ServiceProjectAttachmentId returns a reference to field service_project_attachment_id of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) ServiceProjectAttachmentId() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("service_project_attachment_id"))
}

// State returns a reference to field state of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("state"))
}

// Uid returns a reference to field uid of google_apphub_service_project_attachment.
func (aspa apphubServiceProjectAttachmentAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(aspa.ref.Append("uid"))
}

func (aspa apphubServiceProjectAttachmentAttributes) Timeouts() apphubserviceprojectattachment.TimeoutsAttributes {
	return terra.ReferenceAsSingle[apphubserviceprojectattachment.TimeoutsAttributes](aspa.ref.Append("timeouts"))
}

type apphubServiceProjectAttachmentState struct {
	CreateTime                 string                                        `json:"create_time"`
	Id                         string                                        `json:"id"`
	Name                       string                                        `json:"name"`
	Project                    string                                        `json:"project"`
	ServiceProject             string                                        `json:"service_project"`
	ServiceProjectAttachmentId string                                        `json:"service_project_attachment_id"`
	State                      string                                        `json:"state"`
	Uid                        string                                        `json:"uid"`
	Timeouts                   *apphubserviceprojectattachment.TimeoutsState `json:"timeouts"`
}
