// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	securesourcemanagerinstanceiammember "github.com/golingon/terraproviders/google/5.24.0/securesourcemanagerinstanceiammember"
	"io"
)

// NewSecureSourceManagerInstanceIamMember creates a new instance of [SecureSourceManagerInstanceIamMember].
func NewSecureSourceManagerInstanceIamMember(name string, args SecureSourceManagerInstanceIamMemberArgs) *SecureSourceManagerInstanceIamMember {
	return &SecureSourceManagerInstanceIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecureSourceManagerInstanceIamMember)(nil)

// SecureSourceManagerInstanceIamMember represents the Terraform resource google_secure_source_manager_instance_iam_member.
type SecureSourceManagerInstanceIamMember struct {
	Name      string
	Args      SecureSourceManagerInstanceIamMemberArgs
	state     *secureSourceManagerInstanceIamMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecureSourceManagerInstanceIamMember].
func (ssmiim *SecureSourceManagerInstanceIamMember) Type() string {
	return "google_secure_source_manager_instance_iam_member"
}

// LocalName returns the local name for [SecureSourceManagerInstanceIamMember].
func (ssmiim *SecureSourceManagerInstanceIamMember) LocalName() string {
	return ssmiim.Name
}

// Configuration returns the configuration (args) for [SecureSourceManagerInstanceIamMember].
func (ssmiim *SecureSourceManagerInstanceIamMember) Configuration() interface{} {
	return ssmiim.Args
}

// DependOn is used for other resources to depend on [SecureSourceManagerInstanceIamMember].
func (ssmiim *SecureSourceManagerInstanceIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(ssmiim)
}

// Dependencies returns the list of resources [SecureSourceManagerInstanceIamMember] depends_on.
func (ssmiim *SecureSourceManagerInstanceIamMember) Dependencies() terra.Dependencies {
	return ssmiim.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecureSourceManagerInstanceIamMember].
func (ssmiim *SecureSourceManagerInstanceIamMember) LifecycleManagement() *terra.Lifecycle {
	return ssmiim.Lifecycle
}

// Attributes returns the attributes for [SecureSourceManagerInstanceIamMember].
func (ssmiim *SecureSourceManagerInstanceIamMember) Attributes() secureSourceManagerInstanceIamMemberAttributes {
	return secureSourceManagerInstanceIamMemberAttributes{ref: terra.ReferenceResource(ssmiim)}
}

// ImportState imports the given attribute values into [SecureSourceManagerInstanceIamMember]'s state.
func (ssmiim *SecureSourceManagerInstanceIamMember) ImportState(av io.Reader) error {
	ssmiim.state = &secureSourceManagerInstanceIamMemberState{}
	if err := json.NewDecoder(av).Decode(ssmiim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssmiim.Type(), ssmiim.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecureSourceManagerInstanceIamMember] has state.
func (ssmiim *SecureSourceManagerInstanceIamMember) State() (*secureSourceManagerInstanceIamMemberState, bool) {
	return ssmiim.state, ssmiim.state != nil
}

// StateMust returns the state for [SecureSourceManagerInstanceIamMember]. Panics if the state is nil.
func (ssmiim *SecureSourceManagerInstanceIamMember) StateMust() *secureSourceManagerInstanceIamMemberState {
	if ssmiim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssmiim.Type(), ssmiim.LocalName()))
	}
	return ssmiim.state
}

// SecureSourceManagerInstanceIamMemberArgs contains the configurations for google_secure_source_manager_instance_iam_member.
type SecureSourceManagerInstanceIamMemberArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *securesourcemanagerinstanceiammember.Condition `hcl:"condition,block"`
}
type secureSourceManagerInstanceIamMemberAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("etag"))
}

// Id returns a reference to field id of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("instance_id"))
}

// Location returns a reference to field location of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("location"))
}

// Member returns a reference to field member of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("member"))
}

// Project returns a reference to field project of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("project"))
}

// Role returns a reference to field role of google_secure_source_manager_instance_iam_member.
func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(ssmiim.ref.Append("role"))
}

func (ssmiim secureSourceManagerInstanceIamMemberAttributes) Condition() terra.ListValue[securesourcemanagerinstanceiammember.ConditionAttributes] {
	return terra.ReferenceAsList[securesourcemanagerinstanceiammember.ConditionAttributes](ssmiim.ref.Append("condition"))
}

type secureSourceManagerInstanceIamMemberState struct {
	Etag       string                                                `json:"etag"`
	Id         string                                                `json:"id"`
	InstanceId string                                                `json:"instance_id"`
	Location   string                                                `json:"location"`
	Member     string                                                `json:"member"`
	Project    string                                                `json:"project"`
	Role       string                                                `json:"role"`
	Condition  []securesourcemanagerinstanceiammember.ConditionState `json:"condition"`
}
