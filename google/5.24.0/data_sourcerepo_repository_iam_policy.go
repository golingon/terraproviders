// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import "github.com/golingon/lingon/pkg/terra"

// NewDataSourcerepoRepositoryIamPolicy creates a new instance of [DataSourcerepoRepositoryIamPolicy].
func NewDataSourcerepoRepositoryIamPolicy(name string, args DataSourcerepoRepositoryIamPolicyArgs) *DataSourcerepoRepositoryIamPolicy {
	return &DataSourcerepoRepositoryIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSourcerepoRepositoryIamPolicy)(nil)

// DataSourcerepoRepositoryIamPolicy represents the Terraform data resource google_sourcerepo_repository_iam_policy.
type DataSourcerepoRepositoryIamPolicy struct {
	Name string
	Args DataSourcerepoRepositoryIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataSourcerepoRepositoryIamPolicy].
func (srip *DataSourcerepoRepositoryIamPolicy) DataSource() string {
	return "google_sourcerepo_repository_iam_policy"
}

// LocalName returns the local name for [DataSourcerepoRepositoryIamPolicy].
func (srip *DataSourcerepoRepositoryIamPolicy) LocalName() string {
	return srip.Name
}

// Configuration returns the configuration (args) for [DataSourcerepoRepositoryIamPolicy].
func (srip *DataSourcerepoRepositoryIamPolicy) Configuration() interface{} {
	return srip.Args
}

// Attributes returns the attributes for [DataSourcerepoRepositoryIamPolicy].
func (srip *DataSourcerepoRepositoryIamPolicy) Attributes() dataSourcerepoRepositoryIamPolicyAttributes {
	return dataSourcerepoRepositoryIamPolicyAttributes{ref: terra.ReferenceDataResource(srip)}
}

// DataSourcerepoRepositoryIamPolicyArgs contains the configurations for google_sourcerepo_repository_iam_policy.
type DataSourcerepoRepositoryIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Repository: string, required
	Repository terra.StringValue `hcl:"repository,attr" validate:"required"`
}
type dataSourcerepoRepositoryIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_sourcerepo_repository_iam_policy.
func (srip dataSourcerepoRepositoryIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(srip.ref.Append("etag"))
}

// Id returns a reference to field id of google_sourcerepo_repository_iam_policy.
func (srip dataSourcerepoRepositoryIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(srip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_sourcerepo_repository_iam_policy.
func (srip dataSourcerepoRepositoryIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(srip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_sourcerepo_repository_iam_policy.
func (srip dataSourcerepoRepositoryIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(srip.ref.Append("project"))
}

// Repository returns a reference to field repository of google_sourcerepo_repository_iam_policy.
func (srip dataSourcerepoRepositoryIamPolicyAttributes) Repository() terra.StringValue {
	return terra.ReferenceAsString(srip.ref.Append("repository"))
}
