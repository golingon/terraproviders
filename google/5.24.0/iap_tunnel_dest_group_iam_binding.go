// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	iaptunneldestgroupiambinding "github.com/golingon/terraproviders/google/5.24.0/iaptunneldestgroupiambinding"
	"io"
)

// NewIapTunnelDestGroupIamBinding creates a new instance of [IapTunnelDestGroupIamBinding].
func NewIapTunnelDestGroupIamBinding(name string, args IapTunnelDestGroupIamBindingArgs) *IapTunnelDestGroupIamBinding {
	return &IapTunnelDestGroupIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapTunnelDestGroupIamBinding)(nil)

// IapTunnelDestGroupIamBinding represents the Terraform resource google_iap_tunnel_dest_group_iam_binding.
type IapTunnelDestGroupIamBinding struct {
	Name      string
	Args      IapTunnelDestGroupIamBindingArgs
	state     *iapTunnelDestGroupIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IapTunnelDestGroupIamBinding].
func (itdgib *IapTunnelDestGroupIamBinding) Type() string {
	return "google_iap_tunnel_dest_group_iam_binding"
}

// LocalName returns the local name for [IapTunnelDestGroupIamBinding].
func (itdgib *IapTunnelDestGroupIamBinding) LocalName() string {
	return itdgib.Name
}

// Configuration returns the configuration (args) for [IapTunnelDestGroupIamBinding].
func (itdgib *IapTunnelDestGroupIamBinding) Configuration() interface{} {
	return itdgib.Args
}

// DependOn is used for other resources to depend on [IapTunnelDestGroupIamBinding].
func (itdgib *IapTunnelDestGroupIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(itdgib)
}

// Dependencies returns the list of resources [IapTunnelDestGroupIamBinding] depends_on.
func (itdgib *IapTunnelDestGroupIamBinding) Dependencies() terra.Dependencies {
	return itdgib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IapTunnelDestGroupIamBinding].
func (itdgib *IapTunnelDestGroupIamBinding) LifecycleManagement() *terra.Lifecycle {
	return itdgib.Lifecycle
}

// Attributes returns the attributes for [IapTunnelDestGroupIamBinding].
func (itdgib *IapTunnelDestGroupIamBinding) Attributes() iapTunnelDestGroupIamBindingAttributes {
	return iapTunnelDestGroupIamBindingAttributes{ref: terra.ReferenceResource(itdgib)}
}

// ImportState imports the given attribute values into [IapTunnelDestGroupIamBinding]'s state.
func (itdgib *IapTunnelDestGroupIamBinding) ImportState(av io.Reader) error {
	itdgib.state = &iapTunnelDestGroupIamBindingState{}
	if err := json.NewDecoder(av).Decode(itdgib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itdgib.Type(), itdgib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IapTunnelDestGroupIamBinding] has state.
func (itdgib *IapTunnelDestGroupIamBinding) State() (*iapTunnelDestGroupIamBindingState, bool) {
	return itdgib.state, itdgib.state != nil
}

// StateMust returns the state for [IapTunnelDestGroupIamBinding]. Panics if the state is nil.
func (itdgib *IapTunnelDestGroupIamBinding) StateMust() *iapTunnelDestGroupIamBindingState {
	if itdgib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itdgib.Type(), itdgib.LocalName()))
	}
	return itdgib.state
}

// IapTunnelDestGroupIamBindingArgs contains the configurations for google_iap_tunnel_dest_group_iam_binding.
type IapTunnelDestGroupIamBindingArgs struct {
	// DestGroup: string, required
	DestGroup terra.StringValue `hcl:"dest_group,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *iaptunneldestgroupiambinding.Condition `hcl:"condition,block"`
}
type iapTunnelDestGroupIamBindingAttributes struct {
	ref terra.Reference
}

// DestGroup returns a reference to field dest_group of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) DestGroup() terra.StringValue {
	return terra.ReferenceAsString(itdgib.ref.Append("dest_group"))
}

// Etag returns a reference to field etag of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(itdgib.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(itdgib.ref.Append("id"))
}

// Members returns a reference to field members of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](itdgib.ref.Append("members"))
}

// Project returns a reference to field project of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(itdgib.ref.Append("project"))
}

// Region returns a reference to field region of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(itdgib.ref.Append("region"))
}

// Role returns a reference to field role of google_iap_tunnel_dest_group_iam_binding.
func (itdgib iapTunnelDestGroupIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(itdgib.ref.Append("role"))
}

func (itdgib iapTunnelDestGroupIamBindingAttributes) Condition() terra.ListValue[iaptunneldestgroupiambinding.ConditionAttributes] {
	return terra.ReferenceAsList[iaptunneldestgroupiambinding.ConditionAttributes](itdgib.ref.Append("condition"))
}

type iapTunnelDestGroupIamBindingState struct {
	DestGroup string                                        `json:"dest_group"`
	Etag      string                                        `json:"etag"`
	Id        string                                        `json:"id"`
	Members   []string                                      `json:"members"`
	Project   string                                        `json:"project"`
	Region    string                                        `json:"region"`
	Role      string                                        `json:"role"`
	Condition []iaptunneldestgroupiambinding.ConditionState `json:"condition"`
}
