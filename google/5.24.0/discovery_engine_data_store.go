// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	discoveryenginedatastore "github.com/golingon/terraproviders/google/5.24.0/discoveryenginedatastore"
	"io"
)

// NewDiscoveryEngineDataStore creates a new instance of [DiscoveryEngineDataStore].
func NewDiscoveryEngineDataStore(name string, args DiscoveryEngineDataStoreArgs) *DiscoveryEngineDataStore {
	return &DiscoveryEngineDataStore{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DiscoveryEngineDataStore)(nil)

// DiscoveryEngineDataStore represents the Terraform resource google_discovery_engine_data_store.
type DiscoveryEngineDataStore struct {
	Name      string
	Args      DiscoveryEngineDataStoreArgs
	state     *discoveryEngineDataStoreState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DiscoveryEngineDataStore].
func (deds *DiscoveryEngineDataStore) Type() string {
	return "google_discovery_engine_data_store"
}

// LocalName returns the local name for [DiscoveryEngineDataStore].
func (deds *DiscoveryEngineDataStore) LocalName() string {
	return deds.Name
}

// Configuration returns the configuration (args) for [DiscoveryEngineDataStore].
func (deds *DiscoveryEngineDataStore) Configuration() interface{} {
	return deds.Args
}

// DependOn is used for other resources to depend on [DiscoveryEngineDataStore].
func (deds *DiscoveryEngineDataStore) DependOn() terra.Reference {
	return terra.ReferenceResource(deds)
}

// Dependencies returns the list of resources [DiscoveryEngineDataStore] depends_on.
func (deds *DiscoveryEngineDataStore) Dependencies() terra.Dependencies {
	return deds.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DiscoveryEngineDataStore].
func (deds *DiscoveryEngineDataStore) LifecycleManagement() *terra.Lifecycle {
	return deds.Lifecycle
}

// Attributes returns the attributes for [DiscoveryEngineDataStore].
func (deds *DiscoveryEngineDataStore) Attributes() discoveryEngineDataStoreAttributes {
	return discoveryEngineDataStoreAttributes{ref: terra.ReferenceResource(deds)}
}

// ImportState imports the given attribute values into [DiscoveryEngineDataStore]'s state.
func (deds *DiscoveryEngineDataStore) ImportState(av io.Reader) error {
	deds.state = &discoveryEngineDataStoreState{}
	if err := json.NewDecoder(av).Decode(deds.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", deds.Type(), deds.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DiscoveryEngineDataStore] has state.
func (deds *DiscoveryEngineDataStore) State() (*discoveryEngineDataStoreState, bool) {
	return deds.state, deds.state != nil
}

// StateMust returns the state for [DiscoveryEngineDataStore]. Panics if the state is nil.
func (deds *DiscoveryEngineDataStore) StateMust() *discoveryEngineDataStoreState {
	if deds.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", deds.Type(), deds.LocalName()))
	}
	return deds.state
}

// DiscoveryEngineDataStoreArgs contains the configurations for google_discovery_engine_data_store.
type DiscoveryEngineDataStoreArgs struct {
	// ContentConfig: string, required
	ContentConfig terra.StringValue `hcl:"content_config,attr" validate:"required"`
	// CreateAdvancedSiteSearch: bool, optional
	CreateAdvancedSiteSearch terra.BoolValue `hcl:"create_advanced_site_search,attr"`
	// DataStoreId: string, required
	DataStoreId terra.StringValue `hcl:"data_store_id,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IndustryVertical: string, required
	IndustryVertical terra.StringValue `hcl:"industry_vertical,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SolutionTypes: list of string, optional
	SolutionTypes terra.ListValue[terra.StringValue] `hcl:"solution_types,attr"`
	// Timeouts: optional
	Timeouts *discoveryenginedatastore.Timeouts `hcl:"timeouts,block"`
}
type discoveryEngineDataStoreAttributes struct {
	ref terra.Reference
}

// ContentConfig returns a reference to field content_config of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) ContentConfig() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("content_config"))
}

// CreateAdvancedSiteSearch returns a reference to field create_advanced_site_search of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) CreateAdvancedSiteSearch() terra.BoolValue {
	return terra.ReferenceAsBool(deds.ref.Append("create_advanced_site_search"))
}

// CreateTime returns a reference to field create_time of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("create_time"))
}

// DataStoreId returns a reference to field data_store_id of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) DataStoreId() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("data_store_id"))
}

// DefaultSchemaId returns a reference to field default_schema_id of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) DefaultSchemaId() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("default_schema_id"))
}

// DisplayName returns a reference to field display_name of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("display_name"))
}

// Id returns a reference to field id of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("id"))
}

// IndustryVertical returns a reference to field industry_vertical of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) IndustryVertical() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("industry_vertical"))
}

// Location returns a reference to field location of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("location"))
}

// Name returns a reference to field name of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("name"))
}

// Project returns a reference to field project of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(deds.ref.Append("project"))
}

// SolutionTypes returns a reference to field solution_types of google_discovery_engine_data_store.
func (deds discoveryEngineDataStoreAttributes) SolutionTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](deds.ref.Append("solution_types"))
}

func (deds discoveryEngineDataStoreAttributes) Timeouts() discoveryenginedatastore.TimeoutsAttributes {
	return terra.ReferenceAsSingle[discoveryenginedatastore.TimeoutsAttributes](deds.ref.Append("timeouts"))
}

type discoveryEngineDataStoreState struct {
	ContentConfig            string                                  `json:"content_config"`
	CreateAdvancedSiteSearch bool                                    `json:"create_advanced_site_search"`
	CreateTime               string                                  `json:"create_time"`
	DataStoreId              string                                  `json:"data_store_id"`
	DefaultSchemaId          string                                  `json:"default_schema_id"`
	DisplayName              string                                  `json:"display_name"`
	Id                       string                                  `json:"id"`
	IndustryVertical         string                                  `json:"industry_vertical"`
	Location                 string                                  `json:"location"`
	Name                     string                                  `json:"name"`
	Project                  string                                  `json:"project"`
	SolutionTypes            []string                                `json:"solution_types"`
	Timeouts                 *discoveryenginedatastore.TimeoutsState `json:"timeouts"`
}
