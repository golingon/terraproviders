// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datalosspreventiondeidentifytemplate

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DeidentifyConfig struct {
	// ImageTransformations: optional
	ImageTransformations *ImageTransformations `hcl:"image_transformations,block"`
	// DeidentifyConfigInfoTypeTransformations: optional
	InfoTypeTransformations *DeidentifyConfigInfoTypeTransformations `hcl:"info_type_transformations,block"`
	// RecordTransformations: optional
	RecordTransformations *RecordTransformations `hcl:"record_transformations,block"`
}

type ImageTransformations struct {
	// Transforms: min=1
	Transforms []Transforms `hcl:"transforms,block" validate:"min=1"`
}

type Transforms struct {
	// AllInfoTypes: optional
	AllInfoTypes *AllInfoTypes `hcl:"all_info_types,block"`
	// AllText: optional
	AllText *AllText `hcl:"all_text,block"`
	// RedactionColor: optional
	RedactionColor *RedactionColor `hcl:"redaction_color,block"`
	// SelectedInfoTypes: optional
	SelectedInfoTypes *SelectedInfoTypes `hcl:"selected_info_types,block"`
}

type AllInfoTypes struct{}

type AllText struct{}

type RedactionColor struct {
	// Blue: number, optional
	Blue terra.NumberValue `hcl:"blue,attr"`
	// Green: number, optional
	Green terra.NumberValue `hcl:"green,attr"`
	// Red: number, optional
	Red terra.NumberValue `hcl:"red,attr"`
}

type SelectedInfoTypes struct {
	// SelectedInfoTypesInfoTypes: min=1
	InfoTypes []SelectedInfoTypesInfoTypes `hcl:"info_types,block" validate:"min=1"`
}

type SelectedInfoTypesInfoTypes struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// SelectedInfoTypesInfoTypesSensitivityScore: optional
	SensitivityScore *SelectedInfoTypesInfoTypesSensitivityScore `hcl:"sensitivity_score,block"`
}

type SelectedInfoTypesInfoTypesSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformations struct {
	// DeidentifyConfigInfoTypeTransformationsTransformations: min=1
	Transformations []DeidentifyConfigInfoTypeTransformationsTransformations `hcl:"transformations,block" validate:"min=1"`
}

type DeidentifyConfigInfoTypeTransformationsTransformations struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypes: min=0
	InfoTypes []DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypes `hcl:"info_types,block" validate:"min=0"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformation: required
	PrimitiveTransformation *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformation `hcl:"primitive_transformation,block" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypes struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScore: optional
	SensitivityScore *DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScore `hcl:"sensitivity_score,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformation struct {
	// ReplaceWithInfoTypeConfig: bool, optional
	ReplaceWithInfoTypeConfig terra.BoolValue `hcl:"replace_with_info_type_config,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfig: optional
	BucketingConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfig `hcl:"bucketing_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig: optional
	CharacterMaskConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig `hcl:"character_mask_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfig: optional
	CryptoDeterministicConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfig `hcl:"crypto_deterministic_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfig: optional
	CryptoHashConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfig `hcl:"crypto_hash_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig: optional
	CryptoReplaceFfxFpeConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig `hcl:"crypto_replace_ffx_fpe_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfig: optional
	DateShiftConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfig `hcl:"date_shift_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfig: optional
	FixedSizeBucketingConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfig `hcl:"fixed_size_bucketing_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfig: optional
	RedactConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfig `hcl:"redact_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig: optional
	ReplaceConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig `hcl:"replace_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfig: optional
	ReplaceDictionaryConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfig `hcl:"replace_dictionary_config,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfig: optional
	TimePartConfig *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfig `hcl:"time_part_config,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfig struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBuckets: min=0
	Buckets []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBuckets `hcl:"buckets,block" validate:"min=0"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBuckets struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMax: optional
	Max *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMax `hcl:"max,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMin: optional
	Min *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMin `hcl:"min,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue: required
	ReplacementValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue `hcl:"replacement_value,block" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMax struct {
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue: optional
	DateValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue `hcl:"date_value,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue: optional
	TimeValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue `hcl:"time_value,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMin struct {
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue: optional
	DateValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue `hcl:"date_value,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue: optional
	TimeValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue `hcl:"time_value,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue struct {
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue: optional
	DateValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue `hcl:"date_value,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue: optional
	TimeValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue `hcl:"time_value,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig struct {
	// MaskingCharacter: string, optional
	MaskingCharacter terra.StringValue `hcl:"masking_character,attr"`
	// NumberToMask: number, optional
	NumberToMask terra.NumberValue `hcl:"number_to_mask,attr"`
	// ReverseOrder: bool, optional
	ReverseOrder terra.BoolValue `hcl:"reverse_order,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore: min=0
	CharactersToIgnore []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore `hcl:"characters_to_ignore,block" validate:"min=0"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore struct {
	// CharactersToSkip: string, optional
	CharactersToSkip terra.StringValue `hcl:"characters_to_skip,attr"`
	// CommonCharactersToIgnore: string, optional
	CommonCharactersToIgnore terra.StringValue `hcl:"common_characters_to_ignore,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfig struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContext: optional
	Context *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContext `hcl:"context,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey: optional
	CryptoKey *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey `hcl:"crypto_key,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType: optional
	SurrogateInfoType *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType `hcl:"surrogate_info_type,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContext struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient: optional
	Transient *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient `hcl:"transient,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped: optional
	Unwrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore: optional
	SensitivityScore *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore `hcl:"sensitivity_score,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfig struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey: optional
	CryptoKey *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey `hcl:"crypto_key,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient: optional
	Transient *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient `hcl:"transient,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped: optional
	Unwrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig struct {
	// CommonAlphabet: string, optional
	CommonAlphabet terra.StringValue `hcl:"common_alphabet,attr"`
	// CustomAlphabet: string, optional
	CustomAlphabet terra.StringValue `hcl:"custom_alphabet,attr"`
	// Radix: number, optional
	Radix terra.NumberValue `hcl:"radix,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext: optional
	Context *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext `hcl:"context,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey: optional
	CryptoKey *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey `hcl:"crypto_key,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType: optional
	SurrogateInfoType *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType `hcl:"surrogate_info_type,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient: optional
	Transient *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient `hcl:"transient,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped: optional
	Unwrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore: optional
	SensitivityScore *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore `hcl:"sensitivity_score,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfig struct {
	// LowerBoundDays: number, required
	LowerBoundDays terra.NumberValue `hcl:"lower_bound_days,attr" validate:"required"`
	// UpperBoundDays: number, required
	UpperBoundDays terra.NumberValue `hcl:"upper_bound_days,attr" validate:"required"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContext: optional
	Context *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContext `hcl:"context,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKey: optional
	CryptoKey *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKey `hcl:"crypto_key,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContext struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKey struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient: optional
	Transient *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient `hcl:"transient,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped: optional
	Unwrapped *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfig struct {
	// BucketSize: number, required
	BucketSize terra.NumberValue `hcl:"bucket_size,attr" validate:"required"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound: required
	LowerBound *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound `hcl:"lower_bound,block" validate:"required"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound: required
	UpperBound *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound `hcl:"upper_bound,block" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound struct {
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound struct {
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfig struct{}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue: required
	NewValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue `hcl:"new_value,block" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: number, optional
	IntegerValue terra.NumberValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue: optional
	DateValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue `hcl:"date_value,block"`
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue: optional
	TimeValue *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue `hcl:"time_value,block"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfig struct {
	// DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList: required
	WordList *DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList `hcl:"word_list,block" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList struct {
	// Words: list of string, required
	Words terra.ListValue[terra.StringValue] `hcl:"words,attr" validate:"required"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfig struct {
	// PartToExtract: string, optional
	PartToExtract terra.StringValue `hcl:"part_to_extract,attr"`
}

type RecordTransformations struct {
	// FieldTransformations: min=0
	FieldTransformations []FieldTransformations `hcl:"field_transformations,block" validate:"min=0"`
	// RecordSuppressions: min=0
	RecordSuppressions []RecordSuppressions `hcl:"record_suppressions,block" validate:"min=0"`
}

type FieldTransformations struct {
	// FieldTransformationsCondition: optional
	Condition *FieldTransformationsCondition `hcl:"condition,block"`
	// Fields: min=1
	Fields []Fields `hcl:"fields,block" validate:"min=1"`
	// FieldTransformationsInfoTypeTransformations: optional
	InfoTypeTransformations *FieldTransformationsInfoTypeTransformations `hcl:"info_type_transformations,block"`
	// FieldTransformationsPrimitiveTransformation: optional
	PrimitiveTransformation *FieldTransformationsPrimitiveTransformation `hcl:"primitive_transformation,block"`
}

type FieldTransformationsCondition struct {
	// FieldTransformationsConditionExpressions: optional
	Expressions *FieldTransformationsConditionExpressions `hcl:"expressions,block"`
}

type FieldTransformationsConditionExpressions struct {
	// LogicalOperator: string, optional
	LogicalOperator terra.StringValue `hcl:"logical_operator,attr"`
	// FieldTransformationsConditionExpressionsConditions: optional
	Conditions *FieldTransformationsConditionExpressionsConditions `hcl:"conditions,block"`
}

type FieldTransformationsConditionExpressionsConditions struct {
	// FieldTransformationsConditionExpressionsConditionsConditions: min=0
	Conditions []FieldTransformationsConditionExpressionsConditionsConditions `hcl:"conditions,block" validate:"min=0"`
}

type FieldTransformationsConditionExpressionsConditionsConditions struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// FieldTransformationsConditionExpressionsConditionsConditionsField: required
	Field *FieldTransformationsConditionExpressionsConditionsConditionsField `hcl:"field,block" validate:"required"`
	// FieldTransformationsConditionExpressionsConditionsConditionsValue: optional
	Value *FieldTransformationsConditionExpressionsConditionsConditionsValue `hcl:"value,block"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsField struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsValue struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsConditionExpressionsConditionsConditionsValueDateValue: optional
	DateValue *FieldTransformationsConditionExpressionsConditionsConditionsValueDateValue `hcl:"date_value,block"`
	// FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValue: optional
	TimeValue *FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type Fields struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type FieldTransformationsInfoTypeTransformations struct {
	// FieldTransformationsInfoTypeTransformationsTransformations: min=1
	Transformations []FieldTransformationsInfoTypeTransformationsTransformations `hcl:"transformations,block" validate:"min=1"`
}

type FieldTransformationsInfoTypeTransformationsTransformations struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsInfoTypes: min=0
	InfoTypes []FieldTransformationsInfoTypeTransformationsTransformationsInfoTypes `hcl:"info_types,block" validate:"min=0"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformation: required
	PrimitiveTransformation *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformation `hcl:"primitive_transformation,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsInfoTypes struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScore: optional
	SensitivityScore *FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScore `hcl:"sensitivity_score,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformation struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfig: optional
	BucketingConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfig `hcl:"bucketing_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig: optional
	CharacterMaskConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig `hcl:"character_mask_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfig: optional
	CryptoDeterministicConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfig `hcl:"crypto_deterministic_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfig: optional
	CryptoHashConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfig `hcl:"crypto_hash_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig: optional
	CryptoReplaceFfxFpeConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig `hcl:"crypto_replace_ffx_fpe_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfig: optional
	DateShiftConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfig `hcl:"date_shift_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfig: optional
	FixedSizeBucketingConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfig `hcl:"fixed_size_bucketing_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfig: optional
	RedactConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfig `hcl:"redact_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig: optional
	ReplaceConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig `hcl:"replace_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfig: optional
	ReplaceDictionaryConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfig `hcl:"replace_dictionary_config,block"`
	// ReplaceWithInfoTypeConfig: optional
	ReplaceWithInfoTypeConfig *ReplaceWithInfoTypeConfig `hcl:"replace_with_info_type_config,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfig: optional
	TimePartConfig *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfig `hcl:"time_part_config,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfig struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBuckets: min=1
	Buckets []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBuckets `hcl:"buckets,block" validate:"min=1"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBuckets struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMax: optional
	Max *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMax `hcl:"max,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMin: optional
	Min *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMin `hcl:"min,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue: required
	ReplacementValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue `hcl:"replacement_value,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMax struct {
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue: optional
	DateValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue `hcl:"date_value,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue: optional
	TimeValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMin struct {
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue: optional
	DateValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue `hcl:"date_value,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue: optional
	TimeValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue struct {
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue: optional
	DateValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue `hcl:"date_value,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue: optional
	TimeValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig struct {
	// MaskingCharacter: string, optional
	MaskingCharacter terra.StringValue `hcl:"masking_character,attr"`
	// NumberToMask: number, optional
	NumberToMask terra.NumberValue `hcl:"number_to_mask,attr"`
	// ReverseOrder: bool, optional
	ReverseOrder terra.BoolValue `hcl:"reverse_order,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore: min=0
	CharactersToIgnore []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore `hcl:"characters_to_ignore,block" validate:"min=0"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore struct {
	// CharactersToSkip: string, optional
	CharactersToSkip terra.StringValue `hcl:"characters_to_skip,attr"`
	// CommonCharactersToIgnore: string, optional
	CommonCharactersToIgnore terra.StringValue `hcl:"common_characters_to_ignore,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfig struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContext: optional
	Context *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContext `hcl:"context,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey: required
	CryptoKey *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey `hcl:"crypto_key,block" validate:"required"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType: required
	SurrogateInfoType *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType `hcl:"surrogate_info_type,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContext struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore: optional
	SensitivityScore *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore `hcl:"sensitivity_score,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfig struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey: required
	CryptoKey *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey `hcl:"crypto_key,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig struct {
	// CommonAlphabet: string, optional
	CommonAlphabet terra.StringValue `hcl:"common_alphabet,attr"`
	// CustomAlphabet: string, optional
	CustomAlphabet terra.StringValue `hcl:"custom_alphabet,attr"`
	// Radix: number, optional
	Radix terra.NumberValue `hcl:"radix,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext: optional
	Context *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext `hcl:"context,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey: required
	CryptoKey *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey `hcl:"crypto_key,block" validate:"required"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType: optional
	SurrogateInfoType *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType `hcl:"surrogate_info_type,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore: optional
	SensitivityScore *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore `hcl:"sensitivity_score,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfig struct {
	// LowerBoundDays: number, required
	LowerBoundDays terra.NumberValue `hcl:"lower_bound_days,attr" validate:"required"`
	// UpperBoundDays: number, required
	UpperBoundDays terra.NumberValue `hcl:"upper_bound_days,attr" validate:"required"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContext: optional
	Context *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContext `hcl:"context,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKey: optional
	CryptoKey *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKey `hcl:"crypto_key,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContext struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKey struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfig struct {
	// BucketSize: number, required
	BucketSize terra.NumberValue `hcl:"bucket_size,attr" validate:"required"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound: required
	LowerBound *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound `hcl:"lower_bound,block" validate:"required"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound: required
	UpperBound *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound `hcl:"upper_bound,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound struct {
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound struct {
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfig struct{}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue: required
	NewValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue `hcl:"new_value,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue: optional
	DateValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue `hcl:"date_value,block"`
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue: optional
	TimeValue *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfig struct {
	// FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList: required
	WordList *FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList `hcl:"word_list,block" validate:"required"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList struct {
	// Words: list of string, required
	Words terra.ListValue[terra.StringValue] `hcl:"words,attr" validate:"required"`
}

type ReplaceWithInfoTypeConfig struct{}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfig struct {
	// PartToExtract: string, required
	PartToExtract terra.StringValue `hcl:"part_to_extract,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformation struct {
	// FieldTransformationsPrimitiveTransformationBucketingConfig: optional
	BucketingConfig *FieldTransformationsPrimitiveTransformationBucketingConfig `hcl:"bucketing_config,block"`
	// FieldTransformationsPrimitiveTransformationCharacterMaskConfig: optional
	CharacterMaskConfig *FieldTransformationsPrimitiveTransformationCharacterMaskConfig `hcl:"character_mask_config,block"`
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfig: optional
	CryptoDeterministicConfig *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfig `hcl:"crypto_deterministic_config,block"`
	// FieldTransformationsPrimitiveTransformationCryptoHashConfig: optional
	CryptoHashConfig *FieldTransformationsPrimitiveTransformationCryptoHashConfig `hcl:"crypto_hash_config,block"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig: optional
	CryptoReplaceFfxFpeConfig *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig `hcl:"crypto_replace_ffx_fpe_config,block"`
	// FieldTransformationsPrimitiveTransformationDateShiftConfig: optional
	DateShiftConfig *FieldTransformationsPrimitiveTransformationDateShiftConfig `hcl:"date_shift_config,block"`
	// FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfig: optional
	FixedSizeBucketingConfig *FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfig `hcl:"fixed_size_bucketing_config,block"`
	// FieldTransformationsPrimitiveTransformationRedactConfig: optional
	RedactConfig *FieldTransformationsPrimitiveTransformationRedactConfig `hcl:"redact_config,block"`
	// FieldTransformationsPrimitiveTransformationReplaceConfig: optional
	ReplaceConfig *FieldTransformationsPrimitiveTransformationReplaceConfig `hcl:"replace_config,block"`
	// FieldTransformationsPrimitiveTransformationReplaceDictionaryConfig: optional
	ReplaceDictionaryConfig *FieldTransformationsPrimitiveTransformationReplaceDictionaryConfig `hcl:"replace_dictionary_config,block"`
	// FieldTransformationsPrimitiveTransformationTimePartConfig: optional
	TimePartConfig *FieldTransformationsPrimitiveTransformationTimePartConfig `hcl:"time_part_config,block"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfig struct {
	// FieldTransformationsPrimitiveTransformationBucketingConfigBuckets: min=0
	Buckets []FieldTransformationsPrimitiveTransformationBucketingConfigBuckets `hcl:"buckets,block" validate:"min=0"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBuckets struct {
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMax: optional
	Max *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMax `hcl:"max,block"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMin: optional
	Min *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMin `hcl:"min,block"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue: required
	ReplacementValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue `hcl:"replacement_value,block" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMax struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue: optional
	DateValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue `hcl:"date_value,block"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue: optional
	TimeValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMin struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue: optional
	DateValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue `hcl:"date_value,block"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue: optional
	TimeValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValue struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue: optional
	DateValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue `hcl:"date_value,block"`
	// FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue: optional
	TimeValue *FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsPrimitiveTransformationCharacterMaskConfig struct {
	// MaskingCharacter: string, optional
	MaskingCharacter terra.StringValue `hcl:"masking_character,attr"`
	// NumberToMask: number, optional
	NumberToMask terra.NumberValue `hcl:"number_to_mask,attr"`
	// ReverseOrder: bool, optional
	ReverseOrder terra.BoolValue `hcl:"reverse_order,attr"`
	// FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore: min=0
	CharactersToIgnore []FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore `hcl:"characters_to_ignore,block" validate:"min=0"`
}

type FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore struct {
	// CharactersToSkip: string, optional
	CharactersToSkip terra.StringValue `hcl:"characters_to_skip,attr"`
	// CommonCharactersToIgnore: string, optional
	CommonCharactersToIgnore terra.StringValue `hcl:"common_characters_to_ignore,attr"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfig struct {
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContext: optional
	Context *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContext `hcl:"context,block"`
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey: optional
	CryptoKey *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey `hcl:"crypto_key,block"`
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType: optional
	SurrogateInfoType *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType `hcl:"surrogate_info_type,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContext struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKey struct {
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoType struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore: optional
	SensitivityScore *FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore `hcl:"sensitivity_score,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfig struct {
	// FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey: optional
	CryptoKey *FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey `hcl:"crypto_key,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKey struct {
	// FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfig struct {
	// CommonAlphabet: string, optional
	CommonAlphabet terra.StringValue `hcl:"common_alphabet,attr"`
	// CustomAlphabet: string, optional
	CustomAlphabet terra.StringValue `hcl:"custom_alphabet,attr"`
	// Radix: number, optional
	Radix terra.NumberValue `hcl:"radix,attr"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext: optional
	Context *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext `hcl:"context,block"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey: optional
	CryptoKey *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey `hcl:"crypto_key,block"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType: optional
	SurrogateInfoType *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType `hcl:"surrogate_info_type,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContext struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKey struct {
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoType struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore: optional
	SensitivityScore *FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore `hcl:"sensitivity_score,block"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScore struct {
	// Score: string, required
	Score terra.StringValue `hcl:"score,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfig struct {
	// LowerBoundDays: number, required
	LowerBoundDays terra.NumberValue `hcl:"lower_bound_days,attr" validate:"required"`
	// UpperBoundDays: number, required
	UpperBoundDays terra.NumberValue `hcl:"upper_bound_days,attr" validate:"required"`
	// FieldTransformationsPrimitiveTransformationDateShiftConfigContext: optional
	Context *FieldTransformationsPrimitiveTransformationDateShiftConfigContext `hcl:"context,block"`
	// FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKey: optional
	CryptoKey *FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKey `hcl:"crypto_key,block"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigContext struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKey struct {
	// FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped: optional
	KmsWrapped *FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped `hcl:"kms_wrapped,block"`
	// FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient: optional
	Transient *FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient `hcl:"transient,block"`
	// FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped: optional
	Unwrapped *FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped `hcl:"unwrapped,block"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrapped struct {
	// CryptoKeyName: string, required
	CryptoKeyName terra.StringValue `hcl:"crypto_key_name,attr" validate:"required"`
	// WrappedKey: string, required
	WrappedKey terra.StringValue `hcl:"wrapped_key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransient struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrapped struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfig struct {
	// BucketSize: number, required
	BucketSize terra.NumberValue `hcl:"bucket_size,attr" validate:"required"`
	// FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound: required
	LowerBound *FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound `hcl:"lower_bound,block" validate:"required"`
	// FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound: required
	UpperBound *FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound `hcl:"upper_bound,block" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBound struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// LowerBoundDateValue: optional
	DateValue *LowerBoundDateValue `hcl:"date_value,block"`
	// LowerBoundTimeValue: optional
	TimeValue *LowerBoundTimeValue `hcl:"time_value,block"`
}

type LowerBoundDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type LowerBoundTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBound struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// UpperBoundDateValue: optional
	DateValue *UpperBoundDateValue `hcl:"date_value,block"`
	// UpperBoundTimeValue: optional
	TimeValue *UpperBoundTimeValue `hcl:"time_value,block"`
}

type UpperBoundDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type UpperBoundTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsPrimitiveTransformationRedactConfig struct{}

type FieldTransformationsPrimitiveTransformationReplaceConfig struct {
	// FieldTransformationsPrimitiveTransformationReplaceConfigNewValue: required
	NewValue *FieldTransformationsPrimitiveTransformationReplaceConfigNewValue `hcl:"new_value,block" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValue struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue: optional
	DateValue *FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue `hcl:"date_value,block"`
	// FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue: optional
	TimeValue *FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue `hcl:"time_value,block"`
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type FieldTransformationsPrimitiveTransformationReplaceDictionaryConfig struct {
	// FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList: optional
	WordList *FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList `hcl:"word_list,block"`
}

type FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordList struct {
	// Words: list of string, required
	Words terra.ListValue[terra.StringValue] `hcl:"words,attr" validate:"required"`
}

type FieldTransformationsPrimitiveTransformationTimePartConfig struct {
	// PartToExtract: string, optional
	PartToExtract terra.StringValue `hcl:"part_to_extract,attr"`
}

type RecordSuppressions struct {
	// RecordSuppressionsCondition: optional
	Condition *RecordSuppressionsCondition `hcl:"condition,block"`
}

type RecordSuppressionsCondition struct {
	// RecordSuppressionsConditionExpressions: optional
	Expressions *RecordSuppressionsConditionExpressions `hcl:"expressions,block"`
}

type RecordSuppressionsConditionExpressions struct {
	// LogicalOperator: string, optional
	LogicalOperator terra.StringValue `hcl:"logical_operator,attr"`
	// RecordSuppressionsConditionExpressionsConditions: optional
	Conditions *RecordSuppressionsConditionExpressionsConditions `hcl:"conditions,block"`
}

type RecordSuppressionsConditionExpressionsConditions struct {
	// RecordSuppressionsConditionExpressionsConditionsConditions: min=0
	Conditions []RecordSuppressionsConditionExpressionsConditionsConditions `hcl:"conditions,block" validate:"min=0"`
}

type RecordSuppressionsConditionExpressionsConditionsConditions struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// RecordSuppressionsConditionExpressionsConditionsConditionsField: required
	Field *RecordSuppressionsConditionExpressionsConditionsConditionsField `hcl:"field,block" validate:"required"`
	// RecordSuppressionsConditionExpressionsConditionsConditionsValue: optional
	Value *RecordSuppressionsConditionExpressionsConditionsConditionsValue `hcl:"value,block"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsField struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValue struct {
	// BooleanValue: bool, optional
	BooleanValue terra.BoolValue `hcl:"boolean_value,attr"`
	// DayOfWeekValue: string, optional
	DayOfWeekValue terra.StringValue `hcl:"day_of_week_value,attr"`
	// FloatValue: number, optional
	FloatValue terra.NumberValue `hcl:"float_value,attr"`
	// IntegerValue: string, optional
	IntegerValue terra.StringValue `hcl:"integer_value,attr"`
	// StringValue: string, optional
	StringValue terra.StringValue `hcl:"string_value,attr"`
	// TimestampValue: string, optional
	TimestampValue terra.StringValue `hcl:"timestamp_value,attr"`
	// RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValue: optional
	DateValue *RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValue `hcl:"date_value,block"`
	// RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValue: optional
	TimeValue *RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValue `hcl:"time_value,block"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValue struct {
	// Day: number, optional
	Day terra.NumberValue `hcl:"day,attr"`
	// Month: number, optional
	Month terra.NumberValue `hcl:"month,attr"`
	// Year: number, optional
	Year terra.NumberValue `hcl:"year,attr"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValue struct {
	// Hours: number, optional
	Hours terra.NumberValue `hcl:"hours,attr"`
	// Minutes: number, optional
	Minutes terra.NumberValue `hcl:"minutes,attr"`
	// Nanos: number, optional
	Nanos terra.NumberValue `hcl:"nanos,attr"`
	// Seconds: number, optional
	Seconds terra.NumberValue `hcl:"seconds,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type DeidentifyConfigAttributes struct {
	ref terra.Reference
}

func (dc DeidentifyConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DeidentifyConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigAttributes {
	return DeidentifyConfigAttributes{ref: ref}
}

func (dc DeidentifyConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DeidentifyConfigAttributes) ImageTransformations() terra.ListValue[ImageTransformationsAttributes] {
	return terra.ReferenceAsList[ImageTransformationsAttributes](dc.ref.Append("image_transformations"))
}

func (dc DeidentifyConfigAttributes) InfoTypeTransformations() terra.ListValue[DeidentifyConfigInfoTypeTransformationsAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsAttributes](dc.ref.Append("info_type_transformations"))
}

func (dc DeidentifyConfigAttributes) RecordTransformations() terra.ListValue[RecordTransformationsAttributes] {
	return terra.ReferenceAsList[RecordTransformationsAttributes](dc.ref.Append("record_transformations"))
}

type ImageTransformationsAttributes struct {
	ref terra.Reference
}

func (it ImageTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it ImageTransformationsAttributes) InternalWithRef(ref terra.Reference) ImageTransformationsAttributes {
	return ImageTransformationsAttributes{ref: ref}
}

func (it ImageTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it ImageTransformationsAttributes) Transforms() terra.ListValue[TransformsAttributes] {
	return terra.ReferenceAsList[TransformsAttributes](it.ref.Append("transforms"))
}

type TransformsAttributes struct {
	ref terra.Reference
}

func (t TransformsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TransformsAttributes) InternalWithRef(ref terra.Reference) TransformsAttributes {
	return TransformsAttributes{ref: ref}
}

func (t TransformsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TransformsAttributes) AllInfoTypes() terra.ListValue[AllInfoTypesAttributes] {
	return terra.ReferenceAsList[AllInfoTypesAttributes](t.ref.Append("all_info_types"))
}

func (t TransformsAttributes) AllText() terra.ListValue[AllTextAttributes] {
	return terra.ReferenceAsList[AllTextAttributes](t.ref.Append("all_text"))
}

func (t TransformsAttributes) RedactionColor() terra.ListValue[RedactionColorAttributes] {
	return terra.ReferenceAsList[RedactionColorAttributes](t.ref.Append("redaction_color"))
}

func (t TransformsAttributes) SelectedInfoTypes() terra.ListValue[SelectedInfoTypesAttributes] {
	return terra.ReferenceAsList[SelectedInfoTypesAttributes](t.ref.Append("selected_info_types"))
}

type AllInfoTypesAttributes struct {
	ref terra.Reference
}

func (ait AllInfoTypesAttributes) InternalRef() (terra.Reference, error) {
	return ait.ref, nil
}

func (ait AllInfoTypesAttributes) InternalWithRef(ref terra.Reference) AllInfoTypesAttributes {
	return AllInfoTypesAttributes{ref: ref}
}

func (ait AllInfoTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ait.ref.InternalTokens()
}

type AllTextAttributes struct {
	ref terra.Reference
}

func (at AllTextAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at AllTextAttributes) InternalWithRef(ref terra.Reference) AllTextAttributes {
	return AllTextAttributes{ref: ref}
}

func (at AllTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

type RedactionColorAttributes struct {
	ref terra.Reference
}

func (rc RedactionColorAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc RedactionColorAttributes) InternalWithRef(ref terra.Reference) RedactionColorAttributes {
	return RedactionColorAttributes{ref: ref}
}

func (rc RedactionColorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc RedactionColorAttributes) Blue() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("blue"))
}

func (rc RedactionColorAttributes) Green() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("green"))
}

func (rc RedactionColorAttributes) Red() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("red"))
}

type SelectedInfoTypesAttributes struct {
	ref terra.Reference
}

func (sit SelectedInfoTypesAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit SelectedInfoTypesAttributes) InternalWithRef(ref terra.Reference) SelectedInfoTypesAttributes {
	return SelectedInfoTypesAttributes{ref: ref}
}

func (sit SelectedInfoTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit SelectedInfoTypesAttributes) InfoTypes() terra.ListValue[SelectedInfoTypesInfoTypesAttributes] {
	return terra.ReferenceAsList[SelectedInfoTypesInfoTypesAttributes](sit.ref.Append("info_types"))
}

type SelectedInfoTypesInfoTypesAttributes struct {
	ref terra.Reference
}

func (it SelectedInfoTypesInfoTypesAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it SelectedInfoTypesInfoTypesAttributes) InternalWithRef(ref terra.Reference) SelectedInfoTypesInfoTypesAttributes {
	return SelectedInfoTypesInfoTypesAttributes{ref: ref}
}

func (it SelectedInfoTypesInfoTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it SelectedInfoTypesInfoTypesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("name"))
}

func (it SelectedInfoTypesInfoTypesAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("version"))
}

func (it SelectedInfoTypesInfoTypesAttributes) SensitivityScore() terra.ListValue[SelectedInfoTypesInfoTypesSensitivityScoreAttributes] {
	return terra.ReferenceAsList[SelectedInfoTypesInfoTypesSensitivityScoreAttributes](it.ref.Append("sensitivity_score"))
}

type SelectedInfoTypesInfoTypesSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss SelectedInfoTypesInfoTypesSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss SelectedInfoTypesInfoTypesSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) SelectedInfoTypesInfoTypesSensitivityScoreAttributes {
	return SelectedInfoTypesInfoTypesSensitivityScoreAttributes{ref: ref}
}

func (ss SelectedInfoTypesInfoTypesSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss SelectedInfoTypesInfoTypesSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type DeidentifyConfigInfoTypeTransformationsAttributes struct {
	ref terra.Reference
}

func (itt DeidentifyConfigInfoTypeTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return itt.ref, nil
}

func (itt DeidentifyConfigInfoTypeTransformationsAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsAttributes {
	return DeidentifyConfigInfoTypeTransformationsAttributes{ref: ref}
}

func (itt DeidentifyConfigInfoTypeTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return itt.ref.InternalTokens()
}

func (itt DeidentifyConfigInfoTypeTransformationsAttributes) Transformations() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsAttributes](itt.ref.Append("transformations"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsAttributes struct {
	ref terra.Reference
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsAttributes{ref: ref}
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsAttributes) InfoTypes() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes](t.ref.Append("info_types"))
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsAttributes) PrimitiveTransformation() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes](t.ref.Append("primitive_transformation"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes struct {
	ref terra.Reference
}

func (it DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes{ref: ref}
}

func (it DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("name"))
}

func (it DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("version"))
}

func (it DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesAttributes) SensitivityScore() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes](it.ref.Append("sensitivity_score"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes{ref: ref}
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes struct {
	ref terra.Reference
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes{ref: ref}
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) ReplaceWithInfoTypeConfig() terra.BoolValue {
	return terra.ReferenceAsBool(pt.ref.Append("replace_with_info_type_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) BucketingConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes](pt.ref.Append("bucketing_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CharacterMaskConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes](pt.ref.Append("character_mask_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CryptoDeterministicConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes](pt.ref.Append("crypto_deterministic_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CryptoHashConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes](pt.ref.Append("crypto_hash_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CryptoReplaceFfxFpeConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes](pt.ref.Append("crypto_replace_ffx_fpe_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) DateShiftConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes](pt.ref.Append("date_shift_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) FixedSizeBucketingConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes](pt.ref.Append("fixed_size_bucketing_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) RedactConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes](pt.ref.Append("redact_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) ReplaceConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes](pt.ref.Append("replace_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) ReplaceDictionaryConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes](pt.ref.Append("replace_dictionary_config"))
}

func (pt DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) TimePartConfig() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes](pt.ref.Append("time_part_config"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes struct {
	ref terra.Reference
}

func (bc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes{ref: ref}
}

func (bc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) Buckets() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes](bc.ref.Append("buckets"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes struct {
	ref terra.Reference
}

func (b DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes{ref: ref}
}

func (b DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) Max() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes](b.ref.Append("max"))
}

func (b DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) Min() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes](b.ref.Append("min"))
}

func (b DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) ReplacementValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes](b.ref.Append("replacement_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes struct {
	ref terra.Reference
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes{ref: ref}
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("day_of_week_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("float_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("integer_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("string_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("timestamp_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) DateValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes](m.ref.Append("date_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) TimeValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes](m.ref.Append("time_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes struct {
	ref terra.Reference
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes{ref: ref}
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes struct {
	ref terra.Reference
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes{ref: ref}
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes struct {
	ref terra.Reference
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes{ref: ref}
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("day_of_week_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("float_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("integer_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("string_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("timestamp_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) DateValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes](m.ref.Append("date_value"))
}

func (m DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) TimeValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes](m.ref.Append("time_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes struct {
	ref terra.Reference
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes{ref: ref}
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes struct {
	ref terra.Reference
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes{ref: ref}
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes struct {
	ref terra.Reference
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalRef() (terra.Reference, error) {
	return rv.ref, nil
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes{ref: ref}
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rv.ref.InternalTokens()
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("day_of_week_value"))
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(rv.ref.Append("float_value"))
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("integer_value"))
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("string_value"))
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("timestamp_value"))
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) DateValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes](rv.ref.Append("date_value"))
}

func (rv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) TimeValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes](rv.ref.Append("time_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes{ref: ref}
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes{ref: ref}
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes struct {
	ref terra.Reference
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalRef() (terra.Reference, error) {
	return cmc.ref, nil
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes{ref: ref}
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmc.ref.InternalTokens()
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) MaskingCharacter() terra.StringValue {
	return terra.ReferenceAsString(cmc.ref.Append("masking_character"))
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) NumberToMask() terra.NumberValue {
	return terra.ReferenceAsNumber(cmc.ref.Append("number_to_mask"))
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) ReverseOrder() terra.BoolValue {
	return terra.ReferenceAsBool(cmc.ref.Append("reverse_order"))
}

func (cmc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) CharactersToIgnore() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes](cmc.ref.Append("characters_to_ignore"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes struct {
	ref terra.Reference
}

func (cti DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalRef() (terra.Reference, error) {
	return cti.ref, nil
}

func (cti DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes{ref: ref}
}

func (cti DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cti.ref.InternalTokens()
}

func (cti DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) CharactersToSkip() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("characters_to_skip"))
}

func (cti DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) CommonCharactersToIgnore() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("common_characters_to_ignore"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes struct {
	ref terra.Reference
}

func (cdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalRef() (terra.Reference, error) {
	return cdc.ref, nil
}

func (cdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes{ref: ref}
}

func (cdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cdc.ref.InternalTokens()
}

func (cdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) Context() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes](cdc.ref.Append("context"))
}

func (cdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) CryptoKey() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes](cdc.ref.Append("crypto_key"))
}

func (cdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) SurrogateInfoType() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes](cdc.ref.Append("surrogate_info_type"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes struct {
	ref terra.Reference
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes{ref: ref}
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes{ref: ref}
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) Transient() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes struct {
	ref terra.Reference
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes{ref: ref}
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("name"))
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("version"))
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) SensitivityScore() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes](sit.ref.Append("sensitivity_score"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes{ref: ref}
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes struct {
	ref terra.Reference
}

func (chc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalRef() (terra.Reference, error) {
	return chc.ref, nil
}

func (chc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes{ref: ref}
}

func (chc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return chc.ref.InternalTokens()
}

func (chc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) CryptoKey() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes](chc.ref.Append("crypto_key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes{ref: ref}
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) Transient() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes struct {
	ref terra.Reference
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalRef() (terra.Reference, error) {
	return crffc.ref, nil
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes{ref: ref}
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return crffc.ref.InternalTokens()
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CommonAlphabet() terra.StringValue {
	return terra.ReferenceAsString(crffc.ref.Append("common_alphabet"))
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CustomAlphabet() terra.StringValue {
	return terra.ReferenceAsString(crffc.ref.Append("custom_alphabet"))
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) Radix() terra.NumberValue {
	return terra.ReferenceAsNumber(crffc.ref.Append("radix"))
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) Context() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes](crffc.ref.Append("context"))
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CryptoKey() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes](crffc.ref.Append("crypto_key"))
}

func (crffc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) SurrogateInfoType() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes](crffc.ref.Append("surrogate_info_type"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes struct {
	ref terra.Reference
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes{ref: ref}
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes{ref: ref}
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) Transient() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes struct {
	ref terra.Reference
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes{ref: ref}
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("name"))
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("version"))
}

func (sit DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) SensitivityScore() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes](sit.ref.Append("sensitivity_score"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes{ref: ref}
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes struct {
	ref terra.Reference
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalRef() (terra.Reference, error) {
	return dsc.ref, nil
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes{ref: ref}
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsc.ref.InternalTokens()
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) LowerBoundDays() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("lower_bound_days"))
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) UpperBoundDays() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("upper_bound_days"))
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) Context() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes](dsc.ref.Append("context"))
}

func (dsc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) CryptoKey() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes](dsc.ref.Append("crypto_key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes struct {
	ref terra.Reference
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes{ref: ref}
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes{ref: ref}
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) Transient() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes struct {
	ref terra.Reference
}

func (fsbc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalRef() (terra.Reference, error) {
	return fsbc.ref, nil
}

func (fsbc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes{ref: ref}
}

func (fsbc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fsbc.ref.InternalTokens()
}

func (fsbc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) BucketSize() terra.NumberValue {
	return terra.ReferenceAsNumber(fsbc.ref.Append("bucket_size"))
}

func (fsbc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) LowerBound() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes](fsbc.ref.Append("lower_bound"))
}

func (fsbc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) UpperBound() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes](fsbc.ref.Append("upper_bound"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes struct {
	ref terra.Reference
}

func (lb DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes{ref: ref}
}

func (lb DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("float_value"))
}

func (lb DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("integer_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes struct {
	ref terra.Reference
}

func (ub DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalRef() (terra.Reference, error) {
	return ub.ref, nil
}

func (ub DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes{ref: ref}
}

func (ub DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ub.ref.InternalTokens()
}

func (ub DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ub.ref.Append("float_value"))
}

func (ub DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(ub.ref.Append("integer_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes struct {
	ref terra.Reference
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes{ref: ref}
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes struct {
	ref terra.Reference
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes{ref: ref}
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) NewValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes](rc.ref.Append("new_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes struct {
	ref terra.Reference
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalRef() (terra.Reference, error) {
	return nv.ref, nil
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes{ref: ref}
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nv.ref.InternalTokens()
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(nv.ref.Append("boolean_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("day_of_week_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(nv.ref.Append("float_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) IntegerValue() terra.NumberValue {
	return terra.ReferenceAsNumber(nv.ref.Append("integer_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("string_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("timestamp_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) DateValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes](nv.ref.Append("date_value"))
}

func (nv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) TimeValue() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes](nv.ref.Append("time_value"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes{ref: ref}
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes{ref: ref}
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes struct {
	ref terra.Reference
}

func (rdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalRef() (terra.Reference, error) {
	return rdc.ref, nil
}

func (rdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes{ref: ref}
}

func (rdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rdc.ref.InternalTokens()
}

func (rdc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) WordList() terra.ListValue[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes] {
	return terra.ReferenceAsList[DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes](rdc.ref.Append("word_list"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes struct {
	ref terra.Reference
}

func (wl DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes{ref: ref}
}

func (wl DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) Words() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](wl.ref.Append("words"))
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes struct {
	ref terra.Reference
}

func (tpc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalRef() (terra.Reference, error) {
	return tpc.ref, nil
}

func (tpc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalWithRef(ref terra.Reference) DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes {
	return DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes{ref: ref}
}

func (tpc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tpc.ref.InternalTokens()
}

func (tpc DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) PartToExtract() terra.StringValue {
	return terra.ReferenceAsString(tpc.ref.Append("part_to_extract"))
}

type RecordTransformationsAttributes struct {
	ref terra.Reference
}

func (rt RecordTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt RecordTransformationsAttributes) InternalWithRef(ref terra.Reference) RecordTransformationsAttributes {
	return RecordTransformationsAttributes{ref: ref}
}

func (rt RecordTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt RecordTransformationsAttributes) FieldTransformations() terra.ListValue[FieldTransformationsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsAttributes](rt.ref.Append("field_transformations"))
}

func (rt RecordTransformationsAttributes) RecordSuppressions() terra.ListValue[RecordSuppressionsAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsAttributes](rt.ref.Append("record_suppressions"))
}

type FieldTransformationsAttributes struct {
	ref terra.Reference
}

func (ft FieldTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return ft.ref, nil
}

func (ft FieldTransformationsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsAttributes {
	return FieldTransformationsAttributes{ref: ref}
}

func (ft FieldTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ft.ref.InternalTokens()
}

func (ft FieldTransformationsAttributes) Condition() terra.ListValue[FieldTransformationsConditionAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionAttributes](ft.ref.Append("condition"))
}

func (ft FieldTransformationsAttributes) Fields() terra.ListValue[FieldsAttributes] {
	return terra.ReferenceAsList[FieldsAttributes](ft.ref.Append("fields"))
}

func (ft FieldTransformationsAttributes) InfoTypeTransformations() terra.ListValue[FieldTransformationsInfoTypeTransformationsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsAttributes](ft.ref.Append("info_type_transformations"))
}

func (ft FieldTransformationsAttributes) PrimitiveTransformation() terra.ListValue[FieldTransformationsPrimitiveTransformationAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationAttributes](ft.ref.Append("primitive_transformation"))
}

type FieldTransformationsConditionAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsConditionAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsConditionAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionAttributes {
	return FieldTransformationsConditionAttributes{ref: ref}
}

func (c FieldTransformationsConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsConditionAttributes) Expressions() terra.ListValue[FieldTransformationsConditionExpressionsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsAttributes](c.ref.Append("expressions"))
}

type FieldTransformationsConditionExpressionsAttributes struct {
	ref terra.Reference
}

func (e FieldTransformationsConditionExpressionsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e FieldTransformationsConditionExpressionsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsAttributes {
	return FieldTransformationsConditionExpressionsAttributes{ref: ref}
}

func (e FieldTransformationsConditionExpressionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e FieldTransformationsConditionExpressionsAttributes) LogicalOperator() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("logical_operator"))
}

func (e FieldTransformationsConditionExpressionsAttributes) Conditions() terra.ListValue[FieldTransformationsConditionExpressionsConditionsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsConditionsAttributes](e.ref.Append("conditions"))
}

type FieldTransformationsConditionExpressionsConditionsAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsConditionExpressionsConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsConditionExpressionsConditionsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsConditionsAttributes {
	return FieldTransformationsConditionExpressionsConditionsAttributes{ref: ref}
}

func (c FieldTransformationsConditionExpressionsConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsConditionExpressionsConditionsAttributes) Conditions() terra.ListValue[FieldTransformationsConditionExpressionsConditionsConditionsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsConditionsConditionsAttributes](c.ref.Append("conditions"))
}

type FieldTransformationsConditionExpressionsConditionsConditionsAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsConditionExpressionsConditionsConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsConditionExpressionsConditionsConditionsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsConditionsConditionsAttributes {
	return FieldTransformationsConditionExpressionsConditionsConditionsAttributes{ref: ref}
}

func (c FieldTransformationsConditionExpressionsConditionsConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsConditionExpressionsConditionsConditionsAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("operator"))
}

func (c FieldTransformationsConditionExpressionsConditionsConditionsAttributes) Field() terra.ListValue[FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes](c.ref.Append("field"))
}

func (c FieldTransformationsConditionExpressionsConditionsConditionsAttributes) Value() terra.ListValue[FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes](c.ref.Append("value"))
}

type FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes struct {
	ref terra.Reference
}

func (f FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes {
	return FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes{ref: ref}
}

func (f FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f FieldTransformationsConditionExpressionsConditionsConditionsFieldAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes struct {
	ref terra.Reference
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes {
	return FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes{ref: ref}
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("boolean_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("day_of_week_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(v.ref.Append("float_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("integer_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("string_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("timestamp_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) DateValue() terra.ListValue[FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes](v.ref.Append("date_value"))
}

func (v FieldTransformationsConditionExpressionsConditionsConditionsValueAttributes) TimeValue() terra.ListValue[FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes](v.ref.Append("time_value"))
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes {
	return FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes {
	return FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldsAttributes struct {
	ref terra.Reference
}

func (f FieldsAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f FieldsAttributes) InternalWithRef(ref terra.Reference) FieldsAttributes {
	return FieldsAttributes{ref: ref}
}

func (f FieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f FieldsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsAttributes struct {
	ref terra.Reference
}

func (itt FieldTransformationsInfoTypeTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return itt.ref, nil
}

func (itt FieldTransformationsInfoTypeTransformationsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsAttributes {
	return FieldTransformationsInfoTypeTransformationsAttributes{ref: ref}
}

func (itt FieldTransformationsInfoTypeTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return itt.ref.InternalTokens()
}

func (itt FieldTransformationsInfoTypeTransformationsAttributes) Transformations() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsAttributes](itt.ref.Append("transformations"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsAttributes{ref: ref}
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsAttributes) InfoTypes() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes](t.ref.Append("info_types"))
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsAttributes) PrimitiveTransformation() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes](t.ref.Append("primitive_transformation"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes struct {
	ref terra.Reference
}

func (it FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes{ref: ref}
}

func (it FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("name"))
}

func (it FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("version"))
}

func (it FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesAttributes) SensitivityScore() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes](it.ref.Append("sensitivity_score"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes{ref: ref}
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes struct {
	ref terra.Reference
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes{ref: ref}
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) BucketingConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes](pt.ref.Append("bucketing_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CharacterMaskConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes](pt.ref.Append("character_mask_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CryptoDeterministicConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes](pt.ref.Append("crypto_deterministic_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CryptoHashConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes](pt.ref.Append("crypto_hash_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) CryptoReplaceFfxFpeConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes](pt.ref.Append("crypto_replace_ffx_fpe_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) DateShiftConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes](pt.ref.Append("date_shift_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) FixedSizeBucketingConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes](pt.ref.Append("fixed_size_bucketing_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) RedactConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes](pt.ref.Append("redact_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) ReplaceConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes](pt.ref.Append("replace_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) ReplaceDictionaryConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes](pt.ref.Append("replace_dictionary_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) ReplaceWithInfoTypeConfig() terra.ListValue[ReplaceWithInfoTypeConfigAttributes] {
	return terra.ReferenceAsList[ReplaceWithInfoTypeConfigAttributes](pt.ref.Append("replace_with_info_type_config"))
}

func (pt FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationAttributes) TimePartConfig() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes](pt.ref.Append("time_part_config"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes struct {
	ref terra.Reference
}

func (bc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes{ref: ref}
}

func (bc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigAttributes) Buckets() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes](bc.ref.Append("buckets"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes struct {
	ref terra.Reference
}

func (b FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes{ref: ref}
}

func (b FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) Max() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes](b.ref.Append("max"))
}

func (b FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) Min() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes](b.ref.Append("min"))
}

func (b FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) ReplacementValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes](b.ref.Append("replacement_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes struct {
	ref terra.Reference
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes{ref: ref}
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("day_of_week_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("float_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("integer_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("string_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("timestamp_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) DateValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes](m.ref.Append("date_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) TimeValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes](m.ref.Append("time_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes struct {
	ref terra.Reference
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes{ref: ref}
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("day_of_week_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("float_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("integer_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("string_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("timestamp_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) DateValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes](m.ref.Append("date_value"))
}

func (m FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) TimeValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes](m.ref.Append("time_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes struct {
	ref terra.Reference
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalRef() (terra.Reference, error) {
	return rv.ref, nil
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes{ref: ref}
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rv.ref.InternalTokens()
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("day_of_week_value"))
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(rv.ref.Append("float_value"))
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("integer_value"))
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("string_value"))
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("timestamp_value"))
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) DateValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes](rv.ref.Append("date_value"))
}

func (rv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) TimeValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes](rv.ref.Append("time_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes struct {
	ref terra.Reference
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalRef() (terra.Reference, error) {
	return cmc.ref, nil
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes{ref: ref}
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmc.ref.InternalTokens()
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) MaskingCharacter() terra.StringValue {
	return terra.ReferenceAsString(cmc.ref.Append("masking_character"))
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) NumberToMask() terra.NumberValue {
	return terra.ReferenceAsNumber(cmc.ref.Append("number_to_mask"))
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) ReverseOrder() terra.BoolValue {
	return terra.ReferenceAsBool(cmc.ref.Append("reverse_order"))
}

func (cmc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) CharactersToIgnore() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes](cmc.ref.Append("characters_to_ignore"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes struct {
	ref terra.Reference
}

func (cti FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalRef() (terra.Reference, error) {
	return cti.ref, nil
}

func (cti FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes{ref: ref}
}

func (cti FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cti.ref.InternalTokens()
}

func (cti FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) CharactersToSkip() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("characters_to_skip"))
}

func (cti FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) CommonCharactersToIgnore() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("common_characters_to_ignore"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes struct {
	ref terra.Reference
}

func (cdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalRef() (terra.Reference, error) {
	return cdc.ref, nil
}

func (cdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes{ref: ref}
}

func (cdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cdc.ref.InternalTokens()
}

func (cdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) Context() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes](cdc.ref.Append("context"))
}

func (cdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes](cdc.ref.Append("crypto_key"))
}

func (cdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) SurrogateInfoType() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes](cdc.ref.Append("surrogate_info_type"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes{ref: ref}
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes struct {
	ref terra.Reference
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes{ref: ref}
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("name"))
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("version"))
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) SensitivityScore() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes](sit.ref.Append("sensitivity_score"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes{ref: ref}
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes struct {
	ref terra.Reference
}

func (chc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalRef() (terra.Reference, error) {
	return chc.ref, nil
}

func (chc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes{ref: ref}
}

func (chc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return chc.ref.InternalTokens()
}

func (chc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes](chc.ref.Append("crypto_key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes struct {
	ref terra.Reference
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalRef() (terra.Reference, error) {
	return crffc.ref, nil
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes{ref: ref}
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return crffc.ref.InternalTokens()
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CommonAlphabet() terra.StringValue {
	return terra.ReferenceAsString(crffc.ref.Append("common_alphabet"))
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CustomAlphabet() terra.StringValue {
	return terra.ReferenceAsString(crffc.ref.Append("custom_alphabet"))
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) Radix() terra.NumberValue {
	return terra.ReferenceAsNumber(crffc.ref.Append("radix"))
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) Context() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes](crffc.ref.Append("context"))
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes](crffc.ref.Append("crypto_key"))
}

func (crffc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) SurrogateInfoType() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes](crffc.ref.Append("surrogate_info_type"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes{ref: ref}
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes struct {
	ref terra.Reference
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes{ref: ref}
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("name"))
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("version"))
}

func (sit FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) SensitivityScore() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes](sit.ref.Append("sensitivity_score"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes{ref: ref}
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes struct {
	ref terra.Reference
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalRef() (terra.Reference, error) {
	return dsc.ref, nil
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes{ref: ref}
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsc.ref.InternalTokens()
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) LowerBoundDays() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("lower_bound_days"))
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) UpperBoundDays() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("upper_bound_days"))
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) Context() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes](dsc.ref.Append("context"))
}

func (dsc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes](dsc.ref.Append("crypto_key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes{ref: ref}
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes struct {
	ref terra.Reference
}

func (fsbc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalRef() (terra.Reference, error) {
	return fsbc.ref, nil
}

func (fsbc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes{ref: ref}
}

func (fsbc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fsbc.ref.InternalTokens()
}

func (fsbc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) BucketSize() terra.NumberValue {
	return terra.ReferenceAsNumber(fsbc.ref.Append("bucket_size"))
}

func (fsbc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) LowerBound() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes](fsbc.ref.Append("lower_bound"))
}

func (fsbc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) UpperBound() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes](fsbc.ref.Append("upper_bound"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes struct {
	ref terra.Reference
}

func (lb FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes{ref: ref}
}

func (lb FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("float_value"))
}

func (lb FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("integer_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes struct {
	ref terra.Reference
}

func (ub FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalRef() (terra.Reference, error) {
	return ub.ref, nil
}

func (ub FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes{ref: ref}
}

func (ub FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ub.ref.InternalTokens()
}

func (ub FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ub.ref.Append("float_value"))
}

func (ub FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(ub.ref.Append("integer_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes struct {
	ref terra.Reference
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes{ref: ref}
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes struct {
	ref terra.Reference
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes{ref: ref}
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigAttributes) NewValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes](rc.ref.Append("new_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes struct {
	ref terra.Reference
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalRef() (terra.Reference, error) {
	return nv.ref, nil
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes{ref: ref}
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nv.ref.InternalTokens()
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(nv.ref.Append("boolean_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("day_of_week_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(nv.ref.Append("float_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("integer_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("string_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("timestamp_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) DateValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes](nv.ref.Append("date_value"))
}

func (nv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) TimeValue() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes](nv.ref.Append("time_value"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes struct {
	ref terra.Reference
}

func (rdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalRef() (terra.Reference, error) {
	return rdc.ref, nil
}

func (rdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes{ref: ref}
}

func (rdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rdc.ref.InternalTokens()
}

func (rdc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) WordList() terra.ListValue[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes] {
	return terra.ReferenceAsList[FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes](rdc.ref.Append("word_list"))
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes struct {
	ref terra.Reference
}

func (wl FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes{ref: ref}
}

func (wl FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) Words() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](wl.ref.Append("words"))
}

type ReplaceWithInfoTypeConfigAttributes struct {
	ref terra.Reference
}

func (rwitc ReplaceWithInfoTypeConfigAttributes) InternalRef() (terra.Reference, error) {
	return rwitc.ref, nil
}

func (rwitc ReplaceWithInfoTypeConfigAttributes) InternalWithRef(ref terra.Reference) ReplaceWithInfoTypeConfigAttributes {
	return ReplaceWithInfoTypeConfigAttributes{ref: ref}
}

func (rwitc ReplaceWithInfoTypeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rwitc.ref.InternalTokens()
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes struct {
	ref terra.Reference
}

func (tpc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalRef() (terra.Reference, error) {
	return tpc.ref, nil
}

func (tpc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes {
	return FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes{ref: ref}
}

func (tpc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tpc.ref.InternalTokens()
}

func (tpc FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigAttributes) PartToExtract() terra.StringValue {
	return terra.ReferenceAsString(tpc.ref.Append("part_to_extract"))
}

type FieldTransformationsPrimitiveTransformationAttributes struct {
	ref terra.Reference
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationAttributes {
	return FieldTransformationsPrimitiveTransformationAttributes{ref: ref}
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) BucketingConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigAttributes](pt.ref.Append("bucketing_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) CharacterMaskConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes](pt.ref.Append("character_mask_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) CryptoDeterministicConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes](pt.ref.Append("crypto_deterministic_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) CryptoHashConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes](pt.ref.Append("crypto_hash_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) CryptoReplaceFfxFpeConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes](pt.ref.Append("crypto_replace_ffx_fpe_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) DateShiftConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes](pt.ref.Append("date_shift_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) FixedSizeBucketingConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes](pt.ref.Append("fixed_size_bucketing_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) RedactConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationRedactConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationRedactConfigAttributes](pt.ref.Append("redact_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) ReplaceConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationReplaceConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationReplaceConfigAttributes](pt.ref.Append("replace_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) ReplaceDictionaryConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes](pt.ref.Append("replace_dictionary_config"))
}

func (pt FieldTransformationsPrimitiveTransformationAttributes) TimePartConfig() terra.ListValue[FieldTransformationsPrimitiveTransformationTimePartConfigAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationTimePartConfigAttributes](pt.ref.Append("time_part_config"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigAttributes struct {
	ref terra.Reference
}

func (bc FieldTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc FieldTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigAttributes{ref: ref}
}

func (bc FieldTransformationsPrimitiveTransformationBucketingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc FieldTransformationsPrimitiveTransformationBucketingConfigAttributes) Buckets() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes](bc.ref.Append("buckets"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes struct {
	ref terra.Reference
}

func (b FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes{ref: ref}
}

func (b FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) Max() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes](b.ref.Append("max"))
}

func (b FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) Min() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes](b.ref.Append("min"))
}

func (b FieldTransformationsPrimitiveTransformationBucketingConfigBucketsAttributes) ReplacementValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes](b.ref.Append("replacement_value"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes struct {
	ref terra.Reference
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes{ref: ref}
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("boolean_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("day_of_week_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("float_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("integer_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("string_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("timestamp_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) DateValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes](m.ref.Append("date_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxAttributes) TimeValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes](m.ref.Append("time_value"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes struct {
	ref terra.Reference
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes{ref: ref}
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("boolean_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("day_of_week_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("float_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("integer_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("string_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("timestamp_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) DateValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes](m.ref.Append("date_value"))
}

func (m FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinAttributes) TimeValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes](m.ref.Append("time_value"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes struct {
	ref terra.Reference
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalRef() (terra.Reference, error) {
	return rv.ref, nil
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes{ref: ref}
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rv.ref.InternalTokens()
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(rv.ref.Append("boolean_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("day_of_week_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(rv.ref.Append("float_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("integer_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("string_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("timestamp_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) DateValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes](rv.ref.Append("date_value"))
}

func (rv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueAttributes) TimeValue() terra.ListValue[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes](rv.ref.Append("time_value"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes {
	return FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes struct {
	ref terra.Reference
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalRef() (terra.Reference, error) {
	return cmc.ref, nil
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes {
	return FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes{ref: ref}
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmc.ref.InternalTokens()
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) MaskingCharacter() terra.StringValue {
	return terra.ReferenceAsString(cmc.ref.Append("masking_character"))
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) NumberToMask() terra.NumberValue {
	return terra.ReferenceAsNumber(cmc.ref.Append("number_to_mask"))
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) ReverseOrder() terra.BoolValue {
	return terra.ReferenceAsBool(cmc.ref.Append("reverse_order"))
}

func (cmc FieldTransformationsPrimitiveTransformationCharacterMaskConfigAttributes) CharactersToIgnore() terra.ListValue[FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes](cmc.ref.Append("characters_to_ignore"))
}

type FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes struct {
	ref terra.Reference
}

func (cti FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalRef() (terra.Reference, error) {
	return cti.ref, nil
}

func (cti FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes {
	return FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes{ref: ref}
}

func (cti FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cti.ref.InternalTokens()
}

func (cti FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) CharactersToSkip() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("characters_to_skip"))
}

func (cti FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreAttributes) CommonCharactersToIgnore() terra.StringValue {
	return terra.ReferenceAsString(cti.ref.Append("common_characters_to_ignore"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes struct {
	ref terra.Reference
}

func (cdc FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalRef() (terra.Reference, error) {
	return cdc.ref, nil
}

func (cdc FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes{ref: ref}
}

func (cdc FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cdc.ref.InternalTokens()
}

func (cdc FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) Context() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes](cdc.ref.Append("context"))
}

func (cdc FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes](cdc.ref.Append("crypto_key"))
}

func (cdc FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigAttributes) SurrogateInfoType() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes](cdc.ref.Append("surrogate_info_type"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes{ref: ref}
}

func (c FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes struct {
	ref terra.Reference
}

func (sit FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes{ref: ref}
}

func (sit FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("name"))
}

func (sit FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("version"))
}

func (sit FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeAttributes) SensitivityScore() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes](sit.ref.Append("sensitivity_score"))
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes{ref: ref}
}

func (ss FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes struct {
	ref terra.Reference
}

func (chc FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalRef() (terra.Reference, error) {
	return chc.ref, nil
}

func (chc FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes{ref: ref}
}

func (chc FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return chc.ref.InternalTokens()
}

func (chc FieldTransformationsPrimitiveTransformationCryptoHashConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes](chc.ref.Append("crypto_key"))
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes struct {
	ref terra.Reference
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalRef() (terra.Reference, error) {
	return crffc.ref, nil
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes{ref: ref}
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return crffc.ref.InternalTokens()
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CommonAlphabet() terra.StringValue {
	return terra.ReferenceAsString(crffc.ref.Append("common_alphabet"))
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CustomAlphabet() terra.StringValue {
	return terra.ReferenceAsString(crffc.ref.Append("custom_alphabet"))
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) Radix() terra.NumberValue {
	return terra.ReferenceAsNumber(crffc.ref.Append("radix"))
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) Context() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes](crffc.ref.Append("context"))
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes](crffc.ref.Append("crypto_key"))
}

func (crffc FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigAttributes) SurrogateInfoType() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes](crffc.ref.Append("surrogate_info_type"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes{ref: ref}
}

func (c FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes struct {
	ref terra.Reference
}

func (sit FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalRef() (terra.Reference, error) {
	return sit.ref, nil
}

func (sit FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes{ref: ref}
}

func (sit FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sit.ref.InternalTokens()
}

func (sit FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("name"))
}

func (sit FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(sit.ref.Append("version"))
}

func (sit FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeAttributes) SensitivityScore() terra.ListValue[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes](sit.ref.Append("sensitivity_score"))
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes struct {
	ref terra.Reference
}

func (ss FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes {
	return FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes{ref: ref}
}

func (ss FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreAttributes) Score() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("score"))
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes struct {
	ref terra.Reference
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalRef() (terra.Reference, error) {
	return dsc.ref, nil
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes {
	return FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes{ref: ref}
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsc.ref.InternalTokens()
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) LowerBoundDays() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("lower_bound_days"))
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) UpperBoundDays() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("upper_bound_days"))
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) Context() terra.ListValue[FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes](dsc.ref.Append("context"))
}

func (dsc FieldTransformationsPrimitiveTransformationDateShiftConfigAttributes) CryptoKey() terra.ListValue[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes](dsc.ref.Append("crypto_key"))
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes struct {
	ref terra.Reference
}

func (c FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes {
	return FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes{ref: ref}
}

func (c FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FieldTransformationsPrimitiveTransformationDateShiftConfigContextAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes struct {
	ref terra.Reference
}

func (ck FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalRef() (terra.Reference, error) {
	return ck.ref, nil
}

func (ck FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes {
	return FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes{ref: ref}
}

func (ck FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ck.ref.InternalTokens()
}

func (ck FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) KmsWrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes](ck.ref.Append("kms_wrapped"))
}

func (ck FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) Transient() terra.ListValue[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes](ck.ref.Append("transient"))
}

func (ck FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyAttributes) Unwrapped() terra.ListValue[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes](ck.ref.Append("unwrapped"))
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes struct {
	ref terra.Reference
}

func (kw FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalRef() (terra.Reference, error) {
	return kw.ref, nil
}

func (kw FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes {
	return FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes{ref: ref}
}

func (kw FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kw.ref.InternalTokens()
}

func (kw FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) CryptoKeyName() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("crypto_key_name"))
}

func (kw FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedAttributes) WrappedKey() terra.StringValue {
	return terra.ReferenceAsString(kw.ref.Append("wrapped_key"))
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes struct {
	ref terra.Reference
}

func (t FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes {
	return FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes{ref: ref}
}

func (t FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("name"))
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes struct {
	ref terra.Reference
}

func (u FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes {
	return FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes{ref: ref}
}

func (u FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("key"))
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes struct {
	ref terra.Reference
}

func (fsbc FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalRef() (terra.Reference, error) {
	return fsbc.ref, nil
}

func (fsbc FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes {
	return FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes{ref: ref}
}

func (fsbc FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fsbc.ref.InternalTokens()
}

func (fsbc FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) BucketSize() terra.NumberValue {
	return terra.ReferenceAsNumber(fsbc.ref.Append("bucket_size"))
}

func (fsbc FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) LowerBound() terra.ListValue[FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes](fsbc.ref.Append("lower_bound"))
}

func (fsbc FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigAttributes) UpperBound() terra.ListValue[FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes](fsbc.ref.Append("upper_bound"))
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes struct {
	ref terra.Reference
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes {
	return FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes{ref: ref}
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(lb.ref.Append("boolean_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("day_of_week_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("float_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("integer_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("string_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("timestamp_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) DateValue() terra.ListValue[LowerBoundDateValueAttributes] {
	return terra.ReferenceAsList[LowerBoundDateValueAttributes](lb.ref.Append("date_value"))
}

func (lb FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundAttributes) TimeValue() terra.ListValue[LowerBoundTimeValueAttributes] {
	return terra.ReferenceAsList[LowerBoundTimeValueAttributes](lb.ref.Append("time_value"))
}

type LowerBoundDateValueAttributes struct {
	ref terra.Reference
}

func (dv LowerBoundDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv LowerBoundDateValueAttributes) InternalWithRef(ref terra.Reference) LowerBoundDateValueAttributes {
	return LowerBoundDateValueAttributes{ref: ref}
}

func (dv LowerBoundDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv LowerBoundDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv LowerBoundDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv LowerBoundDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type LowerBoundTimeValueAttributes struct {
	ref terra.Reference
}

func (tv LowerBoundTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv LowerBoundTimeValueAttributes) InternalWithRef(ref terra.Reference) LowerBoundTimeValueAttributes {
	return LowerBoundTimeValueAttributes{ref: ref}
}

func (tv LowerBoundTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv LowerBoundTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv LowerBoundTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv LowerBoundTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv LowerBoundTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes struct {
	ref terra.Reference
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalRef() (terra.Reference, error) {
	return ub.ref, nil
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes {
	return FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes{ref: ref}
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ub.ref.InternalTokens()
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(ub.ref.Append("boolean_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(ub.ref.Append("day_of_week_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ub.ref.Append("float_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(ub.ref.Append("integer_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(ub.ref.Append("string_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(ub.ref.Append("timestamp_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) DateValue() terra.ListValue[UpperBoundDateValueAttributes] {
	return terra.ReferenceAsList[UpperBoundDateValueAttributes](ub.ref.Append("date_value"))
}

func (ub FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundAttributes) TimeValue() terra.ListValue[UpperBoundTimeValueAttributes] {
	return terra.ReferenceAsList[UpperBoundTimeValueAttributes](ub.ref.Append("time_value"))
}

type UpperBoundDateValueAttributes struct {
	ref terra.Reference
}

func (dv UpperBoundDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv UpperBoundDateValueAttributes) InternalWithRef(ref terra.Reference) UpperBoundDateValueAttributes {
	return UpperBoundDateValueAttributes{ref: ref}
}

func (dv UpperBoundDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv UpperBoundDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv UpperBoundDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv UpperBoundDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type UpperBoundTimeValueAttributes struct {
	ref terra.Reference
}

func (tv UpperBoundTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv UpperBoundTimeValueAttributes) InternalWithRef(ref terra.Reference) UpperBoundTimeValueAttributes {
	return UpperBoundTimeValueAttributes{ref: ref}
}

func (tv UpperBoundTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv UpperBoundTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv UpperBoundTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv UpperBoundTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv UpperBoundTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsPrimitiveTransformationRedactConfigAttributes struct {
	ref terra.Reference
}

func (rc FieldTransformationsPrimitiveTransformationRedactConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc FieldTransformationsPrimitiveTransformationRedactConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationRedactConfigAttributes {
	return FieldTransformationsPrimitiveTransformationRedactConfigAttributes{ref: ref}
}

func (rc FieldTransformationsPrimitiveTransformationRedactConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

type FieldTransformationsPrimitiveTransformationReplaceConfigAttributes struct {
	ref terra.Reference
}

func (rc FieldTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc FieldTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationReplaceConfigAttributes {
	return FieldTransformationsPrimitiveTransformationReplaceConfigAttributes{ref: ref}
}

func (rc FieldTransformationsPrimitiveTransformationReplaceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc FieldTransformationsPrimitiveTransformationReplaceConfigAttributes) NewValue() terra.ListValue[FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes](rc.ref.Append("new_value"))
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes struct {
	ref terra.Reference
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalRef() (terra.Reference, error) {
	return nv.ref, nil
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes {
	return FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes{ref: ref}
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nv.ref.InternalTokens()
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(nv.ref.Append("boolean_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("day_of_week_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(nv.ref.Append("float_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("integer_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("string_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(nv.ref.Append("timestamp_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) DateValue() terra.ListValue[FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes](nv.ref.Append("date_value"))
}

func (nv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueAttributes) TimeValue() terra.ListValue[FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes](nv.ref.Append("time_value"))
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes {
	return FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes{ref: ref}
}

func (dv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes {
	return FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes{ref: ref}
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes struct {
	ref terra.Reference
}

func (rdc FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalRef() (terra.Reference, error) {
	return rdc.ref, nil
}

func (rdc FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes {
	return FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes{ref: ref}
}

func (rdc FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rdc.ref.InternalTokens()
}

func (rdc FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigAttributes) WordList() terra.ListValue[FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes] {
	return terra.ReferenceAsList[FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes](rdc.ref.Append("word_list"))
}

type FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes struct {
	ref terra.Reference
}

func (wl FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes {
	return FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes{ref: ref}
}

func (wl FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListAttributes) Words() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](wl.ref.Append("words"))
}

type FieldTransformationsPrimitiveTransformationTimePartConfigAttributes struct {
	ref terra.Reference
}

func (tpc FieldTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalRef() (terra.Reference, error) {
	return tpc.ref, nil
}

func (tpc FieldTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalWithRef(ref terra.Reference) FieldTransformationsPrimitiveTransformationTimePartConfigAttributes {
	return FieldTransformationsPrimitiveTransformationTimePartConfigAttributes{ref: ref}
}

func (tpc FieldTransformationsPrimitiveTransformationTimePartConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tpc.ref.InternalTokens()
}

func (tpc FieldTransformationsPrimitiveTransformationTimePartConfigAttributes) PartToExtract() terra.StringValue {
	return terra.ReferenceAsString(tpc.ref.Append("part_to_extract"))
}

type RecordSuppressionsAttributes struct {
	ref terra.Reference
}

func (rs RecordSuppressionsAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs RecordSuppressionsAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsAttributes {
	return RecordSuppressionsAttributes{ref: ref}
}

func (rs RecordSuppressionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs RecordSuppressionsAttributes) Condition() terra.ListValue[RecordSuppressionsConditionAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionAttributes](rs.ref.Append("condition"))
}

type RecordSuppressionsConditionAttributes struct {
	ref terra.Reference
}

func (c RecordSuppressionsConditionAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c RecordSuppressionsConditionAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionAttributes {
	return RecordSuppressionsConditionAttributes{ref: ref}
}

func (c RecordSuppressionsConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c RecordSuppressionsConditionAttributes) Expressions() terra.ListValue[RecordSuppressionsConditionExpressionsAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsAttributes](c.ref.Append("expressions"))
}

type RecordSuppressionsConditionExpressionsAttributes struct {
	ref terra.Reference
}

func (e RecordSuppressionsConditionExpressionsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e RecordSuppressionsConditionExpressionsAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsAttributes {
	return RecordSuppressionsConditionExpressionsAttributes{ref: ref}
}

func (e RecordSuppressionsConditionExpressionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e RecordSuppressionsConditionExpressionsAttributes) LogicalOperator() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("logical_operator"))
}

func (e RecordSuppressionsConditionExpressionsAttributes) Conditions() terra.ListValue[RecordSuppressionsConditionExpressionsConditionsAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsConditionsAttributes](e.ref.Append("conditions"))
}

type RecordSuppressionsConditionExpressionsConditionsAttributes struct {
	ref terra.Reference
}

func (c RecordSuppressionsConditionExpressionsConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c RecordSuppressionsConditionExpressionsConditionsAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsConditionsAttributes {
	return RecordSuppressionsConditionExpressionsConditionsAttributes{ref: ref}
}

func (c RecordSuppressionsConditionExpressionsConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c RecordSuppressionsConditionExpressionsConditionsAttributes) Conditions() terra.ListValue[RecordSuppressionsConditionExpressionsConditionsConditionsAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsConditionsConditionsAttributes](c.ref.Append("conditions"))
}

type RecordSuppressionsConditionExpressionsConditionsConditionsAttributes struct {
	ref terra.Reference
}

func (c RecordSuppressionsConditionExpressionsConditionsConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c RecordSuppressionsConditionExpressionsConditionsConditionsAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsConditionsConditionsAttributes {
	return RecordSuppressionsConditionExpressionsConditionsConditionsAttributes{ref: ref}
}

func (c RecordSuppressionsConditionExpressionsConditionsConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c RecordSuppressionsConditionExpressionsConditionsConditionsAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("operator"))
}

func (c RecordSuppressionsConditionExpressionsConditionsConditionsAttributes) Field() terra.ListValue[RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes](c.ref.Append("field"))
}

func (c RecordSuppressionsConditionExpressionsConditionsConditionsAttributes) Value() terra.ListValue[RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes](c.ref.Append("value"))
}

type RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes struct {
	ref terra.Reference
}

func (f RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes {
	return RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes{ref: ref}
}

func (f RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f RecordSuppressionsConditionExpressionsConditionsConditionsFieldAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes struct {
	ref terra.Reference
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes {
	return RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes{ref: ref}
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) BooleanValue() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("boolean_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) DayOfWeekValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("day_of_week_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) FloatValue() terra.NumberValue {
	return terra.ReferenceAsNumber(v.ref.Append("float_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) IntegerValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("integer_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("string_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) TimestampValue() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("timestamp_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) DateValue() terra.ListValue[RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes](v.ref.Append("date_value"))
}

func (v RecordSuppressionsConditionExpressionsConditionsConditionsValueAttributes) TimeValue() terra.ListValue[RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes] {
	return terra.ReferenceAsList[RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes](v.ref.Append("time_value"))
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes struct {
	ref terra.Reference
}

func (dv RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes {
	return RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes{ref: ref}
}

func (dv RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("day"))
}

func (dv RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes) Month() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("month"))
}

func (dv RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueAttributes) Year() terra.NumberValue {
	return terra.ReferenceAsNumber(dv.ref.Append("year"))
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes struct {
	ref terra.Reference
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) InternalWithRef(ref terra.Reference) RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes {
	return RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes{ref: ref}
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("hours"))
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("minutes"))
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Nanos() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("nanos"))
}

func (tv RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueAttributes) Seconds() terra.NumberValue {
	return terra.ReferenceAsNumber(tv.ref.Append("seconds"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DeidentifyConfigState struct {
	ImageTransformations    []ImageTransformationsState                    `json:"image_transformations"`
	InfoTypeTransformations []DeidentifyConfigInfoTypeTransformationsState `json:"info_type_transformations"`
	RecordTransformations   []RecordTransformationsState                   `json:"record_transformations"`
}

type ImageTransformationsState struct {
	Transforms []TransformsState `json:"transforms"`
}

type TransformsState struct {
	AllInfoTypes      []AllInfoTypesState      `json:"all_info_types"`
	AllText           []AllTextState           `json:"all_text"`
	RedactionColor    []RedactionColorState    `json:"redaction_color"`
	SelectedInfoTypes []SelectedInfoTypesState `json:"selected_info_types"`
}

type AllInfoTypesState struct{}

type AllTextState struct{}

type RedactionColorState struct {
	Blue  float64 `json:"blue"`
	Green float64 `json:"green"`
	Red   float64 `json:"red"`
}

type SelectedInfoTypesState struct {
	InfoTypes []SelectedInfoTypesInfoTypesState `json:"info_types"`
}

type SelectedInfoTypesInfoTypesState struct {
	Name             string                                            `json:"name"`
	Version          string                                            `json:"version"`
	SensitivityScore []SelectedInfoTypesInfoTypesSensitivityScoreState `json:"sensitivity_score"`
}

type SelectedInfoTypesInfoTypesSensitivityScoreState struct {
	Score string `json:"score"`
}

type DeidentifyConfigInfoTypeTransformationsState struct {
	Transformations []DeidentifyConfigInfoTypeTransformationsTransformationsState `json:"transformations"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsState struct {
	InfoTypes               []DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesState               `json:"info_types"`
	PrimitiveTransformation []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationState `json:"primitive_transformation"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesState struct {
	Name             string                                                                                 `json:"name"`
	Version          string                                                                                 `json:"version"`
	SensitivityScore []DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreState `json:"sensitivity_score"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreState struct {
	Score string `json:"score"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationState struct {
	ReplaceWithInfoTypeConfig bool                                                                                                          `json:"replace_with_info_type_config"`
	BucketingConfig           []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigState           `json:"bucketing_config"`
	CharacterMaskConfig       []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigState       `json:"character_mask_config"`
	CryptoDeterministicConfig []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigState `json:"crypto_deterministic_config"`
	CryptoHashConfig          []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigState          `json:"crypto_hash_config"`
	CryptoReplaceFfxFpeConfig []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigState `json:"crypto_replace_ffx_fpe_config"`
	DateShiftConfig           []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigState           `json:"date_shift_config"`
	FixedSizeBucketingConfig  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigState  `json:"fixed_size_bucketing_config"`
	RedactConfig              []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigState              `json:"redact_config"`
	ReplaceConfig             []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigState             `json:"replace_config"`
	ReplaceDictionaryConfig   []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigState   `json:"replace_dictionary_config"`
	TimePartConfig            []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigState            `json:"time_part_config"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigState struct {
	Buckets []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsState `json:"buckets"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsState struct {
	Max              []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxState              `json:"max"`
	Min              []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinState              `json:"min"`
	ReplacementValue []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueState `json:"replacement_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxState struct {
	DayOfWeekValue string                                                                                                                 `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                `json:"float_value"`
	IntegerValue   string                                                                                                                 `json:"integer_value"`
	StringValue    string                                                                                                                 `json:"string_value"`
	TimestampValue string                                                                                                                 `json:"timestamp_value"`
	DateValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueState `json:"date_value"`
	TimeValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueState `json:"time_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinState struct {
	DayOfWeekValue string                                                                                                                 `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                `json:"float_value"`
	IntegerValue   string                                                                                                                 `json:"integer_value"`
	StringValue    string                                                                                                                 `json:"string_value"`
	TimestampValue string                                                                                                                 `json:"timestamp_value"`
	DateValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueState `json:"date_value"`
	TimeValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueState `json:"time_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueState struct {
	DayOfWeekValue string                                                                                                                              `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                             `json:"float_value"`
	IntegerValue   string                                                                                                                              `json:"integer_value"`
	StringValue    string                                                                                                                              `json:"string_value"`
	TimestampValue string                                                                                                                              `json:"timestamp_value"`
	DateValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueState `json:"date_value"`
	TimeValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueState `json:"time_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigState struct {
	MaskingCharacter   string                                                                                                                    `json:"masking_character"`
	NumberToMask       float64                                                                                                                   `json:"number_to_mask"`
	ReverseOrder       bool                                                                                                                      `json:"reverse_order"`
	CharactersToIgnore []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreState `json:"characters_to_ignore"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreState struct {
	CharactersToSkip         string `json:"characters_to_skip"`
	CommonCharactersToIgnore string `json:"common_characters_to_ignore"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigState struct {
	Context           []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextState           `json:"context"`
	CryptoKey         []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyState         `json:"crypto_key"`
	SurrogateInfoType []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeState `json:"surrogate_info_type"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyState struct {
	KmsWrapped []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeState struct {
	Name             string                                                                                                                                         `json:"name"`
	Version          string                                                                                                                                         `json:"version"`
	SensitivityScore []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreState `json:"sensitivity_score"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreState struct {
	Score string `json:"score"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigState struct {
	CryptoKey []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyState `json:"crypto_key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyState struct {
	KmsWrapped []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigState struct {
	CommonAlphabet    string                                                                                                                         `json:"common_alphabet"`
	CustomAlphabet    string                                                                                                                         `json:"custom_alphabet"`
	Radix             float64                                                                                                                        `json:"radix"`
	Context           []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextState           `json:"context"`
	CryptoKey         []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyState         `json:"crypto_key"`
	SurrogateInfoType []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeState `json:"surrogate_info_type"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyState struct {
	KmsWrapped []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeState struct {
	Name             string                                                                                                                                         `json:"name"`
	Version          string                                                                                                                                         `json:"version"`
	SensitivityScore []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreState `json:"sensitivity_score"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreState struct {
	Score string `json:"score"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigState struct {
	LowerBoundDays float64                                                                                                      `json:"lower_bound_days"`
	UpperBoundDays float64                                                                                                      `json:"upper_bound_days"`
	Context        []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextState   `json:"context"`
	CryptoKey      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyState `json:"crypto_key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyState struct {
	KmsWrapped []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigState struct {
	BucketSize float64                                                                                                                `json:"bucket_size"`
	LowerBound []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundState `json:"lower_bound"`
	UpperBound []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundState `json:"upper_bound"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundState struct {
	FloatValue   float64 `json:"float_value"`
	IntegerValue string  `json:"integer_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundState struct {
	FloatValue   float64 `json:"float_value"`
	IntegerValue string  `json:"integer_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigState struct{}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigState struct {
	NewValue []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueState `json:"new_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueState struct {
	BooleanValue   bool                                                                                                               `json:"boolean_value"`
	DayOfWeekValue string                                                                                                             `json:"day_of_week_value"`
	FloatValue     float64                                                                                                            `json:"float_value"`
	IntegerValue   float64                                                                                                            `json:"integer_value"`
	StringValue    string                                                                                                             `json:"string_value"`
	TimestampValue string                                                                                                             `json:"timestamp_value"`
	DateValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueState `json:"date_value"`
	TimeValue      []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueState `json:"time_value"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigState struct {
	WordList []DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListState `json:"word_list"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListState struct {
	Words []string `json:"words"`
}

type DeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigState struct {
	PartToExtract string `json:"part_to_extract"`
}

type RecordTransformationsState struct {
	FieldTransformations []FieldTransformationsState `json:"field_transformations"`
	RecordSuppressions   []RecordSuppressionsState   `json:"record_suppressions"`
}

type FieldTransformationsState struct {
	Condition               []FieldTransformationsConditionState               `json:"condition"`
	Fields                  []FieldsState                                      `json:"fields"`
	InfoTypeTransformations []FieldTransformationsInfoTypeTransformationsState `json:"info_type_transformations"`
	PrimitiveTransformation []FieldTransformationsPrimitiveTransformationState `json:"primitive_transformation"`
}

type FieldTransformationsConditionState struct {
	Expressions []FieldTransformationsConditionExpressionsState `json:"expressions"`
}

type FieldTransformationsConditionExpressionsState struct {
	LogicalOperator string                                                    `json:"logical_operator"`
	Conditions      []FieldTransformationsConditionExpressionsConditionsState `json:"conditions"`
}

type FieldTransformationsConditionExpressionsConditionsState struct {
	Conditions []FieldTransformationsConditionExpressionsConditionsConditionsState `json:"conditions"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsState struct {
	Operator string                                                                   `json:"operator"`
	Field    []FieldTransformationsConditionExpressionsConditionsConditionsFieldState `json:"field"`
	Value    []FieldTransformationsConditionExpressionsConditionsConditionsValueState `json:"value"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsFieldState struct {
	Name string `json:"name"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueState struct {
	BooleanValue   bool                                                                              `json:"boolean_value"`
	DayOfWeekValue string                                                                            `json:"day_of_week_value"`
	FloatValue     float64                                                                           `json:"float_value"`
	IntegerValue   string                                                                            `json:"integer_value"`
	StringValue    string                                                                            `json:"string_value"`
	TimestampValue string                                                                            `json:"timestamp_value"`
	DateValue      []FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueState `json:"time_value"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsConditionExpressionsConditionsConditionsValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldsState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsState struct {
	Transformations []FieldTransformationsInfoTypeTransformationsTransformationsState `json:"transformations"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsState struct {
	InfoTypes               []FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesState               `json:"info_types"`
	PrimitiveTransformation []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationState `json:"primitive_transformation"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesState struct {
	Name             string                                                                                     `json:"name"`
	Version          string                                                                                     `json:"version"`
	SensitivityScore []FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreState `json:"sensitivity_score"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsInfoTypesSensitivityScoreState struct {
	Score string `json:"score"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationState struct {
	BucketingConfig           []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigState           `json:"bucketing_config"`
	CharacterMaskConfig       []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigState       `json:"character_mask_config"`
	CryptoDeterministicConfig []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigState `json:"crypto_deterministic_config"`
	CryptoHashConfig          []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigState          `json:"crypto_hash_config"`
	CryptoReplaceFfxFpeConfig []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigState `json:"crypto_replace_ffx_fpe_config"`
	DateShiftConfig           []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigState           `json:"date_shift_config"`
	FixedSizeBucketingConfig  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigState  `json:"fixed_size_bucketing_config"`
	RedactConfig              []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigState              `json:"redact_config"`
	ReplaceConfig             []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigState             `json:"replace_config"`
	ReplaceDictionaryConfig   []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigState   `json:"replace_dictionary_config"`
	ReplaceWithInfoTypeConfig []ReplaceWithInfoTypeConfigState                                                                                  `json:"replace_with_info_type_config"`
	TimePartConfig            []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigState            `json:"time_part_config"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigState struct {
	Buckets []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsState `json:"buckets"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsState struct {
	Max              []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxState              `json:"max"`
	Min              []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinState              `json:"min"`
	ReplacementValue []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueState `json:"replacement_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxState struct {
	DayOfWeekValue string                                                                                                                     `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                    `json:"float_value"`
	IntegerValue   string                                                                                                                     `json:"integer_value"`
	StringValue    string                                                                                                                     `json:"string_value"`
	TimestampValue string                                                                                                                     `json:"timestamp_value"`
	DateValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueState `json:"time_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinState struct {
	DayOfWeekValue string                                                                                                                     `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                    `json:"float_value"`
	IntegerValue   string                                                                                                                     `json:"integer_value"`
	StringValue    string                                                                                                                     `json:"string_value"`
	TimestampValue string                                                                                                                     `json:"timestamp_value"`
	DateValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueState `json:"time_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueState struct {
	DayOfWeekValue string                                                                                                                                  `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                                 `json:"float_value"`
	IntegerValue   string                                                                                                                                  `json:"integer_value"`
	StringValue    string                                                                                                                                  `json:"string_value"`
	TimestampValue string                                                                                                                                  `json:"timestamp_value"`
	DateValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueState `json:"time_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigState struct {
	MaskingCharacter   string                                                                                                                        `json:"masking_character"`
	NumberToMask       float64                                                                                                                       `json:"number_to_mask"`
	ReverseOrder       bool                                                                                                                          `json:"reverse_order"`
	CharactersToIgnore []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreState `json:"characters_to_ignore"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreState struct {
	CharactersToSkip         string `json:"characters_to_skip"`
	CommonCharactersToIgnore string `json:"common_characters_to_ignore"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigState struct {
	Context           []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextState           `json:"context"`
	CryptoKey         []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyState         `json:"crypto_key"`
	SurrogateInfoType []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeState `json:"surrogate_info_type"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigContextState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeState struct {
	Name             string                                                                                                                                             `json:"name"`
	Version          string                                                                                                                                             `json:"version"`
	SensitivityScore []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreState `json:"sensitivity_score"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreState struct {
	Score string `json:"score"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigState struct {
	CryptoKey []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyState `json:"crypto_key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigState struct {
	CommonAlphabet    string                                                                                                                             `json:"common_alphabet"`
	CustomAlphabet    string                                                                                                                             `json:"custom_alphabet"`
	Radix             float64                                                                                                                            `json:"radix"`
	Context           []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextState           `json:"context"`
	CryptoKey         []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyState         `json:"crypto_key"`
	SurrogateInfoType []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeState `json:"surrogate_info_type"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeState struct {
	Name             string                                                                                                                                             `json:"name"`
	Version          string                                                                                                                                             `json:"version"`
	SensitivityScore []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreState `json:"sensitivity_score"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreState struct {
	Score string `json:"score"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigState struct {
	LowerBoundDays float64                                                                                                          `json:"lower_bound_days"`
	UpperBoundDays float64                                                                                                          `json:"upper_bound_days"`
	Context        []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextState   `json:"context"`
	CryptoKey      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyState `json:"crypto_key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigContextState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigState struct {
	BucketSize float64                                                                                                                    `json:"bucket_size"`
	LowerBound []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundState `json:"lower_bound"`
	UpperBound []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundState `json:"upper_bound"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundState struct {
	FloatValue   float64 `json:"float_value"`
	IntegerValue string  `json:"integer_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundState struct {
	FloatValue   float64 `json:"float_value"`
	IntegerValue string  `json:"integer_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationRedactConfigState struct{}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigState struct {
	NewValue []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueState `json:"new_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueState struct {
	BooleanValue   bool                                                                                                                   `json:"boolean_value"`
	DayOfWeekValue string                                                                                                                 `json:"day_of_week_value"`
	FloatValue     float64                                                                                                                `json:"float_value"`
	IntegerValue   string                                                                                                                 `json:"integer_value"`
	StringValue    string                                                                                                                 `json:"string_value"`
	TimestampValue string                                                                                                                 `json:"timestamp_value"`
	DateValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueState `json:"time_value"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigState struct {
	WordList []FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListState `json:"word_list"`
}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListState struct {
	Words []string `json:"words"`
}

type ReplaceWithInfoTypeConfigState struct{}

type FieldTransformationsInfoTypeTransformationsTransformationsPrimitiveTransformationTimePartConfigState struct {
	PartToExtract string `json:"part_to_extract"`
}

type FieldTransformationsPrimitiveTransformationState struct {
	BucketingConfig           []FieldTransformationsPrimitiveTransformationBucketingConfigState           `json:"bucketing_config"`
	CharacterMaskConfig       []FieldTransformationsPrimitiveTransformationCharacterMaskConfigState       `json:"character_mask_config"`
	CryptoDeterministicConfig []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigState `json:"crypto_deterministic_config"`
	CryptoHashConfig          []FieldTransformationsPrimitiveTransformationCryptoHashConfigState          `json:"crypto_hash_config"`
	CryptoReplaceFfxFpeConfig []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigState `json:"crypto_replace_ffx_fpe_config"`
	DateShiftConfig           []FieldTransformationsPrimitiveTransformationDateShiftConfigState           `json:"date_shift_config"`
	FixedSizeBucketingConfig  []FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigState  `json:"fixed_size_bucketing_config"`
	RedactConfig              []FieldTransformationsPrimitiveTransformationRedactConfigState              `json:"redact_config"`
	ReplaceConfig             []FieldTransformationsPrimitiveTransformationReplaceConfigState             `json:"replace_config"`
	ReplaceDictionaryConfig   []FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigState   `json:"replace_dictionary_config"`
	TimePartConfig            []FieldTransformationsPrimitiveTransformationTimePartConfigState            `json:"time_part_config"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigState struct {
	Buckets []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsState `json:"buckets"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsState struct {
	Max              []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxState              `json:"max"`
	Min              []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinState              `json:"min"`
	ReplacementValue []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueState `json:"replacement_value"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxState struct {
	BooleanValue   bool                                                                                 `json:"boolean_value"`
	DayOfWeekValue string                                                                               `json:"day_of_week_value"`
	FloatValue     float64                                                                              `json:"float_value"`
	IntegerValue   string                                                                               `json:"integer_value"`
	StringValue    string                                                                               `json:"string_value"`
	TimestampValue string                                                                               `json:"timestamp_value"`
	DateValue      []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueState `json:"time_value"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMaxTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinState struct {
	BooleanValue   bool                                                                                 `json:"boolean_value"`
	DayOfWeekValue string                                                                               `json:"day_of_week_value"`
	FloatValue     float64                                                                              `json:"float_value"`
	IntegerValue   string                                                                               `json:"integer_value"`
	StringValue    string                                                                               `json:"string_value"`
	TimestampValue string                                                                               `json:"timestamp_value"`
	DateValue      []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueState `json:"time_value"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsMinTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueState struct {
	BooleanValue   bool                                                                                              `json:"boolean_value"`
	DayOfWeekValue string                                                                                            `json:"day_of_week_value"`
	FloatValue     float64                                                                                           `json:"float_value"`
	IntegerValue   string                                                                                            `json:"integer_value"`
	StringValue    string                                                                                            `json:"string_value"`
	TimestampValue string                                                                                            `json:"timestamp_value"`
	DateValue      []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueState `json:"time_value"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsPrimitiveTransformationBucketingConfigBucketsReplacementValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsPrimitiveTransformationCharacterMaskConfigState struct {
	MaskingCharacter   string                                                                                  `json:"masking_character"`
	NumberToMask       float64                                                                                 `json:"number_to_mask"`
	ReverseOrder       bool                                                                                    `json:"reverse_order"`
	CharactersToIgnore []FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreState `json:"characters_to_ignore"`
}

type FieldTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnoreState struct {
	CharactersToSkip         string `json:"characters_to_skip"`
	CommonCharactersToIgnore string `json:"common_characters_to_ignore"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigState struct {
	Context           []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextState           `json:"context"`
	CryptoKey         []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyState         `json:"crypto_key"`
	SurrogateInfoType []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeState `json:"surrogate_info_type"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigContextState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeState struct {
	Name             string                                                                                                       `json:"name"`
	Version          string                                                                                                       `json:"version"`
	SensitivityScore []FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreState `json:"sensitivity_score"`
}

type FieldTransformationsPrimitiveTransformationCryptoDeterministicConfigSurrogateInfoTypeSensitivityScoreState struct {
	Score string `json:"score"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigState struct {
	CryptoKey []FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyState `json:"crypto_key"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationCryptoHashConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigState struct {
	CommonAlphabet    string                                                                                       `json:"common_alphabet"`
	CustomAlphabet    string                                                                                       `json:"custom_alphabet"`
	Radix             float64                                                                                      `json:"radix"`
	Context           []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextState           `json:"context"`
	CryptoKey         []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyState         `json:"crypto_key"`
	SurrogateInfoType []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeState `json:"surrogate_info_type"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigContextState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeState struct {
	Name             string                                                                                                       `json:"name"`
	Version          string                                                                                                       `json:"version"`
	SensitivityScore []FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreState `json:"sensitivity_score"`
}

type FieldTransformationsPrimitiveTransformationCryptoReplaceFfxFpeConfigSurrogateInfoTypeSensitivityScoreState struct {
	Score string `json:"score"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigState struct {
	LowerBoundDays float64                                                                    `json:"lower_bound_days"`
	UpperBoundDays float64                                                                    `json:"upper_bound_days"`
	Context        []FieldTransformationsPrimitiveTransformationDateShiftConfigContextState   `json:"context"`
	CryptoKey      []FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyState `json:"crypto_key"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigContextState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyState struct {
	KmsWrapped []FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedState `json:"kms_wrapped"`
	Transient  []FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientState  `json:"transient"`
	Unwrapped  []FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedState  `json:"unwrapped"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyKmsWrappedState struct {
	CryptoKeyName string `json:"crypto_key_name"`
	WrappedKey    string `json:"wrapped_key"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyTransientState struct {
	Name string `json:"name"`
}

type FieldTransformationsPrimitiveTransformationDateShiftConfigCryptoKeyUnwrappedState struct {
	Key string `json:"key"`
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigState struct {
	BucketSize float64                                                                              `json:"bucket_size"`
	LowerBound []FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundState `json:"lower_bound"`
	UpperBound []FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundState `json:"upper_bound"`
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigLowerBoundState struct {
	BooleanValue   bool                       `json:"boolean_value"`
	DayOfWeekValue string                     `json:"day_of_week_value"`
	FloatValue     float64                    `json:"float_value"`
	IntegerValue   string                     `json:"integer_value"`
	StringValue    string                     `json:"string_value"`
	TimestampValue string                     `json:"timestamp_value"`
	DateValue      []LowerBoundDateValueState `json:"date_value"`
	TimeValue      []LowerBoundTimeValueState `json:"time_value"`
}

type LowerBoundDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type LowerBoundTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsPrimitiveTransformationFixedSizeBucketingConfigUpperBoundState struct {
	BooleanValue   bool                       `json:"boolean_value"`
	DayOfWeekValue string                     `json:"day_of_week_value"`
	FloatValue     float64                    `json:"float_value"`
	IntegerValue   string                     `json:"integer_value"`
	StringValue    string                     `json:"string_value"`
	TimestampValue string                     `json:"timestamp_value"`
	DateValue      []UpperBoundDateValueState `json:"date_value"`
	TimeValue      []UpperBoundTimeValueState `json:"time_value"`
}

type UpperBoundDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type UpperBoundTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsPrimitiveTransformationRedactConfigState struct{}

type FieldTransformationsPrimitiveTransformationReplaceConfigState struct {
	NewValue []FieldTransformationsPrimitiveTransformationReplaceConfigNewValueState `json:"new_value"`
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueState struct {
	BooleanValue   bool                                                                             `json:"boolean_value"`
	DayOfWeekValue string                                                                           `json:"day_of_week_value"`
	FloatValue     float64                                                                          `json:"float_value"`
	IntegerValue   string                                                                           `json:"integer_value"`
	StringValue    string                                                                           `json:"string_value"`
	TimestampValue string                                                                           `json:"timestamp_value"`
	DateValue      []FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueState `json:"date_value"`
	TimeValue      []FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueState `json:"time_value"`
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type FieldTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigState struct {
	WordList []FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListState `json:"word_list"`
}

type FieldTransformationsPrimitiveTransformationReplaceDictionaryConfigWordListState struct {
	Words []string `json:"words"`
}

type FieldTransformationsPrimitiveTransformationTimePartConfigState struct {
	PartToExtract string `json:"part_to_extract"`
}

type RecordSuppressionsState struct {
	Condition []RecordSuppressionsConditionState `json:"condition"`
}

type RecordSuppressionsConditionState struct {
	Expressions []RecordSuppressionsConditionExpressionsState `json:"expressions"`
}

type RecordSuppressionsConditionExpressionsState struct {
	LogicalOperator string                                                  `json:"logical_operator"`
	Conditions      []RecordSuppressionsConditionExpressionsConditionsState `json:"conditions"`
}

type RecordSuppressionsConditionExpressionsConditionsState struct {
	Conditions []RecordSuppressionsConditionExpressionsConditionsConditionsState `json:"conditions"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsState struct {
	Operator string                                                                 `json:"operator"`
	Field    []RecordSuppressionsConditionExpressionsConditionsConditionsFieldState `json:"field"`
	Value    []RecordSuppressionsConditionExpressionsConditionsConditionsValueState `json:"value"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsFieldState struct {
	Name string `json:"name"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueState struct {
	BooleanValue   bool                                                                            `json:"boolean_value"`
	DayOfWeekValue string                                                                          `json:"day_of_week_value"`
	FloatValue     float64                                                                         `json:"float_value"`
	IntegerValue   string                                                                          `json:"integer_value"`
	StringValue    string                                                                          `json:"string_value"`
	TimestampValue string                                                                          `json:"timestamp_value"`
	DateValue      []RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueState `json:"date_value"`
	TimeValue      []RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueState `json:"time_value"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueDateValueState struct {
	Day   float64 `json:"day"`
	Month float64 `json:"month"`
	Year  float64 `json:"year"`
}

type RecordSuppressionsConditionExpressionsConditionsConditionsValueTimeValueState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
	Nanos   float64 `json:"nanos"`
	Seconds float64 `json:"seconds"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
