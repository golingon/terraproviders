// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import "github.com/golingon/lingon/pkg/terra"

// NewDataVmwareengineNetworkPeering creates a new instance of [DataVmwareengineNetworkPeering].
func NewDataVmwareengineNetworkPeering(name string, args DataVmwareengineNetworkPeeringArgs) *DataVmwareengineNetworkPeering {
	return &DataVmwareengineNetworkPeering{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVmwareengineNetworkPeering)(nil)

// DataVmwareengineNetworkPeering represents the Terraform data resource google_vmwareengine_network_peering.
type DataVmwareengineNetworkPeering struct {
	Name string
	Args DataVmwareengineNetworkPeeringArgs
}

// DataSource returns the Terraform object type for [DataVmwareengineNetworkPeering].
func (vnp *DataVmwareengineNetworkPeering) DataSource() string {
	return "google_vmwareengine_network_peering"
}

// LocalName returns the local name for [DataVmwareengineNetworkPeering].
func (vnp *DataVmwareengineNetworkPeering) LocalName() string {
	return vnp.Name
}

// Configuration returns the configuration (args) for [DataVmwareengineNetworkPeering].
func (vnp *DataVmwareengineNetworkPeering) Configuration() interface{} {
	return vnp.Args
}

// Attributes returns the attributes for [DataVmwareengineNetworkPeering].
func (vnp *DataVmwareengineNetworkPeering) Attributes() dataVmwareengineNetworkPeeringAttributes {
	return dataVmwareengineNetworkPeeringAttributes{ref: terra.ReferenceDataResource(vnp)}
}

// DataVmwareengineNetworkPeeringArgs contains the configurations for google_vmwareengine_network_peering.
type DataVmwareengineNetworkPeeringArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataVmwareengineNetworkPeeringAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("description"))
}

// ExportCustomRoutes returns a reference to field export_custom_routes of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) ExportCustomRoutes() terra.BoolValue {
	return terra.ReferenceAsBool(vnp.ref.Append("export_custom_routes"))
}

// ExportCustomRoutesWithPublicIp returns a reference to field export_custom_routes_with_public_ip of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) ExportCustomRoutesWithPublicIp() terra.BoolValue {
	return terra.ReferenceAsBool(vnp.ref.Append("export_custom_routes_with_public_ip"))
}

// Id returns a reference to field id of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("id"))
}

// ImportCustomRoutes returns a reference to field import_custom_routes of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) ImportCustomRoutes() terra.BoolValue {
	return terra.ReferenceAsBool(vnp.ref.Append("import_custom_routes"))
}

// ImportCustomRoutesWithPublicIp returns a reference to field import_custom_routes_with_public_ip of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) ImportCustomRoutesWithPublicIp() terra.BoolValue {
	return terra.ReferenceAsBool(vnp.ref.Append("import_custom_routes_with_public_ip"))
}

// Name returns a reference to field name of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("name"))
}

// PeerNetwork returns a reference to field peer_network of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) PeerNetwork() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("peer_network"))
}

// PeerNetworkType returns a reference to field peer_network_type of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) PeerNetworkType() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("peer_network_type"))
}

// Project returns a reference to field project of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("project"))
}

// State returns a reference to field state of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("state"))
}

// StateDetails returns a reference to field state_details of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) StateDetails() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("state_details"))
}

// Uid returns a reference to field uid of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("update_time"))
}

// VmwareEngineNetwork returns a reference to field vmware_engine_network of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) VmwareEngineNetwork() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("vmware_engine_network"))
}

// VmwareEngineNetworkCanonical returns a reference to field vmware_engine_network_canonical of google_vmwareengine_network_peering.
func (vnp dataVmwareengineNetworkPeeringAttributes) VmwareEngineNetworkCanonical() terra.StringValue {
	return terra.ReferenceAsString(vnp.ref.Append("vmware_engine_network_canonical"))
}
