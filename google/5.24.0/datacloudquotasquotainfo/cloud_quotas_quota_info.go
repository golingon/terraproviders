// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datacloudquotasquotainfo

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DimensionsInfos struct {
	// Details: min=0
	Details []Details `hcl:"details,block" validate:"min=0"`
}

type Details struct{}

type QuotaIncreaseEligibility struct{}

type DimensionsInfosAttributes struct {
	ref terra.Reference
}

func (di DimensionsInfosAttributes) InternalRef() (terra.Reference, error) {
	return di.ref, nil
}

func (di DimensionsInfosAttributes) InternalWithRef(ref terra.Reference) DimensionsInfosAttributes {
	return DimensionsInfosAttributes{ref: ref}
}

func (di DimensionsInfosAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return di.ref.InternalTokens()
}

func (di DimensionsInfosAttributes) ApplicableLocations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](di.ref.Append("applicable_locations"))
}

func (di DimensionsInfosAttributes) Dimensions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](di.ref.Append("dimensions"))
}

func (di DimensionsInfosAttributes) Details() terra.ListValue[DetailsAttributes] {
	return terra.ReferenceAsList[DetailsAttributes](di.ref.Append("details"))
}

type DetailsAttributes struct {
	ref terra.Reference
}

func (d DetailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DetailsAttributes) InternalWithRef(ref terra.Reference) DetailsAttributes {
	return DetailsAttributes{ref: ref}
}

func (d DetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DetailsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type QuotaIncreaseEligibilityAttributes struct {
	ref terra.Reference
}

func (qie QuotaIncreaseEligibilityAttributes) InternalRef() (terra.Reference, error) {
	return qie.ref, nil
}

func (qie QuotaIncreaseEligibilityAttributes) InternalWithRef(ref terra.Reference) QuotaIncreaseEligibilityAttributes {
	return QuotaIncreaseEligibilityAttributes{ref: ref}
}

func (qie QuotaIncreaseEligibilityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qie.ref.InternalTokens()
}

func (qie QuotaIncreaseEligibilityAttributes) IneligibilityReason() terra.StringValue {
	return terra.ReferenceAsString(qie.ref.Append("ineligibility_reason"))
}

func (qie QuotaIncreaseEligibilityAttributes) IsEligible() terra.BoolValue {
	return terra.ReferenceAsBool(qie.ref.Append("is_eligible"))
}

type DimensionsInfosState struct {
	ApplicableLocations []string          `json:"applicable_locations"`
	Dimensions          map[string]string `json:"dimensions"`
	Details             []DetailsState    `json:"details"`
}

type DetailsState struct {
	Value string `json:"value"`
}

type QuotaIncreaseEligibilityState struct {
	IneligibilityReason string `json:"ineligibility_reason"`
	IsEligible          bool   `json:"is_eligible"`
}
