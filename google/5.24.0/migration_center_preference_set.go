// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	migrationcenterpreferenceset "github.com/golingon/terraproviders/google/5.24.0/migrationcenterpreferenceset"
	"io"
)

// NewMigrationCenterPreferenceSet creates a new instance of [MigrationCenterPreferenceSet].
func NewMigrationCenterPreferenceSet(name string, args MigrationCenterPreferenceSetArgs) *MigrationCenterPreferenceSet {
	return &MigrationCenterPreferenceSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MigrationCenterPreferenceSet)(nil)

// MigrationCenterPreferenceSet represents the Terraform resource google_migration_center_preference_set.
type MigrationCenterPreferenceSet struct {
	Name      string
	Args      MigrationCenterPreferenceSetArgs
	state     *migrationCenterPreferenceSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [MigrationCenterPreferenceSet].
func (mcps *MigrationCenterPreferenceSet) Type() string {
	return "google_migration_center_preference_set"
}

// LocalName returns the local name for [MigrationCenterPreferenceSet].
func (mcps *MigrationCenterPreferenceSet) LocalName() string {
	return mcps.Name
}

// Configuration returns the configuration (args) for [MigrationCenterPreferenceSet].
func (mcps *MigrationCenterPreferenceSet) Configuration() interface{} {
	return mcps.Args
}

// DependOn is used for other resources to depend on [MigrationCenterPreferenceSet].
func (mcps *MigrationCenterPreferenceSet) DependOn() terra.Reference {
	return terra.ReferenceResource(mcps)
}

// Dependencies returns the list of resources [MigrationCenterPreferenceSet] depends_on.
func (mcps *MigrationCenterPreferenceSet) Dependencies() terra.Dependencies {
	return mcps.DependsOn
}

// LifecycleManagement returns the lifecycle block for [MigrationCenterPreferenceSet].
func (mcps *MigrationCenterPreferenceSet) LifecycleManagement() *terra.Lifecycle {
	return mcps.Lifecycle
}

// Attributes returns the attributes for [MigrationCenterPreferenceSet].
func (mcps *MigrationCenterPreferenceSet) Attributes() migrationCenterPreferenceSetAttributes {
	return migrationCenterPreferenceSetAttributes{ref: terra.ReferenceResource(mcps)}
}

// ImportState imports the given attribute values into [MigrationCenterPreferenceSet]'s state.
func (mcps *MigrationCenterPreferenceSet) ImportState(av io.Reader) error {
	mcps.state = &migrationCenterPreferenceSetState{}
	if err := json.NewDecoder(av).Decode(mcps.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mcps.Type(), mcps.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [MigrationCenterPreferenceSet] has state.
func (mcps *MigrationCenterPreferenceSet) State() (*migrationCenterPreferenceSetState, bool) {
	return mcps.state, mcps.state != nil
}

// StateMust returns the state for [MigrationCenterPreferenceSet]. Panics if the state is nil.
func (mcps *MigrationCenterPreferenceSet) StateMust() *migrationCenterPreferenceSetState {
	if mcps.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mcps.Type(), mcps.LocalName()))
	}
	return mcps.state
}

// MigrationCenterPreferenceSetArgs contains the configurations for google_migration_center_preference_set.
type MigrationCenterPreferenceSetArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// PreferenceSetId: string, required
	PreferenceSetId terra.StringValue `hcl:"preference_set_id,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Timeouts: optional
	Timeouts *migrationcenterpreferenceset.Timeouts `hcl:"timeouts,block"`
	// VirtualMachinePreferences: optional
	VirtualMachinePreferences *migrationcenterpreferenceset.VirtualMachinePreferences `hcl:"virtual_machine_preferences,block"`
}
type migrationCenterPreferenceSetAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("create_time"))
}

// Description returns a reference to field description of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("display_name"))
}

// Id returns a reference to field id of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("id"))
}

// Location returns a reference to field location of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("location"))
}

// Name returns a reference to field name of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("name"))
}

// PreferenceSetId returns a reference to field preference_set_id of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) PreferenceSetId() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("preference_set_id"))
}

// Project returns a reference to field project of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("project"))
}

// UpdateTime returns a reference to field update_time of google_migration_center_preference_set.
func (mcps migrationCenterPreferenceSetAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(mcps.ref.Append("update_time"))
}

func (mcps migrationCenterPreferenceSetAttributes) Timeouts() migrationcenterpreferenceset.TimeoutsAttributes {
	return terra.ReferenceAsSingle[migrationcenterpreferenceset.TimeoutsAttributes](mcps.ref.Append("timeouts"))
}

func (mcps migrationCenterPreferenceSetAttributes) VirtualMachinePreferences() terra.ListValue[migrationcenterpreferenceset.VirtualMachinePreferencesAttributes] {
	return terra.ReferenceAsList[migrationcenterpreferenceset.VirtualMachinePreferencesAttributes](mcps.ref.Append("virtual_machine_preferences"))
}

type migrationCenterPreferenceSetState struct {
	CreateTime                string                                                        `json:"create_time"`
	Description               string                                                        `json:"description"`
	DisplayName               string                                                        `json:"display_name"`
	Id                        string                                                        `json:"id"`
	Location                  string                                                        `json:"location"`
	Name                      string                                                        `json:"name"`
	PreferenceSetId           string                                                        `json:"preference_set_id"`
	Project                   string                                                        `json:"project"`
	UpdateTime                string                                                        `json:"update_time"`
	Timeouts                  *migrationcenterpreferenceset.TimeoutsState                   `json:"timeouts"`
	VirtualMachinePreferences []migrationcenterpreferenceset.VirtualMachinePreferencesState `json:"virtual_machine_preferences"`
}
