// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	pubsubschemaiambinding "github.com/golingon/terraproviders/google/5.24.0/pubsubschemaiambinding"
	"io"
)

// NewPubsubSchemaIamBinding creates a new instance of [PubsubSchemaIamBinding].
func NewPubsubSchemaIamBinding(name string, args PubsubSchemaIamBindingArgs) *PubsubSchemaIamBinding {
	return &PubsubSchemaIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PubsubSchemaIamBinding)(nil)

// PubsubSchemaIamBinding represents the Terraform resource google_pubsub_schema_iam_binding.
type PubsubSchemaIamBinding struct {
	Name      string
	Args      PubsubSchemaIamBindingArgs
	state     *pubsubSchemaIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PubsubSchemaIamBinding].
func (psib *PubsubSchemaIamBinding) Type() string {
	return "google_pubsub_schema_iam_binding"
}

// LocalName returns the local name for [PubsubSchemaIamBinding].
func (psib *PubsubSchemaIamBinding) LocalName() string {
	return psib.Name
}

// Configuration returns the configuration (args) for [PubsubSchemaIamBinding].
func (psib *PubsubSchemaIamBinding) Configuration() interface{} {
	return psib.Args
}

// DependOn is used for other resources to depend on [PubsubSchemaIamBinding].
func (psib *PubsubSchemaIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(psib)
}

// Dependencies returns the list of resources [PubsubSchemaIamBinding] depends_on.
func (psib *PubsubSchemaIamBinding) Dependencies() terra.Dependencies {
	return psib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PubsubSchemaIamBinding].
func (psib *PubsubSchemaIamBinding) LifecycleManagement() *terra.Lifecycle {
	return psib.Lifecycle
}

// Attributes returns the attributes for [PubsubSchemaIamBinding].
func (psib *PubsubSchemaIamBinding) Attributes() pubsubSchemaIamBindingAttributes {
	return pubsubSchemaIamBindingAttributes{ref: terra.ReferenceResource(psib)}
}

// ImportState imports the given attribute values into [PubsubSchemaIamBinding]'s state.
func (psib *PubsubSchemaIamBinding) ImportState(av io.Reader) error {
	psib.state = &pubsubSchemaIamBindingState{}
	if err := json.NewDecoder(av).Decode(psib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", psib.Type(), psib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PubsubSchemaIamBinding] has state.
func (psib *PubsubSchemaIamBinding) State() (*pubsubSchemaIamBindingState, bool) {
	return psib.state, psib.state != nil
}

// StateMust returns the state for [PubsubSchemaIamBinding]. Panics if the state is nil.
func (psib *PubsubSchemaIamBinding) StateMust() *pubsubSchemaIamBindingState {
	if psib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", psib.Type(), psib.LocalName()))
	}
	return psib.state
}

// PubsubSchemaIamBindingArgs contains the configurations for google_pubsub_schema_iam_binding.
type PubsubSchemaIamBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// Condition: optional
	Condition *pubsubschemaiambinding.Condition `hcl:"condition,block"`
}
type pubsubSchemaIamBindingAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_pubsub_schema_iam_binding.
func (psib pubsubSchemaIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(psib.ref.Append("etag"))
}

// Id returns a reference to field id of google_pubsub_schema_iam_binding.
func (psib pubsubSchemaIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(psib.ref.Append("id"))
}

// Members returns a reference to field members of google_pubsub_schema_iam_binding.
func (psib pubsubSchemaIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](psib.ref.Append("members"))
}

// Project returns a reference to field project of google_pubsub_schema_iam_binding.
func (psib pubsubSchemaIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(psib.ref.Append("project"))
}

// Role returns a reference to field role of google_pubsub_schema_iam_binding.
func (psib pubsubSchemaIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(psib.ref.Append("role"))
}

// Schema returns a reference to field schema of google_pubsub_schema_iam_binding.
func (psib pubsubSchemaIamBindingAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(psib.ref.Append("schema"))
}

func (psib pubsubSchemaIamBindingAttributes) Condition() terra.ListValue[pubsubschemaiambinding.ConditionAttributes] {
	return terra.ReferenceAsList[pubsubschemaiambinding.ConditionAttributes](psib.ref.Append("condition"))
}

type pubsubSchemaIamBindingState struct {
	Etag      string                                  `json:"etag"`
	Id        string                                  `json:"id"`
	Members   []string                                `json:"members"`
	Project   string                                  `json:"project"`
	Role      string                                  `json:"role"`
	Schema    string                                  `json:"schema"`
	Condition []pubsubschemaiambinding.ConditionState `json:"condition"`
}
