// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	loggingfoldersettings "github.com/golingon/terraproviders/google/5.24.0/loggingfoldersettings"
	"io"
)

// NewLoggingFolderSettings creates a new instance of [LoggingFolderSettings].
func NewLoggingFolderSettings(name string, args LoggingFolderSettingsArgs) *LoggingFolderSettings {
	return &LoggingFolderSettings{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LoggingFolderSettings)(nil)

// LoggingFolderSettings represents the Terraform resource google_logging_folder_settings.
type LoggingFolderSettings struct {
	Name      string
	Args      LoggingFolderSettingsArgs
	state     *loggingFolderSettingsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LoggingFolderSettings].
func (lfs *LoggingFolderSettings) Type() string {
	return "google_logging_folder_settings"
}

// LocalName returns the local name for [LoggingFolderSettings].
func (lfs *LoggingFolderSettings) LocalName() string {
	return lfs.Name
}

// Configuration returns the configuration (args) for [LoggingFolderSettings].
func (lfs *LoggingFolderSettings) Configuration() interface{} {
	return lfs.Args
}

// DependOn is used for other resources to depend on [LoggingFolderSettings].
func (lfs *LoggingFolderSettings) DependOn() terra.Reference {
	return terra.ReferenceResource(lfs)
}

// Dependencies returns the list of resources [LoggingFolderSettings] depends_on.
func (lfs *LoggingFolderSettings) Dependencies() terra.Dependencies {
	return lfs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LoggingFolderSettings].
func (lfs *LoggingFolderSettings) LifecycleManagement() *terra.Lifecycle {
	return lfs.Lifecycle
}

// Attributes returns the attributes for [LoggingFolderSettings].
func (lfs *LoggingFolderSettings) Attributes() loggingFolderSettingsAttributes {
	return loggingFolderSettingsAttributes{ref: terra.ReferenceResource(lfs)}
}

// ImportState imports the given attribute values into [LoggingFolderSettings]'s state.
func (lfs *LoggingFolderSettings) ImportState(av io.Reader) error {
	lfs.state = &loggingFolderSettingsState{}
	if err := json.NewDecoder(av).Decode(lfs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lfs.Type(), lfs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LoggingFolderSettings] has state.
func (lfs *LoggingFolderSettings) State() (*loggingFolderSettingsState, bool) {
	return lfs.state, lfs.state != nil
}

// StateMust returns the state for [LoggingFolderSettings]. Panics if the state is nil.
func (lfs *LoggingFolderSettings) StateMust() *loggingFolderSettingsState {
	if lfs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lfs.Type(), lfs.LocalName()))
	}
	return lfs.state
}

// LoggingFolderSettingsArgs contains the configurations for google_logging_folder_settings.
type LoggingFolderSettingsArgs struct {
	// DisableDefaultSink: bool, optional
	DisableDefaultSink terra.BoolValue `hcl:"disable_default_sink,attr"`
	// Folder: string, required
	Folder terra.StringValue `hcl:"folder,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyName: string, optional
	KmsKeyName terra.StringValue `hcl:"kms_key_name,attr"`
	// StorageLocation: string, optional
	StorageLocation terra.StringValue `hcl:"storage_location,attr"`
	// Timeouts: optional
	Timeouts *loggingfoldersettings.Timeouts `hcl:"timeouts,block"`
}
type loggingFolderSettingsAttributes struct {
	ref terra.Reference
}

// DisableDefaultSink returns a reference to field disable_default_sink of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) DisableDefaultSink() terra.BoolValue {
	return terra.ReferenceAsBool(lfs.ref.Append("disable_default_sink"))
}

// Folder returns a reference to field folder of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) Folder() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("folder"))
}

// Id returns a reference to field id of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("id"))
}

// KmsKeyName returns a reference to field kms_key_name of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("kms_key_name"))
}

// KmsServiceAccountId returns a reference to field kms_service_account_id of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) KmsServiceAccountId() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("kms_service_account_id"))
}

// LoggingServiceAccountId returns a reference to field logging_service_account_id of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) LoggingServiceAccountId() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("logging_service_account_id"))
}

// Name returns a reference to field name of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("name"))
}

// StorageLocation returns a reference to field storage_location of google_logging_folder_settings.
func (lfs loggingFolderSettingsAttributes) StorageLocation() terra.StringValue {
	return terra.ReferenceAsString(lfs.ref.Append("storage_location"))
}

func (lfs loggingFolderSettingsAttributes) Timeouts() loggingfoldersettings.TimeoutsAttributes {
	return terra.ReferenceAsSingle[loggingfoldersettings.TimeoutsAttributes](lfs.ref.Append("timeouts"))
}

type loggingFolderSettingsState struct {
	DisableDefaultSink      bool                                 `json:"disable_default_sink"`
	Folder                  string                               `json:"folder"`
	Id                      string                               `json:"id"`
	KmsKeyName              string                               `json:"kms_key_name"`
	KmsServiceAccountId     string                               `json:"kms_service_account_id"`
	LoggingServiceAccountId string                               `json:"logging_service_account_id"`
	Name                    string                               `json:"name"`
	StorageLocation         string                               `json:"storage_location"`
	Timeouts                *loggingfoldersettings.TimeoutsState `json:"timeouts"`
}
