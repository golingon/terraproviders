// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewDataplexDatascanIamPolicy creates a new instance of [DataplexDatascanIamPolicy].
func NewDataplexDatascanIamPolicy(name string, args DataplexDatascanIamPolicyArgs) *DataplexDatascanIamPolicy {
	return &DataplexDatascanIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataplexDatascanIamPolicy)(nil)

// DataplexDatascanIamPolicy represents the Terraform resource google_dataplex_datascan_iam_policy.
type DataplexDatascanIamPolicy struct {
	Name      string
	Args      DataplexDatascanIamPolicyArgs
	state     *dataplexDatascanIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DataplexDatascanIamPolicy].
func (ddip *DataplexDatascanIamPolicy) Type() string {
	return "google_dataplex_datascan_iam_policy"
}

// LocalName returns the local name for [DataplexDatascanIamPolicy].
func (ddip *DataplexDatascanIamPolicy) LocalName() string {
	return ddip.Name
}

// Configuration returns the configuration (args) for [DataplexDatascanIamPolicy].
func (ddip *DataplexDatascanIamPolicy) Configuration() interface{} {
	return ddip.Args
}

// DependOn is used for other resources to depend on [DataplexDatascanIamPolicy].
func (ddip *DataplexDatascanIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(ddip)
}

// Dependencies returns the list of resources [DataplexDatascanIamPolicy] depends_on.
func (ddip *DataplexDatascanIamPolicy) Dependencies() terra.Dependencies {
	return ddip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DataplexDatascanIamPolicy].
func (ddip *DataplexDatascanIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return ddip.Lifecycle
}

// Attributes returns the attributes for [DataplexDatascanIamPolicy].
func (ddip *DataplexDatascanIamPolicy) Attributes() dataplexDatascanIamPolicyAttributes {
	return dataplexDatascanIamPolicyAttributes{ref: terra.ReferenceResource(ddip)}
}

// ImportState imports the given attribute values into [DataplexDatascanIamPolicy]'s state.
func (ddip *DataplexDatascanIamPolicy) ImportState(av io.Reader) error {
	ddip.state = &dataplexDatascanIamPolicyState{}
	if err := json.NewDecoder(av).Decode(ddip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ddip.Type(), ddip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DataplexDatascanIamPolicy] has state.
func (ddip *DataplexDatascanIamPolicy) State() (*dataplexDatascanIamPolicyState, bool) {
	return ddip.state, ddip.state != nil
}

// StateMust returns the state for [DataplexDatascanIamPolicy]. Panics if the state is nil.
func (ddip *DataplexDatascanIamPolicy) StateMust() *dataplexDatascanIamPolicyState {
	if ddip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ddip.Type(), ddip.LocalName()))
	}
	return ddip.state
}

// DataplexDatascanIamPolicyArgs contains the configurations for google_dataplex_datascan_iam_policy.
type DataplexDatascanIamPolicyArgs struct {
	// DataScanId: string, required
	DataScanId terra.StringValue `hcl:"data_scan_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataplexDatascanIamPolicyAttributes struct {
	ref terra.Reference
}

// DataScanId returns a reference to field data_scan_id of google_dataplex_datascan_iam_policy.
func (ddip dataplexDatascanIamPolicyAttributes) DataScanId() terra.StringValue {
	return terra.ReferenceAsString(ddip.ref.Append("data_scan_id"))
}

// Etag returns a reference to field etag of google_dataplex_datascan_iam_policy.
func (ddip dataplexDatascanIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ddip.ref.Append("etag"))
}

// Id returns a reference to field id of google_dataplex_datascan_iam_policy.
func (ddip dataplexDatascanIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ddip.ref.Append("id"))
}

// Location returns a reference to field location of google_dataplex_datascan_iam_policy.
func (ddip dataplexDatascanIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ddip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_dataplex_datascan_iam_policy.
func (ddip dataplexDatascanIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(ddip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_dataplex_datascan_iam_policy.
func (ddip dataplexDatascanIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ddip.ref.Append("project"))
}

type dataplexDatascanIamPolicyState struct {
	DataScanId string `json:"data_scan_id"`
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	Location   string `json:"location"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
