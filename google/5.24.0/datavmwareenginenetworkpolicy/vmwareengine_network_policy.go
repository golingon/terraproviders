// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datavmwareenginenetworkpolicy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ExternalIp struct{}

type InternetAccess struct{}

type ExternalIpAttributes struct {
	ref terra.Reference
}

func (ei ExternalIpAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei ExternalIpAttributes) InternalWithRef(ref terra.Reference) ExternalIpAttributes {
	return ExternalIpAttributes{ref: ref}
}

func (ei ExternalIpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ei.ref.InternalTokens()
}

func (ei ExternalIpAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ei.ref.Append("enabled"))
}

func (ei ExternalIpAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("state"))
}

type InternetAccessAttributes struct {
	ref terra.Reference
}

func (ia InternetAccessAttributes) InternalRef() (terra.Reference, error) {
	return ia.ref, nil
}

func (ia InternetAccessAttributes) InternalWithRef(ref terra.Reference) InternetAccessAttributes {
	return InternetAccessAttributes{ref: ref}
}

func (ia InternetAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ia.ref.InternalTokens()
}

func (ia InternetAccessAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ia.ref.Append("enabled"))
}

func (ia InternetAccessAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("state"))
}

type ExternalIpState struct {
	Enabled bool   `json:"enabled"`
	State   string `json:"state"`
}

type InternetAccessState struct {
	Enabled bool   `json:"enabled"`
	State   string `json:"state"`
}
