// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	gkeonprembaremetaladmincluster "github.com/golingon/terraproviders/google/5.24.0/gkeonprembaremetaladmincluster"
	"io"
)

// NewGkeonpremBareMetalAdminCluster creates a new instance of [GkeonpremBareMetalAdminCluster].
func NewGkeonpremBareMetalAdminCluster(name string, args GkeonpremBareMetalAdminClusterArgs) *GkeonpremBareMetalAdminCluster {
	return &GkeonpremBareMetalAdminCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GkeonpremBareMetalAdminCluster)(nil)

// GkeonpremBareMetalAdminCluster represents the Terraform resource google_gkeonprem_bare_metal_admin_cluster.
type GkeonpremBareMetalAdminCluster struct {
	Name      string
	Args      GkeonpremBareMetalAdminClusterArgs
	state     *gkeonpremBareMetalAdminClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GkeonpremBareMetalAdminCluster].
func (gbmac *GkeonpremBareMetalAdminCluster) Type() string {
	return "google_gkeonprem_bare_metal_admin_cluster"
}

// LocalName returns the local name for [GkeonpremBareMetalAdminCluster].
func (gbmac *GkeonpremBareMetalAdminCluster) LocalName() string {
	return gbmac.Name
}

// Configuration returns the configuration (args) for [GkeonpremBareMetalAdminCluster].
func (gbmac *GkeonpremBareMetalAdminCluster) Configuration() interface{} {
	return gbmac.Args
}

// DependOn is used for other resources to depend on [GkeonpremBareMetalAdminCluster].
func (gbmac *GkeonpremBareMetalAdminCluster) DependOn() terra.Reference {
	return terra.ReferenceResource(gbmac)
}

// Dependencies returns the list of resources [GkeonpremBareMetalAdminCluster] depends_on.
func (gbmac *GkeonpremBareMetalAdminCluster) Dependencies() terra.Dependencies {
	return gbmac.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GkeonpremBareMetalAdminCluster].
func (gbmac *GkeonpremBareMetalAdminCluster) LifecycleManagement() *terra.Lifecycle {
	return gbmac.Lifecycle
}

// Attributes returns the attributes for [GkeonpremBareMetalAdminCluster].
func (gbmac *GkeonpremBareMetalAdminCluster) Attributes() gkeonpremBareMetalAdminClusterAttributes {
	return gkeonpremBareMetalAdminClusterAttributes{ref: terra.ReferenceResource(gbmac)}
}

// ImportState imports the given attribute values into [GkeonpremBareMetalAdminCluster]'s state.
func (gbmac *GkeonpremBareMetalAdminCluster) ImportState(av io.Reader) error {
	gbmac.state = &gkeonpremBareMetalAdminClusterState{}
	if err := json.NewDecoder(av).Decode(gbmac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gbmac.Type(), gbmac.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GkeonpremBareMetalAdminCluster] has state.
func (gbmac *GkeonpremBareMetalAdminCluster) State() (*gkeonpremBareMetalAdminClusterState, bool) {
	return gbmac.state, gbmac.state != nil
}

// StateMust returns the state for [GkeonpremBareMetalAdminCluster]. Panics if the state is nil.
func (gbmac *GkeonpremBareMetalAdminCluster) StateMust() *gkeonpremBareMetalAdminClusterState {
	if gbmac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gbmac.Type(), gbmac.LocalName()))
	}
	return gbmac.state
}

// GkeonpremBareMetalAdminClusterArgs contains the configurations for google_gkeonprem_bare_metal_admin_cluster.
type GkeonpremBareMetalAdminClusterArgs struct {
	// Annotations: map of string, optional
	Annotations terra.MapValue[terra.StringValue] `hcl:"annotations,attr"`
	// BareMetalVersion: string, optional
	BareMetalVersion terra.StringValue `hcl:"bare_metal_version,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Fleet: min=0
	Fleet []gkeonprembaremetaladmincluster.Fleet `hcl:"fleet,block" validate:"min=0"`
	// Status: min=0
	Status []gkeonprembaremetaladmincluster.Status `hcl:"status,block" validate:"min=0"`
	// ValidationCheck: min=0
	ValidationCheck []gkeonprembaremetaladmincluster.ValidationCheck `hcl:"validation_check,block" validate:"min=0"`
	// ClusterOperations: optional
	ClusterOperations *gkeonprembaremetaladmincluster.ClusterOperations `hcl:"cluster_operations,block"`
	// ControlPlane: optional
	ControlPlane *gkeonprembaremetaladmincluster.ControlPlane `hcl:"control_plane,block"`
	// LoadBalancer: optional
	LoadBalancer *gkeonprembaremetaladmincluster.LoadBalancer `hcl:"load_balancer,block"`
	// MaintenanceConfig: optional
	MaintenanceConfig *gkeonprembaremetaladmincluster.MaintenanceConfig `hcl:"maintenance_config,block"`
	// NetworkConfig: optional
	NetworkConfig *gkeonprembaremetaladmincluster.NetworkConfig `hcl:"network_config,block"`
	// NodeAccessConfig: optional
	NodeAccessConfig *gkeonprembaremetaladmincluster.NodeAccessConfig `hcl:"node_access_config,block"`
	// NodeConfig: optional
	NodeConfig *gkeonprembaremetaladmincluster.NodeConfig `hcl:"node_config,block"`
	// Proxy: optional
	Proxy *gkeonprembaremetaladmincluster.Proxy `hcl:"proxy,block"`
	// SecurityConfig: optional
	SecurityConfig *gkeonprembaremetaladmincluster.SecurityConfig `hcl:"security_config,block"`
	// Storage: optional
	Storage *gkeonprembaremetaladmincluster.Storage `hcl:"storage,block"`
	// Timeouts: optional
	Timeouts *gkeonprembaremetaladmincluster.Timeouts `hcl:"timeouts,block"`
}
type gkeonpremBareMetalAdminClusterAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gbmac.ref.Append("annotations"))
}

// BareMetalVersion returns a reference to field bare_metal_version of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) BareMetalVersion() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("bare_metal_version"))
}

// CreateTime returns a reference to field create_time of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("create_time"))
}

// DeleteTime returns a reference to field delete_time of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("delete_time"))
}

// Description returns a reference to field description of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("description"))
}

// EffectiveAnnotations returns a reference to field effective_annotations of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gbmac.ref.Append("effective_annotations"))
}

// Endpoint returns a reference to field endpoint of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("endpoint"))
}

// Etag returns a reference to field etag of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("etag"))
}

// Id returns a reference to field id of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("id"))
}

// LocalName returns a reference to field local_name of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) LocalName() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("local_name"))
}

// Location returns a reference to field location of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("location"))
}

// Name returns a reference to field name of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("name"))
}

// Project returns a reference to field project of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("project"))
}

// Reconciling returns a reference to field reconciling of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(gbmac.ref.Append("reconciling"))
}

// State returns a reference to field state of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("state"))
}

// Uid returns a reference to field uid of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_gkeonprem_bare_metal_admin_cluster.
func (gbmac gkeonpremBareMetalAdminClusterAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gbmac.ref.Append("update_time"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) Fleet() terra.ListValue[gkeonprembaremetaladmincluster.FleetAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.FleetAttributes](gbmac.ref.Append("fleet"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) Status() terra.ListValue[gkeonprembaremetaladmincluster.StatusAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.StatusAttributes](gbmac.ref.Append("status"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) ValidationCheck() terra.ListValue[gkeonprembaremetaladmincluster.ValidationCheckAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.ValidationCheckAttributes](gbmac.ref.Append("validation_check"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) ClusterOperations() terra.ListValue[gkeonprembaremetaladmincluster.ClusterOperationsAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.ClusterOperationsAttributes](gbmac.ref.Append("cluster_operations"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) ControlPlane() terra.ListValue[gkeonprembaremetaladmincluster.ControlPlaneAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.ControlPlaneAttributes](gbmac.ref.Append("control_plane"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) LoadBalancer() terra.ListValue[gkeonprembaremetaladmincluster.LoadBalancerAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.LoadBalancerAttributes](gbmac.ref.Append("load_balancer"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) MaintenanceConfig() terra.ListValue[gkeonprembaremetaladmincluster.MaintenanceConfigAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.MaintenanceConfigAttributes](gbmac.ref.Append("maintenance_config"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) NetworkConfig() terra.ListValue[gkeonprembaremetaladmincluster.NetworkConfigAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.NetworkConfigAttributes](gbmac.ref.Append("network_config"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) NodeAccessConfig() terra.ListValue[gkeonprembaremetaladmincluster.NodeAccessConfigAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.NodeAccessConfigAttributes](gbmac.ref.Append("node_access_config"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) NodeConfig() terra.ListValue[gkeonprembaremetaladmincluster.NodeConfigAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.NodeConfigAttributes](gbmac.ref.Append("node_config"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) Proxy() terra.ListValue[gkeonprembaremetaladmincluster.ProxyAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.ProxyAttributes](gbmac.ref.Append("proxy"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) SecurityConfig() terra.ListValue[gkeonprembaremetaladmincluster.SecurityConfigAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.SecurityConfigAttributes](gbmac.ref.Append("security_config"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) Storage() terra.ListValue[gkeonprembaremetaladmincluster.StorageAttributes] {
	return terra.ReferenceAsList[gkeonprembaremetaladmincluster.StorageAttributes](gbmac.ref.Append("storage"))
}

func (gbmac gkeonpremBareMetalAdminClusterAttributes) Timeouts() gkeonprembaremetaladmincluster.TimeoutsAttributes {
	return terra.ReferenceAsSingle[gkeonprembaremetaladmincluster.TimeoutsAttributes](gbmac.ref.Append("timeouts"))
}

type gkeonpremBareMetalAdminClusterState struct {
	Annotations          map[string]string                                       `json:"annotations"`
	BareMetalVersion     string                                                  `json:"bare_metal_version"`
	CreateTime           string                                                  `json:"create_time"`
	DeleteTime           string                                                  `json:"delete_time"`
	Description          string                                                  `json:"description"`
	EffectiveAnnotations map[string]string                                       `json:"effective_annotations"`
	Endpoint             string                                                  `json:"endpoint"`
	Etag                 string                                                  `json:"etag"`
	Id                   string                                                  `json:"id"`
	LocalName            string                                                  `json:"local_name"`
	Location             string                                                  `json:"location"`
	Name                 string                                                  `json:"name"`
	Project              string                                                  `json:"project"`
	Reconciling          bool                                                    `json:"reconciling"`
	State                string                                                  `json:"state"`
	Uid                  string                                                  `json:"uid"`
	UpdateTime           string                                                  `json:"update_time"`
	Fleet                []gkeonprembaremetaladmincluster.FleetState             `json:"fleet"`
	Status               []gkeonprembaremetaladmincluster.StatusState            `json:"status"`
	ValidationCheck      []gkeonprembaremetaladmincluster.ValidationCheckState   `json:"validation_check"`
	ClusterOperations    []gkeonprembaremetaladmincluster.ClusterOperationsState `json:"cluster_operations"`
	ControlPlane         []gkeonprembaremetaladmincluster.ControlPlaneState      `json:"control_plane"`
	LoadBalancer         []gkeonprembaremetaladmincluster.LoadBalancerState      `json:"load_balancer"`
	MaintenanceConfig    []gkeonprembaremetaladmincluster.MaintenanceConfigState `json:"maintenance_config"`
	NetworkConfig        []gkeonprembaremetaladmincluster.NetworkConfigState     `json:"network_config"`
	NodeAccessConfig     []gkeonprembaremetaladmincluster.NodeAccessConfigState  `json:"node_access_config"`
	NodeConfig           []gkeonprembaremetaladmincluster.NodeConfigState        `json:"node_config"`
	Proxy                []gkeonprembaremetaladmincluster.ProxyState             `json:"proxy"`
	SecurityConfig       []gkeonprembaremetaladmincluster.SecurityConfigState    `json:"security_config"`
	Storage              []gkeonprembaremetaladmincluster.StorageState           `json:"storage"`
	Timeouts             *gkeonprembaremetaladmincluster.TimeoutsState           `json:"timeouts"`
}
