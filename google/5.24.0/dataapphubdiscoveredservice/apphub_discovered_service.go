// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dataapphubdiscoveredservice

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ServiceProperties struct{}

type ServiceReference struct{}

type ServicePropertiesAttributes struct {
	ref terra.Reference
}

func (sp ServicePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp ServicePropertiesAttributes) InternalWithRef(ref terra.Reference) ServicePropertiesAttributes {
	return ServicePropertiesAttributes{ref: ref}
}

func (sp ServicePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp ServicePropertiesAttributes) GcpProject() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("gcp_project"))
}

func (sp ServicePropertiesAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("location"))
}

func (sp ServicePropertiesAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("zone"))
}

type ServiceReferenceAttributes struct {
	ref terra.Reference
}

func (sr ServiceReferenceAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr ServiceReferenceAttributes) InternalWithRef(ref terra.Reference) ServiceReferenceAttributes {
	return ServiceReferenceAttributes{ref: ref}
}

func (sr ServiceReferenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr ServiceReferenceAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("path"))
}

func (sr ServiceReferenceAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("uri"))
}

type ServicePropertiesState struct {
	GcpProject string `json:"gcp_project"`
	Location   string `json:"location"`
	Zone       string `json:"zone"`
}

type ServiceReferenceState struct {
	Path string `json:"path"`
	Uri  string `json:"uri"`
}
