// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package edgecontainervpnconnection

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Details struct {
	// CloudRouter: min=0
	CloudRouter []CloudRouter `hcl:"cloud_router,block" validate:"min=0"`
	// CloudVpns: min=0
	CloudVpns []CloudVpns `hcl:"cloud_vpns,block" validate:"min=0"`
}

type CloudRouter struct{}

type CloudVpns struct{}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type VpcProject struct {
	// ProjectId: string, optional
	ProjectId terra.StringValue `hcl:"project_id,attr"`
}

type DetailsAttributes struct {
	ref terra.Reference
}

func (d DetailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DetailsAttributes) InternalWithRef(ref terra.Reference) DetailsAttributes {
	return DetailsAttributes{ref: ref}
}

func (d DetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DetailsAttributes) Error() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("error"))
}

func (d DetailsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("state"))
}

func (d DetailsAttributes) CloudRouter() terra.ListValue[CloudRouterAttributes] {
	return terra.ReferenceAsList[CloudRouterAttributes](d.ref.Append("cloud_router"))
}

func (d DetailsAttributes) CloudVpns() terra.ListValue[CloudVpnsAttributes] {
	return terra.ReferenceAsList[CloudVpnsAttributes](d.ref.Append("cloud_vpns"))
}

type CloudRouterAttributes struct {
	ref terra.Reference
}

func (cr CloudRouterAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr CloudRouterAttributes) InternalWithRef(ref terra.Reference) CloudRouterAttributes {
	return CloudRouterAttributes{ref: ref}
}

func (cr CloudRouterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr CloudRouterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("name"))
}

type CloudVpnsAttributes struct {
	ref terra.Reference
}

func (cv CloudVpnsAttributes) InternalRef() (terra.Reference, error) {
	return cv.ref, nil
}

func (cv CloudVpnsAttributes) InternalWithRef(ref terra.Reference) CloudVpnsAttributes {
	return CloudVpnsAttributes{ref: ref}
}

func (cv CloudVpnsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cv.ref.InternalTokens()
}

func (cv CloudVpnsAttributes) Gateway() terra.StringValue {
	return terra.ReferenceAsString(cv.ref.Append("gateway"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type VpcProjectAttributes struct {
	ref terra.Reference
}

func (vp VpcProjectAttributes) InternalRef() (terra.Reference, error) {
	return vp.ref, nil
}

func (vp VpcProjectAttributes) InternalWithRef(ref terra.Reference) VpcProjectAttributes {
	return VpcProjectAttributes{ref: ref}
}

func (vp VpcProjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vp.ref.InternalTokens()
}

func (vp VpcProjectAttributes) ProjectId() terra.StringValue {
	return terra.ReferenceAsString(vp.ref.Append("project_id"))
}

type DetailsState struct {
	Error       string             `json:"error"`
	State       string             `json:"state"`
	CloudRouter []CloudRouterState `json:"cloud_router"`
	CloudVpns   []CloudVpnsState   `json:"cloud_vpns"`
}

type CloudRouterState struct {
	Name string `json:"name"`
}

type CloudVpnsState struct {
	Gateway string `json:"gateway"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type VpcProjectState struct {
	ProjectId string `json:"project_id"`
}
