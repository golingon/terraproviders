// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datacomputeregioninstancegroup

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Instances struct {
	// NamedPorts: min=0
	NamedPorts []NamedPorts `hcl:"named_ports,block" validate:"min=0"`
}

type NamedPorts struct{}

type InstancesAttributes struct {
	ref terra.Reference
}

func (i InstancesAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i InstancesAttributes) InternalWithRef(ref terra.Reference) InstancesAttributes {
	return InstancesAttributes{ref: ref}
}

func (i InstancesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i InstancesAttributes) Instance() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("instance"))
}

func (i InstancesAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("status"))
}

func (i InstancesAttributes) NamedPorts() terra.ListValue[NamedPortsAttributes] {
	return terra.ReferenceAsList[NamedPortsAttributes](i.ref.Append("named_ports"))
}

type NamedPortsAttributes struct {
	ref terra.Reference
}

func (np NamedPortsAttributes) InternalRef() (terra.Reference, error) {
	return np.ref, nil
}

func (np NamedPortsAttributes) InternalWithRef(ref terra.Reference) NamedPortsAttributes {
	return NamedPortsAttributes{ref: ref}
}

func (np NamedPortsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return np.ref.InternalTokens()
}

func (np NamedPortsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("name"))
}

func (np NamedPortsAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(np.ref.Append("port"))
}

type InstancesState struct {
	Instance   string            `json:"instance"`
	Status     string            `json:"status"`
	NamedPorts []NamedPortsState `json:"named_ports"`
}

type NamedPortsState struct {
	Name string  `json:"name"`
	Port float64 `json:"port"`
}
