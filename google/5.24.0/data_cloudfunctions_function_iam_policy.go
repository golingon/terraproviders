// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import "github.com/golingon/lingon/pkg/terra"

// NewDataCloudfunctionsFunctionIamPolicy creates a new instance of [DataCloudfunctionsFunctionIamPolicy].
func NewDataCloudfunctionsFunctionIamPolicy(name string, args DataCloudfunctionsFunctionIamPolicyArgs) *DataCloudfunctionsFunctionIamPolicy {
	return &DataCloudfunctionsFunctionIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCloudfunctionsFunctionIamPolicy)(nil)

// DataCloudfunctionsFunctionIamPolicy represents the Terraform data resource google_cloudfunctions_function_iam_policy.
type DataCloudfunctionsFunctionIamPolicy struct {
	Name string
	Args DataCloudfunctionsFunctionIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataCloudfunctionsFunctionIamPolicy].
func (cfip *DataCloudfunctionsFunctionIamPolicy) DataSource() string {
	return "google_cloudfunctions_function_iam_policy"
}

// LocalName returns the local name for [DataCloudfunctionsFunctionIamPolicy].
func (cfip *DataCloudfunctionsFunctionIamPolicy) LocalName() string {
	return cfip.Name
}

// Configuration returns the configuration (args) for [DataCloudfunctionsFunctionIamPolicy].
func (cfip *DataCloudfunctionsFunctionIamPolicy) Configuration() interface{} {
	return cfip.Args
}

// Attributes returns the attributes for [DataCloudfunctionsFunctionIamPolicy].
func (cfip *DataCloudfunctionsFunctionIamPolicy) Attributes() dataCloudfunctionsFunctionIamPolicyAttributes {
	return dataCloudfunctionsFunctionIamPolicyAttributes{ref: terra.ReferenceDataResource(cfip)}
}

// DataCloudfunctionsFunctionIamPolicyArgs contains the configurations for google_cloudfunctions_function_iam_policy.
type DataCloudfunctionsFunctionIamPolicyArgs struct {
	// CloudFunction: string, required
	CloudFunction terra.StringValue `hcl:"cloud_function,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}
type dataCloudfunctionsFunctionIamPolicyAttributes struct {
	ref terra.Reference
}

// CloudFunction returns a reference to field cloud_function of google_cloudfunctions_function_iam_policy.
func (cfip dataCloudfunctionsFunctionIamPolicyAttributes) CloudFunction() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("cloud_function"))
}

// Etag returns a reference to field etag of google_cloudfunctions_function_iam_policy.
func (cfip dataCloudfunctionsFunctionIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("etag"))
}

// Id returns a reference to field id of google_cloudfunctions_function_iam_policy.
func (cfip dataCloudfunctionsFunctionIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_cloudfunctions_function_iam_policy.
func (cfip dataCloudfunctionsFunctionIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_cloudfunctions_function_iam_policy.
func (cfip dataCloudfunctionsFunctionIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("project"))
}

// Region returns a reference to field region of google_cloudfunctions_function_iam_policy.
func (cfip dataCloudfunctionsFunctionIamPolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("region"))
}
