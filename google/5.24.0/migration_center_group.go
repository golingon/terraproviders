// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	migrationcentergroup "github.com/golingon/terraproviders/google/5.24.0/migrationcentergroup"
	"io"
)

// NewMigrationCenterGroup creates a new instance of [MigrationCenterGroup].
func NewMigrationCenterGroup(name string, args MigrationCenterGroupArgs) *MigrationCenterGroup {
	return &MigrationCenterGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MigrationCenterGroup)(nil)

// MigrationCenterGroup represents the Terraform resource google_migration_center_group.
type MigrationCenterGroup struct {
	Name      string
	Args      MigrationCenterGroupArgs
	state     *migrationCenterGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [MigrationCenterGroup].
func (mcg *MigrationCenterGroup) Type() string {
	return "google_migration_center_group"
}

// LocalName returns the local name for [MigrationCenterGroup].
func (mcg *MigrationCenterGroup) LocalName() string {
	return mcg.Name
}

// Configuration returns the configuration (args) for [MigrationCenterGroup].
func (mcg *MigrationCenterGroup) Configuration() interface{} {
	return mcg.Args
}

// DependOn is used for other resources to depend on [MigrationCenterGroup].
func (mcg *MigrationCenterGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(mcg)
}

// Dependencies returns the list of resources [MigrationCenterGroup] depends_on.
func (mcg *MigrationCenterGroup) Dependencies() terra.Dependencies {
	return mcg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [MigrationCenterGroup].
func (mcg *MigrationCenterGroup) LifecycleManagement() *terra.Lifecycle {
	return mcg.Lifecycle
}

// Attributes returns the attributes for [MigrationCenterGroup].
func (mcg *MigrationCenterGroup) Attributes() migrationCenterGroupAttributes {
	return migrationCenterGroupAttributes{ref: terra.ReferenceResource(mcg)}
}

// ImportState imports the given attribute values into [MigrationCenterGroup]'s state.
func (mcg *MigrationCenterGroup) ImportState(av io.Reader) error {
	mcg.state = &migrationCenterGroupState{}
	if err := json.NewDecoder(av).Decode(mcg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mcg.Type(), mcg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [MigrationCenterGroup] has state.
func (mcg *MigrationCenterGroup) State() (*migrationCenterGroupState, bool) {
	return mcg.state, mcg.state != nil
}

// StateMust returns the state for [MigrationCenterGroup]. Panics if the state is nil.
func (mcg *MigrationCenterGroup) StateMust() *migrationCenterGroupState {
	if mcg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mcg.Type(), mcg.LocalName()))
	}
	return mcg.state
}

// MigrationCenterGroupArgs contains the configurations for google_migration_center_group.
type MigrationCenterGroupArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// GroupId: string, required
	GroupId terra.StringValue `hcl:"group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Timeouts: optional
	Timeouts *migrationcentergroup.Timeouts `hcl:"timeouts,block"`
}
type migrationCenterGroupAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("create_time"))
}

// Description returns a reference to field description of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("display_name"))
}

// EffectiveLabels returns a reference to field effective_labels of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mcg.ref.Append("effective_labels"))
}

// GroupId returns a reference to field group_id of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("group_id"))
}

// Id returns a reference to field id of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("id"))
}

// Labels returns a reference to field labels of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mcg.ref.Append("labels"))
}

// Location returns a reference to field location of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("location"))
}

// Name returns a reference to field name of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("name"))
}

// Project returns a reference to field project of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("project"))
}

// TerraformLabels returns a reference to field terraform_labels of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mcg.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_migration_center_group.
func (mcg migrationCenterGroupAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(mcg.ref.Append("update_time"))
}

func (mcg migrationCenterGroupAttributes) Timeouts() migrationcentergroup.TimeoutsAttributes {
	return terra.ReferenceAsSingle[migrationcentergroup.TimeoutsAttributes](mcg.ref.Append("timeouts"))
}

type migrationCenterGroupState struct {
	CreateTime      string                              `json:"create_time"`
	Description     string                              `json:"description"`
	DisplayName     string                              `json:"display_name"`
	EffectiveLabels map[string]string                   `json:"effective_labels"`
	GroupId         string                              `json:"group_id"`
	Id              string                              `json:"id"`
	Labels          map[string]string                   `json:"labels"`
	Location        string                              `json:"location"`
	Name            string                              `json:"name"`
	Project         string                              `json:"project"`
	TerraformLabels map[string]string                   `json:"terraform_labels"`
	UpdateTime      string                              `json:"update_time"`
	Timeouts        *migrationcentergroup.TimeoutsState `json:"timeouts"`
}
