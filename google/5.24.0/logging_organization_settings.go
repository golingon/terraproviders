// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	loggingorganizationsettings "github.com/golingon/terraproviders/google/5.24.0/loggingorganizationsettings"
	"io"
)

// NewLoggingOrganizationSettings creates a new instance of [LoggingOrganizationSettings].
func NewLoggingOrganizationSettings(name string, args LoggingOrganizationSettingsArgs) *LoggingOrganizationSettings {
	return &LoggingOrganizationSettings{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LoggingOrganizationSettings)(nil)

// LoggingOrganizationSettings represents the Terraform resource google_logging_organization_settings.
type LoggingOrganizationSettings struct {
	Name      string
	Args      LoggingOrganizationSettingsArgs
	state     *loggingOrganizationSettingsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LoggingOrganizationSettings].
func (los *LoggingOrganizationSettings) Type() string {
	return "google_logging_organization_settings"
}

// LocalName returns the local name for [LoggingOrganizationSettings].
func (los *LoggingOrganizationSettings) LocalName() string {
	return los.Name
}

// Configuration returns the configuration (args) for [LoggingOrganizationSettings].
func (los *LoggingOrganizationSettings) Configuration() interface{} {
	return los.Args
}

// DependOn is used for other resources to depend on [LoggingOrganizationSettings].
func (los *LoggingOrganizationSettings) DependOn() terra.Reference {
	return terra.ReferenceResource(los)
}

// Dependencies returns the list of resources [LoggingOrganizationSettings] depends_on.
func (los *LoggingOrganizationSettings) Dependencies() terra.Dependencies {
	return los.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LoggingOrganizationSettings].
func (los *LoggingOrganizationSettings) LifecycleManagement() *terra.Lifecycle {
	return los.Lifecycle
}

// Attributes returns the attributes for [LoggingOrganizationSettings].
func (los *LoggingOrganizationSettings) Attributes() loggingOrganizationSettingsAttributes {
	return loggingOrganizationSettingsAttributes{ref: terra.ReferenceResource(los)}
}

// ImportState imports the given attribute values into [LoggingOrganizationSettings]'s state.
func (los *LoggingOrganizationSettings) ImportState(av io.Reader) error {
	los.state = &loggingOrganizationSettingsState{}
	if err := json.NewDecoder(av).Decode(los.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", los.Type(), los.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LoggingOrganizationSettings] has state.
func (los *LoggingOrganizationSettings) State() (*loggingOrganizationSettingsState, bool) {
	return los.state, los.state != nil
}

// StateMust returns the state for [LoggingOrganizationSettings]. Panics if the state is nil.
func (los *LoggingOrganizationSettings) StateMust() *loggingOrganizationSettingsState {
	if los.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", los.Type(), los.LocalName()))
	}
	return los.state
}

// LoggingOrganizationSettingsArgs contains the configurations for google_logging_organization_settings.
type LoggingOrganizationSettingsArgs struct {
	// DisableDefaultSink: bool, optional
	DisableDefaultSink terra.BoolValue `hcl:"disable_default_sink,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyName: string, optional
	KmsKeyName terra.StringValue `hcl:"kms_key_name,attr"`
	// Organization: string, required
	Organization terra.StringValue `hcl:"organization,attr" validate:"required"`
	// StorageLocation: string, optional
	StorageLocation terra.StringValue `hcl:"storage_location,attr"`
	// Timeouts: optional
	Timeouts *loggingorganizationsettings.Timeouts `hcl:"timeouts,block"`
}
type loggingOrganizationSettingsAttributes struct {
	ref terra.Reference
}

// DisableDefaultSink returns a reference to field disable_default_sink of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) DisableDefaultSink() terra.BoolValue {
	return terra.ReferenceAsBool(los.ref.Append("disable_default_sink"))
}

// Id returns a reference to field id of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("id"))
}

// KmsKeyName returns a reference to field kms_key_name of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("kms_key_name"))
}

// KmsServiceAccountId returns a reference to field kms_service_account_id of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) KmsServiceAccountId() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("kms_service_account_id"))
}

// LoggingServiceAccountId returns a reference to field logging_service_account_id of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) LoggingServiceAccountId() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("logging_service_account_id"))
}

// Name returns a reference to field name of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("name"))
}

// Organization returns a reference to field organization of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) Organization() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("organization"))
}

// StorageLocation returns a reference to field storage_location of google_logging_organization_settings.
func (los loggingOrganizationSettingsAttributes) StorageLocation() terra.StringValue {
	return terra.ReferenceAsString(los.ref.Append("storage_location"))
}

func (los loggingOrganizationSettingsAttributes) Timeouts() loggingorganizationsettings.TimeoutsAttributes {
	return terra.ReferenceAsSingle[loggingorganizationsettings.TimeoutsAttributes](los.ref.Append("timeouts"))
}

type loggingOrganizationSettingsState struct {
	DisableDefaultSink      bool                                       `json:"disable_default_sink"`
	Id                      string                                     `json:"id"`
	KmsKeyName              string                                     `json:"kms_key_name"`
	KmsServiceAccountId     string                                     `json:"kms_service_account_id"`
	LoggingServiceAccountId string                                     `json:"logging_service_account_id"`
	Name                    string                                     `json:"name"`
	Organization            string                                     `json:"organization"`
	StorageLocation         string                                     `json:"storage_location"`
	Timeouts                *loggingorganizationsettings.TimeoutsState `json:"timeouts"`
}
