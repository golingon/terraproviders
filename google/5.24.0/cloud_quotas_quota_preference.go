// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	cloudquotasquotapreference "github.com/golingon/terraproviders/google/5.24.0/cloudquotasquotapreference"
	"io"
)

// NewCloudQuotasQuotaPreference creates a new instance of [CloudQuotasQuotaPreference].
func NewCloudQuotasQuotaPreference(name string, args CloudQuotasQuotaPreferenceArgs) *CloudQuotasQuotaPreference {
	return &CloudQuotasQuotaPreference{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CloudQuotasQuotaPreference)(nil)

// CloudQuotasQuotaPreference represents the Terraform resource google_cloud_quotas_quota_preference.
type CloudQuotasQuotaPreference struct {
	Name      string
	Args      CloudQuotasQuotaPreferenceArgs
	state     *cloudQuotasQuotaPreferenceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [CloudQuotasQuotaPreference].
func (cqqp *CloudQuotasQuotaPreference) Type() string {
	return "google_cloud_quotas_quota_preference"
}

// LocalName returns the local name for [CloudQuotasQuotaPreference].
func (cqqp *CloudQuotasQuotaPreference) LocalName() string {
	return cqqp.Name
}

// Configuration returns the configuration (args) for [CloudQuotasQuotaPreference].
func (cqqp *CloudQuotasQuotaPreference) Configuration() interface{} {
	return cqqp.Args
}

// DependOn is used for other resources to depend on [CloudQuotasQuotaPreference].
func (cqqp *CloudQuotasQuotaPreference) DependOn() terra.Reference {
	return terra.ReferenceResource(cqqp)
}

// Dependencies returns the list of resources [CloudQuotasQuotaPreference] depends_on.
func (cqqp *CloudQuotasQuotaPreference) Dependencies() terra.Dependencies {
	return cqqp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [CloudQuotasQuotaPreference].
func (cqqp *CloudQuotasQuotaPreference) LifecycleManagement() *terra.Lifecycle {
	return cqqp.Lifecycle
}

// Attributes returns the attributes for [CloudQuotasQuotaPreference].
func (cqqp *CloudQuotasQuotaPreference) Attributes() cloudQuotasQuotaPreferenceAttributes {
	return cloudQuotasQuotaPreferenceAttributes{ref: terra.ReferenceResource(cqqp)}
}

// ImportState imports the given attribute values into [CloudQuotasQuotaPreference]'s state.
func (cqqp *CloudQuotasQuotaPreference) ImportState(av io.Reader) error {
	cqqp.state = &cloudQuotasQuotaPreferenceState{}
	if err := json.NewDecoder(av).Decode(cqqp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cqqp.Type(), cqqp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [CloudQuotasQuotaPreference] has state.
func (cqqp *CloudQuotasQuotaPreference) State() (*cloudQuotasQuotaPreferenceState, bool) {
	return cqqp.state, cqqp.state != nil
}

// StateMust returns the state for [CloudQuotasQuotaPreference]. Panics if the state is nil.
func (cqqp *CloudQuotasQuotaPreference) StateMust() *cloudQuotasQuotaPreferenceState {
	if cqqp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cqqp.Type(), cqqp.LocalName()))
	}
	return cqqp.state
}

// CloudQuotasQuotaPreferenceArgs contains the configurations for google_cloud_quotas_quota_preference.
type CloudQuotasQuotaPreferenceArgs struct {
	// ContactEmail: string, optional
	ContactEmail terra.StringValue `hcl:"contact_email,attr"`
	// Dimensions: map of string, optional
	Dimensions terra.MapValue[terra.StringValue] `hcl:"dimensions,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IgnoreSafetyChecks: string, optional
	IgnoreSafetyChecks terra.StringValue `hcl:"ignore_safety_checks,attr"`
	// Justification: string, optional
	Justification terra.StringValue `hcl:"justification,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// QuotaId: string, optional
	QuotaId terra.StringValue `hcl:"quota_id,attr"`
	// Service: string, optional
	Service terra.StringValue `hcl:"service,attr"`
	// QuotaConfig: required
	QuotaConfig *cloudquotasquotapreference.QuotaConfig `hcl:"quota_config,block" validate:"required"`
	// Timeouts: optional
	Timeouts *cloudquotasquotapreference.Timeouts `hcl:"timeouts,block"`
}
type cloudQuotasQuotaPreferenceAttributes struct {
	ref terra.Reference
}

// ContactEmail returns a reference to field contact_email of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) ContactEmail() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("contact_email"))
}

// CreateTime returns a reference to field create_time of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("create_time"))
}

// Dimensions returns a reference to field dimensions of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Dimensions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cqqp.ref.Append("dimensions"))
}

// Etag returns a reference to field etag of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("etag"))
}

// Id returns a reference to field id of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("id"))
}

// IgnoreSafetyChecks returns a reference to field ignore_safety_checks of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) IgnoreSafetyChecks() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("ignore_safety_checks"))
}

// Justification returns a reference to field justification of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Justification() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("justification"))
}

// Name returns a reference to field name of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("parent"))
}

// QuotaId returns a reference to field quota_id of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) QuotaId() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("quota_id"))
}

// Reconciling returns a reference to field reconciling of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(cqqp.ref.Append("reconciling"))
}

// Service returns a reference to field service of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("service"))
}

// UpdateTime returns a reference to field update_time of google_cloud_quotas_quota_preference.
func (cqqp cloudQuotasQuotaPreferenceAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(cqqp.ref.Append("update_time"))
}

func (cqqp cloudQuotasQuotaPreferenceAttributes) QuotaConfig() terra.ListValue[cloudquotasquotapreference.QuotaConfigAttributes] {
	return terra.ReferenceAsList[cloudquotasquotapreference.QuotaConfigAttributes](cqqp.ref.Append("quota_config"))
}

func (cqqp cloudQuotasQuotaPreferenceAttributes) Timeouts() cloudquotasquotapreference.TimeoutsAttributes {
	return terra.ReferenceAsSingle[cloudquotasquotapreference.TimeoutsAttributes](cqqp.ref.Append("timeouts"))
}

type cloudQuotasQuotaPreferenceState struct {
	ContactEmail       string                                        `json:"contact_email"`
	CreateTime         string                                        `json:"create_time"`
	Dimensions         map[string]string                             `json:"dimensions"`
	Etag               string                                        `json:"etag"`
	Id                 string                                        `json:"id"`
	IgnoreSafetyChecks string                                        `json:"ignore_safety_checks"`
	Justification      string                                        `json:"justification"`
	Name               string                                        `json:"name"`
	Parent             string                                        `json:"parent"`
	QuotaId            string                                        `json:"quota_id"`
	Reconciling        bool                                          `json:"reconciling"`
	Service            string                                        `json:"service"`
	UpdateTime         string                                        `json:"update_time"`
	QuotaConfig        []cloudquotasquotapreference.QuotaConfigState `json:"quota_config"`
	Timeouts           *cloudquotasquotapreference.TimeoutsState     `json:"timeouts"`
}
