// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewLoggingOrganizationExclusion creates a new instance of [LoggingOrganizationExclusion].
func NewLoggingOrganizationExclusion(name string, args LoggingOrganizationExclusionArgs) *LoggingOrganizationExclusion {
	return &LoggingOrganizationExclusion{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LoggingOrganizationExclusion)(nil)

// LoggingOrganizationExclusion represents the Terraform resource google_logging_organization_exclusion.
type LoggingOrganizationExclusion struct {
	Name      string
	Args      LoggingOrganizationExclusionArgs
	state     *loggingOrganizationExclusionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LoggingOrganizationExclusion].
func (loe *LoggingOrganizationExclusion) Type() string {
	return "google_logging_organization_exclusion"
}

// LocalName returns the local name for [LoggingOrganizationExclusion].
func (loe *LoggingOrganizationExclusion) LocalName() string {
	return loe.Name
}

// Configuration returns the configuration (args) for [LoggingOrganizationExclusion].
func (loe *LoggingOrganizationExclusion) Configuration() interface{} {
	return loe.Args
}

// DependOn is used for other resources to depend on [LoggingOrganizationExclusion].
func (loe *LoggingOrganizationExclusion) DependOn() terra.Reference {
	return terra.ReferenceResource(loe)
}

// Dependencies returns the list of resources [LoggingOrganizationExclusion] depends_on.
func (loe *LoggingOrganizationExclusion) Dependencies() terra.Dependencies {
	return loe.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LoggingOrganizationExclusion].
func (loe *LoggingOrganizationExclusion) LifecycleManagement() *terra.Lifecycle {
	return loe.Lifecycle
}

// Attributes returns the attributes for [LoggingOrganizationExclusion].
func (loe *LoggingOrganizationExclusion) Attributes() loggingOrganizationExclusionAttributes {
	return loggingOrganizationExclusionAttributes{ref: terra.ReferenceResource(loe)}
}

// ImportState imports the given attribute values into [LoggingOrganizationExclusion]'s state.
func (loe *LoggingOrganizationExclusion) ImportState(av io.Reader) error {
	loe.state = &loggingOrganizationExclusionState{}
	if err := json.NewDecoder(av).Decode(loe.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", loe.Type(), loe.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LoggingOrganizationExclusion] has state.
func (loe *LoggingOrganizationExclusion) State() (*loggingOrganizationExclusionState, bool) {
	return loe.state, loe.state != nil
}

// StateMust returns the state for [LoggingOrganizationExclusion]. Panics if the state is nil.
func (loe *LoggingOrganizationExclusion) StateMust() *loggingOrganizationExclusionState {
	if loe.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", loe.Type(), loe.LocalName()))
	}
	return loe.state
}

// LoggingOrganizationExclusionArgs contains the configurations for google_logging_organization_exclusion.
type LoggingOrganizationExclusionArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// Filter: string, required
	Filter terra.StringValue `hcl:"filter,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OrgId: string, required
	OrgId terra.StringValue `hcl:"org_id,attr" validate:"required"`
}
type loggingOrganizationExclusionAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_logging_organization_exclusion.
func (loe loggingOrganizationExclusionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(loe.ref.Append("description"))
}

// Disabled returns a reference to field disabled of google_logging_organization_exclusion.
func (loe loggingOrganizationExclusionAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(loe.ref.Append("disabled"))
}

// Filter returns a reference to field filter of google_logging_organization_exclusion.
func (loe loggingOrganizationExclusionAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(loe.ref.Append("filter"))
}

// Id returns a reference to field id of google_logging_organization_exclusion.
func (loe loggingOrganizationExclusionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(loe.ref.Append("id"))
}

// Name returns a reference to field name of google_logging_organization_exclusion.
func (loe loggingOrganizationExclusionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(loe.ref.Append("name"))
}

// OrgId returns a reference to field org_id of google_logging_organization_exclusion.
func (loe loggingOrganizationExclusionAttributes) OrgId() terra.StringValue {
	return terra.ReferenceAsString(loe.ref.Append("org_id"))
}

type loggingOrganizationExclusionState struct {
	Description string `json:"description"`
	Disabled    bool   `json:"disabled"`
	Filter      string `json:"filter"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	OrgId       string `json:"org_id"`
}
