// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	iapwebregionbackendserviceiambinding "github.com/golingon/terraproviders/google/4.84.0/iapwebregionbackendserviceiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIapWebRegionBackendServiceIamBinding creates a new instance of [IapWebRegionBackendServiceIamBinding].
func NewIapWebRegionBackendServiceIamBinding(name string, args IapWebRegionBackendServiceIamBindingArgs) *IapWebRegionBackendServiceIamBinding {
	return &IapWebRegionBackendServiceIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebRegionBackendServiceIamBinding)(nil)

// IapWebRegionBackendServiceIamBinding represents the Terraform resource google_iap_web_region_backend_service_iam_binding.
type IapWebRegionBackendServiceIamBinding struct {
	Name      string
	Args      IapWebRegionBackendServiceIamBindingArgs
	state     *iapWebRegionBackendServiceIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IapWebRegionBackendServiceIamBinding].
func (iwrbsib *IapWebRegionBackendServiceIamBinding) Type() string {
	return "google_iap_web_region_backend_service_iam_binding"
}

// LocalName returns the local name for [IapWebRegionBackendServiceIamBinding].
func (iwrbsib *IapWebRegionBackendServiceIamBinding) LocalName() string {
	return iwrbsib.Name
}

// Configuration returns the configuration (args) for [IapWebRegionBackendServiceIamBinding].
func (iwrbsib *IapWebRegionBackendServiceIamBinding) Configuration() interface{} {
	return iwrbsib.Args
}

// DependOn is used for other resources to depend on [IapWebRegionBackendServiceIamBinding].
func (iwrbsib *IapWebRegionBackendServiceIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(iwrbsib)
}

// Dependencies returns the list of resources [IapWebRegionBackendServiceIamBinding] depends_on.
func (iwrbsib *IapWebRegionBackendServiceIamBinding) Dependencies() terra.Dependencies {
	return iwrbsib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IapWebRegionBackendServiceIamBinding].
func (iwrbsib *IapWebRegionBackendServiceIamBinding) LifecycleManagement() *terra.Lifecycle {
	return iwrbsib.Lifecycle
}

// Attributes returns the attributes for [IapWebRegionBackendServiceIamBinding].
func (iwrbsib *IapWebRegionBackendServiceIamBinding) Attributes() iapWebRegionBackendServiceIamBindingAttributes {
	return iapWebRegionBackendServiceIamBindingAttributes{ref: terra.ReferenceResource(iwrbsib)}
}

// ImportState imports the given attribute values into [IapWebRegionBackendServiceIamBinding]'s state.
func (iwrbsib *IapWebRegionBackendServiceIamBinding) ImportState(av io.Reader) error {
	iwrbsib.state = &iapWebRegionBackendServiceIamBindingState{}
	if err := json.NewDecoder(av).Decode(iwrbsib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwrbsib.Type(), iwrbsib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IapWebRegionBackendServiceIamBinding] has state.
func (iwrbsib *IapWebRegionBackendServiceIamBinding) State() (*iapWebRegionBackendServiceIamBindingState, bool) {
	return iwrbsib.state, iwrbsib.state != nil
}

// StateMust returns the state for [IapWebRegionBackendServiceIamBinding]. Panics if the state is nil.
func (iwrbsib *IapWebRegionBackendServiceIamBinding) StateMust() *iapWebRegionBackendServiceIamBindingState {
	if iwrbsib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwrbsib.Type(), iwrbsib.LocalName()))
	}
	return iwrbsib.state
}

// IapWebRegionBackendServiceIamBindingArgs contains the configurations for google_iap_web_region_backend_service_iam_binding.
type IapWebRegionBackendServiceIamBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// WebRegionBackendService: string, required
	WebRegionBackendService terra.StringValue `hcl:"web_region_backend_service,attr" validate:"required"`
	// Condition: optional
	Condition *iapwebregionbackendserviceiambinding.Condition `hcl:"condition,block"`
}
type iapWebRegionBackendServiceIamBindingAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(iwrbsib.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iwrbsib.ref.Append("id"))
}

// Members returns a reference to field members of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](iwrbsib.ref.Append("members"))
}

// Project returns a reference to field project of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(iwrbsib.ref.Append("project"))
}

// Region returns a reference to field region of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(iwrbsib.ref.Append("region"))
}

// Role returns a reference to field role of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(iwrbsib.ref.Append("role"))
}

// WebRegionBackendService returns a reference to field web_region_backend_service of google_iap_web_region_backend_service_iam_binding.
func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) WebRegionBackendService() terra.StringValue {
	return terra.ReferenceAsString(iwrbsib.ref.Append("web_region_backend_service"))
}

func (iwrbsib iapWebRegionBackendServiceIamBindingAttributes) Condition() terra.ListValue[iapwebregionbackendserviceiambinding.ConditionAttributes] {
	return terra.ReferenceAsList[iapwebregionbackendserviceiambinding.ConditionAttributes](iwrbsib.ref.Append("condition"))
}

type iapWebRegionBackendServiceIamBindingState struct {
	Etag                    string                                                `json:"etag"`
	Id                      string                                                `json:"id"`
	Members                 []string                                              `json:"members"`
	Project                 string                                                `json:"project"`
	Region                  string                                                `json:"region"`
	Role                    string                                                `json:"role"`
	WebRegionBackendService string                                                `json:"web_region_backend_service"`
	Condition               []iapwebregionbackendserviceiambinding.ConditionState `json:"condition"`
}
