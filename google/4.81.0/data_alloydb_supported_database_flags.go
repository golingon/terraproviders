// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	dataalloydbsupporteddatabaseflags "github.com/golingon/terraproviders/google/4.81.0/dataalloydbsupporteddatabaseflags"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataAlloydbSupportedDatabaseFlags creates a new instance of [DataAlloydbSupportedDatabaseFlags].
func NewDataAlloydbSupportedDatabaseFlags(name string, args DataAlloydbSupportedDatabaseFlagsArgs) *DataAlloydbSupportedDatabaseFlags {
	return &DataAlloydbSupportedDatabaseFlags{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAlloydbSupportedDatabaseFlags)(nil)

// DataAlloydbSupportedDatabaseFlags represents the Terraform data resource google_alloydb_supported_database_flags.
type DataAlloydbSupportedDatabaseFlags struct {
	Name string
	Args DataAlloydbSupportedDatabaseFlagsArgs
}

// DataSource returns the Terraform object type for [DataAlloydbSupportedDatabaseFlags].
func (asdf *DataAlloydbSupportedDatabaseFlags) DataSource() string {
	return "google_alloydb_supported_database_flags"
}

// LocalName returns the local name for [DataAlloydbSupportedDatabaseFlags].
func (asdf *DataAlloydbSupportedDatabaseFlags) LocalName() string {
	return asdf.Name
}

// Configuration returns the configuration (args) for [DataAlloydbSupportedDatabaseFlags].
func (asdf *DataAlloydbSupportedDatabaseFlags) Configuration() interface{} {
	return asdf.Args
}

// Attributes returns the attributes for [DataAlloydbSupportedDatabaseFlags].
func (asdf *DataAlloydbSupportedDatabaseFlags) Attributes() dataAlloydbSupportedDatabaseFlagsAttributes {
	return dataAlloydbSupportedDatabaseFlagsAttributes{ref: terra.ReferenceDataResource(asdf)}
}

// DataAlloydbSupportedDatabaseFlagsArgs contains the configurations for google_alloydb_supported_database_flags.
type DataAlloydbSupportedDatabaseFlagsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SupportedDatabaseFlags: min=0
	SupportedDatabaseFlags []dataalloydbsupporteddatabaseflags.SupportedDatabaseFlags `hcl:"supported_database_flags,block" validate:"min=0"`
}
type dataAlloydbSupportedDatabaseFlagsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_alloydb_supported_database_flags.
func (asdf dataAlloydbSupportedDatabaseFlagsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asdf.ref.Append("id"))
}

// Location returns a reference to field location of google_alloydb_supported_database_flags.
func (asdf dataAlloydbSupportedDatabaseFlagsAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(asdf.ref.Append("location"))
}

// Project returns a reference to field project of google_alloydb_supported_database_flags.
func (asdf dataAlloydbSupportedDatabaseFlagsAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(asdf.ref.Append("project"))
}

func (asdf dataAlloydbSupportedDatabaseFlagsAttributes) SupportedDatabaseFlags() terra.ListValue[dataalloydbsupporteddatabaseflags.SupportedDatabaseFlagsAttributes] {
	return terra.ReferenceAsList[dataalloydbsupporteddatabaseflags.SupportedDatabaseFlagsAttributes](asdf.ref.Append("supported_database_flags"))
}
