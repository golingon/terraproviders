// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	apigeeorganization "github.com/golingon/terraproviders/google/4.59.0/apigeeorganization"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApigeeOrganization(name string, args ApigeeOrganizationArgs) *ApigeeOrganization {
	return &ApigeeOrganization{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApigeeOrganization)(nil)

type ApigeeOrganization struct {
	Name  string
	Args  ApigeeOrganizationArgs
	state *apigeeOrganizationState
}

func (ao *ApigeeOrganization) Type() string {
	return "google_apigee_organization"
}

func (ao *ApigeeOrganization) LocalName() string {
	return ao.Name
}

func (ao *ApigeeOrganization) Configuration() interface{} {
	return ao.Args
}

func (ao *ApigeeOrganization) Attributes() apigeeOrganizationAttributes {
	return apigeeOrganizationAttributes{ref: terra.ReferenceResource(ao)}
}

func (ao *ApigeeOrganization) ImportState(av io.Reader) error {
	ao.state = &apigeeOrganizationState{}
	if err := json.NewDecoder(av).Decode(ao.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ao.Type(), ao.LocalName(), err)
	}
	return nil
}

func (ao *ApigeeOrganization) State() (*apigeeOrganizationState, bool) {
	return ao.state, ao.state != nil
}

func (ao *ApigeeOrganization) StateMust() *apigeeOrganizationState {
	if ao.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ao.Type(), ao.LocalName()))
	}
	return ao.state
}

func (ao *ApigeeOrganization) DependOn() terra.Reference {
	return terra.ReferenceResource(ao)
}

type ApigeeOrganizationArgs struct {
	// AnalyticsRegion: string, optional
	AnalyticsRegion terra.StringValue `hcl:"analytics_region,attr"`
	// AuthorizedNetwork: string, optional
	AuthorizedNetwork terra.StringValue `hcl:"authorized_network,attr"`
	// BillingType: string, optional
	BillingType terra.StringValue `hcl:"billing_type,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ProjectId: string, required
	ProjectId terra.StringValue `hcl:"project_id,attr" validate:"required"`
	// Retention: string, optional
	Retention terra.StringValue `hcl:"retention,attr"`
	// RuntimeDatabaseEncryptionKeyName: string, optional
	RuntimeDatabaseEncryptionKeyName terra.StringValue `hcl:"runtime_database_encryption_key_name,attr"`
	// RuntimeType: string, optional
	RuntimeType terra.StringValue `hcl:"runtime_type,attr"`
	// Properties: optional
	Properties *apigeeorganization.Properties `hcl:"properties,block"`
	// Timeouts: optional
	Timeouts *apigeeorganization.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApigeeOrganization depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apigeeOrganizationAttributes struct {
	ref terra.Reference
}

func (ao apigeeOrganizationAttributes) AnalyticsRegion() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("analytics_region"))
}

func (ao apigeeOrganizationAttributes) AuthorizedNetwork() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("authorized_network"))
}

func (ao apigeeOrganizationAttributes) BillingType() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("billing_type"))
}

func (ao apigeeOrganizationAttributes) CaCertificate() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("ca_certificate"))
}

func (ao apigeeOrganizationAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("description"))
}

func (ao apigeeOrganizationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("display_name"))
}

func (ao apigeeOrganizationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("id"))
}

func (ao apigeeOrganizationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("name"))
}

func (ao apigeeOrganizationAttributes) ProjectId() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("project_id"))
}

func (ao apigeeOrganizationAttributes) Retention() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("retention"))
}

func (ao apigeeOrganizationAttributes) RuntimeDatabaseEncryptionKeyName() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("runtime_database_encryption_key_name"))
}

func (ao apigeeOrganizationAttributes) RuntimeType() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("runtime_type"))
}

func (ao apigeeOrganizationAttributes) SubscriptionType() terra.StringValue {
	return terra.ReferenceString(ao.ref.Append("subscription_type"))
}

func (ao apigeeOrganizationAttributes) Properties() terra.ListValue[apigeeorganization.PropertiesAttributes] {
	return terra.ReferenceList[apigeeorganization.PropertiesAttributes](ao.ref.Append("properties"))
}

func (ao apigeeOrganizationAttributes) Timeouts() apigeeorganization.TimeoutsAttributes {
	return terra.ReferenceSingle[apigeeorganization.TimeoutsAttributes](ao.ref.Append("timeouts"))
}

type apigeeOrganizationState struct {
	AnalyticsRegion                  string                               `json:"analytics_region"`
	AuthorizedNetwork                string                               `json:"authorized_network"`
	BillingType                      string                               `json:"billing_type"`
	CaCertificate                    string                               `json:"ca_certificate"`
	Description                      string                               `json:"description"`
	DisplayName                      string                               `json:"display_name"`
	Id                               string                               `json:"id"`
	Name                             string                               `json:"name"`
	ProjectId                        string                               `json:"project_id"`
	Retention                        string                               `json:"retention"`
	RuntimeDatabaseEncryptionKeyName string                               `json:"runtime_database_encryption_key_name"`
	RuntimeType                      string                               `json:"runtime_type"`
	SubscriptionType                 string                               `json:"subscription_type"`
	Properties                       []apigeeorganization.PropertiesState `json:"properties"`
	Timeouts                         *apigeeorganization.TimeoutsState    `json:"timeouts"`
}
