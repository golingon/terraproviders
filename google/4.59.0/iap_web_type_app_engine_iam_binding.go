// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	iapwebtypeappengineiambinding "github.com/golingon/terraproviders/google/4.59.0/iapwebtypeappengineiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIapWebTypeAppEngineIamBinding(name string, args IapWebTypeAppEngineIamBindingArgs) *IapWebTypeAppEngineIamBinding {
	return &IapWebTypeAppEngineIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebTypeAppEngineIamBinding)(nil)

type IapWebTypeAppEngineIamBinding struct {
	Name  string
	Args  IapWebTypeAppEngineIamBindingArgs
	state *iapWebTypeAppEngineIamBindingState
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) Type() string {
	return "google_iap_web_type_app_engine_iam_binding"
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) LocalName() string {
	return iwtaeib.Name
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) Configuration() interface{} {
	return iwtaeib.Args
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) Attributes() iapWebTypeAppEngineIamBindingAttributes {
	return iapWebTypeAppEngineIamBindingAttributes{ref: terra.ReferenceResource(iwtaeib)}
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) ImportState(av io.Reader) error {
	iwtaeib.state = &iapWebTypeAppEngineIamBindingState{}
	if err := json.NewDecoder(av).Decode(iwtaeib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwtaeib.Type(), iwtaeib.LocalName(), err)
	}
	return nil
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) State() (*iapWebTypeAppEngineIamBindingState, bool) {
	return iwtaeib.state, iwtaeib.state != nil
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) StateMust() *iapWebTypeAppEngineIamBindingState {
	if iwtaeib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwtaeib.Type(), iwtaeib.LocalName()))
	}
	return iwtaeib.state
}

func (iwtaeib *IapWebTypeAppEngineIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(iwtaeib)
}

type IapWebTypeAppEngineIamBindingArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *iapwebtypeappengineiambinding.Condition `hcl:"condition,block"`
	// DependsOn contains resources that IapWebTypeAppEngineIamBinding depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iapWebTypeAppEngineIamBindingAttributes struct {
	ref terra.Reference
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) AppId() terra.StringValue {
	return terra.ReferenceString(iwtaeib.ref.Append("app_id"))
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(iwtaeib.ref.Append("etag"))
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iwtaeib.ref.Append("id"))
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iwtaeib.ref.Append("members"))
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceString(iwtaeib.ref.Append("project"))
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceString(iwtaeib.ref.Append("role"))
}

func (iwtaeib iapWebTypeAppEngineIamBindingAttributes) Condition() terra.ListValue[iapwebtypeappengineiambinding.ConditionAttributes] {
	return terra.ReferenceList[iapwebtypeappengineiambinding.ConditionAttributes](iwtaeib.ref.Append("condition"))
}

type iapWebTypeAppEngineIamBindingState struct {
	AppId     string                                         `json:"app_id"`
	Etag      string                                         `json:"etag"`
	Id        string                                         `json:"id"`
	Members   []string                                       `json:"members"`
	Project   string                                         `json:"project"`
	Role      string                                         `json:"role"`
	Condition []iapwebtypeappengineiambinding.ConditionState `json:"condition"`
}
