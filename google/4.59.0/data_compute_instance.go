// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomputeinstance "github.com/golingon/terraproviders/google/4.59.0/datacomputeinstance"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComputeInstance(name string, args DataComputeInstanceArgs) *DataComputeInstance {
	return &DataComputeInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeInstance)(nil)

type DataComputeInstance struct {
	Name string
	Args DataComputeInstanceArgs
}

func (ci *DataComputeInstance) DataSource() string {
	return "google_compute_instance"
}

func (ci *DataComputeInstance) LocalName() string {
	return ci.Name
}

func (ci *DataComputeInstance) Configuration() interface{} {
	return ci.Args
}

func (ci *DataComputeInstance) Attributes() dataComputeInstanceAttributes {
	return dataComputeInstanceAttributes{ref: terra.ReferenceDataResource(ci)}
}

type DataComputeInstanceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SelfLink: string, optional
	SelfLink terra.StringValue `hcl:"self_link,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
	// AdvancedMachineFeatures: min=0
	AdvancedMachineFeatures []datacomputeinstance.AdvancedMachineFeatures `hcl:"advanced_machine_features,block" validate:"min=0"`
	// AttachedDisk: min=0
	AttachedDisk []datacomputeinstance.AttachedDisk `hcl:"attached_disk,block" validate:"min=0"`
	// BootDisk: min=0
	BootDisk []datacomputeinstance.BootDisk `hcl:"boot_disk,block" validate:"min=0"`
	// ConfidentialInstanceConfig: min=0
	ConfidentialInstanceConfig []datacomputeinstance.ConfidentialInstanceConfig `hcl:"confidential_instance_config,block" validate:"min=0"`
	// GuestAccelerator: min=0
	GuestAccelerator []datacomputeinstance.GuestAccelerator `hcl:"guest_accelerator,block" validate:"min=0"`
	// NetworkInterface: min=0
	NetworkInterface []datacomputeinstance.NetworkInterface `hcl:"network_interface,block" validate:"min=0"`
	// ReservationAffinity: min=0
	ReservationAffinity []datacomputeinstance.ReservationAffinity `hcl:"reservation_affinity,block" validate:"min=0"`
	// Scheduling: min=0
	Scheduling []datacomputeinstance.Scheduling `hcl:"scheduling,block" validate:"min=0"`
	// ScratchDisk: min=0
	ScratchDisk []datacomputeinstance.ScratchDisk `hcl:"scratch_disk,block" validate:"min=0"`
	// ServiceAccount: min=0
	ServiceAccount []datacomputeinstance.ServiceAccount `hcl:"service_account,block" validate:"min=0"`
	// ShieldedInstanceConfig: min=0
	ShieldedInstanceConfig []datacomputeinstance.ShieldedInstanceConfig `hcl:"shielded_instance_config,block" validate:"min=0"`
}
type dataComputeInstanceAttributes struct {
	ref terra.Reference
}

func (ci dataComputeInstanceAttributes) AllowStoppingForUpdate() terra.BoolValue {
	return terra.ReferenceBool(ci.ref.Append("allow_stopping_for_update"))
}

func (ci dataComputeInstanceAttributes) CanIpForward() terra.BoolValue {
	return terra.ReferenceBool(ci.ref.Append("can_ip_forward"))
}

func (ci dataComputeInstanceAttributes) CpuPlatform() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("cpu_platform"))
}

func (ci dataComputeInstanceAttributes) CurrentStatus() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("current_status"))
}

func (ci dataComputeInstanceAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceBool(ci.ref.Append("deletion_protection"))
}

func (ci dataComputeInstanceAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("description"))
}

func (ci dataComputeInstanceAttributes) DesiredStatus() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("desired_status"))
}

func (ci dataComputeInstanceAttributes) EnableDisplay() terra.BoolValue {
	return terra.ReferenceBool(ci.ref.Append("enable_display"))
}

func (ci dataComputeInstanceAttributes) Hostname() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("hostname"))
}

func (ci dataComputeInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("id"))
}

func (ci dataComputeInstanceAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("instance_id"))
}

func (ci dataComputeInstanceAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("label_fingerprint"))
}

func (ci dataComputeInstanceAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ci.ref.Append("labels"))
}

func (ci dataComputeInstanceAttributes) MachineType() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("machine_type"))
}

func (ci dataComputeInstanceAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ci.ref.Append("metadata"))
}

func (ci dataComputeInstanceAttributes) MetadataFingerprint() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("metadata_fingerprint"))
}

func (ci dataComputeInstanceAttributes) MetadataStartupScript() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("metadata_startup_script"))
}

func (ci dataComputeInstanceAttributes) MinCpuPlatform() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("min_cpu_platform"))
}

func (ci dataComputeInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("name"))
}

func (ci dataComputeInstanceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("project"))
}

func (ci dataComputeInstanceAttributes) ResourcePolicies() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ci.ref.Append("resource_policies"))
}

func (ci dataComputeInstanceAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("self_link"))
}

func (ci dataComputeInstanceAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ci.ref.Append("tags"))
}

func (ci dataComputeInstanceAttributes) TagsFingerprint() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("tags_fingerprint"))
}

func (ci dataComputeInstanceAttributes) Zone() terra.StringValue {
	return terra.ReferenceString(ci.ref.Append("zone"))
}

func (ci dataComputeInstanceAttributes) AdvancedMachineFeatures() terra.ListValue[datacomputeinstance.AdvancedMachineFeaturesAttributes] {
	return terra.ReferenceList[datacomputeinstance.AdvancedMachineFeaturesAttributes](ci.ref.Append("advanced_machine_features"))
}

func (ci dataComputeInstanceAttributes) AttachedDisk() terra.ListValue[datacomputeinstance.AttachedDiskAttributes] {
	return terra.ReferenceList[datacomputeinstance.AttachedDiskAttributes](ci.ref.Append("attached_disk"))
}

func (ci dataComputeInstanceAttributes) BootDisk() terra.ListValue[datacomputeinstance.BootDiskAttributes] {
	return terra.ReferenceList[datacomputeinstance.BootDiskAttributes](ci.ref.Append("boot_disk"))
}

func (ci dataComputeInstanceAttributes) ConfidentialInstanceConfig() terra.ListValue[datacomputeinstance.ConfidentialInstanceConfigAttributes] {
	return terra.ReferenceList[datacomputeinstance.ConfidentialInstanceConfigAttributes](ci.ref.Append("confidential_instance_config"))
}

func (ci dataComputeInstanceAttributes) GuestAccelerator() terra.ListValue[datacomputeinstance.GuestAcceleratorAttributes] {
	return terra.ReferenceList[datacomputeinstance.GuestAcceleratorAttributes](ci.ref.Append("guest_accelerator"))
}

func (ci dataComputeInstanceAttributes) NetworkInterface() terra.ListValue[datacomputeinstance.NetworkInterfaceAttributes] {
	return terra.ReferenceList[datacomputeinstance.NetworkInterfaceAttributes](ci.ref.Append("network_interface"))
}

func (ci dataComputeInstanceAttributes) ReservationAffinity() terra.ListValue[datacomputeinstance.ReservationAffinityAttributes] {
	return terra.ReferenceList[datacomputeinstance.ReservationAffinityAttributes](ci.ref.Append("reservation_affinity"))
}

func (ci dataComputeInstanceAttributes) Scheduling() terra.ListValue[datacomputeinstance.SchedulingAttributes] {
	return terra.ReferenceList[datacomputeinstance.SchedulingAttributes](ci.ref.Append("scheduling"))
}

func (ci dataComputeInstanceAttributes) ScratchDisk() terra.ListValue[datacomputeinstance.ScratchDiskAttributes] {
	return terra.ReferenceList[datacomputeinstance.ScratchDiskAttributes](ci.ref.Append("scratch_disk"))
}

func (ci dataComputeInstanceAttributes) ServiceAccount() terra.ListValue[datacomputeinstance.ServiceAccountAttributes] {
	return terra.ReferenceList[datacomputeinstance.ServiceAccountAttributes](ci.ref.Append("service_account"))
}

func (ci dataComputeInstanceAttributes) ShieldedInstanceConfig() terra.ListValue[datacomputeinstance.ShieldedInstanceConfigAttributes] {
	return terra.ReferenceList[datacomputeinstance.ShieldedInstanceConfigAttributes](ci.ref.Append("shielded_instance_config"))
}
