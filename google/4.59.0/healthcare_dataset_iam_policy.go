// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewHealthcareDatasetIamPolicy creates a new instance of [HealthcareDatasetIamPolicy].
func NewHealthcareDatasetIamPolicy(name string, args HealthcareDatasetIamPolicyArgs) *HealthcareDatasetIamPolicy {
	return &HealthcareDatasetIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*HealthcareDatasetIamPolicy)(nil)

// HealthcareDatasetIamPolicy represents the Terraform resource google_healthcare_dataset_iam_policy.
type HealthcareDatasetIamPolicy struct {
	Name      string
	Args      HealthcareDatasetIamPolicyArgs
	state     *healthcareDatasetIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [HealthcareDatasetIamPolicy].
func (hdip *HealthcareDatasetIamPolicy) Type() string {
	return "google_healthcare_dataset_iam_policy"
}

// LocalName returns the local name for [HealthcareDatasetIamPolicy].
func (hdip *HealthcareDatasetIamPolicy) LocalName() string {
	return hdip.Name
}

// Configuration returns the configuration (args) for [HealthcareDatasetIamPolicy].
func (hdip *HealthcareDatasetIamPolicy) Configuration() interface{} {
	return hdip.Args
}

// DependOn is used for other resources to depend on [HealthcareDatasetIamPolicy].
func (hdip *HealthcareDatasetIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(hdip)
}

// Dependencies returns the list of resources [HealthcareDatasetIamPolicy] depends_on.
func (hdip *HealthcareDatasetIamPolicy) Dependencies() terra.Dependencies {
	return hdip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [HealthcareDatasetIamPolicy].
func (hdip *HealthcareDatasetIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return hdip.Lifecycle
}

// Attributes returns the attributes for [HealthcareDatasetIamPolicy].
func (hdip *HealthcareDatasetIamPolicy) Attributes() healthcareDatasetIamPolicyAttributes {
	return healthcareDatasetIamPolicyAttributes{ref: terra.ReferenceResource(hdip)}
}

// ImportState imports the given attribute values into [HealthcareDatasetIamPolicy]'s state.
func (hdip *HealthcareDatasetIamPolicy) ImportState(av io.Reader) error {
	hdip.state = &healthcareDatasetIamPolicyState{}
	if err := json.NewDecoder(av).Decode(hdip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", hdip.Type(), hdip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [HealthcareDatasetIamPolicy] has state.
func (hdip *HealthcareDatasetIamPolicy) State() (*healthcareDatasetIamPolicyState, bool) {
	return hdip.state, hdip.state != nil
}

// StateMust returns the state for [HealthcareDatasetIamPolicy]. Panics if the state is nil.
func (hdip *HealthcareDatasetIamPolicy) StateMust() *healthcareDatasetIamPolicyState {
	if hdip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", hdip.Type(), hdip.LocalName()))
	}
	return hdip.state
}

// HealthcareDatasetIamPolicyArgs contains the configurations for google_healthcare_dataset_iam_policy.
type HealthcareDatasetIamPolicyArgs struct {
	// DatasetId: string, required
	DatasetId terra.StringValue `hcl:"dataset_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
}
type healthcareDatasetIamPolicyAttributes struct {
	ref terra.Reference
}

// DatasetId returns a reference to field dataset_id of google_healthcare_dataset_iam_policy.
func (hdip healthcareDatasetIamPolicyAttributes) DatasetId() terra.StringValue {
	return terra.ReferenceAsString(hdip.ref.Append("dataset_id"))
}

// Etag returns a reference to field etag of google_healthcare_dataset_iam_policy.
func (hdip healthcareDatasetIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(hdip.ref.Append("etag"))
}

// Id returns a reference to field id of google_healthcare_dataset_iam_policy.
func (hdip healthcareDatasetIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(hdip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_healthcare_dataset_iam_policy.
func (hdip healthcareDatasetIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(hdip.ref.Append("policy_data"))
}

type healthcareDatasetIamPolicyState struct {
	DatasetId  string `json:"dataset_id"`
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
}
