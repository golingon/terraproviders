// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datamonitoringnotificationchannel "github.com/golingon/terraproviders/google/4.59.0/datamonitoringnotificationchannel"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMonitoringNotificationChannel(name string, args DataMonitoringNotificationChannelArgs) *DataMonitoringNotificationChannel {
	return &DataMonitoringNotificationChannel{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMonitoringNotificationChannel)(nil)

type DataMonitoringNotificationChannel struct {
	Name string
	Args DataMonitoringNotificationChannelArgs
}

func (mnc *DataMonitoringNotificationChannel) DataSource() string {
	return "google_monitoring_notification_channel"
}

func (mnc *DataMonitoringNotificationChannel) LocalName() string {
	return mnc.Name
}

func (mnc *DataMonitoringNotificationChannel) Configuration() interface{} {
	return mnc.Args
}

func (mnc *DataMonitoringNotificationChannel) Attributes() dataMonitoringNotificationChannelAttributes {
	return dataMonitoringNotificationChannelAttributes{ref: terra.ReferenceDataResource(mnc)}
}

type DataMonitoringNotificationChannelArgs struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// UserLabels: map of string, optional
	UserLabels terra.MapValue[terra.StringValue] `hcl:"user_labels,attr"`
	// SensitiveLabels: min=0
	SensitiveLabels []datamonitoringnotificationchannel.SensitiveLabels `hcl:"sensitive_labels,block" validate:"min=0"`
}
type dataMonitoringNotificationChannelAttributes struct {
	ref terra.Reference
}

func (mnc dataMonitoringNotificationChannelAttributes) Description() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("description"))
}

func (mnc dataMonitoringNotificationChannelAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("display_name"))
}

func (mnc dataMonitoringNotificationChannelAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(mnc.ref.Append("enabled"))
}

func (mnc dataMonitoringNotificationChannelAttributes) ForceDelete() terra.BoolValue {
	return terra.ReferenceBool(mnc.ref.Append("force_delete"))
}

func (mnc dataMonitoringNotificationChannelAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("id"))
}

func (mnc dataMonitoringNotificationChannelAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mnc.ref.Append("labels"))
}

func (mnc dataMonitoringNotificationChannelAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("name"))
}

func (mnc dataMonitoringNotificationChannelAttributes) Project() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("project"))
}

func (mnc dataMonitoringNotificationChannelAttributes) Type() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("type"))
}

func (mnc dataMonitoringNotificationChannelAttributes) UserLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mnc.ref.Append("user_labels"))
}

func (mnc dataMonitoringNotificationChannelAttributes) VerificationStatus() terra.StringValue {
	return terra.ReferenceString(mnc.ref.Append("verification_status"))
}

func (mnc dataMonitoringNotificationChannelAttributes) SensitiveLabels() terra.ListValue[datamonitoringnotificationchannel.SensitiveLabelsAttributes] {
	return terra.ReferenceList[datamonitoringnotificationchannel.SensitiveLabelsAttributes](mnc.ref.Append("sensitive_labels"))
}
