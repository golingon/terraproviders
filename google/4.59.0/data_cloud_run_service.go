// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacloudrunservice "github.com/golingon/terraproviders/google/4.59.0/datacloudrunservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCloudRunService(name string, args DataCloudRunServiceArgs) *DataCloudRunService {
	return &DataCloudRunService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCloudRunService)(nil)

type DataCloudRunService struct {
	Name string
	Args DataCloudRunServiceArgs
}

func (crs *DataCloudRunService) DataSource() string {
	return "google_cloud_run_service"
}

func (crs *DataCloudRunService) LocalName() string {
	return crs.Name
}

func (crs *DataCloudRunService) Configuration() interface{} {
	return crs.Args
}

func (crs *DataCloudRunService) Attributes() dataCloudRunServiceAttributes {
	return dataCloudRunServiceAttributes{ref: terra.ReferenceDataResource(crs)}
}

type DataCloudRunServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Metadata: min=0
	Metadata []datacloudrunservice.Metadata `hcl:"metadata,block" validate:"min=0"`
	// Status: min=0
	Status []datacloudrunservice.Status `hcl:"status,block" validate:"min=0"`
	// Template: min=0
	Template []datacloudrunservice.Template `hcl:"template,block" validate:"min=0"`
	// Traffic: min=0
	Traffic []datacloudrunservice.Traffic `hcl:"traffic,block" validate:"min=0"`
}
type dataCloudRunServiceAttributes struct {
	ref terra.Reference
}

func (crs dataCloudRunServiceAttributes) AutogenerateRevisionName() terra.BoolValue {
	return terra.ReferenceBool(crs.ref.Append("autogenerate_revision_name"))
}

func (crs dataCloudRunServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(crs.ref.Append("id"))
}

func (crs dataCloudRunServiceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(crs.ref.Append("location"))
}

func (crs dataCloudRunServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(crs.ref.Append("name"))
}

func (crs dataCloudRunServiceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(crs.ref.Append("project"))
}

func (crs dataCloudRunServiceAttributes) Metadata() terra.ListValue[datacloudrunservice.MetadataAttributes] {
	return terra.ReferenceList[datacloudrunservice.MetadataAttributes](crs.ref.Append("metadata"))
}

func (crs dataCloudRunServiceAttributes) Status() terra.ListValue[datacloudrunservice.StatusAttributes] {
	return terra.ReferenceList[datacloudrunservice.StatusAttributes](crs.ref.Append("status"))
}

func (crs dataCloudRunServiceAttributes) Template() terra.ListValue[datacloudrunservice.TemplateAttributes] {
	return terra.ReferenceList[datacloudrunservice.TemplateAttributes](crs.ref.Append("template"))
}

func (crs dataCloudRunServiceAttributes) Traffic() terra.ListValue[datacloudrunservice.TrafficAttributes] {
	return terra.ReferenceList[datacloudrunservice.TrafficAttributes](crs.ref.Append("traffic"))
}
