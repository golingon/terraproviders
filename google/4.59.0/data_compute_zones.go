// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataComputeZones(name string, args DataComputeZonesArgs) *DataComputeZones {
	return &DataComputeZones{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeZones)(nil)

type DataComputeZones struct {
	Name string
	Args DataComputeZonesArgs
}

func (cz *DataComputeZones) DataSource() string {
	return "google_compute_zones"
}

func (cz *DataComputeZones) LocalName() string {
	return cz.Name
}

func (cz *DataComputeZones) Configuration() interface{} {
	return cz.Args
}

func (cz *DataComputeZones) Attributes() dataComputeZonesAttributes {
	return dataComputeZonesAttributes{ref: terra.ReferenceDataResource(cz)}
}

type DataComputeZonesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}
type dataComputeZonesAttributes struct {
	ref terra.Reference
}

func (cz dataComputeZonesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cz.ref.Append("id"))
}

func (cz dataComputeZonesAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cz.ref.Append("names"))
}

func (cz dataComputeZonesAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cz.ref.Append("project"))
}

func (cz dataComputeZonesAttributes) Region() terra.StringValue {
	return terra.ReferenceString(cz.ref.Append("region"))
}

func (cz dataComputeZonesAttributes) Status() terra.StringValue {
	return terra.ReferenceString(cz.ref.Append("status"))
}
