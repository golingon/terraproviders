// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	bigqueryanalyticshubdataexchange "github.com/golingon/terraproviders/google/4.59.0/bigqueryanalyticshubdataexchange"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBigqueryAnalyticsHubDataExchange(name string, args BigqueryAnalyticsHubDataExchangeArgs) *BigqueryAnalyticsHubDataExchange {
	return &BigqueryAnalyticsHubDataExchange{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BigqueryAnalyticsHubDataExchange)(nil)

type BigqueryAnalyticsHubDataExchange struct {
	Name  string
	Args  BigqueryAnalyticsHubDataExchangeArgs
	state *bigqueryAnalyticsHubDataExchangeState
}

func (bahde *BigqueryAnalyticsHubDataExchange) Type() string {
	return "google_bigquery_analytics_hub_data_exchange"
}

func (bahde *BigqueryAnalyticsHubDataExchange) LocalName() string {
	return bahde.Name
}

func (bahde *BigqueryAnalyticsHubDataExchange) Configuration() interface{} {
	return bahde.Args
}

func (bahde *BigqueryAnalyticsHubDataExchange) Attributes() bigqueryAnalyticsHubDataExchangeAttributes {
	return bigqueryAnalyticsHubDataExchangeAttributes{ref: terra.ReferenceResource(bahde)}
}

func (bahde *BigqueryAnalyticsHubDataExchange) ImportState(av io.Reader) error {
	bahde.state = &bigqueryAnalyticsHubDataExchangeState{}
	if err := json.NewDecoder(av).Decode(bahde.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bahde.Type(), bahde.LocalName(), err)
	}
	return nil
}

func (bahde *BigqueryAnalyticsHubDataExchange) State() (*bigqueryAnalyticsHubDataExchangeState, bool) {
	return bahde.state, bahde.state != nil
}

func (bahde *BigqueryAnalyticsHubDataExchange) StateMust() *bigqueryAnalyticsHubDataExchangeState {
	if bahde.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bahde.Type(), bahde.LocalName()))
	}
	return bahde.state
}

func (bahde *BigqueryAnalyticsHubDataExchange) DependOn() terra.Reference {
	return terra.ReferenceResource(bahde)
}

type BigqueryAnalyticsHubDataExchangeArgs struct {
	// DataExchangeId: string, required
	DataExchangeId terra.StringValue `hcl:"data_exchange_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Documentation: string, optional
	Documentation terra.StringValue `hcl:"documentation,attr"`
	// Icon: string, optional
	Icon terra.StringValue `hcl:"icon,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// PrimaryContact: string, optional
	PrimaryContact terra.StringValue `hcl:"primary_contact,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Timeouts: optional
	Timeouts *bigqueryanalyticshubdataexchange.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that BigqueryAnalyticsHubDataExchange depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type bigqueryAnalyticsHubDataExchangeAttributes struct {
	ref terra.Reference
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) DataExchangeId() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("data_exchange_id"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Description() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("description"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("display_name"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Documentation() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("documentation"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Icon() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("icon"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("id"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) ListingCount() terra.NumberValue {
	return terra.ReferenceNumber(bahde.ref.Append("listing_count"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Location() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("location"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Name() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("name"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) PrimaryContact() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("primary_contact"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Project() terra.StringValue {
	return terra.ReferenceString(bahde.ref.Append("project"))
}

func (bahde bigqueryAnalyticsHubDataExchangeAttributes) Timeouts() bigqueryanalyticshubdataexchange.TimeoutsAttributes {
	return terra.ReferenceSingle[bigqueryanalyticshubdataexchange.TimeoutsAttributes](bahde.ref.Append("timeouts"))
}

type bigqueryAnalyticsHubDataExchangeState struct {
	DataExchangeId string                                          `json:"data_exchange_id"`
	Description    string                                          `json:"description"`
	DisplayName    string                                          `json:"display_name"`
	Documentation  string                                          `json:"documentation"`
	Icon           string                                          `json:"icon"`
	Id             string                                          `json:"id"`
	ListingCount   float64                                         `json:"listing_count"`
	Location       string                                          `json:"location"`
	Name           string                                          `json:"name"`
	PrimaryContact string                                          `json:"primary_contact"`
	Project        string                                          `json:"project"`
	Timeouts       *bigqueryanalyticshubdataexchange.TimeoutsState `json:"timeouts"`
}
