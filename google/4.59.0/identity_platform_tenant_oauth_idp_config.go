// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	identityplatformtenantoauthidpconfig "github.com/golingon/terraproviders/google/4.59.0/identityplatformtenantoauthidpconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIdentityPlatformTenantOauthIdpConfig(name string, args IdentityPlatformTenantOauthIdpConfigArgs) *IdentityPlatformTenantOauthIdpConfig {
	return &IdentityPlatformTenantOauthIdpConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityPlatformTenantOauthIdpConfig)(nil)

type IdentityPlatformTenantOauthIdpConfig struct {
	Name  string
	Args  IdentityPlatformTenantOauthIdpConfigArgs
	state *identityPlatformTenantOauthIdpConfigState
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) Type() string {
	return "google_identity_platform_tenant_oauth_idp_config"
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) LocalName() string {
	return iptoic.Name
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) Configuration() interface{} {
	return iptoic.Args
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) Attributes() identityPlatformTenantOauthIdpConfigAttributes {
	return identityPlatformTenantOauthIdpConfigAttributes{ref: terra.ReferenceResource(iptoic)}
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) ImportState(av io.Reader) error {
	iptoic.state = &identityPlatformTenantOauthIdpConfigState{}
	if err := json.NewDecoder(av).Decode(iptoic.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iptoic.Type(), iptoic.LocalName(), err)
	}
	return nil
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) State() (*identityPlatformTenantOauthIdpConfigState, bool) {
	return iptoic.state, iptoic.state != nil
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) StateMust() *identityPlatformTenantOauthIdpConfigState {
	if iptoic.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iptoic.Type(), iptoic.LocalName()))
	}
	return iptoic.state
}

func (iptoic *IdentityPlatformTenantOauthIdpConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(iptoic)
}

type IdentityPlatformTenantOauthIdpConfigArgs struct {
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, optional
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Issuer: string, required
	Issuer terra.StringValue `hcl:"issuer,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Tenant: string, required
	Tenant terra.StringValue `hcl:"tenant,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *identityplatformtenantoauthidpconfig.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IdentityPlatformTenantOauthIdpConfig depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type identityPlatformTenantOauthIdpConfigAttributes struct {
	ref terra.Reference
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) ClientId() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("client_id"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("client_secret"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("display_name"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(iptoic.ref.Append("enabled"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("id"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Issuer() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("issuer"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("name"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("project"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Tenant() terra.StringValue {
	return terra.ReferenceString(iptoic.ref.Append("tenant"))
}

func (iptoic identityPlatformTenantOauthIdpConfigAttributes) Timeouts() identityplatformtenantoauthidpconfig.TimeoutsAttributes {
	return terra.ReferenceSingle[identityplatformtenantoauthidpconfig.TimeoutsAttributes](iptoic.ref.Append("timeouts"))
}

type identityPlatformTenantOauthIdpConfigState struct {
	ClientId     string                                              `json:"client_id"`
	ClientSecret string                                              `json:"client_secret"`
	DisplayName  string                                              `json:"display_name"`
	Enabled      bool                                                `json:"enabled"`
	Id           string                                              `json:"id"`
	Issuer       string                                              `json:"issuer"`
	Name         string                                              `json:"name"`
	Project      string                                              `json:"project"`
	Tenant       string                                              `json:"tenant"`
	Timeouts     *identityplatformtenantoauthidpconfig.TimeoutsState `json:"timeouts"`
}
