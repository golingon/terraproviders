// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	computeglobalforwardingrule "github.com/golingon/terraproviders/google/4.59.0/computeglobalforwardingrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewComputeGlobalForwardingRule(name string, args ComputeGlobalForwardingRuleArgs) *ComputeGlobalForwardingRule {
	return &ComputeGlobalForwardingRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ComputeGlobalForwardingRule)(nil)

type ComputeGlobalForwardingRule struct {
	Name  string
	Args  ComputeGlobalForwardingRuleArgs
	state *computeGlobalForwardingRuleState
}

func (cgfr *ComputeGlobalForwardingRule) Type() string {
	return "google_compute_global_forwarding_rule"
}

func (cgfr *ComputeGlobalForwardingRule) LocalName() string {
	return cgfr.Name
}

func (cgfr *ComputeGlobalForwardingRule) Configuration() interface{} {
	return cgfr.Args
}

func (cgfr *ComputeGlobalForwardingRule) Attributes() computeGlobalForwardingRuleAttributes {
	return computeGlobalForwardingRuleAttributes{ref: terra.ReferenceResource(cgfr)}
}

func (cgfr *ComputeGlobalForwardingRule) ImportState(av io.Reader) error {
	cgfr.state = &computeGlobalForwardingRuleState{}
	if err := json.NewDecoder(av).Decode(cgfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cgfr.Type(), cgfr.LocalName(), err)
	}
	return nil
}

func (cgfr *ComputeGlobalForwardingRule) State() (*computeGlobalForwardingRuleState, bool) {
	return cgfr.state, cgfr.state != nil
}

func (cgfr *ComputeGlobalForwardingRule) StateMust() *computeGlobalForwardingRuleState {
	if cgfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cgfr.Type(), cgfr.LocalName()))
	}
	return cgfr.state
}

func (cgfr *ComputeGlobalForwardingRule) DependOn() terra.Reference {
	return terra.ReferenceResource(cgfr)
}

type ComputeGlobalForwardingRuleArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpAddress: string, optional
	IpAddress terra.StringValue `hcl:"ip_address,attr"`
	// IpProtocol: string, optional
	IpProtocol terra.StringValue `hcl:"ip_protocol,attr"`
	// IpVersion: string, optional
	IpVersion terra.StringValue `hcl:"ip_version,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// LoadBalancingScheme: string, optional
	LoadBalancingScheme terra.StringValue `hcl:"load_balancing_scheme,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Network: string, optional
	Network terra.StringValue `hcl:"network,attr"`
	// PortRange: string, optional
	PortRange terra.StringValue `hcl:"port_range,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Target: string, required
	Target terra.StringValue `hcl:"target,attr" validate:"required"`
	// MetadataFilters: min=0
	MetadataFilters []computeglobalforwardingrule.MetadataFilters `hcl:"metadata_filters,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *computeglobalforwardingrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ComputeGlobalForwardingRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type computeGlobalForwardingRuleAttributes struct {
	ref terra.Reference
}

func (cgfr computeGlobalForwardingRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("description"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("id"))
}

func (cgfr computeGlobalForwardingRuleAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("ip_address"))
}

func (cgfr computeGlobalForwardingRuleAttributes) IpProtocol() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("ip_protocol"))
}

func (cgfr computeGlobalForwardingRuleAttributes) IpVersion() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("ip_version"))
}

func (cgfr computeGlobalForwardingRuleAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("label_fingerprint"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cgfr.ref.Append("labels"))
}

func (cgfr computeGlobalForwardingRuleAttributes) LoadBalancingScheme() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("load_balancing_scheme"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("name"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Network() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("network"))
}

func (cgfr computeGlobalForwardingRuleAttributes) PortRange() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("port_range"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("project"))
}

func (cgfr computeGlobalForwardingRuleAttributes) PscConnectionId() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("psc_connection_id"))
}

func (cgfr computeGlobalForwardingRuleAttributes) PscConnectionStatus() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("psc_connection_status"))
}

func (cgfr computeGlobalForwardingRuleAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("self_link"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Target() terra.StringValue {
	return terra.ReferenceString(cgfr.ref.Append("target"))
}

func (cgfr computeGlobalForwardingRuleAttributes) MetadataFilters() terra.ListValue[computeglobalforwardingrule.MetadataFiltersAttributes] {
	return terra.ReferenceList[computeglobalforwardingrule.MetadataFiltersAttributes](cgfr.ref.Append("metadata_filters"))
}

func (cgfr computeGlobalForwardingRuleAttributes) Timeouts() computeglobalforwardingrule.TimeoutsAttributes {
	return terra.ReferenceSingle[computeglobalforwardingrule.TimeoutsAttributes](cgfr.ref.Append("timeouts"))
}

type computeGlobalForwardingRuleState struct {
	Description         string                                             `json:"description"`
	Id                  string                                             `json:"id"`
	IpAddress           string                                             `json:"ip_address"`
	IpProtocol          string                                             `json:"ip_protocol"`
	IpVersion           string                                             `json:"ip_version"`
	LabelFingerprint    string                                             `json:"label_fingerprint"`
	Labels              map[string]string                                  `json:"labels"`
	LoadBalancingScheme string                                             `json:"load_balancing_scheme"`
	Name                string                                             `json:"name"`
	Network             string                                             `json:"network"`
	PortRange           string                                             `json:"port_range"`
	Project             string                                             `json:"project"`
	PscConnectionId     string                                             `json:"psc_connection_id"`
	PscConnectionStatus string                                             `json:"psc_connection_status"`
	SelfLink            string                                             `json:"self_link"`
	Target              string                                             `json:"target"`
	MetadataFilters     []computeglobalforwardingrule.MetadataFiltersState `json:"metadata_filters"`
	Timeouts            *computeglobalforwardingrule.TimeoutsState         `json:"timeouts"`
}
