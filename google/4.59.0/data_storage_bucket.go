// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datastoragebucket "github.com/golingon/terraproviders/google/4.59.0/datastoragebucket"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataStorageBucket(name string, args DataStorageBucketArgs) *DataStorageBucket {
	return &DataStorageBucket{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataStorageBucket)(nil)

type DataStorageBucket struct {
	Name string
	Args DataStorageBucketArgs
}

func (sb *DataStorageBucket) DataSource() string {
	return "google_storage_bucket"
}

func (sb *DataStorageBucket) LocalName() string {
	return sb.Name
}

func (sb *DataStorageBucket) Configuration() interface{} {
	return sb.Args
}

func (sb *DataStorageBucket) Attributes() dataStorageBucketAttributes {
	return dataStorageBucketAttributes{ref: terra.ReferenceDataResource(sb)}
}

type DataStorageBucketArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Autoclass: min=0
	Autoclass []datastoragebucket.Autoclass `hcl:"autoclass,block" validate:"min=0"`
	// Cors: min=0
	Cors []datastoragebucket.Cors `hcl:"cors,block" validate:"min=0"`
	// CustomPlacementConfig: min=0
	CustomPlacementConfig []datastoragebucket.CustomPlacementConfig `hcl:"custom_placement_config,block" validate:"min=0"`
	// Encryption: min=0
	Encryption []datastoragebucket.Encryption `hcl:"encryption,block" validate:"min=0"`
	// LifecycleRule: min=0
	LifecycleRule []datastoragebucket.LifecycleRule `hcl:"lifecycle_rule,block" validate:"min=0"`
	// Logging: min=0
	Logging []datastoragebucket.Logging `hcl:"logging,block" validate:"min=0"`
	// RetentionPolicy: min=0
	RetentionPolicy []datastoragebucket.RetentionPolicy `hcl:"retention_policy,block" validate:"min=0"`
	// Versioning: min=0
	Versioning []datastoragebucket.Versioning `hcl:"versioning,block" validate:"min=0"`
	// Website: min=0
	Website []datastoragebucket.Website `hcl:"website,block" validate:"min=0"`
}
type dataStorageBucketAttributes struct {
	ref terra.Reference
}

func (sb dataStorageBucketAttributes) DefaultEventBasedHold() terra.BoolValue {
	return terra.ReferenceBool(sb.ref.Append("default_event_based_hold"))
}

func (sb dataStorageBucketAttributes) ForceDestroy() terra.BoolValue {
	return terra.ReferenceBool(sb.ref.Append("force_destroy"))
}

func (sb dataStorageBucketAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("id"))
}

func (sb dataStorageBucketAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sb.ref.Append("labels"))
}

func (sb dataStorageBucketAttributes) Location() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("location"))
}

func (sb dataStorageBucketAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("name"))
}

func (sb dataStorageBucketAttributes) Project() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("project"))
}

func (sb dataStorageBucketAttributes) PublicAccessPrevention() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("public_access_prevention"))
}

func (sb dataStorageBucketAttributes) RequesterPays() terra.BoolValue {
	return terra.ReferenceBool(sb.ref.Append("requester_pays"))
}

func (sb dataStorageBucketAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("self_link"))
}

func (sb dataStorageBucketAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("storage_class"))
}

func (sb dataStorageBucketAttributes) UniformBucketLevelAccess() terra.BoolValue {
	return terra.ReferenceBool(sb.ref.Append("uniform_bucket_level_access"))
}

func (sb dataStorageBucketAttributes) Url() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("url"))
}

func (sb dataStorageBucketAttributes) Autoclass() terra.ListValue[datastoragebucket.AutoclassAttributes] {
	return terra.ReferenceList[datastoragebucket.AutoclassAttributes](sb.ref.Append("autoclass"))
}

func (sb dataStorageBucketAttributes) Cors() terra.ListValue[datastoragebucket.CorsAttributes] {
	return terra.ReferenceList[datastoragebucket.CorsAttributes](sb.ref.Append("cors"))
}

func (sb dataStorageBucketAttributes) CustomPlacementConfig() terra.ListValue[datastoragebucket.CustomPlacementConfigAttributes] {
	return terra.ReferenceList[datastoragebucket.CustomPlacementConfigAttributes](sb.ref.Append("custom_placement_config"))
}

func (sb dataStorageBucketAttributes) Encryption() terra.ListValue[datastoragebucket.EncryptionAttributes] {
	return terra.ReferenceList[datastoragebucket.EncryptionAttributes](sb.ref.Append("encryption"))
}

func (sb dataStorageBucketAttributes) LifecycleRule() terra.ListValue[datastoragebucket.LifecycleRuleAttributes] {
	return terra.ReferenceList[datastoragebucket.LifecycleRuleAttributes](sb.ref.Append("lifecycle_rule"))
}

func (sb dataStorageBucketAttributes) Logging() terra.ListValue[datastoragebucket.LoggingAttributes] {
	return terra.ReferenceList[datastoragebucket.LoggingAttributes](sb.ref.Append("logging"))
}

func (sb dataStorageBucketAttributes) RetentionPolicy() terra.ListValue[datastoragebucket.RetentionPolicyAttributes] {
	return terra.ReferenceList[datastoragebucket.RetentionPolicyAttributes](sb.ref.Append("retention_policy"))
}

func (sb dataStorageBucketAttributes) Versioning() terra.ListValue[datastoragebucket.VersioningAttributes] {
	return terra.ReferenceList[datastoragebucket.VersioningAttributes](sb.ref.Append("versioning"))
}

func (sb dataStorageBucketAttributes) Website() terra.ListValue[datastoragebucket.WebsiteAttributes] {
	return terra.ReferenceList[datastoragebucket.WebsiteAttributes](sb.ref.Append("website"))
}
