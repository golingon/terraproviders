// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewContainerRegistry(name string, args ContainerRegistryArgs) *ContainerRegistry {
	return &ContainerRegistry{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ContainerRegistry)(nil)

type ContainerRegistry struct {
	Name  string
	Args  ContainerRegistryArgs
	state *containerRegistryState
}

func (cr *ContainerRegistry) Type() string {
	return "google_container_registry"
}

func (cr *ContainerRegistry) LocalName() string {
	return cr.Name
}

func (cr *ContainerRegistry) Configuration() interface{} {
	return cr.Args
}

func (cr *ContainerRegistry) Attributes() containerRegistryAttributes {
	return containerRegistryAttributes{ref: terra.ReferenceResource(cr)}
}

func (cr *ContainerRegistry) ImportState(av io.Reader) error {
	cr.state = &containerRegistryState{}
	if err := json.NewDecoder(av).Decode(cr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cr.Type(), cr.LocalName(), err)
	}
	return nil
}

func (cr *ContainerRegistry) State() (*containerRegistryState, bool) {
	return cr.state, cr.state != nil
}

func (cr *ContainerRegistry) StateMust() *containerRegistryState {
	if cr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cr.Type(), cr.LocalName()))
	}
	return cr.state
}

func (cr *ContainerRegistry) DependOn() terra.Reference {
	return terra.ReferenceResource(cr)
}

type ContainerRegistryArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// DependsOn contains resources that ContainerRegistry depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type containerRegistryAttributes struct {
	ref terra.Reference
}

func (cr containerRegistryAttributes) BucketSelfLink() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("bucket_self_link"))
}

func (cr containerRegistryAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("id"))
}

func (cr containerRegistryAttributes) Location() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("location"))
}

func (cr containerRegistryAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("project"))
}

type containerRegistryState struct {
	BucketSelfLink string `json:"bucket_self_link"`
	Id             string `json:"id"`
	Location       string `json:"location"`
	Project        string `json:"project"`
}
