// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	identityplatformtenantinboundsamlconfig "github.com/golingon/terraproviders/google/4.59.0/identityplatformtenantinboundsamlconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIdentityPlatformTenantInboundSamlConfig(name string, args IdentityPlatformTenantInboundSamlConfigArgs) *IdentityPlatformTenantInboundSamlConfig {
	return &IdentityPlatformTenantInboundSamlConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityPlatformTenantInboundSamlConfig)(nil)

type IdentityPlatformTenantInboundSamlConfig struct {
	Name  string
	Args  IdentityPlatformTenantInboundSamlConfigArgs
	state *identityPlatformTenantInboundSamlConfigState
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) Type() string {
	return "google_identity_platform_tenant_inbound_saml_config"
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) LocalName() string {
	return iptisc.Name
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) Configuration() interface{} {
	return iptisc.Args
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) Attributes() identityPlatformTenantInboundSamlConfigAttributes {
	return identityPlatformTenantInboundSamlConfigAttributes{ref: terra.ReferenceResource(iptisc)}
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) ImportState(av io.Reader) error {
	iptisc.state = &identityPlatformTenantInboundSamlConfigState{}
	if err := json.NewDecoder(av).Decode(iptisc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iptisc.Type(), iptisc.LocalName(), err)
	}
	return nil
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) State() (*identityPlatformTenantInboundSamlConfigState, bool) {
	return iptisc.state, iptisc.state != nil
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) StateMust() *identityPlatformTenantInboundSamlConfigState {
	if iptisc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iptisc.Type(), iptisc.LocalName()))
	}
	return iptisc.state
}

func (iptisc *IdentityPlatformTenantInboundSamlConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(iptisc)
}

type IdentityPlatformTenantInboundSamlConfigArgs struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Tenant: string, required
	Tenant terra.StringValue `hcl:"tenant,attr" validate:"required"`
	// IdpConfig: required
	IdpConfig *identityplatformtenantinboundsamlconfig.IdpConfig `hcl:"idp_config,block" validate:"required"`
	// SpConfig: required
	SpConfig *identityplatformtenantinboundsamlconfig.SpConfig `hcl:"sp_config,block" validate:"required"`
	// Timeouts: optional
	Timeouts *identityplatformtenantinboundsamlconfig.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IdentityPlatformTenantInboundSamlConfig depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type identityPlatformTenantInboundSamlConfigAttributes struct {
	ref terra.Reference
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(iptisc.ref.Append("display_name"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(iptisc.ref.Append("enabled"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iptisc.ref.Append("id"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceString(iptisc.ref.Append("name"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceString(iptisc.ref.Append("project"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) Tenant() terra.StringValue {
	return terra.ReferenceString(iptisc.ref.Append("tenant"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) IdpConfig() terra.ListValue[identityplatformtenantinboundsamlconfig.IdpConfigAttributes] {
	return terra.ReferenceList[identityplatformtenantinboundsamlconfig.IdpConfigAttributes](iptisc.ref.Append("idp_config"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) SpConfig() terra.ListValue[identityplatformtenantinboundsamlconfig.SpConfigAttributes] {
	return terra.ReferenceList[identityplatformtenantinboundsamlconfig.SpConfigAttributes](iptisc.ref.Append("sp_config"))
}

func (iptisc identityPlatformTenantInboundSamlConfigAttributes) Timeouts() identityplatformtenantinboundsamlconfig.TimeoutsAttributes {
	return terra.ReferenceSingle[identityplatformtenantinboundsamlconfig.TimeoutsAttributes](iptisc.ref.Append("timeouts"))
}

type identityPlatformTenantInboundSamlConfigState struct {
	DisplayName string                                                   `json:"display_name"`
	Enabled     bool                                                     `json:"enabled"`
	Id          string                                                   `json:"id"`
	Name        string                                                   `json:"name"`
	Project     string                                                   `json:"project"`
	Tenant      string                                                   `json:"tenant"`
	IdpConfig   []identityplatformtenantinboundsamlconfig.IdpConfigState `json:"idp_config"`
	SpConfig    []identityplatformtenantinboundsamlconfig.SpConfigState  `json:"sp_config"`
	Timeouts    *identityplatformtenantinboundsamlconfig.TimeoutsState   `json:"timeouts"`
}
