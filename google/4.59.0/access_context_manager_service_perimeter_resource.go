// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	accesscontextmanagerserviceperimeterresource "github.com/golingon/terraproviders/google/4.59.0/accesscontextmanagerserviceperimeterresource"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAccessContextManagerServicePerimeterResource(name string, args AccessContextManagerServicePerimeterResourceArgs) *AccessContextManagerServicePerimeterResource {
	return &AccessContextManagerServicePerimeterResource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AccessContextManagerServicePerimeterResource)(nil)

type AccessContextManagerServicePerimeterResource struct {
	Name  string
	Args  AccessContextManagerServicePerimeterResourceArgs
	state *accessContextManagerServicePerimeterResourceState
}

func (acmspr *AccessContextManagerServicePerimeterResource) Type() string {
	return "google_access_context_manager_service_perimeter_resource"
}

func (acmspr *AccessContextManagerServicePerimeterResource) LocalName() string {
	return acmspr.Name
}

func (acmspr *AccessContextManagerServicePerimeterResource) Configuration() interface{} {
	return acmspr.Args
}

func (acmspr *AccessContextManagerServicePerimeterResource) Attributes() accessContextManagerServicePerimeterResourceAttributes {
	return accessContextManagerServicePerimeterResourceAttributes{ref: terra.ReferenceResource(acmspr)}
}

func (acmspr *AccessContextManagerServicePerimeterResource) ImportState(av io.Reader) error {
	acmspr.state = &accessContextManagerServicePerimeterResourceState{}
	if err := json.NewDecoder(av).Decode(acmspr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acmspr.Type(), acmspr.LocalName(), err)
	}
	return nil
}

func (acmspr *AccessContextManagerServicePerimeterResource) State() (*accessContextManagerServicePerimeterResourceState, bool) {
	return acmspr.state, acmspr.state != nil
}

func (acmspr *AccessContextManagerServicePerimeterResource) StateMust() *accessContextManagerServicePerimeterResourceState {
	if acmspr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acmspr.Type(), acmspr.LocalName()))
	}
	return acmspr.state
}

func (acmspr *AccessContextManagerServicePerimeterResource) DependOn() terra.Reference {
	return terra.ReferenceResource(acmspr)
}

type AccessContextManagerServicePerimeterResourceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PerimeterName: string, required
	PerimeterName terra.StringValue `hcl:"perimeter_name,attr" validate:"required"`
	// Resource: string, required
	Resource terra.StringValue `hcl:"resource,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *accesscontextmanagerserviceperimeterresource.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that AccessContextManagerServicePerimeterResource depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type accessContextManagerServicePerimeterResourceAttributes struct {
	ref terra.Reference
}

func (acmspr accessContextManagerServicePerimeterResourceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(acmspr.ref.Append("id"))
}

func (acmspr accessContextManagerServicePerimeterResourceAttributes) PerimeterName() terra.StringValue {
	return terra.ReferenceString(acmspr.ref.Append("perimeter_name"))
}

func (acmspr accessContextManagerServicePerimeterResourceAttributes) Resource() terra.StringValue {
	return terra.ReferenceString(acmspr.ref.Append("resource"))
}

func (acmspr accessContextManagerServicePerimeterResourceAttributes) Timeouts() accesscontextmanagerserviceperimeterresource.TimeoutsAttributes {
	return terra.ReferenceSingle[accesscontextmanagerserviceperimeterresource.TimeoutsAttributes](acmspr.ref.Append("timeouts"))
}

type accessContextManagerServicePerimeterResourceState struct {
	Id            string                                                      `json:"id"`
	PerimeterName string                                                      `json:"perimeter_name"`
	Resource      string                                                      `json:"resource"`
	Timeouts      *accesscontextmanagerserviceperimeterresource.TimeoutsState `json:"timeouts"`
}
