// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataContainerRegistryRepository(name string, args DataContainerRegistryRepositoryArgs) *DataContainerRegistryRepository {
	return &DataContainerRegistryRepository{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataContainerRegistryRepository)(nil)

type DataContainerRegistryRepository struct {
	Name string
	Args DataContainerRegistryRepositoryArgs
}

func (crr *DataContainerRegistryRepository) DataSource() string {
	return "google_container_registry_repository"
}

func (crr *DataContainerRegistryRepository) LocalName() string {
	return crr.Name
}

func (crr *DataContainerRegistryRepository) Configuration() interface{} {
	return crr.Args
}

func (crr *DataContainerRegistryRepository) Attributes() dataContainerRegistryRepositoryAttributes {
	return dataContainerRegistryRepositoryAttributes{ref: terra.ReferenceDataResource(crr)}
}

type DataContainerRegistryRepositoryArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}
type dataContainerRegistryRepositoryAttributes struct {
	ref terra.Reference
}

func (crr dataContainerRegistryRepositoryAttributes) Id() terra.StringValue {
	return terra.ReferenceString(crr.ref.Append("id"))
}

func (crr dataContainerRegistryRepositoryAttributes) Project() terra.StringValue {
	return terra.ReferenceString(crr.ref.Append("project"))
}

func (crr dataContainerRegistryRepositoryAttributes) Region() terra.StringValue {
	return terra.ReferenceString(crr.ref.Append("region"))
}

func (crr dataContainerRegistryRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceString(crr.ref.Append("repository_url"))
}
