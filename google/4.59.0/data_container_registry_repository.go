// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataContainerRegistryRepository creates a new instance of [DataContainerRegistryRepository].
func NewDataContainerRegistryRepository(name string, args DataContainerRegistryRepositoryArgs) *DataContainerRegistryRepository {
	return &DataContainerRegistryRepository{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataContainerRegistryRepository)(nil)

// DataContainerRegistryRepository represents the Terraform data resource google_container_registry_repository.
type DataContainerRegistryRepository struct {
	Name string
	Args DataContainerRegistryRepositoryArgs
}

// DataSource returns the Terraform object type for [DataContainerRegistryRepository].
func (crr *DataContainerRegistryRepository) DataSource() string {
	return "google_container_registry_repository"
}

// LocalName returns the local name for [DataContainerRegistryRepository].
func (crr *DataContainerRegistryRepository) LocalName() string {
	return crr.Name
}

// Configuration returns the configuration (args) for [DataContainerRegistryRepository].
func (crr *DataContainerRegistryRepository) Configuration() interface{} {
	return crr.Args
}

// Attributes returns the attributes for [DataContainerRegistryRepository].
func (crr *DataContainerRegistryRepository) Attributes() dataContainerRegistryRepositoryAttributes {
	return dataContainerRegistryRepositoryAttributes{ref: terra.ReferenceDataResource(crr)}
}

// DataContainerRegistryRepositoryArgs contains the configurations for google_container_registry_repository.
type DataContainerRegistryRepositoryArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}
type dataContainerRegistryRepositoryAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_container_registry_repository.
func (crr dataContainerRegistryRepositoryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(crr.ref.Append("id"))
}

// Project returns a reference to field project of google_container_registry_repository.
func (crr dataContainerRegistryRepositoryAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(crr.ref.Append("project"))
}

// Region returns a reference to field region of google_container_registry_repository.
func (crr dataContainerRegistryRepositoryAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(crr.ref.Append("region"))
}

// RepositoryUrl returns a reference to field repository_url of google_container_registry_repository.
func (crr dataContainerRegistryRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(crr.ref.Append("repository_url"))
}
