// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	dialogflowintent "github.com/golingon/terraproviders/google/4.59.0/dialogflowintent"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDialogflowIntent(name string, args DialogflowIntentArgs) *DialogflowIntent {
	return &DialogflowIntent{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DialogflowIntent)(nil)

type DialogflowIntent struct {
	Name  string
	Args  DialogflowIntentArgs
	state *dialogflowIntentState
}

func (di *DialogflowIntent) Type() string {
	return "google_dialogflow_intent"
}

func (di *DialogflowIntent) LocalName() string {
	return di.Name
}

func (di *DialogflowIntent) Configuration() interface{} {
	return di.Args
}

func (di *DialogflowIntent) Attributes() dialogflowIntentAttributes {
	return dialogflowIntentAttributes{ref: terra.ReferenceResource(di)}
}

func (di *DialogflowIntent) ImportState(av io.Reader) error {
	di.state = &dialogflowIntentState{}
	if err := json.NewDecoder(av).Decode(di.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", di.Type(), di.LocalName(), err)
	}
	return nil
}

func (di *DialogflowIntent) State() (*dialogflowIntentState, bool) {
	return di.state, di.state != nil
}

func (di *DialogflowIntent) StateMust() *dialogflowIntentState {
	if di.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", di.Type(), di.LocalName()))
	}
	return di.state
}

func (di *DialogflowIntent) DependOn() terra.Reference {
	return terra.ReferenceResource(di)
}

type DialogflowIntentArgs struct {
	// Action: string, optional
	Action terra.StringValue `hcl:"action,attr"`
	// DefaultResponsePlatforms: list of string, optional
	DefaultResponsePlatforms terra.ListValue[terra.StringValue] `hcl:"default_response_platforms,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Events: list of string, optional
	Events terra.ListValue[terra.StringValue] `hcl:"events,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InputContextNames: list of string, optional
	InputContextNames terra.ListValue[terra.StringValue] `hcl:"input_context_names,attr"`
	// IsFallback: bool, optional
	IsFallback terra.BoolValue `hcl:"is_fallback,attr"`
	// MlDisabled: bool, optional
	MlDisabled terra.BoolValue `hcl:"ml_disabled,attr"`
	// ParentFollowupIntentName: string, optional
	ParentFollowupIntentName terra.StringValue `hcl:"parent_followup_intent_name,attr"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// ResetContexts: bool, optional
	ResetContexts terra.BoolValue `hcl:"reset_contexts,attr"`
	// WebhookState: string, optional
	WebhookState terra.StringValue `hcl:"webhook_state,attr"`
	// FollowupIntentInfo: min=0
	FollowupIntentInfo []dialogflowintent.FollowupIntentInfo `hcl:"followup_intent_info,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dialogflowintent.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DialogflowIntent depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dialogflowIntentAttributes struct {
	ref terra.Reference
}

func (di dialogflowIntentAttributes) Action() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("action"))
}

func (di dialogflowIntentAttributes) DefaultResponsePlatforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](di.ref.Append("default_response_platforms"))
}

func (di dialogflowIntentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("display_name"))
}

func (di dialogflowIntentAttributes) Events() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](di.ref.Append("events"))
}

func (di dialogflowIntentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("id"))
}

func (di dialogflowIntentAttributes) InputContextNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](di.ref.Append("input_context_names"))
}

func (di dialogflowIntentAttributes) IsFallback() terra.BoolValue {
	return terra.ReferenceBool(di.ref.Append("is_fallback"))
}

func (di dialogflowIntentAttributes) MlDisabled() terra.BoolValue {
	return terra.ReferenceBool(di.ref.Append("ml_disabled"))
}

func (di dialogflowIntentAttributes) Name() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("name"))
}

func (di dialogflowIntentAttributes) ParentFollowupIntentName() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("parent_followup_intent_name"))
}

func (di dialogflowIntentAttributes) Priority() terra.NumberValue {
	return terra.ReferenceNumber(di.ref.Append("priority"))
}

func (di dialogflowIntentAttributes) Project() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("project"))
}

func (di dialogflowIntentAttributes) ResetContexts() terra.BoolValue {
	return terra.ReferenceBool(di.ref.Append("reset_contexts"))
}

func (di dialogflowIntentAttributes) RootFollowupIntentName() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("root_followup_intent_name"))
}

func (di dialogflowIntentAttributes) WebhookState() terra.StringValue {
	return terra.ReferenceString(di.ref.Append("webhook_state"))
}

func (di dialogflowIntentAttributes) FollowupIntentInfo() terra.ListValue[dialogflowintent.FollowupIntentInfoAttributes] {
	return terra.ReferenceList[dialogflowintent.FollowupIntentInfoAttributes](di.ref.Append("followup_intent_info"))
}

func (di dialogflowIntentAttributes) Timeouts() dialogflowintent.TimeoutsAttributes {
	return terra.ReferenceSingle[dialogflowintent.TimeoutsAttributes](di.ref.Append("timeouts"))
}

type dialogflowIntentState struct {
	Action                   string                                     `json:"action"`
	DefaultResponsePlatforms []string                                   `json:"default_response_platforms"`
	DisplayName              string                                     `json:"display_name"`
	Events                   []string                                   `json:"events"`
	Id                       string                                     `json:"id"`
	InputContextNames        []string                                   `json:"input_context_names"`
	IsFallback               bool                                       `json:"is_fallback"`
	MlDisabled               bool                                       `json:"ml_disabled"`
	Name                     string                                     `json:"name"`
	ParentFollowupIntentName string                                     `json:"parent_followup_intent_name"`
	Priority                 float64                                    `json:"priority"`
	Project                  string                                     `json:"project"`
	ResetContexts            bool                                       `json:"reset_contexts"`
	RootFollowupIntentName   string                                     `json:"root_followup_intent_name"`
	WebhookState             string                                     `json:"webhook_state"`
	FollowupIntentInfo       []dialogflowintent.FollowupIntentInfoState `json:"followup_intent_info"`
	Timeouts                 *dialogflowintent.TimeoutsState            `json:"timeouts"`
}
