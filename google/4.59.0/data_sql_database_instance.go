// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datasqldatabaseinstance "github.com/golingon/terraproviders/google/4.59.0/datasqldatabaseinstance"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataSqlDatabaseInstance(name string, args DataSqlDatabaseInstanceArgs) *DataSqlDatabaseInstance {
	return &DataSqlDatabaseInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSqlDatabaseInstance)(nil)

type DataSqlDatabaseInstance struct {
	Name string
	Args DataSqlDatabaseInstanceArgs
}

func (sdi *DataSqlDatabaseInstance) DataSource() string {
	return "google_sql_database_instance"
}

func (sdi *DataSqlDatabaseInstance) LocalName() string {
	return sdi.Name
}

func (sdi *DataSqlDatabaseInstance) Configuration() interface{} {
	return sdi.Args
}

func (sdi *DataSqlDatabaseInstance) Attributes() dataSqlDatabaseInstanceAttributes {
	return dataSqlDatabaseInstanceAttributes{ref: terra.ReferenceDataResource(sdi)}
}

type DataSqlDatabaseInstanceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Clone: min=0
	Clone []datasqldatabaseinstance.Clone `hcl:"clone,block" validate:"min=0"`
	// IpAddress: min=0
	IpAddress []datasqldatabaseinstance.IpAddress `hcl:"ip_address,block" validate:"min=0"`
	// ReplicaConfiguration: min=0
	ReplicaConfiguration []datasqldatabaseinstance.ReplicaConfiguration `hcl:"replica_configuration,block" validate:"min=0"`
	// RestoreBackupContext: min=0
	RestoreBackupContext []datasqldatabaseinstance.RestoreBackupContext `hcl:"restore_backup_context,block" validate:"min=0"`
	// ServerCaCert: min=0
	ServerCaCert []datasqldatabaseinstance.ServerCaCert `hcl:"server_ca_cert,block" validate:"min=0"`
	// Settings: min=0
	Settings []datasqldatabaseinstance.Settings `hcl:"settings,block" validate:"min=0"`
}
type dataSqlDatabaseInstanceAttributes struct {
	ref terra.Reference
}

func (sdi dataSqlDatabaseInstanceAttributes) AvailableMaintenanceVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sdi.ref.Append("available_maintenance_versions"))
}

func (sdi dataSqlDatabaseInstanceAttributes) ConnectionName() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("connection_name"))
}

func (sdi dataSqlDatabaseInstanceAttributes) DatabaseVersion() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("database_version"))
}

func (sdi dataSqlDatabaseInstanceAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceBool(sdi.ref.Append("deletion_protection"))
}

func (sdi dataSqlDatabaseInstanceAttributes) EncryptionKeyName() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("encryption_key_name"))
}

func (sdi dataSqlDatabaseInstanceAttributes) FirstIpAddress() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("first_ip_address"))
}

func (sdi dataSqlDatabaseInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("id"))
}

func (sdi dataSqlDatabaseInstanceAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("instance_type"))
}

func (sdi dataSqlDatabaseInstanceAttributes) MaintenanceVersion() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("maintenance_version"))
}

func (sdi dataSqlDatabaseInstanceAttributes) MasterInstanceName() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("master_instance_name"))
}

func (sdi dataSqlDatabaseInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("name"))
}

func (sdi dataSqlDatabaseInstanceAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("private_ip_address"))
}

func (sdi dataSqlDatabaseInstanceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("project"))
}

func (sdi dataSqlDatabaseInstanceAttributes) PublicIpAddress() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("public_ip_address"))
}

func (sdi dataSqlDatabaseInstanceAttributes) Region() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("region"))
}

func (sdi dataSqlDatabaseInstanceAttributes) RootPassword() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("root_password"))
}

func (sdi dataSqlDatabaseInstanceAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("self_link"))
}

func (sdi dataSqlDatabaseInstanceAttributes) ServiceAccountEmailAddress() terra.StringValue {
	return terra.ReferenceString(sdi.ref.Append("service_account_email_address"))
}

func (sdi dataSqlDatabaseInstanceAttributes) Clone() terra.ListValue[datasqldatabaseinstance.CloneAttributes] {
	return terra.ReferenceList[datasqldatabaseinstance.CloneAttributes](sdi.ref.Append("clone"))
}

func (sdi dataSqlDatabaseInstanceAttributes) IpAddress() terra.ListValue[datasqldatabaseinstance.IpAddressAttributes] {
	return terra.ReferenceList[datasqldatabaseinstance.IpAddressAttributes](sdi.ref.Append("ip_address"))
}

func (sdi dataSqlDatabaseInstanceAttributes) ReplicaConfiguration() terra.ListValue[datasqldatabaseinstance.ReplicaConfigurationAttributes] {
	return terra.ReferenceList[datasqldatabaseinstance.ReplicaConfigurationAttributes](sdi.ref.Append("replica_configuration"))
}

func (sdi dataSqlDatabaseInstanceAttributes) RestoreBackupContext() terra.ListValue[datasqldatabaseinstance.RestoreBackupContextAttributes] {
	return terra.ReferenceList[datasqldatabaseinstance.RestoreBackupContextAttributes](sdi.ref.Append("restore_backup_context"))
}

func (sdi dataSqlDatabaseInstanceAttributes) ServerCaCert() terra.ListValue[datasqldatabaseinstance.ServerCaCertAttributes] {
	return terra.ReferenceList[datasqldatabaseinstance.ServerCaCertAttributes](sdi.ref.Append("server_ca_cert"))
}

func (sdi dataSqlDatabaseInstanceAttributes) Settings() terra.ListValue[datasqldatabaseinstance.SettingsAttributes] {
	return terra.ReferenceList[datasqldatabaseinstance.SettingsAttributes](sdi.ref.Append("settings"))
}
