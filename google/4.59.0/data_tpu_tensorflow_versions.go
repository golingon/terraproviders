// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataTpuTensorflowVersions(name string, args DataTpuTensorflowVersionsArgs) *DataTpuTensorflowVersions {
	return &DataTpuTensorflowVersions{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataTpuTensorflowVersions)(nil)

type DataTpuTensorflowVersions struct {
	Name string
	Args DataTpuTensorflowVersionsArgs
}

func (ttv *DataTpuTensorflowVersions) DataSource() string {
	return "google_tpu_tensorflow_versions"
}

func (ttv *DataTpuTensorflowVersions) LocalName() string {
	return ttv.Name
}

func (ttv *DataTpuTensorflowVersions) Configuration() interface{} {
	return ttv.Args
}

func (ttv *DataTpuTensorflowVersions) Attributes() dataTpuTensorflowVersionsAttributes {
	return dataTpuTensorflowVersionsAttributes{ref: terra.ReferenceDataResource(ttv)}
}

type DataTpuTensorflowVersionsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
}
type dataTpuTensorflowVersionsAttributes struct {
	ref terra.Reference
}

func (ttv dataTpuTensorflowVersionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ttv.ref.Append("id"))
}

func (ttv dataTpuTensorflowVersionsAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ttv.ref.Append("project"))
}

func (ttv dataTpuTensorflowVersionsAttributes) Versions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ttv.ref.Append("versions"))
}

func (ttv dataTpuTensorflowVersionsAttributes) Zone() terra.StringValue {
	return terra.ReferenceString(ttv.ref.Append("zone"))
}
