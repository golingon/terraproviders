// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	dataplexasset "github.com/golingon/terraproviders/google/4.59.0/dataplexasset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDataplexAsset(name string, args DataplexAssetArgs) *DataplexAsset {
	return &DataplexAsset{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataplexAsset)(nil)

type DataplexAsset struct {
	Name  string
	Args  DataplexAssetArgs
	state *dataplexAssetState
}

func (da *DataplexAsset) Type() string {
	return "google_dataplex_asset"
}

func (da *DataplexAsset) LocalName() string {
	return da.Name
}

func (da *DataplexAsset) Configuration() interface{} {
	return da.Args
}

func (da *DataplexAsset) Attributes() dataplexAssetAttributes {
	return dataplexAssetAttributes{ref: terra.ReferenceResource(da)}
}

func (da *DataplexAsset) ImportState(av io.Reader) error {
	da.state = &dataplexAssetState{}
	if err := json.NewDecoder(av).Decode(da.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", da.Type(), da.LocalName(), err)
	}
	return nil
}

func (da *DataplexAsset) State() (*dataplexAssetState, bool) {
	return da.state, da.state != nil
}

func (da *DataplexAsset) StateMust() *dataplexAssetState {
	if da.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", da.Type(), da.LocalName()))
	}
	return da.state
}

func (da *DataplexAsset) DependOn() terra.Reference {
	return terra.ReferenceResource(da)
}

type DataplexAssetArgs struct {
	// DataplexZone: string, required
	DataplexZone terra.StringValue `hcl:"dataplex_zone,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Lake: string, required
	Lake terra.StringValue `hcl:"lake,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// DiscoveryStatus: min=0
	DiscoveryStatus []dataplexasset.DiscoveryStatus `hcl:"discovery_status,block" validate:"min=0"`
	// ResourceStatus: min=0
	ResourceStatus []dataplexasset.ResourceStatus `hcl:"resource_status,block" validate:"min=0"`
	// SecurityStatus: min=0
	SecurityStatus []dataplexasset.SecurityStatus `hcl:"security_status,block" validate:"min=0"`
	// DiscoverySpec: required
	DiscoverySpec *dataplexasset.DiscoverySpec `hcl:"discovery_spec,block" validate:"required"`
	// ResourceSpec: required
	ResourceSpec *dataplexasset.ResourceSpec `hcl:"resource_spec,block" validate:"required"`
	// Timeouts: optional
	Timeouts *dataplexasset.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DataplexAsset depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dataplexAssetAttributes struct {
	ref terra.Reference
}

func (da dataplexAssetAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("create_time"))
}

func (da dataplexAssetAttributes) DataplexZone() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("dataplex_zone"))
}

func (da dataplexAssetAttributes) Description() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("description"))
}

func (da dataplexAssetAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("display_name"))
}

func (da dataplexAssetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("id"))
}

func (da dataplexAssetAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](da.ref.Append("labels"))
}

func (da dataplexAssetAttributes) Lake() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("lake"))
}

func (da dataplexAssetAttributes) Location() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("location"))
}

func (da dataplexAssetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("name"))
}

func (da dataplexAssetAttributes) Project() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("project"))
}

func (da dataplexAssetAttributes) State() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("state"))
}

func (da dataplexAssetAttributes) Uid() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("uid"))
}

func (da dataplexAssetAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceString(da.ref.Append("update_time"))
}

func (da dataplexAssetAttributes) DiscoveryStatus() terra.ListValue[dataplexasset.DiscoveryStatusAttributes] {
	return terra.ReferenceList[dataplexasset.DiscoveryStatusAttributes](da.ref.Append("discovery_status"))
}

func (da dataplexAssetAttributes) ResourceStatus() terra.ListValue[dataplexasset.ResourceStatusAttributes] {
	return terra.ReferenceList[dataplexasset.ResourceStatusAttributes](da.ref.Append("resource_status"))
}

func (da dataplexAssetAttributes) SecurityStatus() terra.ListValue[dataplexasset.SecurityStatusAttributes] {
	return terra.ReferenceList[dataplexasset.SecurityStatusAttributes](da.ref.Append("security_status"))
}

func (da dataplexAssetAttributes) DiscoverySpec() terra.ListValue[dataplexasset.DiscoverySpecAttributes] {
	return terra.ReferenceList[dataplexasset.DiscoverySpecAttributes](da.ref.Append("discovery_spec"))
}

func (da dataplexAssetAttributes) ResourceSpec() terra.ListValue[dataplexasset.ResourceSpecAttributes] {
	return terra.ReferenceList[dataplexasset.ResourceSpecAttributes](da.ref.Append("resource_spec"))
}

func (da dataplexAssetAttributes) Timeouts() dataplexasset.TimeoutsAttributes {
	return terra.ReferenceSingle[dataplexasset.TimeoutsAttributes](da.ref.Append("timeouts"))
}

type dataplexAssetState struct {
	CreateTime      string                               `json:"create_time"`
	DataplexZone    string                               `json:"dataplex_zone"`
	Description     string                               `json:"description"`
	DisplayName     string                               `json:"display_name"`
	Id              string                               `json:"id"`
	Labels          map[string]string                    `json:"labels"`
	Lake            string                               `json:"lake"`
	Location        string                               `json:"location"`
	Name            string                               `json:"name"`
	Project         string                               `json:"project"`
	State           string                               `json:"state"`
	Uid             string                               `json:"uid"`
	UpdateTime      string                               `json:"update_time"`
	DiscoveryStatus []dataplexasset.DiscoveryStatusState `json:"discovery_status"`
	ResourceStatus  []dataplexasset.ResourceStatusState  `json:"resource_status"`
	SecurityStatus  []dataplexasset.SecurityStatusState  `json:"security_status"`
	DiscoverySpec   []dataplexasset.DiscoverySpecState   `json:"discovery_spec"`
	ResourceSpec    []dataplexasset.ResourceSpecState    `json:"resource_spec"`
	Timeouts        *dataplexasset.TimeoutsState         `json:"timeouts"`
}
