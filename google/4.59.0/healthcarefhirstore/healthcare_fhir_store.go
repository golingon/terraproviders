// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package healthcarefhirstore

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type NotificationConfig struct {
	// PubsubTopic: string, required
	PubsubTopic terra.StringValue `hcl:"pubsub_topic,attr" validate:"required"`
}

type StreamConfigs struct {
	// ResourceTypes: list of string, optional
	ResourceTypes terra.ListValue[terra.StringValue] `hcl:"resource_types,attr"`
	// BigqueryDestination: required
	BigqueryDestination *BigqueryDestination `hcl:"bigquery_destination,block" validate:"required"`
}

type BigqueryDestination struct {
	// DatasetUri: string, required
	DatasetUri terra.StringValue `hcl:"dataset_uri,attr" validate:"required"`
	// SchemaConfig: required
	SchemaConfig *SchemaConfig `hcl:"schema_config,block" validate:"required"`
}

type SchemaConfig struct {
	// RecursiveStructureDepth: number, required
	RecursiveStructureDepth terra.NumberValue `hcl:"recursive_structure_depth,attr" validate:"required"`
	// SchemaType: string, optional
	SchemaType terra.StringValue `hcl:"schema_type,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type NotificationConfigAttributes struct {
	ref terra.Reference
}

func (nc NotificationConfigAttributes) InternalRef() terra.Reference {
	return nc.ref
}

func (nc NotificationConfigAttributes) InternalWithRef(ref terra.Reference) NotificationConfigAttributes {
	return NotificationConfigAttributes{ref: ref}
}

func (nc NotificationConfigAttributes) InternalTokens() hclwrite.Tokens {
	return nc.ref.InternalTokens()
}

func (nc NotificationConfigAttributes) PubsubTopic() terra.StringValue {
	return terra.ReferenceString(nc.ref.Append("pubsub_topic"))
}

type StreamConfigsAttributes struct {
	ref terra.Reference
}

func (sc StreamConfigsAttributes) InternalRef() terra.Reference {
	return sc.ref
}

func (sc StreamConfigsAttributes) InternalWithRef(ref terra.Reference) StreamConfigsAttributes {
	return StreamConfigsAttributes{ref: ref}
}

func (sc StreamConfigsAttributes) InternalTokens() hclwrite.Tokens {
	return sc.ref.InternalTokens()
}

func (sc StreamConfigsAttributes) ResourceTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sc.ref.Append("resource_types"))
}

func (sc StreamConfigsAttributes) BigqueryDestination() terra.ListValue[BigqueryDestinationAttributes] {
	return terra.ReferenceList[BigqueryDestinationAttributes](sc.ref.Append("bigquery_destination"))
}

type BigqueryDestinationAttributes struct {
	ref terra.Reference
}

func (bd BigqueryDestinationAttributes) InternalRef() terra.Reference {
	return bd.ref
}

func (bd BigqueryDestinationAttributes) InternalWithRef(ref terra.Reference) BigqueryDestinationAttributes {
	return BigqueryDestinationAttributes{ref: ref}
}

func (bd BigqueryDestinationAttributes) InternalTokens() hclwrite.Tokens {
	return bd.ref.InternalTokens()
}

func (bd BigqueryDestinationAttributes) DatasetUri() terra.StringValue {
	return terra.ReferenceString(bd.ref.Append("dataset_uri"))
}

func (bd BigqueryDestinationAttributes) SchemaConfig() terra.ListValue[SchemaConfigAttributes] {
	return terra.ReferenceList[SchemaConfigAttributes](bd.ref.Append("schema_config"))
}

type SchemaConfigAttributes struct {
	ref terra.Reference
}

func (sc SchemaConfigAttributes) InternalRef() terra.Reference {
	return sc.ref
}

func (sc SchemaConfigAttributes) InternalWithRef(ref terra.Reference) SchemaConfigAttributes {
	return SchemaConfigAttributes{ref: ref}
}

func (sc SchemaConfigAttributes) InternalTokens() hclwrite.Tokens {
	return sc.ref.InternalTokens()
}

func (sc SchemaConfigAttributes) RecursiveStructureDepth() terra.NumberValue {
	return terra.ReferenceNumber(sc.ref.Append("recursive_structure_depth"))
}

func (sc SchemaConfigAttributes) SchemaType() terra.StringValue {
	return terra.ReferenceString(sc.ref.Append("schema_type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type NotificationConfigState struct {
	PubsubTopic string `json:"pubsub_topic"`
}

type StreamConfigsState struct {
	ResourceTypes       []string                   `json:"resource_types"`
	BigqueryDestination []BigqueryDestinationState `json:"bigquery_destination"`
}

type BigqueryDestinationState struct {
	DatasetUri   string              `json:"dataset_uri"`
	SchemaConfig []SchemaConfigState `json:"schema_config"`
}

type SchemaConfigState struct {
	RecursiveStructureDepth float64 `json:"recursive_structure_depth"`
	SchemaType              string  `json:"schema_type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
