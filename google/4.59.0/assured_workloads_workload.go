// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	assuredworkloadsworkload "github.com/golingon/terraproviders/google/4.59.0/assuredworkloadsworkload"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAssuredWorkloadsWorkload(name string, args AssuredWorkloadsWorkloadArgs) *AssuredWorkloadsWorkload {
	return &AssuredWorkloadsWorkload{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AssuredWorkloadsWorkload)(nil)

type AssuredWorkloadsWorkload struct {
	Name  string
	Args  AssuredWorkloadsWorkloadArgs
	state *assuredWorkloadsWorkloadState
}

func (aww *AssuredWorkloadsWorkload) Type() string {
	return "google_assured_workloads_workload"
}

func (aww *AssuredWorkloadsWorkload) LocalName() string {
	return aww.Name
}

func (aww *AssuredWorkloadsWorkload) Configuration() interface{} {
	return aww.Args
}

func (aww *AssuredWorkloadsWorkload) Attributes() assuredWorkloadsWorkloadAttributes {
	return assuredWorkloadsWorkloadAttributes{ref: terra.ReferenceResource(aww)}
}

func (aww *AssuredWorkloadsWorkload) ImportState(av io.Reader) error {
	aww.state = &assuredWorkloadsWorkloadState{}
	if err := json.NewDecoder(av).Decode(aww.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aww.Type(), aww.LocalName(), err)
	}
	return nil
}

func (aww *AssuredWorkloadsWorkload) State() (*assuredWorkloadsWorkloadState, bool) {
	return aww.state, aww.state != nil
}

func (aww *AssuredWorkloadsWorkload) StateMust() *assuredWorkloadsWorkloadState {
	if aww.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aww.Type(), aww.LocalName()))
	}
	return aww.state
}

func (aww *AssuredWorkloadsWorkload) DependOn() terra.Reference {
	return terra.ReferenceResource(aww)
}

type AssuredWorkloadsWorkloadArgs struct {
	// BillingAccount: string, required
	BillingAccount terra.StringValue `hcl:"billing_account,attr" validate:"required"`
	// ComplianceRegime: string, required
	ComplianceRegime terra.StringValue `hcl:"compliance_regime,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Organization: string, required
	Organization terra.StringValue `hcl:"organization,attr" validate:"required"`
	// ProvisionedResourcesParent: string, optional
	ProvisionedResourcesParent terra.StringValue `hcl:"provisioned_resources_parent,attr"`
	// Resources: min=0
	Resources []assuredworkloadsworkload.Resources `hcl:"resources,block" validate:"min=0"`
	// KmsSettings: optional
	KmsSettings *assuredworkloadsworkload.KmsSettings `hcl:"kms_settings,block"`
	// ResourceSettings: min=0
	ResourceSettings []assuredworkloadsworkload.ResourceSettings `hcl:"resource_settings,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *assuredworkloadsworkload.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that AssuredWorkloadsWorkload depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type assuredWorkloadsWorkloadAttributes struct {
	ref terra.Reference
}

func (aww assuredWorkloadsWorkloadAttributes) BillingAccount() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("billing_account"))
}

func (aww assuredWorkloadsWorkloadAttributes) ComplianceRegime() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("compliance_regime"))
}

func (aww assuredWorkloadsWorkloadAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("create_time"))
}

func (aww assuredWorkloadsWorkloadAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("display_name"))
}

func (aww assuredWorkloadsWorkloadAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("id"))
}

func (aww assuredWorkloadsWorkloadAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aww.ref.Append("labels"))
}

func (aww assuredWorkloadsWorkloadAttributes) Location() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("location"))
}

func (aww assuredWorkloadsWorkloadAttributes) Name() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("name"))
}

func (aww assuredWorkloadsWorkloadAttributes) Organization() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("organization"))
}

func (aww assuredWorkloadsWorkloadAttributes) ProvisionedResourcesParent() terra.StringValue {
	return terra.ReferenceString(aww.ref.Append("provisioned_resources_parent"))
}

func (aww assuredWorkloadsWorkloadAttributes) Resources() terra.ListValue[assuredworkloadsworkload.ResourcesAttributes] {
	return terra.ReferenceList[assuredworkloadsworkload.ResourcesAttributes](aww.ref.Append("resources"))
}

func (aww assuredWorkloadsWorkloadAttributes) KmsSettings() terra.ListValue[assuredworkloadsworkload.KmsSettingsAttributes] {
	return terra.ReferenceList[assuredworkloadsworkload.KmsSettingsAttributes](aww.ref.Append("kms_settings"))
}

func (aww assuredWorkloadsWorkloadAttributes) ResourceSettings() terra.ListValue[assuredworkloadsworkload.ResourceSettingsAttributes] {
	return terra.ReferenceList[assuredworkloadsworkload.ResourceSettingsAttributes](aww.ref.Append("resource_settings"))
}

func (aww assuredWorkloadsWorkloadAttributes) Timeouts() assuredworkloadsworkload.TimeoutsAttributes {
	return terra.ReferenceSingle[assuredworkloadsworkload.TimeoutsAttributes](aww.ref.Append("timeouts"))
}

type assuredWorkloadsWorkloadState struct {
	BillingAccount             string                                           `json:"billing_account"`
	ComplianceRegime           string                                           `json:"compliance_regime"`
	CreateTime                 string                                           `json:"create_time"`
	DisplayName                string                                           `json:"display_name"`
	Id                         string                                           `json:"id"`
	Labels                     map[string]string                                `json:"labels"`
	Location                   string                                           `json:"location"`
	Name                       string                                           `json:"name"`
	Organization               string                                           `json:"organization"`
	ProvisionedResourcesParent string                                           `json:"provisioned_resources_parent"`
	Resources                  []assuredworkloadsworkload.ResourcesState        `json:"resources"`
	KmsSettings                []assuredworkloadsworkload.KmsSettingsState      `json:"kms_settings"`
	ResourceSettings           []assuredworkloadsworkload.ResourceSettingsState `json:"resource_settings"`
	Timeouts                   *assuredworkloadsworkload.TimeoutsState          `json:"timeouts"`
}
