// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKmsKeyRingIamPolicy(name string, args KmsKeyRingIamPolicyArgs) *KmsKeyRingIamPolicy {
	return &KmsKeyRingIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KmsKeyRingIamPolicy)(nil)

type KmsKeyRingIamPolicy struct {
	Name  string
	Args  KmsKeyRingIamPolicyArgs
	state *kmsKeyRingIamPolicyState
}

func (kkrip *KmsKeyRingIamPolicy) Type() string {
	return "google_kms_key_ring_iam_policy"
}

func (kkrip *KmsKeyRingIamPolicy) LocalName() string {
	return kkrip.Name
}

func (kkrip *KmsKeyRingIamPolicy) Configuration() interface{} {
	return kkrip.Args
}

func (kkrip *KmsKeyRingIamPolicy) Attributes() kmsKeyRingIamPolicyAttributes {
	return kmsKeyRingIamPolicyAttributes{ref: terra.ReferenceResource(kkrip)}
}

func (kkrip *KmsKeyRingIamPolicy) ImportState(av io.Reader) error {
	kkrip.state = &kmsKeyRingIamPolicyState{}
	if err := json.NewDecoder(av).Decode(kkrip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kkrip.Type(), kkrip.LocalName(), err)
	}
	return nil
}

func (kkrip *KmsKeyRingIamPolicy) State() (*kmsKeyRingIamPolicyState, bool) {
	return kkrip.state, kkrip.state != nil
}

func (kkrip *KmsKeyRingIamPolicy) StateMust() *kmsKeyRingIamPolicyState {
	if kkrip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kkrip.Type(), kkrip.LocalName()))
	}
	return kkrip.state
}

func (kkrip *KmsKeyRingIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(kkrip)
}

type KmsKeyRingIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyRingId: string, required
	KeyRingId terra.StringValue `hcl:"key_ring_id,attr" validate:"required"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// DependsOn contains resources that KmsKeyRingIamPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kmsKeyRingIamPolicyAttributes struct {
	ref terra.Reference
}

func (kkrip kmsKeyRingIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(kkrip.ref.Append("etag"))
}

func (kkrip kmsKeyRingIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kkrip.ref.Append("id"))
}

func (kkrip kmsKeyRingIamPolicyAttributes) KeyRingId() terra.StringValue {
	return terra.ReferenceString(kkrip.ref.Append("key_ring_id"))
}

func (kkrip kmsKeyRingIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceString(kkrip.ref.Append("policy_data"))
}

type kmsKeyRingIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	KeyRingId  string `json:"key_ring_id"`
	PolicyData string `json:"policy_data"`
}
