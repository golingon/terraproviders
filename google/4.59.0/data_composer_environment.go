// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomposerenvironment "github.com/golingon/terraproviders/google/4.59.0/datacomposerenvironment"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComposerEnvironment(name string, args DataComposerEnvironmentArgs) *DataComposerEnvironment {
	return &DataComposerEnvironment{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComposerEnvironment)(nil)

type DataComposerEnvironment struct {
	Name string
	Args DataComposerEnvironmentArgs
}

func (ce *DataComposerEnvironment) DataSource() string {
	return "google_composer_environment"
}

func (ce *DataComposerEnvironment) LocalName() string {
	return ce.Name
}

func (ce *DataComposerEnvironment) Configuration() interface{} {
	return ce.Args
}

func (ce *DataComposerEnvironment) Attributes() dataComposerEnvironmentAttributes {
	return dataComposerEnvironmentAttributes{ref: terra.ReferenceDataResource(ce)}
}

type DataComposerEnvironmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Config: min=0
	Config []datacomposerenvironment.Config `hcl:"config,block" validate:"min=0"`
}
type dataComposerEnvironmentAttributes struct {
	ref terra.Reference
}

func (ce dataComposerEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ce.ref.Append("id"))
}

func (ce dataComposerEnvironmentAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ce.ref.Append("labels"))
}

func (ce dataComposerEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ce.ref.Append("name"))
}

func (ce dataComposerEnvironmentAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ce.ref.Append("project"))
}

func (ce dataComposerEnvironmentAttributes) Region() terra.StringValue {
	return terra.ReferenceString(ce.ref.Append("region"))
}

func (ce dataComposerEnvironmentAttributes) Config() terra.ListValue[datacomposerenvironment.ConfigAttributes] {
	return terra.ReferenceList[datacomposerenvironment.ConfigAttributes](ce.ref.Append("config"))
}
