// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datasqldatabases

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Databases struct{}

type DatabasesAttributes struct {
	ref terra.Reference
}

func (d DatabasesAttributes) InternalRef() terra.Reference {
	return d.ref
}

func (d DatabasesAttributes) InternalWithRef(ref terra.Reference) DatabasesAttributes {
	return DatabasesAttributes{ref: ref}
}

func (d DatabasesAttributes) InternalTokens() hclwrite.Tokens {
	return d.ref.InternalTokens()
}

func (d DatabasesAttributes) Charset() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("charset"))
}

func (d DatabasesAttributes) Collation() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("collation"))
}

func (d DatabasesAttributes) DeletionPolicy() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("deletion_policy"))
}

func (d DatabasesAttributes) Instance() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("instance"))
}

func (d DatabasesAttributes) Name() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("name"))
}

func (d DatabasesAttributes) Project() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("project"))
}

func (d DatabasesAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(d.ref.Append("self_link"))
}

type DatabasesState struct {
	Charset        string `json:"charset"`
	Collation      string `json:"collation"`
	DeletionPolicy string `json:"deletion_policy"`
	Instance       string `json:"instance"`
	Name           string `json:"name"`
	Project        string `json:"project"`
	SelfLink       string `json:"self_link"`
}
