// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package binaryauthorizationpolicy

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AdmissionWhitelistPatterns struct {
	// NamePattern: string, required
	NamePattern terra.StringValue `hcl:"name_pattern,attr" validate:"required"`
}

type ClusterAdmissionRules struct {
	// Cluster: string, required
	Cluster terra.StringValue `hcl:"cluster,attr" validate:"required"`
	// EnforcementMode: string, required
	EnforcementMode terra.StringValue `hcl:"enforcement_mode,attr" validate:"required"`
	// EvaluationMode: string, required
	EvaluationMode terra.StringValue `hcl:"evaluation_mode,attr" validate:"required"`
	// RequireAttestationsBy: set of string, optional
	RequireAttestationsBy terra.SetValue[terra.StringValue] `hcl:"require_attestations_by,attr"`
}

type DefaultAdmissionRule struct {
	// EnforcementMode: string, required
	EnforcementMode terra.StringValue `hcl:"enforcement_mode,attr" validate:"required"`
	// EvaluationMode: string, required
	EvaluationMode terra.StringValue `hcl:"evaluation_mode,attr" validate:"required"`
	// RequireAttestationsBy: set of string, optional
	RequireAttestationsBy terra.SetValue[terra.StringValue] `hcl:"require_attestations_by,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AdmissionWhitelistPatternsAttributes struct {
	ref terra.Reference
}

func (awp AdmissionWhitelistPatternsAttributes) InternalRef() terra.Reference {
	return awp.ref
}

func (awp AdmissionWhitelistPatternsAttributes) InternalWithRef(ref terra.Reference) AdmissionWhitelistPatternsAttributes {
	return AdmissionWhitelistPatternsAttributes{ref: ref}
}

func (awp AdmissionWhitelistPatternsAttributes) InternalTokens() hclwrite.Tokens {
	return awp.ref.InternalTokens()
}

func (awp AdmissionWhitelistPatternsAttributes) NamePattern() terra.StringValue {
	return terra.ReferenceString(awp.ref.Append("name_pattern"))
}

type ClusterAdmissionRulesAttributes struct {
	ref terra.Reference
}

func (car ClusterAdmissionRulesAttributes) InternalRef() terra.Reference {
	return car.ref
}

func (car ClusterAdmissionRulesAttributes) InternalWithRef(ref terra.Reference) ClusterAdmissionRulesAttributes {
	return ClusterAdmissionRulesAttributes{ref: ref}
}

func (car ClusterAdmissionRulesAttributes) InternalTokens() hclwrite.Tokens {
	return car.ref.InternalTokens()
}

func (car ClusterAdmissionRulesAttributes) Cluster() terra.StringValue {
	return terra.ReferenceString(car.ref.Append("cluster"))
}

func (car ClusterAdmissionRulesAttributes) EnforcementMode() terra.StringValue {
	return terra.ReferenceString(car.ref.Append("enforcement_mode"))
}

func (car ClusterAdmissionRulesAttributes) EvaluationMode() terra.StringValue {
	return terra.ReferenceString(car.ref.Append("evaluation_mode"))
}

func (car ClusterAdmissionRulesAttributes) RequireAttestationsBy() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](car.ref.Append("require_attestations_by"))
}

type DefaultAdmissionRuleAttributes struct {
	ref terra.Reference
}

func (dar DefaultAdmissionRuleAttributes) InternalRef() terra.Reference {
	return dar.ref
}

func (dar DefaultAdmissionRuleAttributes) InternalWithRef(ref terra.Reference) DefaultAdmissionRuleAttributes {
	return DefaultAdmissionRuleAttributes{ref: ref}
}

func (dar DefaultAdmissionRuleAttributes) InternalTokens() hclwrite.Tokens {
	return dar.ref.InternalTokens()
}

func (dar DefaultAdmissionRuleAttributes) EnforcementMode() terra.StringValue {
	return terra.ReferenceString(dar.ref.Append("enforcement_mode"))
}

func (dar DefaultAdmissionRuleAttributes) EvaluationMode() terra.StringValue {
	return terra.ReferenceString(dar.ref.Append("evaluation_mode"))
}

func (dar DefaultAdmissionRuleAttributes) RequireAttestationsBy() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](dar.ref.Append("require_attestations_by"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type AdmissionWhitelistPatternsState struct {
	NamePattern string `json:"name_pattern"`
}

type ClusterAdmissionRulesState struct {
	Cluster               string   `json:"cluster"`
	EnforcementMode       string   `json:"enforcement_mode"`
	EvaluationMode        string   `json:"evaluation_mode"`
	RequireAttestationsBy []string `json:"require_attestations_by"`
}

type DefaultAdmissionRuleState struct {
	EnforcementMode       string   `json:"enforcement_mode"`
	EvaluationMode        string   `json:"evaluation_mode"`
	RequireAttestationsBy []string `json:"require_attestations_by"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
