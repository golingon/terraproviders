// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	identityplatforminboundsamlconfig "github.com/golingon/terraproviders/google/4.59.0/identityplatforminboundsamlconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIdentityPlatformInboundSamlConfig(name string, args IdentityPlatformInboundSamlConfigArgs) *IdentityPlatformInboundSamlConfig {
	return &IdentityPlatformInboundSamlConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityPlatformInboundSamlConfig)(nil)

type IdentityPlatformInboundSamlConfig struct {
	Name  string
	Args  IdentityPlatformInboundSamlConfigArgs
	state *identityPlatformInboundSamlConfigState
}

func (ipisc *IdentityPlatformInboundSamlConfig) Type() string {
	return "google_identity_platform_inbound_saml_config"
}

func (ipisc *IdentityPlatformInboundSamlConfig) LocalName() string {
	return ipisc.Name
}

func (ipisc *IdentityPlatformInboundSamlConfig) Configuration() interface{} {
	return ipisc.Args
}

func (ipisc *IdentityPlatformInboundSamlConfig) Attributes() identityPlatformInboundSamlConfigAttributes {
	return identityPlatformInboundSamlConfigAttributes{ref: terra.ReferenceResource(ipisc)}
}

func (ipisc *IdentityPlatformInboundSamlConfig) ImportState(av io.Reader) error {
	ipisc.state = &identityPlatformInboundSamlConfigState{}
	if err := json.NewDecoder(av).Decode(ipisc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ipisc.Type(), ipisc.LocalName(), err)
	}
	return nil
}

func (ipisc *IdentityPlatformInboundSamlConfig) State() (*identityPlatformInboundSamlConfigState, bool) {
	return ipisc.state, ipisc.state != nil
}

func (ipisc *IdentityPlatformInboundSamlConfig) StateMust() *identityPlatformInboundSamlConfigState {
	if ipisc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ipisc.Type(), ipisc.LocalName()))
	}
	return ipisc.state
}

func (ipisc *IdentityPlatformInboundSamlConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(ipisc)
}

type IdentityPlatformInboundSamlConfigArgs struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// IdpConfig: required
	IdpConfig *identityplatforminboundsamlconfig.IdpConfig `hcl:"idp_config,block" validate:"required"`
	// SpConfig: required
	SpConfig *identityplatforminboundsamlconfig.SpConfig `hcl:"sp_config,block" validate:"required"`
	// Timeouts: optional
	Timeouts *identityplatforminboundsamlconfig.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IdentityPlatformInboundSamlConfig depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type identityPlatformInboundSamlConfigAttributes struct {
	ref terra.Reference
}

func (ipisc identityPlatformInboundSamlConfigAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(ipisc.ref.Append("display_name"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(ipisc.ref.Append("enabled"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ipisc.ref.Append("id"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ipisc.ref.Append("name"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ipisc.ref.Append("project"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) IdpConfig() terra.ListValue[identityplatforminboundsamlconfig.IdpConfigAttributes] {
	return terra.ReferenceList[identityplatforminboundsamlconfig.IdpConfigAttributes](ipisc.ref.Append("idp_config"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) SpConfig() terra.ListValue[identityplatforminboundsamlconfig.SpConfigAttributes] {
	return terra.ReferenceList[identityplatforminboundsamlconfig.SpConfigAttributes](ipisc.ref.Append("sp_config"))
}

func (ipisc identityPlatformInboundSamlConfigAttributes) Timeouts() identityplatforminboundsamlconfig.TimeoutsAttributes {
	return terra.ReferenceSingle[identityplatforminboundsamlconfig.TimeoutsAttributes](ipisc.ref.Append("timeouts"))
}

type identityPlatformInboundSamlConfigState struct {
	DisplayName string                                             `json:"display_name"`
	Enabled     bool                                               `json:"enabled"`
	Id          string                                             `json:"id"`
	Name        string                                             `json:"name"`
	Project     string                                             `json:"project"`
	IdpConfig   []identityplatforminboundsamlconfig.IdpConfigState `json:"idp_config"`
	SpConfig    []identityplatforminboundsamlconfig.SpConfigState  `json:"sp_config"`
	Timeouts    *identityplatforminboundsamlconfig.TimeoutsState   `json:"timeouts"`
}
