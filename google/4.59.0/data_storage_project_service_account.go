// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataStorageProjectServiceAccount(name string, args DataStorageProjectServiceAccountArgs) *DataStorageProjectServiceAccount {
	return &DataStorageProjectServiceAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataStorageProjectServiceAccount)(nil)

type DataStorageProjectServiceAccount struct {
	Name string
	Args DataStorageProjectServiceAccountArgs
}

func (spsa *DataStorageProjectServiceAccount) DataSource() string {
	return "google_storage_project_service_account"
}

func (spsa *DataStorageProjectServiceAccount) LocalName() string {
	return spsa.Name
}

func (spsa *DataStorageProjectServiceAccount) Configuration() interface{} {
	return spsa.Args
}

func (spsa *DataStorageProjectServiceAccount) Attributes() dataStorageProjectServiceAccountAttributes {
	return dataStorageProjectServiceAccountAttributes{ref: terra.ReferenceDataResource(spsa)}
}

type DataStorageProjectServiceAccountArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// UserProject: string, optional
	UserProject terra.StringValue `hcl:"user_project,attr"`
}
type dataStorageProjectServiceAccountAttributes struct {
	ref terra.Reference
}

func (spsa dataStorageProjectServiceAccountAttributes) EmailAddress() terra.StringValue {
	return terra.ReferenceString(spsa.ref.Append("email_address"))
}

func (spsa dataStorageProjectServiceAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceString(spsa.ref.Append("id"))
}

func (spsa dataStorageProjectServiceAccountAttributes) Member() terra.StringValue {
	return terra.ReferenceString(spsa.ref.Append("member"))
}

func (spsa dataStorageProjectServiceAccountAttributes) Project() terra.StringValue {
	return terra.ReferenceString(spsa.ref.Append("project"))
}

func (spsa dataStorageProjectServiceAccountAttributes) UserProject() terra.StringValue {
	return terra.ReferenceString(spsa.ref.Append("user_project"))
}
