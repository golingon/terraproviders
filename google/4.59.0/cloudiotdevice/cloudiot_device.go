// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package cloudiotdevice

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Config struct{}

type LastErrorStatus struct{}

type State struct{}

type Credentials struct {
	// ExpirationTime: string, optional
	ExpirationTime terra.StringValue `hcl:"expiration_time,attr"`
	// PublicKey: required
	PublicKey *PublicKey `hcl:"public_key,block" validate:"required"`
}

type PublicKey struct {
	// Format: string, required
	Format terra.StringValue `hcl:"format,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type GatewayConfig struct {
	// GatewayAuthMethod: string, optional
	GatewayAuthMethod terra.StringValue `hcl:"gateway_auth_method,attr"`
	// GatewayType: string, optional
	GatewayType terra.StringValue `hcl:"gateway_type,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ConfigAttributes struct {
	ref terra.Reference
}

func (c ConfigAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c ConfigAttributes) InternalWithRef(ref terra.Reference) ConfigAttributes {
	return ConfigAttributes{ref: ref}
}

func (c ConfigAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ConfigAttributes) BinaryData() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("binary_data"))
}

func (c ConfigAttributes) CloudUpdateTime() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("cloud_update_time"))
}

func (c ConfigAttributes) DeviceAckTime() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("device_ack_time"))
}

func (c ConfigAttributes) Version() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("version"))
}

type LastErrorStatusAttributes struct {
	ref terra.Reference
}

func (les LastErrorStatusAttributes) InternalRef() terra.Reference {
	return les.ref
}

func (les LastErrorStatusAttributes) InternalWithRef(ref terra.Reference) LastErrorStatusAttributes {
	return LastErrorStatusAttributes{ref: ref}
}

func (les LastErrorStatusAttributes) InternalTokens() hclwrite.Tokens {
	return les.ref.InternalTokens()
}

func (les LastErrorStatusAttributes) Details() terra.ListValue[terra.MapValue[terra.StringValue]] {
	return terra.ReferenceList[terra.MapValue[terra.StringValue]](les.ref.Append("details"))
}

func (les LastErrorStatusAttributes) Message() terra.StringValue {
	return terra.ReferenceString(les.ref.Append("message"))
}

func (les LastErrorStatusAttributes) Number() terra.NumberValue {
	return terra.ReferenceNumber(les.ref.Append("number"))
}

type StateAttributes struct {
	ref terra.Reference
}

func (s StateAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s StateAttributes) InternalWithRef(ref terra.Reference) StateAttributes {
	return StateAttributes{ref: ref}
}

func (s StateAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s StateAttributes) BinaryData() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("binary_data"))
}

func (s StateAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("update_time"))
}

type CredentialsAttributes struct {
	ref terra.Reference
}

func (c CredentialsAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c CredentialsAttributes) InternalWithRef(ref terra.Reference) CredentialsAttributes {
	return CredentialsAttributes{ref: ref}
}

func (c CredentialsAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c CredentialsAttributes) ExpirationTime() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("expiration_time"))
}

func (c CredentialsAttributes) PublicKey() terra.ListValue[PublicKeyAttributes] {
	return terra.ReferenceList[PublicKeyAttributes](c.ref.Append("public_key"))
}

type PublicKeyAttributes struct {
	ref terra.Reference
}

func (pk PublicKeyAttributes) InternalRef() terra.Reference {
	return pk.ref
}

func (pk PublicKeyAttributes) InternalWithRef(ref terra.Reference) PublicKeyAttributes {
	return PublicKeyAttributes{ref: ref}
}

func (pk PublicKeyAttributes) InternalTokens() hclwrite.Tokens {
	return pk.ref.InternalTokens()
}

func (pk PublicKeyAttributes) Format() terra.StringValue {
	return terra.ReferenceString(pk.ref.Append("format"))
}

func (pk PublicKeyAttributes) Key() terra.StringValue {
	return terra.ReferenceString(pk.ref.Append("key"))
}

type GatewayConfigAttributes struct {
	ref terra.Reference
}

func (gc GatewayConfigAttributes) InternalRef() terra.Reference {
	return gc.ref
}

func (gc GatewayConfigAttributes) InternalWithRef(ref terra.Reference) GatewayConfigAttributes {
	return GatewayConfigAttributes{ref: ref}
}

func (gc GatewayConfigAttributes) InternalTokens() hclwrite.Tokens {
	return gc.ref.InternalTokens()
}

func (gc GatewayConfigAttributes) GatewayAuthMethod() terra.StringValue {
	return terra.ReferenceString(gc.ref.Append("gateway_auth_method"))
}

func (gc GatewayConfigAttributes) GatewayType() terra.StringValue {
	return terra.ReferenceString(gc.ref.Append("gateway_type"))
}

func (gc GatewayConfigAttributes) LastAccessedGatewayId() terra.StringValue {
	return terra.ReferenceString(gc.ref.Append("last_accessed_gateway_id"))
}

func (gc GatewayConfigAttributes) LastAccessedGatewayTime() terra.StringValue {
	return terra.ReferenceString(gc.ref.Append("last_accessed_gateway_time"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type ConfigState struct {
	BinaryData      string `json:"binary_data"`
	CloudUpdateTime string `json:"cloud_update_time"`
	DeviceAckTime   string `json:"device_ack_time"`
	Version         string `json:"version"`
}

type LastErrorStatusState struct {
	Details []map[string]string `json:"details"`
	Message string              `json:"message"`
	Number  float64             `json:"number"`
}

type StateState struct {
	BinaryData string `json:"binary_data"`
	UpdateTime string `json:"update_time"`
}

type CredentialsState struct {
	ExpirationTime string           `json:"expiration_time"`
	PublicKey      []PublicKeyState `json:"public_key"`
}

type PublicKeyState struct {
	Format string `json:"format"`
	Key    string `json:"key"`
}

type GatewayConfigState struct {
	GatewayAuthMethod       string `json:"gateway_auth_method"`
	GatewayType             string `json:"gateway_type"`
	LastAccessedGatewayId   string `json:"last_accessed_gateway_id"`
	LastAccessedGatewayTime string `json:"last_accessed_gateway_time"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
