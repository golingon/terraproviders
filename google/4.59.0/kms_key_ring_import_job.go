// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	kmskeyringimportjob "github.com/golingon/terraproviders/google/4.59.0/kmskeyringimportjob"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKmsKeyRingImportJob(name string, args KmsKeyRingImportJobArgs) *KmsKeyRingImportJob {
	return &KmsKeyRingImportJob{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KmsKeyRingImportJob)(nil)

type KmsKeyRingImportJob struct {
	Name  string
	Args  KmsKeyRingImportJobArgs
	state *kmsKeyRingImportJobState
}

func (kkrij *KmsKeyRingImportJob) Type() string {
	return "google_kms_key_ring_import_job"
}

func (kkrij *KmsKeyRingImportJob) LocalName() string {
	return kkrij.Name
}

func (kkrij *KmsKeyRingImportJob) Configuration() interface{} {
	return kkrij.Args
}

func (kkrij *KmsKeyRingImportJob) Attributes() kmsKeyRingImportJobAttributes {
	return kmsKeyRingImportJobAttributes{ref: terra.ReferenceResource(kkrij)}
}

func (kkrij *KmsKeyRingImportJob) ImportState(av io.Reader) error {
	kkrij.state = &kmsKeyRingImportJobState{}
	if err := json.NewDecoder(av).Decode(kkrij.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kkrij.Type(), kkrij.LocalName(), err)
	}
	return nil
}

func (kkrij *KmsKeyRingImportJob) State() (*kmsKeyRingImportJobState, bool) {
	return kkrij.state, kkrij.state != nil
}

func (kkrij *KmsKeyRingImportJob) StateMust() *kmsKeyRingImportJobState {
	if kkrij.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kkrij.Type(), kkrij.LocalName()))
	}
	return kkrij.state
}

func (kkrij *KmsKeyRingImportJob) DependOn() terra.Reference {
	return terra.ReferenceResource(kkrij)
}

type KmsKeyRingImportJobArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImportJobId: string, required
	ImportJobId terra.StringValue `hcl:"import_job_id,attr" validate:"required"`
	// ImportMethod: string, required
	ImportMethod terra.StringValue `hcl:"import_method,attr" validate:"required"`
	// KeyRing: string, required
	KeyRing terra.StringValue `hcl:"key_ring,attr" validate:"required"`
	// ProtectionLevel: string, required
	ProtectionLevel terra.StringValue `hcl:"protection_level,attr" validate:"required"`
	// Attestation: min=0
	Attestation []kmskeyringimportjob.Attestation `hcl:"attestation,block" validate:"min=0"`
	// PublicKey: min=0
	PublicKey []kmskeyringimportjob.PublicKey `hcl:"public_key,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *kmskeyringimportjob.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that KmsKeyRingImportJob depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kmsKeyRingImportJobAttributes struct {
	ref terra.Reference
}

func (kkrij kmsKeyRingImportJobAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("expire_time"))
}

func (kkrij kmsKeyRingImportJobAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("id"))
}

func (kkrij kmsKeyRingImportJobAttributes) ImportJobId() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("import_job_id"))
}

func (kkrij kmsKeyRingImportJobAttributes) ImportMethod() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("import_method"))
}

func (kkrij kmsKeyRingImportJobAttributes) KeyRing() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("key_ring"))
}

func (kkrij kmsKeyRingImportJobAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("name"))
}

func (kkrij kmsKeyRingImportJobAttributes) ProtectionLevel() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("protection_level"))
}

func (kkrij kmsKeyRingImportJobAttributes) State() terra.StringValue {
	return terra.ReferenceString(kkrij.ref.Append("state"))
}

func (kkrij kmsKeyRingImportJobAttributes) Attestation() terra.ListValue[kmskeyringimportjob.AttestationAttributes] {
	return terra.ReferenceList[kmskeyringimportjob.AttestationAttributes](kkrij.ref.Append("attestation"))
}

func (kkrij kmsKeyRingImportJobAttributes) PublicKey() terra.ListValue[kmskeyringimportjob.PublicKeyAttributes] {
	return terra.ReferenceList[kmskeyringimportjob.PublicKeyAttributes](kkrij.ref.Append("public_key"))
}

func (kkrij kmsKeyRingImportJobAttributes) Timeouts() kmskeyringimportjob.TimeoutsAttributes {
	return terra.ReferenceSingle[kmskeyringimportjob.TimeoutsAttributes](kkrij.ref.Append("timeouts"))
}

type kmsKeyRingImportJobState struct {
	ExpireTime      string                                 `json:"expire_time"`
	Id              string                                 `json:"id"`
	ImportJobId     string                                 `json:"import_job_id"`
	ImportMethod    string                                 `json:"import_method"`
	KeyRing         string                                 `json:"key_ring"`
	Name            string                                 `json:"name"`
	ProtectionLevel string                                 `json:"protection_level"`
	State           string                                 `json:"state"`
	Attestation     []kmskeyringimportjob.AttestationState `json:"attestation"`
	PublicKey       []kmskeyringimportjob.PublicKeyState   `json:"public_key"`
	Timeouts        *kmskeyringimportjob.TimeoutsState     `json:"timeouts"`
}
