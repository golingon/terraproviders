// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	dialogflowcxenvironment "github.com/golingon/terraproviders/google/4.59.0/dialogflowcxenvironment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDialogflowCxEnvironment(name string, args DialogflowCxEnvironmentArgs) *DialogflowCxEnvironment {
	return &DialogflowCxEnvironment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DialogflowCxEnvironment)(nil)

type DialogflowCxEnvironment struct {
	Name  string
	Args  DialogflowCxEnvironmentArgs
	state *dialogflowCxEnvironmentState
}

func (dce *DialogflowCxEnvironment) Type() string {
	return "google_dialogflow_cx_environment"
}

func (dce *DialogflowCxEnvironment) LocalName() string {
	return dce.Name
}

func (dce *DialogflowCxEnvironment) Configuration() interface{} {
	return dce.Args
}

func (dce *DialogflowCxEnvironment) Attributes() dialogflowCxEnvironmentAttributes {
	return dialogflowCxEnvironmentAttributes{ref: terra.ReferenceResource(dce)}
}

func (dce *DialogflowCxEnvironment) ImportState(av io.Reader) error {
	dce.state = &dialogflowCxEnvironmentState{}
	if err := json.NewDecoder(av).Decode(dce.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dce.Type(), dce.LocalName(), err)
	}
	return nil
}

func (dce *DialogflowCxEnvironment) State() (*dialogflowCxEnvironmentState, bool) {
	return dce.state, dce.state != nil
}

func (dce *DialogflowCxEnvironment) StateMust() *dialogflowCxEnvironmentState {
	if dce.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dce.Type(), dce.LocalName()))
	}
	return dce.state
}

func (dce *DialogflowCxEnvironment) DependOn() terra.Reference {
	return terra.ReferenceResource(dce)
}

type DialogflowCxEnvironmentArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// Timeouts: optional
	Timeouts *dialogflowcxenvironment.Timeouts `hcl:"timeouts,block"`
	// VersionConfigs: min=1
	VersionConfigs []dialogflowcxenvironment.VersionConfigs `hcl:"version_configs,block" validate:"min=1"`
	// DependsOn contains resources that DialogflowCxEnvironment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dialogflowCxEnvironmentAttributes struct {
	ref terra.Reference
}

func (dce dialogflowCxEnvironmentAttributes) Description() terra.StringValue {
	return terra.ReferenceString(dce.ref.Append("description"))
}

func (dce dialogflowCxEnvironmentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(dce.ref.Append("display_name"))
}

func (dce dialogflowCxEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dce.ref.Append("id"))
}

func (dce dialogflowCxEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dce.ref.Append("name"))
}

func (dce dialogflowCxEnvironmentAttributes) Parent() terra.StringValue {
	return terra.ReferenceString(dce.ref.Append("parent"))
}

func (dce dialogflowCxEnvironmentAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceString(dce.ref.Append("update_time"))
}

func (dce dialogflowCxEnvironmentAttributes) Timeouts() dialogflowcxenvironment.TimeoutsAttributes {
	return terra.ReferenceSingle[dialogflowcxenvironment.TimeoutsAttributes](dce.ref.Append("timeouts"))
}

func (dce dialogflowCxEnvironmentAttributes) VersionConfigs() terra.ListValue[dialogflowcxenvironment.VersionConfigsAttributes] {
	return terra.ReferenceList[dialogflowcxenvironment.VersionConfigsAttributes](dce.ref.Append("version_configs"))
}

type dialogflowCxEnvironmentState struct {
	Description    string                                        `json:"description"`
	DisplayName    string                                        `json:"display_name"`
	Id             string                                        `json:"id"`
	Name           string                                        `json:"name"`
	Parent         string                                        `json:"parent"`
	UpdateTime     string                                        `json:"update_time"`
	Timeouts       *dialogflowcxenvironment.TimeoutsState        `json:"timeouts"`
	VersionConfigs []dialogflowcxenvironment.VersionConfigsState `json:"version_configs"`
}
