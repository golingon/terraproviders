// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomputebackendservice "github.com/golingon/terraproviders/google/4.59.0/datacomputebackendservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComputeBackendService(name string, args DataComputeBackendServiceArgs) *DataComputeBackendService {
	return &DataComputeBackendService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeBackendService)(nil)

type DataComputeBackendService struct {
	Name string
	Args DataComputeBackendServiceArgs
}

func (cbs *DataComputeBackendService) DataSource() string {
	return "google_compute_backend_service"
}

func (cbs *DataComputeBackendService) LocalName() string {
	return cbs.Name
}

func (cbs *DataComputeBackendService) Configuration() interface{} {
	return cbs.Args
}

func (cbs *DataComputeBackendService) Attributes() dataComputeBackendServiceAttributes {
	return dataComputeBackendServiceAttributes{ref: terra.ReferenceDataResource(cbs)}
}

type DataComputeBackendServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Backend: min=0
	Backend []datacomputebackendservice.Backend `hcl:"backend,block" validate:"min=0"`
	// CdnPolicy: min=0
	CdnPolicy []datacomputebackendservice.CdnPolicy `hcl:"cdn_policy,block" validate:"min=0"`
	// CircuitBreakers: min=0
	CircuitBreakers []datacomputebackendservice.CircuitBreakers `hcl:"circuit_breakers,block" validate:"min=0"`
	// ConsistentHash: min=0
	ConsistentHash []datacomputebackendservice.ConsistentHash `hcl:"consistent_hash,block" validate:"min=0"`
	// Iap: min=0
	Iap []datacomputebackendservice.Iap `hcl:"iap,block" validate:"min=0"`
	// LocalityLbPolicies: min=0
	LocalityLbPolicies []datacomputebackendservice.LocalityLbPolicies `hcl:"locality_lb_policies,block" validate:"min=0"`
	// LogConfig: min=0
	LogConfig []datacomputebackendservice.LogConfig `hcl:"log_config,block" validate:"min=0"`
	// OutlierDetection: min=0
	OutlierDetection []datacomputebackendservice.OutlierDetection `hcl:"outlier_detection,block" validate:"min=0"`
	// SecuritySettings: min=0
	SecuritySettings []datacomputebackendservice.SecuritySettings `hcl:"security_settings,block" validate:"min=0"`
}
type dataComputeBackendServiceAttributes struct {
	ref terra.Reference
}

func (cbs dataComputeBackendServiceAttributes) AffinityCookieTtlSec() terra.NumberValue {
	return terra.ReferenceNumber(cbs.ref.Append("affinity_cookie_ttl_sec"))
}

func (cbs dataComputeBackendServiceAttributes) CompressionMode() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("compression_mode"))
}

func (cbs dataComputeBackendServiceAttributes) ConnectionDrainingTimeoutSec() terra.NumberValue {
	return terra.ReferenceNumber(cbs.ref.Append("connection_draining_timeout_sec"))
}

func (cbs dataComputeBackendServiceAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("creation_timestamp"))
}

func (cbs dataComputeBackendServiceAttributes) CustomRequestHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cbs.ref.Append("custom_request_headers"))
}

func (cbs dataComputeBackendServiceAttributes) CustomResponseHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cbs.ref.Append("custom_response_headers"))
}

func (cbs dataComputeBackendServiceAttributes) Description() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("description"))
}

func (cbs dataComputeBackendServiceAttributes) EdgeSecurityPolicy() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("edge_security_policy"))
}

func (cbs dataComputeBackendServiceAttributes) EnableCdn() terra.BoolValue {
	return terra.ReferenceBool(cbs.ref.Append("enable_cdn"))
}

func (cbs dataComputeBackendServiceAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("fingerprint"))
}

func (cbs dataComputeBackendServiceAttributes) GeneratedId() terra.NumberValue {
	return terra.ReferenceNumber(cbs.ref.Append("generated_id"))
}

func (cbs dataComputeBackendServiceAttributes) HealthChecks() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cbs.ref.Append("health_checks"))
}

func (cbs dataComputeBackendServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("id"))
}

func (cbs dataComputeBackendServiceAttributes) LoadBalancingScheme() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("load_balancing_scheme"))
}

func (cbs dataComputeBackendServiceAttributes) LocalityLbPolicy() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("locality_lb_policy"))
}

func (cbs dataComputeBackendServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("name"))
}

func (cbs dataComputeBackendServiceAttributes) PortName() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("port_name"))
}

func (cbs dataComputeBackendServiceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("project"))
}

func (cbs dataComputeBackendServiceAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("protocol"))
}

func (cbs dataComputeBackendServiceAttributes) SecurityPolicy() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("security_policy"))
}

func (cbs dataComputeBackendServiceAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("self_link"))
}

func (cbs dataComputeBackendServiceAttributes) SessionAffinity() terra.StringValue {
	return terra.ReferenceString(cbs.ref.Append("session_affinity"))
}

func (cbs dataComputeBackendServiceAttributes) TimeoutSec() terra.NumberValue {
	return terra.ReferenceNumber(cbs.ref.Append("timeout_sec"))
}

func (cbs dataComputeBackendServiceAttributes) Backend() terra.SetValue[datacomputebackendservice.BackendAttributes] {
	return terra.ReferenceSet[datacomputebackendservice.BackendAttributes](cbs.ref.Append("backend"))
}

func (cbs dataComputeBackendServiceAttributes) CdnPolicy() terra.ListValue[datacomputebackendservice.CdnPolicyAttributes] {
	return terra.ReferenceList[datacomputebackendservice.CdnPolicyAttributes](cbs.ref.Append("cdn_policy"))
}

func (cbs dataComputeBackendServiceAttributes) CircuitBreakers() terra.ListValue[datacomputebackendservice.CircuitBreakersAttributes] {
	return terra.ReferenceList[datacomputebackendservice.CircuitBreakersAttributes](cbs.ref.Append("circuit_breakers"))
}

func (cbs dataComputeBackendServiceAttributes) ConsistentHash() terra.ListValue[datacomputebackendservice.ConsistentHashAttributes] {
	return terra.ReferenceList[datacomputebackendservice.ConsistentHashAttributes](cbs.ref.Append("consistent_hash"))
}

func (cbs dataComputeBackendServiceAttributes) Iap() terra.ListValue[datacomputebackendservice.IapAttributes] {
	return terra.ReferenceList[datacomputebackendservice.IapAttributes](cbs.ref.Append("iap"))
}

func (cbs dataComputeBackendServiceAttributes) LocalityLbPolicies() terra.ListValue[datacomputebackendservice.LocalityLbPoliciesAttributes] {
	return terra.ReferenceList[datacomputebackendservice.LocalityLbPoliciesAttributes](cbs.ref.Append("locality_lb_policies"))
}

func (cbs dataComputeBackendServiceAttributes) LogConfig() terra.ListValue[datacomputebackendservice.LogConfigAttributes] {
	return terra.ReferenceList[datacomputebackendservice.LogConfigAttributes](cbs.ref.Append("log_config"))
}

func (cbs dataComputeBackendServiceAttributes) OutlierDetection() terra.ListValue[datacomputebackendservice.OutlierDetectionAttributes] {
	return terra.ReferenceList[datacomputebackendservice.OutlierDetectionAttributes](cbs.ref.Append("outlier_detection"))
}

func (cbs dataComputeBackendServiceAttributes) SecuritySettings() terra.ListValue[datacomputebackendservice.SecuritySettingsAttributes] {
	return terra.ReferenceList[datacomputebackendservice.SecuritySettingsAttributes](cbs.ref.Append("security_settings"))
}
