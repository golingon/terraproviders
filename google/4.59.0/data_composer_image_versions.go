// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomposerimageversions "github.com/golingon/terraproviders/google/4.59.0/datacomposerimageversions"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComposerImageVersions(name string, args DataComposerImageVersionsArgs) *DataComposerImageVersions {
	return &DataComposerImageVersions{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComposerImageVersions)(nil)

type DataComposerImageVersions struct {
	Name string
	Args DataComposerImageVersionsArgs
}

func (civ *DataComposerImageVersions) DataSource() string {
	return "google_composer_image_versions"
}

func (civ *DataComposerImageVersions) LocalName() string {
	return civ.Name
}

func (civ *DataComposerImageVersions) Configuration() interface{} {
	return civ.Args
}

func (civ *DataComposerImageVersions) Attributes() dataComposerImageVersionsAttributes {
	return dataComposerImageVersionsAttributes{ref: terra.ReferenceDataResource(civ)}
}

type DataComposerImageVersionsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// ImageVersions: min=0
	ImageVersions []datacomposerimageversions.ImageVersions `hcl:"image_versions,block" validate:"min=0"`
}
type dataComposerImageVersionsAttributes struct {
	ref terra.Reference
}

func (civ dataComposerImageVersionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(civ.ref.Append("id"))
}

func (civ dataComposerImageVersionsAttributes) Project() terra.StringValue {
	return terra.ReferenceString(civ.ref.Append("project"))
}

func (civ dataComposerImageVersionsAttributes) Region() terra.StringValue {
	return terra.ReferenceString(civ.ref.Append("region"))
}

func (civ dataComposerImageVersionsAttributes) ImageVersions() terra.ListValue[datacomposerimageversions.ImageVersionsAttributes] {
	return terra.ReferenceList[datacomposerimageversions.ImageVersionsAttributes](civ.ref.Append("image_versions"))
}
