// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datamonitoringistiocanonicalservice "github.com/golingon/terraproviders/google/4.59.0/datamonitoringistiocanonicalservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMonitoringIstioCanonicalService(name string, args DataMonitoringIstioCanonicalServiceArgs) *DataMonitoringIstioCanonicalService {
	return &DataMonitoringIstioCanonicalService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMonitoringIstioCanonicalService)(nil)

type DataMonitoringIstioCanonicalService struct {
	Name string
	Args DataMonitoringIstioCanonicalServiceArgs
}

func (mics *DataMonitoringIstioCanonicalService) DataSource() string {
	return "google_monitoring_istio_canonical_service"
}

func (mics *DataMonitoringIstioCanonicalService) LocalName() string {
	return mics.Name
}

func (mics *DataMonitoringIstioCanonicalService) Configuration() interface{} {
	return mics.Args
}

func (mics *DataMonitoringIstioCanonicalService) Attributes() dataMonitoringIstioCanonicalServiceAttributes {
	return dataMonitoringIstioCanonicalServiceAttributes{ref: terra.ReferenceDataResource(mics)}
}

type DataMonitoringIstioCanonicalServiceArgs struct {
	// CanonicalService: string, required
	CanonicalService terra.StringValue `hcl:"canonical_service,attr" validate:"required"`
	// CanonicalServiceNamespace: string, required
	CanonicalServiceNamespace terra.StringValue `hcl:"canonical_service_namespace,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MeshUid: string, required
	MeshUid terra.StringValue `hcl:"mesh_uid,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Telemetry: min=0
	Telemetry []datamonitoringistiocanonicalservice.Telemetry `hcl:"telemetry,block" validate:"min=0"`
}
type dataMonitoringIstioCanonicalServiceAttributes struct {
	ref terra.Reference
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) CanonicalService() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("canonical_service"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) CanonicalServiceNamespace() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("canonical_service_namespace"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("display_name"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("id"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) MeshUid() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("mesh_uid"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("name"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("project"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) ServiceId() terra.StringValue {
	return terra.ReferenceString(mics.ref.Append("service_id"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) UserLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mics.ref.Append("user_labels"))
}

func (mics dataMonitoringIstioCanonicalServiceAttributes) Telemetry() terra.ListValue[datamonitoringistiocanonicalservice.TelemetryAttributes] {
	return terra.ReferenceList[datamonitoringistiocanonicalservice.TelemetryAttributes](mics.ref.Append("telemetry"))
}
