// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomputehealthcheck "github.com/golingon/terraproviders/google/4.59.0/datacomputehealthcheck"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComputeHealthCheck(name string, args DataComputeHealthCheckArgs) *DataComputeHealthCheck {
	return &DataComputeHealthCheck{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeHealthCheck)(nil)

type DataComputeHealthCheck struct {
	Name string
	Args DataComputeHealthCheckArgs
}

func (chc *DataComputeHealthCheck) DataSource() string {
	return "google_compute_health_check"
}

func (chc *DataComputeHealthCheck) LocalName() string {
	return chc.Name
}

func (chc *DataComputeHealthCheck) Configuration() interface{} {
	return chc.Args
}

func (chc *DataComputeHealthCheck) Attributes() dataComputeHealthCheckAttributes {
	return dataComputeHealthCheckAttributes{ref: terra.ReferenceDataResource(chc)}
}

type DataComputeHealthCheckArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// GrpcHealthCheck: min=0
	GrpcHealthCheck []datacomputehealthcheck.GrpcHealthCheck `hcl:"grpc_health_check,block" validate:"min=0"`
	// Http2HealthCheck: min=0
	Http2HealthCheck []datacomputehealthcheck.Http2HealthCheck `hcl:"http2_health_check,block" validate:"min=0"`
	// HttpHealthCheck: min=0
	HttpHealthCheck []datacomputehealthcheck.HttpHealthCheck `hcl:"http_health_check,block" validate:"min=0"`
	// HttpsHealthCheck: min=0
	HttpsHealthCheck []datacomputehealthcheck.HttpsHealthCheck `hcl:"https_health_check,block" validate:"min=0"`
	// LogConfig: min=0
	LogConfig []datacomputehealthcheck.LogConfig `hcl:"log_config,block" validate:"min=0"`
	// SslHealthCheck: min=0
	SslHealthCheck []datacomputehealthcheck.SslHealthCheck `hcl:"ssl_health_check,block" validate:"min=0"`
	// TcpHealthCheck: min=0
	TcpHealthCheck []datacomputehealthcheck.TcpHealthCheck `hcl:"tcp_health_check,block" validate:"min=0"`
}
type dataComputeHealthCheckAttributes struct {
	ref terra.Reference
}

func (chc dataComputeHealthCheckAttributes) CheckIntervalSec() terra.NumberValue {
	return terra.ReferenceNumber(chc.ref.Append("check_interval_sec"))
}

func (chc dataComputeHealthCheckAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("creation_timestamp"))
}

func (chc dataComputeHealthCheckAttributes) Description() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("description"))
}

func (chc dataComputeHealthCheckAttributes) HealthyThreshold() terra.NumberValue {
	return terra.ReferenceNumber(chc.ref.Append("healthy_threshold"))
}

func (chc dataComputeHealthCheckAttributes) Id() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("id"))
}

func (chc dataComputeHealthCheckAttributes) Name() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("name"))
}

func (chc dataComputeHealthCheckAttributes) Project() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("project"))
}

func (chc dataComputeHealthCheckAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("self_link"))
}

func (chc dataComputeHealthCheckAttributes) TimeoutSec() terra.NumberValue {
	return terra.ReferenceNumber(chc.ref.Append("timeout_sec"))
}

func (chc dataComputeHealthCheckAttributes) Type() terra.StringValue {
	return terra.ReferenceString(chc.ref.Append("type"))
}

func (chc dataComputeHealthCheckAttributes) UnhealthyThreshold() terra.NumberValue {
	return terra.ReferenceNumber(chc.ref.Append("unhealthy_threshold"))
}

func (chc dataComputeHealthCheckAttributes) GrpcHealthCheck() terra.ListValue[datacomputehealthcheck.GrpcHealthCheckAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.GrpcHealthCheckAttributes](chc.ref.Append("grpc_health_check"))
}

func (chc dataComputeHealthCheckAttributes) Http2HealthCheck() terra.ListValue[datacomputehealthcheck.Http2HealthCheckAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.Http2HealthCheckAttributes](chc.ref.Append("http2_health_check"))
}

func (chc dataComputeHealthCheckAttributes) HttpHealthCheck() terra.ListValue[datacomputehealthcheck.HttpHealthCheckAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.HttpHealthCheckAttributes](chc.ref.Append("http_health_check"))
}

func (chc dataComputeHealthCheckAttributes) HttpsHealthCheck() terra.ListValue[datacomputehealthcheck.HttpsHealthCheckAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.HttpsHealthCheckAttributes](chc.ref.Append("https_health_check"))
}

func (chc dataComputeHealthCheckAttributes) LogConfig() terra.ListValue[datacomputehealthcheck.LogConfigAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.LogConfigAttributes](chc.ref.Append("log_config"))
}

func (chc dataComputeHealthCheckAttributes) SslHealthCheck() terra.ListValue[datacomputehealthcheck.SslHealthCheckAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.SslHealthCheckAttributes](chc.ref.Append("ssl_health_check"))
}

func (chc dataComputeHealthCheckAttributes) TcpHealthCheck() terra.ListValue[datacomputehealthcheck.TcpHealthCheckAttributes] {
	return terra.ReferenceList[datacomputehealthcheck.TcpHealthCheckAttributes](chc.ref.Append("tcp_health_check"))
}
