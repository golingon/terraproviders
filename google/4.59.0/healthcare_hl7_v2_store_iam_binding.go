// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	healthcarehl7v2storeiambinding "github.com/golingon/terraproviders/google/4.59.0/healthcarehl7v2storeiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewHealthcareHl7V2StoreIamBinding(name string, args HealthcareHl7V2StoreIamBindingArgs) *HealthcareHl7V2StoreIamBinding {
	return &HealthcareHl7V2StoreIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*HealthcareHl7V2StoreIamBinding)(nil)

type HealthcareHl7V2StoreIamBinding struct {
	Name  string
	Args  HealthcareHl7V2StoreIamBindingArgs
	state *healthcareHl7V2StoreIamBindingState
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) Type() string {
	return "google_healthcare_hl7_v2_store_iam_binding"
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) LocalName() string {
	return hhvsib.Name
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) Configuration() interface{} {
	return hhvsib.Args
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) Attributes() healthcareHl7V2StoreIamBindingAttributes {
	return healthcareHl7V2StoreIamBindingAttributes{ref: terra.ReferenceResource(hhvsib)}
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) ImportState(av io.Reader) error {
	hhvsib.state = &healthcareHl7V2StoreIamBindingState{}
	if err := json.NewDecoder(av).Decode(hhvsib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", hhvsib.Type(), hhvsib.LocalName(), err)
	}
	return nil
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) State() (*healthcareHl7V2StoreIamBindingState, bool) {
	return hhvsib.state, hhvsib.state != nil
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) StateMust() *healthcareHl7V2StoreIamBindingState {
	if hhvsib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", hhvsib.Type(), hhvsib.LocalName()))
	}
	return hhvsib.state
}

func (hhvsib *HealthcareHl7V2StoreIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(hhvsib)
}

type HealthcareHl7V2StoreIamBindingArgs struct {
	// Hl7V2StoreId: string, required
	Hl7V2StoreId terra.StringValue `hcl:"hl7_v2_store_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *healthcarehl7v2storeiambinding.Condition `hcl:"condition,block"`
	// DependsOn contains resources that HealthcareHl7V2StoreIamBinding depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type healthcareHl7V2StoreIamBindingAttributes struct {
	ref terra.Reference
}

func (hhvsib healthcareHl7V2StoreIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(hhvsib.ref.Append("etag"))
}

func (hhvsib healthcareHl7V2StoreIamBindingAttributes) Hl7V2StoreId() terra.StringValue {
	return terra.ReferenceString(hhvsib.ref.Append("hl7_v2_store_id"))
}

func (hhvsib healthcareHl7V2StoreIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceString(hhvsib.ref.Append("id"))
}

func (hhvsib healthcareHl7V2StoreIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](hhvsib.ref.Append("members"))
}

func (hhvsib healthcareHl7V2StoreIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceString(hhvsib.ref.Append("role"))
}

func (hhvsib healthcareHl7V2StoreIamBindingAttributes) Condition() terra.ListValue[healthcarehl7v2storeiambinding.ConditionAttributes] {
	return terra.ReferenceList[healthcarehl7v2storeiambinding.ConditionAttributes](hhvsib.ref.Append("condition"))
}

type healthcareHl7V2StoreIamBindingState struct {
	Etag         string                                          `json:"etag"`
	Hl7V2StoreId string                                          `json:"hl7_v2_store_id"`
	Id           string                                          `json:"id"`
	Members      []string                                        `json:"members"`
	Role         string                                          `json:"role"`
	Condition    []healthcarehl7v2storeiambinding.ConditionState `json:"condition"`
}
