// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	iapwebbackendserviceiambinding "github.com/golingon/terraproviders/google/4.59.0/iapwebbackendserviceiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIapWebBackendServiceIamBinding(name string, args IapWebBackendServiceIamBindingArgs) *IapWebBackendServiceIamBinding {
	return &IapWebBackendServiceIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebBackendServiceIamBinding)(nil)

type IapWebBackendServiceIamBinding struct {
	Name  string
	Args  IapWebBackendServiceIamBindingArgs
	state *iapWebBackendServiceIamBindingState
}

func (iwbsib *IapWebBackendServiceIamBinding) Type() string {
	return "google_iap_web_backend_service_iam_binding"
}

func (iwbsib *IapWebBackendServiceIamBinding) LocalName() string {
	return iwbsib.Name
}

func (iwbsib *IapWebBackendServiceIamBinding) Configuration() interface{} {
	return iwbsib.Args
}

func (iwbsib *IapWebBackendServiceIamBinding) Attributes() iapWebBackendServiceIamBindingAttributes {
	return iapWebBackendServiceIamBindingAttributes{ref: terra.ReferenceResource(iwbsib)}
}

func (iwbsib *IapWebBackendServiceIamBinding) ImportState(av io.Reader) error {
	iwbsib.state = &iapWebBackendServiceIamBindingState{}
	if err := json.NewDecoder(av).Decode(iwbsib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwbsib.Type(), iwbsib.LocalName(), err)
	}
	return nil
}

func (iwbsib *IapWebBackendServiceIamBinding) State() (*iapWebBackendServiceIamBindingState, bool) {
	return iwbsib.state, iwbsib.state != nil
}

func (iwbsib *IapWebBackendServiceIamBinding) StateMust() *iapWebBackendServiceIamBindingState {
	if iwbsib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwbsib.Type(), iwbsib.LocalName()))
	}
	return iwbsib.state
}

func (iwbsib *IapWebBackendServiceIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(iwbsib)
}

type IapWebBackendServiceIamBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// WebBackendService: string, required
	WebBackendService terra.StringValue `hcl:"web_backend_service,attr" validate:"required"`
	// Condition: optional
	Condition *iapwebbackendserviceiambinding.Condition `hcl:"condition,block"`
	// DependsOn contains resources that IapWebBackendServiceIamBinding depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iapWebBackendServiceIamBindingAttributes struct {
	ref terra.Reference
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(iwbsib.ref.Append("etag"))
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iwbsib.ref.Append("id"))
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iwbsib.ref.Append("members"))
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceString(iwbsib.ref.Append("project"))
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceString(iwbsib.ref.Append("role"))
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) WebBackendService() terra.StringValue {
	return terra.ReferenceString(iwbsib.ref.Append("web_backend_service"))
}

func (iwbsib iapWebBackendServiceIamBindingAttributes) Condition() terra.ListValue[iapwebbackendserviceiambinding.ConditionAttributes] {
	return terra.ReferenceList[iapwebbackendserviceiambinding.ConditionAttributes](iwbsib.ref.Append("condition"))
}

type iapWebBackendServiceIamBindingState struct {
	Etag              string                                          `json:"etag"`
	Id                string                                          `json:"id"`
	Members           []string                                        `json:"members"`
	Project           string                                          `json:"project"`
	Role              string                                          `json:"role"`
	WebBackendService string                                          `json:"web_backend_service"`
	Condition         []iapwebbackendserviceiambinding.ConditionState `json:"condition"`
}
