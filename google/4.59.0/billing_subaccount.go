// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBillingSubaccount(name string, args BillingSubaccountArgs) *BillingSubaccount {
	return &BillingSubaccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BillingSubaccount)(nil)

type BillingSubaccount struct {
	Name  string
	Args  BillingSubaccountArgs
	state *billingSubaccountState
}

func (bs *BillingSubaccount) Type() string {
	return "google_billing_subaccount"
}

func (bs *BillingSubaccount) LocalName() string {
	return bs.Name
}

func (bs *BillingSubaccount) Configuration() interface{} {
	return bs.Args
}

func (bs *BillingSubaccount) Attributes() billingSubaccountAttributes {
	return billingSubaccountAttributes{ref: terra.ReferenceResource(bs)}
}

func (bs *BillingSubaccount) ImportState(av io.Reader) error {
	bs.state = &billingSubaccountState{}
	if err := json.NewDecoder(av).Decode(bs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bs.Type(), bs.LocalName(), err)
	}
	return nil
}

func (bs *BillingSubaccount) State() (*billingSubaccountState, bool) {
	return bs.state, bs.state != nil
}

func (bs *BillingSubaccount) StateMust() *billingSubaccountState {
	if bs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bs.Type(), bs.LocalName()))
	}
	return bs.state
}

func (bs *BillingSubaccount) DependOn() terra.Reference {
	return terra.ReferenceResource(bs)
}

type BillingSubaccountArgs struct {
	// DeletionPolicy: string, optional
	DeletionPolicy terra.StringValue `hcl:"deletion_policy,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MasterBillingAccount: string, required
	MasterBillingAccount terra.StringValue `hcl:"master_billing_account,attr" validate:"required"`
	// DependsOn contains resources that BillingSubaccount depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type billingSubaccountAttributes struct {
	ref terra.Reference
}

func (bs billingSubaccountAttributes) BillingAccountId() terra.StringValue {
	return terra.ReferenceString(bs.ref.Append("billing_account_id"))
}

func (bs billingSubaccountAttributes) DeletionPolicy() terra.StringValue {
	return terra.ReferenceString(bs.ref.Append("deletion_policy"))
}

func (bs billingSubaccountAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(bs.ref.Append("display_name"))
}

func (bs billingSubaccountAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bs.ref.Append("id"))
}

func (bs billingSubaccountAttributes) MasterBillingAccount() terra.StringValue {
	return terra.ReferenceString(bs.ref.Append("master_billing_account"))
}

func (bs billingSubaccountAttributes) Name() terra.StringValue {
	return terra.ReferenceString(bs.ref.Append("name"))
}

func (bs billingSubaccountAttributes) Open() terra.BoolValue {
	return terra.ReferenceBool(bs.ref.Append("open"))
}

type billingSubaccountState struct {
	BillingAccountId     string `json:"billing_account_id"`
	DeletionPolicy       string `json:"deletion_policy"`
	DisplayName          string `json:"display_name"`
	Id                   string `json:"id"`
	MasterBillingAccount string `json:"master_billing_account"`
	Name                 string `json:"name"`
	Open                 bool   `json:"open"`
}
