// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datagameservicesgameserverdeploymentrollout

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type GameServerConfigOverrides struct {
	// RealmsSelector: min=0
	RealmsSelector []RealmsSelector `hcl:"realms_selector,block" validate:"min=0"`
}

type RealmsSelector struct{}

type GameServerConfigOverridesAttributes struct {
	ref terra.Reference
}

func (gsco GameServerConfigOverridesAttributes) InternalRef() terra.Reference {
	return gsco.ref
}

func (gsco GameServerConfigOverridesAttributes) InternalWithRef(ref terra.Reference) GameServerConfigOverridesAttributes {
	return GameServerConfigOverridesAttributes{ref: ref}
}

func (gsco GameServerConfigOverridesAttributes) InternalTokens() hclwrite.Tokens {
	return gsco.ref.InternalTokens()
}

func (gsco GameServerConfigOverridesAttributes) ConfigVersion() terra.StringValue {
	return terra.ReferenceString(gsco.ref.Append("config_version"))
}

func (gsco GameServerConfigOverridesAttributes) RealmsSelector() terra.ListValue[RealmsSelectorAttributes] {
	return terra.ReferenceList[RealmsSelectorAttributes](gsco.ref.Append("realms_selector"))
}

type RealmsSelectorAttributes struct {
	ref terra.Reference
}

func (rs RealmsSelectorAttributes) InternalRef() terra.Reference {
	return rs.ref
}

func (rs RealmsSelectorAttributes) InternalWithRef(ref terra.Reference) RealmsSelectorAttributes {
	return RealmsSelectorAttributes{ref: ref}
}

func (rs RealmsSelectorAttributes) InternalTokens() hclwrite.Tokens {
	return rs.ref.InternalTokens()
}

func (rs RealmsSelectorAttributes) Realms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rs.ref.Append("realms"))
}

type GameServerConfigOverridesState struct {
	ConfigVersion  string                `json:"config_version"`
	RealmsSelector []RealmsSelectorState `json:"realms_selector"`
}

type RealmsSelectorState struct {
	Realms []string `json:"realms"`
}
