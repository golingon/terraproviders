// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewTagsTagKeyIamPolicy(name string, args TagsTagKeyIamPolicyArgs) *TagsTagKeyIamPolicy {
	return &TagsTagKeyIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*TagsTagKeyIamPolicy)(nil)

type TagsTagKeyIamPolicy struct {
	Name  string
	Args  TagsTagKeyIamPolicyArgs
	state *tagsTagKeyIamPolicyState
}

func (ttkip *TagsTagKeyIamPolicy) Type() string {
	return "google_tags_tag_key_iam_policy"
}

func (ttkip *TagsTagKeyIamPolicy) LocalName() string {
	return ttkip.Name
}

func (ttkip *TagsTagKeyIamPolicy) Configuration() interface{} {
	return ttkip.Args
}

func (ttkip *TagsTagKeyIamPolicy) Attributes() tagsTagKeyIamPolicyAttributes {
	return tagsTagKeyIamPolicyAttributes{ref: terra.ReferenceResource(ttkip)}
}

func (ttkip *TagsTagKeyIamPolicy) ImportState(av io.Reader) error {
	ttkip.state = &tagsTagKeyIamPolicyState{}
	if err := json.NewDecoder(av).Decode(ttkip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ttkip.Type(), ttkip.LocalName(), err)
	}
	return nil
}

func (ttkip *TagsTagKeyIamPolicy) State() (*tagsTagKeyIamPolicyState, bool) {
	return ttkip.state, ttkip.state != nil
}

func (ttkip *TagsTagKeyIamPolicy) StateMust() *tagsTagKeyIamPolicyState {
	if ttkip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ttkip.Type(), ttkip.LocalName()))
	}
	return ttkip.state
}

func (ttkip *TagsTagKeyIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(ttkip)
}

type TagsTagKeyIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// TagKey: string, required
	TagKey terra.StringValue `hcl:"tag_key,attr" validate:"required"`
	// DependsOn contains resources that TagsTagKeyIamPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type tagsTagKeyIamPolicyAttributes struct {
	ref terra.Reference
}

func (ttkip tagsTagKeyIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(ttkip.ref.Append("etag"))
}

func (ttkip tagsTagKeyIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ttkip.ref.Append("id"))
}

func (ttkip tagsTagKeyIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceString(ttkip.ref.Append("policy_data"))
}

func (ttkip tagsTagKeyIamPolicyAttributes) TagKey() terra.StringValue {
	return terra.ReferenceString(ttkip.ref.Append("tag_key"))
}

type tagsTagKeyIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
	TagKey     string `json:"tag_key"`
}
