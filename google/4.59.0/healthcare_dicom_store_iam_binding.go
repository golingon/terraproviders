// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	healthcaredicomstoreiambinding "github.com/golingon/terraproviders/google/4.59.0/healthcaredicomstoreiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewHealthcareDicomStoreIamBinding(name string, args HealthcareDicomStoreIamBindingArgs) *HealthcareDicomStoreIamBinding {
	return &HealthcareDicomStoreIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*HealthcareDicomStoreIamBinding)(nil)

type HealthcareDicomStoreIamBinding struct {
	Name  string
	Args  HealthcareDicomStoreIamBindingArgs
	state *healthcareDicomStoreIamBindingState
}

func (hdsib *HealthcareDicomStoreIamBinding) Type() string {
	return "google_healthcare_dicom_store_iam_binding"
}

func (hdsib *HealthcareDicomStoreIamBinding) LocalName() string {
	return hdsib.Name
}

func (hdsib *HealthcareDicomStoreIamBinding) Configuration() interface{} {
	return hdsib.Args
}

func (hdsib *HealthcareDicomStoreIamBinding) Attributes() healthcareDicomStoreIamBindingAttributes {
	return healthcareDicomStoreIamBindingAttributes{ref: terra.ReferenceResource(hdsib)}
}

func (hdsib *HealthcareDicomStoreIamBinding) ImportState(av io.Reader) error {
	hdsib.state = &healthcareDicomStoreIamBindingState{}
	if err := json.NewDecoder(av).Decode(hdsib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", hdsib.Type(), hdsib.LocalName(), err)
	}
	return nil
}

func (hdsib *HealthcareDicomStoreIamBinding) State() (*healthcareDicomStoreIamBindingState, bool) {
	return hdsib.state, hdsib.state != nil
}

func (hdsib *HealthcareDicomStoreIamBinding) StateMust() *healthcareDicomStoreIamBindingState {
	if hdsib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", hdsib.Type(), hdsib.LocalName()))
	}
	return hdsib.state
}

func (hdsib *HealthcareDicomStoreIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(hdsib)
}

type HealthcareDicomStoreIamBindingArgs struct {
	// DicomStoreId: string, required
	DicomStoreId terra.StringValue `hcl:"dicom_store_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *healthcaredicomstoreiambinding.Condition `hcl:"condition,block"`
	// DependsOn contains resources that HealthcareDicomStoreIamBinding depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type healthcareDicomStoreIamBindingAttributes struct {
	ref terra.Reference
}

func (hdsib healthcareDicomStoreIamBindingAttributes) DicomStoreId() terra.StringValue {
	return terra.ReferenceString(hdsib.ref.Append("dicom_store_id"))
}

func (hdsib healthcareDicomStoreIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(hdsib.ref.Append("etag"))
}

func (hdsib healthcareDicomStoreIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceString(hdsib.ref.Append("id"))
}

func (hdsib healthcareDicomStoreIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](hdsib.ref.Append("members"))
}

func (hdsib healthcareDicomStoreIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceString(hdsib.ref.Append("role"))
}

func (hdsib healthcareDicomStoreIamBindingAttributes) Condition() terra.ListValue[healthcaredicomstoreiambinding.ConditionAttributes] {
	return terra.ReferenceList[healthcaredicomstoreiambinding.ConditionAttributes](hdsib.ref.Append("condition"))
}

type healthcareDicomStoreIamBindingState struct {
	DicomStoreId string                                          `json:"dicom_store_id"`
	Etag         string                                          `json:"etag"`
	Id           string                                          `json:"id"`
	Members      []string                                        `json:"members"`
	Role         string                                          `json:"role"`
	Condition    []healthcaredicomstoreiambinding.ConditionState `json:"condition"`
}
