// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	bigqueryanalyticshubdataexchangeiammember "github.com/golingon/terraproviders/google/4.59.0/bigqueryanalyticshubdataexchangeiammember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBigqueryAnalyticsHubDataExchangeIamMember(name string, args BigqueryAnalyticsHubDataExchangeIamMemberArgs) *BigqueryAnalyticsHubDataExchangeIamMember {
	return &BigqueryAnalyticsHubDataExchangeIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BigqueryAnalyticsHubDataExchangeIamMember)(nil)

type BigqueryAnalyticsHubDataExchangeIamMember struct {
	Name  string
	Args  BigqueryAnalyticsHubDataExchangeIamMemberArgs
	state *bigqueryAnalyticsHubDataExchangeIamMemberState
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) Type() string {
	return "google_bigquery_analytics_hub_data_exchange_iam_member"
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) LocalName() string {
	return bahdeim.Name
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) Configuration() interface{} {
	return bahdeim.Args
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) Attributes() bigqueryAnalyticsHubDataExchangeIamMemberAttributes {
	return bigqueryAnalyticsHubDataExchangeIamMemberAttributes{ref: terra.ReferenceResource(bahdeim)}
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) ImportState(av io.Reader) error {
	bahdeim.state = &bigqueryAnalyticsHubDataExchangeIamMemberState{}
	if err := json.NewDecoder(av).Decode(bahdeim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bahdeim.Type(), bahdeim.LocalName(), err)
	}
	return nil
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) State() (*bigqueryAnalyticsHubDataExchangeIamMemberState, bool) {
	return bahdeim.state, bahdeim.state != nil
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) StateMust() *bigqueryAnalyticsHubDataExchangeIamMemberState {
	if bahdeim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bahdeim.Type(), bahdeim.LocalName()))
	}
	return bahdeim.state
}

func (bahdeim *BigqueryAnalyticsHubDataExchangeIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(bahdeim)
}

type BigqueryAnalyticsHubDataExchangeIamMemberArgs struct {
	// DataExchangeId: string, required
	DataExchangeId terra.StringValue `hcl:"data_exchange_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *bigqueryanalyticshubdataexchangeiammember.Condition `hcl:"condition,block"`
	// DependsOn contains resources that BigqueryAnalyticsHubDataExchangeIamMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type bigqueryAnalyticsHubDataExchangeIamMemberAttributes struct {
	ref terra.Reference
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) DataExchangeId() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("data_exchange_id"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("etag"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("id"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Location() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("location"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("member"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("project"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceString(bahdeim.ref.Append("role"))
}

func (bahdeim bigqueryAnalyticsHubDataExchangeIamMemberAttributes) Condition() terra.ListValue[bigqueryanalyticshubdataexchangeiammember.ConditionAttributes] {
	return terra.ReferenceList[bigqueryanalyticshubdataexchangeiammember.ConditionAttributes](bahdeim.ref.Append("condition"))
}

type bigqueryAnalyticsHubDataExchangeIamMemberState struct {
	DataExchangeId string                                                     `json:"data_exchange_id"`
	Etag           string                                                     `json:"etag"`
	Id             string                                                     `json:"id"`
	Location       string                                                     `json:"location"`
	Member         string                                                     `json:"member"`
	Project        string                                                     `json:"project"`
	Role           string                                                     `json:"role"`
	Condition      []bigqueryanalyticshubdataexchangeiammember.ConditionState `json:"condition"`
}
