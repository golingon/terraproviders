// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	bigqueryanalyticshubdataexchangeiambinding "github.com/golingon/terraproviders/google/4.59.0/bigqueryanalyticshubdataexchangeiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBigqueryAnalyticsHubDataExchangeIamBinding(name string, args BigqueryAnalyticsHubDataExchangeIamBindingArgs) *BigqueryAnalyticsHubDataExchangeIamBinding {
	return &BigqueryAnalyticsHubDataExchangeIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BigqueryAnalyticsHubDataExchangeIamBinding)(nil)

type BigqueryAnalyticsHubDataExchangeIamBinding struct {
	Name  string
	Args  BigqueryAnalyticsHubDataExchangeIamBindingArgs
	state *bigqueryAnalyticsHubDataExchangeIamBindingState
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) Type() string {
	return "google_bigquery_analytics_hub_data_exchange_iam_binding"
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) LocalName() string {
	return bahdeib.Name
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) Configuration() interface{} {
	return bahdeib.Args
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) Attributes() bigqueryAnalyticsHubDataExchangeIamBindingAttributes {
	return bigqueryAnalyticsHubDataExchangeIamBindingAttributes{ref: terra.ReferenceResource(bahdeib)}
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) ImportState(av io.Reader) error {
	bahdeib.state = &bigqueryAnalyticsHubDataExchangeIamBindingState{}
	if err := json.NewDecoder(av).Decode(bahdeib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bahdeib.Type(), bahdeib.LocalName(), err)
	}
	return nil
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) State() (*bigqueryAnalyticsHubDataExchangeIamBindingState, bool) {
	return bahdeib.state, bahdeib.state != nil
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) StateMust() *bigqueryAnalyticsHubDataExchangeIamBindingState {
	if bahdeib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bahdeib.Type(), bahdeib.LocalName()))
	}
	return bahdeib.state
}

func (bahdeib *BigqueryAnalyticsHubDataExchangeIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(bahdeib)
}

type BigqueryAnalyticsHubDataExchangeIamBindingArgs struct {
	// DataExchangeId: string, required
	DataExchangeId terra.StringValue `hcl:"data_exchange_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *bigqueryanalyticshubdataexchangeiambinding.Condition `hcl:"condition,block"`
	// DependsOn contains resources that BigqueryAnalyticsHubDataExchangeIamBinding depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type bigqueryAnalyticsHubDataExchangeIamBindingAttributes struct {
	ref terra.Reference
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) DataExchangeId() terra.StringValue {
	return terra.ReferenceString(bahdeib.ref.Append("data_exchange_id"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(bahdeib.ref.Append("etag"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bahdeib.ref.Append("id"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Location() terra.StringValue {
	return terra.ReferenceString(bahdeib.ref.Append("location"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](bahdeib.ref.Append("members"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceString(bahdeib.ref.Append("project"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceString(bahdeib.ref.Append("role"))
}

func (bahdeib bigqueryAnalyticsHubDataExchangeIamBindingAttributes) Condition() terra.ListValue[bigqueryanalyticshubdataexchangeiambinding.ConditionAttributes] {
	return terra.ReferenceList[bigqueryanalyticshubdataexchangeiambinding.ConditionAttributes](bahdeib.ref.Append("condition"))
}

type bigqueryAnalyticsHubDataExchangeIamBindingState struct {
	DataExchangeId string                                                      `json:"data_exchange_id"`
	Etag           string                                                      `json:"etag"`
	Id             string                                                      `json:"id"`
	Location       string                                                      `json:"location"`
	Members        []string                                                    `json:"members"`
	Project        string                                                      `json:"project"`
	Role           string                                                      `json:"role"`
	Condition      []bigqueryanalyticshubdataexchangeiambinding.ConditionState `json:"condition"`
}
