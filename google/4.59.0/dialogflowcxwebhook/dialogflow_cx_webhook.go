// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dialogflowcxwebhook

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type GenericWebService struct {
	// AllowedCaCerts: list of string, optional
	AllowedCaCerts terra.ListValue[terra.StringValue] `hcl:"allowed_ca_certs,attr"`
	// RequestHeaders: map of string, optional
	RequestHeaders terra.MapValue[terra.StringValue] `hcl:"request_headers,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
}

type ServiceDirectory struct {
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
	// ServiceDirectoryGenericWebService: required
	GenericWebService *ServiceDirectoryGenericWebService `hcl:"generic_web_service,block" validate:"required"`
}

type ServiceDirectoryGenericWebService struct {
	// AllowedCaCerts: list of string, optional
	AllowedCaCerts terra.ListValue[terra.StringValue] `hcl:"allowed_ca_certs,attr"`
	// RequestHeaders: map of string, optional
	RequestHeaders terra.MapValue[terra.StringValue] `hcl:"request_headers,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type GenericWebServiceAttributes struct {
	ref terra.Reference
}

func (gws GenericWebServiceAttributes) InternalRef() terra.Reference {
	return gws.ref
}

func (gws GenericWebServiceAttributes) InternalWithRef(ref terra.Reference) GenericWebServiceAttributes {
	return GenericWebServiceAttributes{ref: ref}
}

func (gws GenericWebServiceAttributes) InternalTokens() hclwrite.Tokens {
	return gws.ref.InternalTokens()
}

func (gws GenericWebServiceAttributes) AllowedCaCerts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](gws.ref.Append("allowed_ca_certs"))
}

func (gws GenericWebServiceAttributes) RequestHeaders() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](gws.ref.Append("request_headers"))
}

func (gws GenericWebServiceAttributes) Uri() terra.StringValue {
	return terra.ReferenceString(gws.ref.Append("uri"))
}

type ServiceDirectoryAttributes struct {
	ref terra.Reference
}

func (sd ServiceDirectoryAttributes) InternalRef() terra.Reference {
	return sd.ref
}

func (sd ServiceDirectoryAttributes) InternalWithRef(ref terra.Reference) ServiceDirectoryAttributes {
	return ServiceDirectoryAttributes{ref: ref}
}

func (sd ServiceDirectoryAttributes) InternalTokens() hclwrite.Tokens {
	return sd.ref.InternalTokens()
}

func (sd ServiceDirectoryAttributes) Service() terra.StringValue {
	return terra.ReferenceString(sd.ref.Append("service"))
}

func (sd ServiceDirectoryAttributes) GenericWebService() terra.ListValue[ServiceDirectoryGenericWebServiceAttributes] {
	return terra.ReferenceList[ServiceDirectoryGenericWebServiceAttributes](sd.ref.Append("generic_web_service"))
}

type ServiceDirectoryGenericWebServiceAttributes struct {
	ref terra.Reference
}

func (gws ServiceDirectoryGenericWebServiceAttributes) InternalRef() terra.Reference {
	return gws.ref
}

func (gws ServiceDirectoryGenericWebServiceAttributes) InternalWithRef(ref terra.Reference) ServiceDirectoryGenericWebServiceAttributes {
	return ServiceDirectoryGenericWebServiceAttributes{ref: ref}
}

func (gws ServiceDirectoryGenericWebServiceAttributes) InternalTokens() hclwrite.Tokens {
	return gws.ref.InternalTokens()
}

func (gws ServiceDirectoryGenericWebServiceAttributes) AllowedCaCerts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](gws.ref.Append("allowed_ca_certs"))
}

func (gws ServiceDirectoryGenericWebServiceAttributes) RequestHeaders() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](gws.ref.Append("request_headers"))
}

func (gws ServiceDirectoryGenericWebServiceAttributes) Uri() terra.StringValue {
	return terra.ReferenceString(gws.ref.Append("uri"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type GenericWebServiceState struct {
	AllowedCaCerts []string          `json:"allowed_ca_certs"`
	RequestHeaders map[string]string `json:"request_headers"`
	Uri            string            `json:"uri"`
}

type ServiceDirectoryState struct {
	Service           string                                   `json:"service"`
	GenericWebService []ServiceDirectoryGenericWebServiceState `json:"generic_web_service"`
}

type ServiceDirectoryGenericWebServiceState struct {
	AllowedCaCerts []string          `json:"allowed_ca_certs"`
	RequestHeaders map[string]string `json:"request_headers"`
	Uri            string            `json:"uri"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
