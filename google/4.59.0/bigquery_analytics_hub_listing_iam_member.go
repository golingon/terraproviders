// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	bigqueryanalyticshublistingiammember "github.com/golingon/terraproviders/google/4.59.0/bigqueryanalyticshublistingiammember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBigqueryAnalyticsHubListingIamMember(name string, args BigqueryAnalyticsHubListingIamMemberArgs) *BigqueryAnalyticsHubListingIamMember {
	return &BigqueryAnalyticsHubListingIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BigqueryAnalyticsHubListingIamMember)(nil)

type BigqueryAnalyticsHubListingIamMember struct {
	Name  string
	Args  BigqueryAnalyticsHubListingIamMemberArgs
	state *bigqueryAnalyticsHubListingIamMemberState
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) Type() string {
	return "google_bigquery_analytics_hub_listing_iam_member"
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) LocalName() string {
	return bahlim.Name
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) Configuration() interface{} {
	return bahlim.Args
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) Attributes() bigqueryAnalyticsHubListingIamMemberAttributes {
	return bigqueryAnalyticsHubListingIamMemberAttributes{ref: terra.ReferenceResource(bahlim)}
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) ImportState(av io.Reader) error {
	bahlim.state = &bigqueryAnalyticsHubListingIamMemberState{}
	if err := json.NewDecoder(av).Decode(bahlim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bahlim.Type(), bahlim.LocalName(), err)
	}
	return nil
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) State() (*bigqueryAnalyticsHubListingIamMemberState, bool) {
	return bahlim.state, bahlim.state != nil
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) StateMust() *bigqueryAnalyticsHubListingIamMemberState {
	if bahlim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bahlim.Type(), bahlim.LocalName()))
	}
	return bahlim.state
}

func (bahlim *BigqueryAnalyticsHubListingIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(bahlim)
}

type BigqueryAnalyticsHubListingIamMemberArgs struct {
	// DataExchangeId: string, required
	DataExchangeId terra.StringValue `hcl:"data_exchange_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ListingId: string, required
	ListingId terra.StringValue `hcl:"listing_id,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *bigqueryanalyticshublistingiammember.Condition `hcl:"condition,block"`
	// DependsOn contains resources that BigqueryAnalyticsHubListingIamMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type bigqueryAnalyticsHubListingIamMemberAttributes struct {
	ref terra.Reference
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) DataExchangeId() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("data_exchange_id"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("etag"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("id"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) ListingId() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("listing_id"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Location() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("location"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("member"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("project"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceString(bahlim.ref.Append("role"))
}

func (bahlim bigqueryAnalyticsHubListingIamMemberAttributes) Condition() terra.ListValue[bigqueryanalyticshublistingiammember.ConditionAttributes] {
	return terra.ReferenceList[bigqueryanalyticshublistingiammember.ConditionAttributes](bahlim.ref.Append("condition"))
}

type bigqueryAnalyticsHubListingIamMemberState struct {
	DataExchangeId string                                                `json:"data_exchange_id"`
	Etag           string                                                `json:"etag"`
	Id             string                                                `json:"id"`
	ListingId      string                                                `json:"listing_id"`
	Location       string                                                `json:"location"`
	Member         string                                                `json:"member"`
	Project        string                                                `json:"project"`
	Role           string                                                `json:"role"`
	Condition      []bigqueryanalyticshublistingiammember.ConditionState `json:"condition"`
}
