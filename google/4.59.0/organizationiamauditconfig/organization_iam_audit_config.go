// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package organizationiamauditconfig

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AuditLogConfig struct {
	// ExemptedMembers: set of string, optional
	ExemptedMembers terra.SetValue[terra.StringValue] `hcl:"exempted_members,attr"`
	// LogType: string, required
	LogType terra.StringValue `hcl:"log_type,attr" validate:"required"`
}

type AuditLogConfigAttributes struct {
	ref terra.Reference
}

func (alc AuditLogConfigAttributes) InternalRef() terra.Reference {
	return alc.ref
}

func (alc AuditLogConfigAttributes) InternalWithRef(ref terra.Reference) AuditLogConfigAttributes {
	return AuditLogConfigAttributes{ref: ref}
}

func (alc AuditLogConfigAttributes) InternalTokens() hclwrite.Tokens {
	return alc.ref.InternalTokens()
}

func (alc AuditLogConfigAttributes) ExemptedMembers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](alc.ref.Append("exempted_members"))
}

func (alc AuditLogConfigAttributes) LogType() terra.StringValue {
	return terra.ReferenceString(alc.ref.Append("log_type"))
}

type AuditLogConfigState struct {
	ExemptedMembers []string `json:"exempted_members"`
	LogType         string   `json:"log_type"`
}
