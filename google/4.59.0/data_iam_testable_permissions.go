// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	dataiamtestablepermissions "github.com/golingon/terraproviders/google/4.59.0/dataiamtestablepermissions"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataIamTestablePermissions(name string, args DataIamTestablePermissionsArgs) *DataIamTestablePermissions {
	return &DataIamTestablePermissions{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataIamTestablePermissions)(nil)

type DataIamTestablePermissions struct {
	Name string
	Args DataIamTestablePermissionsArgs
}

func (itp *DataIamTestablePermissions) DataSource() string {
	return "google_iam_testable_permissions"
}

func (itp *DataIamTestablePermissions) LocalName() string {
	return itp.Name
}

func (itp *DataIamTestablePermissions) Configuration() interface{} {
	return itp.Args
}

func (itp *DataIamTestablePermissions) Attributes() dataIamTestablePermissionsAttributes {
	return dataIamTestablePermissionsAttributes{ref: terra.ReferenceDataResource(itp)}
}

type DataIamTestablePermissionsArgs struct {
	// CustomSupportLevel: string, optional
	CustomSupportLevel terra.StringValue `hcl:"custom_support_level,attr"`
	// FullResourceName: string, required
	FullResourceName terra.StringValue `hcl:"full_resource_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Stages: list of string, optional
	Stages terra.ListValue[terra.StringValue] `hcl:"stages,attr"`
	// Permissions: min=0
	Permissions []dataiamtestablepermissions.Permissions `hcl:"permissions,block" validate:"min=0"`
}
type dataIamTestablePermissionsAttributes struct {
	ref terra.Reference
}

func (itp dataIamTestablePermissionsAttributes) CustomSupportLevel() terra.StringValue {
	return terra.ReferenceString(itp.ref.Append("custom_support_level"))
}

func (itp dataIamTestablePermissionsAttributes) FullResourceName() terra.StringValue {
	return terra.ReferenceString(itp.ref.Append("full_resource_name"))
}

func (itp dataIamTestablePermissionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(itp.ref.Append("id"))
}

func (itp dataIamTestablePermissionsAttributes) Stages() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](itp.ref.Append("stages"))
}

func (itp dataIamTestablePermissionsAttributes) Permissions() terra.ListValue[dataiamtestablepermissions.PermissionsAttributes] {
	return terra.ReferenceList[dataiamtestablepermissions.PermissionsAttributes](itp.ref.Append("permissions"))
}
