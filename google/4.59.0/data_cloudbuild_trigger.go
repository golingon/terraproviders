// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacloudbuildtrigger "github.com/golingon/terraproviders/google/4.59.0/datacloudbuildtrigger"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCloudbuildTrigger(name string, args DataCloudbuildTriggerArgs) *DataCloudbuildTrigger {
	return &DataCloudbuildTrigger{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCloudbuildTrigger)(nil)

type DataCloudbuildTrigger struct {
	Name string
	Args DataCloudbuildTriggerArgs
}

func (ct *DataCloudbuildTrigger) DataSource() string {
	return "google_cloudbuild_trigger"
}

func (ct *DataCloudbuildTrigger) LocalName() string {
	return ct.Name
}

func (ct *DataCloudbuildTrigger) Configuration() interface{} {
	return ct.Args
}

func (ct *DataCloudbuildTrigger) Attributes() dataCloudbuildTriggerAttributes {
	return dataCloudbuildTriggerAttributes{ref: terra.ReferenceDataResource(ct)}
}

type DataCloudbuildTriggerArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// TriggerId: string, required
	TriggerId terra.StringValue `hcl:"trigger_id,attr" validate:"required"`
	// ApprovalConfig: min=0
	ApprovalConfig []datacloudbuildtrigger.ApprovalConfig `hcl:"approval_config,block" validate:"min=0"`
	// BitbucketServerTriggerConfig: min=0
	BitbucketServerTriggerConfig []datacloudbuildtrigger.BitbucketServerTriggerConfig `hcl:"bitbucket_server_trigger_config,block" validate:"min=0"`
	// Build: min=0
	Build []datacloudbuildtrigger.Build `hcl:"build,block" validate:"min=0"`
	// GitFileSource: min=0
	GitFileSource []datacloudbuildtrigger.GitFileSource `hcl:"git_file_source,block" validate:"min=0"`
	// Github: min=0
	Github []datacloudbuildtrigger.Github `hcl:"github,block" validate:"min=0"`
	// PubsubConfig: min=0
	PubsubConfig []datacloudbuildtrigger.PubsubConfig `hcl:"pubsub_config,block" validate:"min=0"`
	// SourceToBuild: min=0
	SourceToBuild []datacloudbuildtrigger.SourceToBuild `hcl:"source_to_build,block" validate:"min=0"`
	// TriggerTemplate: min=0
	TriggerTemplate []datacloudbuildtrigger.TriggerTemplate `hcl:"trigger_template,block" validate:"min=0"`
	// WebhookConfig: min=0
	WebhookConfig []datacloudbuildtrigger.WebhookConfig `hcl:"webhook_config,block" validate:"min=0"`
}
type dataCloudbuildTriggerAttributes struct {
	ref terra.Reference
}

func (ct dataCloudbuildTriggerAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("create_time"))
}

func (ct dataCloudbuildTriggerAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("description"))
}

func (ct dataCloudbuildTriggerAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceBool(ct.ref.Append("disabled"))
}

func (ct dataCloudbuildTriggerAttributes) Filename() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("filename"))
}

func (ct dataCloudbuildTriggerAttributes) Filter() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("filter"))
}

func (ct dataCloudbuildTriggerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("id"))
}

func (ct dataCloudbuildTriggerAttributes) IgnoredFiles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ct.ref.Append("ignored_files"))
}

func (ct dataCloudbuildTriggerAttributes) IncludeBuildLogs() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("include_build_logs"))
}

func (ct dataCloudbuildTriggerAttributes) IncludedFiles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ct.ref.Append("included_files"))
}

func (ct dataCloudbuildTriggerAttributes) Location() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("location"))
}

func (ct dataCloudbuildTriggerAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("name"))
}

func (ct dataCloudbuildTriggerAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("project"))
}

func (ct dataCloudbuildTriggerAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("service_account"))
}

func (ct dataCloudbuildTriggerAttributes) Substitutions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ct.ref.Append("substitutions"))
}

func (ct dataCloudbuildTriggerAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ct.ref.Append("tags"))
}

func (ct dataCloudbuildTriggerAttributes) TriggerId() terra.StringValue {
	return terra.ReferenceString(ct.ref.Append("trigger_id"))
}

func (ct dataCloudbuildTriggerAttributes) ApprovalConfig() terra.ListValue[datacloudbuildtrigger.ApprovalConfigAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.ApprovalConfigAttributes](ct.ref.Append("approval_config"))
}

func (ct dataCloudbuildTriggerAttributes) BitbucketServerTriggerConfig() terra.ListValue[datacloudbuildtrigger.BitbucketServerTriggerConfigAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.BitbucketServerTriggerConfigAttributes](ct.ref.Append("bitbucket_server_trigger_config"))
}

func (ct dataCloudbuildTriggerAttributes) Build() terra.ListValue[datacloudbuildtrigger.BuildAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.BuildAttributes](ct.ref.Append("build"))
}

func (ct dataCloudbuildTriggerAttributes) GitFileSource() terra.ListValue[datacloudbuildtrigger.GitFileSourceAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.GitFileSourceAttributes](ct.ref.Append("git_file_source"))
}

func (ct dataCloudbuildTriggerAttributes) Github() terra.ListValue[datacloudbuildtrigger.GithubAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.GithubAttributes](ct.ref.Append("github"))
}

func (ct dataCloudbuildTriggerAttributes) PubsubConfig() terra.ListValue[datacloudbuildtrigger.PubsubConfigAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.PubsubConfigAttributes](ct.ref.Append("pubsub_config"))
}

func (ct dataCloudbuildTriggerAttributes) SourceToBuild() terra.ListValue[datacloudbuildtrigger.SourceToBuildAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.SourceToBuildAttributes](ct.ref.Append("source_to_build"))
}

func (ct dataCloudbuildTriggerAttributes) TriggerTemplate() terra.ListValue[datacloudbuildtrigger.TriggerTemplateAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.TriggerTemplateAttributes](ct.ref.Append("trigger_template"))
}

func (ct dataCloudbuildTriggerAttributes) WebhookConfig() terra.ListValue[datacloudbuildtrigger.WebhookConfigAttributes] {
	return terra.ReferenceList[datacloudbuildtrigger.WebhookConfigAttributes](ct.ref.Append("webhook_config"))
}
