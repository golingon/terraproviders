// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	identityplatformconfig "github.com/golingon/terraproviders/google/4.59.0/identityplatformconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIdentityPlatformConfig(name string, args IdentityPlatformConfigArgs) *IdentityPlatformConfig {
	return &IdentityPlatformConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IdentityPlatformConfig)(nil)

type IdentityPlatformConfig struct {
	Name  string
	Args  IdentityPlatformConfigArgs
	state *identityPlatformConfigState
}

func (ipc *IdentityPlatformConfig) Type() string {
	return "google_identity_platform_config"
}

func (ipc *IdentityPlatformConfig) LocalName() string {
	return ipc.Name
}

func (ipc *IdentityPlatformConfig) Configuration() interface{} {
	return ipc.Args
}

func (ipc *IdentityPlatformConfig) Attributes() identityPlatformConfigAttributes {
	return identityPlatformConfigAttributes{ref: terra.ReferenceResource(ipc)}
}

func (ipc *IdentityPlatformConfig) ImportState(av io.Reader) error {
	ipc.state = &identityPlatformConfigState{}
	if err := json.NewDecoder(av).Decode(ipc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ipc.Type(), ipc.LocalName(), err)
	}
	return nil
}

func (ipc *IdentityPlatformConfig) State() (*identityPlatformConfigState, bool) {
	return ipc.state, ipc.state != nil
}

func (ipc *IdentityPlatformConfig) StateMust() *identityPlatformConfigState {
	if ipc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ipc.Type(), ipc.LocalName()))
	}
	return ipc.state
}

func (ipc *IdentityPlatformConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(ipc)
}

type IdentityPlatformConfigArgs struct {
	// AutodeleteAnonymousUsers: bool, optional
	AutodeleteAnonymousUsers terra.BoolValue `hcl:"autodelete_anonymous_users,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Timeouts: optional
	Timeouts *identityplatformconfig.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IdentityPlatformConfig depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type identityPlatformConfigAttributes struct {
	ref terra.Reference
}

func (ipc identityPlatformConfigAttributes) AutodeleteAnonymousUsers() terra.BoolValue {
	return terra.ReferenceBool(ipc.ref.Append("autodelete_anonymous_users"))
}

func (ipc identityPlatformConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ipc.ref.Append("id"))
}

func (ipc identityPlatformConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ipc.ref.Append("name"))
}

func (ipc identityPlatformConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ipc.ref.Append("project"))
}

func (ipc identityPlatformConfigAttributes) Timeouts() identityplatformconfig.TimeoutsAttributes {
	return terra.ReferenceSingle[identityplatformconfig.TimeoutsAttributes](ipc.ref.Append("timeouts"))
}

type identityPlatformConfigState struct {
	AutodeleteAnonymousUsers bool                                  `json:"autodelete_anonymous_users"`
	Id                       string                                `json:"id"`
	Name                     string                                `json:"name"`
	Project                  string                                `json:"project"`
	Timeouts                 *identityplatformconfig.TimeoutsState `json:"timeouts"`
}
