// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	bigquerydatasetiammember "github.com/golingon/terraproviders/google/4.59.0/bigquerydatasetiammember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBigqueryDatasetIamMember(name string, args BigqueryDatasetIamMemberArgs) *BigqueryDatasetIamMember {
	return &BigqueryDatasetIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BigqueryDatasetIamMember)(nil)

type BigqueryDatasetIamMember struct {
	Name  string
	Args  BigqueryDatasetIamMemberArgs
	state *bigqueryDatasetIamMemberState
}

func (bdim *BigqueryDatasetIamMember) Type() string {
	return "google_bigquery_dataset_iam_member"
}

func (bdim *BigqueryDatasetIamMember) LocalName() string {
	return bdim.Name
}

func (bdim *BigqueryDatasetIamMember) Configuration() interface{} {
	return bdim.Args
}

func (bdim *BigqueryDatasetIamMember) Attributes() bigqueryDatasetIamMemberAttributes {
	return bigqueryDatasetIamMemberAttributes{ref: terra.ReferenceResource(bdim)}
}

func (bdim *BigqueryDatasetIamMember) ImportState(av io.Reader) error {
	bdim.state = &bigqueryDatasetIamMemberState{}
	if err := json.NewDecoder(av).Decode(bdim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bdim.Type(), bdim.LocalName(), err)
	}
	return nil
}

func (bdim *BigqueryDatasetIamMember) State() (*bigqueryDatasetIamMemberState, bool) {
	return bdim.state, bdim.state != nil
}

func (bdim *BigqueryDatasetIamMember) StateMust() *bigqueryDatasetIamMemberState {
	if bdim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bdim.Type(), bdim.LocalName()))
	}
	return bdim.state
}

func (bdim *BigqueryDatasetIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(bdim)
}

type BigqueryDatasetIamMemberArgs struct {
	// DatasetId: string, required
	DatasetId terra.StringValue `hcl:"dataset_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *bigquerydatasetiammember.Condition `hcl:"condition,block"`
	// DependsOn contains resources that BigqueryDatasetIamMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type bigqueryDatasetIamMemberAttributes struct {
	ref terra.Reference
}

func (bdim bigqueryDatasetIamMemberAttributes) DatasetId() terra.StringValue {
	return terra.ReferenceString(bdim.ref.Append("dataset_id"))
}

func (bdim bigqueryDatasetIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(bdim.ref.Append("etag"))
}

func (bdim bigqueryDatasetIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bdim.ref.Append("id"))
}

func (bdim bigqueryDatasetIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceString(bdim.ref.Append("member"))
}

func (bdim bigqueryDatasetIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceString(bdim.ref.Append("project"))
}

func (bdim bigqueryDatasetIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceString(bdim.ref.Append("role"))
}

func (bdim bigqueryDatasetIamMemberAttributes) Condition() terra.ListValue[bigquerydatasetiammember.ConditionAttributes] {
	return terra.ReferenceList[bigquerydatasetiammember.ConditionAttributes](bdim.ref.Append("condition"))
}

type bigqueryDatasetIamMemberState struct {
	DatasetId string                                    `json:"dataset_id"`
	Etag      string                                    `json:"etag"`
	Id        string                                    `json:"id"`
	Member    string                                    `json:"member"`
	Project   string                                    `json:"project"`
	Role      string                                    `json:"role"`
	Condition []bigquerydatasetiammember.ConditionState `json:"condition"`
}
