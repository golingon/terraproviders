// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	datalosspreventioninspecttemplate "github.com/golingon/terraproviders/google/4.59.0/datalosspreventioninspecttemplate"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDataLossPreventionInspectTemplate(name string, args DataLossPreventionInspectTemplateArgs) *DataLossPreventionInspectTemplate {
	return &DataLossPreventionInspectTemplate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataLossPreventionInspectTemplate)(nil)

type DataLossPreventionInspectTemplate struct {
	Name  string
	Args  DataLossPreventionInspectTemplateArgs
	state *dataLossPreventionInspectTemplateState
}

func (dlpit *DataLossPreventionInspectTemplate) Type() string {
	return "google_data_loss_prevention_inspect_template"
}

func (dlpit *DataLossPreventionInspectTemplate) LocalName() string {
	return dlpit.Name
}

func (dlpit *DataLossPreventionInspectTemplate) Configuration() interface{} {
	return dlpit.Args
}

func (dlpit *DataLossPreventionInspectTemplate) Attributes() dataLossPreventionInspectTemplateAttributes {
	return dataLossPreventionInspectTemplateAttributes{ref: terra.ReferenceResource(dlpit)}
}

func (dlpit *DataLossPreventionInspectTemplate) ImportState(av io.Reader) error {
	dlpit.state = &dataLossPreventionInspectTemplateState{}
	if err := json.NewDecoder(av).Decode(dlpit.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dlpit.Type(), dlpit.LocalName(), err)
	}
	return nil
}

func (dlpit *DataLossPreventionInspectTemplate) State() (*dataLossPreventionInspectTemplateState, bool) {
	return dlpit.state, dlpit.state != nil
}

func (dlpit *DataLossPreventionInspectTemplate) StateMust() *dataLossPreventionInspectTemplateState {
	if dlpit.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dlpit.Type(), dlpit.LocalName()))
	}
	return dlpit.state
}

func (dlpit *DataLossPreventionInspectTemplate) DependOn() terra.Reference {
	return terra.ReferenceResource(dlpit)
}

type DataLossPreventionInspectTemplateArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// InspectConfig: optional
	InspectConfig *datalosspreventioninspecttemplate.InspectConfig `hcl:"inspect_config,block"`
	// Timeouts: optional
	Timeouts *datalosspreventioninspecttemplate.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DataLossPreventionInspectTemplate depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dataLossPreventionInspectTemplateAttributes struct {
	ref terra.Reference
}

func (dlpit dataLossPreventionInspectTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(dlpit.ref.Append("description"))
}

func (dlpit dataLossPreventionInspectTemplateAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(dlpit.ref.Append("display_name"))
}

func (dlpit dataLossPreventionInspectTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dlpit.ref.Append("id"))
}

func (dlpit dataLossPreventionInspectTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dlpit.ref.Append("name"))
}

func (dlpit dataLossPreventionInspectTemplateAttributes) Parent() terra.StringValue {
	return terra.ReferenceString(dlpit.ref.Append("parent"))
}

func (dlpit dataLossPreventionInspectTemplateAttributes) InspectConfig() terra.ListValue[datalosspreventioninspecttemplate.InspectConfigAttributes] {
	return terra.ReferenceList[datalosspreventioninspecttemplate.InspectConfigAttributes](dlpit.ref.Append("inspect_config"))
}

func (dlpit dataLossPreventionInspectTemplateAttributes) Timeouts() datalosspreventioninspecttemplate.TimeoutsAttributes {
	return terra.ReferenceSingle[datalosspreventioninspecttemplate.TimeoutsAttributes](dlpit.ref.Append("timeouts"))
}

type dataLossPreventionInspectTemplateState struct {
	Description   string                                                 `json:"description"`
	DisplayName   string                                                 `json:"display_name"`
	Id            string                                                 `json:"id"`
	Name          string                                                 `json:"name"`
	Parent        string                                                 `json:"parent"`
	InspectConfig []datalosspreventioninspecttemplate.InspectConfigState `json:"inspect_config"`
	Timeouts      *datalosspreventioninspecttemplate.TimeoutsState       `json:"timeouts"`
}
