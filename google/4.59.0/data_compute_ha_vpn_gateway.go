// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomputehavpngateway "github.com/golingon/terraproviders/google/4.59.0/datacomputehavpngateway"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComputeHaVpnGateway(name string, args DataComputeHaVpnGatewayArgs) *DataComputeHaVpnGateway {
	return &DataComputeHaVpnGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeHaVpnGateway)(nil)

type DataComputeHaVpnGateway struct {
	Name string
	Args DataComputeHaVpnGatewayArgs
}

func (chvg *DataComputeHaVpnGateway) DataSource() string {
	return "google_compute_ha_vpn_gateway"
}

func (chvg *DataComputeHaVpnGateway) LocalName() string {
	return chvg.Name
}

func (chvg *DataComputeHaVpnGateway) Configuration() interface{} {
	return chvg.Args
}

func (chvg *DataComputeHaVpnGateway) Attributes() dataComputeHaVpnGatewayAttributes {
	return dataComputeHaVpnGatewayAttributes{ref: terra.ReferenceDataResource(chvg)}
}

type DataComputeHaVpnGatewayArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// VpnInterfaces: min=0
	VpnInterfaces []datacomputehavpngateway.VpnInterfaces `hcl:"vpn_interfaces,block" validate:"min=0"`
}
type dataComputeHaVpnGatewayAttributes struct {
	ref terra.Reference
}

func (chvg dataComputeHaVpnGatewayAttributes) Description() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("description"))
}

func (chvg dataComputeHaVpnGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("id"))
}

func (chvg dataComputeHaVpnGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("name"))
}

func (chvg dataComputeHaVpnGatewayAttributes) Network() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("network"))
}

func (chvg dataComputeHaVpnGatewayAttributes) Project() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("project"))
}

func (chvg dataComputeHaVpnGatewayAttributes) Region() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("region"))
}

func (chvg dataComputeHaVpnGatewayAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(chvg.ref.Append("self_link"))
}

func (chvg dataComputeHaVpnGatewayAttributes) VpnInterfaces() terra.ListValue[datacomputehavpngateway.VpnInterfacesAttributes] {
	return terra.ReferenceList[datacomputehavpngateway.VpnInterfacesAttributes](chvg.ref.Append("vpn_interfaces"))
}
