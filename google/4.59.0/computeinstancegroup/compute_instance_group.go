// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package computeinstancegroup

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type NamedPort struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type NamedPortAttributes struct {
	ref terra.Reference
}

func (np NamedPortAttributes) InternalRef() terra.Reference {
	return np.ref
}

func (np NamedPortAttributes) InternalWithRef(ref terra.Reference) NamedPortAttributes {
	return NamedPortAttributes{ref: ref}
}

func (np NamedPortAttributes) InternalTokens() hclwrite.Tokens {
	return np.ref.InternalTokens()
}

func (np NamedPortAttributes) Name() terra.StringValue {
	return terra.ReferenceString(np.ref.Append("name"))
}

func (np NamedPortAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(np.ref.Append("port"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type NamedPortState struct {
	Name string  `json:"name"`
	Port float64 `json:"port"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
