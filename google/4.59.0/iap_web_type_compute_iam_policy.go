// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIapWebTypeComputeIamPolicy(name string, args IapWebTypeComputeIamPolicyArgs) *IapWebTypeComputeIamPolicy {
	return &IapWebTypeComputeIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebTypeComputeIamPolicy)(nil)

type IapWebTypeComputeIamPolicy struct {
	Name  string
	Args  IapWebTypeComputeIamPolicyArgs
	state *iapWebTypeComputeIamPolicyState
}

func (iwtcip *IapWebTypeComputeIamPolicy) Type() string {
	return "google_iap_web_type_compute_iam_policy"
}

func (iwtcip *IapWebTypeComputeIamPolicy) LocalName() string {
	return iwtcip.Name
}

func (iwtcip *IapWebTypeComputeIamPolicy) Configuration() interface{} {
	return iwtcip.Args
}

func (iwtcip *IapWebTypeComputeIamPolicy) Attributes() iapWebTypeComputeIamPolicyAttributes {
	return iapWebTypeComputeIamPolicyAttributes{ref: terra.ReferenceResource(iwtcip)}
}

func (iwtcip *IapWebTypeComputeIamPolicy) ImportState(av io.Reader) error {
	iwtcip.state = &iapWebTypeComputeIamPolicyState{}
	if err := json.NewDecoder(av).Decode(iwtcip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwtcip.Type(), iwtcip.LocalName(), err)
	}
	return nil
}

func (iwtcip *IapWebTypeComputeIamPolicy) State() (*iapWebTypeComputeIamPolicyState, bool) {
	return iwtcip.state, iwtcip.state != nil
}

func (iwtcip *IapWebTypeComputeIamPolicy) StateMust() *iapWebTypeComputeIamPolicyState {
	if iwtcip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwtcip.Type(), iwtcip.LocalName()))
	}
	return iwtcip.state
}

func (iwtcip *IapWebTypeComputeIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(iwtcip)
}

type IapWebTypeComputeIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// DependsOn contains resources that IapWebTypeComputeIamPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iapWebTypeComputeIamPolicyAttributes struct {
	ref terra.Reference
}

func (iwtcip iapWebTypeComputeIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(iwtcip.ref.Append("etag"))
}

func (iwtcip iapWebTypeComputeIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iwtcip.ref.Append("id"))
}

func (iwtcip iapWebTypeComputeIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceString(iwtcip.ref.Append("policy_data"))
}

func (iwtcip iapWebTypeComputeIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceString(iwtcip.ref.Append("project"))
}

type iapWebTypeComputeIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
