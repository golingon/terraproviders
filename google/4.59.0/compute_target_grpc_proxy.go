// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	computetargetgrpcproxy "github.com/golingon/terraproviders/google/4.59.0/computetargetgrpcproxy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewComputeTargetGrpcProxy(name string, args ComputeTargetGrpcProxyArgs) *ComputeTargetGrpcProxy {
	return &ComputeTargetGrpcProxy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ComputeTargetGrpcProxy)(nil)

type ComputeTargetGrpcProxy struct {
	Name  string
	Args  ComputeTargetGrpcProxyArgs
	state *computeTargetGrpcProxyState
}

func (ctgp *ComputeTargetGrpcProxy) Type() string {
	return "google_compute_target_grpc_proxy"
}

func (ctgp *ComputeTargetGrpcProxy) LocalName() string {
	return ctgp.Name
}

func (ctgp *ComputeTargetGrpcProxy) Configuration() interface{} {
	return ctgp.Args
}

func (ctgp *ComputeTargetGrpcProxy) Attributes() computeTargetGrpcProxyAttributes {
	return computeTargetGrpcProxyAttributes{ref: terra.ReferenceResource(ctgp)}
}

func (ctgp *ComputeTargetGrpcProxy) ImportState(av io.Reader) error {
	ctgp.state = &computeTargetGrpcProxyState{}
	if err := json.NewDecoder(av).Decode(ctgp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ctgp.Type(), ctgp.LocalName(), err)
	}
	return nil
}

func (ctgp *ComputeTargetGrpcProxy) State() (*computeTargetGrpcProxyState, bool) {
	return ctgp.state, ctgp.state != nil
}

func (ctgp *ComputeTargetGrpcProxy) StateMust() *computeTargetGrpcProxyState {
	if ctgp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ctgp.Type(), ctgp.LocalName()))
	}
	return ctgp.state
}

func (ctgp *ComputeTargetGrpcProxy) DependOn() terra.Reference {
	return terra.ReferenceResource(ctgp)
}

type ComputeTargetGrpcProxyArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// UrlMap: string, optional
	UrlMap terra.StringValue `hcl:"url_map,attr"`
	// ValidateForProxyless: bool, optional
	ValidateForProxyless terra.BoolValue `hcl:"validate_for_proxyless,attr"`
	// Timeouts: optional
	Timeouts *computetargetgrpcproxy.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ComputeTargetGrpcProxy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type computeTargetGrpcProxyAttributes struct {
	ref terra.Reference
}

func (ctgp computeTargetGrpcProxyAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("creation_timestamp"))
}

func (ctgp computeTargetGrpcProxyAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("description"))
}

func (ctgp computeTargetGrpcProxyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("fingerprint"))
}

func (ctgp computeTargetGrpcProxyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("id"))
}

func (ctgp computeTargetGrpcProxyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("name"))
}

func (ctgp computeTargetGrpcProxyAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("project"))
}

func (ctgp computeTargetGrpcProxyAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("self_link"))
}

func (ctgp computeTargetGrpcProxyAttributes) SelfLinkWithId() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("self_link_with_id"))
}

func (ctgp computeTargetGrpcProxyAttributes) UrlMap() terra.StringValue {
	return terra.ReferenceString(ctgp.ref.Append("url_map"))
}

func (ctgp computeTargetGrpcProxyAttributes) ValidateForProxyless() terra.BoolValue {
	return terra.ReferenceBool(ctgp.ref.Append("validate_for_proxyless"))
}

func (ctgp computeTargetGrpcProxyAttributes) Timeouts() computetargetgrpcproxy.TimeoutsAttributes {
	return terra.ReferenceSingle[computetargetgrpcproxy.TimeoutsAttributes](ctgp.ref.Append("timeouts"))
}

type computeTargetGrpcProxyState struct {
	CreationTimestamp    string                                `json:"creation_timestamp"`
	Description          string                                `json:"description"`
	Fingerprint          string                                `json:"fingerprint"`
	Id                   string                                `json:"id"`
	Name                 string                                `json:"name"`
	Project              string                                `json:"project"`
	SelfLink             string                                `json:"self_link"`
	SelfLinkWithId       string                                `json:"self_link_with_id"`
	UrlMap               string                                `json:"url_map"`
	ValidateForProxyless bool                                  `json:"validate_for_proxyless"`
	Timeouts             *computetargetgrpcproxy.TimeoutsState `json:"timeouts"`
}
