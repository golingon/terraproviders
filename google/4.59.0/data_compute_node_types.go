// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataComputeNodeTypes(name string, args DataComputeNodeTypesArgs) *DataComputeNodeTypes {
	return &DataComputeNodeTypes{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeNodeTypes)(nil)

type DataComputeNodeTypes struct {
	Name string
	Args DataComputeNodeTypesArgs
}

func (cnt *DataComputeNodeTypes) DataSource() string {
	return "google_compute_node_types"
}

func (cnt *DataComputeNodeTypes) LocalName() string {
	return cnt.Name
}

func (cnt *DataComputeNodeTypes) Configuration() interface{} {
	return cnt.Args
}

func (cnt *DataComputeNodeTypes) Attributes() dataComputeNodeTypesAttributes {
	return dataComputeNodeTypesAttributes{ref: terra.ReferenceDataResource(cnt)}
}

type DataComputeNodeTypesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
}
type dataComputeNodeTypesAttributes struct {
	ref terra.Reference
}

func (cnt dataComputeNodeTypesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cnt.ref.Append("id"))
}

func (cnt dataComputeNodeTypesAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cnt.ref.Append("names"))
}

func (cnt dataComputeNodeTypesAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cnt.ref.Append("project"))
}

func (cnt dataComputeNodeTypesAttributes) Zone() terra.StringValue {
	return terra.ReferenceString(cnt.ref.Append("zone"))
}
