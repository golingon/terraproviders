// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dialogflowcxflow

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type EventHandlers struct {
	// Event: string, optional
	Event terra.StringValue `hcl:"event,attr"`
	// TargetFlow: string, optional
	TargetFlow terra.StringValue `hcl:"target_flow,attr"`
	// TargetPage: string, optional
	TargetPage terra.StringValue `hcl:"target_page,attr"`
	// EventHandlersTriggerFulfillment: optional
	TriggerFulfillment *EventHandlersTriggerFulfillment `hcl:"trigger_fulfillment,block"`
}

type EventHandlersTriggerFulfillment struct {
	// ReturnPartialResponses: bool, optional
	ReturnPartialResponses terra.BoolValue `hcl:"return_partial_responses,attr"`
	// Tag: string, optional
	Tag terra.StringValue `hcl:"tag,attr"`
	// Webhook: string, optional
	Webhook terra.StringValue `hcl:"webhook,attr"`
	// EventHandlersTriggerFulfillmentMessages: min=0
	Messages []EventHandlersTriggerFulfillmentMessages `hcl:"messages,block" validate:"min=0"`
}

type EventHandlersTriggerFulfillmentMessages struct {
	// EventHandlersTriggerFulfillmentMessagesText: optional
	Text *EventHandlersTriggerFulfillmentMessagesText `hcl:"text,block"`
}

type EventHandlersTriggerFulfillmentMessagesText struct {
	// Text: list of string, optional
	Text terra.ListValue[terra.StringValue] `hcl:"text,attr"`
}

type NluSettings struct {
	// ClassificationThreshold: number, optional
	ClassificationThreshold terra.NumberValue `hcl:"classification_threshold,attr"`
	// ModelTrainingMode: string, optional
	ModelTrainingMode terra.StringValue `hcl:"model_training_mode,attr"`
	// ModelType: string, optional
	ModelType terra.StringValue `hcl:"model_type,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type TransitionRoutes struct {
	// Condition: string, optional
	Condition terra.StringValue `hcl:"condition,attr"`
	// Intent: string, optional
	Intent terra.StringValue `hcl:"intent,attr"`
	// TargetFlow: string, optional
	TargetFlow terra.StringValue `hcl:"target_flow,attr"`
	// TargetPage: string, optional
	TargetPage terra.StringValue `hcl:"target_page,attr"`
	// TransitionRoutesTriggerFulfillment: optional
	TriggerFulfillment *TransitionRoutesTriggerFulfillment `hcl:"trigger_fulfillment,block"`
}

type TransitionRoutesTriggerFulfillment struct {
	// ReturnPartialResponses: bool, optional
	ReturnPartialResponses terra.BoolValue `hcl:"return_partial_responses,attr"`
	// Tag: string, optional
	Tag terra.StringValue `hcl:"tag,attr"`
	// Webhook: string, optional
	Webhook terra.StringValue `hcl:"webhook,attr"`
	// TransitionRoutesTriggerFulfillmentMessages: min=0
	Messages []TransitionRoutesTriggerFulfillmentMessages `hcl:"messages,block" validate:"min=0"`
}

type TransitionRoutesTriggerFulfillmentMessages struct {
	// TransitionRoutesTriggerFulfillmentMessagesText: optional
	Text *TransitionRoutesTriggerFulfillmentMessagesText `hcl:"text,block"`
}

type TransitionRoutesTriggerFulfillmentMessagesText struct {
	// Text: list of string, optional
	Text terra.ListValue[terra.StringValue] `hcl:"text,attr"`
}

type EventHandlersAttributes struct {
	ref terra.Reference
}

func (eh EventHandlersAttributes) InternalRef() (terra.Reference, error) {
	return eh.ref, nil
}

func (eh EventHandlersAttributes) InternalWithRef(ref terra.Reference) EventHandlersAttributes {
	return EventHandlersAttributes{ref: ref}
}

func (eh EventHandlersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eh.ref.InternalTokens()
}

func (eh EventHandlersAttributes) Event() terra.StringValue {
	return terra.ReferenceAsString(eh.ref.Append("event"))
}

func (eh EventHandlersAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(eh.ref.Append("name"))
}

func (eh EventHandlersAttributes) TargetFlow() terra.StringValue {
	return terra.ReferenceAsString(eh.ref.Append("target_flow"))
}

func (eh EventHandlersAttributes) TargetPage() terra.StringValue {
	return terra.ReferenceAsString(eh.ref.Append("target_page"))
}

func (eh EventHandlersAttributes) TriggerFulfillment() terra.ListValue[EventHandlersTriggerFulfillmentAttributes] {
	return terra.ReferenceAsList[EventHandlersTriggerFulfillmentAttributes](eh.ref.Append("trigger_fulfillment"))
}

type EventHandlersTriggerFulfillmentAttributes struct {
	ref terra.Reference
}

func (tf EventHandlersTriggerFulfillmentAttributes) InternalRef() (terra.Reference, error) {
	return tf.ref, nil
}

func (tf EventHandlersTriggerFulfillmentAttributes) InternalWithRef(ref terra.Reference) EventHandlersTriggerFulfillmentAttributes {
	return EventHandlersTriggerFulfillmentAttributes{ref: ref}
}

func (tf EventHandlersTriggerFulfillmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tf.ref.InternalTokens()
}

func (tf EventHandlersTriggerFulfillmentAttributes) ReturnPartialResponses() terra.BoolValue {
	return terra.ReferenceAsBool(tf.ref.Append("return_partial_responses"))
}

func (tf EventHandlersTriggerFulfillmentAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(tf.ref.Append("tag"))
}

func (tf EventHandlersTriggerFulfillmentAttributes) Webhook() terra.StringValue {
	return terra.ReferenceAsString(tf.ref.Append("webhook"))
}

func (tf EventHandlersTriggerFulfillmentAttributes) Messages() terra.ListValue[EventHandlersTriggerFulfillmentMessagesAttributes] {
	return terra.ReferenceAsList[EventHandlersTriggerFulfillmentMessagesAttributes](tf.ref.Append("messages"))
}

type EventHandlersTriggerFulfillmentMessagesAttributes struct {
	ref terra.Reference
}

func (m EventHandlersTriggerFulfillmentMessagesAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m EventHandlersTriggerFulfillmentMessagesAttributes) InternalWithRef(ref terra.Reference) EventHandlersTriggerFulfillmentMessagesAttributes {
	return EventHandlersTriggerFulfillmentMessagesAttributes{ref: ref}
}

func (m EventHandlersTriggerFulfillmentMessagesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m EventHandlersTriggerFulfillmentMessagesAttributes) Text() terra.ListValue[EventHandlersTriggerFulfillmentMessagesTextAttributes] {
	return terra.ReferenceAsList[EventHandlersTriggerFulfillmentMessagesTextAttributes](m.ref.Append("text"))
}

type EventHandlersTriggerFulfillmentMessagesTextAttributes struct {
	ref terra.Reference
}

func (t EventHandlersTriggerFulfillmentMessagesTextAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t EventHandlersTriggerFulfillmentMessagesTextAttributes) InternalWithRef(ref terra.Reference) EventHandlersTriggerFulfillmentMessagesTextAttributes {
	return EventHandlersTriggerFulfillmentMessagesTextAttributes{ref: ref}
}

func (t EventHandlersTriggerFulfillmentMessagesTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t EventHandlersTriggerFulfillmentMessagesTextAttributes) AllowPlaybackInterruption() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("allow_playback_interruption"))
}

func (t EventHandlersTriggerFulfillmentMessagesTextAttributes) Text() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](t.ref.Append("text"))
}

type NluSettingsAttributes struct {
	ref terra.Reference
}

func (ns NluSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ns.ref, nil
}

func (ns NluSettingsAttributes) InternalWithRef(ref terra.Reference) NluSettingsAttributes {
	return NluSettingsAttributes{ref: ref}
}

func (ns NluSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ns.ref.InternalTokens()
}

func (ns NluSettingsAttributes) ClassificationThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(ns.ref.Append("classification_threshold"))
}

func (ns NluSettingsAttributes) ModelTrainingMode() terra.StringValue {
	return terra.ReferenceAsString(ns.ref.Append("model_training_mode"))
}

func (ns NluSettingsAttributes) ModelType() terra.StringValue {
	return terra.ReferenceAsString(ns.ref.Append("model_type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TransitionRoutesAttributes struct {
	ref terra.Reference
}

func (tr TransitionRoutesAttributes) InternalRef() (terra.Reference, error) {
	return tr.ref, nil
}

func (tr TransitionRoutesAttributes) InternalWithRef(ref terra.Reference) TransitionRoutesAttributes {
	return TransitionRoutesAttributes{ref: ref}
}

func (tr TransitionRoutesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tr.ref.InternalTokens()
}

func (tr TransitionRoutesAttributes) Condition() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("condition"))
}

func (tr TransitionRoutesAttributes) Intent() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("intent"))
}

func (tr TransitionRoutesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("name"))
}

func (tr TransitionRoutesAttributes) TargetFlow() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("target_flow"))
}

func (tr TransitionRoutesAttributes) TargetPage() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("target_page"))
}

func (tr TransitionRoutesAttributes) TriggerFulfillment() terra.ListValue[TransitionRoutesTriggerFulfillmentAttributes] {
	return terra.ReferenceAsList[TransitionRoutesTriggerFulfillmentAttributes](tr.ref.Append("trigger_fulfillment"))
}

type TransitionRoutesTriggerFulfillmentAttributes struct {
	ref terra.Reference
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) InternalRef() (terra.Reference, error) {
	return tf.ref, nil
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) InternalWithRef(ref terra.Reference) TransitionRoutesTriggerFulfillmentAttributes {
	return TransitionRoutesTriggerFulfillmentAttributes{ref: ref}
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tf.ref.InternalTokens()
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) ReturnPartialResponses() terra.BoolValue {
	return terra.ReferenceAsBool(tf.ref.Append("return_partial_responses"))
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(tf.ref.Append("tag"))
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) Webhook() terra.StringValue {
	return terra.ReferenceAsString(tf.ref.Append("webhook"))
}

func (tf TransitionRoutesTriggerFulfillmentAttributes) Messages() terra.ListValue[TransitionRoutesTriggerFulfillmentMessagesAttributes] {
	return terra.ReferenceAsList[TransitionRoutesTriggerFulfillmentMessagesAttributes](tf.ref.Append("messages"))
}

type TransitionRoutesTriggerFulfillmentMessagesAttributes struct {
	ref terra.Reference
}

func (m TransitionRoutesTriggerFulfillmentMessagesAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m TransitionRoutesTriggerFulfillmentMessagesAttributes) InternalWithRef(ref terra.Reference) TransitionRoutesTriggerFulfillmentMessagesAttributes {
	return TransitionRoutesTriggerFulfillmentMessagesAttributes{ref: ref}
}

func (m TransitionRoutesTriggerFulfillmentMessagesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m TransitionRoutesTriggerFulfillmentMessagesAttributes) Text() terra.ListValue[TransitionRoutesTriggerFulfillmentMessagesTextAttributes] {
	return terra.ReferenceAsList[TransitionRoutesTriggerFulfillmentMessagesTextAttributes](m.ref.Append("text"))
}

type TransitionRoutesTriggerFulfillmentMessagesTextAttributes struct {
	ref terra.Reference
}

func (t TransitionRoutesTriggerFulfillmentMessagesTextAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TransitionRoutesTriggerFulfillmentMessagesTextAttributes) InternalWithRef(ref terra.Reference) TransitionRoutesTriggerFulfillmentMessagesTextAttributes {
	return TransitionRoutesTriggerFulfillmentMessagesTextAttributes{ref: ref}
}

func (t TransitionRoutesTriggerFulfillmentMessagesTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TransitionRoutesTriggerFulfillmentMessagesTextAttributes) AllowPlaybackInterruption() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("allow_playback_interruption"))
}

func (t TransitionRoutesTriggerFulfillmentMessagesTextAttributes) Text() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](t.ref.Append("text"))
}

type EventHandlersState struct {
	Event              string                                 `json:"event"`
	Name               string                                 `json:"name"`
	TargetFlow         string                                 `json:"target_flow"`
	TargetPage         string                                 `json:"target_page"`
	TriggerFulfillment []EventHandlersTriggerFulfillmentState `json:"trigger_fulfillment"`
}

type EventHandlersTriggerFulfillmentState struct {
	ReturnPartialResponses bool                                           `json:"return_partial_responses"`
	Tag                    string                                         `json:"tag"`
	Webhook                string                                         `json:"webhook"`
	Messages               []EventHandlersTriggerFulfillmentMessagesState `json:"messages"`
}

type EventHandlersTriggerFulfillmentMessagesState struct {
	Text []EventHandlersTriggerFulfillmentMessagesTextState `json:"text"`
}

type EventHandlersTriggerFulfillmentMessagesTextState struct {
	AllowPlaybackInterruption bool     `json:"allow_playback_interruption"`
	Text                      []string `json:"text"`
}

type NluSettingsState struct {
	ClassificationThreshold float64 `json:"classification_threshold"`
	ModelTrainingMode       string  `json:"model_training_mode"`
	ModelType               string  `json:"model_type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type TransitionRoutesState struct {
	Condition          string                                    `json:"condition"`
	Intent             string                                    `json:"intent"`
	Name               string                                    `json:"name"`
	TargetFlow         string                                    `json:"target_flow"`
	TargetPage         string                                    `json:"target_page"`
	TriggerFulfillment []TransitionRoutesTriggerFulfillmentState `json:"trigger_fulfillment"`
}

type TransitionRoutesTriggerFulfillmentState struct {
	ReturnPartialResponses bool                                              `json:"return_partial_responses"`
	Tag                    string                                            `json:"tag"`
	Webhook                string                                            `json:"webhook"`
	Messages               []TransitionRoutesTriggerFulfillmentMessagesState `json:"messages"`
}

type TransitionRoutesTriggerFulfillmentMessagesState struct {
	Text []TransitionRoutesTriggerFulfillmentMessagesTextState `json:"text"`
}

type TransitionRoutesTriggerFulfillmentMessagesTextState struct {
	AllowPlaybackInterruption bool     `json:"allow_playback_interruption"`
	Text                      []string `json:"text"`
}
