// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datakmscryptokey "github.com/golingon/terraproviders/google/4.59.0/datakmscryptokey"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKmsCryptoKey(name string, args DataKmsCryptoKeyArgs) *DataKmsCryptoKey {
	return &DataKmsCryptoKey{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKmsCryptoKey)(nil)

type DataKmsCryptoKey struct {
	Name string
	Args DataKmsCryptoKeyArgs
}

func (kck *DataKmsCryptoKey) DataSource() string {
	return "google_kms_crypto_key"
}

func (kck *DataKmsCryptoKey) LocalName() string {
	return kck.Name
}

func (kck *DataKmsCryptoKey) Configuration() interface{} {
	return kck.Args
}

func (kck *DataKmsCryptoKey) Attributes() dataKmsCryptoKeyAttributes {
	return dataKmsCryptoKeyAttributes{ref: terra.ReferenceDataResource(kck)}
}

type DataKmsCryptoKeyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyRing: string, required
	KeyRing terra.StringValue `hcl:"key_ring,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// VersionTemplate: min=0
	VersionTemplate []datakmscryptokey.VersionTemplate `hcl:"version_template,block" validate:"min=0"`
}
type dataKmsCryptoKeyAttributes struct {
	ref terra.Reference
}

func (kck dataKmsCryptoKeyAttributes) DestroyScheduledDuration() terra.StringValue {
	return terra.ReferenceString(kck.ref.Append("destroy_scheduled_duration"))
}

func (kck dataKmsCryptoKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kck.ref.Append("id"))
}

func (kck dataKmsCryptoKeyAttributes) ImportOnly() terra.BoolValue {
	return terra.ReferenceBool(kck.ref.Append("import_only"))
}

func (kck dataKmsCryptoKeyAttributes) KeyRing() terra.StringValue {
	return terra.ReferenceString(kck.ref.Append("key_ring"))
}

func (kck dataKmsCryptoKeyAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kck.ref.Append("labels"))
}

func (kck dataKmsCryptoKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kck.ref.Append("name"))
}

func (kck dataKmsCryptoKeyAttributes) Purpose() terra.StringValue {
	return terra.ReferenceString(kck.ref.Append("purpose"))
}

func (kck dataKmsCryptoKeyAttributes) RotationPeriod() terra.StringValue {
	return terra.ReferenceString(kck.ref.Append("rotation_period"))
}

func (kck dataKmsCryptoKeyAttributes) SkipInitialVersionCreation() terra.BoolValue {
	return terra.ReferenceBool(kck.ref.Append("skip_initial_version_creation"))
}

func (kck dataKmsCryptoKeyAttributes) VersionTemplate() terra.ListValue[datakmscryptokey.VersionTemplateAttributes] {
	return terra.ReferenceList[datakmscryptokey.VersionTemplateAttributes](kck.ref.Append("version_template"))
}
