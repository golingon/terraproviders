// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	iapwebiammember "github.com/golingon/terraproviders/google/4.59.0/iapwebiammember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIapWebIamMember(name string, args IapWebIamMemberArgs) *IapWebIamMember {
	return &IapWebIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebIamMember)(nil)

type IapWebIamMember struct {
	Name  string
	Args  IapWebIamMemberArgs
	state *iapWebIamMemberState
}

func (iwim *IapWebIamMember) Type() string {
	return "google_iap_web_iam_member"
}

func (iwim *IapWebIamMember) LocalName() string {
	return iwim.Name
}

func (iwim *IapWebIamMember) Configuration() interface{} {
	return iwim.Args
}

func (iwim *IapWebIamMember) Attributes() iapWebIamMemberAttributes {
	return iapWebIamMemberAttributes{ref: terra.ReferenceResource(iwim)}
}

func (iwim *IapWebIamMember) ImportState(av io.Reader) error {
	iwim.state = &iapWebIamMemberState{}
	if err := json.NewDecoder(av).Decode(iwim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwim.Type(), iwim.LocalName(), err)
	}
	return nil
}

func (iwim *IapWebIamMember) State() (*iapWebIamMemberState, bool) {
	return iwim.state, iwim.state != nil
}

func (iwim *IapWebIamMember) StateMust() *iapWebIamMemberState {
	if iwim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwim.Type(), iwim.LocalName()))
	}
	return iwim.state
}

func (iwim *IapWebIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(iwim)
}

type IapWebIamMemberArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *iapwebiammember.Condition `hcl:"condition,block"`
	// DependsOn contains resources that IapWebIamMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iapWebIamMemberAttributes struct {
	ref terra.Reference
}

func (iwim iapWebIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(iwim.ref.Append("etag"))
}

func (iwim iapWebIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iwim.ref.Append("id"))
}

func (iwim iapWebIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceString(iwim.ref.Append("member"))
}

func (iwim iapWebIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceString(iwim.ref.Append("project"))
}

func (iwim iapWebIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceString(iwim.ref.Append("role"))
}

func (iwim iapWebIamMemberAttributes) Condition() terra.ListValue[iapwebiammember.ConditionAttributes] {
	return terra.ReferenceList[iapwebiammember.ConditionAttributes](iwim.ref.Append("condition"))
}

type iapWebIamMemberState struct {
	Etag      string                           `json:"etag"`
	Id        string                           `json:"id"`
	Member    string                           `json:"member"`
	Project   string                           `json:"project"`
	Role      string                           `json:"role"`
	Condition []iapwebiammember.ConditionState `json:"condition"`
}
