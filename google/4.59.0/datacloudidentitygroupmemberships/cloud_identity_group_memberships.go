// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datacloudidentitygroupmemberships

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Memberships struct {
	// PreferredMemberKey: min=0
	PreferredMemberKey []PreferredMemberKey `hcl:"preferred_member_key,block" validate:"min=0"`
	// Roles: min=0
	Roles []Roles `hcl:"roles,block" validate:"min=0"`
}

type PreferredMemberKey struct{}

type Roles struct{}

type MembershipsAttributes struct {
	ref terra.Reference
}

func (m MembershipsAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m MembershipsAttributes) InternalWithRef(ref terra.Reference) MembershipsAttributes {
	return MembershipsAttributes{ref: ref}
}

func (m MembershipsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m MembershipsAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("create_time"))
}

func (m MembershipsAttributes) Group() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("group"))
}

func (m MembershipsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("name"))
}

func (m MembershipsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("type"))
}

func (m MembershipsAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("update_time"))
}

func (m MembershipsAttributes) PreferredMemberKey() terra.ListValue[PreferredMemberKeyAttributes] {
	return terra.ReferenceAsList[PreferredMemberKeyAttributes](m.ref.Append("preferred_member_key"))
}

func (m MembershipsAttributes) Roles() terra.SetValue[RolesAttributes] {
	return terra.ReferenceAsSet[RolesAttributes](m.ref.Append("roles"))
}

type PreferredMemberKeyAttributes struct {
	ref terra.Reference
}

func (pmk PreferredMemberKeyAttributes) InternalRef() (terra.Reference, error) {
	return pmk.ref, nil
}

func (pmk PreferredMemberKeyAttributes) InternalWithRef(ref terra.Reference) PreferredMemberKeyAttributes {
	return PreferredMemberKeyAttributes{ref: ref}
}

func (pmk PreferredMemberKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pmk.ref.InternalTokens()
}

func (pmk PreferredMemberKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pmk.ref.Append("id"))
}

func (pmk PreferredMemberKeyAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(pmk.ref.Append("namespace"))
}

type RolesAttributes struct {
	ref terra.Reference
}

func (r RolesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RolesAttributes) InternalWithRef(ref terra.Reference) RolesAttributes {
	return RolesAttributes{ref: ref}
}

func (r RolesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RolesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("name"))
}

type MembershipsState struct {
	CreateTime         string                    `json:"create_time"`
	Group              string                    `json:"group"`
	Name               string                    `json:"name"`
	Type               string                    `json:"type"`
	UpdateTime         string                    `json:"update_time"`
	PreferredMemberKey []PreferredMemberKeyState `json:"preferred_member_key"`
	Roles              []RolesState              `json:"roles"`
}

type PreferredMemberKeyState struct {
	Id        string `json:"id"`
	Namespace string `json:"namespace"`
}

type RolesState struct {
	Name string `json:"name"`
}
