// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataComputeRegions(name string, args DataComputeRegionsArgs) *DataComputeRegions {
	return &DataComputeRegions{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeRegions)(nil)

type DataComputeRegions struct {
	Name string
	Args DataComputeRegionsArgs
}

func (cr *DataComputeRegions) DataSource() string {
	return "google_compute_regions"
}

func (cr *DataComputeRegions) LocalName() string {
	return cr.Name
}

func (cr *DataComputeRegions) Configuration() interface{} {
	return cr.Args
}

func (cr *DataComputeRegions) Attributes() dataComputeRegionsAttributes {
	return dataComputeRegionsAttributes{ref: terra.ReferenceDataResource(cr)}
}

type DataComputeRegionsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}
type dataComputeRegionsAttributes struct {
	ref terra.Reference
}

func (cr dataComputeRegionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("id"))
}

func (cr dataComputeRegionsAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cr.ref.Append("names"))
}

func (cr dataComputeRegionsAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("project"))
}

func (cr dataComputeRegionsAttributes) Status() terra.StringValue {
	return terra.ReferenceString(cr.ref.Append("status"))
}
