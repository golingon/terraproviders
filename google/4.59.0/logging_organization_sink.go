// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	loggingorganizationsink "github.com/golingon/terraproviders/google/4.59.0/loggingorganizationsink"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLoggingOrganizationSink(name string, args LoggingOrganizationSinkArgs) *LoggingOrganizationSink {
	return &LoggingOrganizationSink{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LoggingOrganizationSink)(nil)

type LoggingOrganizationSink struct {
	Name  string
	Args  LoggingOrganizationSinkArgs
	state *loggingOrganizationSinkState
}

func (los *LoggingOrganizationSink) Type() string {
	return "google_logging_organization_sink"
}

func (los *LoggingOrganizationSink) LocalName() string {
	return los.Name
}

func (los *LoggingOrganizationSink) Configuration() interface{} {
	return los.Args
}

func (los *LoggingOrganizationSink) Attributes() loggingOrganizationSinkAttributes {
	return loggingOrganizationSinkAttributes{ref: terra.ReferenceResource(los)}
}

func (los *LoggingOrganizationSink) ImportState(av io.Reader) error {
	los.state = &loggingOrganizationSinkState{}
	if err := json.NewDecoder(av).Decode(los.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", los.Type(), los.LocalName(), err)
	}
	return nil
}

func (los *LoggingOrganizationSink) State() (*loggingOrganizationSinkState, bool) {
	return los.state, los.state != nil
}

func (los *LoggingOrganizationSink) StateMust() *loggingOrganizationSinkState {
	if los.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", los.Type(), los.LocalName()))
	}
	return los.state
}

func (los *LoggingOrganizationSink) DependOn() terra.Reference {
	return terra.ReferenceResource(los)
}

type LoggingOrganizationSinkArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Destination: string, required
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// Filter: string, optional
	Filter terra.StringValue `hcl:"filter,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IncludeChildren: bool, optional
	IncludeChildren terra.BoolValue `hcl:"include_children,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OrgId: string, required
	OrgId terra.StringValue `hcl:"org_id,attr" validate:"required"`
	// BigqueryOptions: optional
	BigqueryOptions *loggingorganizationsink.BigqueryOptions `hcl:"bigquery_options,block"`
	// Exclusions: min=0
	Exclusions []loggingorganizationsink.Exclusions `hcl:"exclusions,block" validate:"min=0"`
	// DependsOn contains resources that LoggingOrganizationSink depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type loggingOrganizationSinkAttributes struct {
	ref terra.Reference
}

func (los loggingOrganizationSinkAttributes) Description() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("description"))
}

func (los loggingOrganizationSinkAttributes) Destination() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("destination"))
}

func (los loggingOrganizationSinkAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceBool(los.ref.Append("disabled"))
}

func (los loggingOrganizationSinkAttributes) Filter() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("filter"))
}

func (los loggingOrganizationSinkAttributes) Id() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("id"))
}

func (los loggingOrganizationSinkAttributes) IncludeChildren() terra.BoolValue {
	return terra.ReferenceBool(los.ref.Append("include_children"))
}

func (los loggingOrganizationSinkAttributes) Name() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("name"))
}

func (los loggingOrganizationSinkAttributes) OrgId() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("org_id"))
}

func (los loggingOrganizationSinkAttributes) WriterIdentity() terra.StringValue {
	return terra.ReferenceString(los.ref.Append("writer_identity"))
}

func (los loggingOrganizationSinkAttributes) BigqueryOptions() terra.ListValue[loggingorganizationsink.BigqueryOptionsAttributes] {
	return terra.ReferenceList[loggingorganizationsink.BigqueryOptionsAttributes](los.ref.Append("bigquery_options"))
}

func (los loggingOrganizationSinkAttributes) Exclusions() terra.ListValue[loggingorganizationsink.ExclusionsAttributes] {
	return terra.ReferenceList[loggingorganizationsink.ExclusionsAttributes](los.ref.Append("exclusions"))
}

type loggingOrganizationSinkState struct {
	Description     string                                         `json:"description"`
	Destination     string                                         `json:"destination"`
	Disabled        bool                                           `json:"disabled"`
	Filter          string                                         `json:"filter"`
	Id              string                                         `json:"id"`
	IncludeChildren bool                                           `json:"include_children"`
	Name            string                                         `json:"name"`
	OrgId           string                                         `json:"org_id"`
	WriterIdentity  string                                         `json:"writer_identity"`
	BigqueryOptions []loggingorganizationsink.BigqueryOptionsState `json:"bigquery_options"`
	Exclusions      []loggingorganizationsink.ExclusionsState      `json:"exclusions"`
}
