// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	dataredisinstance "github.com/golingon/terraproviders/google/4.59.0/dataredisinstance"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataRedisInstance(name string, args DataRedisInstanceArgs) *DataRedisInstance {
	return &DataRedisInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRedisInstance)(nil)

type DataRedisInstance struct {
	Name string
	Args DataRedisInstanceArgs
}

func (ri *DataRedisInstance) DataSource() string {
	return "google_redis_instance"
}

func (ri *DataRedisInstance) LocalName() string {
	return ri.Name
}

func (ri *DataRedisInstance) Configuration() interface{} {
	return ri.Args
}

func (ri *DataRedisInstance) Attributes() dataRedisInstanceAttributes {
	return dataRedisInstanceAttributes{ref: terra.ReferenceDataResource(ri)}
}

type DataRedisInstanceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// MaintenancePolicy: min=0
	MaintenancePolicy []dataredisinstance.MaintenancePolicy `hcl:"maintenance_policy,block" validate:"min=0"`
	// MaintenanceSchedule: min=0
	MaintenanceSchedule []dataredisinstance.MaintenanceSchedule `hcl:"maintenance_schedule,block" validate:"min=0"`
	// Nodes: min=0
	Nodes []dataredisinstance.Nodes `hcl:"nodes,block" validate:"min=0"`
	// PersistenceConfig: min=0
	PersistenceConfig []dataredisinstance.PersistenceConfig `hcl:"persistence_config,block" validate:"min=0"`
	// ServerCaCerts: min=0
	ServerCaCerts []dataredisinstance.ServerCaCerts `hcl:"server_ca_certs,block" validate:"min=0"`
}
type dataRedisInstanceAttributes struct {
	ref terra.Reference
}

func (ri dataRedisInstanceAttributes) AlternativeLocationId() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("alternative_location_id"))
}

func (ri dataRedisInstanceAttributes) AuthEnabled() terra.BoolValue {
	return terra.ReferenceBool(ri.ref.Append("auth_enabled"))
}

func (ri dataRedisInstanceAttributes) AuthString() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("auth_string"))
}

func (ri dataRedisInstanceAttributes) AuthorizedNetwork() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("authorized_network"))
}

func (ri dataRedisInstanceAttributes) ConnectMode() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("connect_mode"))
}

func (ri dataRedisInstanceAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("create_time"))
}

func (ri dataRedisInstanceAttributes) CurrentLocationId() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("current_location_id"))
}

func (ri dataRedisInstanceAttributes) CustomerManagedKey() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("customer_managed_key"))
}

func (ri dataRedisInstanceAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("display_name"))
}

func (ri dataRedisInstanceAttributes) Host() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("host"))
}

func (ri dataRedisInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("id"))
}

func (ri dataRedisInstanceAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ri.ref.Append("labels"))
}

func (ri dataRedisInstanceAttributes) LocationId() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("location_id"))
}

func (ri dataRedisInstanceAttributes) MemorySizeGb() terra.NumberValue {
	return terra.ReferenceNumber(ri.ref.Append("memory_size_gb"))
}

func (ri dataRedisInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("name"))
}

func (ri dataRedisInstanceAttributes) PersistenceIamIdentity() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("persistence_iam_identity"))
}

func (ri dataRedisInstanceAttributes) Port() terra.NumberValue {
	return terra.ReferenceNumber(ri.ref.Append("port"))
}

func (ri dataRedisInstanceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("project"))
}

func (ri dataRedisInstanceAttributes) ReadEndpoint() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("read_endpoint"))
}

func (ri dataRedisInstanceAttributes) ReadEndpointPort() terra.NumberValue {
	return terra.ReferenceNumber(ri.ref.Append("read_endpoint_port"))
}

func (ri dataRedisInstanceAttributes) ReadReplicasMode() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("read_replicas_mode"))
}

func (ri dataRedisInstanceAttributes) RedisConfigs() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ri.ref.Append("redis_configs"))
}

func (ri dataRedisInstanceAttributes) RedisVersion() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("redis_version"))
}

func (ri dataRedisInstanceAttributes) Region() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("region"))
}

func (ri dataRedisInstanceAttributes) ReplicaCount() terra.NumberValue {
	return terra.ReferenceNumber(ri.ref.Append("replica_count"))
}

func (ri dataRedisInstanceAttributes) ReservedIpRange() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("reserved_ip_range"))
}

func (ri dataRedisInstanceAttributes) SecondaryIpRange() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("secondary_ip_range"))
}

func (ri dataRedisInstanceAttributes) Tier() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("tier"))
}

func (ri dataRedisInstanceAttributes) TransitEncryptionMode() terra.StringValue {
	return terra.ReferenceString(ri.ref.Append("transit_encryption_mode"))
}

func (ri dataRedisInstanceAttributes) MaintenancePolicy() terra.ListValue[dataredisinstance.MaintenancePolicyAttributes] {
	return terra.ReferenceList[dataredisinstance.MaintenancePolicyAttributes](ri.ref.Append("maintenance_policy"))
}

func (ri dataRedisInstanceAttributes) MaintenanceSchedule() terra.ListValue[dataredisinstance.MaintenanceScheduleAttributes] {
	return terra.ReferenceList[dataredisinstance.MaintenanceScheduleAttributes](ri.ref.Append("maintenance_schedule"))
}

func (ri dataRedisInstanceAttributes) Nodes() terra.ListValue[dataredisinstance.NodesAttributes] {
	return terra.ReferenceList[dataredisinstance.NodesAttributes](ri.ref.Append("nodes"))
}

func (ri dataRedisInstanceAttributes) PersistenceConfig() terra.ListValue[dataredisinstance.PersistenceConfigAttributes] {
	return terra.ReferenceList[dataredisinstance.PersistenceConfigAttributes](ri.ref.Append("persistence_config"))
}

func (ri dataRedisInstanceAttributes) ServerCaCerts() terra.ListValue[dataredisinstance.ServerCaCertsAttributes] {
	return terra.ReferenceList[dataredisinstance.ServerCaCertsAttributes](ri.ref.Append("server_ca_certs"))
}
