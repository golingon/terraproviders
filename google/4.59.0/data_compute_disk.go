// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomputedisk "github.com/golingon/terraproviders/google/4.59.0/datacomputedisk"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComputeDisk(name string, args DataComputeDiskArgs) *DataComputeDisk {
	return &DataComputeDisk{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeDisk)(nil)

type DataComputeDisk struct {
	Name string
	Args DataComputeDiskArgs
}

func (cd *DataComputeDisk) DataSource() string {
	return "google_compute_disk"
}

func (cd *DataComputeDisk) LocalName() string {
	return cd.Name
}

func (cd *DataComputeDisk) Configuration() interface{} {
	return cd.Args
}

func (cd *DataComputeDisk) Attributes() dataComputeDiskAttributes {
	return dataComputeDiskAttributes{ref: terra.ReferenceDataResource(cd)}
}

type DataComputeDiskArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
	// DiskEncryptionKey: min=0
	DiskEncryptionKey []datacomputedisk.DiskEncryptionKey `hcl:"disk_encryption_key,block" validate:"min=0"`
	// SourceImageEncryptionKey: min=0
	SourceImageEncryptionKey []datacomputedisk.SourceImageEncryptionKey `hcl:"source_image_encryption_key,block" validate:"min=0"`
	// SourceSnapshotEncryptionKey: min=0
	SourceSnapshotEncryptionKey []datacomputedisk.SourceSnapshotEncryptionKey `hcl:"source_snapshot_encryption_key,block" validate:"min=0"`
}
type dataComputeDiskAttributes struct {
	ref terra.Reference
}

func (cd dataComputeDiskAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("creation_timestamp"))
}

func (cd dataComputeDiskAttributes) Description() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("description"))
}

func (cd dataComputeDiskAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("id"))
}

func (cd dataComputeDiskAttributes) Image() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("image"))
}

func (cd dataComputeDiskAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("label_fingerprint"))
}

func (cd dataComputeDiskAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cd.ref.Append("labels"))
}

func (cd dataComputeDiskAttributes) LastAttachTimestamp() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("last_attach_timestamp"))
}

func (cd dataComputeDiskAttributes) LastDetachTimestamp() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("last_detach_timestamp"))
}

func (cd dataComputeDiskAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("name"))
}

func (cd dataComputeDiskAttributes) PhysicalBlockSizeBytes() terra.NumberValue {
	return terra.ReferenceNumber(cd.ref.Append("physical_block_size_bytes"))
}

func (cd dataComputeDiskAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("project"))
}

func (cd dataComputeDiskAttributes) ProvisionedIops() terra.NumberValue {
	return terra.ReferenceNumber(cd.ref.Append("provisioned_iops"))
}

func (cd dataComputeDiskAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("self_link"))
}

func (cd dataComputeDiskAttributes) Size() terra.NumberValue {
	return terra.ReferenceNumber(cd.ref.Append("size"))
}

func (cd dataComputeDiskAttributes) Snapshot() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("snapshot"))
}

func (cd dataComputeDiskAttributes) SourceDisk() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("source_disk"))
}

func (cd dataComputeDiskAttributes) SourceDiskId() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("source_disk_id"))
}

func (cd dataComputeDiskAttributes) SourceImageId() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("source_image_id"))
}

func (cd dataComputeDiskAttributes) SourceSnapshotId() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("source_snapshot_id"))
}

func (cd dataComputeDiskAttributes) Type() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("type"))
}

func (cd dataComputeDiskAttributes) Users() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cd.ref.Append("users"))
}

func (cd dataComputeDiskAttributes) Zone() terra.StringValue {
	return terra.ReferenceString(cd.ref.Append("zone"))
}

func (cd dataComputeDiskAttributes) DiskEncryptionKey() terra.ListValue[datacomputedisk.DiskEncryptionKeyAttributes] {
	return terra.ReferenceList[datacomputedisk.DiskEncryptionKeyAttributes](cd.ref.Append("disk_encryption_key"))
}

func (cd dataComputeDiskAttributes) SourceImageEncryptionKey() terra.ListValue[datacomputedisk.SourceImageEncryptionKeyAttributes] {
	return terra.ReferenceList[datacomputedisk.SourceImageEncryptionKeyAttributes](cd.ref.Append("source_image_encryption_key"))
}

func (cd dataComputeDiskAttributes) SourceSnapshotEncryptionKey() terra.ListValue[datacomputedisk.SourceSnapshotEncryptionKeyAttributes] {
	return terra.ReferenceList[datacomputedisk.SourceSnapshotEncryptionKeyAttributes](cd.ref.Append("source_snapshot_encryption_key"))
}
