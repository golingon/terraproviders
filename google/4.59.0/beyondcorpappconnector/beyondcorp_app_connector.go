// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package beyondcorpappconnector

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type PrincipalInfo struct {
	// ServiceAccount: required
	ServiceAccount *ServiceAccount `hcl:"service_account,block" validate:"required"`
}

type ServiceAccount struct {
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type PrincipalInfoAttributes struct {
	ref terra.Reference
}

func (pi PrincipalInfoAttributes) InternalRef() terra.Reference {
	return pi.ref
}

func (pi PrincipalInfoAttributes) InternalWithRef(ref terra.Reference) PrincipalInfoAttributes {
	return PrincipalInfoAttributes{ref: ref}
}

func (pi PrincipalInfoAttributes) InternalTokens() hclwrite.Tokens {
	return pi.ref.InternalTokens()
}

func (pi PrincipalInfoAttributes) ServiceAccount() terra.ListValue[ServiceAccountAttributes] {
	return terra.ReferenceList[ServiceAccountAttributes](pi.ref.Append("service_account"))
}

type ServiceAccountAttributes struct {
	ref terra.Reference
}

func (sa ServiceAccountAttributes) InternalRef() terra.Reference {
	return sa.ref
}

func (sa ServiceAccountAttributes) InternalWithRef(ref terra.Reference) ServiceAccountAttributes {
	return ServiceAccountAttributes{ref: ref}
}

func (sa ServiceAccountAttributes) InternalTokens() hclwrite.Tokens {
	return sa.ref.InternalTokens()
}

func (sa ServiceAccountAttributes) Email() terra.StringValue {
	return terra.ReferenceString(sa.ref.Append("email"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type PrincipalInfoState struct {
	ServiceAccount []ServiceAccountState `json:"service_account"`
}

type ServiceAccountState struct {
	Email string `json:"email"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
