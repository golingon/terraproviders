// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataProjectService(name string, args DataProjectServiceArgs) *DataProjectService {
	return &DataProjectService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataProjectService)(nil)

type DataProjectService struct {
	Name string
	Args DataProjectServiceArgs
}

func (ps *DataProjectService) DataSource() string {
	return "google_project_service"
}

func (ps *DataProjectService) LocalName() string {
	return ps.Name
}

func (ps *DataProjectService) Configuration() interface{} {
	return ps.Args
}

func (ps *DataProjectService) Attributes() dataProjectServiceAttributes {
	return dataProjectServiceAttributes{ref: terra.ReferenceDataResource(ps)}
}

type DataProjectServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
}
type dataProjectServiceAttributes struct {
	ref terra.Reference
}

func (ps dataProjectServiceAttributes) DisableDependentServices() terra.BoolValue {
	return terra.ReferenceBool(ps.ref.Append("disable_dependent_services"))
}

func (ps dataProjectServiceAttributes) DisableOnDestroy() terra.BoolValue {
	return terra.ReferenceBool(ps.ref.Append("disable_on_destroy"))
}

func (ps dataProjectServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("id"))
}

func (ps dataProjectServiceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("project"))
}

func (ps dataProjectServiceAttributes) Service() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("service"))
}
