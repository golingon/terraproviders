// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	privatecacertificatetemplateiambinding "github.com/golingon/terraproviders/google/4.59.0/privatecacertificatetemplateiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPrivatecaCertificateTemplateIamBinding(name string, args PrivatecaCertificateTemplateIamBindingArgs) *PrivatecaCertificateTemplateIamBinding {
	return &PrivatecaCertificateTemplateIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PrivatecaCertificateTemplateIamBinding)(nil)

type PrivatecaCertificateTemplateIamBinding struct {
	Name  string
	Args  PrivatecaCertificateTemplateIamBindingArgs
	state *privatecaCertificateTemplateIamBindingState
}

func (pctib *PrivatecaCertificateTemplateIamBinding) Type() string {
	return "google_privateca_certificate_template_iam_binding"
}

func (pctib *PrivatecaCertificateTemplateIamBinding) LocalName() string {
	return pctib.Name
}

func (pctib *PrivatecaCertificateTemplateIamBinding) Configuration() interface{} {
	return pctib.Args
}

func (pctib *PrivatecaCertificateTemplateIamBinding) Attributes() privatecaCertificateTemplateIamBindingAttributes {
	return privatecaCertificateTemplateIamBindingAttributes{ref: terra.ReferenceResource(pctib)}
}

func (pctib *PrivatecaCertificateTemplateIamBinding) ImportState(av io.Reader) error {
	pctib.state = &privatecaCertificateTemplateIamBindingState{}
	if err := json.NewDecoder(av).Decode(pctib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pctib.Type(), pctib.LocalName(), err)
	}
	return nil
}

func (pctib *PrivatecaCertificateTemplateIamBinding) State() (*privatecaCertificateTemplateIamBindingState, bool) {
	return pctib.state, pctib.state != nil
}

func (pctib *PrivatecaCertificateTemplateIamBinding) StateMust() *privatecaCertificateTemplateIamBindingState {
	if pctib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pctib.Type(), pctib.LocalName()))
	}
	return pctib.state
}

func (pctib *PrivatecaCertificateTemplateIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(pctib)
}

type PrivatecaCertificateTemplateIamBindingArgs struct {
	// CertificateTemplate: string, required
	CertificateTemplate terra.StringValue `hcl:"certificate_template,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *privatecacertificatetemplateiambinding.Condition `hcl:"condition,block"`
	// DependsOn contains resources that PrivatecaCertificateTemplateIamBinding depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type privatecaCertificateTemplateIamBindingAttributes struct {
	ref terra.Reference
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) CertificateTemplate() terra.StringValue {
	return terra.ReferenceString(pctib.ref.Append("certificate_template"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(pctib.ref.Append("etag"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pctib.ref.Append("id"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Location() terra.StringValue {
	return terra.ReferenceString(pctib.ref.Append("location"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](pctib.ref.Append("members"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceString(pctib.ref.Append("project"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceString(pctib.ref.Append("role"))
}

func (pctib privatecaCertificateTemplateIamBindingAttributes) Condition() terra.ListValue[privatecacertificatetemplateiambinding.ConditionAttributes] {
	return terra.ReferenceList[privatecacertificatetemplateiambinding.ConditionAttributes](pctib.ref.Append("condition"))
}

type privatecaCertificateTemplateIamBindingState struct {
	CertificateTemplate string                                                  `json:"certificate_template"`
	Etag                string                                                  `json:"etag"`
	Id                  string                                                  `json:"id"`
	Location            string                                                  `json:"location"`
	Members             []string                                                `json:"members"`
	Project             string                                                  `json:"project"`
	Role                string                                                  `json:"role"`
	Condition           []privatecacertificatetemplateiambinding.ConditionState `json:"condition"`
}
