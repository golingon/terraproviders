// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

func NewDataContainerAzureVersions(name string, args DataContainerAzureVersionsArgs) *DataContainerAzureVersions {
	return &DataContainerAzureVersions{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataContainerAzureVersions)(nil)

type DataContainerAzureVersions struct {
	Name string
	Args DataContainerAzureVersionsArgs
}

func (cav *DataContainerAzureVersions) DataSource() string {
	return "google_container_azure_versions"
}

func (cav *DataContainerAzureVersions) LocalName() string {
	return cav.Name
}

func (cav *DataContainerAzureVersions) Configuration() interface{} {
	return cav.Args
}

func (cav *DataContainerAzureVersions) Attributes() dataContainerAzureVersionsAttributes {
	return dataContainerAzureVersionsAttributes{ref: terra.ReferenceDataResource(cav)}
}

type DataContainerAzureVersionsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataContainerAzureVersionsAttributes struct {
	ref terra.Reference
}

func (cav dataContainerAzureVersionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cav.ref.Append("id"))
}

func (cav dataContainerAzureVersionsAttributes) Location() terra.StringValue {
	return terra.ReferenceString(cav.ref.Append("location"))
}

func (cav dataContainerAzureVersionsAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cav.ref.Append("project"))
}

func (cav dataContainerAzureVersionsAttributes) SupportedRegions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cav.ref.Append("supported_regions"))
}

func (cav dataContainerAzureVersionsAttributes) ValidVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cav.ref.Append("valid_versions"))
}
