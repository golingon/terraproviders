// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	iaptunneliambinding "github.com/golingon/terraproviders/google/4.59.0/iaptunneliambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIapTunnelIamBinding creates a new instance of [IapTunnelIamBinding].
func NewIapTunnelIamBinding(name string, args IapTunnelIamBindingArgs) *IapTunnelIamBinding {
	return &IapTunnelIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapTunnelIamBinding)(nil)

// IapTunnelIamBinding represents the Terraform resource google_iap_tunnel_iam_binding.
type IapTunnelIamBinding struct {
	Name      string
	Args      IapTunnelIamBindingArgs
	state     *iapTunnelIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IapTunnelIamBinding].
func (itib *IapTunnelIamBinding) Type() string {
	return "google_iap_tunnel_iam_binding"
}

// LocalName returns the local name for [IapTunnelIamBinding].
func (itib *IapTunnelIamBinding) LocalName() string {
	return itib.Name
}

// Configuration returns the configuration (args) for [IapTunnelIamBinding].
func (itib *IapTunnelIamBinding) Configuration() interface{} {
	return itib.Args
}

// DependOn is used for other resources to depend on [IapTunnelIamBinding].
func (itib *IapTunnelIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(itib)
}

// Dependencies returns the list of resources [IapTunnelIamBinding] depends_on.
func (itib *IapTunnelIamBinding) Dependencies() terra.Dependencies {
	return itib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IapTunnelIamBinding].
func (itib *IapTunnelIamBinding) LifecycleManagement() *terra.Lifecycle {
	return itib.Lifecycle
}

// Attributes returns the attributes for [IapTunnelIamBinding].
func (itib *IapTunnelIamBinding) Attributes() iapTunnelIamBindingAttributes {
	return iapTunnelIamBindingAttributes{ref: terra.ReferenceResource(itib)}
}

// ImportState imports the given attribute values into [IapTunnelIamBinding]'s state.
func (itib *IapTunnelIamBinding) ImportState(av io.Reader) error {
	itib.state = &iapTunnelIamBindingState{}
	if err := json.NewDecoder(av).Decode(itib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itib.Type(), itib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IapTunnelIamBinding] has state.
func (itib *IapTunnelIamBinding) State() (*iapTunnelIamBindingState, bool) {
	return itib.state, itib.state != nil
}

// StateMust returns the state for [IapTunnelIamBinding]. Panics if the state is nil.
func (itib *IapTunnelIamBinding) StateMust() *iapTunnelIamBindingState {
	if itib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itib.Type(), itib.LocalName()))
	}
	return itib.state
}

// IapTunnelIamBindingArgs contains the configurations for google_iap_tunnel_iam_binding.
type IapTunnelIamBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *iaptunneliambinding.Condition `hcl:"condition,block"`
}
type iapTunnelIamBindingAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_iap_tunnel_iam_binding.
func (itib iapTunnelIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(itib.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_tunnel_iam_binding.
func (itib iapTunnelIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(itib.ref.Append("id"))
}

// Members returns a reference to field members of google_iap_tunnel_iam_binding.
func (itib iapTunnelIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](itib.ref.Append("members"))
}

// Project returns a reference to field project of google_iap_tunnel_iam_binding.
func (itib iapTunnelIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(itib.ref.Append("project"))
}

// Role returns a reference to field role of google_iap_tunnel_iam_binding.
func (itib iapTunnelIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(itib.ref.Append("role"))
}

func (itib iapTunnelIamBindingAttributes) Condition() terra.ListValue[iaptunneliambinding.ConditionAttributes] {
	return terra.ReferenceAsList[iaptunneliambinding.ConditionAttributes](itib.ref.Append("condition"))
}

type iapTunnelIamBindingState struct {
	Etag      string                               `json:"etag"`
	Id        string                               `json:"id"`
	Members   []string                             `json:"members"`
	Project   string                               `json:"project"`
	Role      string                               `json:"role"`
	Condition []iaptunneliambinding.ConditionState `json:"condition"`
}
