// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewStorageNotification(name string, args StorageNotificationArgs) *StorageNotification {
	return &StorageNotification{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StorageNotification)(nil)

type StorageNotification struct {
	Name  string
	Args  StorageNotificationArgs
	state *storageNotificationState
}

func (sn *StorageNotification) Type() string {
	return "google_storage_notification"
}

func (sn *StorageNotification) LocalName() string {
	return sn.Name
}

func (sn *StorageNotification) Configuration() interface{} {
	return sn.Args
}

func (sn *StorageNotification) Attributes() storageNotificationAttributes {
	return storageNotificationAttributes{ref: terra.ReferenceResource(sn)}
}

func (sn *StorageNotification) ImportState(av io.Reader) error {
	sn.state = &storageNotificationState{}
	if err := json.NewDecoder(av).Decode(sn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sn.Type(), sn.LocalName(), err)
	}
	return nil
}

func (sn *StorageNotification) State() (*storageNotificationState, bool) {
	return sn.state, sn.state != nil
}

func (sn *StorageNotification) StateMust() *storageNotificationState {
	if sn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sn.Type(), sn.LocalName()))
	}
	return sn.state
}

func (sn *StorageNotification) DependOn() terra.Reference {
	return terra.ReferenceResource(sn)
}

type StorageNotificationArgs struct {
	// Bucket: string, required
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// CustomAttributes: map of string, optional
	CustomAttributes terra.MapValue[terra.StringValue] `hcl:"custom_attributes,attr"`
	// EventTypes: set of string, optional
	EventTypes terra.SetValue[terra.StringValue] `hcl:"event_types,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ObjectNamePrefix: string, optional
	ObjectNamePrefix terra.StringValue `hcl:"object_name_prefix,attr"`
	// PayloadFormat: string, required
	PayloadFormat terra.StringValue `hcl:"payload_format,attr" validate:"required"`
	// Topic: string, required
	Topic terra.StringValue `hcl:"topic,attr" validate:"required"`
	// DependsOn contains resources that StorageNotification depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type storageNotificationAttributes struct {
	ref terra.Reference
}

func (sn storageNotificationAttributes) Bucket() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("bucket"))
}

func (sn storageNotificationAttributes) CustomAttributes() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sn.ref.Append("custom_attributes"))
}

func (sn storageNotificationAttributes) EventTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sn.ref.Append("event_types"))
}

func (sn storageNotificationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("id"))
}

func (sn storageNotificationAttributes) NotificationId() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("notification_id"))
}

func (sn storageNotificationAttributes) ObjectNamePrefix() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("object_name_prefix"))
}

func (sn storageNotificationAttributes) PayloadFormat() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("payload_format"))
}

func (sn storageNotificationAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("self_link"))
}

func (sn storageNotificationAttributes) Topic() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("topic"))
}

type storageNotificationState struct {
	Bucket           string            `json:"bucket"`
	CustomAttributes map[string]string `json:"custom_attributes"`
	EventTypes       []string          `json:"event_types"`
	Id               string            `json:"id"`
	NotificationId   string            `json:"notification_id"`
	ObjectNamePrefix string            `json:"object_name_prefix"`
	PayloadFormat    string            `json:"payload_format"`
	SelfLink         string            `json:"self_link"`
	Topic            string            `json:"topic"`
}
