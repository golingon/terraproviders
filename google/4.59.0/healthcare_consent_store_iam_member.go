// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	healthcareconsentstoreiammember "github.com/golingon/terraproviders/google/4.59.0/healthcareconsentstoreiammember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewHealthcareConsentStoreIamMember(name string, args HealthcareConsentStoreIamMemberArgs) *HealthcareConsentStoreIamMember {
	return &HealthcareConsentStoreIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*HealthcareConsentStoreIamMember)(nil)

type HealthcareConsentStoreIamMember struct {
	Name  string
	Args  HealthcareConsentStoreIamMemberArgs
	state *healthcareConsentStoreIamMemberState
}

func (hcsim *HealthcareConsentStoreIamMember) Type() string {
	return "google_healthcare_consent_store_iam_member"
}

func (hcsim *HealthcareConsentStoreIamMember) LocalName() string {
	return hcsim.Name
}

func (hcsim *HealthcareConsentStoreIamMember) Configuration() interface{} {
	return hcsim.Args
}

func (hcsim *HealthcareConsentStoreIamMember) Attributes() healthcareConsentStoreIamMemberAttributes {
	return healthcareConsentStoreIamMemberAttributes{ref: terra.ReferenceResource(hcsim)}
}

func (hcsim *HealthcareConsentStoreIamMember) ImportState(av io.Reader) error {
	hcsim.state = &healthcareConsentStoreIamMemberState{}
	if err := json.NewDecoder(av).Decode(hcsim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", hcsim.Type(), hcsim.LocalName(), err)
	}
	return nil
}

func (hcsim *HealthcareConsentStoreIamMember) State() (*healthcareConsentStoreIamMemberState, bool) {
	return hcsim.state, hcsim.state != nil
}

func (hcsim *HealthcareConsentStoreIamMember) StateMust() *healthcareConsentStoreIamMemberState {
	if hcsim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", hcsim.Type(), hcsim.LocalName()))
	}
	return hcsim.state
}

func (hcsim *HealthcareConsentStoreIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(hcsim)
}

type HealthcareConsentStoreIamMemberArgs struct {
	// ConsentStoreId: string, required
	ConsentStoreId terra.StringValue `hcl:"consent_store_id,attr" validate:"required"`
	// Dataset: string, required
	Dataset terra.StringValue `hcl:"dataset,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *healthcareconsentstoreiammember.Condition `hcl:"condition,block"`
	// DependsOn contains resources that HealthcareConsentStoreIamMember depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type healthcareConsentStoreIamMemberAttributes struct {
	ref terra.Reference
}

func (hcsim healthcareConsentStoreIamMemberAttributes) ConsentStoreId() terra.StringValue {
	return terra.ReferenceString(hcsim.ref.Append("consent_store_id"))
}

func (hcsim healthcareConsentStoreIamMemberAttributes) Dataset() terra.StringValue {
	return terra.ReferenceString(hcsim.ref.Append("dataset"))
}

func (hcsim healthcareConsentStoreIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceString(hcsim.ref.Append("etag"))
}

func (hcsim healthcareConsentStoreIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceString(hcsim.ref.Append("id"))
}

func (hcsim healthcareConsentStoreIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceString(hcsim.ref.Append("member"))
}

func (hcsim healthcareConsentStoreIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceString(hcsim.ref.Append("role"))
}

func (hcsim healthcareConsentStoreIamMemberAttributes) Condition() terra.ListValue[healthcareconsentstoreiammember.ConditionAttributes] {
	return terra.ReferenceList[healthcareconsentstoreiammember.ConditionAttributes](hcsim.ref.Append("condition"))
}

type healthcareConsentStoreIamMemberState struct {
	ConsentStoreId string                                           `json:"consent_store_id"`
	Dataset        string                                           `json:"dataset"`
	Etag           string                                           `json:"etag"`
	Id             string                                           `json:"id"`
	Member         string                                           `json:"member"`
	Role           string                                           `json:"role"`
	Condition      []healthcareconsentstoreiammember.ConditionState `json:"condition"`
}
