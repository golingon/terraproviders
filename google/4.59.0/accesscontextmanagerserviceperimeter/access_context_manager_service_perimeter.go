// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package accesscontextmanagerserviceperimeter

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Spec struct {
	// AccessLevels: list of string, optional
	AccessLevels terra.ListValue[terra.StringValue] `hcl:"access_levels,attr"`
	// Resources: list of string, optional
	Resources terra.ListValue[terra.StringValue] `hcl:"resources,attr"`
	// RestrictedServices: list of string, optional
	RestrictedServices terra.ListValue[terra.StringValue] `hcl:"restricted_services,attr"`
	// SpecEgressPolicies: min=0
	EgressPolicies []SpecEgressPolicies `hcl:"egress_policies,block" validate:"min=0"`
	// SpecIngressPolicies: min=0
	IngressPolicies []SpecIngressPolicies `hcl:"ingress_policies,block" validate:"min=0"`
	// SpecVpcAccessibleServices: optional
	VpcAccessibleServices *SpecVpcAccessibleServices `hcl:"vpc_accessible_services,block"`
}

type SpecEgressPolicies struct {
	// SpecEgressPoliciesEgressFrom: optional
	EgressFrom *SpecEgressPoliciesEgressFrom `hcl:"egress_from,block"`
	// SpecEgressPoliciesEgressTo: optional
	EgressTo *SpecEgressPoliciesEgressTo `hcl:"egress_to,block"`
}

type SpecEgressPoliciesEgressFrom struct {
	// Identities: list of string, optional
	Identities terra.ListValue[terra.StringValue] `hcl:"identities,attr"`
	// IdentityType: string, optional
	IdentityType terra.StringValue `hcl:"identity_type,attr"`
}

type SpecEgressPoliciesEgressTo struct {
	// ExternalResources: list of string, optional
	ExternalResources terra.ListValue[terra.StringValue] `hcl:"external_resources,attr"`
	// Resources: list of string, optional
	Resources terra.ListValue[terra.StringValue] `hcl:"resources,attr"`
	// SpecEgressPoliciesEgressToOperations: min=0
	Operations []SpecEgressPoliciesEgressToOperations `hcl:"operations,block" validate:"min=0"`
}

type SpecEgressPoliciesEgressToOperations struct {
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// SpecEgressPoliciesEgressToOperationsMethodSelectors: min=0
	MethodSelectors []SpecEgressPoliciesEgressToOperationsMethodSelectors `hcl:"method_selectors,block" validate:"min=0"`
}

type SpecEgressPoliciesEgressToOperationsMethodSelectors struct {
	// Method: string, optional
	Method terra.StringValue `hcl:"method,attr"`
	// Permission: string, optional
	Permission terra.StringValue `hcl:"permission,attr"`
}

type SpecIngressPolicies struct {
	// SpecIngressPoliciesIngressFrom: optional
	IngressFrom *SpecIngressPoliciesIngressFrom `hcl:"ingress_from,block"`
	// SpecIngressPoliciesIngressTo: optional
	IngressTo *SpecIngressPoliciesIngressTo `hcl:"ingress_to,block"`
}

type SpecIngressPoliciesIngressFrom struct {
	// Identities: list of string, optional
	Identities terra.ListValue[terra.StringValue] `hcl:"identities,attr"`
	// IdentityType: string, optional
	IdentityType terra.StringValue `hcl:"identity_type,attr"`
	// SpecIngressPoliciesIngressFromSources: min=0
	Sources []SpecIngressPoliciesIngressFromSources `hcl:"sources,block" validate:"min=0"`
}

type SpecIngressPoliciesIngressFromSources struct {
	// AccessLevel: string, optional
	AccessLevel terra.StringValue `hcl:"access_level,attr"`
	// Resource: string, optional
	Resource terra.StringValue `hcl:"resource,attr"`
}

type SpecIngressPoliciesIngressTo struct {
	// Resources: list of string, optional
	Resources terra.ListValue[terra.StringValue] `hcl:"resources,attr"`
	// SpecIngressPoliciesIngressToOperations: min=0
	Operations []SpecIngressPoliciesIngressToOperations `hcl:"operations,block" validate:"min=0"`
}

type SpecIngressPoliciesIngressToOperations struct {
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// SpecIngressPoliciesIngressToOperationsMethodSelectors: min=0
	MethodSelectors []SpecIngressPoliciesIngressToOperationsMethodSelectors `hcl:"method_selectors,block" validate:"min=0"`
}

type SpecIngressPoliciesIngressToOperationsMethodSelectors struct {
	// Method: string, optional
	Method terra.StringValue `hcl:"method,attr"`
	// Permission: string, optional
	Permission terra.StringValue `hcl:"permission,attr"`
}

type SpecVpcAccessibleServices struct {
	// AllowedServices: list of string, optional
	AllowedServices terra.ListValue[terra.StringValue] `hcl:"allowed_services,attr"`
	// EnableRestriction: bool, optional
	EnableRestriction terra.BoolValue `hcl:"enable_restriction,attr"`
}

type Status struct {
	// AccessLevels: list of string, optional
	AccessLevels terra.ListValue[terra.StringValue] `hcl:"access_levels,attr"`
	// Resources: list of string, optional
	Resources terra.ListValue[terra.StringValue] `hcl:"resources,attr"`
	// RestrictedServices: set of string, optional
	RestrictedServices terra.SetValue[terra.StringValue] `hcl:"restricted_services,attr"`
	// StatusEgressPolicies: min=0
	EgressPolicies []StatusEgressPolicies `hcl:"egress_policies,block" validate:"min=0"`
	// StatusIngressPolicies: min=0
	IngressPolicies []StatusIngressPolicies `hcl:"ingress_policies,block" validate:"min=0"`
	// StatusVpcAccessibleServices: optional
	VpcAccessibleServices *StatusVpcAccessibleServices `hcl:"vpc_accessible_services,block"`
}

type StatusEgressPolicies struct {
	// StatusEgressPoliciesEgressFrom: optional
	EgressFrom *StatusEgressPoliciesEgressFrom `hcl:"egress_from,block"`
	// StatusEgressPoliciesEgressTo: optional
	EgressTo *StatusEgressPoliciesEgressTo `hcl:"egress_to,block"`
}

type StatusEgressPoliciesEgressFrom struct {
	// Identities: list of string, optional
	Identities terra.ListValue[terra.StringValue] `hcl:"identities,attr"`
	// IdentityType: string, optional
	IdentityType terra.StringValue `hcl:"identity_type,attr"`
}

type StatusEgressPoliciesEgressTo struct {
	// ExternalResources: list of string, optional
	ExternalResources terra.ListValue[terra.StringValue] `hcl:"external_resources,attr"`
	// Resources: list of string, optional
	Resources terra.ListValue[terra.StringValue] `hcl:"resources,attr"`
	// StatusEgressPoliciesEgressToOperations: min=0
	Operations []StatusEgressPoliciesEgressToOperations `hcl:"operations,block" validate:"min=0"`
}

type StatusEgressPoliciesEgressToOperations struct {
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// StatusEgressPoliciesEgressToOperationsMethodSelectors: min=0
	MethodSelectors []StatusEgressPoliciesEgressToOperationsMethodSelectors `hcl:"method_selectors,block" validate:"min=0"`
}

type StatusEgressPoliciesEgressToOperationsMethodSelectors struct {
	// Method: string, optional
	Method terra.StringValue `hcl:"method,attr"`
	// Permission: string, optional
	Permission terra.StringValue `hcl:"permission,attr"`
}

type StatusIngressPolicies struct {
	// StatusIngressPoliciesIngressFrom: optional
	IngressFrom *StatusIngressPoliciesIngressFrom `hcl:"ingress_from,block"`
	// StatusIngressPoliciesIngressTo: optional
	IngressTo *StatusIngressPoliciesIngressTo `hcl:"ingress_to,block"`
}

type StatusIngressPoliciesIngressFrom struct {
	// Identities: list of string, optional
	Identities terra.ListValue[terra.StringValue] `hcl:"identities,attr"`
	// IdentityType: string, optional
	IdentityType terra.StringValue `hcl:"identity_type,attr"`
	// StatusIngressPoliciesIngressFromSources: min=0
	Sources []StatusIngressPoliciesIngressFromSources `hcl:"sources,block" validate:"min=0"`
}

type StatusIngressPoliciesIngressFromSources struct {
	// AccessLevel: string, optional
	AccessLevel terra.StringValue `hcl:"access_level,attr"`
	// Resource: string, optional
	Resource terra.StringValue `hcl:"resource,attr"`
}

type StatusIngressPoliciesIngressTo struct {
	// Resources: list of string, optional
	Resources terra.ListValue[terra.StringValue] `hcl:"resources,attr"`
	// StatusIngressPoliciesIngressToOperations: min=0
	Operations []StatusIngressPoliciesIngressToOperations `hcl:"operations,block" validate:"min=0"`
}

type StatusIngressPoliciesIngressToOperations struct {
	// ServiceName: string, optional
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// StatusIngressPoliciesIngressToOperationsMethodSelectors: min=0
	MethodSelectors []StatusIngressPoliciesIngressToOperationsMethodSelectors `hcl:"method_selectors,block" validate:"min=0"`
}

type StatusIngressPoliciesIngressToOperationsMethodSelectors struct {
	// Method: string, optional
	Method terra.StringValue `hcl:"method,attr"`
	// Permission: string, optional
	Permission terra.StringValue `hcl:"permission,attr"`
}

type StatusVpcAccessibleServices struct {
	// AllowedServices: set of string, optional
	AllowedServices terra.SetValue[terra.StringValue] `hcl:"allowed_services,attr"`
	// EnableRestriction: bool, optional
	EnableRestriction terra.BoolValue `hcl:"enable_restriction,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type SpecAttributes struct {
	ref terra.Reference
}

func (s SpecAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s SpecAttributes) InternalWithRef(ref terra.Reference) SpecAttributes {
	return SpecAttributes{ref: ref}
}

func (s SpecAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s SpecAttributes) AccessLevels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](s.ref.Append("access_levels"))
}

func (s SpecAttributes) Resources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](s.ref.Append("resources"))
}

func (s SpecAttributes) RestrictedServices() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](s.ref.Append("restricted_services"))
}

func (s SpecAttributes) EgressPolicies() terra.ListValue[SpecEgressPoliciesAttributes] {
	return terra.ReferenceList[SpecEgressPoliciesAttributes](s.ref.Append("egress_policies"))
}

func (s SpecAttributes) IngressPolicies() terra.ListValue[SpecIngressPoliciesAttributes] {
	return terra.ReferenceList[SpecIngressPoliciesAttributes](s.ref.Append("ingress_policies"))
}

func (s SpecAttributes) VpcAccessibleServices() terra.ListValue[SpecVpcAccessibleServicesAttributes] {
	return terra.ReferenceList[SpecVpcAccessibleServicesAttributes](s.ref.Append("vpc_accessible_services"))
}

type SpecEgressPoliciesAttributes struct {
	ref terra.Reference
}

func (ep SpecEgressPoliciesAttributes) InternalRef() terra.Reference {
	return ep.ref
}

func (ep SpecEgressPoliciesAttributes) InternalWithRef(ref terra.Reference) SpecEgressPoliciesAttributes {
	return SpecEgressPoliciesAttributes{ref: ref}
}

func (ep SpecEgressPoliciesAttributes) InternalTokens() hclwrite.Tokens {
	return ep.ref.InternalTokens()
}

func (ep SpecEgressPoliciesAttributes) EgressFrom() terra.ListValue[SpecEgressPoliciesEgressFromAttributes] {
	return terra.ReferenceList[SpecEgressPoliciesEgressFromAttributes](ep.ref.Append("egress_from"))
}

func (ep SpecEgressPoliciesAttributes) EgressTo() terra.ListValue[SpecEgressPoliciesEgressToAttributes] {
	return terra.ReferenceList[SpecEgressPoliciesEgressToAttributes](ep.ref.Append("egress_to"))
}

type SpecEgressPoliciesEgressFromAttributes struct {
	ref terra.Reference
}

func (ef SpecEgressPoliciesEgressFromAttributes) InternalRef() terra.Reference {
	return ef.ref
}

func (ef SpecEgressPoliciesEgressFromAttributes) InternalWithRef(ref terra.Reference) SpecEgressPoliciesEgressFromAttributes {
	return SpecEgressPoliciesEgressFromAttributes{ref: ref}
}

func (ef SpecEgressPoliciesEgressFromAttributes) InternalTokens() hclwrite.Tokens {
	return ef.ref.InternalTokens()
}

func (ef SpecEgressPoliciesEgressFromAttributes) Identities() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ef.ref.Append("identities"))
}

func (ef SpecEgressPoliciesEgressFromAttributes) IdentityType() terra.StringValue {
	return terra.ReferenceString(ef.ref.Append("identity_type"))
}

type SpecEgressPoliciesEgressToAttributes struct {
	ref terra.Reference
}

func (et SpecEgressPoliciesEgressToAttributes) InternalRef() terra.Reference {
	return et.ref
}

func (et SpecEgressPoliciesEgressToAttributes) InternalWithRef(ref terra.Reference) SpecEgressPoliciesEgressToAttributes {
	return SpecEgressPoliciesEgressToAttributes{ref: ref}
}

func (et SpecEgressPoliciesEgressToAttributes) InternalTokens() hclwrite.Tokens {
	return et.ref.InternalTokens()
}

func (et SpecEgressPoliciesEgressToAttributes) ExternalResources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](et.ref.Append("external_resources"))
}

func (et SpecEgressPoliciesEgressToAttributes) Resources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](et.ref.Append("resources"))
}

func (et SpecEgressPoliciesEgressToAttributes) Operations() terra.ListValue[SpecEgressPoliciesEgressToOperationsAttributes] {
	return terra.ReferenceList[SpecEgressPoliciesEgressToOperationsAttributes](et.ref.Append("operations"))
}

type SpecEgressPoliciesEgressToOperationsAttributes struct {
	ref terra.Reference
}

func (o SpecEgressPoliciesEgressToOperationsAttributes) InternalRef() terra.Reference {
	return o.ref
}

func (o SpecEgressPoliciesEgressToOperationsAttributes) InternalWithRef(ref terra.Reference) SpecEgressPoliciesEgressToOperationsAttributes {
	return SpecEgressPoliciesEgressToOperationsAttributes{ref: ref}
}

func (o SpecEgressPoliciesEgressToOperationsAttributes) InternalTokens() hclwrite.Tokens {
	return o.ref.InternalTokens()
}

func (o SpecEgressPoliciesEgressToOperationsAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(o.ref.Append("service_name"))
}

func (o SpecEgressPoliciesEgressToOperationsAttributes) MethodSelectors() terra.ListValue[SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes] {
	return terra.ReferenceList[SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes](o.ref.Append("method_selectors"))
}

type SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes struct {
	ref terra.Reference
}

func (ms SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes) InternalRef() terra.Reference {
	return ms.ref
}

func (ms SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes) InternalWithRef(ref terra.Reference) SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes {
	return SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes{ref: ref}
}

func (ms SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes) InternalTokens() hclwrite.Tokens {
	return ms.ref.InternalTokens()
}

func (ms SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes) Method() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("method"))
}

func (ms SpecEgressPoliciesEgressToOperationsMethodSelectorsAttributes) Permission() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("permission"))
}

type SpecIngressPoliciesAttributes struct {
	ref terra.Reference
}

func (ip SpecIngressPoliciesAttributes) InternalRef() terra.Reference {
	return ip.ref
}

func (ip SpecIngressPoliciesAttributes) InternalWithRef(ref terra.Reference) SpecIngressPoliciesAttributes {
	return SpecIngressPoliciesAttributes{ref: ref}
}

func (ip SpecIngressPoliciesAttributes) InternalTokens() hclwrite.Tokens {
	return ip.ref.InternalTokens()
}

func (ip SpecIngressPoliciesAttributes) IngressFrom() terra.ListValue[SpecIngressPoliciesIngressFromAttributes] {
	return terra.ReferenceList[SpecIngressPoliciesIngressFromAttributes](ip.ref.Append("ingress_from"))
}

func (ip SpecIngressPoliciesAttributes) IngressTo() terra.ListValue[SpecIngressPoliciesIngressToAttributes] {
	return terra.ReferenceList[SpecIngressPoliciesIngressToAttributes](ip.ref.Append("ingress_to"))
}

type SpecIngressPoliciesIngressFromAttributes struct {
	ref terra.Reference
}

func (_if SpecIngressPoliciesIngressFromAttributes) InternalRef() terra.Reference {
	return _if.ref
}

func (_if SpecIngressPoliciesIngressFromAttributes) InternalWithRef(ref terra.Reference) SpecIngressPoliciesIngressFromAttributes {
	return SpecIngressPoliciesIngressFromAttributes{ref: ref}
}

func (_if SpecIngressPoliciesIngressFromAttributes) InternalTokens() hclwrite.Tokens {
	return _if.ref.InternalTokens()
}

func (_if SpecIngressPoliciesIngressFromAttributes) Identities() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](_if.ref.Append("identities"))
}

func (_if SpecIngressPoliciesIngressFromAttributes) IdentityType() terra.StringValue {
	return terra.ReferenceString(_if.ref.Append("identity_type"))
}

func (_if SpecIngressPoliciesIngressFromAttributes) Sources() terra.ListValue[SpecIngressPoliciesIngressFromSourcesAttributes] {
	return terra.ReferenceList[SpecIngressPoliciesIngressFromSourcesAttributes](_if.ref.Append("sources"))
}

type SpecIngressPoliciesIngressFromSourcesAttributes struct {
	ref terra.Reference
}

func (s SpecIngressPoliciesIngressFromSourcesAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s SpecIngressPoliciesIngressFromSourcesAttributes) InternalWithRef(ref terra.Reference) SpecIngressPoliciesIngressFromSourcesAttributes {
	return SpecIngressPoliciesIngressFromSourcesAttributes{ref: ref}
}

func (s SpecIngressPoliciesIngressFromSourcesAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s SpecIngressPoliciesIngressFromSourcesAttributes) AccessLevel() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("access_level"))
}

func (s SpecIngressPoliciesIngressFromSourcesAttributes) Resource() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("resource"))
}

type SpecIngressPoliciesIngressToAttributes struct {
	ref terra.Reference
}

func (it SpecIngressPoliciesIngressToAttributes) InternalRef() terra.Reference {
	return it.ref
}

func (it SpecIngressPoliciesIngressToAttributes) InternalWithRef(ref terra.Reference) SpecIngressPoliciesIngressToAttributes {
	return SpecIngressPoliciesIngressToAttributes{ref: ref}
}

func (it SpecIngressPoliciesIngressToAttributes) InternalTokens() hclwrite.Tokens {
	return it.ref.InternalTokens()
}

func (it SpecIngressPoliciesIngressToAttributes) Resources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](it.ref.Append("resources"))
}

func (it SpecIngressPoliciesIngressToAttributes) Operations() terra.ListValue[SpecIngressPoliciesIngressToOperationsAttributes] {
	return terra.ReferenceList[SpecIngressPoliciesIngressToOperationsAttributes](it.ref.Append("operations"))
}

type SpecIngressPoliciesIngressToOperationsAttributes struct {
	ref terra.Reference
}

func (o SpecIngressPoliciesIngressToOperationsAttributes) InternalRef() terra.Reference {
	return o.ref
}

func (o SpecIngressPoliciesIngressToOperationsAttributes) InternalWithRef(ref terra.Reference) SpecIngressPoliciesIngressToOperationsAttributes {
	return SpecIngressPoliciesIngressToOperationsAttributes{ref: ref}
}

func (o SpecIngressPoliciesIngressToOperationsAttributes) InternalTokens() hclwrite.Tokens {
	return o.ref.InternalTokens()
}

func (o SpecIngressPoliciesIngressToOperationsAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(o.ref.Append("service_name"))
}

func (o SpecIngressPoliciesIngressToOperationsAttributes) MethodSelectors() terra.ListValue[SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes] {
	return terra.ReferenceList[SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes](o.ref.Append("method_selectors"))
}

type SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes struct {
	ref terra.Reference
}

func (ms SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes) InternalRef() terra.Reference {
	return ms.ref
}

func (ms SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes) InternalWithRef(ref terra.Reference) SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes {
	return SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes{ref: ref}
}

func (ms SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes) InternalTokens() hclwrite.Tokens {
	return ms.ref.InternalTokens()
}

func (ms SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes) Method() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("method"))
}

func (ms SpecIngressPoliciesIngressToOperationsMethodSelectorsAttributes) Permission() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("permission"))
}

type SpecVpcAccessibleServicesAttributes struct {
	ref terra.Reference
}

func (vas SpecVpcAccessibleServicesAttributes) InternalRef() terra.Reference {
	return vas.ref
}

func (vas SpecVpcAccessibleServicesAttributes) InternalWithRef(ref terra.Reference) SpecVpcAccessibleServicesAttributes {
	return SpecVpcAccessibleServicesAttributes{ref: ref}
}

func (vas SpecVpcAccessibleServicesAttributes) InternalTokens() hclwrite.Tokens {
	return vas.ref.InternalTokens()
}

func (vas SpecVpcAccessibleServicesAttributes) AllowedServices() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](vas.ref.Append("allowed_services"))
}

func (vas SpecVpcAccessibleServicesAttributes) EnableRestriction() terra.BoolValue {
	return terra.ReferenceBool(vas.ref.Append("enable_restriction"))
}

type StatusAttributes struct {
	ref terra.Reference
}

func (s StatusAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s StatusAttributes) InternalWithRef(ref terra.Reference) StatusAttributes {
	return StatusAttributes{ref: ref}
}

func (s StatusAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s StatusAttributes) AccessLevels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](s.ref.Append("access_levels"))
}

func (s StatusAttributes) Resources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](s.ref.Append("resources"))
}

func (s StatusAttributes) RestrictedServices() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](s.ref.Append("restricted_services"))
}

func (s StatusAttributes) EgressPolicies() terra.ListValue[StatusEgressPoliciesAttributes] {
	return terra.ReferenceList[StatusEgressPoliciesAttributes](s.ref.Append("egress_policies"))
}

func (s StatusAttributes) IngressPolicies() terra.ListValue[StatusIngressPoliciesAttributes] {
	return terra.ReferenceList[StatusIngressPoliciesAttributes](s.ref.Append("ingress_policies"))
}

func (s StatusAttributes) VpcAccessibleServices() terra.ListValue[StatusVpcAccessibleServicesAttributes] {
	return terra.ReferenceList[StatusVpcAccessibleServicesAttributes](s.ref.Append("vpc_accessible_services"))
}

type StatusEgressPoliciesAttributes struct {
	ref terra.Reference
}

func (ep StatusEgressPoliciesAttributes) InternalRef() terra.Reference {
	return ep.ref
}

func (ep StatusEgressPoliciesAttributes) InternalWithRef(ref terra.Reference) StatusEgressPoliciesAttributes {
	return StatusEgressPoliciesAttributes{ref: ref}
}

func (ep StatusEgressPoliciesAttributes) InternalTokens() hclwrite.Tokens {
	return ep.ref.InternalTokens()
}

func (ep StatusEgressPoliciesAttributes) EgressFrom() terra.ListValue[StatusEgressPoliciesEgressFromAttributes] {
	return terra.ReferenceList[StatusEgressPoliciesEgressFromAttributes](ep.ref.Append("egress_from"))
}

func (ep StatusEgressPoliciesAttributes) EgressTo() terra.ListValue[StatusEgressPoliciesEgressToAttributes] {
	return terra.ReferenceList[StatusEgressPoliciesEgressToAttributes](ep.ref.Append("egress_to"))
}

type StatusEgressPoliciesEgressFromAttributes struct {
	ref terra.Reference
}

func (ef StatusEgressPoliciesEgressFromAttributes) InternalRef() terra.Reference {
	return ef.ref
}

func (ef StatusEgressPoliciesEgressFromAttributes) InternalWithRef(ref terra.Reference) StatusEgressPoliciesEgressFromAttributes {
	return StatusEgressPoliciesEgressFromAttributes{ref: ref}
}

func (ef StatusEgressPoliciesEgressFromAttributes) InternalTokens() hclwrite.Tokens {
	return ef.ref.InternalTokens()
}

func (ef StatusEgressPoliciesEgressFromAttributes) Identities() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ef.ref.Append("identities"))
}

func (ef StatusEgressPoliciesEgressFromAttributes) IdentityType() terra.StringValue {
	return terra.ReferenceString(ef.ref.Append("identity_type"))
}

type StatusEgressPoliciesEgressToAttributes struct {
	ref terra.Reference
}

func (et StatusEgressPoliciesEgressToAttributes) InternalRef() terra.Reference {
	return et.ref
}

func (et StatusEgressPoliciesEgressToAttributes) InternalWithRef(ref terra.Reference) StatusEgressPoliciesEgressToAttributes {
	return StatusEgressPoliciesEgressToAttributes{ref: ref}
}

func (et StatusEgressPoliciesEgressToAttributes) InternalTokens() hclwrite.Tokens {
	return et.ref.InternalTokens()
}

func (et StatusEgressPoliciesEgressToAttributes) ExternalResources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](et.ref.Append("external_resources"))
}

func (et StatusEgressPoliciesEgressToAttributes) Resources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](et.ref.Append("resources"))
}

func (et StatusEgressPoliciesEgressToAttributes) Operations() terra.ListValue[StatusEgressPoliciesEgressToOperationsAttributes] {
	return terra.ReferenceList[StatusEgressPoliciesEgressToOperationsAttributes](et.ref.Append("operations"))
}

type StatusEgressPoliciesEgressToOperationsAttributes struct {
	ref terra.Reference
}

func (o StatusEgressPoliciesEgressToOperationsAttributes) InternalRef() terra.Reference {
	return o.ref
}

func (o StatusEgressPoliciesEgressToOperationsAttributes) InternalWithRef(ref terra.Reference) StatusEgressPoliciesEgressToOperationsAttributes {
	return StatusEgressPoliciesEgressToOperationsAttributes{ref: ref}
}

func (o StatusEgressPoliciesEgressToOperationsAttributes) InternalTokens() hclwrite.Tokens {
	return o.ref.InternalTokens()
}

func (o StatusEgressPoliciesEgressToOperationsAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(o.ref.Append("service_name"))
}

func (o StatusEgressPoliciesEgressToOperationsAttributes) MethodSelectors() terra.ListValue[StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes] {
	return terra.ReferenceList[StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes](o.ref.Append("method_selectors"))
}

type StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes struct {
	ref terra.Reference
}

func (ms StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes) InternalRef() terra.Reference {
	return ms.ref
}

func (ms StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes) InternalWithRef(ref terra.Reference) StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes {
	return StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes{ref: ref}
}

func (ms StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes) InternalTokens() hclwrite.Tokens {
	return ms.ref.InternalTokens()
}

func (ms StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes) Method() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("method"))
}

func (ms StatusEgressPoliciesEgressToOperationsMethodSelectorsAttributes) Permission() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("permission"))
}

type StatusIngressPoliciesAttributes struct {
	ref terra.Reference
}

func (ip StatusIngressPoliciesAttributes) InternalRef() terra.Reference {
	return ip.ref
}

func (ip StatusIngressPoliciesAttributes) InternalWithRef(ref terra.Reference) StatusIngressPoliciesAttributes {
	return StatusIngressPoliciesAttributes{ref: ref}
}

func (ip StatusIngressPoliciesAttributes) InternalTokens() hclwrite.Tokens {
	return ip.ref.InternalTokens()
}

func (ip StatusIngressPoliciesAttributes) IngressFrom() terra.ListValue[StatusIngressPoliciesIngressFromAttributes] {
	return terra.ReferenceList[StatusIngressPoliciesIngressFromAttributes](ip.ref.Append("ingress_from"))
}

func (ip StatusIngressPoliciesAttributes) IngressTo() terra.ListValue[StatusIngressPoliciesIngressToAttributes] {
	return terra.ReferenceList[StatusIngressPoliciesIngressToAttributes](ip.ref.Append("ingress_to"))
}

type StatusIngressPoliciesIngressFromAttributes struct {
	ref terra.Reference
}

func (_if StatusIngressPoliciesIngressFromAttributes) InternalRef() terra.Reference {
	return _if.ref
}

func (_if StatusIngressPoliciesIngressFromAttributes) InternalWithRef(ref terra.Reference) StatusIngressPoliciesIngressFromAttributes {
	return StatusIngressPoliciesIngressFromAttributes{ref: ref}
}

func (_if StatusIngressPoliciesIngressFromAttributes) InternalTokens() hclwrite.Tokens {
	return _if.ref.InternalTokens()
}

func (_if StatusIngressPoliciesIngressFromAttributes) Identities() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](_if.ref.Append("identities"))
}

func (_if StatusIngressPoliciesIngressFromAttributes) IdentityType() terra.StringValue {
	return terra.ReferenceString(_if.ref.Append("identity_type"))
}

func (_if StatusIngressPoliciesIngressFromAttributes) Sources() terra.ListValue[StatusIngressPoliciesIngressFromSourcesAttributes] {
	return terra.ReferenceList[StatusIngressPoliciesIngressFromSourcesAttributes](_if.ref.Append("sources"))
}

type StatusIngressPoliciesIngressFromSourcesAttributes struct {
	ref terra.Reference
}

func (s StatusIngressPoliciesIngressFromSourcesAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s StatusIngressPoliciesIngressFromSourcesAttributes) InternalWithRef(ref terra.Reference) StatusIngressPoliciesIngressFromSourcesAttributes {
	return StatusIngressPoliciesIngressFromSourcesAttributes{ref: ref}
}

func (s StatusIngressPoliciesIngressFromSourcesAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s StatusIngressPoliciesIngressFromSourcesAttributes) AccessLevel() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("access_level"))
}

func (s StatusIngressPoliciesIngressFromSourcesAttributes) Resource() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("resource"))
}

type StatusIngressPoliciesIngressToAttributes struct {
	ref terra.Reference
}

func (it StatusIngressPoliciesIngressToAttributes) InternalRef() terra.Reference {
	return it.ref
}

func (it StatusIngressPoliciesIngressToAttributes) InternalWithRef(ref terra.Reference) StatusIngressPoliciesIngressToAttributes {
	return StatusIngressPoliciesIngressToAttributes{ref: ref}
}

func (it StatusIngressPoliciesIngressToAttributes) InternalTokens() hclwrite.Tokens {
	return it.ref.InternalTokens()
}

func (it StatusIngressPoliciesIngressToAttributes) Resources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](it.ref.Append("resources"))
}

func (it StatusIngressPoliciesIngressToAttributes) Operations() terra.ListValue[StatusIngressPoliciesIngressToOperationsAttributes] {
	return terra.ReferenceList[StatusIngressPoliciesIngressToOperationsAttributes](it.ref.Append("operations"))
}

type StatusIngressPoliciesIngressToOperationsAttributes struct {
	ref terra.Reference
}

func (o StatusIngressPoliciesIngressToOperationsAttributes) InternalRef() terra.Reference {
	return o.ref
}

func (o StatusIngressPoliciesIngressToOperationsAttributes) InternalWithRef(ref terra.Reference) StatusIngressPoliciesIngressToOperationsAttributes {
	return StatusIngressPoliciesIngressToOperationsAttributes{ref: ref}
}

func (o StatusIngressPoliciesIngressToOperationsAttributes) InternalTokens() hclwrite.Tokens {
	return o.ref.InternalTokens()
}

func (o StatusIngressPoliciesIngressToOperationsAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(o.ref.Append("service_name"))
}

func (o StatusIngressPoliciesIngressToOperationsAttributes) MethodSelectors() terra.ListValue[StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes] {
	return terra.ReferenceList[StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes](o.ref.Append("method_selectors"))
}

type StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes struct {
	ref terra.Reference
}

func (ms StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes) InternalRef() terra.Reference {
	return ms.ref
}

func (ms StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes) InternalWithRef(ref terra.Reference) StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes {
	return StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes{ref: ref}
}

func (ms StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes) InternalTokens() hclwrite.Tokens {
	return ms.ref.InternalTokens()
}

func (ms StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes) Method() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("method"))
}

func (ms StatusIngressPoliciesIngressToOperationsMethodSelectorsAttributes) Permission() terra.StringValue {
	return terra.ReferenceString(ms.ref.Append("permission"))
}

type StatusVpcAccessibleServicesAttributes struct {
	ref terra.Reference
}

func (vas StatusVpcAccessibleServicesAttributes) InternalRef() terra.Reference {
	return vas.ref
}

func (vas StatusVpcAccessibleServicesAttributes) InternalWithRef(ref terra.Reference) StatusVpcAccessibleServicesAttributes {
	return StatusVpcAccessibleServicesAttributes{ref: ref}
}

func (vas StatusVpcAccessibleServicesAttributes) InternalTokens() hclwrite.Tokens {
	return vas.ref.InternalTokens()
}

func (vas StatusVpcAccessibleServicesAttributes) AllowedServices() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](vas.ref.Append("allowed_services"))
}

func (vas StatusVpcAccessibleServicesAttributes) EnableRestriction() terra.BoolValue {
	return terra.ReferenceBool(vas.ref.Append("enable_restriction"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type SpecState struct {
	AccessLevels          []string                         `json:"access_levels"`
	Resources             []string                         `json:"resources"`
	RestrictedServices    []string                         `json:"restricted_services"`
	EgressPolicies        []SpecEgressPoliciesState        `json:"egress_policies"`
	IngressPolicies       []SpecIngressPoliciesState       `json:"ingress_policies"`
	VpcAccessibleServices []SpecVpcAccessibleServicesState `json:"vpc_accessible_services"`
}

type SpecEgressPoliciesState struct {
	EgressFrom []SpecEgressPoliciesEgressFromState `json:"egress_from"`
	EgressTo   []SpecEgressPoliciesEgressToState   `json:"egress_to"`
}

type SpecEgressPoliciesEgressFromState struct {
	Identities   []string `json:"identities"`
	IdentityType string   `json:"identity_type"`
}

type SpecEgressPoliciesEgressToState struct {
	ExternalResources []string                                    `json:"external_resources"`
	Resources         []string                                    `json:"resources"`
	Operations        []SpecEgressPoliciesEgressToOperationsState `json:"operations"`
}

type SpecEgressPoliciesEgressToOperationsState struct {
	ServiceName     string                                                     `json:"service_name"`
	MethodSelectors []SpecEgressPoliciesEgressToOperationsMethodSelectorsState `json:"method_selectors"`
}

type SpecEgressPoliciesEgressToOperationsMethodSelectorsState struct {
	Method     string `json:"method"`
	Permission string `json:"permission"`
}

type SpecIngressPoliciesState struct {
	IngressFrom []SpecIngressPoliciesIngressFromState `json:"ingress_from"`
	IngressTo   []SpecIngressPoliciesIngressToState   `json:"ingress_to"`
}

type SpecIngressPoliciesIngressFromState struct {
	Identities   []string                                     `json:"identities"`
	IdentityType string                                       `json:"identity_type"`
	Sources      []SpecIngressPoliciesIngressFromSourcesState `json:"sources"`
}

type SpecIngressPoliciesIngressFromSourcesState struct {
	AccessLevel string `json:"access_level"`
	Resource    string `json:"resource"`
}

type SpecIngressPoliciesIngressToState struct {
	Resources  []string                                      `json:"resources"`
	Operations []SpecIngressPoliciesIngressToOperationsState `json:"operations"`
}

type SpecIngressPoliciesIngressToOperationsState struct {
	ServiceName     string                                                       `json:"service_name"`
	MethodSelectors []SpecIngressPoliciesIngressToOperationsMethodSelectorsState `json:"method_selectors"`
}

type SpecIngressPoliciesIngressToOperationsMethodSelectorsState struct {
	Method     string `json:"method"`
	Permission string `json:"permission"`
}

type SpecVpcAccessibleServicesState struct {
	AllowedServices   []string `json:"allowed_services"`
	EnableRestriction bool     `json:"enable_restriction"`
}

type StatusState struct {
	AccessLevels          []string                           `json:"access_levels"`
	Resources             []string                           `json:"resources"`
	RestrictedServices    []string                           `json:"restricted_services"`
	EgressPolicies        []StatusEgressPoliciesState        `json:"egress_policies"`
	IngressPolicies       []StatusIngressPoliciesState       `json:"ingress_policies"`
	VpcAccessibleServices []StatusVpcAccessibleServicesState `json:"vpc_accessible_services"`
}

type StatusEgressPoliciesState struct {
	EgressFrom []StatusEgressPoliciesEgressFromState `json:"egress_from"`
	EgressTo   []StatusEgressPoliciesEgressToState   `json:"egress_to"`
}

type StatusEgressPoliciesEgressFromState struct {
	Identities   []string `json:"identities"`
	IdentityType string   `json:"identity_type"`
}

type StatusEgressPoliciesEgressToState struct {
	ExternalResources []string                                      `json:"external_resources"`
	Resources         []string                                      `json:"resources"`
	Operations        []StatusEgressPoliciesEgressToOperationsState `json:"operations"`
}

type StatusEgressPoliciesEgressToOperationsState struct {
	ServiceName     string                                                       `json:"service_name"`
	MethodSelectors []StatusEgressPoliciesEgressToOperationsMethodSelectorsState `json:"method_selectors"`
}

type StatusEgressPoliciesEgressToOperationsMethodSelectorsState struct {
	Method     string `json:"method"`
	Permission string `json:"permission"`
}

type StatusIngressPoliciesState struct {
	IngressFrom []StatusIngressPoliciesIngressFromState `json:"ingress_from"`
	IngressTo   []StatusIngressPoliciesIngressToState   `json:"ingress_to"`
}

type StatusIngressPoliciesIngressFromState struct {
	Identities   []string                                       `json:"identities"`
	IdentityType string                                         `json:"identity_type"`
	Sources      []StatusIngressPoliciesIngressFromSourcesState `json:"sources"`
}

type StatusIngressPoliciesIngressFromSourcesState struct {
	AccessLevel string `json:"access_level"`
	Resource    string `json:"resource"`
}

type StatusIngressPoliciesIngressToState struct {
	Resources  []string                                        `json:"resources"`
	Operations []StatusIngressPoliciesIngressToOperationsState `json:"operations"`
}

type StatusIngressPoliciesIngressToOperationsState struct {
	ServiceName     string                                                         `json:"service_name"`
	MethodSelectors []StatusIngressPoliciesIngressToOperationsMethodSelectorsState `json:"method_selectors"`
}

type StatusIngressPoliciesIngressToOperationsMethodSelectorsState struct {
	Method     string `json:"method"`
	Permission string `json:"permission"`
}

type StatusVpcAccessibleServicesState struct {
	AllowedServices   []string `json:"allowed_services"`
	EnableRestriction bool     `json:"enable_restriction"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
