// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datamonitoringclusteristioservice "github.com/golingon/terraproviders/google/4.59.0/datamonitoringclusteristioservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMonitoringClusterIstioService(name string, args DataMonitoringClusterIstioServiceArgs) *DataMonitoringClusterIstioService {
	return &DataMonitoringClusterIstioService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMonitoringClusterIstioService)(nil)

type DataMonitoringClusterIstioService struct {
	Name string
	Args DataMonitoringClusterIstioServiceArgs
}

func (mcis *DataMonitoringClusterIstioService) DataSource() string {
	return "google_monitoring_cluster_istio_service"
}

func (mcis *DataMonitoringClusterIstioService) LocalName() string {
	return mcis.Name
}

func (mcis *DataMonitoringClusterIstioService) Configuration() interface{} {
	return mcis.Args
}

func (mcis *DataMonitoringClusterIstioService) Attributes() dataMonitoringClusterIstioServiceAttributes {
	return dataMonitoringClusterIstioServiceAttributes{ref: terra.ReferenceDataResource(mcis)}
}

type DataMonitoringClusterIstioServiceArgs struct {
	// ClusterName: string, required
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// ServiceNamespace: string, required
	ServiceNamespace terra.StringValue `hcl:"service_namespace,attr" validate:"required"`
	// Telemetry: min=0
	Telemetry []datamonitoringclusteristioservice.Telemetry `hcl:"telemetry,block" validate:"min=0"`
}
type dataMonitoringClusterIstioServiceAttributes struct {
	ref terra.Reference
}

func (mcis dataMonitoringClusterIstioServiceAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("cluster_name"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("display_name"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("id"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("location"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("name"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) Project() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("project"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) ServiceId() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("service_id"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("service_name"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) ServiceNamespace() terra.StringValue {
	return terra.ReferenceString(mcis.ref.Append("service_namespace"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) UserLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mcis.ref.Append("user_labels"))
}

func (mcis dataMonitoringClusterIstioServiceAttributes) Telemetry() terra.ListValue[datamonitoringclusteristioservice.TelemetryAttributes] {
	return terra.ReferenceList[datamonitoringclusteristioservice.TelemetryAttributes](mcis.ref.Append("telemetry"))
}
