// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	computeinstancetemplate "github.com/golingon/terraproviders/google/4.59.0/computeinstancetemplate"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewComputeInstanceTemplate(name string, args ComputeInstanceTemplateArgs) *ComputeInstanceTemplate {
	return &ComputeInstanceTemplate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ComputeInstanceTemplate)(nil)

type ComputeInstanceTemplate struct {
	Name  string
	Args  ComputeInstanceTemplateArgs
	state *computeInstanceTemplateState
}

func (cit *ComputeInstanceTemplate) Type() string {
	return "google_compute_instance_template"
}

func (cit *ComputeInstanceTemplate) LocalName() string {
	return cit.Name
}

func (cit *ComputeInstanceTemplate) Configuration() interface{} {
	return cit.Args
}

func (cit *ComputeInstanceTemplate) Attributes() computeInstanceTemplateAttributes {
	return computeInstanceTemplateAttributes{ref: terra.ReferenceResource(cit)}
}

func (cit *ComputeInstanceTemplate) ImportState(av io.Reader) error {
	cit.state = &computeInstanceTemplateState{}
	if err := json.NewDecoder(av).Decode(cit.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cit.Type(), cit.LocalName(), err)
	}
	return nil
}

func (cit *ComputeInstanceTemplate) State() (*computeInstanceTemplateState, bool) {
	return cit.state, cit.state != nil
}

func (cit *ComputeInstanceTemplate) StateMust() *computeInstanceTemplateState {
	if cit.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cit.Type(), cit.LocalName()))
	}
	return cit.state
}

func (cit *ComputeInstanceTemplate) DependOn() terra.Reference {
	return terra.ReferenceResource(cit)
}

type ComputeInstanceTemplateArgs struct {
	// CanIpForward: bool, optional
	CanIpForward terra.BoolValue `hcl:"can_ip_forward,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceDescription: string, optional
	InstanceDescription terra.StringValue `hcl:"instance_description,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// MachineType: string, required
	MachineType terra.StringValue `hcl:"machine_type,attr" validate:"required"`
	// Metadata: map of string, optional
	Metadata terra.MapValue[terra.StringValue] `hcl:"metadata,attr"`
	// MetadataStartupScript: string, optional
	MetadataStartupScript terra.StringValue `hcl:"metadata_startup_script,attr"`
	// MinCpuPlatform: string, optional
	MinCpuPlatform terra.StringValue `hcl:"min_cpu_platform,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NamePrefix: string, optional
	NamePrefix terra.StringValue `hcl:"name_prefix,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// ResourcePolicies: list of string, optional
	ResourcePolicies terra.ListValue[terra.StringValue] `hcl:"resource_policies,attr"`
	// Tags: set of string, optional
	Tags terra.SetValue[terra.StringValue] `hcl:"tags,attr"`
	// AdvancedMachineFeatures: optional
	AdvancedMachineFeatures *computeinstancetemplate.AdvancedMachineFeatures `hcl:"advanced_machine_features,block"`
	// ConfidentialInstanceConfig: optional
	ConfidentialInstanceConfig *computeinstancetemplate.ConfidentialInstanceConfig `hcl:"confidential_instance_config,block"`
	// Disk: min=1
	Disk []computeinstancetemplate.Disk `hcl:"disk,block" validate:"min=1"`
	// GuestAccelerator: min=0
	GuestAccelerator []computeinstancetemplate.GuestAccelerator `hcl:"guest_accelerator,block" validate:"min=0"`
	// NetworkInterface: min=0
	NetworkInterface []computeinstancetemplate.NetworkInterface `hcl:"network_interface,block" validate:"min=0"`
	// ReservationAffinity: optional
	ReservationAffinity *computeinstancetemplate.ReservationAffinity `hcl:"reservation_affinity,block"`
	// Scheduling: optional
	Scheduling *computeinstancetemplate.Scheduling `hcl:"scheduling,block"`
	// ServiceAccount: optional
	ServiceAccount *computeinstancetemplate.ServiceAccount `hcl:"service_account,block"`
	// ShieldedInstanceConfig: optional
	ShieldedInstanceConfig *computeinstancetemplate.ShieldedInstanceConfig `hcl:"shielded_instance_config,block"`
	// Timeouts: optional
	Timeouts *computeinstancetemplate.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ComputeInstanceTemplate depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type computeInstanceTemplateAttributes struct {
	ref terra.Reference
}

func (cit computeInstanceTemplateAttributes) CanIpForward() terra.BoolValue {
	return terra.ReferenceBool(cit.ref.Append("can_ip_forward"))
}

func (cit computeInstanceTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("description"))
}

func (cit computeInstanceTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("id"))
}

func (cit computeInstanceTemplateAttributes) InstanceDescription() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("instance_description"))
}

func (cit computeInstanceTemplateAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cit.ref.Append("labels"))
}

func (cit computeInstanceTemplateAttributes) MachineType() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("machine_type"))
}

func (cit computeInstanceTemplateAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cit.ref.Append("metadata"))
}

func (cit computeInstanceTemplateAttributes) MetadataFingerprint() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("metadata_fingerprint"))
}

func (cit computeInstanceTemplateAttributes) MetadataStartupScript() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("metadata_startup_script"))
}

func (cit computeInstanceTemplateAttributes) MinCpuPlatform() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("min_cpu_platform"))
}

func (cit computeInstanceTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("name"))
}

func (cit computeInstanceTemplateAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("name_prefix"))
}

func (cit computeInstanceTemplateAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("project"))
}

func (cit computeInstanceTemplateAttributes) Region() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("region"))
}

func (cit computeInstanceTemplateAttributes) ResourcePolicies() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cit.ref.Append("resource_policies"))
}

func (cit computeInstanceTemplateAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("self_link"))
}

func (cit computeInstanceTemplateAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cit.ref.Append("tags"))
}

func (cit computeInstanceTemplateAttributes) TagsFingerprint() terra.StringValue {
	return terra.ReferenceString(cit.ref.Append("tags_fingerprint"))
}

func (cit computeInstanceTemplateAttributes) AdvancedMachineFeatures() terra.ListValue[computeinstancetemplate.AdvancedMachineFeaturesAttributes] {
	return terra.ReferenceList[computeinstancetemplate.AdvancedMachineFeaturesAttributes](cit.ref.Append("advanced_machine_features"))
}

func (cit computeInstanceTemplateAttributes) ConfidentialInstanceConfig() terra.ListValue[computeinstancetemplate.ConfidentialInstanceConfigAttributes] {
	return terra.ReferenceList[computeinstancetemplate.ConfidentialInstanceConfigAttributes](cit.ref.Append("confidential_instance_config"))
}

func (cit computeInstanceTemplateAttributes) Disk() terra.ListValue[computeinstancetemplate.DiskAttributes] {
	return terra.ReferenceList[computeinstancetemplate.DiskAttributes](cit.ref.Append("disk"))
}

func (cit computeInstanceTemplateAttributes) GuestAccelerator() terra.ListValue[computeinstancetemplate.GuestAcceleratorAttributes] {
	return terra.ReferenceList[computeinstancetemplate.GuestAcceleratorAttributes](cit.ref.Append("guest_accelerator"))
}

func (cit computeInstanceTemplateAttributes) NetworkInterface() terra.ListValue[computeinstancetemplate.NetworkInterfaceAttributes] {
	return terra.ReferenceList[computeinstancetemplate.NetworkInterfaceAttributes](cit.ref.Append("network_interface"))
}

func (cit computeInstanceTemplateAttributes) ReservationAffinity() terra.ListValue[computeinstancetemplate.ReservationAffinityAttributes] {
	return terra.ReferenceList[computeinstancetemplate.ReservationAffinityAttributes](cit.ref.Append("reservation_affinity"))
}

func (cit computeInstanceTemplateAttributes) Scheduling() terra.ListValue[computeinstancetemplate.SchedulingAttributes] {
	return terra.ReferenceList[computeinstancetemplate.SchedulingAttributes](cit.ref.Append("scheduling"))
}

func (cit computeInstanceTemplateAttributes) ServiceAccount() terra.ListValue[computeinstancetemplate.ServiceAccountAttributes] {
	return terra.ReferenceList[computeinstancetemplate.ServiceAccountAttributes](cit.ref.Append("service_account"))
}

func (cit computeInstanceTemplateAttributes) ShieldedInstanceConfig() terra.ListValue[computeinstancetemplate.ShieldedInstanceConfigAttributes] {
	return terra.ReferenceList[computeinstancetemplate.ShieldedInstanceConfigAttributes](cit.ref.Append("shielded_instance_config"))
}

func (cit computeInstanceTemplateAttributes) Timeouts() computeinstancetemplate.TimeoutsAttributes {
	return terra.ReferenceSingle[computeinstancetemplate.TimeoutsAttributes](cit.ref.Append("timeouts"))
}

type computeInstanceTemplateState struct {
	CanIpForward               bool                                                      `json:"can_ip_forward"`
	Description                string                                                    `json:"description"`
	Id                         string                                                    `json:"id"`
	InstanceDescription        string                                                    `json:"instance_description"`
	Labels                     map[string]string                                         `json:"labels"`
	MachineType                string                                                    `json:"machine_type"`
	Metadata                   map[string]string                                         `json:"metadata"`
	MetadataFingerprint        string                                                    `json:"metadata_fingerprint"`
	MetadataStartupScript      string                                                    `json:"metadata_startup_script"`
	MinCpuPlatform             string                                                    `json:"min_cpu_platform"`
	Name                       string                                                    `json:"name"`
	NamePrefix                 string                                                    `json:"name_prefix"`
	Project                    string                                                    `json:"project"`
	Region                     string                                                    `json:"region"`
	ResourcePolicies           []string                                                  `json:"resource_policies"`
	SelfLink                   string                                                    `json:"self_link"`
	Tags                       []string                                                  `json:"tags"`
	TagsFingerprint            string                                                    `json:"tags_fingerprint"`
	AdvancedMachineFeatures    []computeinstancetemplate.AdvancedMachineFeaturesState    `json:"advanced_machine_features"`
	ConfidentialInstanceConfig []computeinstancetemplate.ConfidentialInstanceConfigState `json:"confidential_instance_config"`
	Disk                       []computeinstancetemplate.DiskState                       `json:"disk"`
	GuestAccelerator           []computeinstancetemplate.GuestAcceleratorState           `json:"guest_accelerator"`
	NetworkInterface           []computeinstancetemplate.NetworkInterfaceState           `json:"network_interface"`
	ReservationAffinity        []computeinstancetemplate.ReservationAffinityState        `json:"reservation_affinity"`
	Scheduling                 []computeinstancetemplate.SchedulingState                 `json:"scheduling"`
	ServiceAccount             []computeinstancetemplate.ServiceAccountState             `json:"service_account"`
	ShieldedInstanceConfig     []computeinstancetemplate.ShieldedInstanceConfigState     `json:"shielded_instance_config"`
	Timeouts                   *computeinstancetemplate.TimeoutsState                    `json:"timeouts"`
}
