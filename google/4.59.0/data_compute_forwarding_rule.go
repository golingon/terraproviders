// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	datacomputeforwardingrule "github.com/golingon/terraproviders/google/4.59.0/datacomputeforwardingrule"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataComputeForwardingRule(name string, args DataComputeForwardingRuleArgs) *DataComputeForwardingRule {
	return &DataComputeForwardingRule{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeForwardingRule)(nil)

type DataComputeForwardingRule struct {
	Name string
	Args DataComputeForwardingRuleArgs
}

func (cfr *DataComputeForwardingRule) DataSource() string {
	return "google_compute_forwarding_rule"
}

func (cfr *DataComputeForwardingRule) LocalName() string {
	return cfr.Name
}

func (cfr *DataComputeForwardingRule) Configuration() interface{} {
	return cfr.Args
}

func (cfr *DataComputeForwardingRule) Attributes() dataComputeForwardingRuleAttributes {
	return dataComputeForwardingRuleAttributes{ref: terra.ReferenceDataResource(cfr)}
}

type DataComputeForwardingRuleArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// ServiceDirectoryRegistrations: min=0
	ServiceDirectoryRegistrations []datacomputeforwardingrule.ServiceDirectoryRegistrations `hcl:"service_directory_registrations,block" validate:"min=0"`
}
type dataComputeForwardingRuleAttributes struct {
	ref terra.Reference
}

func (cfr dataComputeForwardingRuleAttributes) AllPorts() terra.BoolValue {
	return terra.ReferenceBool(cfr.ref.Append("all_ports"))
}

func (cfr dataComputeForwardingRuleAttributes) AllowGlobalAccess() terra.BoolValue {
	return terra.ReferenceBool(cfr.ref.Append("allow_global_access"))
}

func (cfr dataComputeForwardingRuleAttributes) BackendService() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("backend_service"))
}

func (cfr dataComputeForwardingRuleAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("creation_timestamp"))
}

func (cfr dataComputeForwardingRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("description"))
}

func (cfr dataComputeForwardingRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("id"))
}

func (cfr dataComputeForwardingRuleAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("ip_address"))
}

func (cfr dataComputeForwardingRuleAttributes) IpProtocol() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("ip_protocol"))
}

func (cfr dataComputeForwardingRuleAttributes) IsMirroringCollector() terra.BoolValue {
	return terra.ReferenceBool(cfr.ref.Append("is_mirroring_collector"))
}

func (cfr dataComputeForwardingRuleAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("label_fingerprint"))
}

func (cfr dataComputeForwardingRuleAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cfr.ref.Append("labels"))
}

func (cfr dataComputeForwardingRuleAttributes) LoadBalancingScheme() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("load_balancing_scheme"))
}

func (cfr dataComputeForwardingRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("name"))
}

func (cfr dataComputeForwardingRuleAttributes) Network() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("network"))
}

func (cfr dataComputeForwardingRuleAttributes) NetworkTier() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("network_tier"))
}

func (cfr dataComputeForwardingRuleAttributes) PortRange() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("port_range"))
}

func (cfr dataComputeForwardingRuleAttributes) Ports() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](cfr.ref.Append("ports"))
}

func (cfr dataComputeForwardingRuleAttributes) Project() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("project"))
}

func (cfr dataComputeForwardingRuleAttributes) PscConnectionId() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("psc_connection_id"))
}

func (cfr dataComputeForwardingRuleAttributes) PscConnectionStatus() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("psc_connection_status"))
}

func (cfr dataComputeForwardingRuleAttributes) Region() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("region"))
}

func (cfr dataComputeForwardingRuleAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("self_link"))
}

func (cfr dataComputeForwardingRuleAttributes) ServiceLabel() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("service_label"))
}

func (cfr dataComputeForwardingRuleAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("service_name"))
}

func (cfr dataComputeForwardingRuleAttributes) Subnetwork() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("subnetwork"))
}

func (cfr dataComputeForwardingRuleAttributes) Target() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("target"))
}

func (cfr dataComputeForwardingRuleAttributes) ServiceDirectoryRegistrations() terra.ListValue[datacomputeforwardingrule.ServiceDirectoryRegistrationsAttributes] {
	return terra.ReferenceList[datacomputeforwardingrule.ServiceDirectoryRegistrationsAttributes](cfr.ref.Append("service_directory_registrations"))
}
