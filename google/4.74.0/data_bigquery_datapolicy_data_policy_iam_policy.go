// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataBigqueryDatapolicyDataPolicyIamPolicy creates a new instance of [DataBigqueryDatapolicyDataPolicyIamPolicy].
func NewDataBigqueryDatapolicyDataPolicyIamPolicy(name string, args DataBigqueryDatapolicyDataPolicyIamPolicyArgs) *DataBigqueryDatapolicyDataPolicyIamPolicy {
	return &DataBigqueryDatapolicyDataPolicyIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataBigqueryDatapolicyDataPolicyIamPolicy)(nil)

// DataBigqueryDatapolicyDataPolicyIamPolicy represents the Terraform data resource google_bigquery_datapolicy_data_policy_iam_policy.
type DataBigqueryDatapolicyDataPolicyIamPolicy struct {
	Name string
	Args DataBigqueryDatapolicyDataPolicyIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataBigqueryDatapolicyDataPolicyIamPolicy].
func (bddpip *DataBigqueryDatapolicyDataPolicyIamPolicy) DataSource() string {
	return "google_bigquery_datapolicy_data_policy_iam_policy"
}

// LocalName returns the local name for [DataBigqueryDatapolicyDataPolicyIamPolicy].
func (bddpip *DataBigqueryDatapolicyDataPolicyIamPolicy) LocalName() string {
	return bddpip.Name
}

// Configuration returns the configuration (args) for [DataBigqueryDatapolicyDataPolicyIamPolicy].
func (bddpip *DataBigqueryDatapolicyDataPolicyIamPolicy) Configuration() interface{} {
	return bddpip.Args
}

// Attributes returns the attributes for [DataBigqueryDatapolicyDataPolicyIamPolicy].
func (bddpip *DataBigqueryDatapolicyDataPolicyIamPolicy) Attributes() dataBigqueryDatapolicyDataPolicyIamPolicyAttributes {
	return dataBigqueryDatapolicyDataPolicyIamPolicyAttributes{ref: terra.ReferenceDataResource(bddpip)}
}

// DataBigqueryDatapolicyDataPolicyIamPolicyArgs contains the configurations for google_bigquery_datapolicy_data_policy_iam_policy.
type DataBigqueryDatapolicyDataPolicyIamPolicyArgs struct {
	// DataPolicyId: string, required
	DataPolicyId terra.StringValue `hcl:"data_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataBigqueryDatapolicyDataPolicyIamPolicyAttributes struct {
	ref terra.Reference
}

// DataPolicyId returns a reference to field data_policy_id of google_bigquery_datapolicy_data_policy_iam_policy.
func (bddpip dataBigqueryDatapolicyDataPolicyIamPolicyAttributes) DataPolicyId() terra.StringValue {
	return terra.ReferenceAsString(bddpip.ref.Append("data_policy_id"))
}

// Etag returns a reference to field etag of google_bigquery_datapolicy_data_policy_iam_policy.
func (bddpip dataBigqueryDatapolicyDataPolicyIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(bddpip.ref.Append("etag"))
}

// Id returns a reference to field id of google_bigquery_datapolicy_data_policy_iam_policy.
func (bddpip dataBigqueryDatapolicyDataPolicyIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bddpip.ref.Append("id"))
}

// Location returns a reference to field location of google_bigquery_datapolicy_data_policy_iam_policy.
func (bddpip dataBigqueryDatapolicyDataPolicyIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(bddpip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_bigquery_datapolicy_data_policy_iam_policy.
func (bddpip dataBigqueryDatapolicyDataPolicyIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(bddpip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_bigquery_datapolicy_data_policy_iam_policy.
func (bddpip dataBigqueryDatapolicyDataPolicyIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(bddpip.ref.Append("project"))
}
