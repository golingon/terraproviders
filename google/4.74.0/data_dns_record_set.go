// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataDnsRecordSet creates a new instance of [DataDnsRecordSet].
func NewDataDnsRecordSet(name string, args DataDnsRecordSetArgs) *DataDnsRecordSet {
	return &DataDnsRecordSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDnsRecordSet)(nil)

// DataDnsRecordSet represents the Terraform data resource google_dns_record_set.
type DataDnsRecordSet struct {
	Name string
	Args DataDnsRecordSetArgs
}

// DataSource returns the Terraform object type for [DataDnsRecordSet].
func (drs *DataDnsRecordSet) DataSource() string {
	return "google_dns_record_set"
}

// LocalName returns the local name for [DataDnsRecordSet].
func (drs *DataDnsRecordSet) LocalName() string {
	return drs.Name
}

// Configuration returns the configuration (args) for [DataDnsRecordSet].
func (drs *DataDnsRecordSet) Configuration() interface{} {
	return drs.Args
}

// Attributes returns the attributes for [DataDnsRecordSet].
func (drs *DataDnsRecordSet) Attributes() dataDnsRecordSetAttributes {
	return dataDnsRecordSetAttributes{ref: terra.ReferenceDataResource(drs)}
}

// DataDnsRecordSetArgs contains the configurations for google_dns_record_set.
type DataDnsRecordSetArgs struct {
	// ManagedZone: string, required
	ManagedZone terra.StringValue `hcl:"managed_zone,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}
type dataDnsRecordSetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("id"))
}

// ManagedZone returns a reference to field managed_zone of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) ManagedZone() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("managed_zone"))
}

// Name returns a reference to field name of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("name"))
}

// Project returns a reference to field project of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("project"))
}

// Rrdatas returns a reference to field rrdatas of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) Rrdatas() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](drs.ref.Append("rrdatas"))
}

// Ttl returns a reference to field ttl of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(drs.ref.Append("ttl"))
}

// Type returns a reference to field type of google_dns_record_set.
func (drs dataDnsRecordSetAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("type"))
}
