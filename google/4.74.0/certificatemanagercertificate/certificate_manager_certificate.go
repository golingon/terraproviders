// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package certificatemanagercertificate

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Managed struct {
	// DnsAuthorizations: list of string, optional
	DnsAuthorizations terra.ListValue[terra.StringValue] `hcl:"dns_authorizations,attr"`
	// Domains: list of string, optional
	Domains terra.ListValue[terra.StringValue] `hcl:"domains,attr"`
	// IssuanceConfig: string, optional
	IssuanceConfig terra.StringValue `hcl:"issuance_config,attr"`
	// AuthorizationAttemptInfo: min=0
	AuthorizationAttemptInfo []AuthorizationAttemptInfo `hcl:"authorization_attempt_info,block" validate:"min=0"`
	// ProvisioningIssue: min=0
	ProvisioningIssue []ProvisioningIssue `hcl:"provisioning_issue,block" validate:"min=0"`
}

type AuthorizationAttemptInfo struct{}

type ProvisioningIssue struct{}

type SelfManaged struct {
	// CertificatePem: string, optional
	CertificatePem terra.StringValue `hcl:"certificate_pem,attr"`
	// PemCertificate: string, optional
	PemCertificate terra.StringValue `hcl:"pem_certificate,attr"`
	// PemPrivateKey: string, optional
	PemPrivateKey terra.StringValue `hcl:"pem_private_key,attr"`
	// PrivateKeyPem: string, optional
	PrivateKeyPem terra.StringValue `hcl:"private_key_pem,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ManagedAttributes struct {
	ref terra.Reference
}

func (m ManagedAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m ManagedAttributes) InternalWithRef(ref terra.Reference) ManagedAttributes {
	return ManagedAttributes{ref: ref}
}

func (m ManagedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m ManagedAttributes) DnsAuthorizations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](m.ref.Append("dns_authorizations"))
}

func (m ManagedAttributes) Domains() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](m.ref.Append("domains"))
}

func (m ManagedAttributes) IssuanceConfig() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("issuance_config"))
}

func (m ManagedAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("state"))
}

func (m ManagedAttributes) AuthorizationAttemptInfo() terra.ListValue[AuthorizationAttemptInfoAttributes] {
	return terra.ReferenceAsList[AuthorizationAttemptInfoAttributes](m.ref.Append("authorization_attempt_info"))
}

func (m ManagedAttributes) ProvisioningIssue() terra.ListValue[ProvisioningIssueAttributes] {
	return terra.ReferenceAsList[ProvisioningIssueAttributes](m.ref.Append("provisioning_issue"))
}

type AuthorizationAttemptInfoAttributes struct {
	ref terra.Reference
}

func (aai AuthorizationAttemptInfoAttributes) InternalRef() (terra.Reference, error) {
	return aai.ref, nil
}

func (aai AuthorizationAttemptInfoAttributes) InternalWithRef(ref terra.Reference) AuthorizationAttemptInfoAttributes {
	return AuthorizationAttemptInfoAttributes{ref: ref}
}

func (aai AuthorizationAttemptInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aai.ref.InternalTokens()
}

func (aai AuthorizationAttemptInfoAttributes) Details() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("details"))
}

func (aai AuthorizationAttemptInfoAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("domain"))
}

func (aai AuthorizationAttemptInfoAttributes) FailureReason() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("failure_reason"))
}

func (aai AuthorizationAttemptInfoAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("state"))
}

type ProvisioningIssueAttributes struct {
	ref terra.Reference
}

func (pi ProvisioningIssueAttributes) InternalRef() (terra.Reference, error) {
	return pi.ref, nil
}

func (pi ProvisioningIssueAttributes) InternalWithRef(ref terra.Reference) ProvisioningIssueAttributes {
	return ProvisioningIssueAttributes{ref: ref}
}

func (pi ProvisioningIssueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pi.ref.InternalTokens()
}

func (pi ProvisioningIssueAttributes) Details() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("details"))
}

func (pi ProvisioningIssueAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("reason"))
}

type SelfManagedAttributes struct {
	ref terra.Reference
}

func (sm SelfManagedAttributes) InternalRef() (terra.Reference, error) {
	return sm.ref, nil
}

func (sm SelfManagedAttributes) InternalWithRef(ref terra.Reference) SelfManagedAttributes {
	return SelfManagedAttributes{ref: ref}
}

func (sm SelfManagedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sm.ref.InternalTokens()
}

func (sm SelfManagedAttributes) CertificatePem() terra.StringValue {
	return terra.ReferenceAsString(sm.ref.Append("certificate_pem"))
}

func (sm SelfManagedAttributes) PemCertificate() terra.StringValue {
	return terra.ReferenceAsString(sm.ref.Append("pem_certificate"))
}

func (sm SelfManagedAttributes) PemPrivateKey() terra.StringValue {
	return terra.ReferenceAsString(sm.ref.Append("pem_private_key"))
}

func (sm SelfManagedAttributes) PrivateKeyPem() terra.StringValue {
	return terra.ReferenceAsString(sm.ref.Append("private_key_pem"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ManagedState struct {
	DnsAuthorizations        []string                        `json:"dns_authorizations"`
	Domains                  []string                        `json:"domains"`
	IssuanceConfig           string                          `json:"issuance_config"`
	State                    string                          `json:"state"`
	AuthorizationAttemptInfo []AuthorizationAttemptInfoState `json:"authorization_attempt_info"`
	ProvisioningIssue        []ProvisioningIssueState        `json:"provisioning_issue"`
}

type AuthorizationAttemptInfoState struct {
	Details       string `json:"details"`
	Domain        string `json:"domain"`
	FailureReason string `json:"failure_reason"`
	State         string `json:"state"`
}

type ProvisioningIssueState struct {
	Details string `json:"details"`
	Reason  string `json:"reason"`
}

type SelfManagedState struct {
	CertificatePem string `json:"certificate_pem"`
	PemCertificate string `json:"pem_certificate"`
	PemPrivateKey  string `json:"pem_private_key"`
	PrivateKeyPem  string `json:"private_key_pem"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
