// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	gkebackuprestoreplaniambinding "github.com/golingon/terraproviders/google/5.2.0/gkebackuprestoreplaniambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewGkeBackupRestorePlanIamBinding creates a new instance of [GkeBackupRestorePlanIamBinding].
func NewGkeBackupRestorePlanIamBinding(name string, args GkeBackupRestorePlanIamBindingArgs) *GkeBackupRestorePlanIamBinding {
	return &GkeBackupRestorePlanIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GkeBackupRestorePlanIamBinding)(nil)

// GkeBackupRestorePlanIamBinding represents the Terraform resource google_gke_backup_restore_plan_iam_binding.
type GkeBackupRestorePlanIamBinding struct {
	Name      string
	Args      GkeBackupRestorePlanIamBindingArgs
	state     *gkeBackupRestorePlanIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GkeBackupRestorePlanIamBinding].
func (gbrpib *GkeBackupRestorePlanIamBinding) Type() string {
	return "google_gke_backup_restore_plan_iam_binding"
}

// LocalName returns the local name for [GkeBackupRestorePlanIamBinding].
func (gbrpib *GkeBackupRestorePlanIamBinding) LocalName() string {
	return gbrpib.Name
}

// Configuration returns the configuration (args) for [GkeBackupRestorePlanIamBinding].
func (gbrpib *GkeBackupRestorePlanIamBinding) Configuration() interface{} {
	return gbrpib.Args
}

// DependOn is used for other resources to depend on [GkeBackupRestorePlanIamBinding].
func (gbrpib *GkeBackupRestorePlanIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(gbrpib)
}

// Dependencies returns the list of resources [GkeBackupRestorePlanIamBinding] depends_on.
func (gbrpib *GkeBackupRestorePlanIamBinding) Dependencies() terra.Dependencies {
	return gbrpib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GkeBackupRestorePlanIamBinding].
func (gbrpib *GkeBackupRestorePlanIamBinding) LifecycleManagement() *terra.Lifecycle {
	return gbrpib.Lifecycle
}

// Attributes returns the attributes for [GkeBackupRestorePlanIamBinding].
func (gbrpib *GkeBackupRestorePlanIamBinding) Attributes() gkeBackupRestorePlanIamBindingAttributes {
	return gkeBackupRestorePlanIamBindingAttributes{ref: terra.ReferenceResource(gbrpib)}
}

// ImportState imports the given attribute values into [GkeBackupRestorePlanIamBinding]'s state.
func (gbrpib *GkeBackupRestorePlanIamBinding) ImportState(av io.Reader) error {
	gbrpib.state = &gkeBackupRestorePlanIamBindingState{}
	if err := json.NewDecoder(av).Decode(gbrpib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gbrpib.Type(), gbrpib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GkeBackupRestorePlanIamBinding] has state.
func (gbrpib *GkeBackupRestorePlanIamBinding) State() (*gkeBackupRestorePlanIamBindingState, bool) {
	return gbrpib.state, gbrpib.state != nil
}

// StateMust returns the state for [GkeBackupRestorePlanIamBinding]. Panics if the state is nil.
func (gbrpib *GkeBackupRestorePlanIamBinding) StateMust() *gkeBackupRestorePlanIamBindingState {
	if gbrpib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gbrpib.Type(), gbrpib.LocalName()))
	}
	return gbrpib.state
}

// GkeBackupRestorePlanIamBindingArgs contains the configurations for google_gke_backup_restore_plan_iam_binding.
type GkeBackupRestorePlanIamBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *gkebackuprestoreplaniambinding.Condition `hcl:"condition,block"`
}
type gkeBackupRestorePlanIamBindingAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gbrpib.ref.Append("etag"))
}

// Id returns a reference to field id of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gbrpib.ref.Append("id"))
}

// Location returns a reference to field location of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gbrpib.ref.Append("location"))
}

// Members returns a reference to field members of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gbrpib.ref.Append("members"))
}

// Name returns a reference to field name of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gbrpib.ref.Append("name"))
}

// Project returns a reference to field project of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gbrpib.ref.Append("project"))
}

// Role returns a reference to field role of google_gke_backup_restore_plan_iam_binding.
func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(gbrpib.ref.Append("role"))
}

func (gbrpib gkeBackupRestorePlanIamBindingAttributes) Condition() terra.ListValue[gkebackuprestoreplaniambinding.ConditionAttributes] {
	return terra.ReferenceAsList[gkebackuprestoreplaniambinding.ConditionAttributes](gbrpib.ref.Append("condition"))
}

type gkeBackupRestorePlanIamBindingState struct {
	Etag      string                                          `json:"etag"`
	Id        string                                          `json:"id"`
	Location  string                                          `json:"location"`
	Members   []string                                        `json:"members"`
	Name      string                                          `json:"name"`
	Project   string                                          `json:"project"`
	Role      string                                          `json:"role"`
	Condition []gkebackuprestoreplaniambinding.ConditionState `json:"condition"`
}
