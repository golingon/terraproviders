// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	sccfoldercustommodule "github.com/golingon/terraproviders/google/5.2.0/sccfoldercustommodule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSccFolderCustomModule creates a new instance of [SccFolderCustomModule].
func NewSccFolderCustomModule(name string, args SccFolderCustomModuleArgs) *SccFolderCustomModule {
	return &SccFolderCustomModule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SccFolderCustomModule)(nil)

// SccFolderCustomModule represents the Terraform resource google_scc_folder_custom_module.
type SccFolderCustomModule struct {
	Name      string
	Args      SccFolderCustomModuleArgs
	state     *sccFolderCustomModuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SccFolderCustomModule].
func (sfcm *SccFolderCustomModule) Type() string {
	return "google_scc_folder_custom_module"
}

// LocalName returns the local name for [SccFolderCustomModule].
func (sfcm *SccFolderCustomModule) LocalName() string {
	return sfcm.Name
}

// Configuration returns the configuration (args) for [SccFolderCustomModule].
func (sfcm *SccFolderCustomModule) Configuration() interface{} {
	return sfcm.Args
}

// DependOn is used for other resources to depend on [SccFolderCustomModule].
func (sfcm *SccFolderCustomModule) DependOn() terra.Reference {
	return terra.ReferenceResource(sfcm)
}

// Dependencies returns the list of resources [SccFolderCustomModule] depends_on.
func (sfcm *SccFolderCustomModule) Dependencies() terra.Dependencies {
	return sfcm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SccFolderCustomModule].
func (sfcm *SccFolderCustomModule) LifecycleManagement() *terra.Lifecycle {
	return sfcm.Lifecycle
}

// Attributes returns the attributes for [SccFolderCustomModule].
func (sfcm *SccFolderCustomModule) Attributes() sccFolderCustomModuleAttributes {
	return sccFolderCustomModuleAttributes{ref: terra.ReferenceResource(sfcm)}
}

// ImportState imports the given attribute values into [SccFolderCustomModule]'s state.
func (sfcm *SccFolderCustomModule) ImportState(av io.Reader) error {
	sfcm.state = &sccFolderCustomModuleState{}
	if err := json.NewDecoder(av).Decode(sfcm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sfcm.Type(), sfcm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SccFolderCustomModule] has state.
func (sfcm *SccFolderCustomModule) State() (*sccFolderCustomModuleState, bool) {
	return sfcm.state, sfcm.state != nil
}

// StateMust returns the state for [SccFolderCustomModule]. Panics if the state is nil.
func (sfcm *SccFolderCustomModule) StateMust() *sccFolderCustomModuleState {
	if sfcm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sfcm.Type(), sfcm.LocalName()))
	}
	return sfcm.state
}

// SccFolderCustomModuleArgs contains the configurations for google_scc_folder_custom_module.
type SccFolderCustomModuleArgs struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// EnablementState: string, required
	EnablementState terra.StringValue `hcl:"enablement_state,attr" validate:"required"`
	// Folder: string, required
	Folder terra.StringValue `hcl:"folder,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// CustomConfig: required
	CustomConfig *sccfoldercustommodule.CustomConfig `hcl:"custom_config,block" validate:"required"`
	// Timeouts: optional
	Timeouts *sccfoldercustommodule.Timeouts `hcl:"timeouts,block"`
}
type sccFolderCustomModuleAttributes struct {
	ref terra.Reference
}

// AncestorModule returns a reference to field ancestor_module of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) AncestorModule() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("ancestor_module"))
}

// DisplayName returns a reference to field display_name of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("display_name"))
}

// EnablementState returns a reference to field enablement_state of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) EnablementState() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("enablement_state"))
}

// Folder returns a reference to field folder of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) Folder() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("folder"))
}

// Id returns a reference to field id of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("id"))
}

// LastEditor returns a reference to field last_editor of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) LastEditor() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("last_editor"))
}

// Name returns a reference to field name of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("name"))
}

// UpdateTime returns a reference to field update_time of google_scc_folder_custom_module.
func (sfcm sccFolderCustomModuleAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(sfcm.ref.Append("update_time"))
}

func (sfcm sccFolderCustomModuleAttributes) CustomConfig() terra.ListValue[sccfoldercustommodule.CustomConfigAttributes] {
	return terra.ReferenceAsList[sccfoldercustommodule.CustomConfigAttributes](sfcm.ref.Append("custom_config"))
}

func (sfcm sccFolderCustomModuleAttributes) Timeouts() sccfoldercustommodule.TimeoutsAttributes {
	return terra.ReferenceAsSingle[sccfoldercustommodule.TimeoutsAttributes](sfcm.ref.Append("timeouts"))
}

type sccFolderCustomModuleState struct {
	AncestorModule  string                                    `json:"ancestor_module"`
	DisplayName     string                                    `json:"display_name"`
	EnablementState string                                    `json:"enablement_state"`
	Folder          string                                    `json:"folder"`
	Id              string                                    `json:"id"`
	LastEditor      string                                    `json:"last_editor"`
	Name            string                                    `json:"name"`
	UpdateTime      string                                    `json:"update_time"`
	CustomConfig    []sccfoldercustommodule.CustomConfigState `json:"custom_config"`
	Timeouts        *sccfoldercustommodule.TimeoutsState      `json:"timeouts"`
}
