// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package google

import (
	"encoding/json"
	"fmt"
	edgenetworknetwork "github.com/golingon/terraproviders/google/5.2.0/edgenetworknetwork"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewEdgenetworkNetwork creates a new instance of [EdgenetworkNetwork].
func NewEdgenetworkNetwork(name string, args EdgenetworkNetworkArgs) *EdgenetworkNetwork {
	return &EdgenetworkNetwork{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*EdgenetworkNetwork)(nil)

// EdgenetworkNetwork represents the Terraform resource google_edgenetwork_network.
type EdgenetworkNetwork struct {
	Name      string
	Args      EdgenetworkNetworkArgs
	state     *edgenetworkNetworkState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [EdgenetworkNetwork].
func (en *EdgenetworkNetwork) Type() string {
	return "google_edgenetwork_network"
}

// LocalName returns the local name for [EdgenetworkNetwork].
func (en *EdgenetworkNetwork) LocalName() string {
	return en.Name
}

// Configuration returns the configuration (args) for [EdgenetworkNetwork].
func (en *EdgenetworkNetwork) Configuration() interface{} {
	return en.Args
}

// DependOn is used for other resources to depend on [EdgenetworkNetwork].
func (en *EdgenetworkNetwork) DependOn() terra.Reference {
	return terra.ReferenceResource(en)
}

// Dependencies returns the list of resources [EdgenetworkNetwork] depends_on.
func (en *EdgenetworkNetwork) Dependencies() terra.Dependencies {
	return en.DependsOn
}

// LifecycleManagement returns the lifecycle block for [EdgenetworkNetwork].
func (en *EdgenetworkNetwork) LifecycleManagement() *terra.Lifecycle {
	return en.Lifecycle
}

// Attributes returns the attributes for [EdgenetworkNetwork].
func (en *EdgenetworkNetwork) Attributes() edgenetworkNetworkAttributes {
	return edgenetworkNetworkAttributes{ref: terra.ReferenceResource(en)}
}

// ImportState imports the given attribute values into [EdgenetworkNetwork]'s state.
func (en *EdgenetworkNetwork) ImportState(av io.Reader) error {
	en.state = &edgenetworkNetworkState{}
	if err := json.NewDecoder(av).Decode(en.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", en.Type(), en.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [EdgenetworkNetwork] has state.
func (en *EdgenetworkNetwork) State() (*edgenetworkNetworkState, bool) {
	return en.state, en.state != nil
}

// StateMust returns the state for [EdgenetworkNetwork]. Panics if the state is nil.
func (en *EdgenetworkNetwork) StateMust() *edgenetworkNetworkState {
	if en.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", en.Type(), en.LocalName()))
	}
	return en.state
}

// EdgenetworkNetworkArgs contains the configurations for google_edgenetwork_network.
type EdgenetworkNetworkArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Mtu: number, optional
	Mtu terra.NumberValue `hcl:"mtu,attr"`
	// NetworkId: string, required
	NetworkId terra.StringValue `hcl:"network_id,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, required
	Zone terra.StringValue `hcl:"zone,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *edgenetworknetwork.Timeouts `hcl:"timeouts,block"`
}
type edgenetworkNetworkAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("create_time"))
}

// Description returns a reference to field description of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("description"))
}

// Id returns a reference to field id of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("id"))
}

// Labels returns a reference to field labels of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](en.ref.Append("labels"))
}

// Location returns a reference to field location of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("location"))
}

// Mtu returns a reference to field mtu of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Mtu() terra.NumberValue {
	return terra.ReferenceAsNumber(en.ref.Append("mtu"))
}

// Name returns a reference to field name of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("name"))
}

// NetworkId returns a reference to field network_id of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) NetworkId() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("network_id"))
}

// Project returns a reference to field project of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("project"))
}

// UpdateTime returns a reference to field update_time of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("update_time"))
}

// Zone returns a reference to field zone of google_edgenetwork_network.
func (en edgenetworkNetworkAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(en.ref.Append("zone"))
}

func (en edgenetworkNetworkAttributes) Timeouts() edgenetworknetwork.TimeoutsAttributes {
	return terra.ReferenceAsSingle[edgenetworknetwork.TimeoutsAttributes](en.ref.Append("timeouts"))
}

type edgenetworkNetworkState struct {
	CreateTime  string                            `json:"create_time"`
	Description string                            `json:"description"`
	Id          string                            `json:"id"`
	Labels      map[string]string                 `json:"labels"`
	Location    string                            `json:"location"`
	Mtu         float64                           `json:"mtu"`
	Name        string                            `json:"name"`
	NetworkId   string                            `json:"network_id"`
	Project     string                            `json:"project"`
	UpdateTime  string                            `json:"update_time"`
	Zone        string                            `json:"zone"`
	Timeouts    *edgenetworknetwork.TimeoutsState `json:"timeouts"`
}
