// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sourcereporepository

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type PubsubConfigs struct {
	// MessageFormat: string, required
	MessageFormat terra.StringValue `hcl:"message_format,attr" validate:"required"`
	// ServiceAccountEmail: string, optional
	ServiceAccountEmail terra.StringValue `hcl:"service_account_email,attr"`
	// Topic: string, required
	Topic terra.StringValue `hcl:"topic,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type PubsubConfigsAttributes struct {
	ref terra.Reference
}

func (pc PubsubConfigsAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc PubsubConfigsAttributes) InternalWithRef(ref terra.Reference) PubsubConfigsAttributes {
	return PubsubConfigsAttributes{ref: ref}
}

func (pc PubsubConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc PubsubConfigsAttributes) MessageFormat() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("message_format"))
}

func (pc PubsubConfigsAttributes) ServiceAccountEmail() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("service_account_email"))
}

func (pc PubsubConfigsAttributes) Topic() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("topic"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type PubsubConfigsState struct {
	MessageFormat       string `json:"message_format"`
	ServiceAccountEmail string `json:"service_account_email"`
	Topic               string `json:"topic"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
