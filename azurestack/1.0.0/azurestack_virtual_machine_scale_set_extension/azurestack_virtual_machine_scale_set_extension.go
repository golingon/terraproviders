// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurestack_virtual_machine_scale_set_extension

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurestack_virtual_machine_scale_set_extension.
type Resource struct {
	Name      string
	Args      Args
	state     *azurestackVirtualMachineScaleSetExtensionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avmsse *Resource) Type() string {
	return "azurestack_virtual_machine_scale_set_extension"
}

// LocalName returns the local name for [Resource].
func (avmsse *Resource) LocalName() string {
	return avmsse.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avmsse *Resource) Configuration() interface{} {
	return avmsse.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avmsse *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avmsse)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avmsse *Resource) Dependencies() terra.Dependencies {
	return avmsse.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avmsse *Resource) LifecycleManagement() *terra.Lifecycle {
	return avmsse.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avmsse *Resource) Attributes() azurestackVirtualMachineScaleSetExtensionAttributes {
	return azurestackVirtualMachineScaleSetExtensionAttributes{ref: terra.ReferenceResource(avmsse)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avmsse *Resource) ImportState(state io.Reader) error {
	avmsse.state = &azurestackVirtualMachineScaleSetExtensionState{}
	if err := json.NewDecoder(state).Decode(avmsse.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avmsse.Type(), avmsse.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avmsse *Resource) State() (*azurestackVirtualMachineScaleSetExtensionState, bool) {
	return avmsse.state, avmsse.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avmsse *Resource) StateMust() *azurestackVirtualMachineScaleSetExtensionState {
	if avmsse.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avmsse.Type(), avmsse.LocalName()))
	}
	return avmsse.state
}

// Args contains the configurations for azurestack_virtual_machine_scale_set_extension.
type Args struct {
	// AutoUpgradeMinorVersion: bool, optional
	AutoUpgradeMinorVersion terra.BoolValue `hcl:"auto_upgrade_minor_version,attr"`
	// ForceUpdateTag: string, optional
	ForceUpdateTag terra.StringValue `hcl:"force_update_tag,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ProtectedSettings: string, optional
	ProtectedSettings terra.StringValue `hcl:"protected_settings,attr"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Settings: string, optional
	Settings terra.StringValue `hcl:"settings,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeHandlerVersion: string, required
	TypeHandlerVersion terra.StringValue `hcl:"type_handler_version,attr" validate:"required"`
	// VirtualMachineScaleSetId: string, required
	VirtualMachineScaleSetId terra.StringValue `hcl:"virtual_machine_scale_set_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurestackVirtualMachineScaleSetExtensionAttributes struct {
	ref terra.Reference
}

// AutoUpgradeMinorVersion returns a reference to field auto_upgrade_minor_version of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) AutoUpgradeMinorVersion() terra.BoolValue {
	return terra.ReferenceAsBool(avmsse.ref.Append("auto_upgrade_minor_version"))
}

// ForceUpdateTag returns a reference to field force_update_tag of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) ForceUpdateTag() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("force_update_tag"))
}

// Id returns a reference to field id of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("id"))
}

// Name returns a reference to field name of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("name"))
}

// ProtectedSettings returns a reference to field protected_settings of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) ProtectedSettings() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("protected_settings"))
}

// Publisher returns a reference to field publisher of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("publisher"))
}

// Settings returns a reference to field settings of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) Settings() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("settings"))
}

// Type returns a reference to field type of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("type"))
}

// TypeHandlerVersion returns a reference to field type_handler_version of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) TypeHandlerVersion() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("type_handler_version"))
}

// VirtualMachineScaleSetId returns a reference to field virtual_machine_scale_set_id of azurestack_virtual_machine_scale_set_extension.
func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) VirtualMachineScaleSetId() terra.StringValue {
	return terra.ReferenceAsString(avmsse.ref.Append("virtual_machine_scale_set_id"))
}

func (avmsse azurestackVirtualMachineScaleSetExtensionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avmsse.ref.Append("timeouts"))
}

type azurestackVirtualMachineScaleSetExtensionState struct {
	AutoUpgradeMinorVersion  bool           `json:"auto_upgrade_minor_version"`
	ForceUpdateTag           string         `json:"force_update_tag"`
	Id                       string         `json:"id"`
	Name                     string         `json:"name"`
	ProtectedSettings        string         `json:"protected_settings"`
	Publisher                string         `json:"publisher"`
	Settings                 string         `json:"settings"`
	Type                     string         `json:"type"`
	TypeHandlerVersion       string         `json:"type_handler_version"`
	VirtualMachineScaleSetId string         `json:"virtual_machine_scale_set_id"`
	Timeouts                 *TimeoutsState `json:"timeouts"`
}
