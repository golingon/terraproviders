// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurestack_network_interface_backend_address_pool_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurestack_network_interface_backend_address_pool_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azurestackNetworkInterfaceBackendAddressPoolAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (anibapa *Resource) Type() string {
	return "azurestack_network_interface_backend_address_pool_association"
}

// LocalName returns the local name for [Resource].
func (anibapa *Resource) LocalName() string {
	return anibapa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (anibapa *Resource) Configuration() interface{} {
	return anibapa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (anibapa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(anibapa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (anibapa *Resource) Dependencies() terra.Dependencies {
	return anibapa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (anibapa *Resource) LifecycleManagement() *terra.Lifecycle {
	return anibapa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (anibapa *Resource) Attributes() azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes {
	return azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes{ref: terra.ReferenceResource(anibapa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (anibapa *Resource) ImportState(state io.Reader) error {
	anibapa.state = &azurestackNetworkInterfaceBackendAddressPoolAssociationState{}
	if err := json.NewDecoder(state).Decode(anibapa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", anibapa.Type(), anibapa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (anibapa *Resource) State() (*azurestackNetworkInterfaceBackendAddressPoolAssociationState, bool) {
	return anibapa.state, anibapa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (anibapa *Resource) StateMust() *azurestackNetworkInterfaceBackendAddressPoolAssociationState {
	if anibapa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", anibapa.Type(), anibapa.LocalName()))
	}
	return anibapa.state
}

// Args contains the configurations for azurestack_network_interface_backend_address_pool_association.
type Args struct {
	// BackendAddressPoolId: string, required
	BackendAddressPoolId terra.StringValue `hcl:"backend_address_pool_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpConfigurationName: string, required
	IpConfigurationName terra.StringValue `hcl:"ip_configuration_name,attr" validate:"required"`
	// NetworkInterfaceId: string, required
	NetworkInterfaceId terra.StringValue `hcl:"network_interface_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes struct {
	ref terra.Reference
}

// BackendAddressPoolId returns a reference to field backend_address_pool_id of azurestack_network_interface_backend_address_pool_association.
func (anibapa azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes) BackendAddressPoolId() terra.StringValue {
	return terra.ReferenceAsString(anibapa.ref.Append("backend_address_pool_id"))
}

// Id returns a reference to field id of azurestack_network_interface_backend_address_pool_association.
func (anibapa azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(anibapa.ref.Append("id"))
}

// IpConfigurationName returns a reference to field ip_configuration_name of azurestack_network_interface_backend_address_pool_association.
func (anibapa azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes) IpConfigurationName() terra.StringValue {
	return terra.ReferenceAsString(anibapa.ref.Append("ip_configuration_name"))
}

// NetworkInterfaceId returns a reference to field network_interface_id of azurestack_network_interface_backend_address_pool_association.
func (anibapa azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(anibapa.ref.Append("network_interface_id"))
}

func (anibapa azurestackNetworkInterfaceBackendAddressPoolAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](anibapa.ref.Append("timeouts"))
}

type azurestackNetworkInterfaceBackendAddressPoolAssociationState struct {
	BackendAddressPoolId string         `json:"backend_address_pool_id"`
	Id                   string         `json:"id"`
	IpConfigurationName  string         `json:"ip_configuration_name"`
	NetworkInterfaceId   string         `json:"network_interface_id"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
