// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datanetworksecuritygroup

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type SecurityRule struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type SecurityRuleAttributes struct {
	ref terra.Reference
}

func (sr SecurityRuleAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr SecurityRuleAttributes) InternalWithRef(ref terra.Reference) SecurityRuleAttributes {
	return SecurityRuleAttributes{ref: ref}
}

func (sr SecurityRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr SecurityRuleAttributes) Access() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("access"))
}

func (sr SecurityRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("description"))
}

func (sr SecurityRuleAttributes) DestinationAddressPrefix() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("destination_address_prefix"))
}

func (sr SecurityRuleAttributes) DestinationAddressPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sr.ref.Append("destination_address_prefixes"))
}

func (sr SecurityRuleAttributes) DestinationPortRange() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("destination_port_range"))
}

func (sr SecurityRuleAttributes) DestinationPortRanges() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sr.ref.Append("destination_port_ranges"))
}

func (sr SecurityRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("direction"))
}

func (sr SecurityRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("name"))
}

func (sr SecurityRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(sr.ref.Append("priority"))
}

func (sr SecurityRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("protocol"))
}

func (sr SecurityRuleAttributes) SourceAddressPrefix() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("source_address_prefix"))
}

func (sr SecurityRuleAttributes) SourceAddressPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sr.ref.Append("source_address_prefixes"))
}

func (sr SecurityRuleAttributes) SourcePortRange() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("source_port_range"))
}

func (sr SecurityRuleAttributes) SourcePortRanges() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sr.ref.Append("source_port_ranges"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type SecurityRuleState struct {
	Access                     string   `json:"access"`
	Description                string   `json:"description"`
	DestinationAddressPrefix   string   `json:"destination_address_prefix"`
	DestinationAddressPrefixes []string `json:"destination_address_prefixes"`
	DestinationPortRange       string   `json:"destination_port_range"`
	DestinationPortRanges      []string `json:"destination_port_ranges"`
	Direction                  string   `json:"direction"`
	Name                       string   `json:"name"`
	Priority                   float64  `json:"priority"`
	Protocol                   string   `json:"protocol"`
	SourceAddressPrefix        string   `json:"source_address_prefix"`
	SourceAddressPrefixes      []string `json:"source_address_prefixes"`
	SourcePortRange            string   `json:"source_port_range"`
	SourcePortRanges           []string `json:"source_port_ranges"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
