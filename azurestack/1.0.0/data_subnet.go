// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurestack

import (
	"github.com/golingon/lingon/pkg/terra"
	datasubnet "github.com/golingon/terraproviders/azurestack/1.0.0/datasubnet"
)

// NewDataSubnet creates a new instance of [DataSubnet].
func NewDataSubnet(name string, args DataSubnetArgs) *DataSubnet {
	return &DataSubnet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSubnet)(nil)

// DataSubnet represents the Terraform data resource azurestack_subnet.
type DataSubnet struct {
	Name string
	Args DataSubnetArgs
}

// DataSource returns the Terraform object type for [DataSubnet].
func (s *DataSubnet) DataSource() string {
	return "azurestack_subnet"
}

// LocalName returns the local name for [DataSubnet].
func (s *DataSubnet) LocalName() string {
	return s.Name
}

// Configuration returns the configuration (args) for [DataSubnet].
func (s *DataSubnet) Configuration() interface{} {
	return s.Args
}

// Attributes returns the attributes for [DataSubnet].
func (s *DataSubnet) Attributes() dataSubnetAttributes {
	return dataSubnetAttributes{ref: terra.ReferenceDataResource(s)}
}

// DataSubnetArgs contains the configurations for azurestack_subnet.
type DataSubnetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// VirtualNetworkName: string, required
	VirtualNetworkName terra.StringValue `hcl:"virtual_network_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datasubnet.Timeouts `hcl:"timeouts,block"`
}
type dataSubnetAttributes struct {
	ref terra.Reference
}

// AddressPrefix returns a reference to field address_prefix of azurestack_subnet.
func (s dataSubnetAttributes) AddressPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("address_prefix"))
}

// Id returns a reference to field id of azurestack_subnet.
func (s dataSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

// Name returns a reference to field name of azurestack_subnet.
func (s dataSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

// NetworkSecurityGroupId returns a reference to field network_security_group_id of azurestack_subnet.
func (s dataSubnetAttributes) NetworkSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("network_security_group_id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurestack_subnet.
func (s dataSubnetAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("resource_group_name"))
}

// RouteTableId returns a reference to field route_table_id of azurestack_subnet.
func (s dataSubnetAttributes) RouteTableId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("route_table_id"))
}

// VirtualNetworkName returns a reference to field virtual_network_name of azurestack_subnet.
func (s dataSubnetAttributes) VirtualNetworkName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("virtual_network_name"))
}

func (s dataSubnetAttributes) Timeouts() datasubnet.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datasubnet.TimeoutsAttributes](s.ref.Append("timeouts"))
}
