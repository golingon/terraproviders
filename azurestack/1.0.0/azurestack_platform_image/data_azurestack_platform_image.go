// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurestack_platform_image

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurestack_platform_image.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (api *DataSource) DataSource() string {
	return "azurestack_platform_image"
}

// LocalName returns the local name for [DataSource].
func (api *DataSource) LocalName() string {
	return api.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (api *DataSource) Configuration() interface{} {
	return api.Args
}

// Attributes returns the attributes for [DataSource].
func (api *DataSource) Attributes() dataAzurestackPlatformImageAttributes {
	return dataAzurestackPlatformImageAttributes{ref: terra.ReferenceDataSource(api)}
}

// DataArgs contains the configurations for azurestack_platform_image.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurestackPlatformImageAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurestack_platform_image.
func (api dataAzurestackPlatformImageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(api.ref.Append("id"))
}

// Location returns a reference to field location of azurestack_platform_image.
func (api dataAzurestackPlatformImageAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(api.ref.Append("location"))
}

// Offer returns a reference to field offer of azurestack_platform_image.
func (api dataAzurestackPlatformImageAttributes) Offer() terra.StringValue {
	return terra.ReferenceAsString(api.ref.Append("offer"))
}

// Publisher returns a reference to field publisher of azurestack_platform_image.
func (api dataAzurestackPlatformImageAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(api.ref.Append("publisher"))
}

// Sku returns a reference to field sku of azurestack_platform_image.
func (api dataAzurestackPlatformImageAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(api.ref.Append("sku"))
}

// Version returns a reference to field version of azurestack_platform_image.
func (api dataAzurestackPlatformImageAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(api.ref.Append("version"))
}

func (api dataAzurestackPlatformImageAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](api.ref.Append("timeouts"))
}
