// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package helm_template

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataPostrender struct {
	// BinaryPath: string, required
	BinaryPath terra.StringValue `hcl:"binary_path,attr" validate:"required"`
}

type DataSet struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type DataSetList struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: list of string, required
	Value terra.ListValue[terra.StringValue] `hcl:"value,attr" validate:"required"`
}

type DataSetSensitive struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type DataSetString struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type DataPostrenderAttributes struct {
	ref terra.Reference
}

func (p DataPostrenderAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataPostrenderAttributes) InternalWithRef(ref terra.Reference) DataPostrenderAttributes {
	return DataPostrenderAttributes{ref: ref}
}

func (p DataPostrenderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataPostrenderAttributes) BinaryPath() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("binary_path"))
}

type DataSetAttributes struct {
	ref terra.Reference
}

func (s DataSetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSetAttributes) InternalWithRef(ref terra.Reference) DataSetAttributes {
	return DataSetAttributes{ref: ref}
}

func (s DataSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DataSetAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("type"))
}

func (s DataSetAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("value"))
}

type DataSetListAttributes struct {
	ref terra.Reference
}

func (sl DataSetListAttributes) InternalRef() (terra.Reference, error) {
	return sl.ref, nil
}

func (sl DataSetListAttributes) InternalWithRef(ref terra.Reference) DataSetListAttributes {
	return DataSetListAttributes{ref: ref}
}

func (sl DataSetListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sl.ref.InternalTokens()
}

func (sl DataSetListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("name"))
}

func (sl DataSetListAttributes) Value() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sl.ref.Append("value"))
}

type DataSetSensitiveAttributes struct {
	ref terra.Reference
}

func (ss DataSetSensitiveAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DataSetSensitiveAttributes) InternalWithRef(ref terra.Reference) DataSetSensitiveAttributes {
	return DataSetSensitiveAttributes{ref: ref}
}

func (ss DataSetSensitiveAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DataSetSensitiveAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("name"))
}

func (ss DataSetSensitiveAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("type"))
}

func (ss DataSetSensitiveAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("value"))
}

type DataSetStringAttributes struct {
	ref terra.Reference
}

func (ss DataSetStringAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DataSetStringAttributes) InternalWithRef(ref terra.Reference) DataSetStringAttributes {
	return DataSetStringAttributes{ref: ref}
}

func (ss DataSetStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DataSetStringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("name"))
}

func (ss DataSetStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("value"))
}

type DataPostrenderState struct {
	BinaryPath string `json:"binary_path"`
}

type DataSetState struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

type DataSetListState struct {
	Name  string   `json:"name"`
	Value []string `json:"value"`
}

type DataSetSensitiveState struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

type DataSetStringState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}
