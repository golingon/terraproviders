// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	storagesyncgroup "github.com/golingon/terraproviders/azurerm/3.66.0/storagesyncgroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewStorageSyncGroup creates a new instance of [StorageSyncGroup].
func NewStorageSyncGroup(name string, args StorageSyncGroupArgs) *StorageSyncGroup {
	return &StorageSyncGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StorageSyncGroup)(nil)

// StorageSyncGroup represents the Terraform resource azurerm_storage_sync_group.
type StorageSyncGroup struct {
	Name      string
	Args      StorageSyncGroupArgs
	state     *storageSyncGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [StorageSyncGroup].
func (ssg *StorageSyncGroup) Type() string {
	return "azurerm_storage_sync_group"
}

// LocalName returns the local name for [StorageSyncGroup].
func (ssg *StorageSyncGroup) LocalName() string {
	return ssg.Name
}

// Configuration returns the configuration (args) for [StorageSyncGroup].
func (ssg *StorageSyncGroup) Configuration() interface{} {
	return ssg.Args
}

// DependOn is used for other resources to depend on [StorageSyncGroup].
func (ssg *StorageSyncGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(ssg)
}

// Dependencies returns the list of resources [StorageSyncGroup] depends_on.
func (ssg *StorageSyncGroup) Dependencies() terra.Dependencies {
	return ssg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [StorageSyncGroup].
func (ssg *StorageSyncGroup) LifecycleManagement() *terra.Lifecycle {
	return ssg.Lifecycle
}

// Attributes returns the attributes for [StorageSyncGroup].
func (ssg *StorageSyncGroup) Attributes() storageSyncGroupAttributes {
	return storageSyncGroupAttributes{ref: terra.ReferenceResource(ssg)}
}

// ImportState imports the given attribute values into [StorageSyncGroup]'s state.
func (ssg *StorageSyncGroup) ImportState(av io.Reader) error {
	ssg.state = &storageSyncGroupState{}
	if err := json.NewDecoder(av).Decode(ssg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssg.Type(), ssg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [StorageSyncGroup] has state.
func (ssg *StorageSyncGroup) State() (*storageSyncGroupState, bool) {
	return ssg.state, ssg.state != nil
}

// StateMust returns the state for [StorageSyncGroup]. Panics if the state is nil.
func (ssg *StorageSyncGroup) StateMust() *storageSyncGroupState {
	if ssg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssg.Type(), ssg.LocalName()))
	}
	return ssg.state
}

// StorageSyncGroupArgs contains the configurations for azurerm_storage_sync_group.
type StorageSyncGroupArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StorageSyncId: string, required
	StorageSyncId terra.StringValue `hcl:"storage_sync_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *storagesyncgroup.Timeouts `hcl:"timeouts,block"`
}
type storageSyncGroupAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_storage_sync_group.
func (ssg storageSyncGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssg.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_storage_sync_group.
func (ssg storageSyncGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ssg.ref.Append("name"))
}

// StorageSyncId returns a reference to field storage_sync_id of azurerm_storage_sync_group.
func (ssg storageSyncGroupAttributes) StorageSyncId() terra.StringValue {
	return terra.ReferenceAsString(ssg.ref.Append("storage_sync_id"))
}

func (ssg storageSyncGroupAttributes) Timeouts() storagesyncgroup.TimeoutsAttributes {
	return terra.ReferenceAsSingle[storagesyncgroup.TimeoutsAttributes](ssg.ref.Append("timeouts"))
}

type storageSyncGroupState struct {
	Id            string                          `json:"id"`
	Name          string                          `json:"name"`
	StorageSyncId string                          `json:"storage_sync_id"`
	Timeouts      *storagesyncgroup.TimeoutsState `json:"timeouts"`
}
