// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package apimanagementapioperation

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Request struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// RequestHeader: min=0
	Header []RequestHeader `hcl:"header,block" validate:"min=0"`
	// QueryParameter: min=0
	QueryParameter []QueryParameter `hcl:"query_parameter,block" validate:"min=0"`
	// RequestRepresentation: min=0
	Representation []RequestRepresentation `hcl:"representation,block" validate:"min=0"`
}

type RequestHeader struct {
	// DefaultValue: string, optional
	DefaultValue terra.StringValue `hcl:"default_value,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required: bool, required
	Required terra.BoolValue `hcl:"required,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// Values: set of string, optional
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
	// RequestHeaderExample: min=0
	Example []RequestHeaderExample `hcl:"example,block" validate:"min=0"`
}

type RequestHeaderExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type QueryParameter struct {
	// DefaultValue: string, optional
	DefaultValue terra.StringValue `hcl:"default_value,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required: bool, required
	Required terra.BoolValue `hcl:"required,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// Values: set of string, optional
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
	// QueryParameterExample: min=0
	Example []QueryParameterExample `hcl:"example,block" validate:"min=0"`
}

type QueryParameterExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RequestRepresentation struct {
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// RequestRepresentationExample: min=0
	Example []RequestRepresentationExample `hcl:"example,block" validate:"min=0"`
	// RequestRepresentationFormParameter: min=0
	FormParameter []RequestRepresentationFormParameter `hcl:"form_parameter,block" validate:"min=0"`
}

type RequestRepresentationExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RequestRepresentationFormParameter struct {
	// DefaultValue: string, optional
	DefaultValue terra.StringValue `hcl:"default_value,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required: bool, required
	Required terra.BoolValue `hcl:"required,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// Values: set of string, optional
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
	// RequestRepresentationFormParameterExample: min=0
	Example []RequestRepresentationFormParameterExample `hcl:"example,block" validate:"min=0"`
}

type RequestRepresentationFormParameterExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type Response struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// StatusCode: number, required
	StatusCode terra.NumberValue `hcl:"status_code,attr" validate:"required"`
	// ResponseHeader: min=0
	Header []ResponseHeader `hcl:"header,block" validate:"min=0"`
	// ResponseRepresentation: min=0
	Representation []ResponseRepresentation `hcl:"representation,block" validate:"min=0"`
}

type ResponseHeader struct {
	// DefaultValue: string, optional
	DefaultValue terra.StringValue `hcl:"default_value,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required: bool, required
	Required terra.BoolValue `hcl:"required,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// Values: set of string, optional
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
	// ResponseHeaderExample: min=0
	Example []ResponseHeaderExample `hcl:"example,block" validate:"min=0"`
}

type ResponseHeaderExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type ResponseRepresentation struct {
	// ContentType: string, required
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// ResponseRepresentationExample: min=0
	Example []ResponseRepresentationExample `hcl:"example,block" validate:"min=0"`
	// ResponseRepresentationFormParameter: min=0
	FormParameter []ResponseRepresentationFormParameter `hcl:"form_parameter,block" validate:"min=0"`
}

type ResponseRepresentationExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type ResponseRepresentationFormParameter struct {
	// DefaultValue: string, optional
	DefaultValue terra.StringValue `hcl:"default_value,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required: bool, required
	Required terra.BoolValue `hcl:"required,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// Values: set of string, optional
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
	// ResponseRepresentationFormParameterExample: min=0
	Example []ResponseRepresentationFormParameterExample `hcl:"example,block" validate:"min=0"`
}

type ResponseRepresentationFormParameterExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type TemplateParameter struct {
	// DefaultValue: string, optional
	DefaultValue terra.StringValue `hcl:"default_value,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required: bool, required
	Required terra.BoolValue `hcl:"required,attr" validate:"required"`
	// SchemaId: string, optional
	SchemaId terra.StringValue `hcl:"schema_id,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// TypeName: string, optional
	TypeName terra.StringValue `hcl:"type_name,attr"`
	// Values: set of string, optional
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
	// TemplateParameterExample: min=0
	Example []TemplateParameterExample `hcl:"example,block" validate:"min=0"`
}

type TemplateParameterExample struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// ExternalValue: string, optional
	ExternalValue terra.StringValue `hcl:"external_value,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Summary: string, optional
	Summary terra.StringValue `hcl:"summary,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type RequestAttributes struct {
	ref terra.Reference
}

func (r RequestAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RequestAttributes) InternalWithRef(ref terra.Reference) RequestAttributes {
	return RequestAttributes{ref: ref}
}

func (r RequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RequestAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r RequestAttributes) Header() terra.ListValue[RequestHeaderAttributes] {
	return terra.ReferenceAsList[RequestHeaderAttributes](r.ref.Append("header"))
}

func (r RequestAttributes) QueryParameter() terra.ListValue[QueryParameterAttributes] {
	return terra.ReferenceAsList[QueryParameterAttributes](r.ref.Append("query_parameter"))
}

func (r RequestAttributes) Representation() terra.ListValue[RequestRepresentationAttributes] {
	return terra.ReferenceAsList[RequestRepresentationAttributes](r.ref.Append("representation"))
}

type RequestHeaderAttributes struct {
	ref terra.Reference
}

func (h RequestHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h RequestHeaderAttributes) InternalWithRef(ref terra.Reference) RequestHeaderAttributes {
	return RequestHeaderAttributes{ref: ref}
}

func (h RequestHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h RequestHeaderAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("default_value"))
}

func (h RequestHeaderAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("description"))
}

func (h RequestHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h RequestHeaderAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("required"))
}

func (h RequestHeaderAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("schema_id"))
}

func (h RequestHeaderAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("type"))
}

func (h RequestHeaderAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("type_name"))
}

func (h RequestHeaderAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("values"))
}

func (h RequestHeaderAttributes) Example() terra.ListValue[RequestHeaderExampleAttributes] {
	return terra.ReferenceAsList[RequestHeaderExampleAttributes](h.ref.Append("example"))
}

type RequestHeaderExampleAttributes struct {
	ref terra.Reference
}

func (e RequestHeaderExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e RequestHeaderExampleAttributes) InternalWithRef(ref terra.Reference) RequestHeaderExampleAttributes {
	return RequestHeaderExampleAttributes{ref: ref}
}

func (e RequestHeaderExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e RequestHeaderExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e RequestHeaderExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e RequestHeaderExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e RequestHeaderExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e RequestHeaderExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type QueryParameterAttributes struct {
	ref terra.Reference
}

func (qp QueryParameterAttributes) InternalRef() (terra.Reference, error) {
	return qp.ref, nil
}

func (qp QueryParameterAttributes) InternalWithRef(ref terra.Reference) QueryParameterAttributes {
	return QueryParameterAttributes{ref: ref}
}

func (qp QueryParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qp.ref.InternalTokens()
}

func (qp QueryParameterAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("default_value"))
}

func (qp QueryParameterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("description"))
}

func (qp QueryParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("name"))
}

func (qp QueryParameterAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(qp.ref.Append("required"))
}

func (qp QueryParameterAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("schema_id"))
}

func (qp QueryParameterAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("type"))
}

func (qp QueryParameterAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("type_name"))
}

func (qp QueryParameterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qp.ref.Append("values"))
}

func (qp QueryParameterAttributes) Example() terra.ListValue[QueryParameterExampleAttributes] {
	return terra.ReferenceAsList[QueryParameterExampleAttributes](qp.ref.Append("example"))
}

type QueryParameterExampleAttributes struct {
	ref terra.Reference
}

func (e QueryParameterExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e QueryParameterExampleAttributes) InternalWithRef(ref terra.Reference) QueryParameterExampleAttributes {
	return QueryParameterExampleAttributes{ref: ref}
}

func (e QueryParameterExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e QueryParameterExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e QueryParameterExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e QueryParameterExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e QueryParameterExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e QueryParameterExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type RequestRepresentationAttributes struct {
	ref terra.Reference
}

func (r RequestRepresentationAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RequestRepresentationAttributes) InternalWithRef(ref terra.Reference) RequestRepresentationAttributes {
	return RequestRepresentationAttributes{ref: ref}
}

func (r RequestRepresentationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RequestRepresentationAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("content_type"))
}

func (r RequestRepresentationAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("schema_id"))
}

func (r RequestRepresentationAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("type_name"))
}

func (r RequestRepresentationAttributes) Example() terra.ListValue[RequestRepresentationExampleAttributes] {
	return terra.ReferenceAsList[RequestRepresentationExampleAttributes](r.ref.Append("example"))
}

func (r RequestRepresentationAttributes) FormParameter() terra.ListValue[RequestRepresentationFormParameterAttributes] {
	return terra.ReferenceAsList[RequestRepresentationFormParameterAttributes](r.ref.Append("form_parameter"))
}

type RequestRepresentationExampleAttributes struct {
	ref terra.Reference
}

func (e RequestRepresentationExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e RequestRepresentationExampleAttributes) InternalWithRef(ref terra.Reference) RequestRepresentationExampleAttributes {
	return RequestRepresentationExampleAttributes{ref: ref}
}

func (e RequestRepresentationExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e RequestRepresentationExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e RequestRepresentationExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e RequestRepresentationExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e RequestRepresentationExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e RequestRepresentationExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type RequestRepresentationFormParameterAttributes struct {
	ref terra.Reference
}

func (fp RequestRepresentationFormParameterAttributes) InternalRef() (terra.Reference, error) {
	return fp.ref, nil
}

func (fp RequestRepresentationFormParameterAttributes) InternalWithRef(ref terra.Reference) RequestRepresentationFormParameterAttributes {
	return RequestRepresentationFormParameterAttributes{ref: ref}
}

func (fp RequestRepresentationFormParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fp.ref.InternalTokens()
}

func (fp RequestRepresentationFormParameterAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("default_value"))
}

func (fp RequestRepresentationFormParameterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("description"))
}

func (fp RequestRepresentationFormParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("name"))
}

func (fp RequestRepresentationFormParameterAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(fp.ref.Append("required"))
}

func (fp RequestRepresentationFormParameterAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("schema_id"))
}

func (fp RequestRepresentationFormParameterAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("type"))
}

func (fp RequestRepresentationFormParameterAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("type_name"))
}

func (fp RequestRepresentationFormParameterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](fp.ref.Append("values"))
}

func (fp RequestRepresentationFormParameterAttributes) Example() terra.ListValue[RequestRepresentationFormParameterExampleAttributes] {
	return terra.ReferenceAsList[RequestRepresentationFormParameterExampleAttributes](fp.ref.Append("example"))
}

type RequestRepresentationFormParameterExampleAttributes struct {
	ref terra.Reference
}

func (e RequestRepresentationFormParameterExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e RequestRepresentationFormParameterExampleAttributes) InternalWithRef(ref terra.Reference) RequestRepresentationFormParameterExampleAttributes {
	return RequestRepresentationFormParameterExampleAttributes{ref: ref}
}

func (e RequestRepresentationFormParameterExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e RequestRepresentationFormParameterExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e RequestRepresentationFormParameterExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e RequestRepresentationFormParameterExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e RequestRepresentationFormParameterExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e RequestRepresentationFormParameterExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type ResponseAttributes struct {
	ref terra.Reference
}

func (r ResponseAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r ResponseAttributes) InternalWithRef(ref terra.Reference) ResponseAttributes {
	return ResponseAttributes{ref: ref}
}

func (r ResponseAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r ResponseAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r ResponseAttributes) StatusCode() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("status_code"))
}

func (r ResponseAttributes) Header() terra.ListValue[ResponseHeaderAttributes] {
	return terra.ReferenceAsList[ResponseHeaderAttributes](r.ref.Append("header"))
}

func (r ResponseAttributes) Representation() terra.ListValue[ResponseRepresentationAttributes] {
	return terra.ReferenceAsList[ResponseRepresentationAttributes](r.ref.Append("representation"))
}

type ResponseHeaderAttributes struct {
	ref terra.Reference
}

func (h ResponseHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h ResponseHeaderAttributes) InternalWithRef(ref terra.Reference) ResponseHeaderAttributes {
	return ResponseHeaderAttributes{ref: ref}
}

func (h ResponseHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h ResponseHeaderAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("default_value"))
}

func (h ResponseHeaderAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("description"))
}

func (h ResponseHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h ResponseHeaderAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("required"))
}

func (h ResponseHeaderAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("schema_id"))
}

func (h ResponseHeaderAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("type"))
}

func (h ResponseHeaderAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("type_name"))
}

func (h ResponseHeaderAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("values"))
}

func (h ResponseHeaderAttributes) Example() terra.ListValue[ResponseHeaderExampleAttributes] {
	return terra.ReferenceAsList[ResponseHeaderExampleAttributes](h.ref.Append("example"))
}

type ResponseHeaderExampleAttributes struct {
	ref terra.Reference
}

func (e ResponseHeaderExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e ResponseHeaderExampleAttributes) InternalWithRef(ref terra.Reference) ResponseHeaderExampleAttributes {
	return ResponseHeaderExampleAttributes{ref: ref}
}

func (e ResponseHeaderExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e ResponseHeaderExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e ResponseHeaderExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e ResponseHeaderExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e ResponseHeaderExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e ResponseHeaderExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type ResponseRepresentationAttributes struct {
	ref terra.Reference
}

func (r ResponseRepresentationAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r ResponseRepresentationAttributes) InternalWithRef(ref terra.Reference) ResponseRepresentationAttributes {
	return ResponseRepresentationAttributes{ref: ref}
}

func (r ResponseRepresentationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r ResponseRepresentationAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("content_type"))
}

func (r ResponseRepresentationAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("schema_id"))
}

func (r ResponseRepresentationAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("type_name"))
}

func (r ResponseRepresentationAttributes) Example() terra.ListValue[ResponseRepresentationExampleAttributes] {
	return terra.ReferenceAsList[ResponseRepresentationExampleAttributes](r.ref.Append("example"))
}

func (r ResponseRepresentationAttributes) FormParameter() terra.ListValue[ResponseRepresentationFormParameterAttributes] {
	return terra.ReferenceAsList[ResponseRepresentationFormParameterAttributes](r.ref.Append("form_parameter"))
}

type ResponseRepresentationExampleAttributes struct {
	ref terra.Reference
}

func (e ResponseRepresentationExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e ResponseRepresentationExampleAttributes) InternalWithRef(ref terra.Reference) ResponseRepresentationExampleAttributes {
	return ResponseRepresentationExampleAttributes{ref: ref}
}

func (e ResponseRepresentationExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e ResponseRepresentationExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e ResponseRepresentationExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e ResponseRepresentationExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e ResponseRepresentationExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e ResponseRepresentationExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type ResponseRepresentationFormParameterAttributes struct {
	ref terra.Reference
}

func (fp ResponseRepresentationFormParameterAttributes) InternalRef() (terra.Reference, error) {
	return fp.ref, nil
}

func (fp ResponseRepresentationFormParameterAttributes) InternalWithRef(ref terra.Reference) ResponseRepresentationFormParameterAttributes {
	return ResponseRepresentationFormParameterAttributes{ref: ref}
}

func (fp ResponseRepresentationFormParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fp.ref.InternalTokens()
}

func (fp ResponseRepresentationFormParameterAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("default_value"))
}

func (fp ResponseRepresentationFormParameterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("description"))
}

func (fp ResponseRepresentationFormParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("name"))
}

func (fp ResponseRepresentationFormParameterAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(fp.ref.Append("required"))
}

func (fp ResponseRepresentationFormParameterAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("schema_id"))
}

func (fp ResponseRepresentationFormParameterAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("type"))
}

func (fp ResponseRepresentationFormParameterAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(fp.ref.Append("type_name"))
}

func (fp ResponseRepresentationFormParameterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](fp.ref.Append("values"))
}

func (fp ResponseRepresentationFormParameterAttributes) Example() terra.ListValue[ResponseRepresentationFormParameterExampleAttributes] {
	return terra.ReferenceAsList[ResponseRepresentationFormParameterExampleAttributes](fp.ref.Append("example"))
}

type ResponseRepresentationFormParameterExampleAttributes struct {
	ref terra.Reference
}

func (e ResponseRepresentationFormParameterExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e ResponseRepresentationFormParameterExampleAttributes) InternalWithRef(ref terra.Reference) ResponseRepresentationFormParameterExampleAttributes {
	return ResponseRepresentationFormParameterExampleAttributes{ref: ref}
}

func (e ResponseRepresentationFormParameterExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e ResponseRepresentationFormParameterExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e ResponseRepresentationFormParameterExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e ResponseRepresentationFormParameterExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e ResponseRepresentationFormParameterExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e ResponseRepresentationFormParameterExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type TemplateParameterAttributes struct {
	ref terra.Reference
}

func (tp TemplateParameterAttributes) InternalRef() (terra.Reference, error) {
	return tp.ref, nil
}

func (tp TemplateParameterAttributes) InternalWithRef(ref terra.Reference) TemplateParameterAttributes {
	return TemplateParameterAttributes{ref: ref}
}

func (tp TemplateParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tp.ref.InternalTokens()
}

func (tp TemplateParameterAttributes) DefaultValue() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("default_value"))
}

func (tp TemplateParameterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("description"))
}

func (tp TemplateParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("name"))
}

func (tp TemplateParameterAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(tp.ref.Append("required"))
}

func (tp TemplateParameterAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("schema_id"))
}

func (tp TemplateParameterAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("type"))
}

func (tp TemplateParameterAttributes) TypeName() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("type_name"))
}

func (tp TemplateParameterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](tp.ref.Append("values"))
}

func (tp TemplateParameterAttributes) Example() terra.ListValue[TemplateParameterExampleAttributes] {
	return terra.ReferenceAsList[TemplateParameterExampleAttributes](tp.ref.Append("example"))
}

type TemplateParameterExampleAttributes struct {
	ref terra.Reference
}

func (e TemplateParameterExampleAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e TemplateParameterExampleAttributes) InternalWithRef(ref terra.Reference) TemplateParameterExampleAttributes {
	return TemplateParameterExampleAttributes{ref: ref}
}

func (e TemplateParameterExampleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e TemplateParameterExampleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e TemplateParameterExampleAttributes) ExternalValue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("external_value"))
}

func (e TemplateParameterExampleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e TemplateParameterExampleAttributes) Summary() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("summary"))
}

func (e TemplateParameterExampleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type RequestState struct {
	Description    string                       `json:"description"`
	Header         []RequestHeaderState         `json:"header"`
	QueryParameter []QueryParameterState        `json:"query_parameter"`
	Representation []RequestRepresentationState `json:"representation"`
}

type RequestHeaderState struct {
	DefaultValue string                      `json:"default_value"`
	Description  string                      `json:"description"`
	Name         string                      `json:"name"`
	Required     bool                        `json:"required"`
	SchemaId     string                      `json:"schema_id"`
	Type         string                      `json:"type"`
	TypeName     string                      `json:"type_name"`
	Values       []string                    `json:"values"`
	Example      []RequestHeaderExampleState `json:"example"`
}

type RequestHeaderExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type QueryParameterState struct {
	DefaultValue string                       `json:"default_value"`
	Description  string                       `json:"description"`
	Name         string                       `json:"name"`
	Required     bool                         `json:"required"`
	SchemaId     string                       `json:"schema_id"`
	Type         string                       `json:"type"`
	TypeName     string                       `json:"type_name"`
	Values       []string                     `json:"values"`
	Example      []QueryParameterExampleState `json:"example"`
}

type QueryParameterExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type RequestRepresentationState struct {
	ContentType   string                                    `json:"content_type"`
	SchemaId      string                                    `json:"schema_id"`
	TypeName      string                                    `json:"type_name"`
	Example       []RequestRepresentationExampleState       `json:"example"`
	FormParameter []RequestRepresentationFormParameterState `json:"form_parameter"`
}

type RequestRepresentationExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type RequestRepresentationFormParameterState struct {
	DefaultValue string                                           `json:"default_value"`
	Description  string                                           `json:"description"`
	Name         string                                           `json:"name"`
	Required     bool                                             `json:"required"`
	SchemaId     string                                           `json:"schema_id"`
	Type         string                                           `json:"type"`
	TypeName     string                                           `json:"type_name"`
	Values       []string                                         `json:"values"`
	Example      []RequestRepresentationFormParameterExampleState `json:"example"`
}

type RequestRepresentationFormParameterExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type ResponseState struct {
	Description    string                        `json:"description"`
	StatusCode     float64                       `json:"status_code"`
	Header         []ResponseHeaderState         `json:"header"`
	Representation []ResponseRepresentationState `json:"representation"`
}

type ResponseHeaderState struct {
	DefaultValue string                       `json:"default_value"`
	Description  string                       `json:"description"`
	Name         string                       `json:"name"`
	Required     bool                         `json:"required"`
	SchemaId     string                       `json:"schema_id"`
	Type         string                       `json:"type"`
	TypeName     string                       `json:"type_name"`
	Values       []string                     `json:"values"`
	Example      []ResponseHeaderExampleState `json:"example"`
}

type ResponseHeaderExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type ResponseRepresentationState struct {
	ContentType   string                                     `json:"content_type"`
	SchemaId      string                                     `json:"schema_id"`
	TypeName      string                                     `json:"type_name"`
	Example       []ResponseRepresentationExampleState       `json:"example"`
	FormParameter []ResponseRepresentationFormParameterState `json:"form_parameter"`
}

type ResponseRepresentationExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type ResponseRepresentationFormParameterState struct {
	DefaultValue string                                            `json:"default_value"`
	Description  string                                            `json:"description"`
	Name         string                                            `json:"name"`
	Required     bool                                              `json:"required"`
	SchemaId     string                                            `json:"schema_id"`
	Type         string                                            `json:"type"`
	TypeName     string                                            `json:"type_name"`
	Values       []string                                          `json:"values"`
	Example      []ResponseRepresentationFormParameterExampleState `json:"example"`
}

type ResponseRepresentationFormParameterExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type TemplateParameterState struct {
	DefaultValue string                          `json:"default_value"`
	Description  string                          `json:"description"`
	Name         string                          `json:"name"`
	Required     bool                            `json:"required"`
	SchemaId     string                          `json:"schema_id"`
	Type         string                          `json:"type"`
	TypeName     string                          `json:"type_name"`
	Values       []string                        `json:"values"`
	Example      []TemplateParameterExampleState `json:"example"`
}

type TemplateParameterExampleState struct {
	Description   string `json:"description"`
	ExternalValue string `json:"external_value"`
	Name          string `json:"name"`
	Summary       string `json:"summary"`
	Value         string `json:"value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
