// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	synapseworkspacevulnerabilityassessment "github.com/golingon/terraproviders/azurerm/3.65.0/synapseworkspacevulnerabilityassessment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSynapseWorkspaceVulnerabilityAssessment creates a new instance of [SynapseWorkspaceVulnerabilityAssessment].
func NewSynapseWorkspaceVulnerabilityAssessment(name string, args SynapseWorkspaceVulnerabilityAssessmentArgs) *SynapseWorkspaceVulnerabilityAssessment {
	return &SynapseWorkspaceVulnerabilityAssessment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SynapseWorkspaceVulnerabilityAssessment)(nil)

// SynapseWorkspaceVulnerabilityAssessment represents the Terraform resource azurerm_synapse_workspace_vulnerability_assessment.
type SynapseWorkspaceVulnerabilityAssessment struct {
	Name      string
	Args      SynapseWorkspaceVulnerabilityAssessmentArgs
	state     *synapseWorkspaceVulnerabilityAssessmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SynapseWorkspaceVulnerabilityAssessment].
func (swva *SynapseWorkspaceVulnerabilityAssessment) Type() string {
	return "azurerm_synapse_workspace_vulnerability_assessment"
}

// LocalName returns the local name for [SynapseWorkspaceVulnerabilityAssessment].
func (swva *SynapseWorkspaceVulnerabilityAssessment) LocalName() string {
	return swva.Name
}

// Configuration returns the configuration (args) for [SynapseWorkspaceVulnerabilityAssessment].
func (swva *SynapseWorkspaceVulnerabilityAssessment) Configuration() interface{} {
	return swva.Args
}

// DependOn is used for other resources to depend on [SynapseWorkspaceVulnerabilityAssessment].
func (swva *SynapseWorkspaceVulnerabilityAssessment) DependOn() terra.Reference {
	return terra.ReferenceResource(swva)
}

// Dependencies returns the list of resources [SynapseWorkspaceVulnerabilityAssessment] depends_on.
func (swva *SynapseWorkspaceVulnerabilityAssessment) Dependencies() terra.Dependencies {
	return swva.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SynapseWorkspaceVulnerabilityAssessment].
func (swva *SynapseWorkspaceVulnerabilityAssessment) LifecycleManagement() *terra.Lifecycle {
	return swva.Lifecycle
}

// Attributes returns the attributes for [SynapseWorkspaceVulnerabilityAssessment].
func (swva *SynapseWorkspaceVulnerabilityAssessment) Attributes() synapseWorkspaceVulnerabilityAssessmentAttributes {
	return synapseWorkspaceVulnerabilityAssessmentAttributes{ref: terra.ReferenceResource(swva)}
}

// ImportState imports the given attribute values into [SynapseWorkspaceVulnerabilityAssessment]'s state.
func (swva *SynapseWorkspaceVulnerabilityAssessment) ImportState(av io.Reader) error {
	swva.state = &synapseWorkspaceVulnerabilityAssessmentState{}
	if err := json.NewDecoder(av).Decode(swva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", swva.Type(), swva.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SynapseWorkspaceVulnerabilityAssessment] has state.
func (swva *SynapseWorkspaceVulnerabilityAssessment) State() (*synapseWorkspaceVulnerabilityAssessmentState, bool) {
	return swva.state, swva.state != nil
}

// StateMust returns the state for [SynapseWorkspaceVulnerabilityAssessment]. Panics if the state is nil.
func (swva *SynapseWorkspaceVulnerabilityAssessment) StateMust() *synapseWorkspaceVulnerabilityAssessmentState {
	if swva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", swva.Type(), swva.LocalName()))
	}
	return swva.state
}

// SynapseWorkspaceVulnerabilityAssessmentArgs contains the configurations for azurerm_synapse_workspace_vulnerability_assessment.
type SynapseWorkspaceVulnerabilityAssessmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// StorageAccountAccessKey: string, optional
	StorageAccountAccessKey terra.StringValue `hcl:"storage_account_access_key,attr"`
	// StorageContainerPath: string, required
	StorageContainerPath terra.StringValue `hcl:"storage_container_path,attr" validate:"required"`
	// StorageContainerSasKey: string, optional
	StorageContainerSasKey terra.StringValue `hcl:"storage_container_sas_key,attr"`
	// WorkspaceSecurityAlertPolicyId: string, required
	WorkspaceSecurityAlertPolicyId terra.StringValue `hcl:"workspace_security_alert_policy_id,attr" validate:"required"`
	// RecurringScans: optional
	RecurringScans *synapseworkspacevulnerabilityassessment.RecurringScans `hcl:"recurring_scans,block"`
	// Timeouts: optional
	Timeouts *synapseworkspacevulnerabilityassessment.Timeouts `hcl:"timeouts,block"`
}
type synapseWorkspaceVulnerabilityAssessmentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_synapse_workspace_vulnerability_assessment.
func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(swva.ref.Append("id"))
}

// StorageAccountAccessKey returns a reference to field storage_account_access_key of azurerm_synapse_workspace_vulnerability_assessment.
func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(swva.ref.Append("storage_account_access_key"))
}

// StorageContainerPath returns a reference to field storage_container_path of azurerm_synapse_workspace_vulnerability_assessment.
func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) StorageContainerPath() terra.StringValue {
	return terra.ReferenceAsString(swva.ref.Append("storage_container_path"))
}

// StorageContainerSasKey returns a reference to field storage_container_sas_key of azurerm_synapse_workspace_vulnerability_assessment.
func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) StorageContainerSasKey() terra.StringValue {
	return terra.ReferenceAsString(swva.ref.Append("storage_container_sas_key"))
}

// WorkspaceSecurityAlertPolicyId returns a reference to field workspace_security_alert_policy_id of azurerm_synapse_workspace_vulnerability_assessment.
func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) WorkspaceSecurityAlertPolicyId() terra.StringValue {
	return terra.ReferenceAsString(swva.ref.Append("workspace_security_alert_policy_id"))
}

func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) RecurringScans() terra.ListValue[synapseworkspacevulnerabilityassessment.RecurringScansAttributes] {
	return terra.ReferenceAsList[synapseworkspacevulnerabilityassessment.RecurringScansAttributes](swva.ref.Append("recurring_scans"))
}

func (swva synapseWorkspaceVulnerabilityAssessmentAttributes) Timeouts() synapseworkspacevulnerabilityassessment.TimeoutsAttributes {
	return terra.ReferenceAsSingle[synapseworkspacevulnerabilityassessment.TimeoutsAttributes](swva.ref.Append("timeouts"))
}

type synapseWorkspaceVulnerabilityAssessmentState struct {
	Id                             string                                                        `json:"id"`
	StorageAccountAccessKey        string                                                        `json:"storage_account_access_key"`
	StorageContainerPath           string                                                        `json:"storage_container_path"`
	StorageContainerSasKey         string                                                        `json:"storage_container_sas_key"`
	WorkspaceSecurityAlertPolicyId string                                                        `json:"workspace_security_alert_policy_id"`
	RecurringScans                 []synapseworkspacevulnerabilityassessment.RecurringScansState `json:"recurring_scans"`
	Timeouts                       *synapseworkspacevulnerabilityassessment.TimeoutsState        `json:"timeouts"`
}
