// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	containerappenvironment "github.com/golingon/terraproviders/azurerm/3.65.0/containerappenvironment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewContainerAppEnvironment creates a new instance of [ContainerAppEnvironment].
func NewContainerAppEnvironment(name string, args ContainerAppEnvironmentArgs) *ContainerAppEnvironment {
	return &ContainerAppEnvironment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ContainerAppEnvironment)(nil)

// ContainerAppEnvironment represents the Terraform resource azurerm_container_app_environment.
type ContainerAppEnvironment struct {
	Name      string
	Args      ContainerAppEnvironmentArgs
	state     *containerAppEnvironmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ContainerAppEnvironment].
func (cae *ContainerAppEnvironment) Type() string {
	return "azurerm_container_app_environment"
}

// LocalName returns the local name for [ContainerAppEnvironment].
func (cae *ContainerAppEnvironment) LocalName() string {
	return cae.Name
}

// Configuration returns the configuration (args) for [ContainerAppEnvironment].
func (cae *ContainerAppEnvironment) Configuration() interface{} {
	return cae.Args
}

// DependOn is used for other resources to depend on [ContainerAppEnvironment].
func (cae *ContainerAppEnvironment) DependOn() terra.Reference {
	return terra.ReferenceResource(cae)
}

// Dependencies returns the list of resources [ContainerAppEnvironment] depends_on.
func (cae *ContainerAppEnvironment) Dependencies() terra.Dependencies {
	return cae.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ContainerAppEnvironment].
func (cae *ContainerAppEnvironment) LifecycleManagement() *terra.Lifecycle {
	return cae.Lifecycle
}

// Attributes returns the attributes for [ContainerAppEnvironment].
func (cae *ContainerAppEnvironment) Attributes() containerAppEnvironmentAttributes {
	return containerAppEnvironmentAttributes{ref: terra.ReferenceResource(cae)}
}

// ImportState imports the given attribute values into [ContainerAppEnvironment]'s state.
func (cae *ContainerAppEnvironment) ImportState(av io.Reader) error {
	cae.state = &containerAppEnvironmentState{}
	if err := json.NewDecoder(av).Decode(cae.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cae.Type(), cae.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ContainerAppEnvironment] has state.
func (cae *ContainerAppEnvironment) State() (*containerAppEnvironmentState, bool) {
	return cae.state, cae.state != nil
}

// StateMust returns the state for [ContainerAppEnvironment]. Panics if the state is nil.
func (cae *ContainerAppEnvironment) StateMust() *containerAppEnvironmentState {
	if cae.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cae.Type(), cae.LocalName()))
	}
	return cae.state
}

// ContainerAppEnvironmentArgs contains the configurations for azurerm_container_app_environment.
type ContainerAppEnvironmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InfrastructureSubnetId: string, optional
	InfrastructureSubnetId terra.StringValue `hcl:"infrastructure_subnet_id,attr"`
	// InternalLoadBalancerEnabled: bool, optional
	InternalLoadBalancerEnabled terra.BoolValue `hcl:"internal_load_balancer_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *containerappenvironment.Timeouts `hcl:"timeouts,block"`
}
type containerAppEnvironmentAttributes struct {
	ref terra.Reference
}

// DefaultDomain returns a reference to field default_domain of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) DefaultDomain() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("default_domain"))
}

// DockerBridgeCidr returns a reference to field docker_bridge_cidr of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) DockerBridgeCidr() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("docker_bridge_cidr"))
}

// Id returns a reference to field id of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("id"))
}

// InfrastructureSubnetId returns a reference to field infrastructure_subnet_id of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) InfrastructureSubnetId() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("infrastructure_subnet_id"))
}

// InternalLoadBalancerEnabled returns a reference to field internal_load_balancer_enabled of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) InternalLoadBalancerEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cae.ref.Append("internal_load_balancer_enabled"))
}

// Location returns a reference to field location of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("location"))
}

// LogAnalyticsWorkspaceId returns a reference to field log_analytics_workspace_id of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("log_analytics_workspace_id"))
}

// Name returns a reference to field name of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("name"))
}

// PlatformReservedCidr returns a reference to field platform_reserved_cidr of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) PlatformReservedCidr() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("platform_reserved_cidr"))
}

// PlatformReservedDnsIpAddress returns a reference to field platform_reserved_dns_ip_address of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) PlatformReservedDnsIpAddress() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("platform_reserved_dns_ip_address"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("resource_group_name"))
}

// StaticIpAddress returns a reference to field static_ip_address of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) StaticIpAddress() terra.StringValue {
	return terra.ReferenceAsString(cae.ref.Append("static_ip_address"))
}

// Tags returns a reference to field tags of azurerm_container_app_environment.
func (cae containerAppEnvironmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cae.ref.Append("tags"))
}

func (cae containerAppEnvironmentAttributes) Timeouts() containerappenvironment.TimeoutsAttributes {
	return terra.ReferenceAsSingle[containerappenvironment.TimeoutsAttributes](cae.ref.Append("timeouts"))
}

type containerAppEnvironmentState struct {
	DefaultDomain                string                                 `json:"default_domain"`
	DockerBridgeCidr             string                                 `json:"docker_bridge_cidr"`
	Id                           string                                 `json:"id"`
	InfrastructureSubnetId       string                                 `json:"infrastructure_subnet_id"`
	InternalLoadBalancerEnabled  bool                                   `json:"internal_load_balancer_enabled"`
	Location                     string                                 `json:"location"`
	LogAnalyticsWorkspaceId      string                                 `json:"log_analytics_workspace_id"`
	Name                         string                                 `json:"name"`
	PlatformReservedCidr         string                                 `json:"platform_reserved_cidr"`
	PlatformReservedDnsIpAddress string                                 `json:"platform_reserved_dns_ip_address"`
	ResourceGroupName            string                                 `json:"resource_group_name"`
	StaticIpAddress              string                                 `json:"static_ip_address"`
	Tags                         map[string]string                      `json:"tags"`
	Timeouts                     *containerappenvironment.TimeoutsState `json:"timeouts"`
}
