// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_share_dataset_blob_storage

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataStorageAccountAttributes struct {
	ref terra.Reference
}

func (sa DataStorageAccountAttributes) InternalRef() (terra.Reference, error) {
	return sa.ref, nil
}

func (sa DataStorageAccountAttributes) InternalWithRef(ref terra.Reference) DataStorageAccountAttributes {
	return DataStorageAccountAttributes{ref: ref}
}

func (sa DataStorageAccountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sa.ref.InternalTokens()
}

func (sa DataStorageAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("name"))
}

func (sa DataStorageAccountAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("resource_group_name"))
}

func (sa DataStorageAccountAttributes) SubscriptionId() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("subscription_id"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataStorageAccountState struct {
	Name              string `json:"name"`
	ResourceGroupName string `json:"resource_group_name"`
	SubscriptionId    string `json:"subscription_id"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
