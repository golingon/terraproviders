// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_capacity_reservation

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_capacity_reservation.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCapacityReservationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acr *Resource) Type() string {
	return "azurerm_capacity_reservation"
}

// LocalName returns the local name for [Resource].
func (acr *Resource) LocalName() string {
	return acr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acr *Resource) Configuration() interface{} {
	return acr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acr *Resource) Dependencies() terra.Dependencies {
	return acr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acr *Resource) LifecycleManagement() *terra.Lifecycle {
	return acr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acr *Resource) Attributes() azurermCapacityReservationAttributes {
	return azurermCapacityReservationAttributes{ref: terra.ReferenceResource(acr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acr *Resource) ImportState(state io.Reader) error {
	acr.state = &azurermCapacityReservationState{}
	if err := json.NewDecoder(state).Decode(acr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acr.Type(), acr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acr *Resource) State() (*azurermCapacityReservationState, bool) {
	return acr.state, acr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acr *Resource) StateMust() *azurermCapacityReservationState {
	if acr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acr.Type(), acr.LocalName()))
	}
	return acr.state
}

// Args contains the configurations for azurerm_capacity_reservation.
type Args struct {
	// CapacityReservationGroupId: string, required
	CapacityReservationGroupId terra.StringValue `hcl:"capacity_reservation_group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
	// Sku: required
	Sku *Sku `hcl:"sku,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCapacityReservationAttributes struct {
	ref terra.Reference
}

// CapacityReservationGroupId returns a reference to field capacity_reservation_group_id of azurerm_capacity_reservation.
func (acr azurermCapacityReservationAttributes) CapacityReservationGroupId() terra.StringValue {
	return terra.ReferenceAsString(acr.ref.Append("capacity_reservation_group_id"))
}

// Id returns a reference to field id of azurerm_capacity_reservation.
func (acr azurermCapacityReservationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acr.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_capacity_reservation.
func (acr azurermCapacityReservationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acr.ref.Append("name"))
}

// Tags returns a reference to field tags of azurerm_capacity_reservation.
func (acr azurermCapacityReservationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acr.ref.Append("tags"))
}

// Zone returns a reference to field zone of azurerm_capacity_reservation.
func (acr azurermCapacityReservationAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(acr.ref.Append("zone"))
}

func (acr azurermCapacityReservationAttributes) Sku() terra.ListValue[SkuAttributes] {
	return terra.ReferenceAsList[SkuAttributes](acr.ref.Append("sku"))
}

func (acr azurermCapacityReservationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acr.ref.Append("timeouts"))
}

type azurermCapacityReservationState struct {
	CapacityReservationGroupId string            `json:"capacity_reservation_group_id"`
	Id                         string            `json:"id"`
	Name                       string            `json:"name"`
	Tags                       map[string]string `json:"tags"`
	Zone                       string            `json:"zone"`
	Sku                        []SkuState        `json:"sku"`
	Timeouts                   *TimeoutsState    `json:"timeouts"`
}
