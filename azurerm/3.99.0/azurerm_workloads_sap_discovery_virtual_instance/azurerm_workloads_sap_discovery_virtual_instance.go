// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_workloads_sap_discovery_virtual_instance

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_workloads_sap_discovery_virtual_instance.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermWorkloadsSapDiscoveryVirtualInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awsdvi *Resource) Type() string {
	return "azurerm_workloads_sap_discovery_virtual_instance"
}

// LocalName returns the local name for [Resource].
func (awsdvi *Resource) LocalName() string {
	return awsdvi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awsdvi *Resource) Configuration() interface{} {
	return awsdvi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awsdvi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awsdvi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awsdvi *Resource) Dependencies() terra.Dependencies {
	return awsdvi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awsdvi *Resource) LifecycleManagement() *terra.Lifecycle {
	return awsdvi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awsdvi *Resource) Attributes() azurermWorkloadsSapDiscoveryVirtualInstanceAttributes {
	return azurermWorkloadsSapDiscoveryVirtualInstanceAttributes{ref: terra.ReferenceResource(awsdvi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awsdvi *Resource) ImportState(state io.Reader) error {
	awsdvi.state = &azurermWorkloadsSapDiscoveryVirtualInstanceState{}
	if err := json.NewDecoder(state).Decode(awsdvi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awsdvi.Type(), awsdvi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awsdvi *Resource) State() (*azurermWorkloadsSapDiscoveryVirtualInstanceState, bool) {
	return awsdvi.state, awsdvi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awsdvi *Resource) StateMust() *azurermWorkloadsSapDiscoveryVirtualInstanceState {
	if awsdvi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awsdvi.Type(), awsdvi.LocalName()))
	}
	return awsdvi.state
}

// Args contains the configurations for azurerm_workloads_sap_discovery_virtual_instance.
type Args struct {
	// CentralServerVirtualMachineId: string, required
	CentralServerVirtualMachineId terra.StringValue `hcl:"central_server_virtual_machine_id,attr" validate:"required"`
	// Environment: string, required
	Environment terra.StringValue `hcl:"environment,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ManagedResourceGroupName: string, optional
	ManagedResourceGroupName terra.StringValue `hcl:"managed_resource_group_name,attr"`
	// ManagedStorageAccountName: string, optional
	ManagedStorageAccountName terra.StringValue `hcl:"managed_storage_account_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SapProduct: string, required
	SapProduct terra.StringValue `hcl:"sap_product,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermWorkloadsSapDiscoveryVirtualInstanceAttributes struct {
	ref terra.Reference
}

// CentralServerVirtualMachineId returns a reference to field central_server_virtual_machine_id of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) CentralServerVirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("central_server_virtual_machine_id"))
}

// Environment returns a reference to field environment of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Environment() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("environment"))
}

// Id returns a reference to field id of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("location"))
}

// ManagedResourceGroupName returns a reference to field managed_resource_group_name of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) ManagedResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("managed_resource_group_name"))
}

// ManagedStorageAccountName returns a reference to field managed_storage_account_name of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) ManagedStorageAccountName() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("managed_storage_account_name"))
}

// Name returns a reference to field name of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("resource_group_name"))
}

// SapProduct returns a reference to field sap_product of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) SapProduct() terra.StringValue {
	return terra.ReferenceAsString(awsdvi.ref.Append("sap_product"))
}

// Tags returns a reference to field tags of azurerm_workloads_sap_discovery_virtual_instance.
func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](awsdvi.ref.Append("tags"))
}

func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](awsdvi.ref.Append("identity"))
}

func (awsdvi azurermWorkloadsSapDiscoveryVirtualInstanceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](awsdvi.ref.Append("timeouts"))
}

type azurermWorkloadsSapDiscoveryVirtualInstanceState struct {
	CentralServerVirtualMachineId string            `json:"central_server_virtual_machine_id"`
	Environment                   string            `json:"environment"`
	Id                            string            `json:"id"`
	Location                      string            `json:"location"`
	ManagedResourceGroupName      string            `json:"managed_resource_group_name"`
	ManagedStorageAccountName     string            `json:"managed_storage_account_name"`
	Name                          string            `json:"name"`
	ResourceGroupName             string            `json:"resource_group_name"`
	SapProduct                    string            `json:"sap_product"`
	Tags                          map[string]string `json:"tags"`
	Identity                      []IdentityState   `json:"identity"`
	Timeouts                      *TimeoutsState    `json:"timeouts"`
}
