// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_factory_credential_user_managed_identity

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_data_factory_credential_user_managed_identity.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDataFactoryCredentialUserManagedIdentityState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adfcumi *Resource) Type() string {
	return "azurerm_data_factory_credential_user_managed_identity"
}

// LocalName returns the local name for [Resource].
func (adfcumi *Resource) LocalName() string {
	return adfcumi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adfcumi *Resource) Configuration() interface{} {
	return adfcumi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adfcumi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adfcumi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adfcumi *Resource) Dependencies() terra.Dependencies {
	return adfcumi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adfcumi *Resource) LifecycleManagement() *terra.Lifecycle {
	return adfcumi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adfcumi *Resource) Attributes() azurermDataFactoryCredentialUserManagedIdentityAttributes {
	return azurermDataFactoryCredentialUserManagedIdentityAttributes{ref: terra.ReferenceResource(adfcumi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adfcumi *Resource) ImportState(state io.Reader) error {
	adfcumi.state = &azurermDataFactoryCredentialUserManagedIdentityState{}
	if err := json.NewDecoder(state).Decode(adfcumi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adfcumi.Type(), adfcumi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adfcumi *Resource) State() (*azurermDataFactoryCredentialUserManagedIdentityState, bool) {
	return adfcumi.state, adfcumi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adfcumi *Resource) StateMust() *azurermDataFactoryCredentialUserManagedIdentityState {
	if adfcumi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adfcumi.Type(), adfcumi.LocalName()))
	}
	return adfcumi.state
}

// Args contains the configurations for azurerm_data_factory_credential_user_managed_identity.
type Args struct {
	// Annotations: list of string, optional
	Annotations terra.ListValue[terra.StringValue] `hcl:"annotations,attr"`
	// DataFactoryId: string, required
	DataFactoryId terra.StringValue `hcl:"data_factory_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityId: string, required
	IdentityId terra.StringValue `hcl:"identity_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDataFactoryCredentialUserManagedIdentityAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of azurerm_data_factory_credential_user_managed_identity.
func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) Annotations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adfcumi.ref.Append("annotations"))
}

// DataFactoryId returns a reference to field data_factory_id of azurerm_data_factory_credential_user_managed_identity.
func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) DataFactoryId() terra.StringValue {
	return terra.ReferenceAsString(adfcumi.ref.Append("data_factory_id"))
}

// Description returns a reference to field description of azurerm_data_factory_credential_user_managed_identity.
func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(adfcumi.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_data_factory_credential_user_managed_identity.
func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adfcumi.ref.Append("id"))
}

// IdentityId returns a reference to field identity_id of azurerm_data_factory_credential_user_managed_identity.
func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) IdentityId() terra.StringValue {
	return terra.ReferenceAsString(adfcumi.ref.Append("identity_id"))
}

// Name returns a reference to field name of azurerm_data_factory_credential_user_managed_identity.
func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adfcumi.ref.Append("name"))
}

func (adfcumi azurermDataFactoryCredentialUserManagedIdentityAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adfcumi.ref.Append("timeouts"))
}

type azurermDataFactoryCredentialUserManagedIdentityState struct {
	Annotations   []string       `json:"annotations"`
	DataFactoryId string         `json:"data_factory_id"`
	Description   string         `json:"description"`
	Id            string         `json:"id"`
	IdentityId    string         `json:"identity_id"`
	Name          string         `json:"name"`
	Timeouts      *TimeoutsState `json:"timeouts"`
}
