// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_frontdoor_origin_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cdn_frontdoor_origin_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCdnFrontdoorOriginGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acfog *Resource) Type() string {
	return "azurerm_cdn_frontdoor_origin_group"
}

// LocalName returns the local name for [Resource].
func (acfog *Resource) LocalName() string {
	return acfog.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acfog *Resource) Configuration() interface{} {
	return acfog.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acfog *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acfog)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acfog *Resource) Dependencies() terra.Dependencies {
	return acfog.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acfog *Resource) LifecycleManagement() *terra.Lifecycle {
	return acfog.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acfog *Resource) Attributes() azurermCdnFrontdoorOriginGroupAttributes {
	return azurermCdnFrontdoorOriginGroupAttributes{ref: terra.ReferenceResource(acfog)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acfog *Resource) ImportState(state io.Reader) error {
	acfog.state = &azurermCdnFrontdoorOriginGroupState{}
	if err := json.NewDecoder(state).Decode(acfog.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acfog.Type(), acfog.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acfog *Resource) State() (*azurermCdnFrontdoorOriginGroupState, bool) {
	return acfog.state, acfog.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acfog *Resource) StateMust() *azurermCdnFrontdoorOriginGroupState {
	if acfog.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acfog.Type(), acfog.LocalName()))
	}
	return acfog.state
}

// Args contains the configurations for azurerm_cdn_frontdoor_origin_group.
type Args struct {
	// CdnFrontdoorProfileId: string, required
	CdnFrontdoorProfileId terra.StringValue `hcl:"cdn_frontdoor_profile_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RestoreTrafficTimeToHealedOrNewEndpointInMinutes: number, optional
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes terra.NumberValue `hcl:"restore_traffic_time_to_healed_or_new_endpoint_in_minutes,attr"`
	// SessionAffinityEnabled: bool, optional
	SessionAffinityEnabled terra.BoolValue `hcl:"session_affinity_enabled,attr"`
	// HealthProbe: optional
	HealthProbe *HealthProbe `hcl:"health_probe,block"`
	// LoadBalancing: required
	LoadBalancing *LoadBalancing `hcl:"load_balancing,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCdnFrontdoorOriginGroupAttributes struct {
	ref terra.Reference
}

// CdnFrontdoorProfileId returns a reference to field cdn_frontdoor_profile_id of azurerm_cdn_frontdoor_origin_group.
func (acfog azurermCdnFrontdoorOriginGroupAttributes) CdnFrontdoorProfileId() terra.StringValue {
	return terra.ReferenceAsString(acfog.ref.Append("cdn_frontdoor_profile_id"))
}

// Id returns a reference to field id of azurerm_cdn_frontdoor_origin_group.
func (acfog azurermCdnFrontdoorOriginGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acfog.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_cdn_frontdoor_origin_group.
func (acfog azurermCdnFrontdoorOriginGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acfog.ref.Append("name"))
}

// RestoreTrafficTimeToHealedOrNewEndpointInMinutes returns a reference to field restore_traffic_time_to_healed_or_new_endpoint_in_minutes of azurerm_cdn_frontdoor_origin_group.
func (acfog azurermCdnFrontdoorOriginGroupAttributes) RestoreTrafficTimeToHealedOrNewEndpointInMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(acfog.ref.Append("restore_traffic_time_to_healed_or_new_endpoint_in_minutes"))
}

// SessionAffinityEnabled returns a reference to field session_affinity_enabled of azurerm_cdn_frontdoor_origin_group.
func (acfog azurermCdnFrontdoorOriginGroupAttributes) SessionAffinityEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(acfog.ref.Append("session_affinity_enabled"))
}

func (acfog azurermCdnFrontdoorOriginGroupAttributes) HealthProbe() terra.ListValue[HealthProbeAttributes] {
	return terra.ReferenceAsList[HealthProbeAttributes](acfog.ref.Append("health_probe"))
}

func (acfog azurermCdnFrontdoorOriginGroupAttributes) LoadBalancing() terra.ListValue[LoadBalancingAttributes] {
	return terra.ReferenceAsList[LoadBalancingAttributes](acfog.ref.Append("load_balancing"))
}

func (acfog azurermCdnFrontdoorOriginGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acfog.ref.Append("timeouts"))
}

type azurermCdnFrontdoorOriginGroupState struct {
	CdnFrontdoorProfileId                            string               `json:"cdn_frontdoor_profile_id"`
	Id                                               string               `json:"id"`
	Name                                             string               `json:"name"`
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes float64              `json:"restore_traffic_time_to_healed_or_new_endpoint_in_minutes"`
	SessionAffinityEnabled                           bool                 `json:"session_affinity_enabled"`
	HealthProbe                                      []HealthProbeState   `json:"health_probe"`
	LoadBalancing                                    []LoadBalancingState `json:"load_balancing"`
	Timeouts                                         *TimeoutsState       `json:"timeouts"`
}
