// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_frontdoor_origin_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataHealthProbeAttributes struct {
	ref terra.Reference
}

func (hp DataHealthProbeAttributes) InternalRef() (terra.Reference, error) {
	return hp.ref, nil
}

func (hp DataHealthProbeAttributes) InternalWithRef(ref terra.Reference) DataHealthProbeAttributes {
	return DataHealthProbeAttributes{ref: ref}
}

func (hp DataHealthProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hp.ref.InternalTokens()
}

func (hp DataHealthProbeAttributes) IntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hp.ref.Append("interval_in_seconds"))
}

func (hp DataHealthProbeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("path"))
}

func (hp DataHealthProbeAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("protocol"))
}

func (hp DataHealthProbeAttributes) RequestType() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("request_type"))
}

type DataLoadBalancingAttributes struct {
	ref terra.Reference
}

func (lb DataLoadBalancingAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb DataLoadBalancingAttributes) InternalWithRef(ref terra.Reference) DataLoadBalancingAttributes {
	return DataLoadBalancingAttributes{ref: ref}
}

func (lb DataLoadBalancingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb DataLoadBalancingAttributes) AdditionalLatencyInMilliseconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("additional_latency_in_milliseconds"))
}

func (lb DataLoadBalancingAttributes) SampleSize() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("sample_size"))
}

func (lb DataLoadBalancingAttributes) SuccessfulSamplesRequired() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("successful_samples_required"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataHealthProbeState struct {
	IntervalInSeconds float64 `json:"interval_in_seconds"`
	Path              string  `json:"path"`
	Protocol          string  `json:"protocol"`
	RequestType       string  `json:"request_type"`
}

type DataLoadBalancingState struct {
	AdditionalLatencyInMilliseconds float64 `json:"additional_latency_in_milliseconds"`
	SampleSize                      float64 `json:"sample_size"`
	SuccessfulSamplesRequired       float64 `json:"successful_samples_required"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
