// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_mover_source_endpoint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_storage_mover_source_endpoint.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermStorageMoverSourceEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asmse *Resource) Type() string {
	return "azurerm_storage_mover_source_endpoint"
}

// LocalName returns the local name for [Resource].
func (asmse *Resource) LocalName() string {
	return asmse.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asmse *Resource) Configuration() interface{} {
	return asmse.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asmse *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asmse)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asmse *Resource) Dependencies() terra.Dependencies {
	return asmse.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asmse *Resource) LifecycleManagement() *terra.Lifecycle {
	return asmse.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asmse *Resource) Attributes() azurermStorageMoverSourceEndpointAttributes {
	return azurermStorageMoverSourceEndpointAttributes{ref: terra.ReferenceResource(asmse)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asmse *Resource) ImportState(state io.Reader) error {
	asmse.state = &azurermStorageMoverSourceEndpointState{}
	if err := json.NewDecoder(state).Decode(asmse.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asmse.Type(), asmse.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asmse *Resource) State() (*azurermStorageMoverSourceEndpointState, bool) {
	return asmse.state, asmse.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asmse *Resource) StateMust() *azurermStorageMoverSourceEndpointState {
	if asmse.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asmse.Type(), asmse.LocalName()))
	}
	return asmse.state
}

// Args contains the configurations for azurerm_storage_mover_source_endpoint.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Export: string, optional
	Export terra.StringValue `hcl:"export,attr"`
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NfsVersion: string, optional
	NfsVersion terra.StringValue `hcl:"nfs_version,attr"`
	// StorageMoverId: string, required
	StorageMoverId terra.StringValue `hcl:"storage_mover_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermStorageMoverSourceEndpointAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("description"))
}

// Export returns a reference to field export of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) Export() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("export"))
}

// Host returns a reference to field host of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("host"))
}

// Id returns a reference to field id of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("name"))
}

// NfsVersion returns a reference to field nfs_version of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) NfsVersion() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("nfs_version"))
}

// StorageMoverId returns a reference to field storage_mover_id of azurerm_storage_mover_source_endpoint.
func (asmse azurermStorageMoverSourceEndpointAttributes) StorageMoverId() terra.StringValue {
	return terra.ReferenceAsString(asmse.ref.Append("storage_mover_id"))
}

func (asmse azurermStorageMoverSourceEndpointAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asmse.ref.Append("timeouts"))
}

type azurermStorageMoverSourceEndpointState struct {
	Description    string         `json:"description"`
	Export         string         `json:"export"`
	Host           string         `json:"host"`
	Id             string         `json:"id"`
	Name           string         `json:"name"`
	NfsVersion     string         `json:"nfs_version"`
	StorageMoverId string         `json:"storage_mover_id"`
	Timeouts       *TimeoutsState `json:"timeouts"`
}
