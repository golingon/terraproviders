// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aac *Resource) Type() string {
	return "azurerm_app_configuration"
}

// LocalName returns the local name for [Resource].
func (aac *Resource) LocalName() string {
	return aac.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aac *Resource) Configuration() interface{} {
	return aac.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aac *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aac)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aac *Resource) Dependencies() terra.Dependencies {
	return aac.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aac *Resource) LifecycleManagement() *terra.Lifecycle {
	return aac.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aac *Resource) Attributes() azurermAppConfigurationAttributes {
	return azurermAppConfigurationAttributes{ref: terra.ReferenceResource(aac)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aac *Resource) ImportState(state io.Reader) error {
	aac.state = &azurermAppConfigurationState{}
	if err := json.NewDecoder(state).Decode(aac.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aac.Type(), aac.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aac *Resource) State() (*azurermAppConfigurationState, bool) {
	return aac.state, aac.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aac *Resource) StateMust() *azurermAppConfigurationState {
	if aac.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aac.Type(), aac.LocalName()))
	}
	return aac.state
}

// Args contains the configurations for azurerm_app_configuration.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalAuthEnabled: bool, optional
	LocalAuthEnabled terra.BoolValue `hcl:"local_auth_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccess: string, optional
	PublicNetworkAccess terra.StringValue `hcl:"public_network_access,attr"`
	// PurgeProtectionEnabled: bool, optional
	PurgeProtectionEnabled terra.BoolValue `hcl:"purge_protection_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Sku: string, optional
	Sku terra.StringValue `hcl:"sku,attr"`
	// SoftDeleteRetentionDays: number, optional
	SoftDeleteRetentionDays terra.NumberValue `hcl:"soft_delete_retention_days,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Encryption: optional
	Encryption *Encryption `hcl:"encryption,block"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Replica: min=0
	Replica []Replica `hcl:"replica,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppConfigurationAttributes struct {
	ref terra.Reference
}

// Endpoint returns a reference to field endpoint of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("endpoint"))
}

// Id returns a reference to field id of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("id"))
}

// LocalAuthEnabled returns a reference to field local_auth_enabled of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) LocalAuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aac.ref.Append("local_auth_enabled"))
}

// Location returns a reference to field location of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("name"))
}

// PublicNetworkAccess returns a reference to field public_network_access of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) PublicNetworkAccess() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("public_network_access"))
}

// PurgeProtectionEnabled returns a reference to field purge_protection_enabled of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) PurgeProtectionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aac.ref.Append("purge_protection_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("resource_group_name"))
}

// Sku returns a reference to field sku of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("sku"))
}

// SoftDeleteRetentionDays returns a reference to field soft_delete_retention_days of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) SoftDeleteRetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(aac.ref.Append("soft_delete_retention_days"))
}

// Tags returns a reference to field tags of azurerm_app_configuration.
func (aac azurermAppConfigurationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aac.ref.Append("tags"))
}

func (aac azurermAppConfigurationAttributes) PrimaryReadKey() terra.ListValue[PrimaryReadKeyAttributes] {
	return terra.ReferenceAsList[PrimaryReadKeyAttributes](aac.ref.Append("primary_read_key"))
}

func (aac azurermAppConfigurationAttributes) PrimaryWriteKey() terra.ListValue[PrimaryWriteKeyAttributes] {
	return terra.ReferenceAsList[PrimaryWriteKeyAttributes](aac.ref.Append("primary_write_key"))
}

func (aac azurermAppConfigurationAttributes) SecondaryReadKey() terra.ListValue[SecondaryReadKeyAttributes] {
	return terra.ReferenceAsList[SecondaryReadKeyAttributes](aac.ref.Append("secondary_read_key"))
}

func (aac azurermAppConfigurationAttributes) SecondaryWriteKey() terra.ListValue[SecondaryWriteKeyAttributes] {
	return terra.ReferenceAsList[SecondaryWriteKeyAttributes](aac.ref.Append("secondary_write_key"))
}

func (aac azurermAppConfigurationAttributes) Encryption() terra.ListValue[EncryptionAttributes] {
	return terra.ReferenceAsList[EncryptionAttributes](aac.ref.Append("encryption"))
}

func (aac azurermAppConfigurationAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](aac.ref.Append("identity"))
}

func (aac azurermAppConfigurationAttributes) Replica() terra.SetValue[ReplicaAttributes] {
	return terra.ReferenceAsSet[ReplicaAttributes](aac.ref.Append("replica"))
}

func (aac azurermAppConfigurationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aac.ref.Append("timeouts"))
}

type azurermAppConfigurationState struct {
	Endpoint                string                   `json:"endpoint"`
	Id                      string                   `json:"id"`
	LocalAuthEnabled        bool                     `json:"local_auth_enabled"`
	Location                string                   `json:"location"`
	Name                    string                   `json:"name"`
	PublicNetworkAccess     string                   `json:"public_network_access"`
	PurgeProtectionEnabled  bool                     `json:"purge_protection_enabled"`
	ResourceGroupName       string                   `json:"resource_group_name"`
	Sku                     string                   `json:"sku"`
	SoftDeleteRetentionDays float64                  `json:"soft_delete_retention_days"`
	Tags                    map[string]string        `json:"tags"`
	PrimaryReadKey          []PrimaryReadKeyState    `json:"primary_read_key"`
	PrimaryWriteKey         []PrimaryWriteKeyState   `json:"primary_write_key"`
	SecondaryReadKey        []SecondaryReadKeyState  `json:"secondary_read_key"`
	SecondaryWriteKey       []SecondaryWriteKeyState `json:"secondary_write_key"`
	Encryption              []EncryptionState        `json:"encryption"`
	Identity                []IdentityState          `json:"identity"`
	Replica                 []ReplicaState           `json:"replica"`
	Timeouts                *TimeoutsState           `json:"timeouts"`
}
