// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cost_anomaly_alert

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cost_anomaly_alert.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCostAnomalyAlertState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acaa *Resource) Type() string {
	return "azurerm_cost_anomaly_alert"
}

// LocalName returns the local name for [Resource].
func (acaa *Resource) LocalName() string {
	return acaa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acaa *Resource) Configuration() interface{} {
	return acaa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acaa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acaa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acaa *Resource) Dependencies() terra.Dependencies {
	return acaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acaa *Resource) LifecycleManagement() *terra.Lifecycle {
	return acaa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acaa *Resource) Attributes() azurermCostAnomalyAlertAttributes {
	return azurermCostAnomalyAlertAttributes{ref: terra.ReferenceResource(acaa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acaa *Resource) ImportState(state io.Reader) error {
	acaa.state = &azurermCostAnomalyAlertState{}
	if err := json.NewDecoder(state).Decode(acaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acaa.Type(), acaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acaa *Resource) State() (*azurermCostAnomalyAlertState, bool) {
	return acaa.state, acaa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acaa *Resource) StateMust() *azurermCostAnomalyAlertState {
	if acaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acaa.Type(), acaa.LocalName()))
	}
	return acaa.state
}

// Args contains the configurations for azurerm_cost_anomaly_alert.
type Args struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// EmailAddresses: set of string, required
	EmailAddresses terra.SetValue[terra.StringValue] `hcl:"email_addresses,attr" validate:"required"`
	// EmailSubject: string, required
	EmailSubject terra.StringValue `hcl:"email_subject,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Message: string, optional
	Message terra.StringValue `hcl:"message,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SubscriptionId: string, optional
	SubscriptionId terra.StringValue `hcl:"subscription_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCostAnomalyAlertAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(acaa.ref.Append("display_name"))
}

// EmailAddresses returns a reference to field email_addresses of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) EmailAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acaa.ref.Append("email_addresses"))
}

// EmailSubject returns a reference to field email_subject of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) EmailSubject() terra.StringValue {
	return terra.ReferenceAsString(acaa.ref.Append("email_subject"))
}

// Id returns a reference to field id of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acaa.ref.Append("id"))
}

// Message returns a reference to field message of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(acaa.ref.Append("message"))
}

// Name returns a reference to field name of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acaa.ref.Append("name"))
}

// SubscriptionId returns a reference to field subscription_id of azurerm_cost_anomaly_alert.
func (acaa azurermCostAnomalyAlertAttributes) SubscriptionId() terra.StringValue {
	return terra.ReferenceAsString(acaa.ref.Append("subscription_id"))
}

func (acaa azurermCostAnomalyAlertAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acaa.ref.Append("timeouts"))
}

type azurermCostAnomalyAlertState struct {
	DisplayName    string         `json:"display_name"`
	EmailAddresses []string       `json:"email_addresses"`
	EmailSubject   string         `json:"email_subject"`
	Id             string         `json:"id"`
	Message        string         `json:"message"`
	Name           string         `json:"name"`
	SubscriptionId string         `json:"subscription_id"`
	Timeouts       *TimeoutsState `json:"timeouts"`
}
