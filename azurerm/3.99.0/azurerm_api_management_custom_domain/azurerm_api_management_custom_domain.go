// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_custom_domain

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_custom_domain.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementCustomDomainState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamcd *Resource) Type() string {
	return "azurerm_api_management_custom_domain"
}

// LocalName returns the local name for [Resource].
func (aamcd *Resource) LocalName() string {
	return aamcd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamcd *Resource) Configuration() interface{} {
	return aamcd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamcd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamcd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamcd *Resource) Dependencies() terra.Dependencies {
	return aamcd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamcd *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamcd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamcd *Resource) Attributes() azurermApiManagementCustomDomainAttributes {
	return azurermApiManagementCustomDomainAttributes{ref: terra.ReferenceResource(aamcd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamcd *Resource) ImportState(state io.Reader) error {
	aamcd.state = &azurermApiManagementCustomDomainState{}
	if err := json.NewDecoder(state).Decode(aamcd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamcd.Type(), aamcd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamcd *Resource) State() (*azurermApiManagementCustomDomainState, bool) {
	return aamcd.state, aamcd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamcd *Resource) StateMust() *azurermApiManagementCustomDomainState {
	if aamcd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamcd.Type(), aamcd.LocalName()))
	}
	return aamcd.state
}

// Args contains the configurations for azurerm_api_management_custom_domain.
type Args struct {
	// ApiManagementId: string, required
	ApiManagementId terra.StringValue `hcl:"api_management_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// DeveloperPortal: min=0
	DeveloperPortal []DeveloperPortal `hcl:"developer_portal,block" validate:"min=0"`
	// Gateway: min=0
	Gateway []Gateway `hcl:"gateway,block" validate:"min=0"`
	// Management: min=0
	Management []Management `hcl:"management,block" validate:"min=0"`
	// Portal: min=0
	Portal []Portal `hcl:"portal,block" validate:"min=0"`
	// Scm: min=0
	Scm []Scm `hcl:"scm,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApiManagementCustomDomainAttributes struct {
	ref terra.Reference
}

// ApiManagementId returns a reference to field api_management_id of azurerm_api_management_custom_domain.
func (aamcd azurermApiManagementCustomDomainAttributes) ApiManagementId() terra.StringValue {
	return terra.ReferenceAsString(aamcd.ref.Append("api_management_id"))
}

// Id returns a reference to field id of azurerm_api_management_custom_domain.
func (aamcd azurermApiManagementCustomDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamcd.ref.Append("id"))
}

func (aamcd azurermApiManagementCustomDomainAttributes) DeveloperPortal() terra.ListValue[DeveloperPortalAttributes] {
	return terra.ReferenceAsList[DeveloperPortalAttributes](aamcd.ref.Append("developer_portal"))
}

func (aamcd azurermApiManagementCustomDomainAttributes) Gateway() terra.ListValue[GatewayAttributes] {
	return terra.ReferenceAsList[GatewayAttributes](aamcd.ref.Append("gateway"))
}

func (aamcd azurermApiManagementCustomDomainAttributes) Management() terra.ListValue[ManagementAttributes] {
	return terra.ReferenceAsList[ManagementAttributes](aamcd.ref.Append("management"))
}

func (aamcd azurermApiManagementCustomDomainAttributes) Portal() terra.ListValue[PortalAttributes] {
	return terra.ReferenceAsList[PortalAttributes](aamcd.ref.Append("portal"))
}

func (aamcd azurermApiManagementCustomDomainAttributes) Scm() terra.ListValue[ScmAttributes] {
	return terra.ReferenceAsList[ScmAttributes](aamcd.ref.Append("scm"))
}

func (aamcd azurermApiManagementCustomDomainAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamcd.ref.Append("timeouts"))
}

type azurermApiManagementCustomDomainState struct {
	ApiManagementId string                 `json:"api_management_id"`
	Id              string                 `json:"id"`
	DeveloperPortal []DeveloperPortalState `json:"developer_portal"`
	Gateway         []GatewayState         `json:"gateway"`
	Management      []ManagementState      `json:"management"`
	Portal          []PortalState          `json:"portal"`
	Scm             []ScmState             `json:"scm"`
	Timeouts        *TimeoutsState         `json:"timeouts"`
}
