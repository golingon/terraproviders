// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_dashboard_grafana

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataIdentity struct {
	// IdentityIds: set of string, optional
	IdentityIds terra.SetValue[terra.StringValue] `hcl:"identity_ids,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAzureMonitorWorkspaceIntegrationsAttributes struct {
	ref terra.Reference
}

func (amwi DataAzureMonitorWorkspaceIntegrationsAttributes) InternalRef() (terra.Reference, error) {
	return amwi.ref, nil
}

func (amwi DataAzureMonitorWorkspaceIntegrationsAttributes) InternalWithRef(ref terra.Reference) DataAzureMonitorWorkspaceIntegrationsAttributes {
	return DataAzureMonitorWorkspaceIntegrationsAttributes{ref: ref}
}

func (amwi DataAzureMonitorWorkspaceIntegrationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return amwi.ref.InternalTokens()
}

func (amwi DataAzureMonitorWorkspaceIntegrationsAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(amwi.ref.Append("resource_id"))
}

type DataIdentityAttributes struct {
	ref terra.Reference
}

func (i DataIdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIdentityAttributes) InternalWithRef(ref terra.Reference) DataIdentityAttributes {
	return DataIdentityAttributes{ref: ref}
}

func (i DataIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIdentityAttributes) IdentityIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i DataIdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i DataIdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i DataIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAzureMonitorWorkspaceIntegrationsState struct {
	ResourceId string `json:"resource_id"`
}

type DataIdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	PrincipalId string   `json:"principal_id"`
	TenantId    string   `json:"tenant_id"`
	Type        string   `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
