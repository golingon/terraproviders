// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_key_vault_certificate

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataCertificatePolicyAttributes struct {
	ref terra.Reference
}

func (cp DataCertificatePolicyAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp DataCertificatePolicyAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyAttributes {
	return DataCertificatePolicyAttributes{ref: ref}
}

func (cp DataCertificatePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp DataCertificatePolicyAttributes) IssuerParameters() terra.ListValue[DataCertificatePolicyIssuerParametersAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyIssuerParametersAttributes](cp.ref.Append("issuer_parameters"))
}

func (cp DataCertificatePolicyAttributes) KeyProperties() terra.ListValue[DataCertificatePolicyKeyPropertiesAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyKeyPropertiesAttributes](cp.ref.Append("key_properties"))
}

func (cp DataCertificatePolicyAttributes) LifetimeAction() terra.ListValue[DataCertificatePolicyLifetimeActionAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyLifetimeActionAttributes](cp.ref.Append("lifetime_action"))
}

func (cp DataCertificatePolicyAttributes) SecretProperties() terra.ListValue[DataCertificatePolicySecretPropertiesAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicySecretPropertiesAttributes](cp.ref.Append("secret_properties"))
}

func (cp DataCertificatePolicyAttributes) X509CertificateProperties() terra.ListValue[DataCertificatePolicyX509CertificatePropertiesAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyX509CertificatePropertiesAttributes](cp.ref.Append("x509_certificate_properties"))
}

type DataCertificatePolicyIssuerParametersAttributes struct {
	ref terra.Reference
}

func (ip DataCertificatePolicyIssuerParametersAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip DataCertificatePolicyIssuerParametersAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyIssuerParametersAttributes {
	return DataCertificatePolicyIssuerParametersAttributes{ref: ref}
}

func (ip DataCertificatePolicyIssuerParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip DataCertificatePolicyIssuerParametersAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("name"))
}

type DataCertificatePolicyKeyPropertiesAttributes struct {
	ref terra.Reference
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return kp.ref, nil
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyKeyPropertiesAttributes {
	return DataCertificatePolicyKeyPropertiesAttributes{ref: ref}
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kp.ref.InternalTokens()
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) Curve() terra.StringValue {
	return terra.ReferenceAsString(kp.ref.Append("curve"))
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) Exportable() terra.BoolValue {
	return terra.ReferenceAsBool(kp.ref.Append("exportable"))
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) KeySize() terra.NumberValue {
	return terra.ReferenceAsNumber(kp.ref.Append("key_size"))
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) KeyType() terra.StringValue {
	return terra.ReferenceAsString(kp.ref.Append("key_type"))
}

func (kp DataCertificatePolicyKeyPropertiesAttributes) ReuseKey() terra.BoolValue {
	return terra.ReferenceAsBool(kp.ref.Append("reuse_key"))
}

type DataCertificatePolicyLifetimeActionAttributes struct {
	ref terra.Reference
}

func (la DataCertificatePolicyLifetimeActionAttributes) InternalRef() (terra.Reference, error) {
	return la.ref, nil
}

func (la DataCertificatePolicyLifetimeActionAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyLifetimeActionAttributes {
	return DataCertificatePolicyLifetimeActionAttributes{ref: ref}
}

func (la DataCertificatePolicyLifetimeActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return la.ref.InternalTokens()
}

func (la DataCertificatePolicyLifetimeActionAttributes) Action() terra.ListValue[DataCertificatePolicyLifetimeActionActionAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyLifetimeActionActionAttributes](la.ref.Append("action"))
}

func (la DataCertificatePolicyLifetimeActionAttributes) Trigger() terra.ListValue[DataCertificatePolicyLifetimeActionTriggerAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyLifetimeActionTriggerAttributes](la.ref.Append("trigger"))
}

type DataCertificatePolicyLifetimeActionActionAttributes struct {
	ref terra.Reference
}

func (a DataCertificatePolicyLifetimeActionActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataCertificatePolicyLifetimeActionActionAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyLifetimeActionActionAttributes {
	return DataCertificatePolicyLifetimeActionActionAttributes{ref: ref}
}

func (a DataCertificatePolicyLifetimeActionActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataCertificatePolicyLifetimeActionActionAttributes) ActionType() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("action_type"))
}

type DataCertificatePolicyLifetimeActionTriggerAttributes struct {
	ref terra.Reference
}

func (t DataCertificatePolicyLifetimeActionTriggerAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataCertificatePolicyLifetimeActionTriggerAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyLifetimeActionTriggerAttributes {
	return DataCertificatePolicyLifetimeActionTriggerAttributes{ref: ref}
}

func (t DataCertificatePolicyLifetimeActionTriggerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataCertificatePolicyLifetimeActionTriggerAttributes) DaysBeforeExpiry() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("days_before_expiry"))
}

func (t DataCertificatePolicyLifetimeActionTriggerAttributes) LifetimePercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("lifetime_percentage"))
}

type DataCertificatePolicySecretPropertiesAttributes struct {
	ref terra.Reference
}

func (sp DataCertificatePolicySecretPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp DataCertificatePolicySecretPropertiesAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicySecretPropertiesAttributes {
	return DataCertificatePolicySecretPropertiesAttributes{ref: ref}
}

func (sp DataCertificatePolicySecretPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp DataCertificatePolicySecretPropertiesAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("content_type"))
}

type DataCertificatePolicyX509CertificatePropertiesAttributes struct {
	ref terra.Reference
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return xcp.ref, nil
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyX509CertificatePropertiesAttributes {
	return DataCertificatePolicyX509CertificatePropertiesAttributes{ref: ref}
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return xcp.ref.InternalTokens()
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) ExtendedKeyUsage() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](xcp.ref.Append("extended_key_usage"))
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) KeyUsage() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](xcp.ref.Append("key_usage"))
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(xcp.ref.Append("subject"))
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) ValidityInMonths() terra.NumberValue {
	return terra.ReferenceAsNumber(xcp.ref.Append("validity_in_months"))
}

func (xcp DataCertificatePolicyX509CertificatePropertiesAttributes) SubjectAlternativeNames() terra.ListValue[DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes](xcp.ref.Append("subject_alternative_names"))
}

type DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes struct {
	ref terra.Reference
}

func (san DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes) InternalRef() (terra.Reference, error) {
	return san.ref, nil
}

func (san DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes) InternalWithRef(ref terra.Reference) DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes {
	return DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes{ref: ref}
}

func (san DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return san.ref.InternalTokens()
}

func (san DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes) DnsNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](san.ref.Append("dns_names"))
}

func (san DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes) Emails() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](san.ref.Append("emails"))
}

func (san DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesAttributes) Upns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](san.ref.Append("upns"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataCertificatePolicyState struct {
	IssuerParameters          []DataCertificatePolicyIssuerParametersState          `json:"issuer_parameters"`
	KeyProperties             []DataCertificatePolicyKeyPropertiesState             `json:"key_properties"`
	LifetimeAction            []DataCertificatePolicyLifetimeActionState            `json:"lifetime_action"`
	SecretProperties          []DataCertificatePolicySecretPropertiesState          `json:"secret_properties"`
	X509CertificateProperties []DataCertificatePolicyX509CertificatePropertiesState `json:"x509_certificate_properties"`
}

type DataCertificatePolicyIssuerParametersState struct {
	Name string `json:"name"`
}

type DataCertificatePolicyKeyPropertiesState struct {
	Curve      string  `json:"curve"`
	Exportable bool    `json:"exportable"`
	KeySize    float64 `json:"key_size"`
	KeyType    string  `json:"key_type"`
	ReuseKey   bool    `json:"reuse_key"`
}

type DataCertificatePolicyLifetimeActionState struct {
	Action  []DataCertificatePolicyLifetimeActionActionState  `json:"action"`
	Trigger []DataCertificatePolicyLifetimeActionTriggerState `json:"trigger"`
}

type DataCertificatePolicyLifetimeActionActionState struct {
	ActionType string `json:"action_type"`
}

type DataCertificatePolicyLifetimeActionTriggerState struct {
	DaysBeforeExpiry   float64 `json:"days_before_expiry"`
	LifetimePercentage float64 `json:"lifetime_percentage"`
}

type DataCertificatePolicySecretPropertiesState struct {
	ContentType string `json:"content_type"`
}

type DataCertificatePolicyX509CertificatePropertiesState struct {
	ExtendedKeyUsage        []string                                                                     `json:"extended_key_usage"`
	KeyUsage                []string                                                                     `json:"key_usage"`
	Subject                 string                                                                       `json:"subject"`
	ValidityInMonths        float64                                                                      `json:"validity_in_months"`
	SubjectAlternativeNames []DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesState `json:"subject_alternative_names"`
}

type DataCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesState struct {
	DnsNames []string `json:"dns_names"`
	Emails   []string `json:"emails"`
	Upns     []string `json:"upns"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
