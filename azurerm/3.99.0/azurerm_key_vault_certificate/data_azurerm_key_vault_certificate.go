// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_key_vault_certificate

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_key_vault_certificate.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (akvc *DataSource) DataSource() string {
	return "azurerm_key_vault_certificate"
}

// LocalName returns the local name for [DataSource].
func (akvc *DataSource) LocalName() string {
	return akvc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (akvc *DataSource) Configuration() interface{} {
	return akvc.Args
}

// Attributes returns the attributes for [DataSource].
func (akvc *DataSource) Attributes() dataAzurermKeyVaultCertificateAttributes {
	return dataAzurermKeyVaultCertificateAttributes{ref: terra.ReferenceDataSource(akvc)}
}

// DataArgs contains the configurations for azurerm_key_vault_certificate.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultId: string, required
	KeyVaultId terra.StringValue `hcl:"key_vault_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermKeyVaultCertificateAttributes struct {
	ref terra.Reference
}

// CertificateData returns a reference to field certificate_data of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) CertificateData() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("certificate_data"))
}

// CertificateDataBase64 returns a reference to field certificate_data_base64 of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) CertificateDataBase64() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("certificate_data_base64"))
}

// Expires returns a reference to field expires of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) Expires() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("expires"))
}

// Id returns a reference to field id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("id"))
}

// KeyVaultId returns a reference to field key_vault_id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) KeyVaultId() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("key_vault_id"))
}

// Name returns a reference to field name of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("name"))
}

// NotBefore returns a reference to field not_before of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) NotBefore() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("not_before"))
}

// ResourceManagerId returns a reference to field resource_manager_id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) ResourceManagerId() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("resource_manager_id"))
}

// ResourceManagerVersionlessId returns a reference to field resource_manager_versionless_id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) ResourceManagerVersionlessId() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("resource_manager_versionless_id"))
}

// SecretId returns a reference to field secret_id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) SecretId() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("secret_id"))
}

// Tags returns a reference to field tags of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](akvc.ref.Append("tags"))
}

// Thumbprint returns a reference to field thumbprint of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("thumbprint"))
}

// Version returns a reference to field version of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("version"))
}

// VersionlessId returns a reference to field versionless_id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) VersionlessId() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("versionless_id"))
}

// VersionlessSecretId returns a reference to field versionless_secret_id of azurerm_key_vault_certificate.
func (akvc dataAzurermKeyVaultCertificateAttributes) VersionlessSecretId() terra.StringValue {
	return terra.ReferenceAsString(akvc.ref.Append("versionless_secret_id"))
}

func (akvc dataAzurermKeyVaultCertificateAttributes) CertificatePolicy() terra.ListValue[DataCertificatePolicyAttributes] {
	return terra.ReferenceAsList[DataCertificatePolicyAttributes](akvc.ref.Append("certificate_policy"))
}

func (akvc dataAzurermKeyVaultCertificateAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](akvc.ref.Append("timeouts"))
}
