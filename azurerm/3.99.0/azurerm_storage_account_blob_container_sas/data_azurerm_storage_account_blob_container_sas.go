// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_account_blob_container_sas

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_storage_account_blob_container_sas.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asabcs *DataSource) DataSource() string {
	return "azurerm_storage_account_blob_container_sas"
}

// LocalName returns the local name for [DataSource].
func (asabcs *DataSource) LocalName() string {
	return asabcs.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asabcs *DataSource) Configuration() interface{} {
	return asabcs.Args
}

// Attributes returns the attributes for [DataSource].
func (asabcs *DataSource) Attributes() dataAzurermStorageAccountBlobContainerSasAttributes {
	return dataAzurermStorageAccountBlobContainerSasAttributes{ref: terra.ReferenceDataSource(asabcs)}
}

// DataArgs contains the configurations for azurerm_storage_account_blob_container_sas.
type DataArgs struct {
	// CacheControl: string, optional
	CacheControl terra.StringValue `hcl:"cache_control,attr"`
	// ConnectionString: string, required
	ConnectionString terra.StringValue `hcl:"connection_string,attr" validate:"required"`
	// ContainerName: string, required
	ContainerName terra.StringValue `hcl:"container_name,attr" validate:"required"`
	// ContentDisposition: string, optional
	ContentDisposition terra.StringValue `hcl:"content_disposition,attr"`
	// ContentEncoding: string, optional
	ContentEncoding terra.StringValue `hcl:"content_encoding,attr"`
	// ContentLanguage: string, optional
	ContentLanguage terra.StringValue `hcl:"content_language,attr"`
	// ContentType: string, optional
	ContentType terra.StringValue `hcl:"content_type,attr"`
	// Expiry: string, required
	Expiry terra.StringValue `hcl:"expiry,attr" validate:"required"`
	// HttpsOnly: bool, optional
	HttpsOnly terra.BoolValue `hcl:"https_only,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpAddress: string, optional
	IpAddress terra.StringValue `hcl:"ip_address,attr"`
	// Start: string, required
	Start terra.StringValue `hcl:"start,attr" validate:"required"`
	// Permissions: required
	Permissions *DataPermissions `hcl:"permissions,block" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermStorageAccountBlobContainerSasAttributes struct {
	ref terra.Reference
}

// CacheControl returns a reference to field cache_control of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) CacheControl() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("cache_control"))
}

// ConnectionString returns a reference to field connection_string of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) ConnectionString() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("connection_string"))
}

// ContainerName returns a reference to field container_name of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) ContainerName() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("container_name"))
}

// ContentDisposition returns a reference to field content_disposition of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) ContentDisposition() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("content_disposition"))
}

// ContentEncoding returns a reference to field content_encoding of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) ContentEncoding() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("content_encoding"))
}

// ContentLanguage returns a reference to field content_language of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) ContentLanguage() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("content_language"))
}

// ContentType returns a reference to field content_type of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("content_type"))
}

// Expiry returns a reference to field expiry of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) Expiry() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("expiry"))
}

// HttpsOnly returns a reference to field https_only of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceAsBool(asabcs.ref.Append("https_only"))
}

// Id returns a reference to field id of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("id"))
}

// IpAddress returns a reference to field ip_address of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("ip_address"))
}

// Sas returns a reference to field sas of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) Sas() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("sas"))
}

// Start returns a reference to field start of azurerm_storage_account_blob_container_sas.
func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(asabcs.ref.Append("start"))
}

func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) Permissions() terra.ListValue[DataPermissionsAttributes] {
	return terra.ReferenceAsList[DataPermissionsAttributes](asabcs.ref.Append("permissions"))
}

func (asabcs dataAzurermStorageAccountBlobContainerSasAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](asabcs.ref.Append("timeouts"))
}
