// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_sentinel_watchlist

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_sentinel_watchlist.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSentinelWatchlistState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asw *Resource) Type() string {
	return "azurerm_sentinel_watchlist"
}

// LocalName returns the local name for [Resource].
func (asw *Resource) LocalName() string {
	return asw.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asw *Resource) Configuration() interface{} {
	return asw.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asw *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asw)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asw *Resource) Dependencies() terra.Dependencies {
	return asw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asw *Resource) LifecycleManagement() *terra.Lifecycle {
	return asw.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asw *Resource) Attributes() azurermSentinelWatchlistAttributes {
	return azurermSentinelWatchlistAttributes{ref: terra.ReferenceResource(asw)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asw *Resource) ImportState(state io.Reader) error {
	asw.state = &azurermSentinelWatchlistState{}
	if err := json.NewDecoder(state).Decode(asw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asw.Type(), asw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asw *Resource) State() (*azurermSentinelWatchlistState, bool) {
	return asw.state, asw.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asw *Resource) StateMust() *azurermSentinelWatchlistState {
	if asw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asw.Type(), asw.LocalName()))
	}
	return asw.state
}

// Args contains the configurations for azurerm_sentinel_watchlist.
type Args struct {
	// DefaultDuration: string, optional
	DefaultDuration terra.StringValue `hcl:"default_duration,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ItemSearchKey: string, required
	ItemSearchKey terra.StringValue `hcl:"item_search_key,attr" validate:"required"`
	// Labels: list of string, optional
	Labels terra.ListValue[terra.StringValue] `hcl:"labels,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSentinelWatchlistAttributes struct {
	ref terra.Reference
}

// DefaultDuration returns a reference to field default_duration of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) DefaultDuration() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("default_duration"))
}

// Description returns a reference to field description of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("id"))
}

// ItemSearchKey returns a reference to field item_search_key of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) ItemSearchKey() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("item_search_key"))
}

// Labels returns a reference to field labels of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) Labels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asw.ref.Append("labels"))
}

// LogAnalyticsWorkspaceId returns a reference to field log_analytics_workspace_id of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("log_analytics_workspace_id"))
}

// Name returns a reference to field name of azurerm_sentinel_watchlist.
func (asw azurermSentinelWatchlistAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asw.ref.Append("name"))
}

func (asw azurermSentinelWatchlistAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asw.ref.Append("timeouts"))
}

type azurermSentinelWatchlistState struct {
	DefaultDuration         string         `json:"default_duration"`
	Description             string         `json:"description"`
	DisplayName             string         `json:"display_name"`
	Id                      string         `json:"id"`
	ItemSearchKey           string         `json:"item_search_key"`
	Labels                  []string       `json:"labels"`
	LogAnalyticsWorkspaceId string         `json:"log_analytics_workspace_id"`
	Name                    string         `json:"name"`
	Timeouts                *TimeoutsState `json:"timeouts"`
}
