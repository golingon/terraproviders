// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_application_insights_smart_detection_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_application_insights_smart_detection_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApplicationInsightsSmartDetectionRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaisdr *Resource) Type() string {
	return "azurerm_application_insights_smart_detection_rule"
}

// LocalName returns the local name for [Resource].
func (aaisdr *Resource) LocalName() string {
	return aaisdr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaisdr *Resource) Configuration() interface{} {
	return aaisdr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaisdr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaisdr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaisdr *Resource) Dependencies() terra.Dependencies {
	return aaisdr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaisdr *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaisdr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaisdr *Resource) Attributes() azurermApplicationInsightsSmartDetectionRuleAttributes {
	return azurermApplicationInsightsSmartDetectionRuleAttributes{ref: terra.ReferenceResource(aaisdr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaisdr *Resource) ImportState(state io.Reader) error {
	aaisdr.state = &azurermApplicationInsightsSmartDetectionRuleState{}
	if err := json.NewDecoder(state).Decode(aaisdr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaisdr.Type(), aaisdr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaisdr *Resource) State() (*azurermApplicationInsightsSmartDetectionRuleState, bool) {
	return aaisdr.state, aaisdr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaisdr *Resource) StateMust() *azurermApplicationInsightsSmartDetectionRuleState {
	if aaisdr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaisdr.Type(), aaisdr.LocalName()))
	}
	return aaisdr.state
}

// Args contains the configurations for azurerm_application_insights_smart_detection_rule.
type Args struct {
	// AdditionalEmailRecipients: set of string, optional
	AdditionalEmailRecipients terra.SetValue[terra.StringValue] `hcl:"additional_email_recipients,attr"`
	// ApplicationInsightsId: string, required
	ApplicationInsightsId terra.StringValue `hcl:"application_insights_id,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SendEmailsToSubscriptionOwners: bool, optional
	SendEmailsToSubscriptionOwners terra.BoolValue `hcl:"send_emails_to_subscription_owners,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApplicationInsightsSmartDetectionRuleAttributes struct {
	ref terra.Reference
}

// AdditionalEmailRecipients returns a reference to field additional_email_recipients of azurerm_application_insights_smart_detection_rule.
func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) AdditionalEmailRecipients() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaisdr.ref.Append("additional_email_recipients"))
}

// ApplicationInsightsId returns a reference to field application_insights_id of azurerm_application_insights_smart_detection_rule.
func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) ApplicationInsightsId() terra.StringValue {
	return terra.ReferenceAsString(aaisdr.ref.Append("application_insights_id"))
}

// Enabled returns a reference to field enabled of azurerm_application_insights_smart_detection_rule.
func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(aaisdr.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_application_insights_smart_detection_rule.
func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaisdr.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_application_insights_smart_detection_rule.
func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aaisdr.ref.Append("name"))
}

// SendEmailsToSubscriptionOwners returns a reference to field send_emails_to_subscription_owners of azurerm_application_insights_smart_detection_rule.
func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) SendEmailsToSubscriptionOwners() terra.BoolValue {
	return terra.ReferenceAsBool(aaisdr.ref.Append("send_emails_to_subscription_owners"))
}

func (aaisdr azurermApplicationInsightsSmartDetectionRuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaisdr.ref.Append("timeouts"))
}

type azurermApplicationInsightsSmartDetectionRuleState struct {
	AdditionalEmailRecipients      []string       `json:"additional_email_recipients"`
	ApplicationInsightsId          string         `json:"application_insights_id"`
	Enabled                        bool           `json:"enabled"`
	Id                             string         `json:"id"`
	Name                           string         `json:"name"`
	SendEmailsToSubscriptionOwners bool           `json:"send_emails_to_subscription_owners"`
	Timeouts                       *TimeoutsState `json:"timeouts"`
}
