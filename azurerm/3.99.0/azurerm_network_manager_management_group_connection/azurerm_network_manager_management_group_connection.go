// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_network_manager_management_group_connection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_network_manager_management_group_connection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermNetworkManagerManagementGroupConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (anmmgc *Resource) Type() string {
	return "azurerm_network_manager_management_group_connection"
}

// LocalName returns the local name for [Resource].
func (anmmgc *Resource) LocalName() string {
	return anmmgc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (anmmgc *Resource) Configuration() interface{} {
	return anmmgc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (anmmgc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(anmmgc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (anmmgc *Resource) Dependencies() terra.Dependencies {
	return anmmgc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (anmmgc *Resource) LifecycleManagement() *terra.Lifecycle {
	return anmmgc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (anmmgc *Resource) Attributes() azurermNetworkManagerManagementGroupConnectionAttributes {
	return azurermNetworkManagerManagementGroupConnectionAttributes{ref: terra.ReferenceResource(anmmgc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (anmmgc *Resource) ImportState(state io.Reader) error {
	anmmgc.state = &azurermNetworkManagerManagementGroupConnectionState{}
	if err := json.NewDecoder(state).Decode(anmmgc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", anmmgc.Type(), anmmgc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (anmmgc *Resource) State() (*azurermNetworkManagerManagementGroupConnectionState, bool) {
	return anmmgc.state, anmmgc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (anmmgc *Resource) StateMust() *azurermNetworkManagerManagementGroupConnectionState {
	if anmmgc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", anmmgc.Type(), anmmgc.LocalName()))
	}
	return anmmgc.state
}

// Args contains the configurations for azurerm_network_manager_management_group_connection.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagementGroupId: string, required
	ManagementGroupId terra.StringValue `hcl:"management_group_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NetworkManagerId: string, required
	NetworkManagerId terra.StringValue `hcl:"network_manager_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermNetworkManagerManagementGroupConnectionAttributes struct {
	ref terra.Reference
}

// ConnectionState returns a reference to field connection_state of azurerm_network_manager_management_group_connection.
func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) ConnectionState() terra.StringValue {
	return terra.ReferenceAsString(anmmgc.ref.Append("connection_state"))
}

// Description returns a reference to field description of azurerm_network_manager_management_group_connection.
func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(anmmgc.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_network_manager_management_group_connection.
func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(anmmgc.ref.Append("id"))
}

// ManagementGroupId returns a reference to field management_group_id of azurerm_network_manager_management_group_connection.
func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) ManagementGroupId() terra.StringValue {
	return terra.ReferenceAsString(anmmgc.ref.Append("management_group_id"))
}

// Name returns a reference to field name of azurerm_network_manager_management_group_connection.
func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(anmmgc.ref.Append("name"))
}

// NetworkManagerId returns a reference to field network_manager_id of azurerm_network_manager_management_group_connection.
func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) NetworkManagerId() terra.StringValue {
	return terra.ReferenceAsString(anmmgc.ref.Append("network_manager_id"))
}

func (anmmgc azurermNetworkManagerManagementGroupConnectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](anmmgc.ref.Append("timeouts"))
}

type azurermNetworkManagerManagementGroupConnectionState struct {
	ConnectionState   string         `json:"connection_state"`
	Description       string         `json:"description"`
	Id                string         `json:"id"`
	ManagementGroupId string         `json:"management_group_id"`
	Name              string         `json:"name"`
	NetworkManagerId  string         `json:"network_manager_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
