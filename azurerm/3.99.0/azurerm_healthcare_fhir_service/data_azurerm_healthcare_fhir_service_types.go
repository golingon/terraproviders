// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_healthcare_fhir_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAuthenticationAttributes struct {
	ref terra.Reference
}

func (a DataAuthenticationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAuthenticationAttributes) InternalWithRef(ref terra.Reference) DataAuthenticationAttributes {
	return DataAuthenticationAttributes{ref: ref}
}

func (a DataAuthenticationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAuthenticationAttributes) Audience() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("audience"))
}

func (a DataAuthenticationAttributes) Authority() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("authority"))
}

func (a DataAuthenticationAttributes) SmartProxyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("smart_proxy_enabled"))
}

type DataCorsAttributes struct {
	ref terra.Reference
}

func (c DataCorsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataCorsAttributes) InternalWithRef(ref terra.Reference) DataCorsAttributes {
	return DataCorsAttributes{ref: ref}
}

func (c DataCorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataCorsAttributes) AllowedHeaders() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("allowed_headers"))
}

func (c DataCorsAttributes) AllowedMethods() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("allowed_methods"))
}

func (c DataCorsAttributes) AllowedOrigins() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("allowed_origins"))
}

func (c DataCorsAttributes) CredentialsAllowed() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("credentials_allowed"))
}

func (c DataCorsAttributes) MaxAgeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("max_age_in_seconds"))
}

type DataIdentityAttributes struct {
	ref terra.Reference
}

func (i DataIdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIdentityAttributes) InternalWithRef(ref terra.Reference) DataIdentityAttributes {
	return DataIdentityAttributes{ref: ref}
}

func (i DataIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i DataIdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i DataIdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i DataIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAuthenticationState struct {
	Audience          string `json:"audience"`
	Authority         string `json:"authority"`
	SmartProxyEnabled bool   `json:"smart_proxy_enabled"`
}

type DataCorsState struct {
	AllowedHeaders     []string `json:"allowed_headers"`
	AllowedMethods     []string `json:"allowed_methods"`
	AllowedOrigins     []string `json:"allowed_origins"`
	CredentialsAllowed bool     `json:"credentials_allowed"`
	MaxAgeInSeconds    float64  `json:"max_age_in_seconds"`
}

type DataIdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	PrincipalId string   `json:"principal_id"`
	TenantId    string   `json:"tenant_id"`
	Type        string   `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
