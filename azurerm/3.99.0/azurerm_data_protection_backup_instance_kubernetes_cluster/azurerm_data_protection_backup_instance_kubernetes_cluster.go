// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_protection_backup_instance_kubernetes_cluster

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_data_protection_backup_instance_kubernetes_cluster.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDataProtectionBackupInstanceKubernetesClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adpbikc *Resource) Type() string {
	return "azurerm_data_protection_backup_instance_kubernetes_cluster"
}

// LocalName returns the local name for [Resource].
func (adpbikc *Resource) LocalName() string {
	return adpbikc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adpbikc *Resource) Configuration() interface{} {
	return adpbikc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adpbikc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adpbikc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adpbikc *Resource) Dependencies() terra.Dependencies {
	return adpbikc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adpbikc *Resource) LifecycleManagement() *terra.Lifecycle {
	return adpbikc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adpbikc *Resource) Attributes() azurermDataProtectionBackupInstanceKubernetesClusterAttributes {
	return azurermDataProtectionBackupInstanceKubernetesClusterAttributes{ref: terra.ReferenceResource(adpbikc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adpbikc *Resource) ImportState(state io.Reader) error {
	adpbikc.state = &azurermDataProtectionBackupInstanceKubernetesClusterState{}
	if err := json.NewDecoder(state).Decode(adpbikc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adpbikc.Type(), adpbikc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adpbikc *Resource) State() (*azurermDataProtectionBackupInstanceKubernetesClusterState, bool) {
	return adpbikc.state, adpbikc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adpbikc *Resource) StateMust() *azurermDataProtectionBackupInstanceKubernetesClusterState {
	if adpbikc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adpbikc.Type(), adpbikc.LocalName()))
	}
	return adpbikc.state
}

// Args contains the configurations for azurerm_data_protection_backup_instance_kubernetes_cluster.
type Args struct {
	// BackupPolicyId: string, required
	BackupPolicyId terra.StringValue `hcl:"backup_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesClusterId: string, required
	KubernetesClusterId terra.StringValue `hcl:"kubernetes_cluster_id,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SnapshotResourceGroupName: string, required
	SnapshotResourceGroupName terra.StringValue `hcl:"snapshot_resource_group_name,attr" validate:"required"`
	// VaultId: string, required
	VaultId terra.StringValue `hcl:"vault_id,attr" validate:"required"`
	// BackupDatasourceParameters: optional
	BackupDatasourceParameters *BackupDatasourceParameters `hcl:"backup_datasource_parameters,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDataProtectionBackupInstanceKubernetesClusterAttributes struct {
	ref terra.Reference
}

// BackupPolicyId returns a reference to field backup_policy_id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) BackupPolicyId() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("backup_policy_id"))
}

// Id returns a reference to field id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("id"))
}

// KubernetesClusterId returns a reference to field kubernetes_cluster_id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) KubernetesClusterId() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("kubernetes_cluster_id"))
}

// Location returns a reference to field location of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("name"))
}

// SnapshotResourceGroupName returns a reference to field snapshot_resource_group_name of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) SnapshotResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("snapshot_resource_group_name"))
}

// VaultId returns a reference to field vault_id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) VaultId() terra.StringValue {
	return terra.ReferenceAsString(adpbikc.ref.Append("vault_id"))
}

func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) BackupDatasourceParameters() terra.ListValue[BackupDatasourceParametersAttributes] {
	return terra.ReferenceAsList[BackupDatasourceParametersAttributes](adpbikc.ref.Append("backup_datasource_parameters"))
}

func (adpbikc azurermDataProtectionBackupInstanceKubernetesClusterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adpbikc.ref.Append("timeouts"))
}

type azurermDataProtectionBackupInstanceKubernetesClusterState struct {
	BackupPolicyId             string                            `json:"backup_policy_id"`
	Id                         string                            `json:"id"`
	KubernetesClusterId        string                            `json:"kubernetes_cluster_id"`
	Location                   string                            `json:"location"`
	Name                       string                            `json:"name"`
	SnapshotResourceGroupName  string                            `json:"snapshot_resource_group_name"`
	VaultId                    string                            `json:"vault_id"`
	BackupDatasourceParameters []BackupDatasourceParametersState `json:"backup_datasource_parameters"`
	Timeouts                   *TimeoutsState                    `json:"timeouts"`
}
