// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iothub

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iothub.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIothubState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ai *Resource) Type() string {
	return "azurerm_iothub"
}

// LocalName returns the local name for [Resource].
func (ai *Resource) LocalName() string {
	return ai.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ai *Resource) Configuration() interface{} {
	return ai.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ai *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ai)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ai *Resource) Dependencies() terra.Dependencies {
	return ai.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ai *Resource) LifecycleManagement() *terra.Lifecycle {
	return ai.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ai *Resource) Attributes() azurermIothubAttributes {
	return azurermIothubAttributes{ref: terra.ReferenceResource(ai)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ai *Resource) ImportState(state io.Reader) error {
	ai.state = &azurermIothubState{}
	if err := json.NewDecoder(state).Decode(ai.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ai.Type(), ai.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ai *Resource) State() (*azurermIothubState, bool) {
	return ai.state, ai.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ai *Resource) StateMust() *azurermIothubState {
	if ai.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ai.Type(), ai.LocalName()))
	}
	return ai.state
}

// Args contains the configurations for azurerm_iothub.
type Args struct {
	// EventHubPartitionCount: number, optional
	EventHubPartitionCount terra.NumberValue `hcl:"event_hub_partition_count,attr"`
	// EventHubRetentionInDays: number, optional
	EventHubRetentionInDays terra.NumberValue `hcl:"event_hub_retention_in_days,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalAuthenticationEnabled: bool, optional
	LocalAuthenticationEnabled terra.BoolValue `hcl:"local_authentication_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MinTlsVersion: string, optional
	MinTlsVersion terra.StringValue `hcl:"min_tls_version,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Endpoint: min=0
	Endpoint []Endpoint `hcl:"endpoint,block" validate:"min=0"`
	// Enrichment: min=0
	Enrichment []Enrichment `hcl:"enrichment,block" validate:"min=0"`
	// Route: min=0
	Route []Route `hcl:"route,block" validate:"min=0"`
	// CloudToDevice: optional
	CloudToDevice *CloudToDevice `hcl:"cloud_to_device,block"`
	// FallbackRoute: optional
	FallbackRoute *FallbackRoute `hcl:"fallback_route,block"`
	// FileUpload: optional
	FileUpload *FileUpload `hcl:"file_upload,block"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// NetworkRuleSet: min=0
	NetworkRuleSet []NetworkRuleSet `hcl:"network_rule_set,block" validate:"min=0"`
	// Sku: required
	Sku *Sku `hcl:"sku,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIothubAttributes struct {
	ref terra.Reference
}

// EventHubEventsEndpoint returns a reference to field event_hub_events_endpoint of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubEventsEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("event_hub_events_endpoint"))
}

// EventHubEventsNamespace returns a reference to field event_hub_events_namespace of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubEventsNamespace() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("event_hub_events_namespace"))
}

// EventHubEventsPath returns a reference to field event_hub_events_path of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubEventsPath() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("event_hub_events_path"))
}

// EventHubOperationsEndpoint returns a reference to field event_hub_operations_endpoint of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubOperationsEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("event_hub_operations_endpoint"))
}

// EventHubOperationsPath returns a reference to field event_hub_operations_path of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubOperationsPath() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("event_hub_operations_path"))
}

// EventHubPartitionCount returns a reference to field event_hub_partition_count of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubPartitionCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ai.ref.Append("event_hub_partition_count"))
}

// EventHubRetentionInDays returns a reference to field event_hub_retention_in_days of azurerm_iothub.
func (ai azurermIothubAttributes) EventHubRetentionInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(ai.ref.Append("event_hub_retention_in_days"))
}

// Hostname returns a reference to field hostname of azurerm_iothub.
func (ai azurermIothubAttributes) Hostname() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("hostname"))
}

// Id returns a reference to field id of azurerm_iothub.
func (ai azurermIothubAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("id"))
}

// LocalAuthenticationEnabled returns a reference to field local_authentication_enabled of azurerm_iothub.
func (ai azurermIothubAttributes) LocalAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("local_authentication_enabled"))
}

// Location returns a reference to field location of azurerm_iothub.
func (ai azurermIothubAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("location"))
}

// MinTlsVersion returns a reference to field min_tls_version of azurerm_iothub.
func (ai azurermIothubAttributes) MinTlsVersion() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("min_tls_version"))
}

// Name returns a reference to field name of azurerm_iothub.
func (ai azurermIothubAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("name"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_iothub.
func (ai azurermIothubAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("public_network_access_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_iothub.
func (ai azurermIothubAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_iothub.
func (ai azurermIothubAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ai.ref.Append("tags"))
}

// Type returns a reference to field type of azurerm_iothub.
func (ai azurermIothubAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("type"))
}

func (ai azurermIothubAttributes) Endpoint() terra.ListValue[EndpointAttributes] {
	return terra.ReferenceAsList[EndpointAttributes](ai.ref.Append("endpoint"))
}

func (ai azurermIothubAttributes) Enrichment() terra.ListValue[EnrichmentAttributes] {
	return terra.ReferenceAsList[EnrichmentAttributes](ai.ref.Append("enrichment"))
}

func (ai azurermIothubAttributes) Route() terra.ListValue[RouteAttributes] {
	return terra.ReferenceAsList[RouteAttributes](ai.ref.Append("route"))
}

func (ai azurermIothubAttributes) SharedAccessPolicy() terra.ListValue[SharedAccessPolicyAttributes] {
	return terra.ReferenceAsList[SharedAccessPolicyAttributes](ai.ref.Append("shared_access_policy"))
}

func (ai azurermIothubAttributes) CloudToDevice() terra.ListValue[CloudToDeviceAttributes] {
	return terra.ReferenceAsList[CloudToDeviceAttributes](ai.ref.Append("cloud_to_device"))
}

func (ai azurermIothubAttributes) FallbackRoute() terra.ListValue[FallbackRouteAttributes] {
	return terra.ReferenceAsList[FallbackRouteAttributes](ai.ref.Append("fallback_route"))
}

func (ai azurermIothubAttributes) FileUpload() terra.ListValue[FileUploadAttributes] {
	return terra.ReferenceAsList[FileUploadAttributes](ai.ref.Append("file_upload"))
}

func (ai azurermIothubAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](ai.ref.Append("identity"))
}

func (ai azurermIothubAttributes) NetworkRuleSet() terra.ListValue[NetworkRuleSetAttributes] {
	return terra.ReferenceAsList[NetworkRuleSetAttributes](ai.ref.Append("network_rule_set"))
}

func (ai azurermIothubAttributes) Sku() terra.ListValue[SkuAttributes] {
	return terra.ReferenceAsList[SkuAttributes](ai.ref.Append("sku"))
}

func (ai azurermIothubAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ai.ref.Append("timeouts"))
}

type azurermIothubState struct {
	EventHubEventsEndpoint     string                    `json:"event_hub_events_endpoint"`
	EventHubEventsNamespace    string                    `json:"event_hub_events_namespace"`
	EventHubEventsPath         string                    `json:"event_hub_events_path"`
	EventHubOperationsEndpoint string                    `json:"event_hub_operations_endpoint"`
	EventHubOperationsPath     string                    `json:"event_hub_operations_path"`
	EventHubPartitionCount     float64                   `json:"event_hub_partition_count"`
	EventHubRetentionInDays    float64                   `json:"event_hub_retention_in_days"`
	Hostname                   string                    `json:"hostname"`
	Id                         string                    `json:"id"`
	LocalAuthenticationEnabled bool                      `json:"local_authentication_enabled"`
	Location                   string                    `json:"location"`
	MinTlsVersion              string                    `json:"min_tls_version"`
	Name                       string                    `json:"name"`
	PublicNetworkAccessEnabled bool                      `json:"public_network_access_enabled"`
	ResourceGroupName          string                    `json:"resource_group_name"`
	Tags                       map[string]string         `json:"tags"`
	Type                       string                    `json:"type"`
	Endpoint                   []EndpointState           `json:"endpoint"`
	Enrichment                 []EnrichmentState         `json:"enrichment"`
	Route                      []RouteState              `json:"route"`
	SharedAccessPolicy         []SharedAccessPolicyState `json:"shared_access_policy"`
	CloudToDevice              []CloudToDeviceState      `json:"cloud_to_device"`
	FallbackRoute              []FallbackRouteState      `json:"fallback_route"`
	FileUpload                 []FileUploadState         `json:"file_upload"`
	Identity                   []IdentityState           `json:"identity"`
	NetworkRuleSet             []NetworkRuleSetState     `json:"network_rule_set"`
	Sku                        []SkuState                `json:"sku"`
	Timeouts                   *TimeoutsState            `json:"timeouts"`
}
