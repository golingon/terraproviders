// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_purview_account

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_purview_account.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPurviewAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apa *Resource) Type() string {
	return "azurerm_purview_account"
}

// LocalName returns the local name for [Resource].
func (apa *Resource) LocalName() string {
	return apa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apa *Resource) Configuration() interface{} {
	return apa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apa *Resource) Dependencies() terra.Dependencies {
	return apa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apa *Resource) LifecycleManagement() *terra.Lifecycle {
	return apa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apa *Resource) Attributes() azurermPurviewAccountAttributes {
	return azurermPurviewAccountAttributes{ref: terra.ReferenceResource(apa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apa *Resource) ImportState(state io.Reader) error {
	apa.state = &azurermPurviewAccountState{}
	if err := json.NewDecoder(state).Decode(apa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apa.Type(), apa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apa *Resource) State() (*azurermPurviewAccountState, bool) {
	return apa.state, apa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apa *Resource) StateMust() *azurermPurviewAccountState {
	if apa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apa.Type(), apa.LocalName()))
	}
	return apa.state
}

// Args contains the configurations for azurerm_purview_account.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ManagedResourceGroupName: string, optional
	ManagedResourceGroupName terra.StringValue `hcl:"managed_resource_group_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkEnabled: bool, optional
	PublicNetworkEnabled terra.BoolValue `hcl:"public_network_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: required
	Identity *Identity `hcl:"identity,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPurviewAccountAttributes struct {
	ref terra.Reference
}

// AtlasKafkaEndpointPrimaryConnectionString returns a reference to field atlas_kafka_endpoint_primary_connection_string of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) AtlasKafkaEndpointPrimaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("atlas_kafka_endpoint_primary_connection_string"))
}

// AtlasKafkaEndpointSecondaryConnectionString returns a reference to field atlas_kafka_endpoint_secondary_connection_string of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) AtlasKafkaEndpointSecondaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("atlas_kafka_endpoint_secondary_connection_string"))
}

// CatalogEndpoint returns a reference to field catalog_endpoint of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) CatalogEndpoint() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("catalog_endpoint"))
}

// GuardianEndpoint returns a reference to field guardian_endpoint of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) GuardianEndpoint() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("guardian_endpoint"))
}

// Id returns a reference to field id of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("location"))
}

// ManagedResourceGroupName returns a reference to field managed_resource_group_name of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) ManagedResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("managed_resource_group_name"))
}

// Name returns a reference to field name of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("name"))
}

// PublicNetworkEnabled returns a reference to field public_network_enabled of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) PublicNetworkEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(apa.ref.Append("public_network_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("resource_group_name"))
}

// ScanEndpoint returns a reference to field scan_endpoint of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) ScanEndpoint() terra.StringValue {
	return terra.ReferenceAsString(apa.ref.Append("scan_endpoint"))
}

// Tags returns a reference to field tags of azurerm_purview_account.
func (apa azurermPurviewAccountAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](apa.ref.Append("tags"))
}

func (apa azurermPurviewAccountAttributes) ManagedResources() terra.ListValue[ManagedResourcesAttributes] {
	return terra.ReferenceAsList[ManagedResourcesAttributes](apa.ref.Append("managed_resources"))
}

func (apa azurermPurviewAccountAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](apa.ref.Append("identity"))
}

func (apa azurermPurviewAccountAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apa.ref.Append("timeouts"))
}

type azurermPurviewAccountState struct {
	AtlasKafkaEndpointPrimaryConnectionString   string                  `json:"atlas_kafka_endpoint_primary_connection_string"`
	AtlasKafkaEndpointSecondaryConnectionString string                  `json:"atlas_kafka_endpoint_secondary_connection_string"`
	CatalogEndpoint                             string                  `json:"catalog_endpoint"`
	GuardianEndpoint                            string                  `json:"guardian_endpoint"`
	Id                                          string                  `json:"id"`
	Location                                    string                  `json:"location"`
	ManagedResourceGroupName                    string                  `json:"managed_resource_group_name"`
	Name                                        string                  `json:"name"`
	PublicNetworkEnabled                        bool                    `json:"public_network_enabled"`
	ResourceGroupName                           string                  `json:"resource_group_name"`
	ScanEndpoint                                string                  `json:"scan_endpoint"`
	Tags                                        map[string]string       `json:"tags"`
	ManagedResources                            []ManagedResourcesState `json:"managed_resources"`
	Identity                                    []IdentityState         `json:"identity"`
	Timeouts                                    *TimeoutsState          `json:"timeouts"`
}
