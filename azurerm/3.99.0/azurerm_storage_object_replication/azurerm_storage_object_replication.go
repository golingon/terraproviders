// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_object_replication

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_storage_object_replication.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermStorageObjectReplicationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asor *Resource) Type() string {
	return "azurerm_storage_object_replication"
}

// LocalName returns the local name for [Resource].
func (asor *Resource) LocalName() string {
	return asor.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asor *Resource) Configuration() interface{} {
	return asor.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asor *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asor)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asor *Resource) Dependencies() terra.Dependencies {
	return asor.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asor *Resource) LifecycleManagement() *terra.Lifecycle {
	return asor.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asor *Resource) Attributes() azurermStorageObjectReplicationAttributes {
	return azurermStorageObjectReplicationAttributes{ref: terra.ReferenceResource(asor)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asor *Resource) ImportState(state io.Reader) error {
	asor.state = &azurermStorageObjectReplicationState{}
	if err := json.NewDecoder(state).Decode(asor.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asor.Type(), asor.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asor *Resource) State() (*azurermStorageObjectReplicationState, bool) {
	return asor.state, asor.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asor *Resource) StateMust() *azurermStorageObjectReplicationState {
	if asor.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asor.Type(), asor.LocalName()))
	}
	return asor.state
}

// Args contains the configurations for azurerm_storage_object_replication.
type Args struct {
	// DestinationStorageAccountId: string, required
	DestinationStorageAccountId terra.StringValue `hcl:"destination_storage_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SourceStorageAccountId: string, required
	SourceStorageAccountId terra.StringValue `hcl:"source_storage_account_id,attr" validate:"required"`
	// Rules: min=1
	Rules []Rules `hcl:"rules,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermStorageObjectReplicationAttributes struct {
	ref terra.Reference
}

// DestinationObjectReplicationId returns a reference to field destination_object_replication_id of azurerm_storage_object_replication.
func (asor azurermStorageObjectReplicationAttributes) DestinationObjectReplicationId() terra.StringValue {
	return terra.ReferenceAsString(asor.ref.Append("destination_object_replication_id"))
}

// DestinationStorageAccountId returns a reference to field destination_storage_account_id of azurerm_storage_object_replication.
func (asor azurermStorageObjectReplicationAttributes) DestinationStorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(asor.ref.Append("destination_storage_account_id"))
}

// Id returns a reference to field id of azurerm_storage_object_replication.
func (asor azurermStorageObjectReplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asor.ref.Append("id"))
}

// SourceObjectReplicationId returns a reference to field source_object_replication_id of azurerm_storage_object_replication.
func (asor azurermStorageObjectReplicationAttributes) SourceObjectReplicationId() terra.StringValue {
	return terra.ReferenceAsString(asor.ref.Append("source_object_replication_id"))
}

// SourceStorageAccountId returns a reference to field source_storage_account_id of azurerm_storage_object_replication.
func (asor azurermStorageObjectReplicationAttributes) SourceStorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(asor.ref.Append("source_storage_account_id"))
}

func (asor azurermStorageObjectReplicationAttributes) Rules() terra.SetValue[RulesAttributes] {
	return terra.ReferenceAsSet[RulesAttributes](asor.ref.Append("rules"))
}

func (asor azurermStorageObjectReplicationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asor.ref.Append("timeouts"))
}

type azurermStorageObjectReplicationState struct {
	DestinationObjectReplicationId string         `json:"destination_object_replication_id"`
	DestinationStorageAccountId    string         `json:"destination_storage_account_id"`
	Id                             string         `json:"id"`
	SourceObjectReplicationId      string         `json:"source_object_replication_id"`
	SourceStorageAccountId         string         `json:"source_storage_account_id"`
	Rules                          []RulesState   `json:"rules"`
	Timeouts                       *TimeoutsState `json:"timeouts"`
}
