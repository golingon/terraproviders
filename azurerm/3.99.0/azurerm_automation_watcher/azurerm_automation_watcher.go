// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_watcher

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_watcher.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationWatcherState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaw *Resource) Type() string {
	return "azurerm_automation_watcher"
}

// LocalName returns the local name for [Resource].
func (aaw *Resource) LocalName() string {
	return aaw.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaw *Resource) Configuration() interface{} {
	return aaw.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaw *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaw)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaw *Resource) Dependencies() terra.Dependencies {
	return aaw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaw *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaw.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaw *Resource) Attributes() azurermAutomationWatcherAttributes {
	return azurermAutomationWatcherAttributes{ref: terra.ReferenceResource(aaw)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaw *Resource) ImportState(state io.Reader) error {
	aaw.state = &azurermAutomationWatcherState{}
	if err := json.NewDecoder(state).Decode(aaw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaw.Type(), aaw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaw *Resource) State() (*azurermAutomationWatcherState, bool) {
	return aaw.state, aaw.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaw *Resource) StateMust() *azurermAutomationWatcherState {
	if aaw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaw.Type(), aaw.LocalName()))
	}
	return aaw.state
}

// Args contains the configurations for azurerm_automation_watcher.
type Args struct {
	// AutomationAccountId: string, required
	AutomationAccountId terra.StringValue `hcl:"automation_account_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Etag: string, optional
	Etag terra.StringValue `hcl:"etag,attr"`
	// ExecutionFrequencyInSeconds: number, required
	ExecutionFrequencyInSeconds terra.NumberValue `hcl:"execution_frequency_in_seconds,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ScriptName: string, required
	ScriptName terra.StringValue `hcl:"script_name,attr" validate:"required"`
	// ScriptParameters: map of string, optional
	ScriptParameters terra.MapValue[terra.StringValue] `hcl:"script_parameters,attr"`
	// ScriptRunOn: string, required
	ScriptRunOn terra.StringValue `hcl:"script_run_on,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationWatcherAttributes struct {
	ref terra.Reference
}

// AutomationAccountId returns a reference to field automation_account_id of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) AutomationAccountId() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("automation_account_id"))
}

// Description returns a reference to field description of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("description"))
}

// Etag returns a reference to field etag of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("etag"))
}

// ExecutionFrequencyInSeconds returns a reference to field execution_frequency_in_seconds of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) ExecutionFrequencyInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(aaw.ref.Append("execution_frequency_in_seconds"))
}

// Id returns a reference to field id of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("name"))
}

// ScriptName returns a reference to field script_name of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) ScriptName() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("script_name"))
}

// ScriptParameters returns a reference to field script_parameters of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) ScriptParameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaw.ref.Append("script_parameters"))
}

// ScriptRunOn returns a reference to field script_run_on of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) ScriptRunOn() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("script_run_on"))
}

// Status returns a reference to field status of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(aaw.ref.Append("status"))
}

// Tags returns a reference to field tags of azurerm_automation_watcher.
func (aaw azurermAutomationWatcherAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaw.ref.Append("tags"))
}

func (aaw azurermAutomationWatcherAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaw.ref.Append("timeouts"))
}

type azurermAutomationWatcherState struct {
	AutomationAccountId         string            `json:"automation_account_id"`
	Description                 string            `json:"description"`
	Etag                        string            `json:"etag"`
	ExecutionFrequencyInSeconds float64           `json:"execution_frequency_in_seconds"`
	Id                          string            `json:"id"`
	Location                    string            `json:"location"`
	Name                        string            `json:"name"`
	ScriptName                  string            `json:"script_name"`
	ScriptParameters            map[string]string `json:"script_parameters"`
	ScriptRunOn                 string            `json:"script_run_on"`
	Status                      string            `json:"status"`
	Tags                        map[string]string `json:"tags"`
	Timeouts                    *TimeoutsState    `json:"timeouts"`
}
