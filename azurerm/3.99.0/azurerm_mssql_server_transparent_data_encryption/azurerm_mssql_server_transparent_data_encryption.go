// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mssql_server_transparent_data_encryption

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_mssql_server_transparent_data_encryption.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMssqlServerTransparentDataEncryptionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amstde *Resource) Type() string {
	return "azurerm_mssql_server_transparent_data_encryption"
}

// LocalName returns the local name for [Resource].
func (amstde *Resource) LocalName() string {
	return amstde.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amstde *Resource) Configuration() interface{} {
	return amstde.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amstde *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amstde)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amstde *Resource) Dependencies() terra.Dependencies {
	return amstde.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amstde *Resource) LifecycleManagement() *terra.Lifecycle {
	return amstde.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amstde *Resource) Attributes() azurermMssqlServerTransparentDataEncryptionAttributes {
	return azurermMssqlServerTransparentDataEncryptionAttributes{ref: terra.ReferenceResource(amstde)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amstde *Resource) ImportState(state io.Reader) error {
	amstde.state = &azurermMssqlServerTransparentDataEncryptionState{}
	if err := json.NewDecoder(state).Decode(amstde.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amstde.Type(), amstde.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amstde *Resource) State() (*azurermMssqlServerTransparentDataEncryptionState, bool) {
	return amstde.state, amstde.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amstde *Resource) StateMust() *azurermMssqlServerTransparentDataEncryptionState {
	if amstde.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amstde.Type(), amstde.LocalName()))
	}
	return amstde.state
}

// Args contains the configurations for azurerm_mssql_server_transparent_data_encryption.
type Args struct {
	// AutoRotationEnabled: bool, optional
	AutoRotationEnabled terra.BoolValue `hcl:"auto_rotation_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultKeyId: string, optional
	KeyVaultKeyId terra.StringValue `hcl:"key_vault_key_id,attr"`
	// ServerId: string, required
	ServerId terra.StringValue `hcl:"server_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMssqlServerTransparentDataEncryptionAttributes struct {
	ref terra.Reference
}

// AutoRotationEnabled returns a reference to field auto_rotation_enabled of azurerm_mssql_server_transparent_data_encryption.
func (amstde azurermMssqlServerTransparentDataEncryptionAttributes) AutoRotationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amstde.ref.Append("auto_rotation_enabled"))
}

// Id returns a reference to field id of azurerm_mssql_server_transparent_data_encryption.
func (amstde azurermMssqlServerTransparentDataEncryptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amstde.ref.Append("id"))
}

// KeyVaultKeyId returns a reference to field key_vault_key_id of azurerm_mssql_server_transparent_data_encryption.
func (amstde azurermMssqlServerTransparentDataEncryptionAttributes) KeyVaultKeyId() terra.StringValue {
	return terra.ReferenceAsString(amstde.ref.Append("key_vault_key_id"))
}

// ServerId returns a reference to field server_id of azurerm_mssql_server_transparent_data_encryption.
func (amstde azurermMssqlServerTransparentDataEncryptionAttributes) ServerId() terra.StringValue {
	return terra.ReferenceAsString(amstde.ref.Append("server_id"))
}

func (amstde azurermMssqlServerTransparentDataEncryptionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amstde.ref.Append("timeouts"))
}

type azurermMssqlServerTransparentDataEncryptionState struct {
	AutoRotationEnabled bool           `json:"auto_rotation_enabled"`
	Id                  string         `json:"id"`
	KeyVaultKeyId       string         `json:"key_vault_key_id"`
	ServerId            string         `json:"server_id"`
	Timeouts            *TimeoutsState `json:"timeouts"`
}
