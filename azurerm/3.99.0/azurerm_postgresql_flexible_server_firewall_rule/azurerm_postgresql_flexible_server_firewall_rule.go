// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_postgresql_flexible_server_firewall_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_postgresql_flexible_server_firewall_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPostgresqlFlexibleServerFirewallRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apfsfr *Resource) Type() string {
	return "azurerm_postgresql_flexible_server_firewall_rule"
}

// LocalName returns the local name for [Resource].
func (apfsfr *Resource) LocalName() string {
	return apfsfr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apfsfr *Resource) Configuration() interface{} {
	return apfsfr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apfsfr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apfsfr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apfsfr *Resource) Dependencies() terra.Dependencies {
	return apfsfr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apfsfr *Resource) LifecycleManagement() *terra.Lifecycle {
	return apfsfr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apfsfr *Resource) Attributes() azurermPostgresqlFlexibleServerFirewallRuleAttributes {
	return azurermPostgresqlFlexibleServerFirewallRuleAttributes{ref: terra.ReferenceResource(apfsfr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apfsfr *Resource) ImportState(state io.Reader) error {
	apfsfr.state = &azurermPostgresqlFlexibleServerFirewallRuleState{}
	if err := json.NewDecoder(state).Decode(apfsfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apfsfr.Type(), apfsfr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apfsfr *Resource) State() (*azurermPostgresqlFlexibleServerFirewallRuleState, bool) {
	return apfsfr.state, apfsfr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apfsfr *Resource) StateMust() *azurermPostgresqlFlexibleServerFirewallRuleState {
	if apfsfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apfsfr.Type(), apfsfr.LocalName()))
	}
	return apfsfr.state
}

// Args contains the configurations for azurerm_postgresql_flexible_server_firewall_rule.
type Args struct {
	// EndIpAddress: string, required
	EndIpAddress terra.StringValue `hcl:"end_ip_address,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServerId: string, required
	ServerId terra.StringValue `hcl:"server_id,attr" validate:"required"`
	// StartIpAddress: string, required
	StartIpAddress terra.StringValue `hcl:"start_ip_address,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPostgresqlFlexibleServerFirewallRuleAttributes struct {
	ref terra.Reference
}

// EndIpAddress returns a reference to field end_ip_address of azurerm_postgresql_flexible_server_firewall_rule.
func (apfsfr azurermPostgresqlFlexibleServerFirewallRuleAttributes) EndIpAddress() terra.StringValue {
	return terra.ReferenceAsString(apfsfr.ref.Append("end_ip_address"))
}

// Id returns a reference to field id of azurerm_postgresql_flexible_server_firewall_rule.
func (apfsfr azurermPostgresqlFlexibleServerFirewallRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apfsfr.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_postgresql_flexible_server_firewall_rule.
func (apfsfr azurermPostgresqlFlexibleServerFirewallRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apfsfr.ref.Append("name"))
}

// ServerId returns a reference to field server_id of azurerm_postgresql_flexible_server_firewall_rule.
func (apfsfr azurermPostgresqlFlexibleServerFirewallRuleAttributes) ServerId() terra.StringValue {
	return terra.ReferenceAsString(apfsfr.ref.Append("server_id"))
}

// StartIpAddress returns a reference to field start_ip_address of azurerm_postgresql_flexible_server_firewall_rule.
func (apfsfr azurermPostgresqlFlexibleServerFirewallRuleAttributes) StartIpAddress() terra.StringValue {
	return terra.ReferenceAsString(apfsfr.ref.Append("start_ip_address"))
}

func (apfsfr azurermPostgresqlFlexibleServerFirewallRuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apfsfr.ref.Append("timeouts"))
}

type azurermPostgresqlFlexibleServerFirewallRuleState struct {
	EndIpAddress   string         `json:"end_ip_address"`
	Id             string         `json:"id"`
	Name           string         `json:"name"`
	ServerId       string         `json:"server_id"`
	StartIpAddress string         `json:"start_ip_address"`
	Timeouts       *TimeoutsState `json:"timeouts"`
}
