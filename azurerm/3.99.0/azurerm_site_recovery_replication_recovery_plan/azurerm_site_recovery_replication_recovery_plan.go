// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_site_recovery_replication_recovery_plan

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_site_recovery_replication_recovery_plan.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSiteRecoveryReplicationRecoveryPlanState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asrrrp *Resource) Type() string {
	return "azurerm_site_recovery_replication_recovery_plan"
}

// LocalName returns the local name for [Resource].
func (asrrrp *Resource) LocalName() string {
	return asrrrp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asrrrp *Resource) Configuration() interface{} {
	return asrrrp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asrrrp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asrrrp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asrrrp *Resource) Dependencies() terra.Dependencies {
	return asrrrp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asrrrp *Resource) LifecycleManagement() *terra.Lifecycle {
	return asrrrp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asrrrp *Resource) Attributes() azurermSiteRecoveryReplicationRecoveryPlanAttributes {
	return azurermSiteRecoveryReplicationRecoveryPlanAttributes{ref: terra.ReferenceResource(asrrrp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asrrrp *Resource) ImportState(state io.Reader) error {
	asrrrp.state = &azurermSiteRecoveryReplicationRecoveryPlanState{}
	if err := json.NewDecoder(state).Decode(asrrrp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asrrrp.Type(), asrrrp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asrrrp *Resource) State() (*azurermSiteRecoveryReplicationRecoveryPlanState, bool) {
	return asrrrp.state, asrrrp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asrrrp *Resource) StateMust() *azurermSiteRecoveryReplicationRecoveryPlanState {
	if asrrrp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asrrrp.Type(), asrrrp.LocalName()))
	}
	return asrrrp.state
}

// Args contains the configurations for azurerm_site_recovery_replication_recovery_plan.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RecoveryVaultId: string, required
	RecoveryVaultId terra.StringValue `hcl:"recovery_vault_id,attr" validate:"required"`
	// SourceRecoveryFabricId: string, required
	SourceRecoveryFabricId terra.StringValue `hcl:"source_recovery_fabric_id,attr" validate:"required"`
	// TargetRecoveryFabricId: string, required
	TargetRecoveryFabricId terra.StringValue `hcl:"target_recovery_fabric_id,attr" validate:"required"`
	// AzureToAzureSettings: optional
	AzureToAzureSettings *AzureToAzureSettings `hcl:"azure_to_azure_settings,block"`
	// BootRecoveryGroup: min=0
	BootRecoveryGroup []BootRecoveryGroup `hcl:"boot_recovery_group,block" validate:"min=0"`
	// FailoverRecoveryGroup: optional
	FailoverRecoveryGroup *FailoverRecoveryGroup `hcl:"failover_recovery_group,block"`
	// RecoveryGroup: min=0
	RecoveryGroup []RecoveryGroup `hcl:"recovery_group,block" validate:"min=0"`
	// ShutdownRecoveryGroup: optional
	ShutdownRecoveryGroup *ShutdownRecoveryGroup `hcl:"shutdown_recovery_group,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSiteRecoveryReplicationRecoveryPlanAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_site_recovery_replication_recovery_plan.
func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asrrrp.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_site_recovery_replication_recovery_plan.
func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asrrrp.ref.Append("name"))
}

// RecoveryVaultId returns a reference to field recovery_vault_id of azurerm_site_recovery_replication_recovery_plan.
func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) RecoveryVaultId() terra.StringValue {
	return terra.ReferenceAsString(asrrrp.ref.Append("recovery_vault_id"))
}

// SourceRecoveryFabricId returns a reference to field source_recovery_fabric_id of azurerm_site_recovery_replication_recovery_plan.
func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) SourceRecoveryFabricId() terra.StringValue {
	return terra.ReferenceAsString(asrrrp.ref.Append("source_recovery_fabric_id"))
}

// TargetRecoveryFabricId returns a reference to field target_recovery_fabric_id of azurerm_site_recovery_replication_recovery_plan.
func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) TargetRecoveryFabricId() terra.StringValue {
	return terra.ReferenceAsString(asrrrp.ref.Append("target_recovery_fabric_id"))
}

func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) AzureToAzureSettings() terra.ListValue[AzureToAzureSettingsAttributes] {
	return terra.ReferenceAsList[AzureToAzureSettingsAttributes](asrrrp.ref.Append("azure_to_azure_settings"))
}

func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) BootRecoveryGroup() terra.ListValue[BootRecoveryGroupAttributes] {
	return terra.ReferenceAsList[BootRecoveryGroupAttributes](asrrrp.ref.Append("boot_recovery_group"))
}

func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) FailoverRecoveryGroup() terra.ListValue[FailoverRecoveryGroupAttributes] {
	return terra.ReferenceAsList[FailoverRecoveryGroupAttributes](asrrrp.ref.Append("failover_recovery_group"))
}

func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) RecoveryGroup() terra.SetValue[RecoveryGroupAttributes] {
	return terra.ReferenceAsSet[RecoveryGroupAttributes](asrrrp.ref.Append("recovery_group"))
}

func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) ShutdownRecoveryGroup() terra.ListValue[ShutdownRecoveryGroupAttributes] {
	return terra.ReferenceAsList[ShutdownRecoveryGroupAttributes](asrrrp.ref.Append("shutdown_recovery_group"))
}

func (asrrrp azurermSiteRecoveryReplicationRecoveryPlanAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asrrrp.ref.Append("timeouts"))
}

type azurermSiteRecoveryReplicationRecoveryPlanState struct {
	Id                     string                       `json:"id"`
	Name                   string                       `json:"name"`
	RecoveryVaultId        string                       `json:"recovery_vault_id"`
	SourceRecoveryFabricId string                       `json:"source_recovery_fabric_id"`
	TargetRecoveryFabricId string                       `json:"target_recovery_fabric_id"`
	AzureToAzureSettings   []AzureToAzureSettingsState  `json:"azure_to_azure_settings"`
	BootRecoveryGroup      []BootRecoveryGroupState     `json:"boot_recovery_group"`
	FailoverRecoveryGroup  []FailoverRecoveryGroupState `json:"failover_recovery_group"`
	RecoveryGroup          []RecoveryGroupState         `json:"recovery_group"`
	ShutdownRecoveryGroup  []ShutdownRecoveryGroupState `json:"shutdown_recovery_group"`
	Timeouts               *TimeoutsState               `json:"timeouts"`
}
