// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mssql_managed_database

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_mssql_managed_database.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMssqlManagedDatabaseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ammd *Resource) Type() string {
	return "azurerm_mssql_managed_database"
}

// LocalName returns the local name for [Resource].
func (ammd *Resource) LocalName() string {
	return ammd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ammd *Resource) Configuration() interface{} {
	return ammd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ammd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ammd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ammd *Resource) Dependencies() terra.Dependencies {
	return ammd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ammd *Resource) LifecycleManagement() *terra.Lifecycle {
	return ammd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ammd *Resource) Attributes() azurermMssqlManagedDatabaseAttributes {
	return azurermMssqlManagedDatabaseAttributes{ref: terra.ReferenceResource(ammd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ammd *Resource) ImportState(state io.Reader) error {
	ammd.state = &azurermMssqlManagedDatabaseState{}
	if err := json.NewDecoder(state).Decode(ammd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ammd.Type(), ammd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ammd *Resource) State() (*azurermMssqlManagedDatabaseState, bool) {
	return ammd.state, ammd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ammd *Resource) StateMust() *azurermMssqlManagedDatabaseState {
	if ammd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ammd.Type(), ammd.LocalName()))
	}
	return ammd.state
}

// Args contains the configurations for azurerm_mssql_managed_database.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagedInstanceId: string, required
	ManagedInstanceId terra.StringValue `hcl:"managed_instance_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ShortTermRetentionDays: number, optional
	ShortTermRetentionDays terra.NumberValue `hcl:"short_term_retention_days,attr"`
	// LongTermRetentionPolicy: optional
	LongTermRetentionPolicy *LongTermRetentionPolicy `hcl:"long_term_retention_policy,block"`
	// PointInTimeRestore: optional
	PointInTimeRestore *PointInTimeRestore `hcl:"point_in_time_restore,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMssqlManagedDatabaseAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_mssql_managed_database.
func (ammd azurermMssqlManagedDatabaseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ammd.ref.Append("id"))
}

// ManagedInstanceId returns a reference to field managed_instance_id of azurerm_mssql_managed_database.
func (ammd azurermMssqlManagedDatabaseAttributes) ManagedInstanceId() terra.StringValue {
	return terra.ReferenceAsString(ammd.ref.Append("managed_instance_id"))
}

// Name returns a reference to field name of azurerm_mssql_managed_database.
func (ammd azurermMssqlManagedDatabaseAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ammd.ref.Append("name"))
}

// ShortTermRetentionDays returns a reference to field short_term_retention_days of azurerm_mssql_managed_database.
func (ammd azurermMssqlManagedDatabaseAttributes) ShortTermRetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(ammd.ref.Append("short_term_retention_days"))
}

func (ammd azurermMssqlManagedDatabaseAttributes) LongTermRetentionPolicy() terra.ListValue[LongTermRetentionPolicyAttributes] {
	return terra.ReferenceAsList[LongTermRetentionPolicyAttributes](ammd.ref.Append("long_term_retention_policy"))
}

func (ammd azurermMssqlManagedDatabaseAttributes) PointInTimeRestore() terra.ListValue[PointInTimeRestoreAttributes] {
	return terra.ReferenceAsList[PointInTimeRestoreAttributes](ammd.ref.Append("point_in_time_restore"))
}

func (ammd azurermMssqlManagedDatabaseAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ammd.ref.Append("timeouts"))
}

type azurermMssqlManagedDatabaseState struct {
	Id                      string                         `json:"id"`
	ManagedInstanceId       string                         `json:"managed_instance_id"`
	Name                    string                         `json:"name"`
	ShortTermRetentionDays  float64                        `json:"short_term_retention_days"`
	LongTermRetentionPolicy []LongTermRetentionPolicyState `json:"long_term_retention_policy"`
	PointInTimeRestore      []PointInTimeRestoreState      `json:"point_in_time_restore"`
	Timeouts                *TimeoutsState                 `json:"timeouts"`
}
