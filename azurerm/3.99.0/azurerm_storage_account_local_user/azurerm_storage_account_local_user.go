// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_account_local_user

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_storage_account_local_user.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermStorageAccountLocalUserState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asalu *Resource) Type() string {
	return "azurerm_storage_account_local_user"
}

// LocalName returns the local name for [Resource].
func (asalu *Resource) LocalName() string {
	return asalu.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asalu *Resource) Configuration() interface{} {
	return asalu.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asalu *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asalu)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asalu *Resource) Dependencies() terra.Dependencies {
	return asalu.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asalu *Resource) LifecycleManagement() *terra.Lifecycle {
	return asalu.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asalu *Resource) Attributes() azurermStorageAccountLocalUserAttributes {
	return azurermStorageAccountLocalUserAttributes{ref: terra.ReferenceResource(asalu)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asalu *Resource) ImportState(state io.Reader) error {
	asalu.state = &azurermStorageAccountLocalUserState{}
	if err := json.NewDecoder(state).Decode(asalu.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asalu.Type(), asalu.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asalu *Resource) State() (*azurermStorageAccountLocalUserState, bool) {
	return asalu.state, asalu.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asalu *Resource) StateMust() *azurermStorageAccountLocalUserState {
	if asalu.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asalu.Type(), asalu.LocalName()))
	}
	return asalu.state
}

// Args contains the configurations for azurerm_storage_account_local_user.
type Args struct {
	// HomeDirectory: string, optional
	HomeDirectory terra.StringValue `hcl:"home_directory,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SshKeyEnabled: bool, optional
	SshKeyEnabled terra.BoolValue `hcl:"ssh_key_enabled,attr"`
	// SshPasswordEnabled: bool, optional
	SshPasswordEnabled terra.BoolValue `hcl:"ssh_password_enabled,attr"`
	// StorageAccountId: string, required
	StorageAccountId terra.StringValue `hcl:"storage_account_id,attr" validate:"required"`
	// PermissionScope: min=0
	PermissionScope []PermissionScope `hcl:"permission_scope,block" validate:"min=0"`
	// SshAuthorizedKey: min=0
	SshAuthorizedKey []SshAuthorizedKey `hcl:"ssh_authorized_key,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermStorageAccountLocalUserAttributes struct {
	ref terra.Reference
}

// HomeDirectory returns a reference to field home_directory of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) HomeDirectory() terra.StringValue {
	return terra.ReferenceAsString(asalu.ref.Append("home_directory"))
}

// Id returns a reference to field id of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asalu.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asalu.ref.Append("name"))
}

// Password returns a reference to field password of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(asalu.ref.Append("password"))
}

// Sid returns a reference to field sid of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) Sid() terra.StringValue {
	return terra.ReferenceAsString(asalu.ref.Append("sid"))
}

// SshKeyEnabled returns a reference to field ssh_key_enabled of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) SshKeyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asalu.ref.Append("ssh_key_enabled"))
}

// SshPasswordEnabled returns a reference to field ssh_password_enabled of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) SshPasswordEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asalu.ref.Append("ssh_password_enabled"))
}

// StorageAccountId returns a reference to field storage_account_id of azurerm_storage_account_local_user.
func (asalu azurermStorageAccountLocalUserAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(asalu.ref.Append("storage_account_id"))
}

func (asalu azurermStorageAccountLocalUserAttributes) PermissionScope() terra.ListValue[PermissionScopeAttributes] {
	return terra.ReferenceAsList[PermissionScopeAttributes](asalu.ref.Append("permission_scope"))
}

func (asalu azurermStorageAccountLocalUserAttributes) SshAuthorizedKey() terra.ListValue[SshAuthorizedKeyAttributes] {
	return terra.ReferenceAsList[SshAuthorizedKeyAttributes](asalu.ref.Append("ssh_authorized_key"))
}

func (asalu azurermStorageAccountLocalUserAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asalu.ref.Append("timeouts"))
}

type azurermStorageAccountLocalUserState struct {
	HomeDirectory      string                  `json:"home_directory"`
	Id                 string                  `json:"id"`
	Name               string                  `json:"name"`
	Password           string                  `json:"password"`
	Sid                string                  `json:"sid"`
	SshKeyEnabled      bool                    `json:"ssh_key_enabled"`
	SshPasswordEnabled bool                    `json:"ssh_password_enabled"`
	StorageAccountId   string                  `json:"storage_account_id"`
	PermissionScope    []PermissionScopeState  `json:"permission_scope"`
	SshAuthorizedKey   []SshAuthorizedKeyState `json:"ssh_authorized_key"`
	Timeouts           *TimeoutsState          `json:"timeouts"`
}
