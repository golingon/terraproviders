// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cosmosdb_sql_dedicated_gateway

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cosmosdb_sql_dedicated_gateway.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCosmosdbSqlDedicatedGatewayState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acsdg *Resource) Type() string {
	return "azurerm_cosmosdb_sql_dedicated_gateway"
}

// LocalName returns the local name for [Resource].
func (acsdg *Resource) LocalName() string {
	return acsdg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acsdg *Resource) Configuration() interface{} {
	return acsdg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acsdg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acsdg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acsdg *Resource) Dependencies() terra.Dependencies {
	return acsdg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acsdg *Resource) LifecycleManagement() *terra.Lifecycle {
	return acsdg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acsdg *Resource) Attributes() azurermCosmosdbSqlDedicatedGatewayAttributes {
	return azurermCosmosdbSqlDedicatedGatewayAttributes{ref: terra.ReferenceResource(acsdg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acsdg *Resource) ImportState(state io.Reader) error {
	acsdg.state = &azurermCosmosdbSqlDedicatedGatewayState{}
	if err := json.NewDecoder(state).Decode(acsdg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acsdg.Type(), acsdg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acsdg *Resource) State() (*azurermCosmosdbSqlDedicatedGatewayState, bool) {
	return acsdg.state, acsdg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acsdg *Resource) StateMust() *azurermCosmosdbSqlDedicatedGatewayState {
	if acsdg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acsdg.Type(), acsdg.LocalName()))
	}
	return acsdg.state
}

// Args contains the configurations for azurerm_cosmosdb_sql_dedicated_gateway.
type Args struct {
	// CosmosdbAccountId: string, required
	CosmosdbAccountId terra.StringValue `hcl:"cosmosdb_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceCount: number, required
	InstanceCount terra.NumberValue `hcl:"instance_count,attr" validate:"required"`
	// InstanceSize: string, required
	InstanceSize terra.StringValue `hcl:"instance_size,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCosmosdbSqlDedicatedGatewayAttributes struct {
	ref terra.Reference
}

// CosmosdbAccountId returns a reference to field cosmosdb_account_id of azurerm_cosmosdb_sql_dedicated_gateway.
func (acsdg azurermCosmosdbSqlDedicatedGatewayAttributes) CosmosdbAccountId() terra.StringValue {
	return terra.ReferenceAsString(acsdg.ref.Append("cosmosdb_account_id"))
}

// Id returns a reference to field id of azurerm_cosmosdb_sql_dedicated_gateway.
func (acsdg azurermCosmosdbSqlDedicatedGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acsdg.ref.Append("id"))
}

// InstanceCount returns a reference to field instance_count of azurerm_cosmosdb_sql_dedicated_gateway.
func (acsdg azurermCosmosdbSqlDedicatedGatewayAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(acsdg.ref.Append("instance_count"))
}

// InstanceSize returns a reference to field instance_size of azurerm_cosmosdb_sql_dedicated_gateway.
func (acsdg azurermCosmosdbSqlDedicatedGatewayAttributes) InstanceSize() terra.StringValue {
	return terra.ReferenceAsString(acsdg.ref.Append("instance_size"))
}

func (acsdg azurermCosmosdbSqlDedicatedGatewayAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acsdg.ref.Append("timeouts"))
}

type azurermCosmosdbSqlDedicatedGatewayState struct {
	CosmosdbAccountId string         `json:"cosmosdb_account_id"`
	Id                string         `json:"id"`
	InstanceCount     float64        `json:"instance_count"`
	InstanceSize      string         `json:"instance_size"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
