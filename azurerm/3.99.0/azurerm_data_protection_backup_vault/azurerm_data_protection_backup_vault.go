// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_protection_backup_vault

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_data_protection_backup_vault.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDataProtectionBackupVaultState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adpbv *Resource) Type() string {
	return "azurerm_data_protection_backup_vault"
}

// LocalName returns the local name for [Resource].
func (adpbv *Resource) LocalName() string {
	return adpbv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adpbv *Resource) Configuration() interface{} {
	return adpbv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adpbv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adpbv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adpbv *Resource) Dependencies() terra.Dependencies {
	return adpbv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adpbv *Resource) LifecycleManagement() *terra.Lifecycle {
	return adpbv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adpbv *Resource) Attributes() azurermDataProtectionBackupVaultAttributes {
	return azurermDataProtectionBackupVaultAttributes{ref: terra.ReferenceResource(adpbv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adpbv *Resource) ImportState(state io.Reader) error {
	adpbv.state = &azurermDataProtectionBackupVaultState{}
	if err := json.NewDecoder(state).Decode(adpbv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adpbv.Type(), adpbv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adpbv *Resource) State() (*azurermDataProtectionBackupVaultState, bool) {
	return adpbv.state, adpbv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adpbv *Resource) StateMust() *azurermDataProtectionBackupVaultState {
	if adpbv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adpbv.Type(), adpbv.LocalName()))
	}
	return adpbv.state
}

// Args contains the configurations for azurerm_data_protection_backup_vault.
type Args struct {
	// DatastoreType: string, required
	DatastoreType terra.StringValue `hcl:"datastore_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Redundancy: string, required
	Redundancy terra.StringValue `hcl:"redundancy,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RetentionDurationInDays: number, optional
	RetentionDurationInDays terra.NumberValue `hcl:"retention_duration_in_days,attr"`
	// SoftDelete: string, optional
	SoftDelete terra.StringValue `hcl:"soft_delete,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDataProtectionBackupVaultAttributes struct {
	ref terra.Reference
}

// DatastoreType returns a reference to field datastore_type of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) DatastoreType() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("datastore_type"))
}

// Id returns a reference to field id of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("name"))
}

// Redundancy returns a reference to field redundancy of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) Redundancy() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("redundancy"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("resource_group_name"))
}

// RetentionDurationInDays returns a reference to field retention_duration_in_days of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) RetentionDurationInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(adpbv.ref.Append("retention_duration_in_days"))
}

// SoftDelete returns a reference to field soft_delete of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) SoftDelete() terra.StringValue {
	return terra.ReferenceAsString(adpbv.ref.Append("soft_delete"))
}

// Tags returns a reference to field tags of azurerm_data_protection_backup_vault.
func (adpbv azurermDataProtectionBackupVaultAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adpbv.ref.Append("tags"))
}

func (adpbv azurermDataProtectionBackupVaultAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](adpbv.ref.Append("identity"))
}

func (adpbv azurermDataProtectionBackupVaultAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adpbv.ref.Append("timeouts"))
}

type azurermDataProtectionBackupVaultState struct {
	DatastoreType           string            `json:"datastore_type"`
	Id                      string            `json:"id"`
	Location                string            `json:"location"`
	Name                    string            `json:"name"`
	Redundancy              string            `json:"redundancy"`
	ResourceGroupName       string            `json:"resource_group_name"`
	RetentionDurationInDays float64           `json:"retention_duration_in_days"`
	SoftDelete              string            `json:"soft_delete"`
	Tags                    map[string]string `json:"tags"`
	Identity                []IdentityState   `json:"identity"`
	Timeouts                *TimeoutsState    `json:"timeouts"`
}
