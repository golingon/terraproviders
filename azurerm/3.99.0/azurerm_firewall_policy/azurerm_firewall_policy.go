// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_firewall_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_firewall_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermFirewallPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (afp *Resource) Type() string {
	return "azurerm_firewall_policy"
}

// LocalName returns the local name for [Resource].
func (afp *Resource) LocalName() string {
	return afp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (afp *Resource) Configuration() interface{} {
	return afp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (afp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(afp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (afp *Resource) Dependencies() terra.Dependencies {
	return afp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (afp *Resource) LifecycleManagement() *terra.Lifecycle {
	return afp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (afp *Resource) Attributes() azurermFirewallPolicyAttributes {
	return azurermFirewallPolicyAttributes{ref: terra.ReferenceResource(afp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (afp *Resource) ImportState(state io.Reader) error {
	afp.state = &azurermFirewallPolicyState{}
	if err := json.NewDecoder(state).Decode(afp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", afp.Type(), afp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (afp *Resource) State() (*azurermFirewallPolicyState, bool) {
	return afp.state, afp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (afp *Resource) StateMust() *azurermFirewallPolicyState {
	if afp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", afp.Type(), afp.LocalName()))
	}
	return afp.state
}

// Args contains the configurations for azurerm_firewall_policy.
type Args struct {
	// AutoLearnPrivateRangesEnabled: bool, optional
	AutoLearnPrivateRangesEnabled terra.BoolValue `hcl:"auto_learn_private_ranges_enabled,attr"`
	// BasePolicyId: string, optional
	BasePolicyId terra.StringValue `hcl:"base_policy_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrivateIpRanges: list of string, optional
	PrivateIpRanges terra.ListValue[terra.StringValue] `hcl:"private_ip_ranges,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Sku: string, optional
	Sku terra.StringValue `hcl:"sku,attr"`
	// SqlRedirectAllowed: bool, optional
	SqlRedirectAllowed terra.BoolValue `hcl:"sql_redirect_allowed,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ThreatIntelligenceMode: string, optional
	ThreatIntelligenceMode terra.StringValue `hcl:"threat_intelligence_mode,attr"`
	// Dns: optional
	Dns *Dns `hcl:"dns,block"`
	// ExplicitProxy: optional
	ExplicitProxy *ExplicitProxy `hcl:"explicit_proxy,block"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Insights: optional
	Insights *Insights `hcl:"insights,block"`
	// IntrusionDetection: optional
	IntrusionDetection *IntrusionDetection `hcl:"intrusion_detection,block"`
	// ThreatIntelligenceAllowlist: optional
	ThreatIntelligenceAllowlist *ThreatIntelligenceAllowlist `hcl:"threat_intelligence_allowlist,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// TlsCertificate: optional
	TlsCertificate *TlsCertificate `hcl:"tls_certificate,block"`
}

type azurermFirewallPolicyAttributes struct {
	ref terra.Reference
}

// AutoLearnPrivateRangesEnabled returns a reference to field auto_learn_private_ranges_enabled of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) AutoLearnPrivateRangesEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(afp.ref.Append("auto_learn_private_ranges_enabled"))
}

// BasePolicyId returns a reference to field base_policy_id of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) BasePolicyId() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("base_policy_id"))
}

// ChildPolicies returns a reference to field child_policies of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) ChildPolicies() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](afp.ref.Append("child_policies"))
}

// Firewalls returns a reference to field firewalls of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) Firewalls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](afp.ref.Append("firewalls"))
}

// Id returns a reference to field id of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("name"))
}

// PrivateIpRanges returns a reference to field private_ip_ranges of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) PrivateIpRanges() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](afp.ref.Append("private_ip_ranges"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("resource_group_name"))
}

// RuleCollectionGroups returns a reference to field rule_collection_groups of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) RuleCollectionGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](afp.ref.Append("rule_collection_groups"))
}

// Sku returns a reference to field sku of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("sku"))
}

// SqlRedirectAllowed returns a reference to field sql_redirect_allowed of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) SqlRedirectAllowed() terra.BoolValue {
	return terra.ReferenceAsBool(afp.ref.Append("sql_redirect_allowed"))
}

// Tags returns a reference to field tags of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](afp.ref.Append("tags"))
}

// ThreatIntelligenceMode returns a reference to field threat_intelligence_mode of azurerm_firewall_policy.
func (afp azurermFirewallPolicyAttributes) ThreatIntelligenceMode() terra.StringValue {
	return terra.ReferenceAsString(afp.ref.Append("threat_intelligence_mode"))
}

func (afp azurermFirewallPolicyAttributes) Dns() terra.ListValue[DnsAttributes] {
	return terra.ReferenceAsList[DnsAttributes](afp.ref.Append("dns"))
}

func (afp azurermFirewallPolicyAttributes) ExplicitProxy() terra.ListValue[ExplicitProxyAttributes] {
	return terra.ReferenceAsList[ExplicitProxyAttributes](afp.ref.Append("explicit_proxy"))
}

func (afp azurermFirewallPolicyAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](afp.ref.Append("identity"))
}

func (afp azurermFirewallPolicyAttributes) Insights() terra.ListValue[InsightsAttributes] {
	return terra.ReferenceAsList[InsightsAttributes](afp.ref.Append("insights"))
}

func (afp azurermFirewallPolicyAttributes) IntrusionDetection() terra.ListValue[IntrusionDetectionAttributes] {
	return terra.ReferenceAsList[IntrusionDetectionAttributes](afp.ref.Append("intrusion_detection"))
}

func (afp azurermFirewallPolicyAttributes) ThreatIntelligenceAllowlist() terra.ListValue[ThreatIntelligenceAllowlistAttributes] {
	return terra.ReferenceAsList[ThreatIntelligenceAllowlistAttributes](afp.ref.Append("threat_intelligence_allowlist"))
}

func (afp azurermFirewallPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](afp.ref.Append("timeouts"))
}

func (afp azurermFirewallPolicyAttributes) TlsCertificate() terra.ListValue[TlsCertificateAttributes] {
	return terra.ReferenceAsList[TlsCertificateAttributes](afp.ref.Append("tls_certificate"))
}

type azurermFirewallPolicyState struct {
	AutoLearnPrivateRangesEnabled bool                               `json:"auto_learn_private_ranges_enabled"`
	BasePolicyId                  string                             `json:"base_policy_id"`
	ChildPolicies                 []string                           `json:"child_policies"`
	Firewalls                     []string                           `json:"firewalls"`
	Id                            string                             `json:"id"`
	Location                      string                             `json:"location"`
	Name                          string                             `json:"name"`
	PrivateIpRanges               []string                           `json:"private_ip_ranges"`
	ResourceGroupName             string                             `json:"resource_group_name"`
	RuleCollectionGroups          []string                           `json:"rule_collection_groups"`
	Sku                           string                             `json:"sku"`
	SqlRedirectAllowed            bool                               `json:"sql_redirect_allowed"`
	Tags                          map[string]string                  `json:"tags"`
	ThreatIntelligenceMode        string                             `json:"threat_intelligence_mode"`
	Dns                           []DnsState                         `json:"dns"`
	ExplicitProxy                 []ExplicitProxyState               `json:"explicit_proxy"`
	Identity                      []IdentityState                    `json:"identity"`
	Insights                      []InsightsState                    `json:"insights"`
	IntrusionDetection            []IntrusionDetectionState          `json:"intrusion_detection"`
	ThreatIntelligenceAllowlist   []ThreatIntelligenceAllowlistState `json:"threat_intelligence_allowlist"`
	Timeouts                      *TimeoutsState                     `json:"timeouts"`
	TlsCertificate                []TlsCertificateState              `json:"tls_certificate"`
}
