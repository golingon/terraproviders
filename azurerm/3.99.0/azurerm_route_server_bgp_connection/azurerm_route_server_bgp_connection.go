// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_route_server_bgp_connection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_route_server_bgp_connection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermRouteServerBgpConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arsbc *Resource) Type() string {
	return "azurerm_route_server_bgp_connection"
}

// LocalName returns the local name for [Resource].
func (arsbc *Resource) LocalName() string {
	return arsbc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arsbc *Resource) Configuration() interface{} {
	return arsbc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arsbc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arsbc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arsbc *Resource) Dependencies() terra.Dependencies {
	return arsbc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arsbc *Resource) LifecycleManagement() *terra.Lifecycle {
	return arsbc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arsbc *Resource) Attributes() azurermRouteServerBgpConnectionAttributes {
	return azurermRouteServerBgpConnectionAttributes{ref: terra.ReferenceResource(arsbc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arsbc *Resource) ImportState(state io.Reader) error {
	arsbc.state = &azurermRouteServerBgpConnectionState{}
	if err := json.NewDecoder(state).Decode(arsbc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arsbc.Type(), arsbc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arsbc *Resource) State() (*azurermRouteServerBgpConnectionState, bool) {
	return arsbc.state, arsbc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arsbc *Resource) StateMust() *azurermRouteServerBgpConnectionState {
	if arsbc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arsbc.Type(), arsbc.LocalName()))
	}
	return arsbc.state
}

// Args contains the configurations for azurerm_route_server_bgp_connection.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PeerAsn: number, required
	PeerAsn terra.NumberValue `hcl:"peer_asn,attr" validate:"required"`
	// PeerIp: string, required
	PeerIp terra.StringValue `hcl:"peer_ip,attr" validate:"required"`
	// RouteServerId: string, required
	RouteServerId terra.StringValue `hcl:"route_server_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermRouteServerBgpConnectionAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_route_server_bgp_connection.
func (arsbc azurermRouteServerBgpConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arsbc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_route_server_bgp_connection.
func (arsbc azurermRouteServerBgpConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arsbc.ref.Append("name"))
}

// PeerAsn returns a reference to field peer_asn of azurerm_route_server_bgp_connection.
func (arsbc azurermRouteServerBgpConnectionAttributes) PeerAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(arsbc.ref.Append("peer_asn"))
}

// PeerIp returns a reference to field peer_ip of azurerm_route_server_bgp_connection.
func (arsbc azurermRouteServerBgpConnectionAttributes) PeerIp() terra.StringValue {
	return terra.ReferenceAsString(arsbc.ref.Append("peer_ip"))
}

// RouteServerId returns a reference to field route_server_id of azurerm_route_server_bgp_connection.
func (arsbc azurermRouteServerBgpConnectionAttributes) RouteServerId() terra.StringValue {
	return terra.ReferenceAsString(arsbc.ref.Append("route_server_id"))
}

func (arsbc azurermRouteServerBgpConnectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](arsbc.ref.Append("timeouts"))
}

type azurermRouteServerBgpConnectionState struct {
	Id            string         `json:"id"`
	Name          string         `json:"name"`
	PeerAsn       float64        `json:"peer_asn"`
	PeerIp        string         `json:"peer_ip"`
	RouteServerId string         `json:"route_server_id"`
	Timeouts      *TimeoutsState `json:"timeouts"`
}
