// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_eventhub_consumer_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_eventhub_consumer_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermEventhubConsumerGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aecg *Resource) Type() string {
	return "azurerm_eventhub_consumer_group"
}

// LocalName returns the local name for [Resource].
func (aecg *Resource) LocalName() string {
	return aecg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aecg *Resource) Configuration() interface{} {
	return aecg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aecg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aecg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aecg *Resource) Dependencies() terra.Dependencies {
	return aecg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aecg *Resource) LifecycleManagement() *terra.Lifecycle {
	return aecg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aecg *Resource) Attributes() azurermEventhubConsumerGroupAttributes {
	return azurermEventhubConsumerGroupAttributes{ref: terra.ReferenceResource(aecg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aecg *Resource) ImportState(state io.Reader) error {
	aecg.state = &azurermEventhubConsumerGroupState{}
	if err := json.NewDecoder(state).Decode(aecg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aecg.Type(), aecg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aecg *Resource) State() (*azurermEventhubConsumerGroupState, bool) {
	return aecg.state, aecg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aecg *Resource) StateMust() *azurermEventhubConsumerGroupState {
	if aecg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aecg.Type(), aecg.LocalName()))
	}
	return aecg.state
}

// Args contains the configurations for azurerm_eventhub_consumer_group.
type Args struct {
	// EventhubName: string, required
	EventhubName terra.StringValue `hcl:"eventhub_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NamespaceName: string, required
	NamespaceName terra.StringValue `hcl:"namespace_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// UserMetadata: string, optional
	UserMetadata terra.StringValue `hcl:"user_metadata,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermEventhubConsumerGroupAttributes struct {
	ref terra.Reference
}

// EventhubName returns a reference to field eventhub_name of azurerm_eventhub_consumer_group.
func (aecg azurermEventhubConsumerGroupAttributes) EventhubName() terra.StringValue {
	return terra.ReferenceAsString(aecg.ref.Append("eventhub_name"))
}

// Id returns a reference to field id of azurerm_eventhub_consumer_group.
func (aecg azurermEventhubConsumerGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aecg.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_eventhub_consumer_group.
func (aecg azurermEventhubConsumerGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aecg.ref.Append("name"))
}

// NamespaceName returns a reference to field namespace_name of azurerm_eventhub_consumer_group.
func (aecg azurermEventhubConsumerGroupAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceAsString(aecg.ref.Append("namespace_name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_eventhub_consumer_group.
func (aecg azurermEventhubConsumerGroupAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aecg.ref.Append("resource_group_name"))
}

// UserMetadata returns a reference to field user_metadata of azurerm_eventhub_consumer_group.
func (aecg azurermEventhubConsumerGroupAttributes) UserMetadata() terra.StringValue {
	return terra.ReferenceAsString(aecg.ref.Append("user_metadata"))
}

func (aecg azurermEventhubConsumerGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aecg.ref.Append("timeouts"))
}

type azurermEventhubConsumerGroupState struct {
	EventhubName      string         `json:"eventhub_name"`
	Id                string         `json:"id"`
	Name              string         `json:"name"`
	NamespaceName     string         `json:"namespace_name"`
	ResourceGroupName string         `json:"resource_group_name"`
	UserMetadata      string         `json:"user_metadata"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
