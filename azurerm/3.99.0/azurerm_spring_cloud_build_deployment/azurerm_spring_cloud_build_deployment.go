// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_spring_cloud_build_deployment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_spring_cloud_build_deployment.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSpringCloudBuildDeploymentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascbd *Resource) Type() string {
	return "azurerm_spring_cloud_build_deployment"
}

// LocalName returns the local name for [Resource].
func (ascbd *Resource) LocalName() string {
	return ascbd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascbd *Resource) Configuration() interface{} {
	return ascbd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascbd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascbd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascbd *Resource) Dependencies() terra.Dependencies {
	return ascbd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascbd *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascbd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascbd *Resource) Attributes() azurermSpringCloudBuildDeploymentAttributes {
	return azurermSpringCloudBuildDeploymentAttributes{ref: terra.ReferenceResource(ascbd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascbd *Resource) ImportState(state io.Reader) error {
	ascbd.state = &azurermSpringCloudBuildDeploymentState{}
	if err := json.NewDecoder(state).Decode(ascbd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascbd.Type(), ascbd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascbd *Resource) State() (*azurermSpringCloudBuildDeploymentState, bool) {
	return ascbd.state, ascbd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascbd *Resource) StateMust() *azurermSpringCloudBuildDeploymentState {
	if ascbd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascbd.Type(), ascbd.LocalName()))
	}
	return ascbd.state
}

// Args contains the configurations for azurerm_spring_cloud_build_deployment.
type Args struct {
	// AddonJson: string, optional
	AddonJson terra.StringValue `hcl:"addon_json,attr"`
	// ApplicationPerformanceMonitoringIds: list of string, optional
	ApplicationPerformanceMonitoringIds terra.ListValue[terra.StringValue] `hcl:"application_performance_monitoring_ids,attr"`
	// BuildResultId: string, required
	BuildResultId terra.StringValue `hcl:"build_result_id,attr" validate:"required"`
	// EnvironmentVariables: map of string, optional
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceCount: number, optional
	InstanceCount terra.NumberValue `hcl:"instance_count,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SpringCloudAppId: string, required
	SpringCloudAppId terra.StringValue `hcl:"spring_cloud_app_id,attr" validate:"required"`
	// Quota: optional
	Quota *Quota `hcl:"quota,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSpringCloudBuildDeploymentAttributes struct {
	ref terra.Reference
}

// AddonJson returns a reference to field addon_json of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) AddonJson() terra.StringValue {
	return terra.ReferenceAsString(ascbd.ref.Append("addon_json"))
}

// ApplicationPerformanceMonitoringIds returns a reference to field application_performance_monitoring_ids of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) ApplicationPerformanceMonitoringIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ascbd.ref.Append("application_performance_monitoring_ids"))
}

// BuildResultId returns a reference to field build_result_id of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) BuildResultId() terra.StringValue {
	return terra.ReferenceAsString(ascbd.ref.Append("build_result_id"))
}

// EnvironmentVariables returns a reference to field environment_variables of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascbd.ref.Append("environment_variables"))
}

// Id returns a reference to field id of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascbd.ref.Append("id"))
}

// InstanceCount returns a reference to field instance_count of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ascbd.ref.Append("instance_count"))
}

// Name returns a reference to field name of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ascbd.ref.Append("name"))
}

// SpringCloudAppId returns a reference to field spring_cloud_app_id of azurerm_spring_cloud_build_deployment.
func (ascbd azurermSpringCloudBuildDeploymentAttributes) SpringCloudAppId() terra.StringValue {
	return terra.ReferenceAsString(ascbd.ref.Append("spring_cloud_app_id"))
}

func (ascbd azurermSpringCloudBuildDeploymentAttributes) Quota() terra.ListValue[QuotaAttributes] {
	return terra.ReferenceAsList[QuotaAttributes](ascbd.ref.Append("quota"))
}

func (ascbd azurermSpringCloudBuildDeploymentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascbd.ref.Append("timeouts"))
}

type azurermSpringCloudBuildDeploymentState struct {
	AddonJson                           string            `json:"addon_json"`
	ApplicationPerformanceMonitoringIds []string          `json:"application_performance_monitoring_ids"`
	BuildResultId                       string            `json:"build_result_id"`
	EnvironmentVariables                map[string]string `json:"environment_variables"`
	Id                                  string            `json:"id"`
	InstanceCount                       float64           `json:"instance_count"`
	Name                                string            `json:"name"`
	SpringCloudAppId                    string            `json:"spring_cloud_app_id"`
	Quota                               []QuotaState      `json:"quota"`
	Timeouts                            *TimeoutsState    `json:"timeouts"`
}
