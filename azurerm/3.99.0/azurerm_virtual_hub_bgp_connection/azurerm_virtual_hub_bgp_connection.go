// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_virtual_hub_bgp_connection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_virtual_hub_bgp_connection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermVirtualHubBgpConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avhbc *Resource) Type() string {
	return "azurerm_virtual_hub_bgp_connection"
}

// LocalName returns the local name for [Resource].
func (avhbc *Resource) LocalName() string {
	return avhbc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avhbc *Resource) Configuration() interface{} {
	return avhbc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avhbc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avhbc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avhbc *Resource) Dependencies() terra.Dependencies {
	return avhbc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avhbc *Resource) LifecycleManagement() *terra.Lifecycle {
	return avhbc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avhbc *Resource) Attributes() azurermVirtualHubBgpConnectionAttributes {
	return azurermVirtualHubBgpConnectionAttributes{ref: terra.ReferenceResource(avhbc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avhbc *Resource) ImportState(state io.Reader) error {
	avhbc.state = &azurermVirtualHubBgpConnectionState{}
	if err := json.NewDecoder(state).Decode(avhbc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avhbc.Type(), avhbc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avhbc *Resource) State() (*azurermVirtualHubBgpConnectionState, bool) {
	return avhbc.state, avhbc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avhbc *Resource) StateMust() *azurermVirtualHubBgpConnectionState {
	if avhbc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avhbc.Type(), avhbc.LocalName()))
	}
	return avhbc.state
}

// Args contains the configurations for azurerm_virtual_hub_bgp_connection.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PeerAsn: number, required
	PeerAsn terra.NumberValue `hcl:"peer_asn,attr" validate:"required"`
	// PeerIp: string, required
	PeerIp terra.StringValue `hcl:"peer_ip,attr" validate:"required"`
	// VirtualHubId: string, required
	VirtualHubId terra.StringValue `hcl:"virtual_hub_id,attr" validate:"required"`
	// VirtualNetworkConnectionId: string, optional
	VirtualNetworkConnectionId terra.StringValue `hcl:"virtual_network_connection_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermVirtualHubBgpConnectionAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_virtual_hub_bgp_connection.
func (avhbc azurermVirtualHubBgpConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avhbc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_virtual_hub_bgp_connection.
func (avhbc azurermVirtualHubBgpConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(avhbc.ref.Append("name"))
}

// PeerAsn returns a reference to field peer_asn of azurerm_virtual_hub_bgp_connection.
func (avhbc azurermVirtualHubBgpConnectionAttributes) PeerAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(avhbc.ref.Append("peer_asn"))
}

// PeerIp returns a reference to field peer_ip of azurerm_virtual_hub_bgp_connection.
func (avhbc azurermVirtualHubBgpConnectionAttributes) PeerIp() terra.StringValue {
	return terra.ReferenceAsString(avhbc.ref.Append("peer_ip"))
}

// VirtualHubId returns a reference to field virtual_hub_id of azurerm_virtual_hub_bgp_connection.
func (avhbc azurermVirtualHubBgpConnectionAttributes) VirtualHubId() terra.StringValue {
	return terra.ReferenceAsString(avhbc.ref.Append("virtual_hub_id"))
}

// VirtualNetworkConnectionId returns a reference to field virtual_network_connection_id of azurerm_virtual_hub_bgp_connection.
func (avhbc azurermVirtualHubBgpConnectionAttributes) VirtualNetworkConnectionId() terra.StringValue {
	return terra.ReferenceAsString(avhbc.ref.Append("virtual_network_connection_id"))
}

func (avhbc azurermVirtualHubBgpConnectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avhbc.ref.Append("timeouts"))
}

type azurermVirtualHubBgpConnectionState struct {
	Id                         string         `json:"id"`
	Name                       string         `json:"name"`
	PeerAsn                    float64        `json:"peer_asn"`
	PeerIp                     string         `json:"peer_ip"`
	VirtualHubId               string         `json:"virtual_hub_id"`
	VirtualNetworkConnectionId string         `json:"virtual_network_connection_id"`
	Timeouts                   *TimeoutsState `json:"timeouts"`
}
