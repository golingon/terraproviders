// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_management_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_management_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermManagementGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amg *Resource) Type() string {
	return "azurerm_management_group"
}

// LocalName returns the local name for [Resource].
func (amg *Resource) LocalName() string {
	return amg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amg *Resource) Configuration() interface{} {
	return amg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amg *Resource) Dependencies() terra.Dependencies {
	return amg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amg *Resource) LifecycleManagement() *terra.Lifecycle {
	return amg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amg *Resource) Attributes() azurermManagementGroupAttributes {
	return azurermManagementGroupAttributes{ref: terra.ReferenceResource(amg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amg *Resource) ImportState(state io.Reader) error {
	amg.state = &azurermManagementGroupState{}
	if err := json.NewDecoder(state).Decode(amg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amg.Type(), amg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amg *Resource) State() (*azurermManagementGroupState, bool) {
	return amg.state, amg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amg *Resource) StateMust() *azurermManagementGroupState {
	if amg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amg.Type(), amg.LocalName()))
	}
	return amg.state
}

// Args contains the configurations for azurerm_management_group.
type Args struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ParentManagementGroupId: string, optional
	ParentManagementGroupId terra.StringValue `hcl:"parent_management_group_id,attr"`
	// SubscriptionIds: set of string, optional
	SubscriptionIds terra.SetValue[terra.StringValue] `hcl:"subscription_ids,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermManagementGroupAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of azurerm_management_group.
func (amg azurermManagementGroupAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(amg.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_management_group.
func (amg azurermManagementGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amg.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_management_group.
func (amg azurermManagementGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amg.ref.Append("name"))
}

// ParentManagementGroupId returns a reference to field parent_management_group_id of azurerm_management_group.
func (amg azurermManagementGroupAttributes) ParentManagementGroupId() terra.StringValue {
	return terra.ReferenceAsString(amg.ref.Append("parent_management_group_id"))
}

// SubscriptionIds returns a reference to field subscription_ids of azurerm_management_group.
func (amg azurermManagementGroupAttributes) SubscriptionIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amg.ref.Append("subscription_ids"))
}

func (amg azurermManagementGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amg.ref.Append("timeouts"))
}

type azurermManagementGroupState struct {
	DisplayName             string         `json:"display_name"`
	Id                      string         `json:"id"`
	Name                    string         `json:"name"`
	ParentManagementGroupId string         `json:"parent_management_group_id"`
	SubscriptionIds         []string       `json:"subscription_ids"`
	Timeouts                *TimeoutsState `json:"timeouts"`
}
