// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_log_analytics_linked_service

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_log_analytics_linked_service.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogAnalyticsLinkedServiceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alals *Resource) Type() string {
	return "azurerm_log_analytics_linked_service"
}

// LocalName returns the local name for [Resource].
func (alals *Resource) LocalName() string {
	return alals.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alals *Resource) Configuration() interface{} {
	return alals.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alals *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alals)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alals *Resource) Dependencies() terra.Dependencies {
	return alals.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alals *Resource) LifecycleManagement() *terra.Lifecycle {
	return alals.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alals *Resource) Attributes() azurermLogAnalyticsLinkedServiceAttributes {
	return azurermLogAnalyticsLinkedServiceAttributes{ref: terra.ReferenceResource(alals)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alals *Resource) ImportState(state io.Reader) error {
	alals.state = &azurermLogAnalyticsLinkedServiceState{}
	if err := json.NewDecoder(state).Decode(alals.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alals.Type(), alals.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alals *Resource) State() (*azurermLogAnalyticsLinkedServiceState, bool) {
	return alals.state, alals.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alals *Resource) StateMust() *azurermLogAnalyticsLinkedServiceState {
	if alals.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alals.Type(), alals.LocalName()))
	}
	return alals.state
}

// Args contains the configurations for azurerm_log_analytics_linked_service.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ReadAccessId: string, optional
	ReadAccessId terra.StringValue `hcl:"read_access_id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
	// WriteAccessId: string, optional
	WriteAccessId terra.StringValue `hcl:"write_access_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogAnalyticsLinkedServiceAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_log_analytics_linked_service.
func (alals azurermLogAnalyticsLinkedServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alals.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_log_analytics_linked_service.
func (alals azurermLogAnalyticsLinkedServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alals.ref.Append("name"))
}

// ReadAccessId returns a reference to field read_access_id of azurerm_log_analytics_linked_service.
func (alals azurermLogAnalyticsLinkedServiceAttributes) ReadAccessId() terra.StringValue {
	return terra.ReferenceAsString(alals.ref.Append("read_access_id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_log_analytics_linked_service.
func (alals azurermLogAnalyticsLinkedServiceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(alals.ref.Append("resource_group_name"))
}

// WorkspaceId returns a reference to field workspace_id of azurerm_log_analytics_linked_service.
func (alals azurermLogAnalyticsLinkedServiceAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(alals.ref.Append("workspace_id"))
}

// WriteAccessId returns a reference to field write_access_id of azurerm_log_analytics_linked_service.
func (alals azurermLogAnalyticsLinkedServiceAttributes) WriteAccessId() terra.StringValue {
	return terra.ReferenceAsString(alals.ref.Append("write_access_id"))
}

func (alals azurermLogAnalyticsLinkedServiceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alals.ref.Append("timeouts"))
}

type azurermLogAnalyticsLinkedServiceState struct {
	Id                string         `json:"id"`
	Name              string         `json:"name"`
	ReadAccessId      string         `json:"read_access_id"`
	ResourceGroupName string         `json:"resource_group_name"`
	WorkspaceId       string         `json:"workspace_id"`
	WriteAccessId     string         `json:"write_access_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
