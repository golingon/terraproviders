// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_vmware_express_route_authorization

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_vmware_express_route_authorization.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermVmwareExpressRouteAuthorizationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avera *Resource) Type() string {
	return "azurerm_vmware_express_route_authorization"
}

// LocalName returns the local name for [Resource].
func (avera *Resource) LocalName() string {
	return avera.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avera *Resource) Configuration() interface{} {
	return avera.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avera *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avera)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avera *Resource) Dependencies() terra.Dependencies {
	return avera.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avera *Resource) LifecycleManagement() *terra.Lifecycle {
	return avera.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avera *Resource) Attributes() azurermVmwareExpressRouteAuthorizationAttributes {
	return azurermVmwareExpressRouteAuthorizationAttributes{ref: terra.ReferenceResource(avera)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avera *Resource) ImportState(state io.Reader) error {
	avera.state = &azurermVmwareExpressRouteAuthorizationState{}
	if err := json.NewDecoder(state).Decode(avera.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avera.Type(), avera.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avera *Resource) State() (*azurermVmwareExpressRouteAuthorizationState, bool) {
	return avera.state, avera.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avera *Resource) StateMust() *azurermVmwareExpressRouteAuthorizationState {
	if avera.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avera.Type(), avera.LocalName()))
	}
	return avera.state
}

// Args contains the configurations for azurerm_vmware_express_route_authorization.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrivateCloudId: string, required
	PrivateCloudId terra.StringValue `hcl:"private_cloud_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermVmwareExpressRouteAuthorizationAttributes struct {
	ref terra.Reference
}

// ExpressRouteAuthorizationId returns a reference to field express_route_authorization_id of azurerm_vmware_express_route_authorization.
func (avera azurermVmwareExpressRouteAuthorizationAttributes) ExpressRouteAuthorizationId() terra.StringValue {
	return terra.ReferenceAsString(avera.ref.Append("express_route_authorization_id"))
}

// ExpressRouteAuthorizationKey returns a reference to field express_route_authorization_key of azurerm_vmware_express_route_authorization.
func (avera azurermVmwareExpressRouteAuthorizationAttributes) ExpressRouteAuthorizationKey() terra.StringValue {
	return terra.ReferenceAsString(avera.ref.Append("express_route_authorization_key"))
}

// Id returns a reference to field id of azurerm_vmware_express_route_authorization.
func (avera azurermVmwareExpressRouteAuthorizationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avera.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_vmware_express_route_authorization.
func (avera azurermVmwareExpressRouteAuthorizationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(avera.ref.Append("name"))
}

// PrivateCloudId returns a reference to field private_cloud_id of azurerm_vmware_express_route_authorization.
func (avera azurermVmwareExpressRouteAuthorizationAttributes) PrivateCloudId() terra.StringValue {
	return terra.ReferenceAsString(avera.ref.Append("private_cloud_id"))
}

func (avera azurermVmwareExpressRouteAuthorizationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avera.ref.Append("timeouts"))
}

type azurermVmwareExpressRouteAuthorizationState struct {
	ExpressRouteAuthorizationId  string         `json:"express_route_authorization_id"`
	ExpressRouteAuthorizationKey string         `json:"express_route_authorization_key"`
	Id                           string         `json:"id"`
	Name                         string         `json:"name"`
	PrivateCloudId               string         `json:"private_cloud_id"`
	Timeouts                     *TimeoutsState `json:"timeouts"`
}
