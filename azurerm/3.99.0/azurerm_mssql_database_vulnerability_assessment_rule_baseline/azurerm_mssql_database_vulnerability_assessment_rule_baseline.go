// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mssql_database_vulnerability_assessment_rule_baseline

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_mssql_database_vulnerability_assessment_rule_baseline.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amdvarb *Resource) Type() string {
	return "azurerm_mssql_database_vulnerability_assessment_rule_baseline"
}

// LocalName returns the local name for [Resource].
func (amdvarb *Resource) LocalName() string {
	return amdvarb.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amdvarb *Resource) Configuration() interface{} {
	return amdvarb.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amdvarb *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amdvarb)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amdvarb *Resource) Dependencies() terra.Dependencies {
	return amdvarb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amdvarb *Resource) LifecycleManagement() *terra.Lifecycle {
	return amdvarb.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amdvarb *Resource) Attributes() azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes {
	return azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes{ref: terra.ReferenceResource(amdvarb)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amdvarb *Resource) ImportState(state io.Reader) error {
	amdvarb.state = &azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineState{}
	if err := json.NewDecoder(state).Decode(amdvarb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amdvarb.Type(), amdvarb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amdvarb *Resource) State() (*azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineState, bool) {
	return amdvarb.state, amdvarb.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amdvarb *Resource) StateMust() *azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineState {
	if amdvarb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amdvarb.Type(), amdvarb.LocalName()))
	}
	return amdvarb.state
}

// Args contains the configurations for azurerm_mssql_database_vulnerability_assessment_rule_baseline.
type Args struct {
	// BaselineName: string, optional
	BaselineName terra.StringValue `hcl:"baseline_name,attr"`
	// DatabaseName: string, required
	DatabaseName terra.StringValue `hcl:"database_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RuleId: string, required
	RuleId terra.StringValue `hcl:"rule_id,attr" validate:"required"`
	// ServerVulnerabilityAssessmentId: string, required
	ServerVulnerabilityAssessmentId terra.StringValue `hcl:"server_vulnerability_assessment_id,attr" validate:"required"`
	// BaselineResult: min=1
	BaselineResult []BaselineResult `hcl:"baseline_result,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes struct {
	ref terra.Reference
}

// BaselineName returns a reference to field baseline_name of azurerm_mssql_database_vulnerability_assessment_rule_baseline.
func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) BaselineName() terra.StringValue {
	return terra.ReferenceAsString(amdvarb.ref.Append("baseline_name"))
}

// DatabaseName returns a reference to field database_name of azurerm_mssql_database_vulnerability_assessment_rule_baseline.
func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(amdvarb.ref.Append("database_name"))
}

// Id returns a reference to field id of azurerm_mssql_database_vulnerability_assessment_rule_baseline.
func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amdvarb.ref.Append("id"))
}

// RuleId returns a reference to field rule_id of azurerm_mssql_database_vulnerability_assessment_rule_baseline.
func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) RuleId() terra.StringValue {
	return terra.ReferenceAsString(amdvarb.ref.Append("rule_id"))
}

// ServerVulnerabilityAssessmentId returns a reference to field server_vulnerability_assessment_id of azurerm_mssql_database_vulnerability_assessment_rule_baseline.
func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) ServerVulnerabilityAssessmentId() terra.StringValue {
	return terra.ReferenceAsString(amdvarb.ref.Append("server_vulnerability_assessment_id"))
}

func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) BaselineResult() terra.SetValue[BaselineResultAttributes] {
	return terra.ReferenceAsSet[BaselineResultAttributes](amdvarb.ref.Append("baseline_result"))
}

func (amdvarb azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amdvarb.ref.Append("timeouts"))
}

type azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineState struct {
	BaselineName                    string                `json:"baseline_name"`
	DatabaseName                    string                `json:"database_name"`
	Id                              string                `json:"id"`
	RuleId                          string                `json:"rule_id"`
	ServerVulnerabilityAssessmentId string                `json:"server_vulnerability_assessment_id"`
	BaselineResult                  []BaselineResultState `json:"baseline_result"`
	Timeouts                        *TimeoutsState        `json:"timeouts"`
}
