// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_workloads_sap_three_tier_virtual_instance

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Identity struct {
	// IdentityIds: set of string, required
	IdentityIds terra.SetValue[terra.StringValue] `hcl:"identity_ids,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type ThreeTierConfiguration struct {
	// AppResourceGroupName: string, required
	AppResourceGroupName terra.StringValue `hcl:"app_resource_group_name,attr" validate:"required"`
	// HighAvailabilityType: string, optional
	HighAvailabilityType terra.StringValue `hcl:"high_availability_type,attr"`
	// SecondaryIpEnabled: bool, optional
	SecondaryIpEnabled terra.BoolValue `hcl:"secondary_ip_enabled,attr"`
	// ThreeTierConfigurationApplicationServerConfiguration: required
	ApplicationServerConfiguration *ThreeTierConfigurationApplicationServerConfiguration `hcl:"application_server_configuration,block" validate:"required"`
	// ThreeTierConfigurationCentralServerConfiguration: required
	CentralServerConfiguration *ThreeTierConfigurationCentralServerConfiguration `hcl:"central_server_configuration,block" validate:"required"`
	// ThreeTierConfigurationDatabaseServerConfiguration: required
	DatabaseServerConfiguration *ThreeTierConfigurationDatabaseServerConfiguration `hcl:"database_server_configuration,block" validate:"required"`
	// ThreeTierConfigurationResourceNames: optional
	ResourceNames *ThreeTierConfigurationResourceNames `hcl:"resource_names,block"`
	// ThreeTierConfigurationTransportCreateAndMount: optional
	TransportCreateAndMount *ThreeTierConfigurationTransportCreateAndMount `hcl:"transport_create_and_mount,block"`
}

type ThreeTierConfigurationApplicationServerConfiguration struct {
	// InstanceCount: number, required
	InstanceCount terra.NumberValue `hcl:"instance_count,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfiguration: required
	VirtualMachineConfiguration *ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfiguration `hcl:"virtual_machine_configuration,block" validate:"required"`
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfiguration struct {
	// VirtualMachineSize: string, required
	VirtualMachineSize terra.StringValue `hcl:"virtual_machine_size,attr" validate:"required"`
	// ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImage: required
	Image *ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImage `hcl:"image,block" validate:"required"`
	// ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfile: required
	OsProfile *ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfile `hcl:"os_profile,block" validate:"required"`
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImage struct {
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfile struct {
	// AdminUsername: string, required
	AdminUsername terra.StringValue `hcl:"admin_username,attr" validate:"required"`
	// SshPrivateKey: string, required
	SshPrivateKey terra.StringValue `hcl:"ssh_private_key,attr" validate:"required"`
	// SshPublicKey: string, required
	SshPublicKey terra.StringValue `hcl:"ssh_public_key,attr" validate:"required"`
}

type ThreeTierConfigurationCentralServerConfiguration struct {
	// InstanceCount: number, required
	InstanceCount terra.NumberValue `hcl:"instance_count,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfiguration: required
	VirtualMachineConfiguration *ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfiguration `hcl:"virtual_machine_configuration,block" validate:"required"`
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfiguration struct {
	// VirtualMachineSize: string, required
	VirtualMachineSize terra.StringValue `hcl:"virtual_machine_size,attr" validate:"required"`
	// ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImage: required
	Image *ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImage `hcl:"image,block" validate:"required"`
	// ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfile: required
	OsProfile *ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfile `hcl:"os_profile,block" validate:"required"`
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImage struct {
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfile struct {
	// AdminUsername: string, required
	AdminUsername terra.StringValue `hcl:"admin_username,attr" validate:"required"`
	// SshPrivateKey: string, required
	SshPrivateKey terra.StringValue `hcl:"ssh_private_key,attr" validate:"required"`
	// SshPublicKey: string, required
	SshPublicKey terra.StringValue `hcl:"ssh_public_key,attr" validate:"required"`
}

type ThreeTierConfigurationDatabaseServerConfiguration struct {
	// DatabaseType: string, optional
	DatabaseType terra.StringValue `hcl:"database_type,attr"`
	// InstanceCount: number, required
	InstanceCount terra.NumberValue `hcl:"instance_count,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfiguration: min=0
	DiskVolumeConfiguration []ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfiguration `hcl:"disk_volume_configuration,block" validate:"min=0"`
	// ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfiguration: required
	VirtualMachineConfiguration *ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfiguration `hcl:"virtual_machine_configuration,block" validate:"required"`
}

type ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfiguration struct {
	// NumberOfDisks: number, required
	NumberOfDisks terra.NumberValue `hcl:"number_of_disks,attr" validate:"required"`
	// SizeInGb: number, required
	SizeInGb terra.NumberValue `hcl:"size_in_gb,attr" validate:"required"`
	// SkuName: string, required
	SkuName terra.StringValue `hcl:"sku_name,attr" validate:"required"`
	// VolumeName: string, required
	VolumeName terra.StringValue `hcl:"volume_name,attr" validate:"required"`
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfiguration struct {
	// VirtualMachineSize: string, required
	VirtualMachineSize terra.StringValue `hcl:"virtual_machine_size,attr" validate:"required"`
	// ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImage: required
	Image *ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImage `hcl:"image,block" validate:"required"`
	// ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfile: required
	OsProfile *ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfile `hcl:"os_profile,block" validate:"required"`
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImage struct {
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfile struct {
	// AdminUsername: string, required
	AdminUsername terra.StringValue `hcl:"admin_username,attr" validate:"required"`
	// SshPrivateKey: string, required
	SshPrivateKey terra.StringValue `hcl:"ssh_private_key,attr" validate:"required"`
	// SshPublicKey: string, required
	SshPublicKey terra.StringValue `hcl:"ssh_public_key,attr" validate:"required"`
}

type ThreeTierConfigurationResourceNames struct {
	// ThreeTierConfigurationResourceNamesApplicationServer: optional
	ApplicationServer *ThreeTierConfigurationResourceNamesApplicationServer `hcl:"application_server,block"`
	// ThreeTierConfigurationResourceNamesCentralServer: optional
	CentralServer *ThreeTierConfigurationResourceNamesCentralServer `hcl:"central_server,block"`
	// ThreeTierConfigurationResourceNamesDatabaseServer: optional
	DatabaseServer *ThreeTierConfigurationResourceNamesDatabaseServer `hcl:"database_server,block"`
	// ThreeTierConfigurationResourceNamesSharedStorage: optional
	SharedStorage *ThreeTierConfigurationResourceNamesSharedStorage `hcl:"shared_storage,block"`
}

type ThreeTierConfigurationResourceNamesApplicationServer struct {
	// AvailabilitySetName: string, optional
	AvailabilitySetName terra.StringValue `hcl:"availability_set_name,attr"`
	// ThreeTierConfigurationResourceNamesApplicationServerVirtualMachine: min=0
	VirtualMachine []ThreeTierConfigurationResourceNamesApplicationServerVirtualMachine `hcl:"virtual_machine,block" validate:"min=0"`
}

type ThreeTierConfigurationResourceNamesApplicationServerVirtualMachine struct {
	// HostName: string, optional
	HostName terra.StringValue `hcl:"host_name,attr"`
	// NetworkInterfaceNames: list of string, optional
	NetworkInterfaceNames terra.ListValue[terra.StringValue] `hcl:"network_interface_names,attr"`
	// OsDiskName: string, optional
	OsDiskName terra.StringValue `hcl:"os_disk_name,attr"`
	// VirtualMachineName: string, optional
	VirtualMachineName terra.StringValue `hcl:"virtual_machine_name,attr"`
	// ThreeTierConfigurationResourceNames4Fdee0D8: min=0
	DataDisk []ThreeTierConfigurationResourceNames4Fdee0D8 `hcl:"data_disk,block" validate:"min=0"`
}

type ThreeTierConfigurationResourceNames4Fdee0D8 struct {
	// Names: list of string, required
	Names terra.ListValue[terra.StringValue] `hcl:"names,attr" validate:"required"`
	// VolumeName: string, required
	VolumeName terra.StringValue `hcl:"volume_name,attr" validate:"required"`
}

type ThreeTierConfigurationResourceNamesCentralServer struct {
	// AvailabilitySetName: string, optional
	AvailabilitySetName terra.StringValue `hcl:"availability_set_name,attr"`
	// ThreeTierConfigurationResourceNamesCentralServerLoadBalancer: optional
	LoadBalancer *ThreeTierConfigurationResourceNamesCentralServerLoadBalancer `hcl:"load_balancer,block"`
	// ThreeTierConfigurationResourceNamesCentralServerVirtualMachine: min=0
	VirtualMachine []ThreeTierConfigurationResourceNamesCentralServerVirtualMachine `hcl:"virtual_machine,block" validate:"min=0"`
}

type ThreeTierConfigurationResourceNamesCentralServerLoadBalancer struct {
	// BackendPoolNames: list of string, optional
	BackendPoolNames terra.ListValue[terra.StringValue] `hcl:"backend_pool_names,attr"`
	// FrontendIpConfigurationNames: list of string, optional
	FrontendIpConfigurationNames terra.ListValue[terra.StringValue] `hcl:"frontend_ip_configuration_names,attr"`
	// HealthProbeNames: list of string, optional
	HealthProbeNames terra.ListValue[terra.StringValue] `hcl:"health_probe_names,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type ThreeTierConfigurationResourceNamesCentralServerVirtualMachine struct {
	// HostName: string, optional
	HostName terra.StringValue `hcl:"host_name,attr"`
	// NetworkInterfaceNames: list of string, optional
	NetworkInterfaceNames terra.ListValue[terra.StringValue] `hcl:"network_interface_names,attr"`
	// OsDiskName: string, optional
	OsDiskName terra.StringValue `hcl:"os_disk_name,attr"`
	// VirtualMachineName: string, optional
	VirtualMachineName terra.StringValue `hcl:"virtual_machine_name,attr"`
	// ThreeTierConfigurationResourceNames66035083: min=0
	DataDisk []ThreeTierConfigurationResourceNames66035083 `hcl:"data_disk,block" validate:"min=0"`
}

type ThreeTierConfigurationResourceNames66035083 struct {
	// Names: list of string, required
	Names terra.ListValue[terra.StringValue] `hcl:"names,attr" validate:"required"`
	// VolumeName: string, required
	VolumeName terra.StringValue `hcl:"volume_name,attr" validate:"required"`
}

type ThreeTierConfigurationResourceNamesDatabaseServer struct {
	// AvailabilitySetName: string, optional
	AvailabilitySetName terra.StringValue `hcl:"availability_set_name,attr"`
	// ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancer: optional
	LoadBalancer *ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancer `hcl:"load_balancer,block"`
	// ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachine: min=0
	VirtualMachine []ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachine `hcl:"virtual_machine,block" validate:"min=0"`
}

type ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancer struct {
	// BackendPoolNames: list of string, optional
	BackendPoolNames terra.ListValue[terra.StringValue] `hcl:"backend_pool_names,attr"`
	// FrontendIpConfigurationNames: list of string, optional
	FrontendIpConfigurationNames terra.ListValue[terra.StringValue] `hcl:"frontend_ip_configuration_names,attr"`
	// HealthProbeNames: list of string, optional
	HealthProbeNames terra.ListValue[terra.StringValue] `hcl:"health_probe_names,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachine struct {
	// HostName: string, optional
	HostName terra.StringValue `hcl:"host_name,attr"`
	// NetworkInterfaceNames: list of string, optional
	NetworkInterfaceNames terra.ListValue[terra.StringValue] `hcl:"network_interface_names,attr"`
	// OsDiskName: string, optional
	OsDiskName terra.StringValue `hcl:"os_disk_name,attr"`
	// VirtualMachineName: string, optional
	VirtualMachineName terra.StringValue `hcl:"virtual_machine_name,attr"`
	// ThreeTierConfigurationResourceNamesBdafcd8F: min=0
	DataDisk []ThreeTierConfigurationResourceNamesBdafcd8F `hcl:"data_disk,block" validate:"min=0"`
}

type ThreeTierConfigurationResourceNamesBdafcd8F struct {
	// Names: list of string, required
	Names terra.ListValue[terra.StringValue] `hcl:"names,attr" validate:"required"`
	// VolumeName: string, required
	VolumeName terra.StringValue `hcl:"volume_name,attr" validate:"required"`
}

type ThreeTierConfigurationResourceNamesSharedStorage struct {
	// AccountName: string, optional
	AccountName terra.StringValue `hcl:"account_name,attr"`
	// PrivateEndpointName: string, optional
	PrivateEndpointName terra.StringValue `hcl:"private_endpoint_name,attr"`
}

type ThreeTierConfigurationTransportCreateAndMount struct {
	// ResourceGroupId: string, optional
	ResourceGroupId terra.StringValue `hcl:"resource_group_id,attr"`
	// StorageAccountName: string, optional
	StorageAccountName terra.StringValue `hcl:"storage_account_name,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) IdentityIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i IdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type ThreeTierConfigurationAttributes struct {
	ref terra.Reference
}

func (ttc ThreeTierConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ttc.ref, nil
}

func (ttc ThreeTierConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationAttributes {
	return ThreeTierConfigurationAttributes{ref: ref}
}

func (ttc ThreeTierConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ttc.ref.InternalTokens()
}

func (ttc ThreeTierConfigurationAttributes) AppResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ttc.ref.Append("app_resource_group_name"))
}

func (ttc ThreeTierConfigurationAttributes) HighAvailabilityType() terra.StringValue {
	return terra.ReferenceAsString(ttc.ref.Append("high_availability_type"))
}

func (ttc ThreeTierConfigurationAttributes) SecondaryIpEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ttc.ref.Append("secondary_ip_enabled"))
}

func (ttc ThreeTierConfigurationAttributes) ApplicationServerConfiguration() terra.ListValue[ThreeTierConfigurationApplicationServerConfigurationAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationApplicationServerConfigurationAttributes](ttc.ref.Append("application_server_configuration"))
}

func (ttc ThreeTierConfigurationAttributes) CentralServerConfiguration() terra.ListValue[ThreeTierConfigurationCentralServerConfigurationAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationCentralServerConfigurationAttributes](ttc.ref.Append("central_server_configuration"))
}

func (ttc ThreeTierConfigurationAttributes) DatabaseServerConfiguration() terra.ListValue[ThreeTierConfigurationDatabaseServerConfigurationAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationDatabaseServerConfigurationAttributes](ttc.ref.Append("database_server_configuration"))
}

func (ttc ThreeTierConfigurationAttributes) ResourceNames() terra.ListValue[ThreeTierConfigurationResourceNamesAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesAttributes](ttc.ref.Append("resource_names"))
}

func (ttc ThreeTierConfigurationAttributes) TransportCreateAndMount() terra.ListValue[ThreeTierConfigurationTransportCreateAndMountAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationTransportCreateAndMountAttributes](ttc.ref.Append("transport_create_and_mount"))
}

type ThreeTierConfigurationApplicationServerConfigurationAttributes struct {
	ref terra.Reference
}

func (asc ThreeTierConfigurationApplicationServerConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return asc.ref, nil
}

func (asc ThreeTierConfigurationApplicationServerConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationApplicationServerConfigurationAttributes {
	return ThreeTierConfigurationApplicationServerConfigurationAttributes{ref: ref}
}

func (asc ThreeTierConfigurationApplicationServerConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return asc.ref.InternalTokens()
}

func (asc ThreeTierConfigurationApplicationServerConfigurationAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(asc.ref.Append("instance_count"))
}

func (asc ThreeTierConfigurationApplicationServerConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(asc.ref.Append("subnet_id"))
}

func (asc ThreeTierConfigurationApplicationServerConfigurationAttributes) VirtualMachineConfiguration() terra.ListValue[ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes](asc.ref.Append("virtual_machine_configuration"))
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes struct {
	ref terra.Reference
}

func (vmc ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vmc.ref, nil
}

func (vmc ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes {
	return ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes{ref: ref}
}

func (vmc ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vmc.ref.InternalTokens()
}

func (vmc ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes) VirtualMachineSize() terra.StringValue {
	return terra.ReferenceAsString(vmc.ref.Append("virtual_machine_size"))
}

func (vmc ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes) Image() terra.ListValue[ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes](vmc.ref.Append("image"))
}

func (vmc ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationAttributes) OsProfile() terra.ListValue[ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes](vmc.ref.Append("os_profile"))
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes struct {
	ref terra.Reference
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes {
	return ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes{ref: ref}
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) Offer() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("offer"))
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("publisher"))
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("sku"))
}

func (i ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("version"))
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes struct {
	ref terra.Reference
}

func (op ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes {
	return ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes{ref: ref}
}

func (op ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes) AdminUsername() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("admin_username"))
}

func (op ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes) SshPrivateKey() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("ssh_private_key"))
}

func (op ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileAttributes) SshPublicKey() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("ssh_public_key"))
}

type ThreeTierConfigurationCentralServerConfigurationAttributes struct {
	ref terra.Reference
}

func (csc ThreeTierConfigurationCentralServerConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return csc.ref, nil
}

func (csc ThreeTierConfigurationCentralServerConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationCentralServerConfigurationAttributes {
	return ThreeTierConfigurationCentralServerConfigurationAttributes{ref: ref}
}

func (csc ThreeTierConfigurationCentralServerConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csc.ref.InternalTokens()
}

func (csc ThreeTierConfigurationCentralServerConfigurationAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(csc.ref.Append("instance_count"))
}

func (csc ThreeTierConfigurationCentralServerConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(csc.ref.Append("subnet_id"))
}

func (csc ThreeTierConfigurationCentralServerConfigurationAttributes) VirtualMachineConfiguration() terra.ListValue[ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes](csc.ref.Append("virtual_machine_configuration"))
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes struct {
	ref terra.Reference
}

func (vmc ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vmc.ref, nil
}

func (vmc ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes {
	return ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes{ref: ref}
}

func (vmc ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vmc.ref.InternalTokens()
}

func (vmc ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes) VirtualMachineSize() terra.StringValue {
	return terra.ReferenceAsString(vmc.ref.Append("virtual_machine_size"))
}

func (vmc ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes) Image() terra.ListValue[ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes](vmc.ref.Append("image"))
}

func (vmc ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationAttributes) OsProfile() terra.ListValue[ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes](vmc.ref.Append("os_profile"))
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes struct {
	ref terra.Reference
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes {
	return ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes{ref: ref}
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) Offer() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("offer"))
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("publisher"))
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("sku"))
}

func (i ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("version"))
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes struct {
	ref terra.Reference
}

func (op ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes {
	return ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes{ref: ref}
}

func (op ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes) AdminUsername() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("admin_username"))
}

func (op ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes) SshPrivateKey() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("ssh_private_key"))
}

func (op ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileAttributes) SshPublicKey() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("ssh_public_key"))
}

type ThreeTierConfigurationDatabaseServerConfigurationAttributes struct {
	ref terra.Reference
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return dsc.ref, nil
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationDatabaseServerConfigurationAttributes {
	return ThreeTierConfigurationDatabaseServerConfigurationAttributes{ref: ref}
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsc.ref.InternalTokens()
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) DatabaseType() terra.StringValue {
	return terra.ReferenceAsString(dsc.ref.Append("database_type"))
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(dsc.ref.Append("instance_count"))
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(dsc.ref.Append("subnet_id"))
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) DiskVolumeConfiguration() terra.SetValue[ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes] {
	return terra.ReferenceAsSet[ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes](dsc.ref.Append("disk_volume_configuration"))
}

func (dsc ThreeTierConfigurationDatabaseServerConfigurationAttributes) VirtualMachineConfiguration() terra.ListValue[ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes](dsc.ref.Append("virtual_machine_configuration"))
}

type ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes struct {
	ref terra.Reference
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return dvc.ref, nil
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes {
	return ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes{ref: ref}
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dvc.ref.InternalTokens()
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) NumberOfDisks() terra.NumberValue {
	return terra.ReferenceAsNumber(dvc.ref.Append("number_of_disks"))
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) SizeInGb() terra.NumberValue {
	return terra.ReferenceAsNumber(dvc.ref.Append("size_in_gb"))
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(dvc.ref.Append("sku_name"))
}

func (dvc ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationAttributes) VolumeName() terra.StringValue {
	return terra.ReferenceAsString(dvc.ref.Append("volume_name"))
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes struct {
	ref terra.Reference
}

func (vmc ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vmc.ref, nil
}

func (vmc ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes {
	return ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes{ref: ref}
}

func (vmc ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vmc.ref.InternalTokens()
}

func (vmc ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes) VirtualMachineSize() terra.StringValue {
	return terra.ReferenceAsString(vmc.ref.Append("virtual_machine_size"))
}

func (vmc ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes) Image() terra.ListValue[ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes](vmc.ref.Append("image"))
}

func (vmc ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationAttributes) OsProfile() terra.ListValue[ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes](vmc.ref.Append("os_profile"))
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes struct {
	ref terra.Reference
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes {
	return ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes{ref: ref}
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) Offer() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("offer"))
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("publisher"))
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("sku"))
}

func (i ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("version"))
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes struct {
	ref terra.Reference
}

func (op ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes {
	return ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes{ref: ref}
}

func (op ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes) AdminUsername() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("admin_username"))
}

func (op ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes) SshPrivateKey() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("ssh_private_key"))
}

func (op ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileAttributes) SshPublicKey() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("ssh_public_key"))
}

type ThreeTierConfigurationResourceNamesAttributes struct {
	ref terra.Reference
}

func (rn ThreeTierConfigurationResourceNamesAttributes) InternalRef() (terra.Reference, error) {
	return rn.ref, nil
}

func (rn ThreeTierConfigurationResourceNamesAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesAttributes {
	return ThreeTierConfigurationResourceNamesAttributes{ref: ref}
}

func (rn ThreeTierConfigurationResourceNamesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rn.ref.InternalTokens()
}

func (rn ThreeTierConfigurationResourceNamesAttributes) ApplicationServer() terra.ListValue[ThreeTierConfigurationResourceNamesApplicationServerAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesApplicationServerAttributes](rn.ref.Append("application_server"))
}

func (rn ThreeTierConfigurationResourceNamesAttributes) CentralServer() terra.ListValue[ThreeTierConfigurationResourceNamesCentralServerAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesCentralServerAttributes](rn.ref.Append("central_server"))
}

func (rn ThreeTierConfigurationResourceNamesAttributes) DatabaseServer() terra.ListValue[ThreeTierConfigurationResourceNamesDatabaseServerAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesDatabaseServerAttributes](rn.ref.Append("database_server"))
}

func (rn ThreeTierConfigurationResourceNamesAttributes) SharedStorage() terra.ListValue[ThreeTierConfigurationResourceNamesSharedStorageAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesSharedStorageAttributes](rn.ref.Append("shared_storage"))
}

type ThreeTierConfigurationResourceNamesApplicationServerAttributes struct {
	ref terra.Reference
}

func (as ThreeTierConfigurationResourceNamesApplicationServerAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as ThreeTierConfigurationResourceNamesApplicationServerAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesApplicationServerAttributes {
	return ThreeTierConfigurationResourceNamesApplicationServerAttributes{ref: ref}
}

func (as ThreeTierConfigurationResourceNamesApplicationServerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as ThreeTierConfigurationResourceNamesApplicationServerAttributes) AvailabilitySetName() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("availability_set_name"))
}

func (as ThreeTierConfigurationResourceNamesApplicationServerAttributes) VirtualMachine() terra.ListValue[ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes](as.ref.Append("virtual_machine"))
}

type ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes struct {
	ref terra.Reference
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes {
	return ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes{ref: ref}
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) HostName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("host_name"))
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) NetworkInterfaceNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vm.ref.Append("network_interface_names"))
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) OsDiskName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("os_disk_name"))
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) VirtualMachineName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("virtual_machine_name"))
}

func (vm ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineAttributes) DataDisk() terra.SetValue[ThreeTierConfigurationResourceNames4Fdee0D8Attributes] {
	return terra.ReferenceAsSet[ThreeTierConfigurationResourceNames4Fdee0D8Attributes](vm.ref.Append("data_disk"))
}

type ThreeTierConfigurationResourceNames4Fdee0D8Attributes struct {
	ref terra.Reference
}

func (dd ThreeTierConfigurationResourceNames4Fdee0D8Attributes) InternalRef() (terra.Reference, error) {
	return dd.ref, nil
}

func (dd ThreeTierConfigurationResourceNames4Fdee0D8Attributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNames4Fdee0D8Attributes {
	return ThreeTierConfigurationResourceNames4Fdee0D8Attributes{ref: ref}
}

func (dd ThreeTierConfigurationResourceNames4Fdee0D8Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dd.ref.InternalTokens()
}

func (dd ThreeTierConfigurationResourceNames4Fdee0D8Attributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dd.ref.Append("names"))
}

func (dd ThreeTierConfigurationResourceNames4Fdee0D8Attributes) VolumeName() terra.StringValue {
	return terra.ReferenceAsString(dd.ref.Append("volume_name"))
}

type ThreeTierConfigurationResourceNamesCentralServerAttributes struct {
	ref terra.Reference
}

func (cs ThreeTierConfigurationResourceNamesCentralServerAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs ThreeTierConfigurationResourceNamesCentralServerAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesCentralServerAttributes {
	return ThreeTierConfigurationResourceNamesCentralServerAttributes{ref: ref}
}

func (cs ThreeTierConfigurationResourceNamesCentralServerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs ThreeTierConfigurationResourceNamesCentralServerAttributes) AvailabilitySetName() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("availability_set_name"))
}

func (cs ThreeTierConfigurationResourceNamesCentralServerAttributes) LoadBalancer() terra.ListValue[ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes](cs.ref.Append("load_balancer"))
}

func (cs ThreeTierConfigurationResourceNamesCentralServerAttributes) VirtualMachine() terra.ListValue[ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes](cs.ref.Append("virtual_machine"))
}

type ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes struct {
	ref terra.Reference
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes {
	return ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes{ref: ref}
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) BackendPoolNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lb.ref.Append("backend_pool_names"))
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) FrontendIpConfigurationNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lb.ref.Append("frontend_ip_configuration_names"))
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) HealthProbeNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lb.ref.Append("health_probe_names"))
}

func (lb ThreeTierConfigurationResourceNamesCentralServerLoadBalancerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("name"))
}

type ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes struct {
	ref terra.Reference
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes {
	return ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes{ref: ref}
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) HostName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("host_name"))
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) NetworkInterfaceNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vm.ref.Append("network_interface_names"))
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) OsDiskName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("os_disk_name"))
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) VirtualMachineName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("virtual_machine_name"))
}

func (vm ThreeTierConfigurationResourceNamesCentralServerVirtualMachineAttributes) DataDisk() terra.SetValue[ThreeTierConfigurationResourceNames66035083Attributes] {
	return terra.ReferenceAsSet[ThreeTierConfigurationResourceNames66035083Attributes](vm.ref.Append("data_disk"))
}

type ThreeTierConfigurationResourceNames66035083Attributes struct {
	ref terra.Reference
}

func (dd ThreeTierConfigurationResourceNames66035083Attributes) InternalRef() (terra.Reference, error) {
	return dd.ref, nil
}

func (dd ThreeTierConfigurationResourceNames66035083Attributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNames66035083Attributes {
	return ThreeTierConfigurationResourceNames66035083Attributes{ref: ref}
}

func (dd ThreeTierConfigurationResourceNames66035083Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dd.ref.InternalTokens()
}

func (dd ThreeTierConfigurationResourceNames66035083Attributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dd.ref.Append("names"))
}

func (dd ThreeTierConfigurationResourceNames66035083Attributes) VolumeName() terra.StringValue {
	return terra.ReferenceAsString(dd.ref.Append("volume_name"))
}

type ThreeTierConfigurationResourceNamesDatabaseServerAttributes struct {
	ref terra.Reference
}

func (ds ThreeTierConfigurationResourceNamesDatabaseServerAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds ThreeTierConfigurationResourceNamesDatabaseServerAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesDatabaseServerAttributes {
	return ThreeTierConfigurationResourceNamesDatabaseServerAttributes{ref: ref}
}

func (ds ThreeTierConfigurationResourceNamesDatabaseServerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds ThreeTierConfigurationResourceNamesDatabaseServerAttributes) AvailabilitySetName() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("availability_set_name"))
}

func (ds ThreeTierConfigurationResourceNamesDatabaseServerAttributes) LoadBalancer() terra.ListValue[ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes](ds.ref.Append("load_balancer"))
}

func (ds ThreeTierConfigurationResourceNamesDatabaseServerAttributes) VirtualMachine() terra.ListValue[ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes] {
	return terra.ReferenceAsList[ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes](ds.ref.Append("virtual_machine"))
}

type ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes struct {
	ref terra.Reference
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes {
	return ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes{ref: ref}
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) BackendPoolNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lb.ref.Append("backend_pool_names"))
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) FrontendIpConfigurationNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lb.ref.Append("frontend_ip_configuration_names"))
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) HealthProbeNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lb.ref.Append("health_probe_names"))
}

func (lb ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("name"))
}

type ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes struct {
	ref terra.Reference
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes {
	return ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes{ref: ref}
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) HostName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("host_name"))
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) NetworkInterfaceNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vm.ref.Append("network_interface_names"))
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) OsDiskName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("os_disk_name"))
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) VirtualMachineName() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("virtual_machine_name"))
}

func (vm ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineAttributes) DataDisk() terra.SetValue[ThreeTierConfigurationResourceNamesBdafcd8FAttributes] {
	return terra.ReferenceAsSet[ThreeTierConfigurationResourceNamesBdafcd8FAttributes](vm.ref.Append("data_disk"))
}

type ThreeTierConfigurationResourceNamesBdafcd8FAttributes struct {
	ref terra.Reference
}

func (dd ThreeTierConfigurationResourceNamesBdafcd8FAttributes) InternalRef() (terra.Reference, error) {
	return dd.ref, nil
}

func (dd ThreeTierConfigurationResourceNamesBdafcd8FAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesBdafcd8FAttributes {
	return ThreeTierConfigurationResourceNamesBdafcd8FAttributes{ref: ref}
}

func (dd ThreeTierConfigurationResourceNamesBdafcd8FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dd.ref.InternalTokens()
}

func (dd ThreeTierConfigurationResourceNamesBdafcd8FAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dd.ref.Append("names"))
}

func (dd ThreeTierConfigurationResourceNamesBdafcd8FAttributes) VolumeName() terra.StringValue {
	return terra.ReferenceAsString(dd.ref.Append("volume_name"))
}

type ThreeTierConfigurationResourceNamesSharedStorageAttributes struct {
	ref terra.Reference
}

func (ss ThreeTierConfigurationResourceNamesSharedStorageAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss ThreeTierConfigurationResourceNamesSharedStorageAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationResourceNamesSharedStorageAttributes {
	return ThreeTierConfigurationResourceNamesSharedStorageAttributes{ref: ref}
}

func (ss ThreeTierConfigurationResourceNamesSharedStorageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss ThreeTierConfigurationResourceNamesSharedStorageAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("account_name"))
}

func (ss ThreeTierConfigurationResourceNamesSharedStorageAttributes) PrivateEndpointName() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("private_endpoint_name"))
}

type ThreeTierConfigurationTransportCreateAndMountAttributes struct {
	ref terra.Reference
}

func (tcam ThreeTierConfigurationTransportCreateAndMountAttributes) InternalRef() (terra.Reference, error) {
	return tcam.ref, nil
}

func (tcam ThreeTierConfigurationTransportCreateAndMountAttributes) InternalWithRef(ref terra.Reference) ThreeTierConfigurationTransportCreateAndMountAttributes {
	return ThreeTierConfigurationTransportCreateAndMountAttributes{ref: ref}
}

func (tcam ThreeTierConfigurationTransportCreateAndMountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tcam.ref.InternalTokens()
}

func (tcam ThreeTierConfigurationTransportCreateAndMountAttributes) ResourceGroupId() terra.StringValue {
	return terra.ReferenceAsString(tcam.ref.Append("resource_group_id"))
}

func (tcam ThreeTierConfigurationTransportCreateAndMountAttributes) StorageAccountName() terra.StringValue {
	return terra.ReferenceAsString(tcam.ref.Append("storage_account_name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type IdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	Type        string   `json:"type"`
}

type ThreeTierConfigurationState struct {
	AppResourceGroupName           string                                                      `json:"app_resource_group_name"`
	HighAvailabilityType           string                                                      `json:"high_availability_type"`
	SecondaryIpEnabled             bool                                                        `json:"secondary_ip_enabled"`
	ApplicationServerConfiguration []ThreeTierConfigurationApplicationServerConfigurationState `json:"application_server_configuration"`
	CentralServerConfiguration     []ThreeTierConfigurationCentralServerConfigurationState     `json:"central_server_configuration"`
	DatabaseServerConfiguration    []ThreeTierConfigurationDatabaseServerConfigurationState    `json:"database_server_configuration"`
	ResourceNames                  []ThreeTierConfigurationResourceNamesState                  `json:"resource_names"`
	TransportCreateAndMount        []ThreeTierConfigurationTransportCreateAndMountState        `json:"transport_create_and_mount"`
}

type ThreeTierConfigurationApplicationServerConfigurationState struct {
	InstanceCount               float64                                                                                `json:"instance_count"`
	SubnetId                    string                                                                                 `json:"subnet_id"`
	VirtualMachineConfiguration []ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationState `json:"virtual_machine_configuration"`
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationState struct {
	VirtualMachineSize string                                                                                          `json:"virtual_machine_size"`
	Image              []ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageState     `json:"image"`
	OsProfile          []ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileState `json:"os_profile"`
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImageState struct {
	Offer     string `json:"offer"`
	Publisher string `json:"publisher"`
	Sku       string `json:"sku"`
	Version   string `json:"version"`
}

type ThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfileState struct {
	AdminUsername string `json:"admin_username"`
	SshPrivateKey string `json:"ssh_private_key"`
	SshPublicKey  string `json:"ssh_public_key"`
}

type ThreeTierConfigurationCentralServerConfigurationState struct {
	InstanceCount               float64                                                                            `json:"instance_count"`
	SubnetId                    string                                                                             `json:"subnet_id"`
	VirtualMachineConfiguration []ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationState `json:"virtual_machine_configuration"`
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationState struct {
	VirtualMachineSize string                                                                                      `json:"virtual_machine_size"`
	Image              []ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageState     `json:"image"`
	OsProfile          []ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileState `json:"os_profile"`
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImageState struct {
	Offer     string `json:"offer"`
	Publisher string `json:"publisher"`
	Sku       string `json:"sku"`
	Version   string `json:"version"`
}

type ThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfileState struct {
	AdminUsername string `json:"admin_username"`
	SshPrivateKey string `json:"ssh_private_key"`
	SshPublicKey  string `json:"ssh_public_key"`
}

type ThreeTierConfigurationDatabaseServerConfigurationState struct {
	DatabaseType                string                                                                              `json:"database_type"`
	InstanceCount               float64                                                                             `json:"instance_count"`
	SubnetId                    string                                                                              `json:"subnet_id"`
	DiskVolumeConfiguration     []ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationState     `json:"disk_volume_configuration"`
	VirtualMachineConfiguration []ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationState `json:"virtual_machine_configuration"`
}

type ThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfigurationState struct {
	NumberOfDisks float64 `json:"number_of_disks"`
	SizeInGb      float64 `json:"size_in_gb"`
	SkuName       string  `json:"sku_name"`
	VolumeName    string  `json:"volume_name"`
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationState struct {
	VirtualMachineSize string                                                                                       `json:"virtual_machine_size"`
	Image              []ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageState     `json:"image"`
	OsProfile          []ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileState `json:"os_profile"`
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImageState struct {
	Offer     string `json:"offer"`
	Publisher string `json:"publisher"`
	Sku       string `json:"sku"`
	Version   string `json:"version"`
}

type ThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfileState struct {
	AdminUsername string `json:"admin_username"`
	SshPrivateKey string `json:"ssh_private_key"`
	SshPublicKey  string `json:"ssh_public_key"`
}

type ThreeTierConfigurationResourceNamesState struct {
	ApplicationServer []ThreeTierConfigurationResourceNamesApplicationServerState `json:"application_server"`
	CentralServer     []ThreeTierConfigurationResourceNamesCentralServerState     `json:"central_server"`
	DatabaseServer    []ThreeTierConfigurationResourceNamesDatabaseServerState    `json:"database_server"`
	SharedStorage     []ThreeTierConfigurationResourceNamesSharedStorageState     `json:"shared_storage"`
}

type ThreeTierConfigurationResourceNamesApplicationServerState struct {
	AvailabilitySetName string                                                                    `json:"availability_set_name"`
	VirtualMachine      []ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineState `json:"virtual_machine"`
}

type ThreeTierConfigurationResourceNamesApplicationServerVirtualMachineState struct {
	HostName              string                                             `json:"host_name"`
	NetworkInterfaceNames []string                                           `json:"network_interface_names"`
	OsDiskName            string                                             `json:"os_disk_name"`
	VirtualMachineName    string                                             `json:"virtual_machine_name"`
	DataDisk              []ThreeTierConfigurationResourceNames4Fdee0D8State `json:"data_disk"`
}

type ThreeTierConfigurationResourceNames4Fdee0D8State struct {
	Names      []string `json:"names"`
	VolumeName string   `json:"volume_name"`
}

type ThreeTierConfigurationResourceNamesCentralServerState struct {
	AvailabilitySetName string                                                                `json:"availability_set_name"`
	LoadBalancer        []ThreeTierConfigurationResourceNamesCentralServerLoadBalancerState   `json:"load_balancer"`
	VirtualMachine      []ThreeTierConfigurationResourceNamesCentralServerVirtualMachineState `json:"virtual_machine"`
}

type ThreeTierConfigurationResourceNamesCentralServerLoadBalancerState struct {
	BackendPoolNames             []string `json:"backend_pool_names"`
	FrontendIpConfigurationNames []string `json:"frontend_ip_configuration_names"`
	HealthProbeNames             []string `json:"health_probe_names"`
	Name                         string   `json:"name"`
}

type ThreeTierConfigurationResourceNamesCentralServerVirtualMachineState struct {
	HostName              string                                             `json:"host_name"`
	NetworkInterfaceNames []string                                           `json:"network_interface_names"`
	OsDiskName            string                                             `json:"os_disk_name"`
	VirtualMachineName    string                                             `json:"virtual_machine_name"`
	DataDisk              []ThreeTierConfigurationResourceNames66035083State `json:"data_disk"`
}

type ThreeTierConfigurationResourceNames66035083State struct {
	Names      []string `json:"names"`
	VolumeName string   `json:"volume_name"`
}

type ThreeTierConfigurationResourceNamesDatabaseServerState struct {
	AvailabilitySetName string                                                                 `json:"availability_set_name"`
	LoadBalancer        []ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerState   `json:"load_balancer"`
	VirtualMachine      []ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineState `json:"virtual_machine"`
}

type ThreeTierConfigurationResourceNamesDatabaseServerLoadBalancerState struct {
	BackendPoolNames             []string `json:"backend_pool_names"`
	FrontendIpConfigurationNames []string `json:"frontend_ip_configuration_names"`
	HealthProbeNames             []string `json:"health_probe_names"`
	Name                         string   `json:"name"`
}

type ThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineState struct {
	HostName              string                                             `json:"host_name"`
	NetworkInterfaceNames []string                                           `json:"network_interface_names"`
	OsDiskName            string                                             `json:"os_disk_name"`
	VirtualMachineName    string                                             `json:"virtual_machine_name"`
	DataDisk              []ThreeTierConfigurationResourceNamesBdafcd8FState `json:"data_disk"`
}

type ThreeTierConfigurationResourceNamesBdafcd8FState struct {
	Names      []string `json:"names"`
	VolumeName string   `json:"volume_name"`
}

type ThreeTierConfigurationResourceNamesSharedStorageState struct {
	AccountName         string `json:"account_name"`
	PrivateEndpointName string `json:"private_endpoint_name"`
}

type ThreeTierConfigurationTransportCreateAndMountState struct {
	ResourceGroupId    string `json:"resource_group_id"`
	StorageAccountName string `json:"storage_account_name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
