// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apangfvhlr *Resource) Type() string {
	return "azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack"
}

// LocalName returns the local name for [Resource].
func (apangfvhlr *Resource) LocalName() string {
	return apangfvhlr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apangfvhlr *Resource) Configuration() interface{} {
	return apangfvhlr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apangfvhlr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apangfvhlr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apangfvhlr *Resource) Dependencies() terra.Dependencies {
	return apangfvhlr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apangfvhlr *Resource) LifecycleManagement() *terra.Lifecycle {
	return apangfvhlr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apangfvhlr *Resource) Attributes() azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes {
	return azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes{ref: terra.ReferenceResource(apangfvhlr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apangfvhlr *Resource) ImportState(state io.Reader) error {
	apangfvhlr.state = &azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackState{}
	if err := json.NewDecoder(state).Decode(apangfvhlr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apangfvhlr.Type(), apangfvhlr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apangfvhlr *Resource) State() (*azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackState, bool) {
	return apangfvhlr.state, apangfvhlr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apangfvhlr *Resource) StateMust() *azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackState {
	if apangfvhlr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apangfvhlr.Type(), apangfvhlr.LocalName()))
	}
	return apangfvhlr.state
}

// Args contains the configurations for azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RulestackId: string, required
	RulestackId terra.StringValue `hcl:"rulestack_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// DestinationNat: min=0
	DestinationNat []DestinationNat `hcl:"destination_nat,block" validate:"min=0"`
	// DnsSettings: optional
	DnsSettings *DnsSettings `hcl:"dns_settings,block"`
	// NetworkProfile: required
	NetworkProfile *NetworkProfile `hcl:"network_profile,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apangfvhlr.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apangfvhlr.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(apangfvhlr.ref.Append("resource_group_name"))
}

// RulestackId returns a reference to field rulestack_id of azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) RulestackId() terra.StringValue {
	return terra.ReferenceAsString(apangfvhlr.ref.Append("rulestack_id"))
}

// Tags returns a reference to field tags of azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack.
func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](apangfvhlr.ref.Append("tags"))
}

func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) DestinationNat() terra.ListValue[DestinationNatAttributes] {
	return terra.ReferenceAsList[DestinationNatAttributes](apangfvhlr.ref.Append("destination_nat"))
}

func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) DnsSettings() terra.ListValue[DnsSettingsAttributes] {
	return terra.ReferenceAsList[DnsSettingsAttributes](apangfvhlr.ref.Append("dns_settings"))
}

func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) NetworkProfile() terra.ListValue[NetworkProfileAttributes] {
	return terra.ReferenceAsList[NetworkProfileAttributes](apangfvhlr.ref.Append("network_profile"))
}

func (apangfvhlr azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apangfvhlr.ref.Append("timeouts"))
}

type azurermPaloAltoNextGenerationFirewallVirtualHubLocalRulestackState struct {
	Id                string                `json:"id"`
	Name              string                `json:"name"`
	ResourceGroupName string                `json:"resource_group_name"`
	RulestackId       string                `json:"rulestack_id"`
	Tags              map[string]string     `json:"tags"`
	DestinationNat    []DestinationNatState `json:"destination_nat"`
	DnsSettings       []DnsSettingsState    `json:"dns_settings"`
	NetworkProfile    []NetworkProfileState `json:"network_profile"`
	Timeouts          *TimeoutsState        `json:"timeouts"`
}
