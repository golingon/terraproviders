// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_container_app_environment_storage

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_container_app_environment_storage.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermContainerAppEnvironmentStorageState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acaes *Resource) Type() string {
	return "azurerm_container_app_environment_storage"
}

// LocalName returns the local name for [Resource].
func (acaes *Resource) LocalName() string {
	return acaes.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acaes *Resource) Configuration() interface{} {
	return acaes.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acaes *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acaes)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acaes *Resource) Dependencies() terra.Dependencies {
	return acaes.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acaes *Resource) LifecycleManagement() *terra.Lifecycle {
	return acaes.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acaes *Resource) Attributes() azurermContainerAppEnvironmentStorageAttributes {
	return azurermContainerAppEnvironmentStorageAttributes{ref: terra.ReferenceResource(acaes)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acaes *Resource) ImportState(state io.Reader) error {
	acaes.state = &azurermContainerAppEnvironmentStorageState{}
	if err := json.NewDecoder(state).Decode(acaes.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acaes.Type(), acaes.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acaes *Resource) State() (*azurermContainerAppEnvironmentStorageState, bool) {
	return acaes.state, acaes.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acaes *Resource) StateMust() *azurermContainerAppEnvironmentStorageState {
	if acaes.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acaes.Type(), acaes.LocalName()))
	}
	return acaes.state
}

// Args contains the configurations for azurerm_container_app_environment_storage.
type Args struct {
	// AccessKey: string, required
	AccessKey terra.StringValue `hcl:"access_key,attr" validate:"required"`
	// AccessMode: string, required
	AccessMode terra.StringValue `hcl:"access_mode,attr" validate:"required"`
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// ContainerAppEnvironmentId: string, required
	ContainerAppEnvironmentId terra.StringValue `hcl:"container_app_environment_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ShareName: string, required
	ShareName terra.StringValue `hcl:"share_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermContainerAppEnvironmentStorageAttributes struct {
	ref terra.Reference
}

// AccessKey returns a reference to field access_key of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) AccessKey() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("access_key"))
}

// AccessMode returns a reference to field access_mode of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) AccessMode() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("access_mode"))
}

// AccountName returns a reference to field account_name of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("account_name"))
}

// ContainerAppEnvironmentId returns a reference to field container_app_environment_id of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) ContainerAppEnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("container_app_environment_id"))
}

// Id returns a reference to field id of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("name"))
}

// ShareName returns a reference to field share_name of azurerm_container_app_environment_storage.
func (acaes azurermContainerAppEnvironmentStorageAttributes) ShareName() terra.StringValue {
	return terra.ReferenceAsString(acaes.ref.Append("share_name"))
}

func (acaes azurermContainerAppEnvironmentStorageAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acaes.ref.Append("timeouts"))
}

type azurermContainerAppEnvironmentStorageState struct {
	AccessKey                 string         `json:"access_key"`
	AccessMode                string         `json:"access_mode"`
	AccountName               string         `json:"account_name"`
	ContainerAppEnvironmentId string         `json:"container_app_environment_id"`
	Id                        string         `json:"id"`
	Name                      string         `json:"name"`
	ShareName                 string         `json:"share_name"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
