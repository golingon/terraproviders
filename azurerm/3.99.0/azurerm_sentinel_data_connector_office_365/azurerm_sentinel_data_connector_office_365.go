// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_sentinel_data_connector_office_365

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_sentinel_data_connector_office_365.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSentinelDataConnectorOffice365State
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asdco3 *Resource) Type() string {
	return "azurerm_sentinel_data_connector_office_365"
}

// LocalName returns the local name for [Resource].
func (asdco3 *Resource) LocalName() string {
	return asdco3.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asdco3 *Resource) Configuration() interface{} {
	return asdco3.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asdco3 *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asdco3)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asdco3 *Resource) Dependencies() terra.Dependencies {
	return asdco3.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asdco3 *Resource) LifecycleManagement() *terra.Lifecycle {
	return asdco3.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asdco3 *Resource) Attributes() azurermSentinelDataConnectorOffice365Attributes {
	return azurermSentinelDataConnectorOffice365Attributes{ref: terra.ReferenceResource(asdco3)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asdco3 *Resource) ImportState(state io.Reader) error {
	asdco3.state = &azurermSentinelDataConnectorOffice365State{}
	if err := json.NewDecoder(state).Decode(asdco3.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asdco3.Type(), asdco3.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asdco3 *Resource) State() (*azurermSentinelDataConnectorOffice365State, bool) {
	return asdco3.state, asdco3.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asdco3 *Resource) StateMust() *azurermSentinelDataConnectorOffice365State {
	if asdco3.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asdco3.Type(), asdco3.LocalName()))
	}
	return asdco3.state
}

// Args contains the configurations for azurerm_sentinel_data_connector_office_365.
type Args struct {
	// ExchangeEnabled: bool, optional
	ExchangeEnabled terra.BoolValue `hcl:"exchange_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SharepointEnabled: bool, optional
	SharepointEnabled terra.BoolValue `hcl:"sharepoint_enabled,attr"`
	// TeamsEnabled: bool, optional
	TeamsEnabled terra.BoolValue `hcl:"teams_enabled,attr"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSentinelDataConnectorOffice365Attributes struct {
	ref terra.Reference
}

// ExchangeEnabled returns a reference to field exchange_enabled of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) ExchangeEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asdco3.ref.Append("exchange_enabled"))
}

// Id returns a reference to field id of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asdco3.ref.Append("id"))
}

// LogAnalyticsWorkspaceId returns a reference to field log_analytics_workspace_id of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(asdco3.ref.Append("log_analytics_workspace_id"))
}

// Name returns a reference to field name of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asdco3.ref.Append("name"))
}

// SharepointEnabled returns a reference to field sharepoint_enabled of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) SharepointEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asdco3.ref.Append("sharepoint_enabled"))
}

// TeamsEnabled returns a reference to field teams_enabled of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) TeamsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asdco3.ref.Append("teams_enabled"))
}

// TenantId returns a reference to field tenant_id of azurerm_sentinel_data_connector_office_365.
func (asdco3 azurermSentinelDataConnectorOffice365Attributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(asdco3.ref.Append("tenant_id"))
}

func (asdco3 azurermSentinelDataConnectorOffice365Attributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asdco3.ref.Append("timeouts"))
}

type azurermSentinelDataConnectorOffice365State struct {
	ExchangeEnabled         bool           `json:"exchange_enabled"`
	Id                      string         `json:"id"`
	LogAnalyticsWorkspaceId string         `json:"log_analytics_workspace_id"`
	Name                    string         `json:"name"`
	SharepointEnabled       bool           `json:"sharepoint_enabled"`
	TeamsEnabled            bool           `json:"teams_enabled"`
	TenantId                string         `json:"tenant_id"`
	Timeouts                *TimeoutsState `json:"timeouts"`
}
