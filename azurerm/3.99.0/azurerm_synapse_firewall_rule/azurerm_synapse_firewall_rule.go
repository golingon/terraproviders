// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_synapse_firewall_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_synapse_firewall_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSynapseFirewallRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asfr *Resource) Type() string {
	return "azurerm_synapse_firewall_rule"
}

// LocalName returns the local name for [Resource].
func (asfr *Resource) LocalName() string {
	return asfr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asfr *Resource) Configuration() interface{} {
	return asfr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asfr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asfr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asfr *Resource) Dependencies() terra.Dependencies {
	return asfr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asfr *Resource) LifecycleManagement() *terra.Lifecycle {
	return asfr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asfr *Resource) Attributes() azurermSynapseFirewallRuleAttributes {
	return azurermSynapseFirewallRuleAttributes{ref: terra.ReferenceResource(asfr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asfr *Resource) ImportState(state io.Reader) error {
	asfr.state = &azurermSynapseFirewallRuleState{}
	if err := json.NewDecoder(state).Decode(asfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asfr.Type(), asfr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asfr *Resource) State() (*azurermSynapseFirewallRuleState, bool) {
	return asfr.state, asfr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asfr *Resource) StateMust() *azurermSynapseFirewallRuleState {
	if asfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asfr.Type(), asfr.LocalName()))
	}
	return asfr.state
}

// Args contains the configurations for azurerm_synapse_firewall_rule.
type Args struct {
	// EndIpAddress: string, required
	EndIpAddress terra.StringValue `hcl:"end_ip_address,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StartIpAddress: string, required
	StartIpAddress terra.StringValue `hcl:"start_ip_address,attr" validate:"required"`
	// SynapseWorkspaceId: string, required
	SynapseWorkspaceId terra.StringValue `hcl:"synapse_workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSynapseFirewallRuleAttributes struct {
	ref terra.Reference
}

// EndIpAddress returns a reference to field end_ip_address of azurerm_synapse_firewall_rule.
func (asfr azurermSynapseFirewallRuleAttributes) EndIpAddress() terra.StringValue {
	return terra.ReferenceAsString(asfr.ref.Append("end_ip_address"))
}

// Id returns a reference to field id of azurerm_synapse_firewall_rule.
func (asfr azurermSynapseFirewallRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asfr.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_synapse_firewall_rule.
func (asfr azurermSynapseFirewallRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asfr.ref.Append("name"))
}

// StartIpAddress returns a reference to field start_ip_address of azurerm_synapse_firewall_rule.
func (asfr azurermSynapseFirewallRuleAttributes) StartIpAddress() terra.StringValue {
	return terra.ReferenceAsString(asfr.ref.Append("start_ip_address"))
}

// SynapseWorkspaceId returns a reference to field synapse_workspace_id of azurerm_synapse_firewall_rule.
func (asfr azurermSynapseFirewallRuleAttributes) SynapseWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(asfr.ref.Append("synapse_workspace_id"))
}

func (asfr azurermSynapseFirewallRuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asfr.ref.Append("timeouts"))
}

type azurermSynapseFirewallRuleState struct {
	EndIpAddress       string         `json:"end_ip_address"`
	Id                 string         `json:"id"`
	Name               string         `json:"name"`
	StartIpAddress     string         `json:"start_ip_address"`
	SynapseWorkspaceId string         `json:"synapse_workspace_id"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
