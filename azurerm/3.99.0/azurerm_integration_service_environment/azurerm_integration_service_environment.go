// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_integration_service_environment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_integration_service_environment.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIntegrationServiceEnvironmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aise *Resource) Type() string {
	return "azurerm_integration_service_environment"
}

// LocalName returns the local name for [Resource].
func (aise *Resource) LocalName() string {
	return aise.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aise *Resource) Configuration() interface{} {
	return aise.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aise *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aise)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aise *Resource) Dependencies() terra.Dependencies {
	return aise.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aise *Resource) LifecycleManagement() *terra.Lifecycle {
	return aise.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aise *Resource) Attributes() azurermIntegrationServiceEnvironmentAttributes {
	return azurermIntegrationServiceEnvironmentAttributes{ref: terra.ReferenceResource(aise)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aise *Resource) ImportState(state io.Reader) error {
	aise.state = &azurermIntegrationServiceEnvironmentState{}
	if err := json.NewDecoder(state).Decode(aise.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aise.Type(), aise.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aise *Resource) State() (*azurermIntegrationServiceEnvironmentState, bool) {
	return aise.state, aise.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aise *Resource) StateMust() *azurermIntegrationServiceEnvironmentState {
	if aise.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aise.Type(), aise.LocalName()))
	}
	return aise.state
}

// Args contains the configurations for azurerm_integration_service_environment.
type Args struct {
	// AccessEndpointType: string, required
	AccessEndpointType terra.StringValue `hcl:"access_endpoint_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, optional
	SkuName terra.StringValue `hcl:"sku_name,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VirtualNetworkSubnetIds: set of string, required
	VirtualNetworkSubnetIds terra.SetValue[terra.StringValue] `hcl:"virtual_network_subnet_ids,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIntegrationServiceEnvironmentAttributes struct {
	ref terra.Reference
}

// AccessEndpointType returns a reference to field access_endpoint_type of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) AccessEndpointType() terra.StringValue {
	return terra.ReferenceAsString(aise.ref.Append("access_endpoint_type"))
}

// ConnectorEndpointIpAddresses returns a reference to field connector_endpoint_ip_addresses of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) ConnectorEndpointIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aise.ref.Append("connector_endpoint_ip_addresses"))
}

// ConnectorOutboundIpAddresses returns a reference to field connector_outbound_ip_addresses of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) ConnectorOutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aise.ref.Append("connector_outbound_ip_addresses"))
}

// Id returns a reference to field id of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aise.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aise.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aise.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aise.ref.Append("resource_group_name"))
}

// SkuName returns a reference to field sku_name of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(aise.ref.Append("sku_name"))
}

// Tags returns a reference to field tags of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aise.ref.Append("tags"))
}

// VirtualNetworkSubnetIds returns a reference to field virtual_network_subnet_ids of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) VirtualNetworkSubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aise.ref.Append("virtual_network_subnet_ids"))
}

// WorkflowEndpointIpAddresses returns a reference to field workflow_endpoint_ip_addresses of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) WorkflowEndpointIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aise.ref.Append("workflow_endpoint_ip_addresses"))
}

// WorkflowOutboundIpAddresses returns a reference to field workflow_outbound_ip_addresses of azurerm_integration_service_environment.
func (aise azurermIntegrationServiceEnvironmentAttributes) WorkflowOutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aise.ref.Append("workflow_outbound_ip_addresses"))
}

func (aise azurermIntegrationServiceEnvironmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aise.ref.Append("timeouts"))
}

type azurermIntegrationServiceEnvironmentState struct {
	AccessEndpointType           string            `json:"access_endpoint_type"`
	ConnectorEndpointIpAddresses []string          `json:"connector_endpoint_ip_addresses"`
	ConnectorOutboundIpAddresses []string          `json:"connector_outbound_ip_addresses"`
	Id                           string            `json:"id"`
	Location                     string            `json:"location"`
	Name                         string            `json:"name"`
	ResourceGroupName            string            `json:"resource_group_name"`
	SkuName                      string            `json:"sku_name"`
	Tags                         map[string]string `json:"tags"`
	VirtualNetworkSubnetIds      []string          `json:"virtual_network_subnet_ids"`
	WorkflowEndpointIpAddresses  []string          `json:"workflow_endpoint_ip_addresses"`
	WorkflowOutboundIpAddresses  []string          `json:"workflow_outbound_ip_addresses"`
	Timeouts                     *TimeoutsState    `json:"timeouts"`
}
