// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_nginx_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataConfigFileAttributes struct {
	ref terra.Reference
}

func (cf DataConfigFileAttributes) InternalRef() (terra.Reference, error) {
	return cf.ref, nil
}

func (cf DataConfigFileAttributes) InternalWithRef(ref terra.Reference) DataConfigFileAttributes {
	return DataConfigFileAttributes{ref: ref}
}

func (cf DataConfigFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cf.ref.InternalTokens()
}

func (cf DataConfigFileAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(cf.ref.Append("content"))
}

func (cf DataConfigFileAttributes) VirtualPath() terra.StringValue {
	return terra.ReferenceAsString(cf.ref.Append("virtual_path"))
}

type DataProtectedFileAttributes struct {
	ref terra.Reference
}

func (pf DataProtectedFileAttributes) InternalRef() (terra.Reference, error) {
	return pf.ref, nil
}

func (pf DataProtectedFileAttributes) InternalWithRef(ref terra.Reference) DataProtectedFileAttributes {
	return DataProtectedFileAttributes{ref: ref}
}

func (pf DataProtectedFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pf.ref.InternalTokens()
}

func (pf DataProtectedFileAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("content"))
}

func (pf DataProtectedFileAttributes) VirtualPath() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("virtual_path"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataConfigFileState struct {
	Content     string `json:"content"`
	VirtualPath string `json:"virtual_path"`
}

type DataProtectedFileState struct {
	Content     string `json:"content"`
	VirtualPath string `json:"virtual_path"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
