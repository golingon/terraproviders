// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_spring_cloud_application_insights_application_performance_monitoring

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_spring_cloud_application_insights_application_performance_monitoring.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascaiapm *Resource) Type() string {
	return "azurerm_spring_cloud_application_insights_application_performance_monitoring"
}

// LocalName returns the local name for [Resource].
func (ascaiapm *Resource) LocalName() string {
	return ascaiapm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascaiapm *Resource) Configuration() interface{} {
	return ascaiapm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascaiapm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascaiapm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascaiapm *Resource) Dependencies() terra.Dependencies {
	return ascaiapm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascaiapm *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascaiapm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascaiapm *Resource) Attributes() azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes {
	return azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes{ref: terra.ReferenceResource(ascaiapm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascaiapm *Resource) ImportState(state io.Reader) error {
	ascaiapm.state = &azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringState{}
	if err := json.NewDecoder(state).Decode(ascaiapm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascaiapm.Type(), ascaiapm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascaiapm *Resource) State() (*azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringState, bool) {
	return ascaiapm.state, ascaiapm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascaiapm *Resource) StateMust() *azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringState {
	if ascaiapm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascaiapm.Type(), ascaiapm.LocalName()))
	}
	return ascaiapm.state
}

// Args contains the configurations for azurerm_spring_cloud_application_insights_application_performance_monitoring.
type Args struct {
	// ConnectionString: string, optional
	ConnectionString terra.StringValue `hcl:"connection_string,attr"`
	// GloballyEnabled: bool, optional
	GloballyEnabled terra.BoolValue `hcl:"globally_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RoleInstance: string, optional
	RoleInstance terra.StringValue `hcl:"role_instance,attr"`
	// RoleName: string, optional
	RoleName terra.StringValue `hcl:"role_name,attr"`
	// SamplingPercentage: number, optional
	SamplingPercentage terra.NumberValue `hcl:"sampling_percentage,attr"`
	// SamplingRequestsPerSecond: number, optional
	SamplingRequestsPerSecond terra.NumberValue `hcl:"sampling_requests_per_second,attr"`
	// SpringCloudServiceId: string, required
	SpringCloudServiceId terra.StringValue `hcl:"spring_cloud_service_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes struct {
	ref terra.Reference
}

// ConnectionString returns a reference to field connection_string of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) ConnectionString() terra.StringValue {
	return terra.ReferenceAsString(ascaiapm.ref.Append("connection_string"))
}

// GloballyEnabled returns a reference to field globally_enabled of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) GloballyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ascaiapm.ref.Append("globally_enabled"))
}

// Id returns a reference to field id of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascaiapm.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ascaiapm.ref.Append("name"))
}

// RoleInstance returns a reference to field role_instance of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) RoleInstance() terra.StringValue {
	return terra.ReferenceAsString(ascaiapm.ref.Append("role_instance"))
}

// RoleName returns a reference to field role_name of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) RoleName() terra.StringValue {
	return terra.ReferenceAsString(ascaiapm.ref.Append("role_name"))
}

// SamplingPercentage returns a reference to field sampling_percentage of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) SamplingPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(ascaiapm.ref.Append("sampling_percentage"))
}

// SamplingRequestsPerSecond returns a reference to field sampling_requests_per_second of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) SamplingRequestsPerSecond() terra.NumberValue {
	return terra.ReferenceAsNumber(ascaiapm.ref.Append("sampling_requests_per_second"))
}

// SpringCloudServiceId returns a reference to field spring_cloud_service_id of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) SpringCloudServiceId() terra.StringValue {
	return terra.ReferenceAsString(ascaiapm.ref.Append("spring_cloud_service_id"))
}

func (ascaiapm azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascaiapm.ref.Append("timeouts"))
}

type azurermSpringCloudApplicationInsightsApplicationPerformanceMonitoringState struct {
	ConnectionString          string         `json:"connection_string"`
	GloballyEnabled           bool           `json:"globally_enabled"`
	Id                        string         `json:"id"`
	Name                      string         `json:"name"`
	RoleInstance              string         `json:"role_instance"`
	RoleName                  string         `json:"role_name"`
	SamplingPercentage        float64        `json:"sampling_percentage"`
	SamplingRequestsPerSecond float64        `json:"sampling_requests_per_second"`
	SpringCloudServiceId      string         `json:"spring_cloud_service_id"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
