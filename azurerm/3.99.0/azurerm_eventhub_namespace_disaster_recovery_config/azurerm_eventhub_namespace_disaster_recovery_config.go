// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_eventhub_namespace_disaster_recovery_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_eventhub_namespace_disaster_recovery_config.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermEventhubNamespaceDisasterRecoveryConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aendrc *Resource) Type() string {
	return "azurerm_eventhub_namespace_disaster_recovery_config"
}

// LocalName returns the local name for [Resource].
func (aendrc *Resource) LocalName() string {
	return aendrc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aendrc *Resource) Configuration() interface{} {
	return aendrc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aendrc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aendrc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aendrc *Resource) Dependencies() terra.Dependencies {
	return aendrc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aendrc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aendrc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aendrc *Resource) Attributes() azurermEventhubNamespaceDisasterRecoveryConfigAttributes {
	return azurermEventhubNamespaceDisasterRecoveryConfigAttributes{ref: terra.ReferenceResource(aendrc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aendrc *Resource) ImportState(state io.Reader) error {
	aendrc.state = &azurermEventhubNamespaceDisasterRecoveryConfigState{}
	if err := json.NewDecoder(state).Decode(aendrc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aendrc.Type(), aendrc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aendrc *Resource) State() (*azurermEventhubNamespaceDisasterRecoveryConfigState, bool) {
	return aendrc.state, aendrc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aendrc *Resource) StateMust() *azurermEventhubNamespaceDisasterRecoveryConfigState {
	if aendrc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aendrc.Type(), aendrc.LocalName()))
	}
	return aendrc.state
}

// Args contains the configurations for azurerm_eventhub_namespace_disaster_recovery_config.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NamespaceName: string, required
	NamespaceName terra.StringValue `hcl:"namespace_name,attr" validate:"required"`
	// PartnerNamespaceId: string, required
	PartnerNamespaceId terra.StringValue `hcl:"partner_namespace_id,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermEventhubNamespaceDisasterRecoveryConfigAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_eventhub_namespace_disaster_recovery_config.
func (aendrc azurermEventhubNamespaceDisasterRecoveryConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aendrc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_eventhub_namespace_disaster_recovery_config.
func (aendrc azurermEventhubNamespaceDisasterRecoveryConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aendrc.ref.Append("name"))
}

// NamespaceName returns a reference to field namespace_name of azurerm_eventhub_namespace_disaster_recovery_config.
func (aendrc azurermEventhubNamespaceDisasterRecoveryConfigAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceAsString(aendrc.ref.Append("namespace_name"))
}

// PartnerNamespaceId returns a reference to field partner_namespace_id of azurerm_eventhub_namespace_disaster_recovery_config.
func (aendrc azurermEventhubNamespaceDisasterRecoveryConfigAttributes) PartnerNamespaceId() terra.StringValue {
	return terra.ReferenceAsString(aendrc.ref.Append("partner_namespace_id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_eventhub_namespace_disaster_recovery_config.
func (aendrc azurermEventhubNamespaceDisasterRecoveryConfigAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aendrc.ref.Append("resource_group_name"))
}

func (aendrc azurermEventhubNamespaceDisasterRecoveryConfigAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aendrc.ref.Append("timeouts"))
}

type azurermEventhubNamespaceDisasterRecoveryConfigState struct {
	Id                 string         `json:"id"`
	Name               string         `json:"name"`
	NamespaceName      string         `json:"namespace_name"`
	PartnerNamespaceId string         `json:"partner_namespace_id"`
	ResourceGroupName  string         `json:"resource_group_name"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
