// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_dev_center_gallery

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_dev_center_gallery.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDevCenterGalleryState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adcg *Resource) Type() string {
	return "azurerm_dev_center_gallery"
}

// LocalName returns the local name for [Resource].
func (adcg *Resource) LocalName() string {
	return adcg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adcg *Resource) Configuration() interface{} {
	return adcg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adcg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adcg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adcg *Resource) Dependencies() terra.Dependencies {
	return adcg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adcg *Resource) LifecycleManagement() *terra.Lifecycle {
	return adcg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adcg *Resource) Attributes() azurermDevCenterGalleryAttributes {
	return azurermDevCenterGalleryAttributes{ref: terra.ReferenceResource(adcg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adcg *Resource) ImportState(state io.Reader) error {
	adcg.state = &azurermDevCenterGalleryState{}
	if err := json.NewDecoder(state).Decode(adcg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adcg.Type(), adcg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adcg *Resource) State() (*azurermDevCenterGalleryState, bool) {
	return adcg.state, adcg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adcg *Resource) StateMust() *azurermDevCenterGalleryState {
	if adcg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adcg.Type(), adcg.LocalName()))
	}
	return adcg.state
}

// Args contains the configurations for azurerm_dev_center_gallery.
type Args struct {
	// DevCenterId: string, required
	DevCenterId terra.StringValue `hcl:"dev_center_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SharedGalleryId: string, required
	SharedGalleryId terra.StringValue `hcl:"shared_gallery_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDevCenterGalleryAttributes struct {
	ref terra.Reference
}

// DevCenterId returns a reference to field dev_center_id of azurerm_dev_center_gallery.
func (adcg azurermDevCenterGalleryAttributes) DevCenterId() terra.StringValue {
	return terra.ReferenceAsString(adcg.ref.Append("dev_center_id"))
}

// Id returns a reference to field id of azurerm_dev_center_gallery.
func (adcg azurermDevCenterGalleryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adcg.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_dev_center_gallery.
func (adcg azurermDevCenterGalleryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adcg.ref.Append("name"))
}

// SharedGalleryId returns a reference to field shared_gallery_id of azurerm_dev_center_gallery.
func (adcg azurermDevCenterGalleryAttributes) SharedGalleryId() terra.StringValue {
	return terra.ReferenceAsString(adcg.ref.Append("shared_gallery_id"))
}

func (adcg azurermDevCenterGalleryAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adcg.ref.Append("timeouts"))
}

type azurermDevCenterGalleryState struct {
	DevCenterId     string         `json:"dev_center_id"`
	Id              string         `json:"id"`
	Name            string         `json:"name"`
	SharedGalleryId string         `json:"shared_gallery_id"`
	Timeouts        *TimeoutsState `json:"timeouts"`
}
