// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_batch_application

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_batch_application.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aba *DataSource) DataSource() string {
	return "azurerm_batch_application"
}

// LocalName returns the local name for [DataSource].
func (aba *DataSource) LocalName() string {
	return aba.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aba *DataSource) Configuration() interface{} {
	return aba.Args
}

// Attributes returns the attributes for [DataSource].
func (aba *DataSource) Attributes() dataAzurermBatchApplicationAttributes {
	return dataAzurermBatchApplicationAttributes{ref: terra.ReferenceDataSource(aba)}
}

// DataArgs contains the configurations for azurerm_batch_application.
type DataArgs struct {
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermBatchApplicationAttributes struct {
	ref terra.Reference
}

// AccountName returns a reference to field account_name of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(aba.ref.Append("account_name"))
}

// AllowUpdates returns a reference to field allow_updates of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) AllowUpdates() terra.BoolValue {
	return terra.ReferenceAsBool(aba.ref.Append("allow_updates"))
}

// DefaultVersion returns a reference to field default_version of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) DefaultVersion() terra.StringValue {
	return terra.ReferenceAsString(aba.ref.Append("default_version"))
}

// DisplayName returns a reference to field display_name of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aba.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aba.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aba.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_batch_application.
func (aba dataAzurermBatchApplicationAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aba.ref.Append("resource_group_name"))
}

func (aba dataAzurermBatchApplicationAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aba.ref.Append("timeouts"))
}
