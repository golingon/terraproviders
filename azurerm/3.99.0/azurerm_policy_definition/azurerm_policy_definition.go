// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_policy_definition

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_policy_definition.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPolicyDefinitionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apd *Resource) Type() string {
	return "azurerm_policy_definition"
}

// LocalName returns the local name for [Resource].
func (apd *Resource) LocalName() string {
	return apd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apd *Resource) Configuration() interface{} {
	return apd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apd *Resource) Dependencies() terra.Dependencies {
	return apd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apd *Resource) LifecycleManagement() *terra.Lifecycle {
	return apd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apd *Resource) Attributes() azurermPolicyDefinitionAttributes {
	return azurermPolicyDefinitionAttributes{ref: terra.ReferenceResource(apd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apd *Resource) ImportState(state io.Reader) error {
	apd.state = &azurermPolicyDefinitionState{}
	if err := json.NewDecoder(state).Decode(apd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apd.Type(), apd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apd *Resource) State() (*azurermPolicyDefinitionState, bool) {
	return apd.state, apd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apd *Resource) StateMust() *azurermPolicyDefinitionState {
	if apd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apd.Type(), apd.LocalName()))
	}
	return apd.state
}

// Args contains the configurations for azurerm_policy_definition.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagementGroupId: string, optional
	ManagementGroupId terra.StringValue `hcl:"management_group_id,attr"`
	// Metadata: string, optional
	Metadata terra.StringValue `hcl:"metadata,attr"`
	// Mode: string, required
	Mode terra.StringValue `hcl:"mode,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: string, optional
	Parameters terra.StringValue `hcl:"parameters,attr"`
	// PolicyRule: string, optional
	PolicyRule terra.StringValue `hcl:"policy_rule,attr"`
	// PolicyType: string, required
	PolicyType terra.StringValue `hcl:"policy_type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPolicyDefinitionAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("id"))
}

// ManagementGroupId returns a reference to field management_group_id of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) ManagementGroupId() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("management_group_id"))
}

// Metadata returns a reference to field metadata of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) Metadata() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("metadata"))
}

// Mode returns a reference to field mode of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("mode"))
}

// Name returns a reference to field name of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("name"))
}

// Parameters returns a reference to field parameters of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) Parameters() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("parameters"))
}

// PolicyRule returns a reference to field policy_rule of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) PolicyRule() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("policy_rule"))
}

// PolicyType returns a reference to field policy_type of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) PolicyType() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("policy_type"))
}

// RoleDefinitionIds returns a reference to field role_definition_ids of azurerm_policy_definition.
func (apd azurermPolicyDefinitionAttributes) RoleDefinitionIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](apd.ref.Append("role_definition_ids"))
}

func (apd azurermPolicyDefinitionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apd.ref.Append("timeouts"))
}

type azurermPolicyDefinitionState struct {
	Description       string         `json:"description"`
	DisplayName       string         `json:"display_name"`
	Id                string         `json:"id"`
	ManagementGroupId string         `json:"management_group_id"`
	Metadata          string         `json:"metadata"`
	Mode              string         `json:"mode"`
	Name              string         `json:"name"`
	Parameters        string         `json:"parameters"`
	PolicyRule        string         `json:"policy_rule"`
	PolicyType        string         `json:"policy_type"`
	RoleDefinitionIds []string       `json:"role_definition_ids"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
