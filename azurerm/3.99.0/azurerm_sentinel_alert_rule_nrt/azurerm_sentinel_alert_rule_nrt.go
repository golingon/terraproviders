// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_sentinel_alert_rule_nrt

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_sentinel_alert_rule_nrt.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSentinelAlertRuleNrtState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asarn *Resource) Type() string {
	return "azurerm_sentinel_alert_rule_nrt"
}

// LocalName returns the local name for [Resource].
func (asarn *Resource) LocalName() string {
	return asarn.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asarn *Resource) Configuration() interface{} {
	return asarn.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asarn *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asarn)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asarn *Resource) Dependencies() terra.Dependencies {
	return asarn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asarn *Resource) LifecycleManagement() *terra.Lifecycle {
	return asarn.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asarn *Resource) Attributes() azurermSentinelAlertRuleNrtAttributes {
	return azurermSentinelAlertRuleNrtAttributes{ref: terra.ReferenceResource(asarn)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asarn *Resource) ImportState(state io.Reader) error {
	asarn.state = &azurermSentinelAlertRuleNrtState{}
	if err := json.NewDecoder(state).Decode(asarn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asarn.Type(), asarn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asarn *Resource) State() (*azurermSentinelAlertRuleNrtState, bool) {
	return asarn.state, asarn.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asarn *Resource) StateMust() *azurermSentinelAlertRuleNrtState {
	if asarn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asarn.Type(), asarn.LocalName()))
	}
	return asarn.state
}

// Args contains the configurations for azurerm_sentinel_alert_rule_nrt.
type Args struct {
	// AlertRuleTemplateGuid: string, optional
	AlertRuleTemplateGuid terra.StringValue `hcl:"alert_rule_template_guid,attr"`
	// AlertRuleTemplateVersion: string, optional
	AlertRuleTemplateVersion terra.StringValue `hcl:"alert_rule_template_version,attr"`
	// CustomDetails: map of string, optional
	CustomDetails terra.MapValue[terra.StringValue] `hcl:"custom_details,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Query: string, required
	Query terra.StringValue `hcl:"query,attr" validate:"required"`
	// Severity: string, required
	Severity terra.StringValue `hcl:"severity,attr" validate:"required"`
	// SuppressionDuration: string, optional
	SuppressionDuration terra.StringValue `hcl:"suppression_duration,attr"`
	// SuppressionEnabled: bool, optional
	SuppressionEnabled terra.BoolValue `hcl:"suppression_enabled,attr"`
	// Tactics: set of string, optional
	Tactics terra.SetValue[terra.StringValue] `hcl:"tactics,attr"`
	// Techniques: set of string, optional
	Techniques terra.SetValue[terra.StringValue] `hcl:"techniques,attr"`
	// AlertDetailsOverride: min=0
	AlertDetailsOverride []AlertDetailsOverride `hcl:"alert_details_override,block" validate:"min=0"`
	// EntityMapping: min=0,max=5
	EntityMapping []EntityMapping `hcl:"entity_mapping,block" validate:"min=0,max=5"`
	// EventGrouping: optional
	EventGrouping *EventGrouping `hcl:"event_grouping,block"`
	// Incident: optional
	Incident *Incident `hcl:"incident,block"`
	// SentinelEntityMapping: min=0,max=5
	SentinelEntityMapping []SentinelEntityMapping `hcl:"sentinel_entity_mapping,block" validate:"min=0,max=5"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSentinelAlertRuleNrtAttributes struct {
	ref terra.Reference
}

// AlertRuleTemplateGuid returns a reference to field alert_rule_template_guid of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) AlertRuleTemplateGuid() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("alert_rule_template_guid"))
}

// AlertRuleTemplateVersion returns a reference to field alert_rule_template_version of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) AlertRuleTemplateVersion() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("alert_rule_template_version"))
}

// CustomDetails returns a reference to field custom_details of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) CustomDetails() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asarn.ref.Append("custom_details"))
}

// Description returns a reference to field description of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("display_name"))
}

// Enabled returns a reference to field enabled of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(asarn.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("id"))
}

// LogAnalyticsWorkspaceId returns a reference to field log_analytics_workspace_id of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("log_analytics_workspace_id"))
}

// Name returns a reference to field name of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("name"))
}

// Query returns a reference to field query of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Query() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("query"))
}

// Severity returns a reference to field severity of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Severity() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("severity"))
}

// SuppressionDuration returns a reference to field suppression_duration of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) SuppressionDuration() terra.StringValue {
	return terra.ReferenceAsString(asarn.ref.Append("suppression_duration"))
}

// SuppressionEnabled returns a reference to field suppression_enabled of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) SuppressionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asarn.ref.Append("suppression_enabled"))
}

// Tactics returns a reference to field tactics of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Tactics() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asarn.ref.Append("tactics"))
}

// Techniques returns a reference to field techniques of azurerm_sentinel_alert_rule_nrt.
func (asarn azurermSentinelAlertRuleNrtAttributes) Techniques() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asarn.ref.Append("techniques"))
}

func (asarn azurermSentinelAlertRuleNrtAttributes) AlertDetailsOverride() terra.ListValue[AlertDetailsOverrideAttributes] {
	return terra.ReferenceAsList[AlertDetailsOverrideAttributes](asarn.ref.Append("alert_details_override"))
}

func (asarn azurermSentinelAlertRuleNrtAttributes) EntityMapping() terra.ListValue[EntityMappingAttributes] {
	return terra.ReferenceAsList[EntityMappingAttributes](asarn.ref.Append("entity_mapping"))
}

func (asarn azurermSentinelAlertRuleNrtAttributes) EventGrouping() terra.ListValue[EventGroupingAttributes] {
	return terra.ReferenceAsList[EventGroupingAttributes](asarn.ref.Append("event_grouping"))
}

func (asarn azurermSentinelAlertRuleNrtAttributes) Incident() terra.ListValue[IncidentAttributes] {
	return terra.ReferenceAsList[IncidentAttributes](asarn.ref.Append("incident"))
}

func (asarn azurermSentinelAlertRuleNrtAttributes) SentinelEntityMapping() terra.ListValue[SentinelEntityMappingAttributes] {
	return terra.ReferenceAsList[SentinelEntityMappingAttributes](asarn.ref.Append("sentinel_entity_mapping"))
}

func (asarn azurermSentinelAlertRuleNrtAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asarn.ref.Append("timeouts"))
}

type azurermSentinelAlertRuleNrtState struct {
	AlertRuleTemplateGuid    string                       `json:"alert_rule_template_guid"`
	AlertRuleTemplateVersion string                       `json:"alert_rule_template_version"`
	CustomDetails            map[string]string            `json:"custom_details"`
	Description              string                       `json:"description"`
	DisplayName              string                       `json:"display_name"`
	Enabled                  bool                         `json:"enabled"`
	Id                       string                       `json:"id"`
	LogAnalyticsWorkspaceId  string                       `json:"log_analytics_workspace_id"`
	Name                     string                       `json:"name"`
	Query                    string                       `json:"query"`
	Severity                 string                       `json:"severity"`
	SuppressionDuration      string                       `json:"suppression_duration"`
	SuppressionEnabled       bool                         `json:"suppression_enabled"`
	Tactics                  []string                     `json:"tactics"`
	Techniques               []string                     `json:"techniques"`
	AlertDetailsOverride     []AlertDetailsOverrideState  `json:"alert_details_override"`
	EntityMapping            []EntityMappingState         `json:"entity_mapping"`
	EventGrouping            []EventGroupingState         `json:"event_grouping"`
	Incident                 []IncidentState              `json:"incident"`
	SentinelEntityMapping    []SentinelEntityMappingState `json:"sentinel_entity_mapping"`
	Timeouts                 *TimeoutsState               `json:"timeouts"`
}
