// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_diagnostic_categories

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_monitor_diagnostic_categories.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (amdc *DataSource) DataSource() string {
	return "azurerm_monitor_diagnostic_categories"
}

// LocalName returns the local name for [DataSource].
func (amdc *DataSource) LocalName() string {
	return amdc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (amdc *DataSource) Configuration() interface{} {
	return amdc.Args
}

// Attributes returns the attributes for [DataSource].
func (amdc *DataSource) Attributes() dataAzurermMonitorDiagnosticCategoriesAttributes {
	return dataAzurermMonitorDiagnosticCategoriesAttributes{ref: terra.ReferenceDataSource(amdc)}
}

// DataArgs contains the configurations for azurerm_monitor_diagnostic_categories.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceId: string, required
	ResourceId terra.StringValue `hcl:"resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermMonitorDiagnosticCategoriesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_monitor_diagnostic_categories.
func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amdc.ref.Append("id"))
}

// LogCategoryGroups returns a reference to field log_category_groups of azurerm_monitor_diagnostic_categories.
func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) LogCategoryGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amdc.ref.Append("log_category_groups"))
}

// LogCategoryTypes returns a reference to field log_category_types of azurerm_monitor_diagnostic_categories.
func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) LogCategoryTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amdc.ref.Append("log_category_types"))
}

// Logs returns a reference to field logs of azurerm_monitor_diagnostic_categories.
func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) Logs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amdc.ref.Append("logs"))
}

// Metrics returns a reference to field metrics of azurerm_monitor_diagnostic_categories.
func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) Metrics() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amdc.ref.Append("metrics"))
}

// ResourceId returns a reference to field resource_id of azurerm_monitor_diagnostic_categories.
func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(amdc.ref.Append("resource_id"))
}

func (amdc dataAzurermMonitorDiagnosticCategoriesAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](amdc.ref.Append("timeouts"))
}
