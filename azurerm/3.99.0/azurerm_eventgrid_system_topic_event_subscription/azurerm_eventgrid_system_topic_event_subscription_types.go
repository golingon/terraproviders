// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_eventgrid_system_topic_event_subscription

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AdvancedFilter struct {
	// AdvancedFilterBoolEquals: min=0
	BoolEquals []AdvancedFilterBoolEquals `hcl:"bool_equals,block" validate:"min=0"`
	// AdvancedFilterIsNotNull: min=0
	IsNotNull []AdvancedFilterIsNotNull `hcl:"is_not_null,block" validate:"min=0"`
	// AdvancedFilterIsNullOrUndefined: min=0
	IsNullOrUndefined []AdvancedFilterIsNullOrUndefined `hcl:"is_null_or_undefined,block" validate:"min=0"`
	// AdvancedFilterNumberGreaterThan: min=0
	NumberGreaterThan []AdvancedFilterNumberGreaterThan `hcl:"number_greater_than,block" validate:"min=0"`
	// AdvancedFilterNumberGreaterThanOrEquals: min=0
	NumberGreaterThanOrEquals []AdvancedFilterNumberGreaterThanOrEquals `hcl:"number_greater_than_or_equals,block" validate:"min=0"`
	// AdvancedFilterNumberIn: min=0
	NumberIn []AdvancedFilterNumberIn `hcl:"number_in,block" validate:"min=0"`
	// AdvancedFilterNumberInRange: min=0
	NumberInRange []AdvancedFilterNumberInRange `hcl:"number_in_range,block" validate:"min=0"`
	// AdvancedFilterNumberLessThan: min=0
	NumberLessThan []AdvancedFilterNumberLessThan `hcl:"number_less_than,block" validate:"min=0"`
	// AdvancedFilterNumberLessThanOrEquals: min=0
	NumberLessThanOrEquals []AdvancedFilterNumberLessThanOrEquals `hcl:"number_less_than_or_equals,block" validate:"min=0"`
	// AdvancedFilterNumberNotIn: min=0
	NumberNotIn []AdvancedFilterNumberNotIn `hcl:"number_not_in,block" validate:"min=0"`
	// AdvancedFilterNumberNotInRange: min=0
	NumberNotInRange []AdvancedFilterNumberNotInRange `hcl:"number_not_in_range,block" validate:"min=0"`
	// AdvancedFilterStringBeginsWith: min=0
	StringBeginsWith []AdvancedFilterStringBeginsWith `hcl:"string_begins_with,block" validate:"min=0"`
	// AdvancedFilterStringContains: min=0
	StringContains []AdvancedFilterStringContains `hcl:"string_contains,block" validate:"min=0"`
	// AdvancedFilterStringEndsWith: min=0
	StringEndsWith []AdvancedFilterStringEndsWith `hcl:"string_ends_with,block" validate:"min=0"`
	// AdvancedFilterStringIn: min=0
	StringIn []AdvancedFilterStringIn `hcl:"string_in,block" validate:"min=0"`
	// AdvancedFilterStringNotBeginsWith: min=0
	StringNotBeginsWith []AdvancedFilterStringNotBeginsWith `hcl:"string_not_begins_with,block" validate:"min=0"`
	// AdvancedFilterStringNotContains: min=0
	StringNotContains []AdvancedFilterStringNotContains `hcl:"string_not_contains,block" validate:"min=0"`
	// AdvancedFilterStringNotEndsWith: min=0
	StringNotEndsWith []AdvancedFilterStringNotEndsWith `hcl:"string_not_ends_with,block" validate:"min=0"`
	// AdvancedFilterStringNotIn: min=0
	StringNotIn []AdvancedFilterStringNotIn `hcl:"string_not_in,block" validate:"min=0"`
}

type AdvancedFilterBoolEquals struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: bool, required
	Value terra.BoolValue `hcl:"value,attr" validate:"required"`
}

type AdvancedFilterIsNotNull struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type AdvancedFilterIsNullOrUndefined struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type AdvancedFilterNumberGreaterThan struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type AdvancedFilterNumberGreaterThanOrEquals struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type AdvancedFilterNumberIn struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of number, required
	Values terra.ListValue[terra.NumberValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterNumberInRange struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of list of number, required
	Values terra.ListValue[terra.ListValue[terra.NumberValue]] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterNumberLessThan struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type AdvancedFilterNumberLessThanOrEquals struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: number, required
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type AdvancedFilterNumberNotIn struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of number, required
	Values terra.ListValue[terra.NumberValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterNumberNotInRange struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of list of number, required
	Values terra.ListValue[terra.ListValue[terra.NumberValue]] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringBeginsWith struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringContains struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringEndsWith struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringIn struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringNotBeginsWith struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringNotContains struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringNotEndsWith struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AdvancedFilterStringNotIn struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values: list of string, required
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type AzureFunctionEndpoint struct {
	// FunctionId: string, required
	FunctionId terra.StringValue `hcl:"function_id,attr" validate:"required"`
	// MaxEventsPerBatch: number, optional
	MaxEventsPerBatch terra.NumberValue `hcl:"max_events_per_batch,attr"`
	// PreferredBatchSizeInKilobytes: number, optional
	PreferredBatchSizeInKilobytes terra.NumberValue `hcl:"preferred_batch_size_in_kilobytes,attr"`
}

type DeadLetterIdentity struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// UserAssignedIdentity: string, optional
	UserAssignedIdentity terra.StringValue `hcl:"user_assigned_identity,attr"`
}

type DeliveryIdentity struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// UserAssignedIdentity: string, optional
	UserAssignedIdentity terra.StringValue `hcl:"user_assigned_identity,attr"`
}

type DeliveryProperty struct {
	// HeaderName: string, required
	HeaderName terra.StringValue `hcl:"header_name,attr" validate:"required"`
	// Secret: bool, optional
	Secret terra.BoolValue `hcl:"secret,attr"`
	// SourceField: string, optional
	SourceField terra.StringValue `hcl:"source_field,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RetryPolicy struct {
	// EventTimeToLive: number, required
	EventTimeToLive terra.NumberValue `hcl:"event_time_to_live,attr" validate:"required"`
	// MaxDeliveryAttempts: number, required
	MaxDeliveryAttempts terra.NumberValue `hcl:"max_delivery_attempts,attr" validate:"required"`
}

type StorageBlobDeadLetterDestination struct {
	// StorageAccountId: string, required
	StorageAccountId terra.StringValue `hcl:"storage_account_id,attr" validate:"required"`
	// StorageBlobContainerName: string, required
	StorageBlobContainerName terra.StringValue `hcl:"storage_blob_container_name,attr" validate:"required"`
}

type StorageQueueEndpoint struct {
	// QueueMessageTimeToLiveInSeconds: number, optional
	QueueMessageTimeToLiveInSeconds terra.NumberValue `hcl:"queue_message_time_to_live_in_seconds,attr"`
	// QueueName: string, required
	QueueName terra.StringValue `hcl:"queue_name,attr" validate:"required"`
	// StorageAccountId: string, required
	StorageAccountId terra.StringValue `hcl:"storage_account_id,attr" validate:"required"`
}

type SubjectFilter struct {
	// CaseSensitive: bool, optional
	CaseSensitive terra.BoolValue `hcl:"case_sensitive,attr"`
	// SubjectBeginsWith: string, optional
	SubjectBeginsWith terra.StringValue `hcl:"subject_begins_with,attr"`
	// SubjectEndsWith: string, optional
	SubjectEndsWith terra.StringValue `hcl:"subject_ends_with,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type WebhookEndpoint struct {
	// ActiveDirectoryAppIdOrUri: string, optional
	ActiveDirectoryAppIdOrUri terra.StringValue `hcl:"active_directory_app_id_or_uri,attr"`
	// ActiveDirectoryTenantId: string, optional
	ActiveDirectoryTenantId terra.StringValue `hcl:"active_directory_tenant_id,attr"`
	// MaxEventsPerBatch: number, optional
	MaxEventsPerBatch terra.NumberValue `hcl:"max_events_per_batch,attr"`
	// PreferredBatchSizeInKilobytes: number, optional
	PreferredBatchSizeInKilobytes terra.NumberValue `hcl:"preferred_batch_size_in_kilobytes,attr"`
	// Url: string, required
	Url terra.StringValue `hcl:"url,attr" validate:"required"`
}

type AdvancedFilterAttributes struct {
	ref terra.Reference
}

func (af AdvancedFilterAttributes) InternalRef() (terra.Reference, error) {
	return af.ref, nil
}

func (af AdvancedFilterAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterAttributes {
	return AdvancedFilterAttributes{ref: ref}
}

func (af AdvancedFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return af.ref.InternalTokens()
}

func (af AdvancedFilterAttributes) BoolEquals() terra.ListValue[AdvancedFilterBoolEqualsAttributes] {
	return terra.ReferenceAsList[AdvancedFilterBoolEqualsAttributes](af.ref.Append("bool_equals"))
}

func (af AdvancedFilterAttributes) IsNotNull() terra.ListValue[AdvancedFilterIsNotNullAttributes] {
	return terra.ReferenceAsList[AdvancedFilterIsNotNullAttributes](af.ref.Append("is_not_null"))
}

func (af AdvancedFilterAttributes) IsNullOrUndefined() terra.ListValue[AdvancedFilterIsNullOrUndefinedAttributes] {
	return terra.ReferenceAsList[AdvancedFilterIsNullOrUndefinedAttributes](af.ref.Append("is_null_or_undefined"))
}

func (af AdvancedFilterAttributes) NumberGreaterThan() terra.ListValue[AdvancedFilterNumberGreaterThanAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberGreaterThanAttributes](af.ref.Append("number_greater_than"))
}

func (af AdvancedFilterAttributes) NumberGreaterThanOrEquals() terra.ListValue[AdvancedFilterNumberGreaterThanOrEqualsAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberGreaterThanOrEqualsAttributes](af.ref.Append("number_greater_than_or_equals"))
}

func (af AdvancedFilterAttributes) NumberIn() terra.ListValue[AdvancedFilterNumberInAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberInAttributes](af.ref.Append("number_in"))
}

func (af AdvancedFilterAttributes) NumberInRange() terra.ListValue[AdvancedFilterNumberInRangeAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberInRangeAttributes](af.ref.Append("number_in_range"))
}

func (af AdvancedFilterAttributes) NumberLessThan() terra.ListValue[AdvancedFilterNumberLessThanAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberLessThanAttributes](af.ref.Append("number_less_than"))
}

func (af AdvancedFilterAttributes) NumberLessThanOrEquals() terra.ListValue[AdvancedFilterNumberLessThanOrEqualsAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberLessThanOrEqualsAttributes](af.ref.Append("number_less_than_or_equals"))
}

func (af AdvancedFilterAttributes) NumberNotIn() terra.ListValue[AdvancedFilterNumberNotInAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberNotInAttributes](af.ref.Append("number_not_in"))
}

func (af AdvancedFilterAttributes) NumberNotInRange() terra.ListValue[AdvancedFilterNumberNotInRangeAttributes] {
	return terra.ReferenceAsList[AdvancedFilterNumberNotInRangeAttributes](af.ref.Append("number_not_in_range"))
}

func (af AdvancedFilterAttributes) StringBeginsWith() terra.ListValue[AdvancedFilterStringBeginsWithAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringBeginsWithAttributes](af.ref.Append("string_begins_with"))
}

func (af AdvancedFilterAttributes) StringContains() terra.ListValue[AdvancedFilterStringContainsAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringContainsAttributes](af.ref.Append("string_contains"))
}

func (af AdvancedFilterAttributes) StringEndsWith() terra.ListValue[AdvancedFilterStringEndsWithAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringEndsWithAttributes](af.ref.Append("string_ends_with"))
}

func (af AdvancedFilterAttributes) StringIn() terra.ListValue[AdvancedFilterStringInAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringInAttributes](af.ref.Append("string_in"))
}

func (af AdvancedFilterAttributes) StringNotBeginsWith() terra.ListValue[AdvancedFilterStringNotBeginsWithAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringNotBeginsWithAttributes](af.ref.Append("string_not_begins_with"))
}

func (af AdvancedFilterAttributes) StringNotContains() terra.ListValue[AdvancedFilterStringNotContainsAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringNotContainsAttributes](af.ref.Append("string_not_contains"))
}

func (af AdvancedFilterAttributes) StringNotEndsWith() terra.ListValue[AdvancedFilterStringNotEndsWithAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringNotEndsWithAttributes](af.ref.Append("string_not_ends_with"))
}

func (af AdvancedFilterAttributes) StringNotIn() terra.ListValue[AdvancedFilterStringNotInAttributes] {
	return terra.ReferenceAsList[AdvancedFilterStringNotInAttributes](af.ref.Append("string_not_in"))
}

type AdvancedFilterBoolEqualsAttributes struct {
	ref terra.Reference
}

func (be AdvancedFilterBoolEqualsAttributes) InternalRef() (terra.Reference, error) {
	return be.ref, nil
}

func (be AdvancedFilterBoolEqualsAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterBoolEqualsAttributes {
	return AdvancedFilterBoolEqualsAttributes{ref: ref}
}

func (be AdvancedFilterBoolEqualsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return be.ref.InternalTokens()
}

func (be AdvancedFilterBoolEqualsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("key"))
}

func (be AdvancedFilterBoolEqualsAttributes) Value() terra.BoolValue {
	return terra.ReferenceAsBool(be.ref.Append("value"))
}

type AdvancedFilterIsNotNullAttributes struct {
	ref terra.Reference
}

func (inn AdvancedFilterIsNotNullAttributes) InternalRef() (terra.Reference, error) {
	return inn.ref, nil
}

func (inn AdvancedFilterIsNotNullAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterIsNotNullAttributes {
	return AdvancedFilterIsNotNullAttributes{ref: ref}
}

func (inn AdvancedFilterIsNotNullAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return inn.ref.InternalTokens()
}

func (inn AdvancedFilterIsNotNullAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(inn.ref.Append("key"))
}

type AdvancedFilterIsNullOrUndefinedAttributes struct {
	ref terra.Reference
}

func (inou AdvancedFilterIsNullOrUndefinedAttributes) InternalRef() (terra.Reference, error) {
	return inou.ref, nil
}

func (inou AdvancedFilterIsNullOrUndefinedAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterIsNullOrUndefinedAttributes {
	return AdvancedFilterIsNullOrUndefinedAttributes{ref: ref}
}

func (inou AdvancedFilterIsNullOrUndefinedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return inou.ref.InternalTokens()
}

func (inou AdvancedFilterIsNullOrUndefinedAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(inou.ref.Append("key"))
}

type AdvancedFilterNumberGreaterThanAttributes struct {
	ref terra.Reference
}

func (ngt AdvancedFilterNumberGreaterThanAttributes) InternalRef() (terra.Reference, error) {
	return ngt.ref, nil
}

func (ngt AdvancedFilterNumberGreaterThanAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberGreaterThanAttributes {
	return AdvancedFilterNumberGreaterThanAttributes{ref: ref}
}

func (ngt AdvancedFilterNumberGreaterThanAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ngt.ref.InternalTokens()
}

func (ngt AdvancedFilterNumberGreaterThanAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ngt.ref.Append("key"))
}

func (ngt AdvancedFilterNumberGreaterThanAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(ngt.ref.Append("value"))
}

type AdvancedFilterNumberGreaterThanOrEqualsAttributes struct {
	ref terra.Reference
}

func (ngtoe AdvancedFilterNumberGreaterThanOrEqualsAttributes) InternalRef() (terra.Reference, error) {
	return ngtoe.ref, nil
}

func (ngtoe AdvancedFilterNumberGreaterThanOrEqualsAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberGreaterThanOrEqualsAttributes {
	return AdvancedFilterNumberGreaterThanOrEqualsAttributes{ref: ref}
}

func (ngtoe AdvancedFilterNumberGreaterThanOrEqualsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ngtoe.ref.InternalTokens()
}

func (ngtoe AdvancedFilterNumberGreaterThanOrEqualsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ngtoe.ref.Append("key"))
}

func (ngtoe AdvancedFilterNumberGreaterThanOrEqualsAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(ngtoe.ref.Append("value"))
}

type AdvancedFilterNumberInAttributes struct {
	ref terra.Reference
}

func (ni AdvancedFilterNumberInAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni AdvancedFilterNumberInAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberInAttributes {
	return AdvancedFilterNumberInAttributes{ref: ref}
}

func (ni AdvancedFilterNumberInAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ni.ref.InternalTokens()
}

func (ni AdvancedFilterNumberInAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("key"))
}

func (ni AdvancedFilterNumberInAttributes) Values() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](ni.ref.Append("values"))
}

type AdvancedFilterNumberInRangeAttributes struct {
	ref terra.Reference
}

func (nir AdvancedFilterNumberInRangeAttributes) InternalRef() (terra.Reference, error) {
	return nir.ref, nil
}

func (nir AdvancedFilterNumberInRangeAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberInRangeAttributes {
	return AdvancedFilterNumberInRangeAttributes{ref: ref}
}

func (nir AdvancedFilterNumberInRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nir.ref.InternalTokens()
}

func (nir AdvancedFilterNumberInRangeAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(nir.ref.Append("key"))
}

func (nir AdvancedFilterNumberInRangeAttributes) Values() terra.ListValue[terra.ListValue[terra.NumberValue]] {
	return terra.ReferenceAsList[terra.ListValue[terra.NumberValue]](nir.ref.Append("values"))
}

type AdvancedFilterNumberLessThanAttributes struct {
	ref terra.Reference
}

func (nlt AdvancedFilterNumberLessThanAttributes) InternalRef() (terra.Reference, error) {
	return nlt.ref, nil
}

func (nlt AdvancedFilterNumberLessThanAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberLessThanAttributes {
	return AdvancedFilterNumberLessThanAttributes{ref: ref}
}

func (nlt AdvancedFilterNumberLessThanAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nlt.ref.InternalTokens()
}

func (nlt AdvancedFilterNumberLessThanAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(nlt.ref.Append("key"))
}

func (nlt AdvancedFilterNumberLessThanAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(nlt.ref.Append("value"))
}

type AdvancedFilterNumberLessThanOrEqualsAttributes struct {
	ref terra.Reference
}

func (nltoe AdvancedFilterNumberLessThanOrEqualsAttributes) InternalRef() (terra.Reference, error) {
	return nltoe.ref, nil
}

func (nltoe AdvancedFilterNumberLessThanOrEqualsAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberLessThanOrEqualsAttributes {
	return AdvancedFilterNumberLessThanOrEqualsAttributes{ref: ref}
}

func (nltoe AdvancedFilterNumberLessThanOrEqualsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nltoe.ref.InternalTokens()
}

func (nltoe AdvancedFilterNumberLessThanOrEqualsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(nltoe.ref.Append("key"))
}

func (nltoe AdvancedFilterNumberLessThanOrEqualsAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(nltoe.ref.Append("value"))
}

type AdvancedFilterNumberNotInAttributes struct {
	ref terra.Reference
}

func (nni AdvancedFilterNumberNotInAttributes) InternalRef() (terra.Reference, error) {
	return nni.ref, nil
}

func (nni AdvancedFilterNumberNotInAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberNotInAttributes {
	return AdvancedFilterNumberNotInAttributes{ref: ref}
}

func (nni AdvancedFilterNumberNotInAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nni.ref.InternalTokens()
}

func (nni AdvancedFilterNumberNotInAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(nni.ref.Append("key"))
}

func (nni AdvancedFilterNumberNotInAttributes) Values() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](nni.ref.Append("values"))
}

type AdvancedFilterNumberNotInRangeAttributes struct {
	ref terra.Reference
}

func (nnir AdvancedFilterNumberNotInRangeAttributes) InternalRef() (terra.Reference, error) {
	return nnir.ref, nil
}

func (nnir AdvancedFilterNumberNotInRangeAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterNumberNotInRangeAttributes {
	return AdvancedFilterNumberNotInRangeAttributes{ref: ref}
}

func (nnir AdvancedFilterNumberNotInRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nnir.ref.InternalTokens()
}

func (nnir AdvancedFilterNumberNotInRangeAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(nnir.ref.Append("key"))
}

func (nnir AdvancedFilterNumberNotInRangeAttributes) Values() terra.ListValue[terra.ListValue[terra.NumberValue]] {
	return terra.ReferenceAsList[terra.ListValue[terra.NumberValue]](nnir.ref.Append("values"))
}

type AdvancedFilterStringBeginsWithAttributes struct {
	ref terra.Reference
}

func (sbw AdvancedFilterStringBeginsWithAttributes) InternalRef() (terra.Reference, error) {
	return sbw.ref, nil
}

func (sbw AdvancedFilterStringBeginsWithAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringBeginsWithAttributes {
	return AdvancedFilterStringBeginsWithAttributes{ref: ref}
}

func (sbw AdvancedFilterStringBeginsWithAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sbw.ref.InternalTokens()
}

func (sbw AdvancedFilterStringBeginsWithAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sbw.ref.Append("key"))
}

func (sbw AdvancedFilterStringBeginsWithAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sbw.ref.Append("values"))
}

type AdvancedFilterStringContainsAttributes struct {
	ref terra.Reference
}

func (sc AdvancedFilterStringContainsAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc AdvancedFilterStringContainsAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringContainsAttributes {
	return AdvancedFilterStringContainsAttributes{ref: ref}
}

func (sc AdvancedFilterStringContainsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc AdvancedFilterStringContainsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("key"))
}

func (sc AdvancedFilterStringContainsAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sc.ref.Append("values"))
}

type AdvancedFilterStringEndsWithAttributes struct {
	ref terra.Reference
}

func (sew AdvancedFilterStringEndsWithAttributes) InternalRef() (terra.Reference, error) {
	return sew.ref, nil
}

func (sew AdvancedFilterStringEndsWithAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringEndsWithAttributes {
	return AdvancedFilterStringEndsWithAttributes{ref: ref}
}

func (sew AdvancedFilterStringEndsWithAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sew.ref.InternalTokens()
}

func (sew AdvancedFilterStringEndsWithAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sew.ref.Append("key"))
}

func (sew AdvancedFilterStringEndsWithAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sew.ref.Append("values"))
}

type AdvancedFilterStringInAttributes struct {
	ref terra.Reference
}

func (si AdvancedFilterStringInAttributes) InternalRef() (terra.Reference, error) {
	return si.ref, nil
}

func (si AdvancedFilterStringInAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringInAttributes {
	return AdvancedFilterStringInAttributes{ref: ref}
}

func (si AdvancedFilterStringInAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return si.ref.InternalTokens()
}

func (si AdvancedFilterStringInAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("key"))
}

func (si AdvancedFilterStringInAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](si.ref.Append("values"))
}

type AdvancedFilterStringNotBeginsWithAttributes struct {
	ref terra.Reference
}

func (snbw AdvancedFilterStringNotBeginsWithAttributes) InternalRef() (terra.Reference, error) {
	return snbw.ref, nil
}

func (snbw AdvancedFilterStringNotBeginsWithAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringNotBeginsWithAttributes {
	return AdvancedFilterStringNotBeginsWithAttributes{ref: ref}
}

func (snbw AdvancedFilterStringNotBeginsWithAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return snbw.ref.InternalTokens()
}

func (snbw AdvancedFilterStringNotBeginsWithAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(snbw.ref.Append("key"))
}

func (snbw AdvancedFilterStringNotBeginsWithAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](snbw.ref.Append("values"))
}

type AdvancedFilterStringNotContainsAttributes struct {
	ref terra.Reference
}

func (snc AdvancedFilterStringNotContainsAttributes) InternalRef() (terra.Reference, error) {
	return snc.ref, nil
}

func (snc AdvancedFilterStringNotContainsAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringNotContainsAttributes {
	return AdvancedFilterStringNotContainsAttributes{ref: ref}
}

func (snc AdvancedFilterStringNotContainsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return snc.ref.InternalTokens()
}

func (snc AdvancedFilterStringNotContainsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(snc.ref.Append("key"))
}

func (snc AdvancedFilterStringNotContainsAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](snc.ref.Append("values"))
}

type AdvancedFilterStringNotEndsWithAttributes struct {
	ref terra.Reference
}

func (snew AdvancedFilterStringNotEndsWithAttributes) InternalRef() (terra.Reference, error) {
	return snew.ref, nil
}

func (snew AdvancedFilterStringNotEndsWithAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringNotEndsWithAttributes {
	return AdvancedFilterStringNotEndsWithAttributes{ref: ref}
}

func (snew AdvancedFilterStringNotEndsWithAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return snew.ref.InternalTokens()
}

func (snew AdvancedFilterStringNotEndsWithAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(snew.ref.Append("key"))
}

func (snew AdvancedFilterStringNotEndsWithAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](snew.ref.Append("values"))
}

type AdvancedFilterStringNotInAttributes struct {
	ref terra.Reference
}

func (sni AdvancedFilterStringNotInAttributes) InternalRef() (terra.Reference, error) {
	return sni.ref, nil
}

func (sni AdvancedFilterStringNotInAttributes) InternalWithRef(ref terra.Reference) AdvancedFilterStringNotInAttributes {
	return AdvancedFilterStringNotInAttributes{ref: ref}
}

func (sni AdvancedFilterStringNotInAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sni.ref.InternalTokens()
}

func (sni AdvancedFilterStringNotInAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sni.ref.Append("key"))
}

func (sni AdvancedFilterStringNotInAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sni.ref.Append("values"))
}

type AzureFunctionEndpointAttributes struct {
	ref terra.Reference
}

func (afe AzureFunctionEndpointAttributes) InternalRef() (terra.Reference, error) {
	return afe.ref, nil
}

func (afe AzureFunctionEndpointAttributes) InternalWithRef(ref terra.Reference) AzureFunctionEndpointAttributes {
	return AzureFunctionEndpointAttributes{ref: ref}
}

func (afe AzureFunctionEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return afe.ref.InternalTokens()
}

func (afe AzureFunctionEndpointAttributes) FunctionId() terra.StringValue {
	return terra.ReferenceAsString(afe.ref.Append("function_id"))
}

func (afe AzureFunctionEndpointAttributes) MaxEventsPerBatch() terra.NumberValue {
	return terra.ReferenceAsNumber(afe.ref.Append("max_events_per_batch"))
}

func (afe AzureFunctionEndpointAttributes) PreferredBatchSizeInKilobytes() terra.NumberValue {
	return terra.ReferenceAsNumber(afe.ref.Append("preferred_batch_size_in_kilobytes"))
}

type DeadLetterIdentityAttributes struct {
	ref terra.Reference
}

func (dli DeadLetterIdentityAttributes) InternalRef() (terra.Reference, error) {
	return dli.ref, nil
}

func (dli DeadLetterIdentityAttributes) InternalWithRef(ref terra.Reference) DeadLetterIdentityAttributes {
	return DeadLetterIdentityAttributes{ref: ref}
}

func (dli DeadLetterIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dli.ref.InternalTokens()
}

func (dli DeadLetterIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dli.ref.Append("type"))
}

func (dli DeadLetterIdentityAttributes) UserAssignedIdentity() terra.StringValue {
	return terra.ReferenceAsString(dli.ref.Append("user_assigned_identity"))
}

type DeliveryIdentityAttributes struct {
	ref terra.Reference
}

func (di DeliveryIdentityAttributes) InternalRef() (terra.Reference, error) {
	return di.ref, nil
}

func (di DeliveryIdentityAttributes) InternalWithRef(ref terra.Reference) DeliveryIdentityAttributes {
	return DeliveryIdentityAttributes{ref: ref}
}

func (di DeliveryIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return di.ref.InternalTokens()
}

func (di DeliveryIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(di.ref.Append("type"))
}

func (di DeliveryIdentityAttributes) UserAssignedIdentity() terra.StringValue {
	return terra.ReferenceAsString(di.ref.Append("user_assigned_identity"))
}

type DeliveryPropertyAttributes struct {
	ref terra.Reference
}

func (dp DeliveryPropertyAttributes) InternalRef() (terra.Reference, error) {
	return dp.ref, nil
}

func (dp DeliveryPropertyAttributes) InternalWithRef(ref terra.Reference) DeliveryPropertyAttributes {
	return DeliveryPropertyAttributes{ref: ref}
}

func (dp DeliveryPropertyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dp.ref.InternalTokens()
}

func (dp DeliveryPropertyAttributes) HeaderName() terra.StringValue {
	return terra.ReferenceAsString(dp.ref.Append("header_name"))
}

func (dp DeliveryPropertyAttributes) Secret() terra.BoolValue {
	return terra.ReferenceAsBool(dp.ref.Append("secret"))
}

func (dp DeliveryPropertyAttributes) SourceField() terra.StringValue {
	return terra.ReferenceAsString(dp.ref.Append("source_field"))
}

func (dp DeliveryPropertyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dp.ref.Append("type"))
}

func (dp DeliveryPropertyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(dp.ref.Append("value"))
}

type RetryPolicyAttributes struct {
	ref terra.Reference
}

func (rp RetryPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp RetryPolicyAttributes) InternalWithRef(ref terra.Reference) RetryPolicyAttributes {
	return RetryPolicyAttributes{ref: ref}
}

func (rp RetryPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp RetryPolicyAttributes) EventTimeToLive() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("event_time_to_live"))
}

func (rp RetryPolicyAttributes) MaxDeliveryAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("max_delivery_attempts"))
}

type StorageBlobDeadLetterDestinationAttributes struct {
	ref terra.Reference
}

func (sbdld StorageBlobDeadLetterDestinationAttributes) InternalRef() (terra.Reference, error) {
	return sbdld.ref, nil
}

func (sbdld StorageBlobDeadLetterDestinationAttributes) InternalWithRef(ref terra.Reference) StorageBlobDeadLetterDestinationAttributes {
	return StorageBlobDeadLetterDestinationAttributes{ref: ref}
}

func (sbdld StorageBlobDeadLetterDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sbdld.ref.InternalTokens()
}

func (sbdld StorageBlobDeadLetterDestinationAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(sbdld.ref.Append("storage_account_id"))
}

func (sbdld StorageBlobDeadLetterDestinationAttributes) StorageBlobContainerName() terra.StringValue {
	return terra.ReferenceAsString(sbdld.ref.Append("storage_blob_container_name"))
}

type StorageQueueEndpointAttributes struct {
	ref terra.Reference
}

func (sqe StorageQueueEndpointAttributes) InternalRef() (terra.Reference, error) {
	return sqe.ref, nil
}

func (sqe StorageQueueEndpointAttributes) InternalWithRef(ref terra.Reference) StorageQueueEndpointAttributes {
	return StorageQueueEndpointAttributes{ref: ref}
}

func (sqe StorageQueueEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sqe.ref.InternalTokens()
}

func (sqe StorageQueueEndpointAttributes) QueueMessageTimeToLiveInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sqe.ref.Append("queue_message_time_to_live_in_seconds"))
}

func (sqe StorageQueueEndpointAttributes) QueueName() terra.StringValue {
	return terra.ReferenceAsString(sqe.ref.Append("queue_name"))
}

func (sqe StorageQueueEndpointAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(sqe.ref.Append("storage_account_id"))
}

type SubjectFilterAttributes struct {
	ref terra.Reference
}

func (sf SubjectFilterAttributes) InternalRef() (terra.Reference, error) {
	return sf.ref, nil
}

func (sf SubjectFilterAttributes) InternalWithRef(ref terra.Reference) SubjectFilterAttributes {
	return SubjectFilterAttributes{ref: ref}
}

func (sf SubjectFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sf.ref.InternalTokens()
}

func (sf SubjectFilterAttributes) CaseSensitive() terra.BoolValue {
	return terra.ReferenceAsBool(sf.ref.Append("case_sensitive"))
}

func (sf SubjectFilterAttributes) SubjectBeginsWith() terra.StringValue {
	return terra.ReferenceAsString(sf.ref.Append("subject_begins_with"))
}

func (sf SubjectFilterAttributes) SubjectEndsWith() terra.StringValue {
	return terra.ReferenceAsString(sf.ref.Append("subject_ends_with"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type WebhookEndpointAttributes struct {
	ref terra.Reference
}

func (we WebhookEndpointAttributes) InternalRef() (terra.Reference, error) {
	return we.ref, nil
}

func (we WebhookEndpointAttributes) InternalWithRef(ref terra.Reference) WebhookEndpointAttributes {
	return WebhookEndpointAttributes{ref: ref}
}

func (we WebhookEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return we.ref.InternalTokens()
}

func (we WebhookEndpointAttributes) ActiveDirectoryAppIdOrUri() terra.StringValue {
	return terra.ReferenceAsString(we.ref.Append("active_directory_app_id_or_uri"))
}

func (we WebhookEndpointAttributes) ActiveDirectoryTenantId() terra.StringValue {
	return terra.ReferenceAsString(we.ref.Append("active_directory_tenant_id"))
}

func (we WebhookEndpointAttributes) BaseUrl() terra.StringValue {
	return terra.ReferenceAsString(we.ref.Append("base_url"))
}

func (we WebhookEndpointAttributes) MaxEventsPerBatch() terra.NumberValue {
	return terra.ReferenceAsNumber(we.ref.Append("max_events_per_batch"))
}

func (we WebhookEndpointAttributes) PreferredBatchSizeInKilobytes() terra.NumberValue {
	return terra.ReferenceAsNumber(we.ref.Append("preferred_batch_size_in_kilobytes"))
}

func (we WebhookEndpointAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(we.ref.Append("url"))
}

type AdvancedFilterState struct {
	BoolEquals                []AdvancedFilterBoolEqualsState                `json:"bool_equals"`
	IsNotNull                 []AdvancedFilterIsNotNullState                 `json:"is_not_null"`
	IsNullOrUndefined         []AdvancedFilterIsNullOrUndefinedState         `json:"is_null_or_undefined"`
	NumberGreaterThan         []AdvancedFilterNumberGreaterThanState         `json:"number_greater_than"`
	NumberGreaterThanOrEquals []AdvancedFilterNumberGreaterThanOrEqualsState `json:"number_greater_than_or_equals"`
	NumberIn                  []AdvancedFilterNumberInState                  `json:"number_in"`
	NumberInRange             []AdvancedFilterNumberInRangeState             `json:"number_in_range"`
	NumberLessThan            []AdvancedFilterNumberLessThanState            `json:"number_less_than"`
	NumberLessThanOrEquals    []AdvancedFilterNumberLessThanOrEqualsState    `json:"number_less_than_or_equals"`
	NumberNotIn               []AdvancedFilterNumberNotInState               `json:"number_not_in"`
	NumberNotInRange          []AdvancedFilterNumberNotInRangeState          `json:"number_not_in_range"`
	StringBeginsWith          []AdvancedFilterStringBeginsWithState          `json:"string_begins_with"`
	StringContains            []AdvancedFilterStringContainsState            `json:"string_contains"`
	StringEndsWith            []AdvancedFilterStringEndsWithState            `json:"string_ends_with"`
	StringIn                  []AdvancedFilterStringInState                  `json:"string_in"`
	StringNotBeginsWith       []AdvancedFilterStringNotBeginsWithState       `json:"string_not_begins_with"`
	StringNotContains         []AdvancedFilterStringNotContainsState         `json:"string_not_contains"`
	StringNotEndsWith         []AdvancedFilterStringNotEndsWithState         `json:"string_not_ends_with"`
	StringNotIn               []AdvancedFilterStringNotInState               `json:"string_not_in"`
}

type AdvancedFilterBoolEqualsState struct {
	Key   string `json:"key"`
	Value bool   `json:"value"`
}

type AdvancedFilterIsNotNullState struct {
	Key string `json:"key"`
}

type AdvancedFilterIsNullOrUndefinedState struct {
	Key string `json:"key"`
}

type AdvancedFilterNumberGreaterThanState struct {
	Key   string  `json:"key"`
	Value float64 `json:"value"`
}

type AdvancedFilterNumberGreaterThanOrEqualsState struct {
	Key   string  `json:"key"`
	Value float64 `json:"value"`
}

type AdvancedFilterNumberInState struct {
	Key    string    `json:"key"`
	Values []float64 `json:"values"`
}

type AdvancedFilterNumberInRangeState struct {
	Key    string      `json:"key"`
	Values [][]float64 `json:"values"`
}

type AdvancedFilterNumberLessThanState struct {
	Key   string  `json:"key"`
	Value float64 `json:"value"`
}

type AdvancedFilterNumberLessThanOrEqualsState struct {
	Key   string  `json:"key"`
	Value float64 `json:"value"`
}

type AdvancedFilterNumberNotInState struct {
	Key    string    `json:"key"`
	Values []float64 `json:"values"`
}

type AdvancedFilterNumberNotInRangeState struct {
	Key    string      `json:"key"`
	Values [][]float64 `json:"values"`
}

type AdvancedFilterStringBeginsWithState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringContainsState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringEndsWithState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringInState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringNotBeginsWithState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringNotContainsState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringNotEndsWithState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AdvancedFilterStringNotInState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type AzureFunctionEndpointState struct {
	FunctionId                    string  `json:"function_id"`
	MaxEventsPerBatch             float64 `json:"max_events_per_batch"`
	PreferredBatchSizeInKilobytes float64 `json:"preferred_batch_size_in_kilobytes"`
}

type DeadLetterIdentityState struct {
	Type                 string `json:"type"`
	UserAssignedIdentity string `json:"user_assigned_identity"`
}

type DeliveryIdentityState struct {
	Type                 string `json:"type"`
	UserAssignedIdentity string `json:"user_assigned_identity"`
}

type DeliveryPropertyState struct {
	HeaderName  string `json:"header_name"`
	Secret      bool   `json:"secret"`
	SourceField string `json:"source_field"`
	Type        string `json:"type"`
	Value       string `json:"value"`
}

type RetryPolicyState struct {
	EventTimeToLive     float64 `json:"event_time_to_live"`
	MaxDeliveryAttempts float64 `json:"max_delivery_attempts"`
}

type StorageBlobDeadLetterDestinationState struct {
	StorageAccountId         string `json:"storage_account_id"`
	StorageBlobContainerName string `json:"storage_blob_container_name"`
}

type StorageQueueEndpointState struct {
	QueueMessageTimeToLiveInSeconds float64 `json:"queue_message_time_to_live_in_seconds"`
	QueueName                       string  `json:"queue_name"`
	StorageAccountId                string  `json:"storage_account_id"`
}

type SubjectFilterState struct {
	CaseSensitive     bool   `json:"case_sensitive"`
	SubjectBeginsWith string `json:"subject_begins_with"`
	SubjectEndsWith   string `json:"subject_ends_with"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}

type WebhookEndpointState struct {
	ActiveDirectoryAppIdOrUri     string  `json:"active_directory_app_id_or_uri"`
	ActiveDirectoryTenantId       string  `json:"active_directory_tenant_id"`
	BaseUrl                       string  `json:"base_url"`
	MaxEventsPerBatch             float64 `json:"max_events_per_batch"`
	PreferredBatchSizeInKilobytes float64 `json:"preferred_batch_size_in_kilobytes"`
	Url                           string  `json:"url"`
}
