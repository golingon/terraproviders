// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_container_group

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_container_group.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acg *DataSource) DataSource() string {
	return "azurerm_container_group"
}

// LocalName returns the local name for [DataSource].
func (acg *DataSource) LocalName() string {
	return acg.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acg *DataSource) Configuration() interface{} {
	return acg.Args
}

// Attributes returns the attributes for [DataSource].
func (acg *DataSource) Attributes() dataAzurermContainerGroupAttributes {
	return dataAzurermContainerGroupAttributes{ref: terra.ReferenceDataSource(acg)}
}

// DataArgs contains the configurations for azurerm_container_group.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Zones: set of string, optional
	Zones terra.SetValue[terra.StringValue] `hcl:"zones,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermContainerGroupAttributes struct {
	ref terra.Reference
}

// Fqdn returns a reference to field fqdn of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("fqdn"))
}

// Id returns a reference to field id of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("id"))
}

// IpAddress returns a reference to field ip_address of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("ip_address"))
}

// Location returns a reference to field location of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(acg.ref.Append("resource_group_name"))
}

// SubnetIds returns a reference to field subnet_ids of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acg.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acg.ref.Append("tags"))
}

// Zones returns a reference to field zones of azurerm_container_group.
func (acg dataAzurermContainerGroupAttributes) Zones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acg.ref.Append("zones"))
}

func (acg dataAzurermContainerGroupAttributes) Identity() terra.ListValue[DataIdentityAttributes] {
	return terra.ReferenceAsList[DataIdentityAttributes](acg.ref.Append("identity"))
}

func (acg dataAzurermContainerGroupAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](acg.ref.Append("timeouts"))
}
