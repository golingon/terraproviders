// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_factory_managed_private_endpoint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_data_factory_managed_private_endpoint.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDataFactoryManagedPrivateEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adfmpe *Resource) Type() string {
	return "azurerm_data_factory_managed_private_endpoint"
}

// LocalName returns the local name for [Resource].
func (adfmpe *Resource) LocalName() string {
	return adfmpe.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adfmpe *Resource) Configuration() interface{} {
	return adfmpe.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adfmpe *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adfmpe)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adfmpe *Resource) Dependencies() terra.Dependencies {
	return adfmpe.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adfmpe *Resource) LifecycleManagement() *terra.Lifecycle {
	return adfmpe.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adfmpe *Resource) Attributes() azurermDataFactoryManagedPrivateEndpointAttributes {
	return azurermDataFactoryManagedPrivateEndpointAttributes{ref: terra.ReferenceResource(adfmpe)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adfmpe *Resource) ImportState(state io.Reader) error {
	adfmpe.state = &azurermDataFactoryManagedPrivateEndpointState{}
	if err := json.NewDecoder(state).Decode(adfmpe.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adfmpe.Type(), adfmpe.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adfmpe *Resource) State() (*azurermDataFactoryManagedPrivateEndpointState, bool) {
	return adfmpe.state, adfmpe.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adfmpe *Resource) StateMust() *azurermDataFactoryManagedPrivateEndpointState {
	if adfmpe.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adfmpe.Type(), adfmpe.LocalName()))
	}
	return adfmpe.state
}

// Args contains the configurations for azurerm_data_factory_managed_private_endpoint.
type Args struct {
	// DataFactoryId: string, required
	DataFactoryId terra.StringValue `hcl:"data_factory_id,attr" validate:"required"`
	// Fqdns: list of string, optional
	Fqdns terra.ListValue[terra.StringValue] `hcl:"fqdns,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SubresourceName: string, optional
	SubresourceName terra.StringValue `hcl:"subresource_name,attr"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDataFactoryManagedPrivateEndpointAttributes struct {
	ref terra.Reference
}

// DataFactoryId returns a reference to field data_factory_id of azurerm_data_factory_managed_private_endpoint.
func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) DataFactoryId() terra.StringValue {
	return terra.ReferenceAsString(adfmpe.ref.Append("data_factory_id"))
}

// Fqdns returns a reference to field fqdns of azurerm_data_factory_managed_private_endpoint.
func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) Fqdns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adfmpe.ref.Append("fqdns"))
}

// Id returns a reference to field id of azurerm_data_factory_managed_private_endpoint.
func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adfmpe.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_data_factory_managed_private_endpoint.
func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adfmpe.ref.Append("name"))
}

// SubresourceName returns a reference to field subresource_name of azurerm_data_factory_managed_private_endpoint.
func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) SubresourceName() terra.StringValue {
	return terra.ReferenceAsString(adfmpe.ref.Append("subresource_name"))
}

// TargetResourceId returns a reference to field target_resource_id of azurerm_data_factory_managed_private_endpoint.
func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceAsString(adfmpe.ref.Append("target_resource_id"))
}

func (adfmpe azurermDataFactoryManagedPrivateEndpointAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adfmpe.ref.Append("timeouts"))
}

type azurermDataFactoryManagedPrivateEndpointState struct {
	DataFactoryId    string         `json:"data_factory_id"`
	Fqdns            []string       `json:"fqdns"`
	Id               string         `json:"id"`
	Name             string         `json:"name"`
	SubresourceName  string         `json:"subresource_name"`
	TargetResourceId string         `json:"target_resource_id"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
