// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_web_pubsub_network_acl

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_web_pubsub_network_acl.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermWebPubsubNetworkAclState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awpna *Resource) Type() string {
	return "azurerm_web_pubsub_network_acl"
}

// LocalName returns the local name for [Resource].
func (awpna *Resource) LocalName() string {
	return awpna.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awpna *Resource) Configuration() interface{} {
	return awpna.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awpna *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awpna)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awpna *Resource) Dependencies() terra.Dependencies {
	return awpna.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awpna *Resource) LifecycleManagement() *terra.Lifecycle {
	return awpna.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awpna *Resource) Attributes() azurermWebPubsubNetworkAclAttributes {
	return azurermWebPubsubNetworkAclAttributes{ref: terra.ReferenceResource(awpna)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awpna *Resource) ImportState(state io.Reader) error {
	awpna.state = &azurermWebPubsubNetworkAclState{}
	if err := json.NewDecoder(state).Decode(awpna.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awpna.Type(), awpna.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awpna *Resource) State() (*azurermWebPubsubNetworkAclState, bool) {
	return awpna.state, awpna.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awpna *Resource) StateMust() *azurermWebPubsubNetworkAclState {
	if awpna.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awpna.Type(), awpna.LocalName()))
	}
	return awpna.state
}

// Args contains the configurations for azurerm_web_pubsub_network_acl.
type Args struct {
	// DefaultAction: string, optional
	DefaultAction terra.StringValue `hcl:"default_action,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// WebPubsubId: string, required
	WebPubsubId terra.StringValue `hcl:"web_pubsub_id,attr" validate:"required"`
	// PrivateEndpoint: min=0
	PrivateEndpoint []PrivateEndpoint `hcl:"private_endpoint,block" validate:"min=0"`
	// PublicNetwork: required
	PublicNetwork *PublicNetwork `hcl:"public_network,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermWebPubsubNetworkAclAttributes struct {
	ref terra.Reference
}

// DefaultAction returns a reference to field default_action of azurerm_web_pubsub_network_acl.
func (awpna azurermWebPubsubNetworkAclAttributes) DefaultAction() terra.StringValue {
	return terra.ReferenceAsString(awpna.ref.Append("default_action"))
}

// Id returns a reference to field id of azurerm_web_pubsub_network_acl.
func (awpna azurermWebPubsubNetworkAclAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awpna.ref.Append("id"))
}

// WebPubsubId returns a reference to field web_pubsub_id of azurerm_web_pubsub_network_acl.
func (awpna azurermWebPubsubNetworkAclAttributes) WebPubsubId() terra.StringValue {
	return terra.ReferenceAsString(awpna.ref.Append("web_pubsub_id"))
}

func (awpna azurermWebPubsubNetworkAclAttributes) PrivateEndpoint() terra.SetValue[PrivateEndpointAttributes] {
	return terra.ReferenceAsSet[PrivateEndpointAttributes](awpna.ref.Append("private_endpoint"))
}

func (awpna azurermWebPubsubNetworkAclAttributes) PublicNetwork() terra.ListValue[PublicNetworkAttributes] {
	return terra.ReferenceAsList[PublicNetworkAttributes](awpna.ref.Append("public_network"))
}

func (awpna azurermWebPubsubNetworkAclAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](awpna.ref.Append("timeouts"))
}

type azurermWebPubsubNetworkAclState struct {
	DefaultAction   string                 `json:"default_action"`
	Id              string                 `json:"id"`
	WebPubsubId     string                 `json:"web_pubsub_id"`
	PrivateEndpoint []PrivateEndpointState `json:"private_endpoint"`
	PublicNetwork   []PublicNetworkState   `json:"public_network"`
	Timeouts        *TimeoutsState         `json:"timeouts"`
}
