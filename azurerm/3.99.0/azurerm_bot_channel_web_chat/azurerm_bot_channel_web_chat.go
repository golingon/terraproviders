// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_bot_channel_web_chat

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_bot_channel_web_chat.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermBotChannelWebChatState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (abcwc *Resource) Type() string {
	return "azurerm_bot_channel_web_chat"
}

// LocalName returns the local name for [Resource].
func (abcwc *Resource) LocalName() string {
	return abcwc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (abcwc *Resource) Configuration() interface{} {
	return abcwc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (abcwc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(abcwc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (abcwc *Resource) Dependencies() terra.Dependencies {
	return abcwc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (abcwc *Resource) LifecycleManagement() *terra.Lifecycle {
	return abcwc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (abcwc *Resource) Attributes() azurermBotChannelWebChatAttributes {
	return azurermBotChannelWebChatAttributes{ref: terra.ReferenceResource(abcwc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (abcwc *Resource) ImportState(state io.Reader) error {
	abcwc.state = &azurermBotChannelWebChatState{}
	if err := json.NewDecoder(state).Decode(abcwc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", abcwc.Type(), abcwc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (abcwc *Resource) State() (*azurermBotChannelWebChatState, bool) {
	return abcwc.state, abcwc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (abcwc *Resource) StateMust() *azurermBotChannelWebChatState {
	if abcwc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", abcwc.Type(), abcwc.LocalName()))
	}
	return abcwc.state
}

// Args contains the configurations for azurerm_bot_channel_web_chat.
type Args struct {
	// BotName: string, required
	BotName terra.StringValue `hcl:"bot_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SiteNames: set of string, optional
	SiteNames terra.SetValue[terra.StringValue] `hcl:"site_names,attr"`
	// Site: min=0
	Site []Site `hcl:"site,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermBotChannelWebChatAttributes struct {
	ref terra.Reference
}

// BotName returns a reference to field bot_name of azurerm_bot_channel_web_chat.
func (abcwc azurermBotChannelWebChatAttributes) BotName() terra.StringValue {
	return terra.ReferenceAsString(abcwc.ref.Append("bot_name"))
}

// Id returns a reference to field id of azurerm_bot_channel_web_chat.
func (abcwc azurermBotChannelWebChatAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abcwc.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_bot_channel_web_chat.
func (abcwc azurermBotChannelWebChatAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(abcwc.ref.Append("location"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_bot_channel_web_chat.
func (abcwc azurermBotChannelWebChatAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(abcwc.ref.Append("resource_group_name"))
}

// SiteNames returns a reference to field site_names of azurerm_bot_channel_web_chat.
func (abcwc azurermBotChannelWebChatAttributes) SiteNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](abcwc.ref.Append("site_names"))
}

func (abcwc azurermBotChannelWebChatAttributes) Site() terra.SetValue[SiteAttributes] {
	return terra.ReferenceAsSet[SiteAttributes](abcwc.ref.Append("site"))
}

func (abcwc azurermBotChannelWebChatAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](abcwc.ref.Append("timeouts"))
}

type azurermBotChannelWebChatState struct {
	BotName           string         `json:"bot_name"`
	Id                string         `json:"id"`
	Location          string         `json:"location"`
	ResourceGroupName string         `json:"resource_group_name"`
	SiteNames         []string       `json:"site_names"`
	Site              []SiteState    `json:"site"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
