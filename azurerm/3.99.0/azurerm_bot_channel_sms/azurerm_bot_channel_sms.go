// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_bot_channel_sms

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_bot_channel_sms.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermBotChannelSmsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (abcs *Resource) Type() string {
	return "azurerm_bot_channel_sms"
}

// LocalName returns the local name for [Resource].
func (abcs *Resource) LocalName() string {
	return abcs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (abcs *Resource) Configuration() interface{} {
	return abcs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (abcs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(abcs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (abcs *Resource) Dependencies() terra.Dependencies {
	return abcs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (abcs *Resource) LifecycleManagement() *terra.Lifecycle {
	return abcs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (abcs *Resource) Attributes() azurermBotChannelSmsAttributes {
	return azurermBotChannelSmsAttributes{ref: terra.ReferenceResource(abcs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (abcs *Resource) ImportState(state io.Reader) error {
	abcs.state = &azurermBotChannelSmsState{}
	if err := json.NewDecoder(state).Decode(abcs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", abcs.Type(), abcs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (abcs *Resource) State() (*azurermBotChannelSmsState, bool) {
	return abcs.state, abcs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (abcs *Resource) StateMust() *azurermBotChannelSmsState {
	if abcs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", abcs.Type(), abcs.LocalName()))
	}
	return abcs.state
}

// Args contains the configurations for azurerm_bot_channel_sms.
type Args struct {
	// BotName: string, required
	BotName terra.StringValue `hcl:"bot_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// PhoneNumber: string, required
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SmsChannelAccountSecurityId: string, required
	SmsChannelAccountSecurityId terra.StringValue `hcl:"sms_channel_account_security_id,attr" validate:"required"`
	// SmsChannelAuthToken: string, required
	SmsChannelAuthToken terra.StringValue `hcl:"sms_channel_auth_token,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermBotChannelSmsAttributes struct {
	ref terra.Reference
}

// BotName returns a reference to field bot_name of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) BotName() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("bot_name"))
}

// Id returns a reference to field id of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("location"))
}

// PhoneNumber returns a reference to field phone_number of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("phone_number"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("resource_group_name"))
}

// SmsChannelAccountSecurityId returns a reference to field sms_channel_account_security_id of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) SmsChannelAccountSecurityId() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("sms_channel_account_security_id"))
}

// SmsChannelAuthToken returns a reference to field sms_channel_auth_token of azurerm_bot_channel_sms.
func (abcs azurermBotChannelSmsAttributes) SmsChannelAuthToken() terra.StringValue {
	return terra.ReferenceAsString(abcs.ref.Append("sms_channel_auth_token"))
}

func (abcs azurermBotChannelSmsAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](abcs.ref.Append("timeouts"))
}

type azurermBotChannelSmsState struct {
	BotName                     string         `json:"bot_name"`
	Id                          string         `json:"id"`
	Location                    string         `json:"location"`
	PhoneNumber                 string         `json:"phone_number"`
	ResourceGroupName           string         `json:"resource_group_name"`
	SmsChannelAccountSecurityId string         `json:"sms_channel_account_security_id"`
	SmsChannelAuthToken         string         `json:"sms_channel_auth_token"`
	Timeouts                    *TimeoutsState `json:"timeouts"`
}
