// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_virtual_hub_ip

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_virtual_hub_ip.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermVirtualHubIpState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avhi *Resource) Type() string {
	return "azurerm_virtual_hub_ip"
}

// LocalName returns the local name for [Resource].
func (avhi *Resource) LocalName() string {
	return avhi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avhi *Resource) Configuration() interface{} {
	return avhi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avhi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avhi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avhi *Resource) Dependencies() terra.Dependencies {
	return avhi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avhi *Resource) LifecycleManagement() *terra.Lifecycle {
	return avhi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avhi *Resource) Attributes() azurermVirtualHubIpAttributes {
	return azurermVirtualHubIpAttributes{ref: terra.ReferenceResource(avhi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avhi *Resource) ImportState(state io.Reader) error {
	avhi.state = &azurermVirtualHubIpState{}
	if err := json.NewDecoder(state).Decode(avhi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avhi.Type(), avhi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avhi *Resource) State() (*azurermVirtualHubIpState, bool) {
	return avhi.state, avhi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avhi *Resource) StateMust() *azurermVirtualHubIpState {
	if avhi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avhi.Type(), avhi.LocalName()))
	}
	return avhi.state
}

// Args contains the configurations for azurerm_virtual_hub_ip.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrivateIpAddress: string, optional
	PrivateIpAddress terra.StringValue `hcl:"private_ip_address,attr"`
	// PrivateIpAllocationMethod: string, optional
	PrivateIpAllocationMethod terra.StringValue `hcl:"private_ip_allocation_method,attr"`
	// PublicIpAddressId: string, required
	PublicIpAddressId terra.StringValue `hcl:"public_ip_address_id,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// VirtualHubId: string, required
	VirtualHubId terra.StringValue `hcl:"virtual_hub_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermVirtualHubIpAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("name"))
}

// PrivateIpAddress returns a reference to field private_ip_address of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("private_ip_address"))
}

// PrivateIpAllocationMethod returns a reference to field private_ip_allocation_method of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) PrivateIpAllocationMethod() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("private_ip_allocation_method"))
}

// PublicIpAddressId returns a reference to field public_ip_address_id of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) PublicIpAddressId() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("public_ip_address_id"))
}

// SubnetId returns a reference to field subnet_id of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("subnet_id"))
}

// VirtualHubId returns a reference to field virtual_hub_id of azurerm_virtual_hub_ip.
func (avhi azurermVirtualHubIpAttributes) VirtualHubId() terra.StringValue {
	return terra.ReferenceAsString(avhi.ref.Append("virtual_hub_id"))
}

func (avhi azurermVirtualHubIpAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avhi.ref.Append("timeouts"))
}

type azurermVirtualHubIpState struct {
	Id                        string         `json:"id"`
	Name                      string         `json:"name"`
	PrivateIpAddress          string         `json:"private_ip_address"`
	PrivateIpAllocationMethod string         `json:"private_ip_allocation_method"`
	PublicIpAddressId         string         `json:"public_ip_address_id"`
	SubnetId                  string         `json:"subnet_id"`
	VirtualHubId              string         `json:"virtual_hub_id"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
