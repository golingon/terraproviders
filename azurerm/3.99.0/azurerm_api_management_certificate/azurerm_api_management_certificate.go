// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamc *Resource) Type() string {
	return "azurerm_api_management_certificate"
}

// LocalName returns the local name for [Resource].
func (aamc *Resource) LocalName() string {
	return aamc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamc *Resource) Configuration() interface{} {
	return aamc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamc *Resource) Dependencies() terra.Dependencies {
	return aamc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamc *Resource) Attributes() azurermApiManagementCertificateAttributes {
	return azurermApiManagementCertificateAttributes{ref: terra.ReferenceResource(aamc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamc *Resource) ImportState(state io.Reader) error {
	aamc.state = &azurermApiManagementCertificateState{}
	if err := json.NewDecoder(state).Decode(aamc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamc.Type(), aamc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamc *Resource) State() (*azurermApiManagementCertificateState, bool) {
	return aamc.state, aamc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamc *Resource) StateMust() *azurermApiManagementCertificateState {
	if aamc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamc.Type(), aamc.LocalName()))
	}
	return aamc.state
}

// Args contains the configurations for azurerm_api_management_certificate.
type Args struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// Data: string, optional
	Data terra.StringValue `hcl:"data,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultIdentityClientId: string, optional
	KeyVaultIdentityClientId terra.StringValue `hcl:"key_vault_identity_client_id,attr"`
	// KeyVaultSecretId: string, optional
	KeyVaultSecretId terra.StringValue `hcl:"key_vault_secret_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Password: string, optional
	Password terra.StringValue `hcl:"password,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApiManagementCertificateAttributes struct {
	ref terra.Reference
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("api_management_name"))
}

// Data returns a reference to field data of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("data"))
}

// Expiration returns a reference to field expiration of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Expiration() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("expiration"))
}

// Id returns a reference to field id of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("id"))
}

// KeyVaultIdentityClientId returns a reference to field key_vault_identity_client_id of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) KeyVaultIdentityClientId() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("key_vault_identity_client_id"))
}

// KeyVaultSecretId returns a reference to field key_vault_secret_id of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) KeyVaultSecretId() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("key_vault_secret_id"))
}

// Name returns a reference to field name of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("name"))
}

// Password returns a reference to field password of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("password"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("resource_group_name"))
}

// Subject returns a reference to field subject of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("subject"))
}

// Thumbprint returns a reference to field thumbprint of azurerm_api_management_certificate.
func (aamc azurermApiManagementCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(aamc.ref.Append("thumbprint"))
}

func (aamc azurermApiManagementCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamc.ref.Append("timeouts"))
}

type azurermApiManagementCertificateState struct {
	ApiManagementName        string         `json:"api_management_name"`
	Data                     string         `json:"data"`
	Expiration               string         `json:"expiration"`
	Id                       string         `json:"id"`
	KeyVaultIdentityClientId string         `json:"key_vault_identity_client_id"`
	KeyVaultSecretId         string         `json:"key_vault_secret_id"`
	Name                     string         `json:"name"`
	Password                 string         `json:"password"`
	ResourceGroupName        string         `json:"resource_group_name"`
	Subject                  string         `json:"subject"`
	Thumbprint               string         `json:"thumbprint"`
	Timeouts                 *TimeoutsState `json:"timeouts"`
}
