// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_windows_web_app

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAuthSettingsAttributes struct {
	ref terra.Reference
}

func (as DataAuthSettingsAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as DataAuthSettingsAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsAttributes {
	return DataAuthSettingsAttributes{ref: ref}
}

func (as DataAuthSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as DataAuthSettingsAttributes) AdditionalLoginParameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](as.ref.Append("additional_login_parameters"))
}

func (as DataAuthSettingsAttributes) AllowedExternalRedirectUrls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](as.ref.Append("allowed_external_redirect_urls"))
}

func (as DataAuthSettingsAttributes) DefaultProvider() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("default_provider"))
}

func (as DataAuthSettingsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(as.ref.Append("enabled"))
}

func (as DataAuthSettingsAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("issuer"))
}

func (as DataAuthSettingsAttributes) RuntimeVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("runtime_version"))
}

func (as DataAuthSettingsAttributes) TokenRefreshExtensionHours() terra.NumberValue {
	return terra.ReferenceAsNumber(as.ref.Append("token_refresh_extension_hours"))
}

func (as DataAuthSettingsAttributes) TokenStoreEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(as.ref.Append("token_store_enabled"))
}

func (as DataAuthSettingsAttributes) UnauthenticatedClientAction() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("unauthenticated_client_action"))
}

func (as DataAuthSettingsAttributes) ActiveDirectory() terra.ListValue[DataAuthSettingsActiveDirectoryAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsActiveDirectoryAttributes](as.ref.Append("active_directory"))
}

func (as DataAuthSettingsAttributes) Facebook() terra.ListValue[DataAuthSettingsFacebookAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsFacebookAttributes](as.ref.Append("facebook"))
}

func (as DataAuthSettingsAttributes) Github() terra.ListValue[DataAuthSettingsGithubAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsGithubAttributes](as.ref.Append("github"))
}

func (as DataAuthSettingsAttributes) Google() terra.ListValue[DataAuthSettingsGoogleAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsGoogleAttributes](as.ref.Append("google"))
}

func (as DataAuthSettingsAttributes) Microsoft() terra.ListValue[DataAuthSettingsMicrosoftAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsMicrosoftAttributes](as.ref.Append("microsoft"))
}

func (as DataAuthSettingsAttributes) Twitter() terra.ListValue[DataAuthSettingsTwitterAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsTwitterAttributes](as.ref.Append("twitter"))
}

type DataAuthSettingsActiveDirectoryAttributes struct {
	ref terra.Reference
}

func (ad DataAuthSettingsActiveDirectoryAttributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad DataAuthSettingsActiveDirectoryAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsActiveDirectoryAttributes {
	return DataAuthSettingsActiveDirectoryAttributes{ref: ref}
}

func (ad DataAuthSettingsActiveDirectoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ad.ref.InternalTokens()
}

func (ad DataAuthSettingsActiveDirectoryAttributes) AllowedAudiences() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ad.ref.Append("allowed_audiences"))
}

func (ad DataAuthSettingsActiveDirectoryAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("client_id"))
}

func (ad DataAuthSettingsActiveDirectoryAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("client_secret"))
}

func (ad DataAuthSettingsActiveDirectoryAttributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("client_secret_setting_name"))
}

type DataAuthSettingsFacebookAttributes struct {
	ref terra.Reference
}

func (f DataAuthSettingsFacebookAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataAuthSettingsFacebookAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsFacebookAttributes {
	return DataAuthSettingsFacebookAttributes{ref: ref}
}

func (f DataAuthSettingsFacebookAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataAuthSettingsFacebookAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("app_id"))
}

func (f DataAuthSettingsFacebookAttributes) AppSecret() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("app_secret"))
}

func (f DataAuthSettingsFacebookAttributes) AppSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("app_secret_setting_name"))
}

func (f DataAuthSettingsFacebookAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](f.ref.Append("oauth_scopes"))
}

type DataAuthSettingsGithubAttributes struct {
	ref terra.Reference
}

func (g DataAuthSettingsGithubAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataAuthSettingsGithubAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsGithubAttributes {
	return DataAuthSettingsGithubAttributes{ref: ref}
}

func (g DataAuthSettingsGithubAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataAuthSettingsGithubAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("client_id"))
}

func (g DataAuthSettingsGithubAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("client_secret"))
}

func (g DataAuthSettingsGithubAttributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("client_secret_setting_name"))
}

func (g DataAuthSettingsGithubAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](g.ref.Append("oauth_scopes"))
}

type DataAuthSettingsGoogleAttributes struct {
	ref terra.Reference
}

func (g DataAuthSettingsGoogleAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataAuthSettingsGoogleAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsGoogleAttributes {
	return DataAuthSettingsGoogleAttributes{ref: ref}
}

func (g DataAuthSettingsGoogleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataAuthSettingsGoogleAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("client_id"))
}

func (g DataAuthSettingsGoogleAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("client_secret"))
}

func (g DataAuthSettingsGoogleAttributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("client_secret_setting_name"))
}

func (g DataAuthSettingsGoogleAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](g.ref.Append("oauth_scopes"))
}

type DataAuthSettingsMicrosoftAttributes struct {
	ref terra.Reference
}

func (m DataAuthSettingsMicrosoftAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataAuthSettingsMicrosoftAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsMicrosoftAttributes {
	return DataAuthSettingsMicrosoftAttributes{ref: ref}
}

func (m DataAuthSettingsMicrosoftAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataAuthSettingsMicrosoftAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_id"))
}

func (m DataAuthSettingsMicrosoftAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_secret"))
}

func (m DataAuthSettingsMicrosoftAttributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_secret_setting_name"))
}

func (m DataAuthSettingsMicrosoftAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](m.ref.Append("oauth_scopes"))
}

type DataAuthSettingsTwitterAttributes struct {
	ref terra.Reference
}

func (t DataAuthSettingsTwitterAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataAuthSettingsTwitterAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsTwitterAttributes {
	return DataAuthSettingsTwitterAttributes{ref: ref}
}

func (t DataAuthSettingsTwitterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataAuthSettingsTwitterAttributes) ConsumerKey() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("consumer_key"))
}

func (t DataAuthSettingsTwitterAttributes) ConsumerSecret() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("consumer_secret"))
}

func (t DataAuthSettingsTwitterAttributes) ConsumerSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("consumer_secret_setting_name"))
}

type DataAuthSettingsV2Attributes struct {
	ref terra.Reference
}

func (asv DataAuthSettingsV2Attributes) InternalRef() (terra.Reference, error) {
	return asv.ref, nil
}

func (asv DataAuthSettingsV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2Attributes {
	return DataAuthSettingsV2Attributes{ref: ref}
}

func (asv DataAuthSettingsV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return asv.ref.InternalTokens()
}

func (asv DataAuthSettingsV2Attributes) AuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asv.ref.Append("auth_enabled"))
}

func (asv DataAuthSettingsV2Attributes) ConfigFilePath() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("config_file_path"))
}

func (asv DataAuthSettingsV2Attributes) DefaultProvider() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("default_provider"))
}

func (asv DataAuthSettingsV2Attributes) ExcludedPaths() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asv.ref.Append("excluded_paths"))
}

func (asv DataAuthSettingsV2Attributes) ForwardProxyConvention() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("forward_proxy_convention"))
}

func (asv DataAuthSettingsV2Attributes) ForwardProxyCustomHostHeaderName() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("forward_proxy_custom_host_header_name"))
}

func (asv DataAuthSettingsV2Attributes) ForwardProxyCustomSchemeHeaderName() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("forward_proxy_custom_scheme_header_name"))
}

func (asv DataAuthSettingsV2Attributes) HttpRouteApiPrefix() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("http_route_api_prefix"))
}

func (asv DataAuthSettingsV2Attributes) RequireAuthentication() terra.BoolValue {
	return terra.ReferenceAsBool(asv.ref.Append("require_authentication"))
}

func (asv DataAuthSettingsV2Attributes) RequireHttps() terra.BoolValue {
	return terra.ReferenceAsBool(asv.ref.Append("require_https"))
}

func (asv DataAuthSettingsV2Attributes) RuntimeVersion() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("runtime_version"))
}

func (asv DataAuthSettingsV2Attributes) UnauthenticatedAction() terra.StringValue {
	return terra.ReferenceAsString(asv.ref.Append("unauthenticated_action"))
}

func (asv DataAuthSettingsV2Attributes) ActiveDirectoryV2() terra.ListValue[DataAuthSettingsV2ActiveDirectoryV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2ActiveDirectoryV2Attributes](asv.ref.Append("active_directory_v2"))
}

func (asv DataAuthSettingsV2Attributes) AppleV2() terra.ListValue[DataAuthSettingsV2AppleV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2AppleV2Attributes](asv.ref.Append("apple_v2"))
}

func (asv DataAuthSettingsV2Attributes) AzureStaticWebAppV2() terra.ListValue[DataAuthSettingsV2AzureStaticWebAppV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2AzureStaticWebAppV2Attributes](asv.ref.Append("azure_static_web_app_v2"))
}

func (asv DataAuthSettingsV2Attributes) CustomOidcV2() terra.ListValue[DataAuthSettingsV2CustomOidcV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2CustomOidcV2Attributes](asv.ref.Append("custom_oidc_v2"))
}

func (asv DataAuthSettingsV2Attributes) FacebookV2() terra.ListValue[DataAuthSettingsV2FacebookV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2FacebookV2Attributes](asv.ref.Append("facebook_v2"))
}

func (asv DataAuthSettingsV2Attributes) GithubV2() terra.ListValue[DataAuthSettingsV2GithubV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2GithubV2Attributes](asv.ref.Append("github_v2"))
}

func (asv DataAuthSettingsV2Attributes) GoogleV2() terra.ListValue[DataAuthSettingsV2GoogleV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2GoogleV2Attributes](asv.ref.Append("google_v2"))
}

func (asv DataAuthSettingsV2Attributes) Login() terra.ListValue[DataAuthSettingsV2LoginAttributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2LoginAttributes](asv.ref.Append("login"))
}

func (asv DataAuthSettingsV2Attributes) MicrosoftV2() terra.ListValue[DataAuthSettingsV2MicrosoftV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2MicrosoftV2Attributes](asv.ref.Append("microsoft_v2"))
}

func (asv DataAuthSettingsV2Attributes) TwitterV2() terra.ListValue[DataAuthSettingsV2TwitterV2Attributes] {
	return terra.ReferenceAsList[DataAuthSettingsV2TwitterV2Attributes](asv.ref.Append("twitter_v2"))
}

type DataAuthSettingsV2ActiveDirectoryV2Attributes struct {
	ref terra.Reference
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) InternalRef() (terra.Reference, error) {
	return adv.ref, nil
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2ActiveDirectoryV2Attributes {
	return DataAuthSettingsV2ActiveDirectoryV2Attributes{ref: ref}
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return adv.ref.InternalTokens()
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) AllowedApplications() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adv.ref.Append("allowed_applications"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) AllowedAudiences() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adv.ref.Append("allowed_audiences"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) AllowedGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adv.ref.Append("allowed_groups"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) AllowedIdentities() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adv.ref.Append("allowed_identities"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(adv.ref.Append("client_id"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) ClientSecretCertificateThumbprint() terra.StringValue {
	return terra.ReferenceAsString(adv.ref.Append("client_secret_certificate_thumbprint"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(adv.ref.Append("client_secret_setting_name"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) JwtAllowedClientApplications() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adv.ref.Append("jwt_allowed_client_applications"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) JwtAllowedGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adv.ref.Append("jwt_allowed_groups"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) LoginParameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adv.ref.Append("login_parameters"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) TenantAuthEndpoint() terra.StringValue {
	return terra.ReferenceAsString(adv.ref.Append("tenant_auth_endpoint"))
}

func (adv DataAuthSettingsV2ActiveDirectoryV2Attributes) WwwAuthenticationDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(adv.ref.Append("www_authentication_disabled"))
}

type DataAuthSettingsV2AppleV2Attributes struct {
	ref terra.Reference
}

func (av DataAuthSettingsV2AppleV2Attributes) InternalRef() (terra.Reference, error) {
	return av.ref, nil
}

func (av DataAuthSettingsV2AppleV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2AppleV2Attributes {
	return DataAuthSettingsV2AppleV2Attributes{ref: ref}
}

func (av DataAuthSettingsV2AppleV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return av.ref.InternalTokens()
}

func (av DataAuthSettingsV2AppleV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(av.ref.Append("client_id"))
}

func (av DataAuthSettingsV2AppleV2Attributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(av.ref.Append("client_secret_setting_name"))
}

func (av DataAuthSettingsV2AppleV2Attributes) LoginScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](av.ref.Append("login_scopes"))
}

type DataAuthSettingsV2AzureStaticWebAppV2Attributes struct {
	ref terra.Reference
}

func (aswav DataAuthSettingsV2AzureStaticWebAppV2Attributes) InternalRef() (terra.Reference, error) {
	return aswav.ref, nil
}

func (aswav DataAuthSettingsV2AzureStaticWebAppV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2AzureStaticWebAppV2Attributes {
	return DataAuthSettingsV2AzureStaticWebAppV2Attributes{ref: ref}
}

func (aswav DataAuthSettingsV2AzureStaticWebAppV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return aswav.ref.InternalTokens()
}

func (aswav DataAuthSettingsV2AzureStaticWebAppV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(aswav.ref.Append("client_id"))
}

type DataAuthSettingsV2CustomOidcV2Attributes struct {
	ref terra.Reference
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) InternalRef() (terra.Reference, error) {
	return cov.ref, nil
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2CustomOidcV2Attributes {
	return DataAuthSettingsV2CustomOidcV2Attributes{ref: ref}
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return cov.ref.InternalTokens()
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) AuthorisationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("authorisation_endpoint"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) CertificationUri() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("certification_uri"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) ClientCredentialMethod() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("client_credential_method"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("client_id"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("client_secret_setting_name"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) IssuerEndpoint() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("issuer_endpoint"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("name"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) NameClaimType() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("name_claim_type"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) OpenidConfigurationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("openid_configuration_endpoint"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) Scopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cov.ref.Append("scopes"))
}

func (cov DataAuthSettingsV2CustomOidcV2Attributes) TokenEndpoint() terra.StringValue {
	return terra.ReferenceAsString(cov.ref.Append("token_endpoint"))
}

type DataAuthSettingsV2FacebookV2Attributes struct {
	ref terra.Reference
}

func (fv DataAuthSettingsV2FacebookV2Attributes) InternalRef() (terra.Reference, error) {
	return fv.ref, nil
}

func (fv DataAuthSettingsV2FacebookV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2FacebookV2Attributes {
	return DataAuthSettingsV2FacebookV2Attributes{ref: ref}
}

func (fv DataAuthSettingsV2FacebookV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return fv.ref.InternalTokens()
}

func (fv DataAuthSettingsV2FacebookV2Attributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(fv.ref.Append("app_id"))
}

func (fv DataAuthSettingsV2FacebookV2Attributes) AppSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(fv.ref.Append("app_secret_setting_name"))
}

func (fv DataAuthSettingsV2FacebookV2Attributes) GraphApiVersion() terra.StringValue {
	return terra.ReferenceAsString(fv.ref.Append("graph_api_version"))
}

func (fv DataAuthSettingsV2FacebookV2Attributes) LoginScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fv.ref.Append("login_scopes"))
}

type DataAuthSettingsV2GithubV2Attributes struct {
	ref terra.Reference
}

func (gv DataAuthSettingsV2GithubV2Attributes) InternalRef() (terra.Reference, error) {
	return gv.ref, nil
}

func (gv DataAuthSettingsV2GithubV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2GithubV2Attributes {
	return DataAuthSettingsV2GithubV2Attributes{ref: ref}
}

func (gv DataAuthSettingsV2GithubV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return gv.ref.InternalTokens()
}

func (gv DataAuthSettingsV2GithubV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(gv.ref.Append("client_id"))
}

func (gv DataAuthSettingsV2GithubV2Attributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(gv.ref.Append("client_secret_setting_name"))
}

func (gv DataAuthSettingsV2GithubV2Attributes) LoginScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gv.ref.Append("login_scopes"))
}

type DataAuthSettingsV2GoogleV2Attributes struct {
	ref terra.Reference
}

func (gv DataAuthSettingsV2GoogleV2Attributes) InternalRef() (terra.Reference, error) {
	return gv.ref, nil
}

func (gv DataAuthSettingsV2GoogleV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2GoogleV2Attributes {
	return DataAuthSettingsV2GoogleV2Attributes{ref: ref}
}

func (gv DataAuthSettingsV2GoogleV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return gv.ref.InternalTokens()
}

func (gv DataAuthSettingsV2GoogleV2Attributes) AllowedAudiences() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gv.ref.Append("allowed_audiences"))
}

func (gv DataAuthSettingsV2GoogleV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(gv.ref.Append("client_id"))
}

func (gv DataAuthSettingsV2GoogleV2Attributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(gv.ref.Append("client_secret_setting_name"))
}

func (gv DataAuthSettingsV2GoogleV2Attributes) LoginScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gv.ref.Append("login_scopes"))
}

type DataAuthSettingsV2LoginAttributes struct {
	ref terra.Reference
}

func (l DataAuthSettingsV2LoginAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l DataAuthSettingsV2LoginAttributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2LoginAttributes {
	return DataAuthSettingsV2LoginAttributes{ref: ref}
}

func (l DataAuthSettingsV2LoginAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l DataAuthSettingsV2LoginAttributes) AllowedExternalRedirectUrls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](l.ref.Append("allowed_external_redirect_urls"))
}

func (l DataAuthSettingsV2LoginAttributes) CookieExpirationConvention() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("cookie_expiration_convention"))
}

func (l DataAuthSettingsV2LoginAttributes) CookieExpirationTime() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("cookie_expiration_time"))
}

func (l DataAuthSettingsV2LoginAttributes) LogoutEndpoint() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("logout_endpoint"))
}

func (l DataAuthSettingsV2LoginAttributes) NonceExpirationTime() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("nonce_expiration_time"))
}

func (l DataAuthSettingsV2LoginAttributes) PreserveUrlFragmentsForLogins() terra.BoolValue {
	return terra.ReferenceAsBool(l.ref.Append("preserve_url_fragments_for_logins"))
}

func (l DataAuthSettingsV2LoginAttributes) TokenRefreshExtensionTime() terra.NumberValue {
	return terra.ReferenceAsNumber(l.ref.Append("token_refresh_extension_time"))
}

func (l DataAuthSettingsV2LoginAttributes) TokenStoreEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(l.ref.Append("token_store_enabled"))
}

func (l DataAuthSettingsV2LoginAttributes) TokenStorePath() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("token_store_path"))
}

func (l DataAuthSettingsV2LoginAttributes) TokenStoreSasSettingName() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("token_store_sas_setting_name"))
}

func (l DataAuthSettingsV2LoginAttributes) ValidateNonce() terra.BoolValue {
	return terra.ReferenceAsBool(l.ref.Append("validate_nonce"))
}

type DataAuthSettingsV2MicrosoftV2Attributes struct {
	ref terra.Reference
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) InternalRef() (terra.Reference, error) {
	return mv.ref, nil
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2MicrosoftV2Attributes {
	return DataAuthSettingsV2MicrosoftV2Attributes{ref: ref}
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mv.ref.InternalTokens()
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) AllowedAudiences() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mv.ref.Append("allowed_audiences"))
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(mv.ref.Append("client_id"))
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) ClientSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(mv.ref.Append("client_secret_setting_name"))
}

func (mv DataAuthSettingsV2MicrosoftV2Attributes) LoginScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mv.ref.Append("login_scopes"))
}

type DataAuthSettingsV2TwitterV2Attributes struct {
	ref terra.Reference
}

func (tv DataAuthSettingsV2TwitterV2Attributes) InternalRef() (terra.Reference, error) {
	return tv.ref, nil
}

func (tv DataAuthSettingsV2TwitterV2Attributes) InternalWithRef(ref terra.Reference) DataAuthSettingsV2TwitterV2Attributes {
	return DataAuthSettingsV2TwitterV2Attributes{ref: ref}
}

func (tv DataAuthSettingsV2TwitterV2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tv.ref.InternalTokens()
}

func (tv DataAuthSettingsV2TwitterV2Attributes) ConsumerKey() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("consumer_key"))
}

func (tv DataAuthSettingsV2TwitterV2Attributes) ConsumerSecretSettingName() terra.StringValue {
	return terra.ReferenceAsString(tv.ref.Append("consumer_secret_setting_name"))
}

type DataBackupAttributes struct {
	ref terra.Reference
}

func (b DataBackupAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b DataBackupAttributes) InternalWithRef(ref terra.Reference) DataBackupAttributes {
	return DataBackupAttributes{ref: ref}
}

func (b DataBackupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b DataBackupAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("enabled"))
}

func (b DataBackupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("name"))
}

func (b DataBackupAttributes) StorageAccountUrl() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("storage_account_url"))
}

func (b DataBackupAttributes) Schedule() terra.ListValue[DataBackupScheduleAttributes] {
	return terra.ReferenceAsList[DataBackupScheduleAttributes](b.ref.Append("schedule"))
}

type DataBackupScheduleAttributes struct {
	ref terra.Reference
}

func (s DataBackupScheduleAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataBackupScheduleAttributes) InternalWithRef(ref terra.Reference) DataBackupScheduleAttributes {
	return DataBackupScheduleAttributes{ref: ref}
}

func (s DataBackupScheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataBackupScheduleAttributes) FrequencyInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("frequency_interval"))
}

func (s DataBackupScheduleAttributes) FrequencyUnit() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("frequency_unit"))
}

func (s DataBackupScheduleAttributes) KeepAtLeastOneBackup() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("keep_at_least_one_backup"))
}

func (s DataBackupScheduleAttributes) LastExecutionTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("last_execution_time"))
}

func (s DataBackupScheduleAttributes) RetentionPeriodDays() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("retention_period_days"))
}

func (s DataBackupScheduleAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("start_time"))
}

type DataConnectionStringAttributes struct {
	ref terra.Reference
}

func (cs DataConnectionStringAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs DataConnectionStringAttributes) InternalWithRef(ref terra.Reference) DataConnectionStringAttributes {
	return DataConnectionStringAttributes{ref: ref}
}

func (cs DataConnectionStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs DataConnectionStringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("name"))
}

func (cs DataConnectionStringAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("type"))
}

func (cs DataConnectionStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("value"))
}

type DataIdentityAttributes struct {
	ref terra.Reference
}

func (i DataIdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIdentityAttributes) InternalWithRef(ref terra.Reference) DataIdentityAttributes {
	return DataIdentityAttributes{ref: ref}
}

func (i DataIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i DataIdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i DataIdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i DataIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type DataLogsAttributes struct {
	ref terra.Reference
}

func (l DataLogsAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l DataLogsAttributes) InternalWithRef(ref terra.Reference) DataLogsAttributes {
	return DataLogsAttributes{ref: ref}
}

func (l DataLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l DataLogsAttributes) DetailedErrorMessages() terra.BoolValue {
	return terra.ReferenceAsBool(l.ref.Append("detailed_error_messages"))
}

func (l DataLogsAttributes) FailedRequestTracing() terra.BoolValue {
	return terra.ReferenceAsBool(l.ref.Append("failed_request_tracing"))
}

func (l DataLogsAttributes) ApplicationLogs() terra.ListValue[DataLogsApplicationLogsAttributes] {
	return terra.ReferenceAsList[DataLogsApplicationLogsAttributes](l.ref.Append("application_logs"))
}

func (l DataLogsAttributes) HttpLogs() terra.ListValue[DataLogsHttpLogsAttributes] {
	return terra.ReferenceAsList[DataLogsHttpLogsAttributes](l.ref.Append("http_logs"))
}

type DataLogsApplicationLogsAttributes struct {
	ref terra.Reference
}

func (al DataLogsApplicationLogsAttributes) InternalRef() (terra.Reference, error) {
	return al.ref, nil
}

func (al DataLogsApplicationLogsAttributes) InternalWithRef(ref terra.Reference) DataLogsApplicationLogsAttributes {
	return DataLogsApplicationLogsAttributes{ref: ref}
}

func (al DataLogsApplicationLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return al.ref.InternalTokens()
}

func (al DataLogsApplicationLogsAttributes) FileSystemLevel() terra.StringValue {
	return terra.ReferenceAsString(al.ref.Append("file_system_level"))
}

func (al DataLogsApplicationLogsAttributes) AzureBlobStorage() terra.ListValue[DataLogsApplicationLogsAzureBlobStorageAttributes] {
	return terra.ReferenceAsList[DataLogsApplicationLogsAzureBlobStorageAttributes](al.ref.Append("azure_blob_storage"))
}

type DataLogsApplicationLogsAzureBlobStorageAttributes struct {
	ref terra.Reference
}

func (abs DataLogsApplicationLogsAzureBlobStorageAttributes) InternalRef() (terra.Reference, error) {
	return abs.ref, nil
}

func (abs DataLogsApplicationLogsAzureBlobStorageAttributes) InternalWithRef(ref terra.Reference) DataLogsApplicationLogsAzureBlobStorageAttributes {
	return DataLogsApplicationLogsAzureBlobStorageAttributes{ref: ref}
}

func (abs DataLogsApplicationLogsAzureBlobStorageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return abs.ref.InternalTokens()
}

func (abs DataLogsApplicationLogsAzureBlobStorageAttributes) Level() terra.StringValue {
	return terra.ReferenceAsString(abs.ref.Append("level"))
}

func (abs DataLogsApplicationLogsAzureBlobStorageAttributes) RetentionInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(abs.ref.Append("retention_in_days"))
}

func (abs DataLogsApplicationLogsAzureBlobStorageAttributes) SasUrl() terra.StringValue {
	return terra.ReferenceAsString(abs.ref.Append("sas_url"))
}

type DataLogsHttpLogsAttributes struct {
	ref terra.Reference
}

func (hl DataLogsHttpLogsAttributes) InternalRef() (terra.Reference, error) {
	return hl.ref, nil
}

func (hl DataLogsHttpLogsAttributes) InternalWithRef(ref terra.Reference) DataLogsHttpLogsAttributes {
	return DataLogsHttpLogsAttributes{ref: ref}
}

func (hl DataLogsHttpLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hl.ref.InternalTokens()
}

func (hl DataLogsHttpLogsAttributes) AzureBlobStorage() terra.ListValue[DataLogsHttpLogsAzureBlobStorageAttributes] {
	return terra.ReferenceAsList[DataLogsHttpLogsAzureBlobStorageAttributes](hl.ref.Append("azure_blob_storage"))
}

func (hl DataLogsHttpLogsAttributes) FileSystem() terra.ListValue[DataLogsHttpLogsFileSystemAttributes] {
	return terra.ReferenceAsList[DataLogsHttpLogsFileSystemAttributes](hl.ref.Append("file_system"))
}

type DataLogsHttpLogsAzureBlobStorageAttributes struct {
	ref terra.Reference
}

func (abs DataLogsHttpLogsAzureBlobStorageAttributes) InternalRef() (terra.Reference, error) {
	return abs.ref, nil
}

func (abs DataLogsHttpLogsAzureBlobStorageAttributes) InternalWithRef(ref terra.Reference) DataLogsHttpLogsAzureBlobStorageAttributes {
	return DataLogsHttpLogsAzureBlobStorageAttributes{ref: ref}
}

func (abs DataLogsHttpLogsAzureBlobStorageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return abs.ref.InternalTokens()
}

func (abs DataLogsHttpLogsAzureBlobStorageAttributes) RetentionInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(abs.ref.Append("retention_in_days"))
}

func (abs DataLogsHttpLogsAzureBlobStorageAttributes) SasUrl() terra.StringValue {
	return terra.ReferenceAsString(abs.ref.Append("sas_url"))
}

type DataLogsHttpLogsFileSystemAttributes struct {
	ref terra.Reference
}

func (fs DataLogsHttpLogsFileSystemAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs DataLogsHttpLogsFileSystemAttributes) InternalWithRef(ref terra.Reference) DataLogsHttpLogsFileSystemAttributes {
	return DataLogsHttpLogsFileSystemAttributes{ref: ref}
}

func (fs DataLogsHttpLogsFileSystemAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs DataLogsHttpLogsFileSystemAttributes) RetentionInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(fs.ref.Append("retention_in_days"))
}

func (fs DataLogsHttpLogsFileSystemAttributes) RetentionInMb() terra.NumberValue {
	return terra.ReferenceAsNumber(fs.ref.Append("retention_in_mb"))
}

type DataSiteConfigAttributes struct {
	ref terra.Reference
}

func (sc DataSiteConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataSiteConfigAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAttributes {
	return DataSiteConfigAttributes{ref: ref}
}

func (sc DataSiteConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataSiteConfigAttributes) AlwaysOn() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("always_on"))
}

func (sc DataSiteConfigAttributes) ApiDefinitionUrl() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("api_definition_url"))
}

func (sc DataSiteConfigAttributes) ApiManagementApiId() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("api_management_api_id"))
}

func (sc DataSiteConfigAttributes) AppCommandLine() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("app_command_line"))
}

func (sc DataSiteConfigAttributes) AutoHealEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("auto_heal_enabled"))
}

func (sc DataSiteConfigAttributes) ContainerRegistryManagedIdentityClientId() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("container_registry_managed_identity_client_id"))
}

func (sc DataSiteConfigAttributes) ContainerRegistryUseManagedIdentity() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("container_registry_use_managed_identity"))
}

func (sc DataSiteConfigAttributes) DefaultDocuments() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sc.ref.Append("default_documents"))
}

func (sc DataSiteConfigAttributes) DetailedErrorLoggingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("detailed_error_logging_enabled"))
}

func (sc DataSiteConfigAttributes) FtpsState() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("ftps_state"))
}

func (sc DataSiteConfigAttributes) HealthCheckEvictionTimeInMin() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("health_check_eviction_time_in_min"))
}

func (sc DataSiteConfigAttributes) HealthCheckPath() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("health_check_path"))
}

func (sc DataSiteConfigAttributes) Http2Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("http2_enabled"))
}

func (sc DataSiteConfigAttributes) IpRestrictionDefaultAction() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("ip_restriction_default_action"))
}

func (sc DataSiteConfigAttributes) LoadBalancingMode() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("load_balancing_mode"))
}

func (sc DataSiteConfigAttributes) LocalMysqlEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("local_mysql_enabled"))
}

func (sc DataSiteConfigAttributes) ManagedPipelineMode() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("managed_pipeline_mode"))
}

func (sc DataSiteConfigAttributes) MinimumTlsVersion() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("minimum_tls_version"))
}

func (sc DataSiteConfigAttributes) RemoteDebuggingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("remote_debugging_enabled"))
}

func (sc DataSiteConfigAttributes) RemoteDebuggingVersion() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("remote_debugging_version"))
}

func (sc DataSiteConfigAttributes) ScmIpRestrictionDefaultAction() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("scm_ip_restriction_default_action"))
}

func (sc DataSiteConfigAttributes) ScmMinimumTlsVersion() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("scm_minimum_tls_version"))
}

func (sc DataSiteConfigAttributes) ScmType() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("scm_type"))
}

func (sc DataSiteConfigAttributes) ScmUseMainIpRestriction() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("scm_use_main_ip_restriction"))
}

func (sc DataSiteConfigAttributes) Use32BitWorker() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("use_32_bit_worker"))
}

func (sc DataSiteConfigAttributes) VnetRouteAllEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("vnet_route_all_enabled"))
}

func (sc DataSiteConfigAttributes) WebsocketsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sc.ref.Append("websockets_enabled"))
}

func (sc DataSiteConfigAttributes) WindowsFxVersion() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("windows_fx_version"))
}

func (sc DataSiteConfigAttributes) WorkerCount() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("worker_count"))
}

func (sc DataSiteConfigAttributes) ApplicationStack() terra.ListValue[DataSiteConfigApplicationStackAttributes] {
	return terra.ReferenceAsList[DataSiteConfigApplicationStackAttributes](sc.ref.Append("application_stack"))
}

func (sc DataSiteConfigAttributes) AutoHealSetting() terra.ListValue[DataSiteConfigAutoHealSettingAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingAttributes](sc.ref.Append("auto_heal_setting"))
}

func (sc DataSiteConfigAttributes) Cors() terra.ListValue[DataSiteConfigCorsAttributes] {
	return terra.ReferenceAsList[DataSiteConfigCorsAttributes](sc.ref.Append("cors"))
}

func (sc DataSiteConfigAttributes) IpRestriction() terra.ListValue[DataSiteConfigIpRestrictionAttributes] {
	return terra.ReferenceAsList[DataSiteConfigIpRestrictionAttributes](sc.ref.Append("ip_restriction"))
}

func (sc DataSiteConfigAttributes) ScmIpRestriction() terra.ListValue[DataSiteConfigScmIpRestrictionAttributes] {
	return terra.ReferenceAsList[DataSiteConfigScmIpRestrictionAttributes](sc.ref.Append("scm_ip_restriction"))
}

func (sc DataSiteConfigAttributes) VirtualApplication() terra.ListValue[DataSiteConfigVirtualApplicationAttributes] {
	return terra.ReferenceAsList[DataSiteConfigVirtualApplicationAttributes](sc.ref.Append("virtual_application"))
}

type DataSiteConfigApplicationStackAttributes struct {
	ref terra.Reference
}

func (as DataSiteConfigApplicationStackAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as DataSiteConfigApplicationStackAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigApplicationStackAttributes {
	return DataSiteConfigApplicationStackAttributes{ref: ref}
}

func (as DataSiteConfigApplicationStackAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as DataSiteConfigApplicationStackAttributes) CurrentStack() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("current_stack"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerContainerName() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_container_name"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerContainerRegistry() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_container_registry"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerContainerTag() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_container_tag"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerImageName() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_image_name"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerRegistryPassword() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_registry_password"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerRegistryUrl() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_registry_url"))
}

func (as DataSiteConfigApplicationStackAttributes) DockerRegistryUsername() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("docker_registry_username"))
}

func (as DataSiteConfigApplicationStackAttributes) DotnetCoreVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("dotnet_core_version"))
}

func (as DataSiteConfigApplicationStackAttributes) DotnetVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("dotnet_version"))
}

func (as DataSiteConfigApplicationStackAttributes) JavaContainer() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("java_container"))
}

func (as DataSiteConfigApplicationStackAttributes) JavaContainerVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("java_container_version"))
}

func (as DataSiteConfigApplicationStackAttributes) JavaEmbeddedServerEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(as.ref.Append("java_embedded_server_enabled"))
}

func (as DataSiteConfigApplicationStackAttributes) JavaVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("java_version"))
}

func (as DataSiteConfigApplicationStackAttributes) NodeVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("node_version"))
}

func (as DataSiteConfigApplicationStackAttributes) PhpVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("php_version"))
}

func (as DataSiteConfigApplicationStackAttributes) Python() terra.BoolValue {
	return terra.ReferenceAsBool(as.ref.Append("python"))
}

func (as DataSiteConfigApplicationStackAttributes) PythonVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("python_version"))
}

func (as DataSiteConfigApplicationStackAttributes) TomcatVersion() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("tomcat_version"))
}

type DataSiteConfigAutoHealSettingAttributes struct {
	ref terra.Reference
}

func (ahs DataSiteConfigAutoHealSettingAttributes) InternalRef() (terra.Reference, error) {
	return ahs.ref, nil
}

func (ahs DataSiteConfigAutoHealSettingAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingAttributes {
	return DataSiteConfigAutoHealSettingAttributes{ref: ref}
}

func (ahs DataSiteConfigAutoHealSettingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ahs.ref.InternalTokens()
}

func (ahs DataSiteConfigAutoHealSettingAttributes) Action() terra.ListValue[DataSiteConfigAutoHealSettingActionAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingActionAttributes](ahs.ref.Append("action"))
}

func (ahs DataSiteConfigAutoHealSettingAttributes) Trigger() terra.ListValue[DataSiteConfigAutoHealSettingTriggerAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingTriggerAttributes](ahs.ref.Append("trigger"))
}

type DataSiteConfigAutoHealSettingActionAttributes struct {
	ref terra.Reference
}

func (a DataSiteConfigAutoHealSettingActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataSiteConfigAutoHealSettingActionAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingActionAttributes {
	return DataSiteConfigAutoHealSettingActionAttributes{ref: ref}
}

func (a DataSiteConfigAutoHealSettingActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataSiteConfigAutoHealSettingActionAttributes) ActionType() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("action_type"))
}

func (a DataSiteConfigAutoHealSettingActionAttributes) MinimumProcessExecutionTime() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("minimum_process_execution_time"))
}

func (a DataSiteConfigAutoHealSettingActionAttributes) CustomAction() terra.ListValue[DataSiteConfigAutoHealSettingActionCustomActionAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingActionCustomActionAttributes](a.ref.Append("custom_action"))
}

type DataSiteConfigAutoHealSettingActionCustomActionAttributes struct {
	ref terra.Reference
}

func (ca DataSiteConfigAutoHealSettingActionCustomActionAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca DataSiteConfigAutoHealSettingActionCustomActionAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingActionCustomActionAttributes {
	return DataSiteConfigAutoHealSettingActionCustomActionAttributes{ref: ref}
}

func (ca DataSiteConfigAutoHealSettingActionCustomActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca DataSiteConfigAutoHealSettingActionCustomActionAttributes) Executable() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("executable"))
}

func (ca DataSiteConfigAutoHealSettingActionCustomActionAttributes) Parameters() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("parameters"))
}

type DataSiteConfigAutoHealSettingTriggerAttributes struct {
	ref terra.Reference
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingTriggerAttributes {
	return DataSiteConfigAutoHealSettingTriggerAttributes{ref: ref}
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) PrivateMemoryKb() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("private_memory_kb"))
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) Requests() terra.ListValue[DataSiteConfigAutoHealSettingTriggerRequestsAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingTriggerRequestsAttributes](t.ref.Append("requests"))
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) SlowRequest() terra.ListValue[DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes](t.ref.Append("slow_request"))
}

func (t DataSiteConfigAutoHealSettingTriggerAttributes) StatusCode() terra.ListValue[DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes](t.ref.Append("status_code"))
}

type DataSiteConfigAutoHealSettingTriggerRequestsAttributes struct {
	ref terra.Reference
}

func (r DataSiteConfigAutoHealSettingTriggerRequestsAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataSiteConfigAutoHealSettingTriggerRequestsAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingTriggerRequestsAttributes {
	return DataSiteConfigAutoHealSettingTriggerRequestsAttributes{ref: ref}
}

func (r DataSiteConfigAutoHealSettingTriggerRequestsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataSiteConfigAutoHealSettingTriggerRequestsAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("count"))
}

func (r DataSiteConfigAutoHealSettingTriggerRequestsAttributes) Interval() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("interval"))
}

type DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes struct {
	ref terra.Reference
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes {
	return DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes{ref: ref}
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(sr.ref.Append("count"))
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) Interval() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("interval"))
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("path"))
}

func (sr DataSiteConfigAutoHealSettingTriggerSlowRequestAttributes) TimeTaken() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("time_taken"))
}

type DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes struct {
	ref terra.Reference
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes {
	return DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes{ref: ref}
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("count"))
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) Interval() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("interval"))
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("path"))
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) StatusCodeRange() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("status_code_range"))
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) SubStatus() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("sub_status"))
}

func (sc DataSiteConfigAutoHealSettingTriggerStatusCodeAttributes) Win32StatusCode() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("win32_status_code"))
}

type DataSiteConfigCorsAttributes struct {
	ref terra.Reference
}

func (c DataSiteConfigCorsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataSiteConfigCorsAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigCorsAttributes {
	return DataSiteConfigCorsAttributes{ref: ref}
}

func (c DataSiteConfigCorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataSiteConfigCorsAttributes) AllowedOrigins() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("allowed_origins"))
}

func (c DataSiteConfigCorsAttributes) SupportCredentials() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("support_credentials"))
}

type DataSiteConfigIpRestrictionAttributes struct {
	ref terra.Reference
}

func (ir DataSiteConfigIpRestrictionAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir DataSiteConfigIpRestrictionAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigIpRestrictionAttributes {
	return DataSiteConfigIpRestrictionAttributes{ref: ref}
}

func (ir DataSiteConfigIpRestrictionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir DataSiteConfigIpRestrictionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("action"))
}

func (ir DataSiteConfigIpRestrictionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("description"))
}

func (ir DataSiteConfigIpRestrictionAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("ip_address"))
}

func (ir DataSiteConfigIpRestrictionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("name"))
}

func (ir DataSiteConfigIpRestrictionAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("priority"))
}

func (ir DataSiteConfigIpRestrictionAttributes) ServiceTag() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("service_tag"))
}

func (ir DataSiteConfigIpRestrictionAttributes) VirtualNetworkSubnetId() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("virtual_network_subnet_id"))
}

func (ir DataSiteConfigIpRestrictionAttributes) Headers() terra.ListValue[DataSiteConfigIpRestrictionHeadersAttributes] {
	return terra.ReferenceAsList[DataSiteConfigIpRestrictionHeadersAttributes](ir.ref.Append("headers"))
}

type DataSiteConfigIpRestrictionHeadersAttributes struct {
	ref terra.Reference
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigIpRestrictionHeadersAttributes {
	return DataSiteConfigIpRestrictionHeadersAttributes{ref: ref}
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) XAzureFdid() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_azure_fdid"))
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) XFdHealthProbe() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_fd_health_probe"))
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) XForwardedFor() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_forwarded_for"))
}

func (h DataSiteConfigIpRestrictionHeadersAttributes) XForwardedHost() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_forwarded_host"))
}

type DataSiteConfigScmIpRestrictionAttributes struct {
	ref terra.Reference
}

func (sir DataSiteConfigScmIpRestrictionAttributes) InternalRef() (terra.Reference, error) {
	return sir.ref, nil
}

func (sir DataSiteConfigScmIpRestrictionAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigScmIpRestrictionAttributes {
	return DataSiteConfigScmIpRestrictionAttributes{ref: ref}
}

func (sir DataSiteConfigScmIpRestrictionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sir.ref.InternalTokens()
}

func (sir DataSiteConfigScmIpRestrictionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(sir.ref.Append("action"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sir.ref.Append("description"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(sir.ref.Append("ip_address"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sir.ref.Append("name"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(sir.ref.Append("priority"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) ServiceTag() terra.StringValue {
	return terra.ReferenceAsString(sir.ref.Append("service_tag"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) VirtualNetworkSubnetId() terra.StringValue {
	return terra.ReferenceAsString(sir.ref.Append("virtual_network_subnet_id"))
}

func (sir DataSiteConfigScmIpRestrictionAttributes) Headers() terra.ListValue[DataSiteConfigScmIpRestrictionHeadersAttributes] {
	return terra.ReferenceAsList[DataSiteConfigScmIpRestrictionHeadersAttributes](sir.ref.Append("headers"))
}

type DataSiteConfigScmIpRestrictionHeadersAttributes struct {
	ref terra.Reference
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigScmIpRestrictionHeadersAttributes {
	return DataSiteConfigScmIpRestrictionHeadersAttributes{ref: ref}
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) XAzureFdid() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_azure_fdid"))
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) XFdHealthProbe() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_fd_health_probe"))
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) XForwardedFor() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_forwarded_for"))
}

func (h DataSiteConfigScmIpRestrictionHeadersAttributes) XForwardedHost() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](h.ref.Append("x_forwarded_host"))
}

type DataSiteConfigVirtualApplicationAttributes struct {
	ref terra.Reference
}

func (va DataSiteConfigVirtualApplicationAttributes) InternalRef() (terra.Reference, error) {
	return va.ref, nil
}

func (va DataSiteConfigVirtualApplicationAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigVirtualApplicationAttributes {
	return DataSiteConfigVirtualApplicationAttributes{ref: ref}
}

func (va DataSiteConfigVirtualApplicationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return va.ref.InternalTokens()
}

func (va DataSiteConfigVirtualApplicationAttributes) PhysicalPath() terra.StringValue {
	return terra.ReferenceAsString(va.ref.Append("physical_path"))
}

func (va DataSiteConfigVirtualApplicationAttributes) Preload() terra.BoolValue {
	return terra.ReferenceAsBool(va.ref.Append("preload"))
}

func (va DataSiteConfigVirtualApplicationAttributes) VirtualPath() terra.StringValue {
	return terra.ReferenceAsString(va.ref.Append("virtual_path"))
}

func (va DataSiteConfigVirtualApplicationAttributes) VirtualDirectory() terra.ListValue[DataSiteConfigVirtualApplicationVirtualDirectoryAttributes] {
	return terra.ReferenceAsList[DataSiteConfigVirtualApplicationVirtualDirectoryAttributes](va.ref.Append("virtual_directory"))
}

type DataSiteConfigVirtualApplicationVirtualDirectoryAttributes struct {
	ref terra.Reference
}

func (vd DataSiteConfigVirtualApplicationVirtualDirectoryAttributes) InternalRef() (terra.Reference, error) {
	return vd.ref, nil
}

func (vd DataSiteConfigVirtualApplicationVirtualDirectoryAttributes) InternalWithRef(ref terra.Reference) DataSiteConfigVirtualApplicationVirtualDirectoryAttributes {
	return DataSiteConfigVirtualApplicationVirtualDirectoryAttributes{ref: ref}
}

func (vd DataSiteConfigVirtualApplicationVirtualDirectoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vd.ref.InternalTokens()
}

func (vd DataSiteConfigVirtualApplicationVirtualDirectoryAttributes) PhysicalPath() terra.StringValue {
	return terra.ReferenceAsString(vd.ref.Append("physical_path"))
}

func (vd DataSiteConfigVirtualApplicationVirtualDirectoryAttributes) VirtualPath() terra.StringValue {
	return terra.ReferenceAsString(vd.ref.Append("virtual_path"))
}

type DataSiteCredentialAttributes struct {
	ref terra.Reference
}

func (sc DataSiteCredentialAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataSiteCredentialAttributes) InternalWithRef(ref terra.Reference) DataSiteCredentialAttributes {
	return DataSiteCredentialAttributes{ref: ref}
}

func (sc DataSiteCredentialAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataSiteCredentialAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("name"))
}

func (sc DataSiteCredentialAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("password"))
}

type DataStickySettingsAttributes struct {
	ref terra.Reference
}

func (ss DataStickySettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DataStickySettingsAttributes) InternalWithRef(ref terra.Reference) DataStickySettingsAttributes {
	return DataStickySettingsAttributes{ref: ref}
}

func (ss DataStickySettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DataStickySettingsAttributes) AppSettingNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ss.ref.Append("app_setting_names"))
}

func (ss DataStickySettingsAttributes) ConnectionStringNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ss.ref.Append("connection_string_names"))
}

type DataStorageAccountAttributes struct {
	ref terra.Reference
}

func (sa DataStorageAccountAttributes) InternalRef() (terra.Reference, error) {
	return sa.ref, nil
}

func (sa DataStorageAccountAttributes) InternalWithRef(ref terra.Reference) DataStorageAccountAttributes {
	return DataStorageAccountAttributes{ref: ref}
}

func (sa DataStorageAccountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sa.ref.InternalTokens()
}

func (sa DataStorageAccountAttributes) AccessKey() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("access_key"))
}

func (sa DataStorageAccountAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("account_name"))
}

func (sa DataStorageAccountAttributes) MountPath() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("mount_path"))
}

func (sa DataStorageAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("name"))
}

func (sa DataStorageAccountAttributes) ShareName() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("share_name"))
}

func (sa DataStorageAccountAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(sa.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAuthSettingsState struct {
	AdditionalLoginParameters   map[string]string                      `json:"additional_login_parameters"`
	AllowedExternalRedirectUrls []string                               `json:"allowed_external_redirect_urls"`
	DefaultProvider             string                                 `json:"default_provider"`
	Enabled                     bool                                   `json:"enabled"`
	Issuer                      string                                 `json:"issuer"`
	RuntimeVersion              string                                 `json:"runtime_version"`
	TokenRefreshExtensionHours  float64                                `json:"token_refresh_extension_hours"`
	TokenStoreEnabled           bool                                   `json:"token_store_enabled"`
	UnauthenticatedClientAction string                                 `json:"unauthenticated_client_action"`
	ActiveDirectory             []DataAuthSettingsActiveDirectoryState `json:"active_directory"`
	Facebook                    []DataAuthSettingsFacebookState        `json:"facebook"`
	Github                      []DataAuthSettingsGithubState          `json:"github"`
	Google                      []DataAuthSettingsGoogleState          `json:"google"`
	Microsoft                   []DataAuthSettingsMicrosoftState       `json:"microsoft"`
	Twitter                     []DataAuthSettingsTwitterState         `json:"twitter"`
}

type DataAuthSettingsActiveDirectoryState struct {
	AllowedAudiences        []string `json:"allowed_audiences"`
	ClientId                string   `json:"client_id"`
	ClientSecret            string   `json:"client_secret"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
}

type DataAuthSettingsFacebookState struct {
	AppId                string   `json:"app_id"`
	AppSecret            string   `json:"app_secret"`
	AppSecretSettingName string   `json:"app_secret_setting_name"`
	OauthScopes          []string `json:"oauth_scopes"`
}

type DataAuthSettingsGithubState struct {
	ClientId                string   `json:"client_id"`
	ClientSecret            string   `json:"client_secret"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	OauthScopes             []string `json:"oauth_scopes"`
}

type DataAuthSettingsGoogleState struct {
	ClientId                string   `json:"client_id"`
	ClientSecret            string   `json:"client_secret"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	OauthScopes             []string `json:"oauth_scopes"`
}

type DataAuthSettingsMicrosoftState struct {
	ClientId                string   `json:"client_id"`
	ClientSecret            string   `json:"client_secret"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	OauthScopes             []string `json:"oauth_scopes"`
}

type DataAuthSettingsTwitterState struct {
	ConsumerKey               string `json:"consumer_key"`
	ConsumerSecret            string `json:"consumer_secret"`
	ConsumerSecretSettingName string `json:"consumer_secret_setting_name"`
}

type DataAuthSettingsV2State struct {
	AuthEnabled                        bool                                         `json:"auth_enabled"`
	ConfigFilePath                     string                                       `json:"config_file_path"`
	DefaultProvider                    string                                       `json:"default_provider"`
	ExcludedPaths                      []string                                     `json:"excluded_paths"`
	ForwardProxyConvention             string                                       `json:"forward_proxy_convention"`
	ForwardProxyCustomHostHeaderName   string                                       `json:"forward_proxy_custom_host_header_name"`
	ForwardProxyCustomSchemeHeaderName string                                       `json:"forward_proxy_custom_scheme_header_name"`
	HttpRouteApiPrefix                 string                                       `json:"http_route_api_prefix"`
	RequireAuthentication              bool                                         `json:"require_authentication"`
	RequireHttps                       bool                                         `json:"require_https"`
	RuntimeVersion                     string                                       `json:"runtime_version"`
	UnauthenticatedAction              string                                       `json:"unauthenticated_action"`
	ActiveDirectoryV2                  []DataAuthSettingsV2ActiveDirectoryV2State   `json:"active_directory_v2"`
	AppleV2                            []DataAuthSettingsV2AppleV2State             `json:"apple_v2"`
	AzureStaticWebAppV2                []DataAuthSettingsV2AzureStaticWebAppV2State `json:"azure_static_web_app_v2"`
	CustomOidcV2                       []DataAuthSettingsV2CustomOidcV2State        `json:"custom_oidc_v2"`
	FacebookV2                         []DataAuthSettingsV2FacebookV2State          `json:"facebook_v2"`
	GithubV2                           []DataAuthSettingsV2GithubV2State            `json:"github_v2"`
	GoogleV2                           []DataAuthSettingsV2GoogleV2State            `json:"google_v2"`
	Login                              []DataAuthSettingsV2LoginState               `json:"login"`
	MicrosoftV2                        []DataAuthSettingsV2MicrosoftV2State         `json:"microsoft_v2"`
	TwitterV2                          []DataAuthSettingsV2TwitterV2State           `json:"twitter_v2"`
}

type DataAuthSettingsV2ActiveDirectoryV2State struct {
	AllowedApplications               []string          `json:"allowed_applications"`
	AllowedAudiences                  []string          `json:"allowed_audiences"`
	AllowedGroups                     []string          `json:"allowed_groups"`
	AllowedIdentities                 []string          `json:"allowed_identities"`
	ClientId                          string            `json:"client_id"`
	ClientSecretCertificateThumbprint string            `json:"client_secret_certificate_thumbprint"`
	ClientSecretSettingName           string            `json:"client_secret_setting_name"`
	JwtAllowedClientApplications      []string          `json:"jwt_allowed_client_applications"`
	JwtAllowedGroups                  []string          `json:"jwt_allowed_groups"`
	LoginParameters                   map[string]string `json:"login_parameters"`
	TenantAuthEndpoint                string            `json:"tenant_auth_endpoint"`
	WwwAuthenticationDisabled         bool              `json:"www_authentication_disabled"`
}

type DataAuthSettingsV2AppleV2State struct {
	ClientId                string   `json:"client_id"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	LoginScopes             []string `json:"login_scopes"`
}

type DataAuthSettingsV2AzureStaticWebAppV2State struct {
	ClientId string `json:"client_id"`
}

type DataAuthSettingsV2CustomOidcV2State struct {
	AuthorisationEndpoint       string   `json:"authorisation_endpoint"`
	CertificationUri            string   `json:"certification_uri"`
	ClientCredentialMethod      string   `json:"client_credential_method"`
	ClientId                    string   `json:"client_id"`
	ClientSecretSettingName     string   `json:"client_secret_setting_name"`
	IssuerEndpoint              string   `json:"issuer_endpoint"`
	Name                        string   `json:"name"`
	NameClaimType               string   `json:"name_claim_type"`
	OpenidConfigurationEndpoint string   `json:"openid_configuration_endpoint"`
	Scopes                      []string `json:"scopes"`
	TokenEndpoint               string   `json:"token_endpoint"`
}

type DataAuthSettingsV2FacebookV2State struct {
	AppId                string   `json:"app_id"`
	AppSecretSettingName string   `json:"app_secret_setting_name"`
	GraphApiVersion      string   `json:"graph_api_version"`
	LoginScopes          []string `json:"login_scopes"`
}

type DataAuthSettingsV2GithubV2State struct {
	ClientId                string   `json:"client_id"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	LoginScopes             []string `json:"login_scopes"`
}

type DataAuthSettingsV2GoogleV2State struct {
	AllowedAudiences        []string `json:"allowed_audiences"`
	ClientId                string   `json:"client_id"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	LoginScopes             []string `json:"login_scopes"`
}

type DataAuthSettingsV2LoginState struct {
	AllowedExternalRedirectUrls   []string `json:"allowed_external_redirect_urls"`
	CookieExpirationConvention    string   `json:"cookie_expiration_convention"`
	CookieExpirationTime          string   `json:"cookie_expiration_time"`
	LogoutEndpoint                string   `json:"logout_endpoint"`
	NonceExpirationTime           string   `json:"nonce_expiration_time"`
	PreserveUrlFragmentsForLogins bool     `json:"preserve_url_fragments_for_logins"`
	TokenRefreshExtensionTime     float64  `json:"token_refresh_extension_time"`
	TokenStoreEnabled             bool     `json:"token_store_enabled"`
	TokenStorePath                string   `json:"token_store_path"`
	TokenStoreSasSettingName      string   `json:"token_store_sas_setting_name"`
	ValidateNonce                 bool     `json:"validate_nonce"`
}

type DataAuthSettingsV2MicrosoftV2State struct {
	AllowedAudiences        []string `json:"allowed_audiences"`
	ClientId                string   `json:"client_id"`
	ClientSecretSettingName string   `json:"client_secret_setting_name"`
	LoginScopes             []string `json:"login_scopes"`
}

type DataAuthSettingsV2TwitterV2State struct {
	ConsumerKey               string `json:"consumer_key"`
	ConsumerSecretSettingName string `json:"consumer_secret_setting_name"`
}

type DataBackupState struct {
	Enabled           bool                      `json:"enabled"`
	Name              string                    `json:"name"`
	StorageAccountUrl string                    `json:"storage_account_url"`
	Schedule          []DataBackupScheduleState `json:"schedule"`
}

type DataBackupScheduleState struct {
	FrequencyInterval    float64 `json:"frequency_interval"`
	FrequencyUnit        string  `json:"frequency_unit"`
	KeepAtLeastOneBackup bool    `json:"keep_at_least_one_backup"`
	LastExecutionTime    string  `json:"last_execution_time"`
	RetentionPeriodDays  float64 `json:"retention_period_days"`
	StartTime            string  `json:"start_time"`
}

type DataConnectionStringState struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

type DataIdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	PrincipalId string   `json:"principal_id"`
	TenantId    string   `json:"tenant_id"`
	Type        string   `json:"type"`
}

type DataLogsState struct {
	DetailedErrorMessages bool                           `json:"detailed_error_messages"`
	FailedRequestTracing  bool                           `json:"failed_request_tracing"`
	ApplicationLogs       []DataLogsApplicationLogsState `json:"application_logs"`
	HttpLogs              []DataLogsHttpLogsState        `json:"http_logs"`
}

type DataLogsApplicationLogsState struct {
	FileSystemLevel  string                                         `json:"file_system_level"`
	AzureBlobStorage []DataLogsApplicationLogsAzureBlobStorageState `json:"azure_blob_storage"`
}

type DataLogsApplicationLogsAzureBlobStorageState struct {
	Level           string  `json:"level"`
	RetentionInDays float64 `json:"retention_in_days"`
	SasUrl          string  `json:"sas_url"`
}

type DataLogsHttpLogsState struct {
	AzureBlobStorage []DataLogsHttpLogsAzureBlobStorageState `json:"azure_blob_storage"`
	FileSystem       []DataLogsHttpLogsFileSystemState       `json:"file_system"`
}

type DataLogsHttpLogsAzureBlobStorageState struct {
	RetentionInDays float64 `json:"retention_in_days"`
	SasUrl          string  `json:"sas_url"`
}

type DataLogsHttpLogsFileSystemState struct {
	RetentionInDays float64 `json:"retention_in_days"`
	RetentionInMb   float64 `json:"retention_in_mb"`
}

type DataSiteConfigState struct {
	AlwaysOn                                 bool                                    `json:"always_on"`
	ApiDefinitionUrl                         string                                  `json:"api_definition_url"`
	ApiManagementApiId                       string                                  `json:"api_management_api_id"`
	AppCommandLine                           string                                  `json:"app_command_line"`
	AutoHealEnabled                          bool                                    `json:"auto_heal_enabled"`
	ContainerRegistryManagedIdentityClientId string                                  `json:"container_registry_managed_identity_client_id"`
	ContainerRegistryUseManagedIdentity      bool                                    `json:"container_registry_use_managed_identity"`
	DefaultDocuments                         []string                                `json:"default_documents"`
	DetailedErrorLoggingEnabled              bool                                    `json:"detailed_error_logging_enabled"`
	FtpsState                                string                                  `json:"ftps_state"`
	HealthCheckEvictionTimeInMin             float64                                 `json:"health_check_eviction_time_in_min"`
	HealthCheckPath                          string                                  `json:"health_check_path"`
	Http2Enabled                             bool                                    `json:"http2_enabled"`
	IpRestrictionDefaultAction               string                                  `json:"ip_restriction_default_action"`
	LoadBalancingMode                        string                                  `json:"load_balancing_mode"`
	LocalMysqlEnabled                        bool                                    `json:"local_mysql_enabled"`
	ManagedPipelineMode                      string                                  `json:"managed_pipeline_mode"`
	MinimumTlsVersion                        string                                  `json:"minimum_tls_version"`
	RemoteDebuggingEnabled                   bool                                    `json:"remote_debugging_enabled"`
	RemoteDebuggingVersion                   string                                  `json:"remote_debugging_version"`
	ScmIpRestrictionDefaultAction            string                                  `json:"scm_ip_restriction_default_action"`
	ScmMinimumTlsVersion                     string                                  `json:"scm_minimum_tls_version"`
	ScmType                                  string                                  `json:"scm_type"`
	ScmUseMainIpRestriction                  bool                                    `json:"scm_use_main_ip_restriction"`
	Use32BitWorker                           bool                                    `json:"use_32_bit_worker"`
	VnetRouteAllEnabled                      bool                                    `json:"vnet_route_all_enabled"`
	WebsocketsEnabled                        bool                                    `json:"websockets_enabled"`
	WindowsFxVersion                         string                                  `json:"windows_fx_version"`
	WorkerCount                              float64                                 `json:"worker_count"`
	ApplicationStack                         []DataSiteConfigApplicationStackState   `json:"application_stack"`
	AutoHealSetting                          []DataSiteConfigAutoHealSettingState    `json:"auto_heal_setting"`
	Cors                                     []DataSiteConfigCorsState               `json:"cors"`
	IpRestriction                            []DataSiteConfigIpRestrictionState      `json:"ip_restriction"`
	ScmIpRestriction                         []DataSiteConfigScmIpRestrictionState   `json:"scm_ip_restriction"`
	VirtualApplication                       []DataSiteConfigVirtualApplicationState `json:"virtual_application"`
}

type DataSiteConfigApplicationStackState struct {
	CurrentStack              string `json:"current_stack"`
	DockerContainerName       string `json:"docker_container_name"`
	DockerContainerRegistry   string `json:"docker_container_registry"`
	DockerContainerTag        string `json:"docker_container_tag"`
	DockerImageName           string `json:"docker_image_name"`
	DockerRegistryPassword    string `json:"docker_registry_password"`
	DockerRegistryUrl         string `json:"docker_registry_url"`
	DockerRegistryUsername    string `json:"docker_registry_username"`
	DotnetCoreVersion         string `json:"dotnet_core_version"`
	DotnetVersion             string `json:"dotnet_version"`
	JavaContainer             string `json:"java_container"`
	JavaContainerVersion      string `json:"java_container_version"`
	JavaEmbeddedServerEnabled bool   `json:"java_embedded_server_enabled"`
	JavaVersion               string `json:"java_version"`
	NodeVersion               string `json:"node_version"`
	PhpVersion                string `json:"php_version"`
	Python                    bool   `json:"python"`
	PythonVersion             string `json:"python_version"`
	TomcatVersion             string `json:"tomcat_version"`
}

type DataSiteConfigAutoHealSettingState struct {
	Action  []DataSiteConfigAutoHealSettingActionState  `json:"action"`
	Trigger []DataSiteConfigAutoHealSettingTriggerState `json:"trigger"`
}

type DataSiteConfigAutoHealSettingActionState struct {
	ActionType                  string                                                 `json:"action_type"`
	MinimumProcessExecutionTime string                                                 `json:"minimum_process_execution_time"`
	CustomAction                []DataSiteConfigAutoHealSettingActionCustomActionState `json:"custom_action"`
}

type DataSiteConfigAutoHealSettingActionCustomActionState struct {
	Executable string `json:"executable"`
	Parameters string `json:"parameters"`
}

type DataSiteConfigAutoHealSettingTriggerState struct {
	PrivateMemoryKb float64                                                `json:"private_memory_kb"`
	Requests        []DataSiteConfigAutoHealSettingTriggerRequestsState    `json:"requests"`
	SlowRequest     []DataSiteConfigAutoHealSettingTriggerSlowRequestState `json:"slow_request"`
	StatusCode      []DataSiteConfigAutoHealSettingTriggerStatusCodeState  `json:"status_code"`
}

type DataSiteConfigAutoHealSettingTriggerRequestsState struct {
	Count    float64 `json:"count"`
	Interval string  `json:"interval"`
}

type DataSiteConfigAutoHealSettingTriggerSlowRequestState struct {
	Count     float64 `json:"count"`
	Interval  string  `json:"interval"`
	Path      string  `json:"path"`
	TimeTaken string  `json:"time_taken"`
}

type DataSiteConfigAutoHealSettingTriggerStatusCodeState struct {
	Count           float64 `json:"count"`
	Interval        string  `json:"interval"`
	Path            string  `json:"path"`
	StatusCodeRange string  `json:"status_code_range"`
	SubStatus       float64 `json:"sub_status"`
	Win32StatusCode float64 `json:"win32_status_code"`
}

type DataSiteConfigCorsState struct {
	AllowedOrigins     []string `json:"allowed_origins"`
	SupportCredentials bool     `json:"support_credentials"`
}

type DataSiteConfigIpRestrictionState struct {
	Action                 string                                    `json:"action"`
	Description            string                                    `json:"description"`
	IpAddress              string                                    `json:"ip_address"`
	Name                   string                                    `json:"name"`
	Priority               float64                                   `json:"priority"`
	ServiceTag             string                                    `json:"service_tag"`
	VirtualNetworkSubnetId string                                    `json:"virtual_network_subnet_id"`
	Headers                []DataSiteConfigIpRestrictionHeadersState `json:"headers"`
}

type DataSiteConfigIpRestrictionHeadersState struct {
	XAzureFdid     []string `json:"x_azure_fdid"`
	XFdHealthProbe []string `json:"x_fd_health_probe"`
	XForwardedFor  []string `json:"x_forwarded_for"`
	XForwardedHost []string `json:"x_forwarded_host"`
}

type DataSiteConfigScmIpRestrictionState struct {
	Action                 string                                       `json:"action"`
	Description            string                                       `json:"description"`
	IpAddress              string                                       `json:"ip_address"`
	Name                   string                                       `json:"name"`
	Priority               float64                                      `json:"priority"`
	ServiceTag             string                                       `json:"service_tag"`
	VirtualNetworkSubnetId string                                       `json:"virtual_network_subnet_id"`
	Headers                []DataSiteConfigScmIpRestrictionHeadersState `json:"headers"`
}

type DataSiteConfigScmIpRestrictionHeadersState struct {
	XAzureFdid     []string `json:"x_azure_fdid"`
	XFdHealthProbe []string `json:"x_fd_health_probe"`
	XForwardedFor  []string `json:"x_forwarded_for"`
	XForwardedHost []string `json:"x_forwarded_host"`
}

type DataSiteConfigVirtualApplicationState struct {
	PhysicalPath     string                                                  `json:"physical_path"`
	Preload          bool                                                    `json:"preload"`
	VirtualPath      string                                                  `json:"virtual_path"`
	VirtualDirectory []DataSiteConfigVirtualApplicationVirtualDirectoryState `json:"virtual_directory"`
}

type DataSiteConfigVirtualApplicationVirtualDirectoryState struct {
	PhysicalPath string `json:"physical_path"`
	VirtualPath  string `json:"virtual_path"`
}

type DataSiteCredentialState struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type DataStickySettingsState struct {
	AppSettingNames       []string `json:"app_setting_names"`
	ConnectionStringNames []string `json:"connection_string_names"`
}

type DataStorageAccountState struct {
	AccessKey   string `json:"access_key"`
	AccountName string `json:"account_name"`
	MountPath   string `json:"mount_path"`
	Name        string `json:"name"`
	ShareName   string `json:"share_name"`
	Type        string `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
