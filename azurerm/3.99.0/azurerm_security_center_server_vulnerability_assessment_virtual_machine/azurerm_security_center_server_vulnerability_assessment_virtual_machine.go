// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_security_center_server_vulnerability_assessment_virtual_machine

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_security_center_server_vulnerability_assessment_virtual_machine.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascsvavm *Resource) Type() string {
	return "azurerm_security_center_server_vulnerability_assessment_virtual_machine"
}

// LocalName returns the local name for [Resource].
func (ascsvavm *Resource) LocalName() string {
	return ascsvavm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascsvavm *Resource) Configuration() interface{} {
	return ascsvavm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascsvavm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascsvavm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascsvavm *Resource) Dependencies() terra.Dependencies {
	return ascsvavm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascsvavm *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascsvavm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascsvavm *Resource) Attributes() azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineAttributes {
	return azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineAttributes{ref: terra.ReferenceResource(ascsvavm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascsvavm *Resource) ImportState(state io.Reader) error {
	ascsvavm.state = &azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineState{}
	if err := json.NewDecoder(state).Decode(ascsvavm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascsvavm.Type(), ascsvavm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascsvavm *Resource) State() (*azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineState, bool) {
	return ascsvavm.state, ascsvavm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascsvavm *Resource) StateMust() *azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineState {
	if ascsvavm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascsvavm.Type(), ascsvavm.LocalName()))
	}
	return ascsvavm.state
}

// Args contains the configurations for azurerm_security_center_server_vulnerability_assessment_virtual_machine.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VirtualMachineId: string, required
	VirtualMachineId terra.StringValue `hcl:"virtual_machine_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_security_center_server_vulnerability_assessment_virtual_machine.
func (ascsvavm azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascsvavm.ref.Append("id"))
}

// VirtualMachineId returns a reference to field virtual_machine_id of azurerm_security_center_server_vulnerability_assessment_virtual_machine.
func (ascsvavm azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineAttributes) VirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(ascsvavm.ref.Append("virtual_machine_id"))
}

func (ascsvavm azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascsvavm.ref.Append("timeouts"))
}

type azurermSecurityCenterServerVulnerabilityAssessmentVirtualMachineState struct {
	Id               string         `json:"id"`
	VirtualMachineId string         `json:"virtual_machine_id"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
