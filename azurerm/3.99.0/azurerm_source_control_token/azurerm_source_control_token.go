// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_source_control_token

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_source_control_token.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSourceControlTokenState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asct *Resource) Type() string {
	return "azurerm_source_control_token"
}

// LocalName returns the local name for [Resource].
func (asct *Resource) LocalName() string {
	return asct.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asct *Resource) Configuration() interface{} {
	return asct.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asct *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asct)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asct *Resource) Dependencies() terra.Dependencies {
	return asct.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asct *Resource) LifecycleManagement() *terra.Lifecycle {
	return asct.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asct *Resource) Attributes() azurermSourceControlTokenAttributes {
	return azurermSourceControlTokenAttributes{ref: terra.ReferenceResource(asct)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asct *Resource) ImportState(state io.Reader) error {
	asct.state = &azurermSourceControlTokenState{}
	if err := json.NewDecoder(state).Decode(asct.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asct.Type(), asct.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asct *Resource) State() (*azurermSourceControlTokenState, bool) {
	return asct.state, asct.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asct *Resource) StateMust() *azurermSourceControlTokenState {
	if asct.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asct.Type(), asct.LocalName()))
	}
	return asct.state
}

// Args contains the configurations for azurerm_source_control_token.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Token: string, required
	Token terra.StringValue `hcl:"token,attr" validate:"required"`
	// TokenSecret: string, optional
	TokenSecret terra.StringValue `hcl:"token_secret,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSourceControlTokenAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_source_control_token.
func (asct azurermSourceControlTokenAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asct.ref.Append("id"))
}

// Token returns a reference to field token of azurerm_source_control_token.
func (asct azurermSourceControlTokenAttributes) Token() terra.StringValue {
	return terra.ReferenceAsString(asct.ref.Append("token"))
}

// TokenSecret returns a reference to field token_secret of azurerm_source_control_token.
func (asct azurermSourceControlTokenAttributes) TokenSecret() terra.StringValue {
	return terra.ReferenceAsString(asct.ref.Append("token_secret"))
}

// Type returns a reference to field type of azurerm_source_control_token.
func (asct azurermSourceControlTokenAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(asct.ref.Append("type"))
}

func (asct azurermSourceControlTokenAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asct.ref.Append("timeouts"))
}

type azurermSourceControlTokenState struct {
	Id          string         `json:"id"`
	Token       string         `json:"token"`
	TokenSecret string         `json:"token_secret"`
	Type        string         `json:"type"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
