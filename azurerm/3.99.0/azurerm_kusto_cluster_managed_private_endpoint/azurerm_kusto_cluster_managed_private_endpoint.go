// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_kusto_cluster_managed_private_endpoint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_kusto_cluster_managed_private_endpoint.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermKustoClusterManagedPrivateEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (akcmpe *Resource) Type() string {
	return "azurerm_kusto_cluster_managed_private_endpoint"
}

// LocalName returns the local name for [Resource].
func (akcmpe *Resource) LocalName() string {
	return akcmpe.Name
}

// Configuration returns the configuration (args) for [Resource].
func (akcmpe *Resource) Configuration() interface{} {
	return akcmpe.Args
}

// DependOn is used for other resources to depend on [Resource].
func (akcmpe *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(akcmpe)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (akcmpe *Resource) Dependencies() terra.Dependencies {
	return akcmpe.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (akcmpe *Resource) LifecycleManagement() *terra.Lifecycle {
	return akcmpe.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (akcmpe *Resource) Attributes() azurermKustoClusterManagedPrivateEndpointAttributes {
	return azurermKustoClusterManagedPrivateEndpointAttributes{ref: terra.ReferenceResource(akcmpe)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (akcmpe *Resource) ImportState(state io.Reader) error {
	akcmpe.state = &azurermKustoClusterManagedPrivateEndpointState{}
	if err := json.NewDecoder(state).Decode(akcmpe.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", akcmpe.Type(), akcmpe.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (akcmpe *Resource) State() (*azurermKustoClusterManagedPrivateEndpointState, bool) {
	return akcmpe.state, akcmpe.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (akcmpe *Resource) StateMust() *azurermKustoClusterManagedPrivateEndpointState {
	if akcmpe.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", akcmpe.Type(), akcmpe.LocalName()))
	}
	return akcmpe.state
}

// Args contains the configurations for azurerm_kusto_cluster_managed_private_endpoint.
type Args struct {
	// ClusterName: string, required
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// GroupId: string, required
	GroupId terra.StringValue `hcl:"group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrivateLinkResourceId: string, required
	PrivateLinkResourceId terra.StringValue `hcl:"private_link_resource_id,attr" validate:"required"`
	// PrivateLinkResourceRegion: string, optional
	PrivateLinkResourceRegion terra.StringValue `hcl:"private_link_resource_region,attr"`
	// RequestMessage: string, optional
	RequestMessage terra.StringValue `hcl:"request_message,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermKustoClusterManagedPrivateEndpointAttributes struct {
	ref terra.Reference
}

// ClusterName returns a reference to field cluster_name of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("cluster_name"))
}

// GroupId returns a reference to field group_id of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("group_id"))
}

// Id returns a reference to field id of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("name"))
}

// PrivateLinkResourceId returns a reference to field private_link_resource_id of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) PrivateLinkResourceId() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("private_link_resource_id"))
}

// PrivateLinkResourceRegion returns a reference to field private_link_resource_region of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) PrivateLinkResourceRegion() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("private_link_resource_region"))
}

// RequestMessage returns a reference to field request_message of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) RequestMessage() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("request_message"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_kusto_cluster_managed_private_endpoint.
func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(akcmpe.ref.Append("resource_group_name"))
}

func (akcmpe azurermKustoClusterManagedPrivateEndpointAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](akcmpe.ref.Append("timeouts"))
}

type azurermKustoClusterManagedPrivateEndpointState struct {
	ClusterName               string         `json:"cluster_name"`
	GroupId                   string         `json:"group_id"`
	Id                        string         `json:"id"`
	Name                      string         `json:"name"`
	PrivateLinkResourceId     string         `json:"private_link_resource_id"`
	PrivateLinkResourceRegion string         `json:"private_link_resource_region"`
	RequestMessage            string         `json:"request_message"`
	ResourceGroupName         string         `json:"resource_group_name"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
