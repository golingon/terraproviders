// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_key_vault_encrypted_value

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_key_vault_encrypted_value.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (akvev *DataSource) DataSource() string {
	return "azurerm_key_vault_encrypted_value"
}

// LocalName returns the local name for [DataSource].
func (akvev *DataSource) LocalName() string {
	return akvev.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (akvev *DataSource) Configuration() interface{} {
	return akvev.Args
}

// Attributes returns the attributes for [DataSource].
func (akvev *DataSource) Attributes() dataAzurermKeyVaultEncryptedValueAttributes {
	return dataAzurermKeyVaultEncryptedValueAttributes{ref: terra.ReferenceDataSource(akvev)}
}

// DataArgs contains the configurations for azurerm_key_vault_encrypted_value.
type DataArgs struct {
	// Algorithm: string, required
	Algorithm terra.StringValue `hcl:"algorithm,attr" validate:"required"`
	// EncryptedData: string, optional
	EncryptedData terra.StringValue `hcl:"encrypted_data,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultKeyId: string, required
	KeyVaultKeyId terra.StringValue `hcl:"key_vault_key_id,attr" validate:"required"`
	// PlainTextValue: string, optional
	PlainTextValue terra.StringValue `hcl:"plain_text_value,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermKeyVaultEncryptedValueAttributes struct {
	ref terra.Reference
}

// Algorithm returns a reference to field algorithm of azurerm_key_vault_encrypted_value.
func (akvev dataAzurermKeyVaultEncryptedValueAttributes) Algorithm() terra.StringValue {
	return terra.ReferenceAsString(akvev.ref.Append("algorithm"))
}

// DecodedPlainTextValue returns a reference to field decoded_plain_text_value of azurerm_key_vault_encrypted_value.
func (akvev dataAzurermKeyVaultEncryptedValueAttributes) DecodedPlainTextValue() terra.StringValue {
	return terra.ReferenceAsString(akvev.ref.Append("decoded_plain_text_value"))
}

// EncryptedData returns a reference to field encrypted_data of azurerm_key_vault_encrypted_value.
func (akvev dataAzurermKeyVaultEncryptedValueAttributes) EncryptedData() terra.StringValue {
	return terra.ReferenceAsString(akvev.ref.Append("encrypted_data"))
}

// Id returns a reference to field id of azurerm_key_vault_encrypted_value.
func (akvev dataAzurermKeyVaultEncryptedValueAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akvev.ref.Append("id"))
}

// KeyVaultKeyId returns a reference to field key_vault_key_id of azurerm_key_vault_encrypted_value.
func (akvev dataAzurermKeyVaultEncryptedValueAttributes) KeyVaultKeyId() terra.StringValue {
	return terra.ReferenceAsString(akvev.ref.Append("key_vault_key_id"))
}

// PlainTextValue returns a reference to field plain_text_value of azurerm_key_vault_encrypted_value.
func (akvev dataAzurermKeyVaultEncryptedValueAttributes) PlainTextValue() terra.StringValue {
	return terra.ReferenceAsString(akvev.ref.Append("plain_text_value"))
}

func (akvev dataAzurermKeyVaultEncryptedValueAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](akvev.ref.Append("timeouts"))
}
