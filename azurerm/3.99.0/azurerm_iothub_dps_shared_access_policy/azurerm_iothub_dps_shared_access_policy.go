// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iothub_dps_shared_access_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iothub_dps_shared_access_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIothubDpsSharedAccessPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aidsap *Resource) Type() string {
	return "azurerm_iothub_dps_shared_access_policy"
}

// LocalName returns the local name for [Resource].
func (aidsap *Resource) LocalName() string {
	return aidsap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aidsap *Resource) Configuration() interface{} {
	return aidsap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aidsap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aidsap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aidsap *Resource) Dependencies() terra.Dependencies {
	return aidsap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aidsap *Resource) LifecycleManagement() *terra.Lifecycle {
	return aidsap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aidsap *Resource) Attributes() azurermIothubDpsSharedAccessPolicyAttributes {
	return azurermIothubDpsSharedAccessPolicyAttributes{ref: terra.ReferenceResource(aidsap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aidsap *Resource) ImportState(state io.Reader) error {
	aidsap.state = &azurermIothubDpsSharedAccessPolicyState{}
	if err := json.NewDecoder(state).Decode(aidsap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aidsap.Type(), aidsap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aidsap *Resource) State() (*azurermIothubDpsSharedAccessPolicyState, bool) {
	return aidsap.state, aidsap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aidsap *Resource) StateMust() *azurermIothubDpsSharedAccessPolicyState {
	if aidsap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aidsap.Type(), aidsap.LocalName()))
	}
	return aidsap.state
}

// Args contains the configurations for azurerm_iothub_dps_shared_access_policy.
type Args struct {
	// EnrollmentRead: bool, optional
	EnrollmentRead terra.BoolValue `hcl:"enrollment_read,attr"`
	// EnrollmentWrite: bool, optional
	EnrollmentWrite terra.BoolValue `hcl:"enrollment_write,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubDpsName: string, required
	IothubDpsName terra.StringValue `hcl:"iothub_dps_name,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RegistrationRead: bool, optional
	RegistrationRead terra.BoolValue `hcl:"registration_read,attr"`
	// RegistrationWrite: bool, optional
	RegistrationWrite terra.BoolValue `hcl:"registration_write,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServiceConfig: bool, optional
	ServiceConfig terra.BoolValue `hcl:"service_config,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIothubDpsSharedAccessPolicyAttributes struct {
	ref terra.Reference
}

// EnrollmentRead returns a reference to field enrollment_read of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) EnrollmentRead() terra.BoolValue {
	return terra.ReferenceAsBool(aidsap.ref.Append("enrollment_read"))
}

// EnrollmentWrite returns a reference to field enrollment_write of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) EnrollmentWrite() terra.BoolValue {
	return terra.ReferenceAsBool(aidsap.ref.Append("enrollment_write"))
}

// Id returns a reference to field id of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("id"))
}

// IothubDpsName returns a reference to field iothub_dps_name of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) IothubDpsName() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("iothub_dps_name"))
}

// Name returns a reference to field name of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("name"))
}

// PrimaryConnectionString returns a reference to field primary_connection_string of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("primary_connection_string"))
}

// PrimaryKey returns a reference to field primary_key of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("primary_key"))
}

// RegistrationRead returns a reference to field registration_read of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) RegistrationRead() terra.BoolValue {
	return terra.ReferenceAsBool(aidsap.ref.Append("registration_read"))
}

// RegistrationWrite returns a reference to field registration_write of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) RegistrationWrite() terra.BoolValue {
	return terra.ReferenceAsBool(aidsap.ref.Append("registration_write"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("resource_group_name"))
}

// SecondaryConnectionString returns a reference to field secondary_connection_string of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("secondary_connection_string"))
}

// SecondaryKey returns a reference to field secondary_key of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceAsString(aidsap.ref.Append("secondary_key"))
}

// ServiceConfig returns a reference to field service_config of azurerm_iothub_dps_shared_access_policy.
func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) ServiceConfig() terra.BoolValue {
	return terra.ReferenceAsBool(aidsap.ref.Append("service_config"))
}

func (aidsap azurermIothubDpsSharedAccessPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aidsap.ref.Append("timeouts"))
}

type azurermIothubDpsSharedAccessPolicyState struct {
	EnrollmentRead            bool           `json:"enrollment_read"`
	EnrollmentWrite           bool           `json:"enrollment_write"`
	Id                        string         `json:"id"`
	IothubDpsName             string         `json:"iothub_dps_name"`
	Name                      string         `json:"name"`
	PrimaryConnectionString   string         `json:"primary_connection_string"`
	PrimaryKey                string         `json:"primary_key"`
	RegistrationRead          bool           `json:"registration_read"`
	RegistrationWrite         bool           `json:"registration_write"`
	ResourceGroupName         string         `json:"resource_group_name"`
	SecondaryConnectionString string         `json:"secondary_connection_string"`
	SecondaryKey              string         `json:"secondary_key"`
	ServiceConfig             bool           `json:"service_config"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
