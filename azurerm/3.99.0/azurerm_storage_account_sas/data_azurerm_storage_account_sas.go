// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_account_sas

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_storage_account_sas.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asas *DataSource) DataSource() string {
	return "azurerm_storage_account_sas"
}

// LocalName returns the local name for [DataSource].
func (asas *DataSource) LocalName() string {
	return asas.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asas *DataSource) Configuration() interface{} {
	return asas.Args
}

// Attributes returns the attributes for [DataSource].
func (asas *DataSource) Attributes() dataAzurermStorageAccountSasAttributes {
	return dataAzurermStorageAccountSasAttributes{ref: terra.ReferenceDataSource(asas)}
}

// DataArgs contains the configurations for azurerm_storage_account_sas.
type DataArgs struct {
	// ConnectionString: string, required
	ConnectionString terra.StringValue `hcl:"connection_string,attr" validate:"required"`
	// Expiry: string, required
	Expiry terra.StringValue `hcl:"expiry,attr" validate:"required"`
	// HttpsOnly: bool, optional
	HttpsOnly terra.BoolValue `hcl:"https_only,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpAddresses: string, optional
	IpAddresses terra.StringValue `hcl:"ip_addresses,attr"`
	// SignedVersion: string, optional
	SignedVersion terra.StringValue `hcl:"signed_version,attr"`
	// Start: string, required
	Start terra.StringValue `hcl:"start,attr" validate:"required"`
	// Permissions: required
	Permissions *DataPermissions `hcl:"permissions,block" validate:"required"`
	// ResourceTypes: required
	ResourceTypes *DataResourceTypes `hcl:"resource_types,block" validate:"required"`
	// Services: required
	Services *DataServices `hcl:"services,block" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermStorageAccountSasAttributes struct {
	ref terra.Reference
}

// ConnectionString returns a reference to field connection_string of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) ConnectionString() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("connection_string"))
}

// Expiry returns a reference to field expiry of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) Expiry() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("expiry"))
}

// HttpsOnly returns a reference to field https_only of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceAsBool(asas.ref.Append("https_only"))
}

// Id returns a reference to field id of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("id"))
}

// IpAddresses returns a reference to field ip_addresses of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) IpAddresses() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("ip_addresses"))
}

// Sas returns a reference to field sas of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) Sas() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("sas"))
}

// SignedVersion returns a reference to field signed_version of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) SignedVersion() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("signed_version"))
}

// Start returns a reference to field start of azurerm_storage_account_sas.
func (asas dataAzurermStorageAccountSasAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(asas.ref.Append("start"))
}

func (asas dataAzurermStorageAccountSasAttributes) Permissions() terra.ListValue[DataPermissionsAttributes] {
	return terra.ReferenceAsList[DataPermissionsAttributes](asas.ref.Append("permissions"))
}

func (asas dataAzurermStorageAccountSasAttributes) ResourceTypes() terra.ListValue[DataResourceTypesAttributes] {
	return terra.ReferenceAsList[DataResourceTypesAttributes](asas.ref.Append("resource_types"))
}

func (asas dataAzurermStorageAccountSasAttributes) Services() terra.ListValue[DataServicesAttributes] {
	return terra.ReferenceAsList[DataServicesAttributes](asas.ref.Append("services"))
}

func (asas dataAzurermStorageAccountSasAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](asas.ref.Append("timeouts"))
}
