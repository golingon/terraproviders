// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_kubernetes_fleet_manager

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_kubernetes_fleet_manager.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermKubernetesFleetManagerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (akfm *Resource) Type() string {
	return "azurerm_kubernetes_fleet_manager"
}

// LocalName returns the local name for [Resource].
func (akfm *Resource) LocalName() string {
	return akfm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (akfm *Resource) Configuration() interface{} {
	return akfm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (akfm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(akfm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (akfm *Resource) Dependencies() terra.Dependencies {
	return akfm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (akfm *Resource) LifecycleManagement() *terra.Lifecycle {
	return akfm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (akfm *Resource) Attributes() azurermKubernetesFleetManagerAttributes {
	return azurermKubernetesFleetManagerAttributes{ref: terra.ReferenceResource(akfm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (akfm *Resource) ImportState(state io.Reader) error {
	akfm.state = &azurermKubernetesFleetManagerState{}
	if err := json.NewDecoder(state).Decode(akfm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", akfm.Type(), akfm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (akfm *Resource) State() (*azurermKubernetesFleetManagerState, bool) {
	return akfm.state, akfm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (akfm *Resource) StateMust() *azurermKubernetesFleetManagerState {
	if akfm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", akfm.Type(), akfm.LocalName()))
	}
	return akfm.state
}

// Args contains the configurations for azurerm_kubernetes_fleet_manager.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// HubProfile: optional
	HubProfile *HubProfile `hcl:"hub_profile,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermKubernetesFleetManagerAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_kubernetes_fleet_manager.
func (akfm azurermKubernetesFleetManagerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akfm.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_kubernetes_fleet_manager.
func (akfm azurermKubernetesFleetManagerAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(akfm.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_kubernetes_fleet_manager.
func (akfm azurermKubernetesFleetManagerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(akfm.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_kubernetes_fleet_manager.
func (akfm azurermKubernetesFleetManagerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(akfm.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_kubernetes_fleet_manager.
func (akfm azurermKubernetesFleetManagerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](akfm.ref.Append("tags"))
}

func (akfm azurermKubernetesFleetManagerAttributes) HubProfile() terra.ListValue[HubProfileAttributes] {
	return terra.ReferenceAsList[HubProfileAttributes](akfm.ref.Append("hub_profile"))
}

func (akfm azurermKubernetesFleetManagerAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](akfm.ref.Append("timeouts"))
}

type azurermKubernetesFleetManagerState struct {
	Id                string            `json:"id"`
	Location          string            `json:"location"`
	Name              string            `json:"name"`
	ResourceGroupName string            `json:"resource_group_name"`
	Tags              map[string]string `json:"tags"`
	HubProfile        []HubProfileState `json:"hub_profile"`
	Timeouts          *TimeoutsState    `json:"timeouts"`
}
