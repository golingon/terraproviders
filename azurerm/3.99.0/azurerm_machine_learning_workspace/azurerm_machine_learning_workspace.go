// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_machine_learning_workspace

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_machine_learning_workspace.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMachineLearningWorkspaceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amlw *Resource) Type() string {
	return "azurerm_machine_learning_workspace"
}

// LocalName returns the local name for [Resource].
func (amlw *Resource) LocalName() string {
	return amlw.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amlw *Resource) Configuration() interface{} {
	return amlw.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amlw *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amlw)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amlw *Resource) Dependencies() terra.Dependencies {
	return amlw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amlw *Resource) LifecycleManagement() *terra.Lifecycle {
	return amlw.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amlw *Resource) Attributes() azurermMachineLearningWorkspaceAttributes {
	return azurermMachineLearningWorkspaceAttributes{ref: terra.ReferenceResource(amlw)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amlw *Resource) ImportState(state io.Reader) error {
	amlw.state = &azurermMachineLearningWorkspaceState{}
	if err := json.NewDecoder(state).Decode(amlw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amlw.Type(), amlw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amlw *Resource) State() (*azurermMachineLearningWorkspaceState, bool) {
	return amlw.state, amlw.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amlw *Resource) StateMust() *azurermMachineLearningWorkspaceState {
	if amlw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amlw.Type(), amlw.LocalName()))
	}
	return amlw.state
}

// Args contains the configurations for azurerm_machine_learning_workspace.
type Args struct {
	// ApplicationInsightsId: string, required
	ApplicationInsightsId terra.StringValue `hcl:"application_insights_id,attr" validate:"required"`
	// ContainerRegistryId: string, optional
	ContainerRegistryId terra.StringValue `hcl:"container_registry_id,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// FriendlyName: string, optional
	FriendlyName terra.StringValue `hcl:"friendly_name,attr"`
	// HighBusinessImpact: bool, optional
	HighBusinessImpact terra.BoolValue `hcl:"high_business_impact,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImageBuildComputeName: string, optional
	ImageBuildComputeName terra.StringValue `hcl:"image_build_compute_name,attr"`
	// KeyVaultId: string, required
	KeyVaultId terra.StringValue `hcl:"key_vault_id,attr" validate:"required"`
	// Kind: string, optional
	Kind terra.StringValue `hcl:"kind,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrimaryUserAssignedIdentity: string, optional
	PrimaryUserAssignedIdentity terra.StringValue `hcl:"primary_user_assigned_identity,attr"`
	// PublicAccessBehindVirtualNetworkEnabled: bool, optional
	PublicAccessBehindVirtualNetworkEnabled terra.BoolValue `hcl:"public_access_behind_virtual_network_enabled,attr"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, optional
	SkuName terra.StringValue `hcl:"sku_name,attr"`
	// StorageAccountId: string, required
	StorageAccountId terra.StringValue `hcl:"storage_account_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// V1LegacyModeEnabled: bool, optional
	V1LegacyModeEnabled terra.BoolValue `hcl:"v1_legacy_mode_enabled,attr"`
	// Encryption: optional
	Encryption *Encryption `hcl:"encryption,block"`
	// FeatureStore: optional
	FeatureStore *FeatureStore `hcl:"feature_store,block"`
	// Identity: required
	Identity *Identity `hcl:"identity,block" validate:"required"`
	// ManagedNetwork: optional
	ManagedNetwork *ManagedNetwork `hcl:"managed_network,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMachineLearningWorkspaceAttributes struct {
	ref terra.Reference
}

// ApplicationInsightsId returns a reference to field application_insights_id of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) ApplicationInsightsId() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("application_insights_id"))
}

// ContainerRegistryId returns a reference to field container_registry_id of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) ContainerRegistryId() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("container_registry_id"))
}

// Description returns a reference to field description of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("description"))
}

// DiscoveryUrl returns a reference to field discovery_url of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) DiscoveryUrl() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("discovery_url"))
}

// FriendlyName returns a reference to field friendly_name of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) FriendlyName() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("friendly_name"))
}

// HighBusinessImpact returns a reference to field high_business_impact of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) HighBusinessImpact() terra.BoolValue {
	return terra.ReferenceAsBool(amlw.ref.Append("high_business_impact"))
}

// Id returns a reference to field id of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("id"))
}

// ImageBuildComputeName returns a reference to field image_build_compute_name of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) ImageBuildComputeName() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("image_build_compute_name"))
}

// KeyVaultId returns a reference to field key_vault_id of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) KeyVaultId() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("key_vault_id"))
}

// Kind returns a reference to field kind of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) Kind() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("kind"))
}

// Location returns a reference to field location of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("name"))
}

// PrimaryUserAssignedIdentity returns a reference to field primary_user_assigned_identity of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) PrimaryUserAssignedIdentity() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("primary_user_assigned_identity"))
}

// PublicAccessBehindVirtualNetworkEnabled returns a reference to field public_access_behind_virtual_network_enabled of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) PublicAccessBehindVirtualNetworkEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amlw.ref.Append("public_access_behind_virtual_network_enabled"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amlw.ref.Append("public_network_access_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("resource_group_name"))
}

// SkuName returns a reference to field sku_name of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("sku_name"))
}

// StorageAccountId returns a reference to field storage_account_id of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("storage_account_id"))
}

// Tags returns a reference to field tags of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amlw.ref.Append("tags"))
}

// V1LegacyModeEnabled returns a reference to field v1_legacy_mode_enabled of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) V1LegacyModeEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amlw.ref.Append("v1_legacy_mode_enabled"))
}

// WorkspaceId returns a reference to field workspace_id of azurerm_machine_learning_workspace.
func (amlw azurermMachineLearningWorkspaceAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(amlw.ref.Append("workspace_id"))
}

func (amlw azurermMachineLearningWorkspaceAttributes) Encryption() terra.ListValue[EncryptionAttributes] {
	return terra.ReferenceAsList[EncryptionAttributes](amlw.ref.Append("encryption"))
}

func (amlw azurermMachineLearningWorkspaceAttributes) FeatureStore() terra.ListValue[FeatureStoreAttributes] {
	return terra.ReferenceAsList[FeatureStoreAttributes](amlw.ref.Append("feature_store"))
}

func (amlw azurermMachineLearningWorkspaceAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](amlw.ref.Append("identity"))
}

func (amlw azurermMachineLearningWorkspaceAttributes) ManagedNetwork() terra.ListValue[ManagedNetworkAttributes] {
	return terra.ReferenceAsList[ManagedNetworkAttributes](amlw.ref.Append("managed_network"))
}

func (amlw azurermMachineLearningWorkspaceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amlw.ref.Append("timeouts"))
}

type azurermMachineLearningWorkspaceState struct {
	ApplicationInsightsId                   string                `json:"application_insights_id"`
	ContainerRegistryId                     string                `json:"container_registry_id"`
	Description                             string                `json:"description"`
	DiscoveryUrl                            string                `json:"discovery_url"`
	FriendlyName                            string                `json:"friendly_name"`
	HighBusinessImpact                      bool                  `json:"high_business_impact"`
	Id                                      string                `json:"id"`
	ImageBuildComputeName                   string                `json:"image_build_compute_name"`
	KeyVaultId                              string                `json:"key_vault_id"`
	Kind                                    string                `json:"kind"`
	Location                                string                `json:"location"`
	Name                                    string                `json:"name"`
	PrimaryUserAssignedIdentity             string                `json:"primary_user_assigned_identity"`
	PublicAccessBehindVirtualNetworkEnabled bool                  `json:"public_access_behind_virtual_network_enabled"`
	PublicNetworkAccessEnabled              bool                  `json:"public_network_access_enabled"`
	ResourceGroupName                       string                `json:"resource_group_name"`
	SkuName                                 string                `json:"sku_name"`
	StorageAccountId                        string                `json:"storage_account_id"`
	Tags                                    map[string]string     `json:"tags"`
	V1LegacyModeEnabled                     bool                  `json:"v1_legacy_mode_enabled"`
	WorkspaceId                             string                `json:"workspace_id"`
	Encryption                              []EncryptionState     `json:"encryption"`
	FeatureStore                            []FeatureStoreState   `json:"feature_store"`
	Identity                                []IdentityState       `json:"identity"`
	ManagedNetwork                          []ManagedNetworkState `json:"managed_network"`
	Timeouts                                *TimeoutsState        `json:"timeouts"`
}
