// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_container_app_environment_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_container_app_environment_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermContainerAppEnvironmentCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acaec *Resource) Type() string {
	return "azurerm_container_app_environment_certificate"
}

// LocalName returns the local name for [Resource].
func (acaec *Resource) LocalName() string {
	return acaec.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acaec *Resource) Configuration() interface{} {
	return acaec.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acaec *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acaec)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acaec *Resource) Dependencies() terra.Dependencies {
	return acaec.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acaec *Resource) LifecycleManagement() *terra.Lifecycle {
	return acaec.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acaec *Resource) Attributes() azurermContainerAppEnvironmentCertificateAttributes {
	return azurermContainerAppEnvironmentCertificateAttributes{ref: terra.ReferenceResource(acaec)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acaec *Resource) ImportState(state io.Reader) error {
	acaec.state = &azurermContainerAppEnvironmentCertificateState{}
	if err := json.NewDecoder(state).Decode(acaec.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acaec.Type(), acaec.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acaec *Resource) State() (*azurermContainerAppEnvironmentCertificateState, bool) {
	return acaec.state, acaec.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acaec *Resource) StateMust() *azurermContainerAppEnvironmentCertificateState {
	if acaec.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acaec.Type(), acaec.LocalName()))
	}
	return acaec.state
}

// Args contains the configurations for azurerm_container_app_environment_certificate.
type Args struct {
	// CertificateBlobBase64: string, required
	CertificateBlobBase64 terra.StringValue `hcl:"certificate_blob_base64,attr" validate:"required"`
	// CertificatePassword: string, required
	CertificatePassword terra.StringValue `hcl:"certificate_password,attr" validate:"required"`
	// ContainerAppEnvironmentId: string, required
	ContainerAppEnvironmentId terra.StringValue `hcl:"container_app_environment_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermContainerAppEnvironmentCertificateAttributes struct {
	ref terra.Reference
}

// CertificateBlobBase64 returns a reference to field certificate_blob_base64 of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) CertificateBlobBase64() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("certificate_blob_base64"))
}

// CertificatePassword returns a reference to field certificate_password of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) CertificatePassword() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("certificate_password"))
}

// ContainerAppEnvironmentId returns a reference to field container_app_environment_id of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) ContainerAppEnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("container_app_environment_id"))
}

// ExpirationDate returns a reference to field expiration_date of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) ExpirationDate() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("expiration_date"))
}

// Id returns a reference to field id of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("id"))
}

// IssueDate returns a reference to field issue_date of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) IssueDate() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("issue_date"))
}

// Issuer returns a reference to field issuer of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("issuer"))
}

// Name returns a reference to field name of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("name"))
}

// SubjectName returns a reference to field subject_name of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) SubjectName() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("subject_name"))
}

// Tags returns a reference to field tags of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acaec.ref.Append("tags"))
}

// Thumbprint returns a reference to field thumbprint of azurerm_container_app_environment_certificate.
func (acaec azurermContainerAppEnvironmentCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(acaec.ref.Append("thumbprint"))
}

func (acaec azurermContainerAppEnvironmentCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acaec.ref.Append("timeouts"))
}

type azurermContainerAppEnvironmentCertificateState struct {
	CertificateBlobBase64     string            `json:"certificate_blob_base64"`
	CertificatePassword       string            `json:"certificate_password"`
	ContainerAppEnvironmentId string            `json:"container_app_environment_id"`
	ExpirationDate            string            `json:"expiration_date"`
	Id                        string            `json:"id"`
	IssueDate                 string            `json:"issue_date"`
	Issuer                    string            `json:"issuer"`
	Name                      string            `json:"name"`
	SubjectName               string            `json:"subject_name"`
	Tags                      map[string]string `json:"tags"`
	Thumbprint                string            `json:"thumbprint"`
	Timeouts                  *TimeoutsState    `json:"timeouts"`
}
