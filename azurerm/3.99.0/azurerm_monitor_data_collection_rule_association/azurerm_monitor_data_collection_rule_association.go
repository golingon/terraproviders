// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_data_collection_rule_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_monitor_data_collection_rule_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMonitorDataCollectionRuleAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amdcra *Resource) Type() string {
	return "azurerm_monitor_data_collection_rule_association"
}

// LocalName returns the local name for [Resource].
func (amdcra *Resource) LocalName() string {
	return amdcra.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amdcra *Resource) Configuration() interface{} {
	return amdcra.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amdcra *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amdcra)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amdcra *Resource) Dependencies() terra.Dependencies {
	return amdcra.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amdcra *Resource) LifecycleManagement() *terra.Lifecycle {
	return amdcra.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amdcra *Resource) Attributes() azurermMonitorDataCollectionRuleAssociationAttributes {
	return azurermMonitorDataCollectionRuleAssociationAttributes{ref: terra.ReferenceResource(amdcra)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amdcra *Resource) ImportState(state io.Reader) error {
	amdcra.state = &azurermMonitorDataCollectionRuleAssociationState{}
	if err := json.NewDecoder(state).Decode(amdcra.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amdcra.Type(), amdcra.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amdcra *Resource) State() (*azurermMonitorDataCollectionRuleAssociationState, bool) {
	return amdcra.state, amdcra.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amdcra *Resource) StateMust() *azurermMonitorDataCollectionRuleAssociationState {
	if amdcra.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amdcra.Type(), amdcra.LocalName()))
	}
	return amdcra.state
}

// Args contains the configurations for azurerm_monitor_data_collection_rule_association.
type Args struct {
	// DataCollectionEndpointId: string, optional
	DataCollectionEndpointId terra.StringValue `hcl:"data_collection_endpoint_id,attr"`
	// DataCollectionRuleId: string, optional
	DataCollectionRuleId terra.StringValue `hcl:"data_collection_rule_id,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMonitorDataCollectionRuleAssociationAttributes struct {
	ref terra.Reference
}

// DataCollectionEndpointId returns a reference to field data_collection_endpoint_id of azurerm_monitor_data_collection_rule_association.
func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) DataCollectionEndpointId() terra.StringValue {
	return terra.ReferenceAsString(amdcra.ref.Append("data_collection_endpoint_id"))
}

// DataCollectionRuleId returns a reference to field data_collection_rule_id of azurerm_monitor_data_collection_rule_association.
func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) DataCollectionRuleId() terra.StringValue {
	return terra.ReferenceAsString(amdcra.ref.Append("data_collection_rule_id"))
}

// Description returns a reference to field description of azurerm_monitor_data_collection_rule_association.
func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(amdcra.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_monitor_data_collection_rule_association.
func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amdcra.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_monitor_data_collection_rule_association.
func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amdcra.ref.Append("name"))
}

// TargetResourceId returns a reference to field target_resource_id of azurerm_monitor_data_collection_rule_association.
func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceAsString(amdcra.ref.Append("target_resource_id"))
}

func (amdcra azurermMonitorDataCollectionRuleAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amdcra.ref.Append("timeouts"))
}

type azurermMonitorDataCollectionRuleAssociationState struct {
	DataCollectionEndpointId string         `json:"data_collection_endpoint_id"`
	DataCollectionRuleId     string         `json:"data_collection_rule_id"`
	Description              string         `json:"description"`
	Id                       string         `json:"id"`
	Name                     string         `json:"name"`
	TargetResourceId         string         `json:"target_resource_id"`
	Timeouts                 *TimeoutsState `json:"timeouts"`
}
