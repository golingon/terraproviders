// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_subscription

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_subscription.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementSubscriptionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aams *Resource) Type() string {
	return "azurerm_api_management_subscription"
}

// LocalName returns the local name for [Resource].
func (aams *Resource) LocalName() string {
	return aams.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aams *Resource) Configuration() interface{} {
	return aams.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aams *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aams)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aams *Resource) Dependencies() terra.Dependencies {
	return aams.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aams *Resource) LifecycleManagement() *terra.Lifecycle {
	return aams.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aams *Resource) Attributes() azurermApiManagementSubscriptionAttributes {
	return azurermApiManagementSubscriptionAttributes{ref: terra.ReferenceResource(aams)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aams *Resource) ImportState(state io.Reader) error {
	aams.state = &azurermApiManagementSubscriptionState{}
	if err := json.NewDecoder(state).Decode(aams.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aams.Type(), aams.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aams *Resource) State() (*azurermApiManagementSubscriptionState, bool) {
	return aams.state, aams.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aams *Resource) StateMust() *azurermApiManagementSubscriptionState {
	if aams.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aams.Type(), aams.LocalName()))
	}
	return aams.state
}

// Args contains the configurations for azurerm_api_management_subscription.
type Args struct {
	// AllowTracing: bool, optional
	AllowTracing terra.BoolValue `hcl:"allow_tracing,attr"`
	// ApiId: string, optional
	ApiId terra.StringValue `hcl:"api_id,attr"`
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PrimaryKey: string, optional
	PrimaryKey terra.StringValue `hcl:"primary_key,attr"`
	// ProductId: string, optional
	ProductId terra.StringValue `hcl:"product_id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SecondaryKey: string, optional
	SecondaryKey terra.StringValue `hcl:"secondary_key,attr"`
	// State: string, optional
	State terra.StringValue `hcl:"state,attr"`
	// SubscriptionId: string, optional
	SubscriptionId terra.StringValue `hcl:"subscription_id,attr"`
	// UserId: string, optional
	UserId terra.StringValue `hcl:"user_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApiManagementSubscriptionAttributes struct {
	ref terra.Reference
}

// AllowTracing returns a reference to field allow_tracing of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) AllowTracing() terra.BoolValue {
	return terra.ReferenceAsBool(aams.ref.Append("allow_tracing"))
}

// ApiId returns a reference to field api_id of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("api_id"))
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("api_management_name"))
}

// DisplayName returns a reference to field display_name of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("id"))
}

// PrimaryKey returns a reference to field primary_key of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("primary_key"))
}

// ProductId returns a reference to field product_id of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) ProductId() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("product_id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("resource_group_name"))
}

// SecondaryKey returns a reference to field secondary_key of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("secondary_key"))
}

// State returns a reference to field state of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("state"))
}

// SubscriptionId returns a reference to field subscription_id of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) SubscriptionId() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("subscription_id"))
}

// UserId returns a reference to field user_id of azurerm_api_management_subscription.
func (aams azurermApiManagementSubscriptionAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(aams.ref.Append("user_id"))
}

func (aams azurermApiManagementSubscriptionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aams.ref.Append("timeouts"))
}

type azurermApiManagementSubscriptionState struct {
	AllowTracing      bool           `json:"allow_tracing"`
	ApiId             string         `json:"api_id"`
	ApiManagementName string         `json:"api_management_name"`
	DisplayName       string         `json:"display_name"`
	Id                string         `json:"id"`
	PrimaryKey        string         `json:"primary_key"`
	ProductId         string         `json:"product_id"`
	ResourceGroupName string         `json:"resource_group_name"`
	SecondaryKey      string         `json:"secondary_key"`
	State             string         `json:"state"`
	SubscriptionId    string         `json:"subscription_id"`
	UserId            string         `json:"user_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
