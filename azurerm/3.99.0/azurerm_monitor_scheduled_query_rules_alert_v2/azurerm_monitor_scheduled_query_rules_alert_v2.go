// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_scheduled_query_rules_alert_v2

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_monitor_scheduled_query_rules_alert_v2.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMonitorScheduledQueryRulesAlertV2State
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amsqrav *Resource) Type() string {
	return "azurerm_monitor_scheduled_query_rules_alert_v2"
}

// LocalName returns the local name for [Resource].
func (amsqrav *Resource) LocalName() string {
	return amsqrav.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amsqrav *Resource) Configuration() interface{} {
	return amsqrav.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amsqrav *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amsqrav)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amsqrav *Resource) Dependencies() terra.Dependencies {
	return amsqrav.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amsqrav *Resource) LifecycleManagement() *terra.Lifecycle {
	return amsqrav.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amsqrav *Resource) Attributes() azurermMonitorScheduledQueryRulesAlertV2Attributes {
	return azurermMonitorScheduledQueryRulesAlertV2Attributes{ref: terra.ReferenceResource(amsqrav)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amsqrav *Resource) ImportState(state io.Reader) error {
	amsqrav.state = &azurermMonitorScheduledQueryRulesAlertV2State{}
	if err := json.NewDecoder(state).Decode(amsqrav.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amsqrav.Type(), amsqrav.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amsqrav *Resource) State() (*azurermMonitorScheduledQueryRulesAlertV2State, bool) {
	return amsqrav.state, amsqrav.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amsqrav *Resource) StateMust() *azurermMonitorScheduledQueryRulesAlertV2State {
	if amsqrav.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amsqrav.Type(), amsqrav.LocalName()))
	}
	return amsqrav.state
}

// Args contains the configurations for azurerm_monitor_scheduled_query_rules_alert_v2.
type Args struct {
	// AutoMitigationEnabled: bool, optional
	AutoMitigationEnabled terra.BoolValue `hcl:"auto_mitigation_enabled,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// EvaluationFrequency: string, optional
	EvaluationFrequency terra.StringValue `hcl:"evaluation_frequency,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MuteActionsAfterAlertDuration: string, optional
	MuteActionsAfterAlertDuration terra.StringValue `hcl:"mute_actions_after_alert_duration,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueryTimeRangeOverride: string, optional
	QueryTimeRangeOverride terra.StringValue `hcl:"query_time_range_override,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Scopes: list of string, required
	Scopes terra.ListValue[terra.StringValue] `hcl:"scopes,attr" validate:"required"`
	// Severity: number, required
	Severity terra.NumberValue `hcl:"severity,attr" validate:"required"`
	// SkipQueryValidation: bool, optional
	SkipQueryValidation terra.BoolValue `hcl:"skip_query_validation,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TargetResourceTypes: list of string, optional
	TargetResourceTypes terra.ListValue[terra.StringValue] `hcl:"target_resource_types,attr"`
	// WindowDuration: string, required
	WindowDuration terra.StringValue `hcl:"window_duration,attr" validate:"required"`
	// WorkspaceAlertsStorageEnabled: bool, optional
	WorkspaceAlertsStorageEnabled terra.BoolValue `hcl:"workspace_alerts_storage_enabled,attr"`
	// Action: optional
	Action *Action `hcl:"action,block"`
	// Criteria: min=1
	Criteria []Criteria `hcl:"criteria,block" validate:"min=1"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMonitorScheduledQueryRulesAlertV2Attributes struct {
	ref terra.Reference
}

// AutoMitigationEnabled returns a reference to field auto_mitigation_enabled of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) AutoMitigationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrav.ref.Append("auto_mitigation_enabled"))
}

// CreatedWithApiVersion returns a reference to field created_with_api_version of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) CreatedWithApiVersion() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("created_with_api_version"))
}

// Description returns a reference to field description of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Description() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("display_name"))
}

// Enabled returns a reference to field enabled of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrav.ref.Append("enabled"))
}

// EvaluationFrequency returns a reference to field evaluation_frequency of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) EvaluationFrequency() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("evaluation_frequency"))
}

// Id returns a reference to field id of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("id"))
}

// IsALegacyLogAnalyticsRule returns a reference to field is_a_legacy_log_analytics_rule of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) IsALegacyLogAnalyticsRule() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrav.ref.Append("is_a_legacy_log_analytics_rule"))
}

// IsWorkspaceAlertsStorageConfigured returns a reference to field is_workspace_alerts_storage_configured of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) IsWorkspaceAlertsStorageConfigured() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrav.ref.Append("is_workspace_alerts_storage_configured"))
}

// Location returns a reference to field location of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("location"))
}

// MuteActionsAfterAlertDuration returns a reference to field mute_actions_after_alert_duration of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) MuteActionsAfterAlertDuration() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("mute_actions_after_alert_duration"))
}

// Name returns a reference to field name of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("name"))
}

// QueryTimeRangeOverride returns a reference to field query_time_range_override of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) QueryTimeRangeOverride() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("query_time_range_override"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("resource_group_name"))
}

// Scopes returns a reference to field scopes of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Scopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](amsqrav.ref.Append("scopes"))
}

// Severity returns a reference to field severity of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Severity() terra.NumberValue {
	return terra.ReferenceAsNumber(amsqrav.ref.Append("severity"))
}

// SkipQueryValidation returns a reference to field skip_query_validation of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) SkipQueryValidation() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrav.ref.Append("skip_query_validation"))
}

// Tags returns a reference to field tags of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amsqrav.ref.Append("tags"))
}

// TargetResourceTypes returns a reference to field target_resource_types of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) TargetResourceTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](amsqrav.ref.Append("target_resource_types"))
}

// WindowDuration returns a reference to field window_duration of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) WindowDuration() terra.StringValue {
	return terra.ReferenceAsString(amsqrav.ref.Append("window_duration"))
}

// WorkspaceAlertsStorageEnabled returns a reference to field workspace_alerts_storage_enabled of azurerm_monitor_scheduled_query_rules_alert_v2.
func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) WorkspaceAlertsStorageEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrav.ref.Append("workspace_alerts_storage_enabled"))
}

func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Action() terra.ListValue[ActionAttributes] {
	return terra.ReferenceAsList[ActionAttributes](amsqrav.ref.Append("action"))
}

func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Criteria() terra.ListValue[CriteriaAttributes] {
	return terra.ReferenceAsList[CriteriaAttributes](amsqrav.ref.Append("criteria"))
}

func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](amsqrav.ref.Append("identity"))
}

func (amsqrav azurermMonitorScheduledQueryRulesAlertV2Attributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amsqrav.ref.Append("timeouts"))
}

type azurermMonitorScheduledQueryRulesAlertV2State struct {
	AutoMitigationEnabled              bool              `json:"auto_mitigation_enabled"`
	CreatedWithApiVersion              string            `json:"created_with_api_version"`
	Description                        string            `json:"description"`
	DisplayName                        string            `json:"display_name"`
	Enabled                            bool              `json:"enabled"`
	EvaluationFrequency                string            `json:"evaluation_frequency"`
	Id                                 string            `json:"id"`
	IsALegacyLogAnalyticsRule          bool              `json:"is_a_legacy_log_analytics_rule"`
	IsWorkspaceAlertsStorageConfigured bool              `json:"is_workspace_alerts_storage_configured"`
	Location                           string            `json:"location"`
	MuteActionsAfterAlertDuration      string            `json:"mute_actions_after_alert_duration"`
	Name                               string            `json:"name"`
	QueryTimeRangeOverride             string            `json:"query_time_range_override"`
	ResourceGroupName                  string            `json:"resource_group_name"`
	Scopes                             []string          `json:"scopes"`
	Severity                           float64           `json:"severity"`
	SkipQueryValidation                bool              `json:"skip_query_validation"`
	Tags                               map[string]string `json:"tags"`
	TargetResourceTypes                []string          `json:"target_resource_types"`
	WindowDuration                     string            `json:"window_duration"`
	WorkspaceAlertsStorageEnabled      bool              `json:"workspace_alerts_storage_enabled"`
	Action                             []ActionState     `json:"action"`
	Criteria                           []CriteriaState   `json:"criteria"`
	Identity                           []IdentityState   `json:"identity"`
	Timeouts                           *TimeoutsState    `json:"timeouts"`
}
