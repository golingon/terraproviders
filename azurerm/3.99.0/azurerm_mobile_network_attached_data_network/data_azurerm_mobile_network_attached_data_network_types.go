// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mobile_network_attached_data_network

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataNetworkAddressPortTranslationAttributes struct {
	ref terra.Reference
}

func (napt DataNetworkAddressPortTranslationAttributes) InternalRef() (terra.Reference, error) {
	return napt.ref, nil
}

func (napt DataNetworkAddressPortTranslationAttributes) InternalWithRef(ref terra.Reference) DataNetworkAddressPortTranslationAttributes {
	return DataNetworkAddressPortTranslationAttributes{ref: ref}
}

func (napt DataNetworkAddressPortTranslationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return napt.ref.InternalTokens()
}

func (napt DataNetworkAddressPortTranslationAttributes) IcmpPinholeTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(napt.ref.Append("icmp_pinhole_timeout_in_seconds"))
}

func (napt DataNetworkAddressPortTranslationAttributes) PinholeMaximumNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(napt.ref.Append("pinhole_maximum_number"))
}

func (napt DataNetworkAddressPortTranslationAttributes) TcpPinholeTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(napt.ref.Append("tcp_pinhole_timeout_in_seconds"))
}

func (napt DataNetworkAddressPortTranslationAttributes) TcpPortReuseMinimumHoldTimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(napt.ref.Append("tcp_port_reuse_minimum_hold_time_in_seconds"))
}

func (napt DataNetworkAddressPortTranslationAttributes) UdpPinholeTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(napt.ref.Append("udp_pinhole_timeout_in_seconds"))
}

func (napt DataNetworkAddressPortTranslationAttributes) UdpPortReuseMinimumHoldTimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(napt.ref.Append("udp_port_reuse_minimum_hold_time_in_seconds"))
}

func (napt DataNetworkAddressPortTranslationAttributes) PortRange() terra.ListValue[DataNetworkAddressPortTranslationPortRangeAttributes] {
	return terra.ReferenceAsList[DataNetworkAddressPortTranslationPortRangeAttributes](napt.ref.Append("port_range"))
}

type DataNetworkAddressPortTranslationPortRangeAttributes struct {
	ref terra.Reference
}

func (pr DataNetworkAddressPortTranslationPortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr DataNetworkAddressPortTranslationPortRangeAttributes) InternalWithRef(ref terra.Reference) DataNetworkAddressPortTranslationPortRangeAttributes {
	return DataNetworkAddressPortTranslationPortRangeAttributes{ref: ref}
}

func (pr DataNetworkAddressPortTranslationPortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr DataNetworkAddressPortTranslationPortRangeAttributes) Maximum() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("maximum"))
}

func (pr DataNetworkAddressPortTranslationPortRangeAttributes) Minimum() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("minimum"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataNetworkAddressPortTranslationState struct {
	IcmpPinholeTimeoutInSeconds          float64                                           `json:"icmp_pinhole_timeout_in_seconds"`
	PinholeMaximumNumber                 float64                                           `json:"pinhole_maximum_number"`
	TcpPinholeTimeoutInSeconds           float64                                           `json:"tcp_pinhole_timeout_in_seconds"`
	TcpPortReuseMinimumHoldTimeInSeconds float64                                           `json:"tcp_port_reuse_minimum_hold_time_in_seconds"`
	UdpPinholeTimeoutInSeconds           float64                                           `json:"udp_pinhole_timeout_in_seconds"`
	UdpPortReuseMinimumHoldTimeInSeconds float64                                           `json:"udp_port_reuse_minimum_hold_time_in_seconds"`
	PortRange                            []DataNetworkAddressPortTranslationPortRangeState `json:"port_range"`
}

type DataNetworkAddressPortTranslationPortRangeState struct {
	Maximum float64 `json:"maximum"`
	Minimum float64 `json:"minimum"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
