// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_service_source_control_slot

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_service_source_control_slot.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppServiceSourceControlSlotState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasscs *Resource) Type() string {
	return "azurerm_app_service_source_control_slot"
}

// LocalName returns the local name for [Resource].
func (aasscs *Resource) LocalName() string {
	return aasscs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasscs *Resource) Configuration() interface{} {
	return aasscs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasscs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasscs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasscs *Resource) Dependencies() terra.Dependencies {
	return aasscs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasscs *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasscs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasscs *Resource) Attributes() azurermAppServiceSourceControlSlotAttributes {
	return azurermAppServiceSourceControlSlotAttributes{ref: terra.ReferenceResource(aasscs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasscs *Resource) ImportState(state io.Reader) error {
	aasscs.state = &azurermAppServiceSourceControlSlotState{}
	if err := json.NewDecoder(state).Decode(aasscs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasscs.Type(), aasscs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasscs *Resource) State() (*azurermAppServiceSourceControlSlotState, bool) {
	return aasscs.state, aasscs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasscs *Resource) StateMust() *azurermAppServiceSourceControlSlotState {
	if aasscs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasscs.Type(), aasscs.LocalName()))
	}
	return aasscs.state
}

// Args contains the configurations for azurerm_app_service_source_control_slot.
type Args struct {
	// Branch: string, optional
	Branch terra.StringValue `hcl:"branch,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RepoUrl: string, optional
	RepoUrl terra.StringValue `hcl:"repo_url,attr"`
	// RollbackEnabled: bool, optional
	RollbackEnabled terra.BoolValue `hcl:"rollback_enabled,attr"`
	// SlotId: string, required
	SlotId terra.StringValue `hcl:"slot_id,attr" validate:"required"`
	// UseLocalGit: bool, optional
	UseLocalGit terra.BoolValue `hcl:"use_local_git,attr"`
	// UseManualIntegration: bool, optional
	UseManualIntegration terra.BoolValue `hcl:"use_manual_integration,attr"`
	// UseMercurial: bool, optional
	UseMercurial terra.BoolValue `hcl:"use_mercurial,attr"`
	// GithubActionConfiguration: optional
	GithubActionConfiguration *GithubActionConfiguration `hcl:"github_action_configuration,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppServiceSourceControlSlotAttributes struct {
	ref terra.Reference
}

// Branch returns a reference to field branch of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) Branch() terra.StringValue {
	return terra.ReferenceAsString(aasscs.ref.Append("branch"))
}

// Id returns a reference to field id of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasscs.ref.Append("id"))
}

// RepoUrl returns a reference to field repo_url of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) RepoUrl() terra.StringValue {
	return terra.ReferenceAsString(aasscs.ref.Append("repo_url"))
}

// RollbackEnabled returns a reference to field rollback_enabled of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) RollbackEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aasscs.ref.Append("rollback_enabled"))
}

// ScmType returns a reference to field scm_type of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) ScmType() terra.StringValue {
	return terra.ReferenceAsString(aasscs.ref.Append("scm_type"))
}

// SlotId returns a reference to field slot_id of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) SlotId() terra.StringValue {
	return terra.ReferenceAsString(aasscs.ref.Append("slot_id"))
}

// UseLocalGit returns a reference to field use_local_git of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) UseLocalGit() terra.BoolValue {
	return terra.ReferenceAsBool(aasscs.ref.Append("use_local_git"))
}

// UseManualIntegration returns a reference to field use_manual_integration of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) UseManualIntegration() terra.BoolValue {
	return terra.ReferenceAsBool(aasscs.ref.Append("use_manual_integration"))
}

// UseMercurial returns a reference to field use_mercurial of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) UseMercurial() terra.BoolValue {
	return terra.ReferenceAsBool(aasscs.ref.Append("use_mercurial"))
}

// UsesGithubAction returns a reference to field uses_github_action of azurerm_app_service_source_control_slot.
func (aasscs azurermAppServiceSourceControlSlotAttributes) UsesGithubAction() terra.BoolValue {
	return terra.ReferenceAsBool(aasscs.ref.Append("uses_github_action"))
}

func (aasscs azurermAppServiceSourceControlSlotAttributes) GithubActionConfiguration() terra.ListValue[GithubActionConfigurationAttributes] {
	return terra.ReferenceAsList[GithubActionConfigurationAttributes](aasscs.ref.Append("github_action_configuration"))
}

func (aasscs azurermAppServiceSourceControlSlotAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aasscs.ref.Append("timeouts"))
}

type azurermAppServiceSourceControlSlotState struct {
	Branch                    string                           `json:"branch"`
	Id                        string                           `json:"id"`
	RepoUrl                   string                           `json:"repo_url"`
	RollbackEnabled           bool                             `json:"rollback_enabled"`
	ScmType                   string                           `json:"scm_type"`
	SlotId                    string                           `json:"slot_id"`
	UseLocalGit               bool                             `json:"use_local_git"`
	UseManualIntegration      bool                             `json:"use_manual_integration"`
	UseMercurial              bool                             `json:"use_mercurial"`
	UsesGithubAction          bool                             `json:"uses_github_action"`
	GithubActionConfiguration []GithubActionConfigurationState `json:"github_action_configuration"`
	Timeouts                  *TimeoutsState                   `json:"timeouts"`
}
