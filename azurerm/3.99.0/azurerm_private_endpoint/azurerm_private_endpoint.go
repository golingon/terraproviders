// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_private_endpoint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_private_endpoint.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPrivateEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ape *Resource) Type() string {
	return "azurerm_private_endpoint"
}

// LocalName returns the local name for [Resource].
func (ape *Resource) LocalName() string {
	return ape.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ape *Resource) Configuration() interface{} {
	return ape.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ape *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ape)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ape *Resource) Dependencies() terra.Dependencies {
	return ape.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ape *Resource) LifecycleManagement() *terra.Lifecycle {
	return ape.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ape *Resource) Attributes() azurermPrivateEndpointAttributes {
	return azurermPrivateEndpointAttributes{ref: terra.ReferenceResource(ape)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ape *Resource) ImportState(state io.Reader) error {
	ape.state = &azurermPrivateEndpointState{}
	if err := json.NewDecoder(state).Decode(ape.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ape.Type(), ape.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ape *Resource) State() (*azurermPrivateEndpointState, bool) {
	return ape.state, ape.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ape *Resource) StateMust() *azurermPrivateEndpointState {
	if ape.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ape.Type(), ape.LocalName()))
	}
	return ape.state
}

// Args contains the configurations for azurerm_private_endpoint.
type Args struct {
	// CustomNetworkInterfaceName: string, optional
	CustomNetworkInterfaceName terra.StringValue `hcl:"custom_network_interface_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// IpConfiguration: min=0
	IpConfiguration []IpConfiguration `hcl:"ip_configuration,block" validate:"min=0"`
	// PrivateDnsZoneGroup: optional
	PrivateDnsZoneGroup *PrivateDnsZoneGroup `hcl:"private_dns_zone_group,block"`
	// PrivateServiceConnection: required
	PrivateServiceConnection *PrivateServiceConnection `hcl:"private_service_connection,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPrivateEndpointAttributes struct {
	ref terra.Reference
}

// CustomNetworkInterfaceName returns a reference to field custom_network_interface_name of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) CustomNetworkInterfaceName() terra.StringValue {
	return terra.ReferenceAsString(ape.ref.Append("custom_network_interface_name"))
}

// Id returns a reference to field id of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ape.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ape.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ape.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ape.ref.Append("resource_group_name"))
}

// SubnetId returns a reference to field subnet_id of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ape.ref.Append("subnet_id"))
}

// Tags returns a reference to field tags of azurerm_private_endpoint.
func (ape azurermPrivateEndpointAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ape.ref.Append("tags"))
}

func (ape azurermPrivateEndpointAttributes) CustomDnsConfigs() terra.ListValue[CustomDnsConfigsAttributes] {
	return terra.ReferenceAsList[CustomDnsConfigsAttributes](ape.ref.Append("custom_dns_configs"))
}

func (ape azurermPrivateEndpointAttributes) NetworkInterface() terra.ListValue[NetworkInterfaceAttributes] {
	return terra.ReferenceAsList[NetworkInterfaceAttributes](ape.ref.Append("network_interface"))
}

func (ape azurermPrivateEndpointAttributes) PrivateDnsZoneConfigs() terra.ListValue[PrivateDnsZoneConfigsAttributes] {
	return terra.ReferenceAsList[PrivateDnsZoneConfigsAttributes](ape.ref.Append("private_dns_zone_configs"))
}

func (ape azurermPrivateEndpointAttributes) IpConfiguration() terra.ListValue[IpConfigurationAttributes] {
	return terra.ReferenceAsList[IpConfigurationAttributes](ape.ref.Append("ip_configuration"))
}

func (ape azurermPrivateEndpointAttributes) PrivateDnsZoneGroup() terra.ListValue[PrivateDnsZoneGroupAttributes] {
	return terra.ReferenceAsList[PrivateDnsZoneGroupAttributes](ape.ref.Append("private_dns_zone_group"))
}

func (ape azurermPrivateEndpointAttributes) PrivateServiceConnection() terra.ListValue[PrivateServiceConnectionAttributes] {
	return terra.ReferenceAsList[PrivateServiceConnectionAttributes](ape.ref.Append("private_service_connection"))
}

func (ape azurermPrivateEndpointAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ape.ref.Append("timeouts"))
}

type azurermPrivateEndpointState struct {
	CustomNetworkInterfaceName string                          `json:"custom_network_interface_name"`
	Id                         string                          `json:"id"`
	Location                   string                          `json:"location"`
	Name                       string                          `json:"name"`
	ResourceGroupName          string                          `json:"resource_group_name"`
	SubnetId                   string                          `json:"subnet_id"`
	Tags                       map[string]string               `json:"tags"`
	CustomDnsConfigs           []CustomDnsConfigsState         `json:"custom_dns_configs"`
	NetworkInterface           []NetworkInterfaceState         `json:"network_interface"`
	PrivateDnsZoneConfigs      []PrivateDnsZoneConfigsState    `json:"private_dns_zone_configs"`
	IpConfiguration            []IpConfigurationState          `json:"ip_configuration"`
	PrivateDnsZoneGroup        []PrivateDnsZoneGroupState      `json:"private_dns_zone_group"`
	PrivateServiceConnection   []PrivateServiceConnectionState `json:"private_service_connection"`
	Timeouts                   *TimeoutsState                  `json:"timeouts"`
}
