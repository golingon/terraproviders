// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cost_management_scheduled_action

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cost_management_scheduled_action.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCostManagementScheduledActionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acmsa *Resource) Type() string {
	return "azurerm_cost_management_scheduled_action"
}

// LocalName returns the local name for [Resource].
func (acmsa *Resource) LocalName() string {
	return acmsa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acmsa *Resource) Configuration() interface{} {
	return acmsa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acmsa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acmsa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acmsa *Resource) Dependencies() terra.Dependencies {
	return acmsa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acmsa *Resource) LifecycleManagement() *terra.Lifecycle {
	return acmsa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acmsa *Resource) Attributes() azurermCostManagementScheduledActionAttributes {
	return azurermCostManagementScheduledActionAttributes{ref: terra.ReferenceResource(acmsa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acmsa *Resource) ImportState(state io.Reader) error {
	acmsa.state = &azurermCostManagementScheduledActionState{}
	if err := json.NewDecoder(state).Decode(acmsa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acmsa.Type(), acmsa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acmsa *Resource) State() (*azurermCostManagementScheduledActionState, bool) {
	return acmsa.state, acmsa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acmsa *Resource) StateMust() *azurermCostManagementScheduledActionState {
	if acmsa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acmsa.Type(), acmsa.LocalName()))
	}
	return acmsa.state
}

// Args contains the configurations for azurerm_cost_management_scheduled_action.
type Args struct {
	// DayOfMonth: number, optional
	DayOfMonth terra.NumberValue `hcl:"day_of_month,attr"`
	// DaysOfWeek: list of string, optional
	DaysOfWeek terra.ListValue[terra.StringValue] `hcl:"days_of_week,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// EmailAddressSender: string, required
	EmailAddressSender terra.StringValue `hcl:"email_address_sender,attr" validate:"required"`
	// EmailAddresses: list of string, required
	EmailAddresses terra.ListValue[terra.StringValue] `hcl:"email_addresses,attr" validate:"required"`
	// EmailSubject: string, required
	EmailSubject terra.StringValue `hcl:"email_subject,attr" validate:"required"`
	// EndDate: string, required
	EndDate terra.StringValue `hcl:"end_date,attr" validate:"required"`
	// Frequency: string, required
	Frequency terra.StringValue `hcl:"frequency,attr" validate:"required"`
	// HourOfDay: number, optional
	HourOfDay terra.NumberValue `hcl:"hour_of_day,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Message: string, optional
	Message terra.StringValue `hcl:"message,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StartDate: string, required
	StartDate terra.StringValue `hcl:"start_date,attr" validate:"required"`
	// ViewId: string, required
	ViewId terra.StringValue `hcl:"view_id,attr" validate:"required"`
	// WeeksOfMonth: list of string, optional
	WeeksOfMonth terra.ListValue[terra.StringValue] `hcl:"weeks_of_month,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCostManagementScheduledActionAttributes struct {
	ref terra.Reference
}

// DayOfMonth returns a reference to field day_of_month of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) DayOfMonth() terra.NumberValue {
	return terra.ReferenceAsNumber(acmsa.ref.Append("day_of_month"))
}

// DaysOfWeek returns a reference to field days_of_week of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) DaysOfWeek() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acmsa.ref.Append("days_of_week"))
}

// DisplayName returns a reference to field display_name of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("display_name"))
}

// EmailAddressSender returns a reference to field email_address_sender of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) EmailAddressSender() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("email_address_sender"))
}

// EmailAddresses returns a reference to field email_addresses of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) EmailAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acmsa.ref.Append("email_addresses"))
}

// EmailSubject returns a reference to field email_subject of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) EmailSubject() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("email_subject"))
}

// EndDate returns a reference to field end_date of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) EndDate() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("end_date"))
}

// Frequency returns a reference to field frequency of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) Frequency() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("frequency"))
}

// HourOfDay returns a reference to field hour_of_day of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) HourOfDay() terra.NumberValue {
	return terra.ReferenceAsNumber(acmsa.ref.Append("hour_of_day"))
}

// Id returns a reference to field id of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("id"))
}

// Message returns a reference to field message of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("message"))
}

// Name returns a reference to field name of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("name"))
}

// StartDate returns a reference to field start_date of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) StartDate() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("start_date"))
}

// ViewId returns a reference to field view_id of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) ViewId() terra.StringValue {
	return terra.ReferenceAsString(acmsa.ref.Append("view_id"))
}

// WeeksOfMonth returns a reference to field weeks_of_month of azurerm_cost_management_scheduled_action.
func (acmsa azurermCostManagementScheduledActionAttributes) WeeksOfMonth() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acmsa.ref.Append("weeks_of_month"))
}

func (acmsa azurermCostManagementScheduledActionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acmsa.ref.Append("timeouts"))
}

type azurermCostManagementScheduledActionState struct {
	DayOfMonth         float64        `json:"day_of_month"`
	DaysOfWeek         []string       `json:"days_of_week"`
	DisplayName        string         `json:"display_name"`
	EmailAddressSender string         `json:"email_address_sender"`
	EmailAddresses     []string       `json:"email_addresses"`
	EmailSubject       string         `json:"email_subject"`
	EndDate            string         `json:"end_date"`
	Frequency          string         `json:"frequency"`
	HourOfDay          float64        `json:"hour_of_day"`
	Id                 string         `json:"id"`
	Message            string         `json:"message"`
	Name               string         `json:"name"`
	StartDate          string         `json:"start_date"`
	ViewId             string         `json:"view_id"`
	WeeksOfMonth       []string       `json:"weeks_of_month"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
