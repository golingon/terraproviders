// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_share

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataAcl struct{}

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAclAttributes struct {
	ref terra.Reference
}

func (a DataAclAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAclAttributes) InternalWithRef(ref terra.Reference) DataAclAttributes {
	return DataAclAttributes{ref: ref}
}

func (a DataAclAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAclAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("id"))
}

func (a DataAclAttributes) AccessPolicy() terra.ListValue[DataAclAccessPolicyAttributes] {
	return terra.ReferenceAsList[DataAclAccessPolicyAttributes](a.ref.Append("access_policy"))
}

type DataAclAccessPolicyAttributes struct {
	ref terra.Reference
}

func (ap DataAclAccessPolicyAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap DataAclAccessPolicyAttributes) InternalWithRef(ref terra.Reference) DataAclAccessPolicyAttributes {
	return DataAclAccessPolicyAttributes{ref: ref}
}

func (ap DataAclAccessPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap DataAclAccessPolicyAttributes) Expiry() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("expiry"))
}

func (ap DataAclAccessPolicyAttributes) Permissions() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("permissions"))
}

func (ap DataAclAccessPolicyAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("start"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAclState struct {
	Id           string                     `json:"id"`
	AccessPolicy []DataAclAccessPolicyState `json:"access_policy"`
}

type DataAclAccessPolicyState struct {
	Expiry      string `json:"expiry"`
	Permissions string `json:"permissions"`
	Start       string `json:"start"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
