// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_share

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_storage_share.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ass *DataSource) DataSource() string {
	return "azurerm_storage_share"
}

// LocalName returns the local name for [DataSource].
func (ass *DataSource) LocalName() string {
	return ass.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ass *DataSource) Configuration() interface{} {
	return ass.Args
}

// Attributes returns the attributes for [DataSource].
func (ass *DataSource) Attributes() dataAzurermStorageShareAttributes {
	return dataAzurermStorageShareAttributes{ref: terra.ReferenceDataSource(ass)}
}

// DataArgs contains the configurations for azurerm_storage_share.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Metadata: map of string, optional
	Metadata terra.MapValue[terra.StringValue] `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StorageAccountName: string, required
	StorageAccountName terra.StringValue `hcl:"storage_account_name,attr" validate:"required"`
	// Acl: min=0
	Acl []DataAcl `hcl:"acl,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermStorageShareAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_storage_share.
func (ass dataAzurermStorageShareAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ass.ref.Append("id"))
}

// Metadata returns a reference to field metadata of azurerm_storage_share.
func (ass dataAzurermStorageShareAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ass.ref.Append("metadata"))
}

// Name returns a reference to field name of azurerm_storage_share.
func (ass dataAzurermStorageShareAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ass.ref.Append("name"))
}

// Quota returns a reference to field quota of azurerm_storage_share.
func (ass dataAzurermStorageShareAttributes) Quota() terra.NumberValue {
	return terra.ReferenceAsNumber(ass.ref.Append("quota"))
}

// ResourceManagerId returns a reference to field resource_manager_id of azurerm_storage_share.
func (ass dataAzurermStorageShareAttributes) ResourceManagerId() terra.StringValue {
	return terra.ReferenceAsString(ass.ref.Append("resource_manager_id"))
}

// StorageAccountName returns a reference to field storage_account_name of azurerm_storage_share.
func (ass dataAzurermStorageShareAttributes) StorageAccountName() terra.StringValue {
	return terra.ReferenceAsString(ass.ref.Append("storage_account_name"))
}

func (ass dataAzurermStorageShareAttributes) Acl() terra.ListValue[DataAclAttributes] {
	return terra.ReferenceAsList[DataAclAttributes](ass.ref.Append("acl"))
}

func (ass dataAzurermStorageShareAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ass.ref.Append("timeouts"))
}
