// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mariadb_server

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataStorageProfileAttributes struct {
	ref terra.Reference
}

func (sp DataStorageProfileAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp DataStorageProfileAttributes) InternalWithRef(ref terra.Reference) DataStorageProfileAttributes {
	return DataStorageProfileAttributes{ref: ref}
}

func (sp DataStorageProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp DataStorageProfileAttributes) AutoGrow() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("auto_grow"))
}

func (sp DataStorageProfileAttributes) BackupRetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("backup_retention_days"))
}

func (sp DataStorageProfileAttributes) GeoRedundantBackup() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("geo_redundant_backup"))
}

func (sp DataStorageProfileAttributes) StorageMb() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("storage_mb"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataStorageProfileState struct {
	AutoGrow            string  `json:"auto_grow"`
	BackupRetentionDays float64 `json:"backup_retention_days"`
	GeoRedundantBackup  string  `json:"geo_redundant_backup"`
	StorageMb           float64 `json:"storage_mb"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
