// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_synapse_sql_pool_workload_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_synapse_sql_pool_workload_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSynapseSqlPoolWorkloadGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asspwg *Resource) Type() string {
	return "azurerm_synapse_sql_pool_workload_group"
}

// LocalName returns the local name for [Resource].
func (asspwg *Resource) LocalName() string {
	return asspwg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asspwg *Resource) Configuration() interface{} {
	return asspwg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asspwg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asspwg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asspwg *Resource) Dependencies() terra.Dependencies {
	return asspwg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asspwg *Resource) LifecycleManagement() *terra.Lifecycle {
	return asspwg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asspwg *Resource) Attributes() azurermSynapseSqlPoolWorkloadGroupAttributes {
	return azurermSynapseSqlPoolWorkloadGroupAttributes{ref: terra.ReferenceResource(asspwg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asspwg *Resource) ImportState(state io.Reader) error {
	asspwg.state = &azurermSynapseSqlPoolWorkloadGroupState{}
	if err := json.NewDecoder(state).Decode(asspwg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asspwg.Type(), asspwg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asspwg *Resource) State() (*azurermSynapseSqlPoolWorkloadGroupState, bool) {
	return asspwg.state, asspwg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asspwg *Resource) StateMust() *azurermSynapseSqlPoolWorkloadGroupState {
	if asspwg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asspwg.Type(), asspwg.LocalName()))
	}
	return asspwg.state
}

// Args contains the configurations for azurerm_synapse_sql_pool_workload_group.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Importance: string, optional
	Importance terra.StringValue `hcl:"importance,attr"`
	// MaxResourcePercent: number, required
	MaxResourcePercent terra.NumberValue `hcl:"max_resource_percent,attr" validate:"required"`
	// MaxResourcePercentPerRequest: number, optional
	MaxResourcePercentPerRequest terra.NumberValue `hcl:"max_resource_percent_per_request,attr"`
	// MinResourcePercent: number, required
	MinResourcePercent terra.NumberValue `hcl:"min_resource_percent,attr" validate:"required"`
	// MinResourcePercentPerRequest: number, optional
	MinResourcePercentPerRequest terra.NumberValue `hcl:"min_resource_percent_per_request,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueryExecutionTimeoutInSeconds: number, optional
	QueryExecutionTimeoutInSeconds terra.NumberValue `hcl:"query_execution_timeout_in_seconds,attr"`
	// SqlPoolId: string, required
	SqlPoolId terra.StringValue `hcl:"sql_pool_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSynapseSqlPoolWorkloadGroupAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asspwg.ref.Append("id"))
}

// Importance returns a reference to field importance of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) Importance() terra.StringValue {
	return terra.ReferenceAsString(asspwg.ref.Append("importance"))
}

// MaxResourcePercent returns a reference to field max_resource_percent of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) MaxResourcePercent() terra.NumberValue {
	return terra.ReferenceAsNumber(asspwg.ref.Append("max_resource_percent"))
}

// MaxResourcePercentPerRequest returns a reference to field max_resource_percent_per_request of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) MaxResourcePercentPerRequest() terra.NumberValue {
	return terra.ReferenceAsNumber(asspwg.ref.Append("max_resource_percent_per_request"))
}

// MinResourcePercent returns a reference to field min_resource_percent of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) MinResourcePercent() terra.NumberValue {
	return terra.ReferenceAsNumber(asspwg.ref.Append("min_resource_percent"))
}

// MinResourcePercentPerRequest returns a reference to field min_resource_percent_per_request of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) MinResourcePercentPerRequest() terra.NumberValue {
	return terra.ReferenceAsNumber(asspwg.ref.Append("min_resource_percent_per_request"))
}

// Name returns a reference to field name of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asspwg.ref.Append("name"))
}

// QueryExecutionTimeoutInSeconds returns a reference to field query_execution_timeout_in_seconds of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) QueryExecutionTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(asspwg.ref.Append("query_execution_timeout_in_seconds"))
}

// SqlPoolId returns a reference to field sql_pool_id of azurerm_synapse_sql_pool_workload_group.
func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) SqlPoolId() terra.StringValue {
	return terra.ReferenceAsString(asspwg.ref.Append("sql_pool_id"))
}

func (asspwg azurermSynapseSqlPoolWorkloadGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asspwg.ref.Append("timeouts"))
}

type azurermSynapseSqlPoolWorkloadGroupState struct {
	Id                             string         `json:"id"`
	Importance                     string         `json:"importance"`
	MaxResourcePercent             float64        `json:"max_resource_percent"`
	MaxResourcePercentPerRequest   float64        `json:"max_resource_percent_per_request"`
	MinResourcePercent             float64        `json:"min_resource_percent"`
	MinResourcePercentPerRequest   float64        `json:"min_resource_percent_per_request"`
	Name                           string         `json:"name"`
	QueryExecutionTimeoutInSeconds float64        `json:"query_execution_timeout_in_seconds"`
	SqlPoolId                      string         `json:"sql_pool_id"`
	Timeouts                       *TimeoutsState `json:"timeouts"`
}
