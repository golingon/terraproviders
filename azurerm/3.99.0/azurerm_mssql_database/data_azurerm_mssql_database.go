// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mssql_database

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_mssql_database.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (amd *DataSource) DataSource() string {
	return "azurerm_mssql_database"
}

// LocalName returns the local name for [DataSource].
func (amd *DataSource) LocalName() string {
	return amd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (amd *DataSource) Configuration() interface{} {
	return amd.Args
}

// Attributes returns the attributes for [DataSource].
func (amd *DataSource) Attributes() dataAzurermMssqlDatabaseAttributes {
	return dataAzurermMssqlDatabaseAttributes{ref: terra.ReferenceDataSource(amd)}
}

// DataArgs contains the configurations for azurerm_mssql_database.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServerId: string, required
	ServerId terra.StringValue `hcl:"server_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermMssqlDatabaseAttributes struct {
	ref terra.Reference
}

// Collation returns a reference to field collation of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) Collation() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("collation"))
}

// ElasticPoolId returns a reference to field elastic_pool_id of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) ElasticPoolId() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("elastic_pool_id"))
}

// EnclaveType returns a reference to field enclave_type of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) EnclaveType() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("enclave_type"))
}

// Id returns a reference to field id of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("id"))
}

// LicenseType returns a reference to field license_type of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) LicenseType() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("license_type"))
}

// MaxSizeGb returns a reference to field max_size_gb of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) MaxSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(amd.ref.Append("max_size_gb"))
}

// Name returns a reference to field name of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("name"))
}

// ReadReplicaCount returns a reference to field read_replica_count of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) ReadReplicaCount() terra.NumberValue {
	return terra.ReferenceAsNumber(amd.ref.Append("read_replica_count"))
}

// ReadScale returns a reference to field read_scale of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) ReadScale() terra.BoolValue {
	return terra.ReferenceAsBool(amd.ref.Append("read_scale"))
}

// ServerId returns a reference to field server_id of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) ServerId() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("server_id"))
}

// SkuName returns a reference to field sku_name of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("sku_name"))
}

// StorageAccountType returns a reference to field storage_account_type of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) StorageAccountType() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("storage_account_type"))
}

// Tags returns a reference to field tags of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amd.ref.Append("tags"))
}

// TransparentDataEncryptionEnabled returns a reference to field transparent_data_encryption_enabled of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) TransparentDataEncryptionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amd.ref.Append("transparent_data_encryption_enabled"))
}

// TransparentDataEncryptionKeyAutomaticRotationEnabled returns a reference to field transparent_data_encryption_key_automatic_rotation_enabled of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) TransparentDataEncryptionKeyAutomaticRotationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(amd.ref.Append("transparent_data_encryption_key_automatic_rotation_enabled"))
}

// TransparentDataEncryptionKeyVaultKeyId returns a reference to field transparent_data_encryption_key_vault_key_id of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) TransparentDataEncryptionKeyVaultKeyId() terra.StringValue {
	return terra.ReferenceAsString(amd.ref.Append("transparent_data_encryption_key_vault_key_id"))
}

// ZoneRedundant returns a reference to field zone_redundant of azurerm_mssql_database.
func (amd dataAzurermMssqlDatabaseAttributes) ZoneRedundant() terra.BoolValue {
	return terra.ReferenceAsBool(amd.ref.Append("zone_redundant"))
}

func (amd dataAzurermMssqlDatabaseAttributes) Identity() terra.ListValue[DataIdentityAttributes] {
	return terra.ReferenceAsList[DataIdentityAttributes](amd.ref.Append("identity"))
}

func (amd dataAzurermMssqlDatabaseAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](amd.ref.Append("timeouts"))
}
