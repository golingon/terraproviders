// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_datadog_monitor_tag_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_datadog_monitor_tag_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDatadogMonitorTagRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (admtr *Resource) Type() string {
	return "azurerm_datadog_monitor_tag_rule"
}

// LocalName returns the local name for [Resource].
func (admtr *Resource) LocalName() string {
	return admtr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (admtr *Resource) Configuration() interface{} {
	return admtr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (admtr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(admtr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (admtr *Resource) Dependencies() terra.Dependencies {
	return admtr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (admtr *Resource) LifecycleManagement() *terra.Lifecycle {
	return admtr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (admtr *Resource) Attributes() azurermDatadogMonitorTagRuleAttributes {
	return azurermDatadogMonitorTagRuleAttributes{ref: terra.ReferenceResource(admtr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (admtr *Resource) ImportState(state io.Reader) error {
	admtr.state = &azurermDatadogMonitorTagRuleState{}
	if err := json.NewDecoder(state).Decode(admtr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", admtr.Type(), admtr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (admtr *Resource) State() (*azurermDatadogMonitorTagRuleState, bool) {
	return admtr.state, admtr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (admtr *Resource) StateMust() *azurermDatadogMonitorTagRuleState {
	if admtr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", admtr.Type(), admtr.LocalName()))
	}
	return admtr.state
}

// Args contains the configurations for azurerm_datadog_monitor_tag_rule.
type Args struct {
	// DatadogMonitorId: string, required
	DatadogMonitorId terra.StringValue `hcl:"datadog_monitor_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Log: min=0
	Log []Log `hcl:"log,block" validate:"min=0"`
	// Metric: min=0
	Metric []Metric `hcl:"metric,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDatadogMonitorTagRuleAttributes struct {
	ref terra.Reference
}

// DatadogMonitorId returns a reference to field datadog_monitor_id of azurerm_datadog_monitor_tag_rule.
func (admtr azurermDatadogMonitorTagRuleAttributes) DatadogMonitorId() terra.StringValue {
	return terra.ReferenceAsString(admtr.ref.Append("datadog_monitor_id"))
}

// Id returns a reference to field id of azurerm_datadog_monitor_tag_rule.
func (admtr azurermDatadogMonitorTagRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(admtr.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_datadog_monitor_tag_rule.
func (admtr azurermDatadogMonitorTagRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(admtr.ref.Append("name"))
}

func (admtr azurermDatadogMonitorTagRuleAttributes) Log() terra.ListValue[LogAttributes] {
	return terra.ReferenceAsList[LogAttributes](admtr.ref.Append("log"))
}

func (admtr azurermDatadogMonitorTagRuleAttributes) Metric() terra.ListValue[MetricAttributes] {
	return terra.ReferenceAsList[MetricAttributes](admtr.ref.Append("metric"))
}

func (admtr azurermDatadogMonitorTagRuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](admtr.ref.Append("timeouts"))
}

type azurermDatadogMonitorTagRuleState struct {
	DatadogMonitorId string         `json:"datadog_monitor_id"`
	Id               string         `json:"id"`
	Name             string         `json:"name"`
	Log              []LogState     `json:"log"`
	Metric           []MetricState  `json:"metric"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
