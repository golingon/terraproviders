// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_powershell72_module

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_powershell72_module.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationPowershell72ModuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aapm *Resource) Type() string {
	return "azurerm_automation_powershell72_module"
}

// LocalName returns the local name for [Resource].
func (aapm *Resource) LocalName() string {
	return aapm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aapm *Resource) Configuration() interface{} {
	return aapm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aapm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aapm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aapm *Resource) Dependencies() terra.Dependencies {
	return aapm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aapm *Resource) LifecycleManagement() *terra.Lifecycle {
	return aapm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aapm *Resource) Attributes() azurermAutomationPowershell72ModuleAttributes {
	return azurermAutomationPowershell72ModuleAttributes{ref: terra.ReferenceResource(aapm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aapm *Resource) ImportState(state io.Reader) error {
	aapm.state = &azurermAutomationPowershell72ModuleState{}
	if err := json.NewDecoder(state).Decode(aapm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aapm.Type(), aapm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aapm *Resource) State() (*azurermAutomationPowershell72ModuleState, bool) {
	return aapm.state, aapm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aapm *Resource) StateMust() *azurermAutomationPowershell72ModuleState {
	if aapm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aapm.Type(), aapm.LocalName()))
	}
	return aapm.state
}

// Args contains the configurations for azurerm_automation_powershell72_module.
type Args struct {
	// AutomationAccountId: string, required
	AutomationAccountId terra.StringValue `hcl:"automation_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ModuleLink: required
	ModuleLink *ModuleLink `hcl:"module_link,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationPowershell72ModuleAttributes struct {
	ref terra.Reference
}

// AutomationAccountId returns a reference to field automation_account_id of azurerm_automation_powershell72_module.
func (aapm azurermAutomationPowershell72ModuleAttributes) AutomationAccountId() terra.StringValue {
	return terra.ReferenceAsString(aapm.ref.Append("automation_account_id"))
}

// Id returns a reference to field id of azurerm_automation_powershell72_module.
func (aapm azurermAutomationPowershell72ModuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aapm.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_powershell72_module.
func (aapm azurermAutomationPowershell72ModuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aapm.ref.Append("name"))
}

func (aapm azurermAutomationPowershell72ModuleAttributes) ModuleLink() terra.ListValue[ModuleLinkAttributes] {
	return terra.ReferenceAsList[ModuleLinkAttributes](aapm.ref.Append("module_link"))
}

func (aapm azurermAutomationPowershell72ModuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aapm.ref.Append("timeouts"))
}

type azurermAutomationPowershell72ModuleState struct {
	AutomationAccountId string            `json:"automation_account_id"`
	Id                  string            `json:"id"`
	Name                string            `json:"name"`
	ModuleLink          []ModuleLinkState `json:"module_link"`
	Timeouts            *TimeoutsState    `json:"timeouts"`
}
