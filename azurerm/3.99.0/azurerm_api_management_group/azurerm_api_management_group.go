// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamg *Resource) Type() string {
	return "azurerm_api_management_group"
}

// LocalName returns the local name for [Resource].
func (aamg *Resource) LocalName() string {
	return aamg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamg *Resource) Configuration() interface{} {
	return aamg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamg *Resource) Dependencies() terra.Dependencies {
	return aamg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamg *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamg *Resource) Attributes() azurermApiManagementGroupAttributes {
	return azurermApiManagementGroupAttributes{ref: terra.ReferenceResource(aamg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamg *Resource) ImportState(state io.Reader) error {
	aamg.state = &azurermApiManagementGroupState{}
	if err := json.NewDecoder(state).Decode(aamg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamg.Type(), aamg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamg *Resource) State() (*azurermApiManagementGroupState, bool) {
	return aamg.state, aamg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamg *Resource) StateMust() *azurermApiManagementGroupState {
	if aamg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamg.Type(), aamg.LocalName()))
	}
	return aamg.state
}

// Args contains the configurations for azurerm_api_management_group.
type Args struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// ExternalId: string, optional
	ExternalId terra.StringValue `hcl:"external_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApiManagementGroupAttributes struct {
	ref terra.Reference
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("api_management_name"))
}

// Description returns a reference to field description of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("display_name"))
}

// ExternalId returns a reference to field external_id of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) ExternalId() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("external_id"))
}

// Id returns a reference to field id of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("resource_group_name"))
}

// Type returns a reference to field type of azurerm_api_management_group.
func (aamg azurermApiManagementGroupAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aamg.ref.Append("type"))
}

func (aamg azurermApiManagementGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamg.ref.Append("timeouts"))
}

type azurermApiManagementGroupState struct {
	ApiManagementName string         `json:"api_management_name"`
	Description       string         `json:"description"`
	DisplayName       string         `json:"display_name"`
	ExternalId        string         `json:"external_id"`
	Id                string         `json:"id"`
	Name              string         `json:"name"`
	ResourceGroupName string         `json:"resource_group_name"`
	Type              string         `json:"type"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
