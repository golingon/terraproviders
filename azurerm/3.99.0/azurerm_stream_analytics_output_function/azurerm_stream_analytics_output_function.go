// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_stream_analytics_output_function

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_stream_analytics_output_function.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermStreamAnalyticsOutputFunctionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asaof *Resource) Type() string {
	return "azurerm_stream_analytics_output_function"
}

// LocalName returns the local name for [Resource].
func (asaof *Resource) LocalName() string {
	return asaof.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asaof *Resource) Configuration() interface{} {
	return asaof.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asaof *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asaof)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asaof *Resource) Dependencies() terra.Dependencies {
	return asaof.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asaof *Resource) LifecycleManagement() *terra.Lifecycle {
	return asaof.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asaof *Resource) Attributes() azurermStreamAnalyticsOutputFunctionAttributes {
	return azurermStreamAnalyticsOutputFunctionAttributes{ref: terra.ReferenceResource(asaof)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asaof *Resource) ImportState(state io.Reader) error {
	asaof.state = &azurermStreamAnalyticsOutputFunctionState{}
	if err := json.NewDecoder(state).Decode(asaof.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asaof.Type(), asaof.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asaof *Resource) State() (*azurermStreamAnalyticsOutputFunctionState, bool) {
	return asaof.state, asaof.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asaof *Resource) StateMust() *azurermStreamAnalyticsOutputFunctionState {
	if asaof.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asaof.Type(), asaof.LocalName()))
	}
	return asaof.state
}

// Args contains the configurations for azurerm_stream_analytics_output_function.
type Args struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// BatchMaxCount: number, optional
	BatchMaxCount terra.NumberValue `hcl:"batch_max_count,attr"`
	// BatchMaxInBytes: number, optional
	BatchMaxInBytes terra.NumberValue `hcl:"batch_max_in_bytes,attr"`
	// FunctionApp: string, required
	FunctionApp terra.StringValue `hcl:"function_app,attr" validate:"required"`
	// FunctionName: string, required
	FunctionName terra.StringValue `hcl:"function_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// StreamAnalyticsJobName: string, required
	StreamAnalyticsJobName terra.StringValue `hcl:"stream_analytics_job_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermStreamAnalyticsOutputFunctionAttributes struct {
	ref terra.Reference
}

// ApiKey returns a reference to field api_key of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("api_key"))
}

// BatchMaxCount returns a reference to field batch_max_count of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) BatchMaxCount() terra.NumberValue {
	return terra.ReferenceAsNumber(asaof.ref.Append("batch_max_count"))
}

// BatchMaxInBytes returns a reference to field batch_max_in_bytes of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) BatchMaxInBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(asaof.ref.Append("batch_max_in_bytes"))
}

// FunctionApp returns a reference to field function_app of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) FunctionApp() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("function_app"))
}

// FunctionName returns a reference to field function_name of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) FunctionName() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("function_name"))
}

// Id returns a reference to field id of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("resource_group_name"))
}

// StreamAnalyticsJobName returns a reference to field stream_analytics_job_name of azurerm_stream_analytics_output_function.
func (asaof azurermStreamAnalyticsOutputFunctionAttributes) StreamAnalyticsJobName() terra.StringValue {
	return terra.ReferenceAsString(asaof.ref.Append("stream_analytics_job_name"))
}

func (asaof azurermStreamAnalyticsOutputFunctionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asaof.ref.Append("timeouts"))
}

type azurermStreamAnalyticsOutputFunctionState struct {
	ApiKey                 string         `json:"api_key"`
	BatchMaxCount          float64        `json:"batch_max_count"`
	BatchMaxInBytes        float64        `json:"batch_max_in_bytes"`
	FunctionApp            string         `json:"function_app"`
	FunctionName           string         `json:"function_name"`
	Id                     string         `json:"id"`
	Name                   string         `json:"name"`
	ResourceGroupName      string         `json:"resource_group_name"`
	StreamAnalyticsJobName string         `json:"stream_analytics_job_name"`
	Timeouts               *TimeoutsState `json:"timeouts"`
}
