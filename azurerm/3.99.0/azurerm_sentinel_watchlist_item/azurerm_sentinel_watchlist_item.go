// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_sentinel_watchlist_item

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_sentinel_watchlist_item.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSentinelWatchlistItemState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aswi *Resource) Type() string {
	return "azurerm_sentinel_watchlist_item"
}

// LocalName returns the local name for [Resource].
func (aswi *Resource) LocalName() string {
	return aswi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aswi *Resource) Configuration() interface{} {
	return aswi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aswi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aswi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aswi *Resource) Dependencies() terra.Dependencies {
	return aswi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aswi *Resource) LifecycleManagement() *terra.Lifecycle {
	return aswi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aswi *Resource) Attributes() azurermSentinelWatchlistItemAttributes {
	return azurermSentinelWatchlistItemAttributes{ref: terra.ReferenceResource(aswi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aswi *Resource) ImportState(state io.Reader) error {
	aswi.state = &azurermSentinelWatchlistItemState{}
	if err := json.NewDecoder(state).Decode(aswi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aswi.Type(), aswi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aswi *Resource) State() (*azurermSentinelWatchlistItemState, bool) {
	return aswi.state, aswi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aswi *Resource) StateMust() *azurermSentinelWatchlistItemState {
	if aswi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aswi.Type(), aswi.LocalName()))
	}
	return aswi.state
}

// Args contains the configurations for azurerm_sentinel_watchlist_item.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Properties: map of string, required
	Properties terra.MapValue[terra.StringValue] `hcl:"properties,attr" validate:"required"`
	// WatchlistId: string, required
	WatchlistId terra.StringValue `hcl:"watchlist_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSentinelWatchlistItemAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_sentinel_watchlist_item.
func (aswi azurermSentinelWatchlistItemAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aswi.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_sentinel_watchlist_item.
func (aswi azurermSentinelWatchlistItemAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aswi.ref.Append("name"))
}

// Properties returns a reference to field properties of azurerm_sentinel_watchlist_item.
func (aswi azurermSentinelWatchlistItemAttributes) Properties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aswi.ref.Append("properties"))
}

// WatchlistId returns a reference to field watchlist_id of azurerm_sentinel_watchlist_item.
func (aswi azurermSentinelWatchlistItemAttributes) WatchlistId() terra.StringValue {
	return terra.ReferenceAsString(aswi.ref.Append("watchlist_id"))
}

func (aswi azurermSentinelWatchlistItemAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aswi.ref.Append("timeouts"))
}

type azurermSentinelWatchlistItemState struct {
	Id          string            `json:"id"`
	Name        string            `json:"name"`
	Properties  map[string]string `json:"properties"`
	WatchlistId string            `json:"watchlist_id"`
	Timeouts    *TimeoutsState    `json:"timeouts"`
}
