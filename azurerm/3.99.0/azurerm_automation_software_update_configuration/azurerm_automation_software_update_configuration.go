// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_software_update_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_software_update_configuration.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationSoftwareUpdateConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasuc *Resource) Type() string {
	return "azurerm_automation_software_update_configuration"
}

// LocalName returns the local name for [Resource].
func (aasuc *Resource) LocalName() string {
	return aasuc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasuc *Resource) Configuration() interface{} {
	return aasuc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasuc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasuc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasuc *Resource) Dependencies() terra.Dependencies {
	return aasuc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasuc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasuc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasuc *Resource) Attributes() azurermAutomationSoftwareUpdateConfigurationAttributes {
	return azurermAutomationSoftwareUpdateConfigurationAttributes{ref: terra.ReferenceResource(aasuc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasuc *Resource) ImportState(state io.Reader) error {
	aasuc.state = &azurermAutomationSoftwareUpdateConfigurationState{}
	if err := json.NewDecoder(state).Decode(aasuc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasuc.Type(), aasuc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasuc *Resource) State() (*azurermAutomationSoftwareUpdateConfigurationState, bool) {
	return aasuc.state, aasuc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasuc *Resource) StateMust() *azurermAutomationSoftwareUpdateConfigurationState {
	if aasuc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasuc.Type(), aasuc.LocalName()))
	}
	return aasuc.state
}

// Args contains the configurations for azurerm_automation_software_update_configuration.
type Args struct {
	// AutomationAccountId: string, required
	AutomationAccountId terra.StringValue `hcl:"automation_account_id,attr" validate:"required"`
	// Duration: string, optional
	Duration terra.StringValue `hcl:"duration,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NonAzureComputerNames: list of string, optional
	NonAzureComputerNames terra.ListValue[terra.StringValue] `hcl:"non_azure_computer_names,attr"`
	// OperatingSystem: string, optional
	OperatingSystem terra.StringValue `hcl:"operating_system,attr"`
	// VirtualMachineIds: list of string, optional
	VirtualMachineIds terra.ListValue[terra.StringValue] `hcl:"virtual_machine_ids,attr"`
	// Linux: optional
	Linux *Linux `hcl:"linux,block"`
	// PostTask: optional
	PostTask *PostTask `hcl:"post_task,block"`
	// PreTask: optional
	PreTask *PreTask `hcl:"pre_task,block"`
	// Schedule: required
	Schedule *Schedule `hcl:"schedule,block" validate:"required"`
	// Target: optional
	Target *Target `hcl:"target,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// Windows: optional
	Windows *Windows `hcl:"windows,block"`
}

type azurermAutomationSoftwareUpdateConfigurationAttributes struct {
	ref terra.Reference
}

// AutomationAccountId returns a reference to field automation_account_id of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) AutomationAccountId() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("automation_account_id"))
}

// Duration returns a reference to field duration of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("duration"))
}

// ErrorCode returns a reference to field error_code of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) ErrorCode() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("error_code"))
}

// ErrorMeesage returns a reference to field error_meesage of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) ErrorMeesage() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("error_meesage"))
}

// ErrorMessage returns a reference to field error_message of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("error_message"))
}

// Id returns a reference to field id of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("name"))
}

// NonAzureComputerNames returns a reference to field non_azure_computer_names of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) NonAzureComputerNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aasuc.ref.Append("non_azure_computer_names"))
}

// OperatingSystem returns a reference to field operating_system of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) OperatingSystem() terra.StringValue {
	return terra.ReferenceAsString(aasuc.ref.Append("operating_system"))
}

// VirtualMachineIds returns a reference to field virtual_machine_ids of azurerm_automation_software_update_configuration.
func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) VirtualMachineIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aasuc.ref.Append("virtual_machine_ids"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Linux() terra.ListValue[LinuxAttributes] {
	return terra.ReferenceAsList[LinuxAttributes](aasuc.ref.Append("linux"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) PostTask() terra.ListValue[PostTaskAttributes] {
	return terra.ReferenceAsList[PostTaskAttributes](aasuc.ref.Append("post_task"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) PreTask() terra.ListValue[PreTaskAttributes] {
	return terra.ReferenceAsList[PreTaskAttributes](aasuc.ref.Append("pre_task"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Schedule() terra.ListValue[ScheduleAttributes] {
	return terra.ReferenceAsList[ScheduleAttributes](aasuc.ref.Append("schedule"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Target() terra.ListValue[TargetAttributes] {
	return terra.ReferenceAsList[TargetAttributes](aasuc.ref.Append("target"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aasuc.ref.Append("timeouts"))
}

func (aasuc azurermAutomationSoftwareUpdateConfigurationAttributes) Windows() terra.ListValue[WindowsAttributes] {
	return terra.ReferenceAsList[WindowsAttributes](aasuc.ref.Append("windows"))
}

type azurermAutomationSoftwareUpdateConfigurationState struct {
	AutomationAccountId   string          `json:"automation_account_id"`
	Duration              string          `json:"duration"`
	ErrorCode             string          `json:"error_code"`
	ErrorMeesage          string          `json:"error_meesage"`
	ErrorMessage          string          `json:"error_message"`
	Id                    string          `json:"id"`
	Name                  string          `json:"name"`
	NonAzureComputerNames []string        `json:"non_azure_computer_names"`
	OperatingSystem       string          `json:"operating_system"`
	VirtualMachineIds     []string        `json:"virtual_machine_ids"`
	Linux                 []LinuxState    `json:"linux"`
	PostTask              []PostTaskState `json:"post_task"`
	PreTask               []PreTaskState  `json:"pre_task"`
	Schedule              []ScheduleState `json:"schedule"`
	Target                []TargetState   `json:"target"`
	Timeouts              *TimeoutsState  `json:"timeouts"`
	Windows               []WindowsState  `json:"windows"`
}
