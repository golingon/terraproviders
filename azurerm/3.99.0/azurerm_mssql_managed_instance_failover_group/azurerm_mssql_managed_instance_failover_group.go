// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mssql_managed_instance_failover_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_mssql_managed_instance_failover_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMssqlManagedInstanceFailoverGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ammifg *Resource) Type() string {
	return "azurerm_mssql_managed_instance_failover_group"
}

// LocalName returns the local name for [Resource].
func (ammifg *Resource) LocalName() string {
	return ammifg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ammifg *Resource) Configuration() interface{} {
	return ammifg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ammifg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ammifg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ammifg *Resource) Dependencies() terra.Dependencies {
	return ammifg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ammifg *Resource) LifecycleManagement() *terra.Lifecycle {
	return ammifg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ammifg *Resource) Attributes() azurermMssqlManagedInstanceFailoverGroupAttributes {
	return azurermMssqlManagedInstanceFailoverGroupAttributes{ref: terra.ReferenceResource(ammifg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ammifg *Resource) ImportState(state io.Reader) error {
	ammifg.state = &azurermMssqlManagedInstanceFailoverGroupState{}
	if err := json.NewDecoder(state).Decode(ammifg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ammifg.Type(), ammifg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ammifg *Resource) State() (*azurermMssqlManagedInstanceFailoverGroupState, bool) {
	return ammifg.state, ammifg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ammifg *Resource) StateMust() *azurermMssqlManagedInstanceFailoverGroupState {
	if ammifg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ammifg.Type(), ammifg.LocalName()))
	}
	return ammifg.state
}

// Args contains the configurations for azurerm_mssql_managed_instance_failover_group.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ManagedInstanceId: string, required
	ManagedInstanceId terra.StringValue `hcl:"managed_instance_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PartnerManagedInstanceId: string, required
	PartnerManagedInstanceId terra.StringValue `hcl:"partner_managed_instance_id,attr" validate:"required"`
	// ReadonlyEndpointFailoverPolicyEnabled: bool, optional
	ReadonlyEndpointFailoverPolicyEnabled terra.BoolValue `hcl:"readonly_endpoint_failover_policy_enabled,attr"`
	// ReadWriteEndpointFailoverPolicy: required
	ReadWriteEndpointFailoverPolicy *ReadWriteEndpointFailoverPolicy `hcl:"read_write_endpoint_failover_policy,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMssqlManagedInstanceFailoverGroupAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ammifg.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ammifg.ref.Append("location"))
}

// ManagedInstanceId returns a reference to field managed_instance_id of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) ManagedInstanceId() terra.StringValue {
	return terra.ReferenceAsString(ammifg.ref.Append("managed_instance_id"))
}

// Name returns a reference to field name of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ammifg.ref.Append("name"))
}

// PartnerManagedInstanceId returns a reference to field partner_managed_instance_id of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) PartnerManagedInstanceId() terra.StringValue {
	return terra.ReferenceAsString(ammifg.ref.Append("partner_managed_instance_id"))
}

// ReadonlyEndpointFailoverPolicyEnabled returns a reference to field readonly_endpoint_failover_policy_enabled of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) ReadonlyEndpointFailoverPolicyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ammifg.ref.Append("readonly_endpoint_failover_policy_enabled"))
}

// Role returns a reference to field role of azurerm_mssql_managed_instance_failover_group.
func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(ammifg.ref.Append("role"))
}

func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) PartnerRegion() terra.ListValue[PartnerRegionAttributes] {
	return terra.ReferenceAsList[PartnerRegionAttributes](ammifg.ref.Append("partner_region"))
}

func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) ReadWriteEndpointFailoverPolicy() terra.ListValue[ReadWriteEndpointFailoverPolicyAttributes] {
	return terra.ReferenceAsList[ReadWriteEndpointFailoverPolicyAttributes](ammifg.ref.Append("read_write_endpoint_failover_policy"))
}

func (ammifg azurermMssqlManagedInstanceFailoverGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ammifg.ref.Append("timeouts"))
}

type azurermMssqlManagedInstanceFailoverGroupState struct {
	Id                                    string                                 `json:"id"`
	Location                              string                                 `json:"location"`
	ManagedInstanceId                     string                                 `json:"managed_instance_id"`
	Name                                  string                                 `json:"name"`
	PartnerManagedInstanceId              string                                 `json:"partner_managed_instance_id"`
	ReadonlyEndpointFailoverPolicyEnabled bool                                   `json:"readonly_endpoint_failover_policy_enabled"`
	Role                                  string                                 `json:"role"`
	PartnerRegion                         []PartnerRegionState                   `json:"partner_region"`
	ReadWriteEndpointFailoverPolicy       []ReadWriteEndpointFailoverPolicyState `json:"read_write_endpoint_failover_policy"`
	Timeouts                              *TimeoutsState                         `json:"timeouts"`
}
