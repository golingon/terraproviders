// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logic_app_workflow

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_logic_app_workflow.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogicAppWorkflowState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alaw *Resource) Type() string {
	return "azurerm_logic_app_workflow"
}

// LocalName returns the local name for [Resource].
func (alaw *Resource) LocalName() string {
	return alaw.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alaw *Resource) Configuration() interface{} {
	return alaw.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alaw *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alaw)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alaw *Resource) Dependencies() terra.Dependencies {
	return alaw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alaw *Resource) LifecycleManagement() *terra.Lifecycle {
	return alaw.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alaw *Resource) Attributes() azurermLogicAppWorkflowAttributes {
	return azurermLogicAppWorkflowAttributes{ref: terra.ReferenceResource(alaw)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alaw *Resource) ImportState(state io.Reader) error {
	alaw.state = &azurermLogicAppWorkflowState{}
	if err := json.NewDecoder(state).Decode(alaw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alaw.Type(), alaw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alaw *Resource) State() (*azurermLogicAppWorkflowState, bool) {
	return alaw.state, alaw.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alaw *Resource) StateMust() *azurermLogicAppWorkflowState {
	if alaw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alaw.Type(), alaw.LocalName()))
	}
	return alaw.state
}

// Args contains the configurations for azurerm_logic_app_workflow.
type Args struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationServiceEnvironmentId: string, optional
	IntegrationServiceEnvironmentId terra.StringValue `hcl:"integration_service_environment_id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LogicAppIntegrationAccountId: string, optional
	LogicAppIntegrationAccountId terra.StringValue `hcl:"logic_app_integration_account_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// WorkflowParameters: map of string, optional
	WorkflowParameters terra.MapValue[terra.StringValue] `hcl:"workflow_parameters,attr"`
	// WorkflowSchema: string, optional
	WorkflowSchema terra.StringValue `hcl:"workflow_schema,attr"`
	// WorkflowVersion: string, optional
	WorkflowVersion terra.StringValue `hcl:"workflow_version,attr"`
	// AccessControl: optional
	AccessControl *AccessControl `hcl:"access_control,block"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogicAppWorkflowAttributes struct {
	ref terra.Reference
}

// AccessEndpoint returns a reference to field access_endpoint of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) AccessEndpoint() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("access_endpoint"))
}

// ConnectorEndpointIpAddresses returns a reference to field connector_endpoint_ip_addresses of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) ConnectorEndpointIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alaw.ref.Append("connector_endpoint_ip_addresses"))
}

// ConnectorOutboundIpAddresses returns a reference to field connector_outbound_ip_addresses of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) ConnectorOutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alaw.ref.Append("connector_outbound_ip_addresses"))
}

// Enabled returns a reference to field enabled of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(alaw.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("id"))
}

// IntegrationServiceEnvironmentId returns a reference to field integration_service_environment_id of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) IntegrationServiceEnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("integration_service_environment_id"))
}

// Location returns a reference to field location of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("location"))
}

// LogicAppIntegrationAccountId returns a reference to field logic_app_integration_account_id of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) LogicAppIntegrationAccountId() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("logic_app_integration_account_id"))
}

// Name returns a reference to field name of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("name"))
}

// Parameters returns a reference to field parameters of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](alaw.ref.Append("parameters"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](alaw.ref.Append("tags"))
}

// WorkflowEndpointIpAddresses returns a reference to field workflow_endpoint_ip_addresses of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) WorkflowEndpointIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alaw.ref.Append("workflow_endpoint_ip_addresses"))
}

// WorkflowOutboundIpAddresses returns a reference to field workflow_outbound_ip_addresses of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) WorkflowOutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](alaw.ref.Append("workflow_outbound_ip_addresses"))
}

// WorkflowParameters returns a reference to field workflow_parameters of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) WorkflowParameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](alaw.ref.Append("workflow_parameters"))
}

// WorkflowSchema returns a reference to field workflow_schema of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) WorkflowSchema() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("workflow_schema"))
}

// WorkflowVersion returns a reference to field workflow_version of azurerm_logic_app_workflow.
func (alaw azurermLogicAppWorkflowAttributes) WorkflowVersion() terra.StringValue {
	return terra.ReferenceAsString(alaw.ref.Append("workflow_version"))
}

func (alaw azurermLogicAppWorkflowAttributes) AccessControl() terra.ListValue[AccessControlAttributes] {
	return terra.ReferenceAsList[AccessControlAttributes](alaw.ref.Append("access_control"))
}

func (alaw azurermLogicAppWorkflowAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](alaw.ref.Append("identity"))
}

func (alaw azurermLogicAppWorkflowAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alaw.ref.Append("timeouts"))
}

type azurermLogicAppWorkflowState struct {
	AccessEndpoint                  string               `json:"access_endpoint"`
	ConnectorEndpointIpAddresses    []string             `json:"connector_endpoint_ip_addresses"`
	ConnectorOutboundIpAddresses    []string             `json:"connector_outbound_ip_addresses"`
	Enabled                         bool                 `json:"enabled"`
	Id                              string               `json:"id"`
	IntegrationServiceEnvironmentId string               `json:"integration_service_environment_id"`
	Location                        string               `json:"location"`
	LogicAppIntegrationAccountId    string               `json:"logic_app_integration_account_id"`
	Name                            string               `json:"name"`
	Parameters                      map[string]string    `json:"parameters"`
	ResourceGroupName               string               `json:"resource_group_name"`
	Tags                            map[string]string    `json:"tags"`
	WorkflowEndpointIpAddresses     []string             `json:"workflow_endpoint_ip_addresses"`
	WorkflowOutboundIpAddresses     []string             `json:"workflow_outbound_ip_addresses"`
	WorkflowParameters              map[string]string    `json:"workflow_parameters"`
	WorkflowSchema                  string               `json:"workflow_schema"`
	WorkflowVersion                 string               `json:"workflow_version"`
	AccessControl                   []AccessControlState `json:"access_control"`
	Identity                        []IdentityState      `json:"identity"`
	Timeouts                        *TimeoutsState       `json:"timeouts"`
}
