// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logic_app_workflow

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccessControl struct {
	// AccessControlAction: optional
	Action *AccessControlAction `hcl:"action,block"`
	// AccessControlContent: optional
	Content *AccessControlContent `hcl:"content,block"`
	// AccessControlTrigger: optional
	Trigger *AccessControlTrigger `hcl:"trigger,block"`
	// AccessControlWorkflowManagement: optional
	WorkflowManagement *AccessControlWorkflowManagement `hcl:"workflow_management,block"`
}

type AccessControlAction struct {
	// AllowedCallerIpAddressRange: set of string, required
	AllowedCallerIpAddressRange terra.SetValue[terra.StringValue] `hcl:"allowed_caller_ip_address_range,attr" validate:"required"`
}

type AccessControlContent struct {
	// AllowedCallerIpAddressRange: set of string, required
	AllowedCallerIpAddressRange terra.SetValue[terra.StringValue] `hcl:"allowed_caller_ip_address_range,attr" validate:"required"`
}

type AccessControlTrigger struct {
	// AllowedCallerIpAddressRange: set of string, required
	AllowedCallerIpAddressRange terra.SetValue[terra.StringValue] `hcl:"allowed_caller_ip_address_range,attr" validate:"required"`
	// AccessControlTriggerOpenAuthenticationPolicy: min=0
	OpenAuthenticationPolicy []AccessControlTriggerOpenAuthenticationPolicy `hcl:"open_authentication_policy,block" validate:"min=0"`
}

type AccessControlTriggerOpenAuthenticationPolicy struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// AccessControlTriggerOpenAuthenticationPolicyClaim: min=1
	Claim []AccessControlTriggerOpenAuthenticationPolicyClaim `hcl:"claim,block" validate:"min=1"`
}

type AccessControlTriggerOpenAuthenticationPolicyClaim struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type AccessControlWorkflowManagement struct {
	// AllowedCallerIpAddressRange: set of string, required
	AllowedCallerIpAddressRange terra.SetValue[terra.StringValue] `hcl:"allowed_caller_ip_address_range,attr" validate:"required"`
}

type Identity struct {
	// IdentityIds: set of string, optional
	IdentityIds terra.SetValue[terra.StringValue] `hcl:"identity_ids,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AccessControlAttributes struct {
	ref terra.Reference
}

func (ac AccessControlAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac AccessControlAttributes) InternalWithRef(ref terra.Reference) AccessControlAttributes {
	return AccessControlAttributes{ref: ref}
}

func (ac AccessControlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac AccessControlAttributes) Action() terra.ListValue[AccessControlActionAttributes] {
	return terra.ReferenceAsList[AccessControlActionAttributes](ac.ref.Append("action"))
}

func (ac AccessControlAttributes) Content() terra.ListValue[AccessControlContentAttributes] {
	return terra.ReferenceAsList[AccessControlContentAttributes](ac.ref.Append("content"))
}

func (ac AccessControlAttributes) Trigger() terra.ListValue[AccessControlTriggerAttributes] {
	return terra.ReferenceAsList[AccessControlTriggerAttributes](ac.ref.Append("trigger"))
}

func (ac AccessControlAttributes) WorkflowManagement() terra.ListValue[AccessControlWorkflowManagementAttributes] {
	return terra.ReferenceAsList[AccessControlWorkflowManagementAttributes](ac.ref.Append("workflow_management"))
}

type AccessControlActionAttributes struct {
	ref terra.Reference
}

func (a AccessControlActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a AccessControlActionAttributes) InternalWithRef(ref terra.Reference) AccessControlActionAttributes {
	return AccessControlActionAttributes{ref: ref}
}

func (a AccessControlActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a AccessControlActionAttributes) AllowedCallerIpAddressRange() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("allowed_caller_ip_address_range"))
}

type AccessControlContentAttributes struct {
	ref terra.Reference
}

func (c AccessControlContentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c AccessControlContentAttributes) InternalWithRef(ref terra.Reference) AccessControlContentAttributes {
	return AccessControlContentAttributes{ref: ref}
}

func (c AccessControlContentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c AccessControlContentAttributes) AllowedCallerIpAddressRange() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("allowed_caller_ip_address_range"))
}

type AccessControlTriggerAttributes struct {
	ref terra.Reference
}

func (t AccessControlTriggerAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t AccessControlTriggerAttributes) InternalWithRef(ref terra.Reference) AccessControlTriggerAttributes {
	return AccessControlTriggerAttributes{ref: ref}
}

func (t AccessControlTriggerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t AccessControlTriggerAttributes) AllowedCallerIpAddressRange() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](t.ref.Append("allowed_caller_ip_address_range"))
}

func (t AccessControlTriggerAttributes) OpenAuthenticationPolicy() terra.SetValue[AccessControlTriggerOpenAuthenticationPolicyAttributes] {
	return terra.ReferenceAsSet[AccessControlTriggerOpenAuthenticationPolicyAttributes](t.ref.Append("open_authentication_policy"))
}

type AccessControlTriggerOpenAuthenticationPolicyAttributes struct {
	ref terra.Reference
}

func (oap AccessControlTriggerOpenAuthenticationPolicyAttributes) InternalRef() (terra.Reference, error) {
	return oap.ref, nil
}

func (oap AccessControlTriggerOpenAuthenticationPolicyAttributes) InternalWithRef(ref terra.Reference) AccessControlTriggerOpenAuthenticationPolicyAttributes {
	return AccessControlTriggerOpenAuthenticationPolicyAttributes{ref: ref}
}

func (oap AccessControlTriggerOpenAuthenticationPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oap.ref.InternalTokens()
}

func (oap AccessControlTriggerOpenAuthenticationPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(oap.ref.Append("name"))
}

func (oap AccessControlTriggerOpenAuthenticationPolicyAttributes) Claim() terra.SetValue[AccessControlTriggerOpenAuthenticationPolicyClaimAttributes] {
	return terra.ReferenceAsSet[AccessControlTriggerOpenAuthenticationPolicyClaimAttributes](oap.ref.Append("claim"))
}

type AccessControlTriggerOpenAuthenticationPolicyClaimAttributes struct {
	ref terra.Reference
}

func (c AccessControlTriggerOpenAuthenticationPolicyClaimAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c AccessControlTriggerOpenAuthenticationPolicyClaimAttributes) InternalWithRef(ref terra.Reference) AccessControlTriggerOpenAuthenticationPolicyClaimAttributes {
	return AccessControlTriggerOpenAuthenticationPolicyClaimAttributes{ref: ref}
}

func (c AccessControlTriggerOpenAuthenticationPolicyClaimAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c AccessControlTriggerOpenAuthenticationPolicyClaimAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c AccessControlTriggerOpenAuthenticationPolicyClaimAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("value"))
}

type AccessControlWorkflowManagementAttributes struct {
	ref terra.Reference
}

func (wm AccessControlWorkflowManagementAttributes) InternalRef() (terra.Reference, error) {
	return wm.ref, nil
}

func (wm AccessControlWorkflowManagementAttributes) InternalWithRef(ref terra.Reference) AccessControlWorkflowManagementAttributes {
	return AccessControlWorkflowManagementAttributes{ref: ref}
}

func (wm AccessControlWorkflowManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wm.ref.InternalTokens()
}

func (wm AccessControlWorkflowManagementAttributes) AllowedCallerIpAddressRange() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](wm.ref.Append("allowed_caller_ip_address_range"))
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) IdentityIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i IdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i IdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i IdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AccessControlState struct {
	Action             []AccessControlActionState             `json:"action"`
	Content            []AccessControlContentState            `json:"content"`
	Trigger            []AccessControlTriggerState            `json:"trigger"`
	WorkflowManagement []AccessControlWorkflowManagementState `json:"workflow_management"`
}

type AccessControlActionState struct {
	AllowedCallerIpAddressRange []string `json:"allowed_caller_ip_address_range"`
}

type AccessControlContentState struct {
	AllowedCallerIpAddressRange []string `json:"allowed_caller_ip_address_range"`
}

type AccessControlTriggerState struct {
	AllowedCallerIpAddressRange []string                                            `json:"allowed_caller_ip_address_range"`
	OpenAuthenticationPolicy    []AccessControlTriggerOpenAuthenticationPolicyState `json:"open_authentication_policy"`
}

type AccessControlTriggerOpenAuthenticationPolicyState struct {
	Name  string                                                   `json:"name"`
	Claim []AccessControlTriggerOpenAuthenticationPolicyClaimState `json:"claim"`
}

type AccessControlTriggerOpenAuthenticationPolicyClaimState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type AccessControlWorkflowManagementState struct {
	AllowedCallerIpAddressRange []string `json:"allowed_caller_ip_address_range"`
}

type IdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	PrincipalId string   `json:"principal_id"`
	TenantId    string   `json:"tenant_id"`
	Type        string   `json:"type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
