// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logic_app_standard

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_logic_app_standard.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alas *DataSource) DataSource() string {
	return "azurerm_logic_app_standard"
}

// LocalName returns the local name for [DataSource].
func (alas *DataSource) LocalName() string {
	return alas.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alas *DataSource) Configuration() interface{} {
	return alas.Args
}

// Attributes returns the attributes for [DataSource].
func (alas *DataSource) Attributes() dataAzurermLogicAppStandardAttributes {
	return dataAzurermLogicAppStandardAttributes{ref: terra.ReferenceDataSource(alas)}
}

// DataArgs contains the configurations for azurerm_logic_app_standard.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// SiteConfig: optional
	SiteConfig *DataSiteConfig `hcl:"site_config,block"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermLogicAppStandardAttributes struct {
	ref terra.Reference
}

// AppServicePlanId returns a reference to field app_service_plan_id of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) AppServicePlanId() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("app_service_plan_id"))
}

// AppSettings returns a reference to field app_settings of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) AppSettings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](alas.ref.Append("app_settings"))
}

// BundleVersion returns a reference to field bundle_version of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) BundleVersion() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("bundle_version"))
}

// ClientAffinityEnabled returns a reference to field client_affinity_enabled of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) ClientAffinityEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(alas.ref.Append("client_affinity_enabled"))
}

// ClientCertificateMode returns a reference to field client_certificate_mode of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) ClientCertificateMode() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("client_certificate_mode"))
}

// CustomDomainVerificationId returns a reference to field custom_domain_verification_id of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) CustomDomainVerificationId() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("custom_domain_verification_id"))
}

// DefaultHostname returns a reference to field default_hostname of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) DefaultHostname() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("default_hostname"))
}

// Enabled returns a reference to field enabled of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(alas.ref.Append("enabled"))
}

// HttpsOnly returns a reference to field https_only of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceAsBool(alas.ref.Append("https_only"))
}

// Id returns a reference to field id of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("id"))
}

// Kind returns a reference to field kind of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Kind() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("kind"))
}

// Location returns a reference to field location of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("name"))
}

// OutboundIpAddresses returns a reference to field outbound_ip_addresses of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) OutboundIpAddresses() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("outbound_ip_addresses"))
}

// PossibleOutboundIpAddresses returns a reference to field possible_outbound_ip_addresses of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) PossibleOutboundIpAddresses() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("possible_outbound_ip_addresses"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("resource_group_name"))
}

// StorageAccountAccessKey returns a reference to field storage_account_access_key of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("storage_account_access_key"))
}

// StorageAccountName returns a reference to field storage_account_name of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) StorageAccountName() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("storage_account_name"))
}

// StorageAccountShareName returns a reference to field storage_account_share_name of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) StorageAccountShareName() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("storage_account_share_name"))
}

// Tags returns a reference to field tags of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](alas.ref.Append("tags"))
}

// UseExtensionBundle returns a reference to field use_extension_bundle of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) UseExtensionBundle() terra.BoolValue {
	return terra.ReferenceAsBool(alas.ref.Append("use_extension_bundle"))
}

// Version returns a reference to field version of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("version"))
}

// VirtualNetworkSubnetId returns a reference to field virtual_network_subnet_id of azurerm_logic_app_standard.
func (alas dataAzurermLogicAppStandardAttributes) VirtualNetworkSubnetId() terra.StringValue {
	return terra.ReferenceAsString(alas.ref.Append("virtual_network_subnet_id"))
}

func (alas dataAzurermLogicAppStandardAttributes) ConnectionString() terra.SetValue[DataConnectionStringAttributes] {
	return terra.ReferenceAsSet[DataConnectionStringAttributes](alas.ref.Append("connection_string"))
}

func (alas dataAzurermLogicAppStandardAttributes) Identity() terra.ListValue[DataIdentityAttributes] {
	return terra.ReferenceAsList[DataIdentityAttributes](alas.ref.Append("identity"))
}

func (alas dataAzurermLogicAppStandardAttributes) SiteCredential() terra.ListValue[DataSiteCredentialAttributes] {
	return terra.ReferenceAsList[DataSiteCredentialAttributes](alas.ref.Append("site_credential"))
}

func (alas dataAzurermLogicAppStandardAttributes) SiteConfig() terra.ListValue[DataSiteConfigAttributes] {
	return terra.ReferenceAsList[DataSiteConfigAttributes](alas.ref.Append("site_config"))
}

func (alas dataAzurermLogicAppStandardAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](alas.ref.Append("timeouts"))
}
