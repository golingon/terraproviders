// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_security_center_assessment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_security_center_assessment.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSecurityCenterAssessmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asca *Resource) Type() string {
	return "azurerm_security_center_assessment"
}

// LocalName returns the local name for [Resource].
func (asca *Resource) LocalName() string {
	return asca.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asca *Resource) Configuration() interface{} {
	return asca.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asca *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asca)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asca *Resource) Dependencies() terra.Dependencies {
	return asca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asca *Resource) LifecycleManagement() *terra.Lifecycle {
	return asca.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asca *Resource) Attributes() azurermSecurityCenterAssessmentAttributes {
	return azurermSecurityCenterAssessmentAttributes{ref: terra.ReferenceResource(asca)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asca *Resource) ImportState(state io.Reader) error {
	asca.state = &azurermSecurityCenterAssessmentState{}
	if err := json.NewDecoder(state).Decode(asca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asca.Type(), asca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asca *Resource) State() (*azurermSecurityCenterAssessmentState, bool) {
	return asca.state, asca.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asca *Resource) StateMust() *azurermSecurityCenterAssessmentState {
	if asca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asca.Type(), asca.LocalName()))
	}
	return asca.state
}

// Args contains the configurations for azurerm_security_center_assessment.
type Args struct {
	// AdditionalData: map of string, optional
	AdditionalData terra.MapValue[terra.StringValue] `hcl:"additional_data,attr"`
	// AssessmentPolicyId: string, required
	AssessmentPolicyId terra.StringValue `hcl:"assessment_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// Status: required
	Status *Status `hcl:"status,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSecurityCenterAssessmentAttributes struct {
	ref terra.Reference
}

// AdditionalData returns a reference to field additional_data of azurerm_security_center_assessment.
func (asca azurermSecurityCenterAssessmentAttributes) AdditionalData() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asca.ref.Append("additional_data"))
}

// AssessmentPolicyId returns a reference to field assessment_policy_id of azurerm_security_center_assessment.
func (asca azurermSecurityCenterAssessmentAttributes) AssessmentPolicyId() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("assessment_policy_id"))
}

// Id returns a reference to field id of azurerm_security_center_assessment.
func (asca azurermSecurityCenterAssessmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("id"))
}

// TargetResourceId returns a reference to field target_resource_id of azurerm_security_center_assessment.
func (asca azurermSecurityCenterAssessmentAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("target_resource_id"))
}

func (asca azurermSecurityCenterAssessmentAttributes) Status() terra.ListValue[StatusAttributes] {
	return terra.ReferenceAsList[StatusAttributes](asca.ref.Append("status"))
}

func (asca azurermSecurityCenterAssessmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asca.ref.Append("timeouts"))
}

type azurermSecurityCenterAssessmentState struct {
	AdditionalData     map[string]string `json:"additional_data"`
	AssessmentPolicyId string            `json:"assessment_policy_id"`
	Id                 string            `json:"id"`
	TargetResourceId   string            `json:"target_resource_id"`
	Status             []StatusState     `json:"status"`
	Timeouts           *TimeoutsState    `json:"timeouts"`
}
