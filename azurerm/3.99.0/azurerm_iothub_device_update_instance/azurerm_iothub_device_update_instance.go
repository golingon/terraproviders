// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iothub_device_update_instance

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iothub_device_update_instance.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIothubDeviceUpdateInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aidui *Resource) Type() string {
	return "azurerm_iothub_device_update_instance"
}

// LocalName returns the local name for [Resource].
func (aidui *Resource) LocalName() string {
	return aidui.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aidui *Resource) Configuration() interface{} {
	return aidui.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aidui *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aidui)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aidui *Resource) Dependencies() terra.Dependencies {
	return aidui.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aidui *Resource) LifecycleManagement() *terra.Lifecycle {
	return aidui.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aidui *Resource) Attributes() azurermIothubDeviceUpdateInstanceAttributes {
	return azurermIothubDeviceUpdateInstanceAttributes{ref: terra.ReferenceResource(aidui)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aidui *Resource) ImportState(state io.Reader) error {
	aidui.state = &azurermIothubDeviceUpdateInstanceState{}
	if err := json.NewDecoder(state).Decode(aidui.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aidui.Type(), aidui.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aidui *Resource) State() (*azurermIothubDeviceUpdateInstanceState, bool) {
	return aidui.state, aidui.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aidui *Resource) StateMust() *azurermIothubDeviceUpdateInstanceState {
	if aidui.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aidui.Type(), aidui.LocalName()))
	}
	return aidui.state
}

// Args contains the configurations for azurerm_iothub_device_update_instance.
type Args struct {
	// DeviceUpdateAccountId: string, required
	DeviceUpdateAccountId terra.StringValue `hcl:"device_update_account_id,attr" validate:"required"`
	// DiagnosticEnabled: bool, optional
	DiagnosticEnabled terra.BoolValue `hcl:"diagnostic_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubId: string, required
	IothubId terra.StringValue `hcl:"iothub_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// DiagnosticStorageAccount: optional
	DiagnosticStorageAccount *DiagnosticStorageAccount `hcl:"diagnostic_storage_account,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIothubDeviceUpdateInstanceAttributes struct {
	ref terra.Reference
}

// DeviceUpdateAccountId returns a reference to field device_update_account_id of azurerm_iothub_device_update_instance.
func (aidui azurermIothubDeviceUpdateInstanceAttributes) DeviceUpdateAccountId() terra.StringValue {
	return terra.ReferenceAsString(aidui.ref.Append("device_update_account_id"))
}

// DiagnosticEnabled returns a reference to field diagnostic_enabled of azurerm_iothub_device_update_instance.
func (aidui azurermIothubDeviceUpdateInstanceAttributes) DiagnosticEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aidui.ref.Append("diagnostic_enabled"))
}

// Id returns a reference to field id of azurerm_iothub_device_update_instance.
func (aidui azurermIothubDeviceUpdateInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aidui.ref.Append("id"))
}

// IothubId returns a reference to field iothub_id of azurerm_iothub_device_update_instance.
func (aidui azurermIothubDeviceUpdateInstanceAttributes) IothubId() terra.StringValue {
	return terra.ReferenceAsString(aidui.ref.Append("iothub_id"))
}

// Name returns a reference to field name of azurerm_iothub_device_update_instance.
func (aidui azurermIothubDeviceUpdateInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aidui.ref.Append("name"))
}

// Tags returns a reference to field tags of azurerm_iothub_device_update_instance.
func (aidui azurermIothubDeviceUpdateInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aidui.ref.Append("tags"))
}

func (aidui azurermIothubDeviceUpdateInstanceAttributes) DiagnosticStorageAccount() terra.ListValue[DiagnosticStorageAccountAttributes] {
	return terra.ReferenceAsList[DiagnosticStorageAccountAttributes](aidui.ref.Append("diagnostic_storage_account"))
}

func (aidui azurermIothubDeviceUpdateInstanceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aidui.ref.Append("timeouts"))
}

type azurermIothubDeviceUpdateInstanceState struct {
	DeviceUpdateAccountId    string                          `json:"device_update_account_id"`
	DiagnosticEnabled        bool                            `json:"diagnostic_enabled"`
	Id                       string                          `json:"id"`
	IothubId                 string                          `json:"iothub_id"`
	Name                     string                          `json:"name"`
	Tags                     map[string]string               `json:"tags"`
	DiagnosticStorageAccount []DiagnosticStorageAccountState `json:"diagnostic_storage_account"`
	Timeouts                 *TimeoutsState                  `json:"timeouts"`
}
