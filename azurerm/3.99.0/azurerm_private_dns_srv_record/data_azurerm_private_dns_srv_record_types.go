// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_private_dns_srv_record

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataRecordAttributes struct {
	ref terra.Reference
}

func (r DataRecordAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataRecordAttributes) InternalWithRef(ref terra.Reference) DataRecordAttributes {
	return DataRecordAttributes{ref: ref}
}

func (r DataRecordAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataRecordAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("port"))
}

func (r DataRecordAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("priority"))
}

func (r DataRecordAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("target"))
}

func (r DataRecordAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("weight"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataRecordState struct {
	Port     float64 `json:"port"`
	Priority float64 `json:"priority"`
	Target   string  `json:"target"`
	Weight   float64 `json:"weight"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
