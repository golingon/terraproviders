// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_signalr_service_custom_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_signalr_service_custom_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSignalrServiceCustomCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asscc *Resource) Type() string {
	return "azurerm_signalr_service_custom_certificate"
}

// LocalName returns the local name for [Resource].
func (asscc *Resource) LocalName() string {
	return asscc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asscc *Resource) Configuration() interface{} {
	return asscc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asscc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asscc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asscc *Resource) Dependencies() terra.Dependencies {
	return asscc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asscc *Resource) LifecycleManagement() *terra.Lifecycle {
	return asscc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asscc *Resource) Attributes() azurermSignalrServiceCustomCertificateAttributes {
	return azurermSignalrServiceCustomCertificateAttributes{ref: terra.ReferenceResource(asscc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asscc *Resource) ImportState(state io.Reader) error {
	asscc.state = &azurermSignalrServiceCustomCertificateState{}
	if err := json.NewDecoder(state).Decode(asscc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asscc.Type(), asscc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asscc *Resource) State() (*azurermSignalrServiceCustomCertificateState, bool) {
	return asscc.state, asscc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asscc *Resource) StateMust() *azurermSignalrServiceCustomCertificateState {
	if asscc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asscc.Type(), asscc.LocalName()))
	}
	return asscc.state
}

// Args contains the configurations for azurerm_signalr_service_custom_certificate.
type Args struct {
	// CustomCertificateId: string, required
	CustomCertificateId terra.StringValue `hcl:"custom_certificate_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SignalrServiceId: string, required
	SignalrServiceId terra.StringValue `hcl:"signalr_service_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSignalrServiceCustomCertificateAttributes struct {
	ref terra.Reference
}

// CertificateVersion returns a reference to field certificate_version of azurerm_signalr_service_custom_certificate.
func (asscc azurermSignalrServiceCustomCertificateAttributes) CertificateVersion() terra.StringValue {
	return terra.ReferenceAsString(asscc.ref.Append("certificate_version"))
}

// CustomCertificateId returns a reference to field custom_certificate_id of azurerm_signalr_service_custom_certificate.
func (asscc azurermSignalrServiceCustomCertificateAttributes) CustomCertificateId() terra.StringValue {
	return terra.ReferenceAsString(asscc.ref.Append("custom_certificate_id"))
}

// Id returns a reference to field id of azurerm_signalr_service_custom_certificate.
func (asscc azurermSignalrServiceCustomCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asscc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_signalr_service_custom_certificate.
func (asscc azurermSignalrServiceCustomCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asscc.ref.Append("name"))
}

// SignalrServiceId returns a reference to field signalr_service_id of azurerm_signalr_service_custom_certificate.
func (asscc azurermSignalrServiceCustomCertificateAttributes) SignalrServiceId() terra.StringValue {
	return terra.ReferenceAsString(asscc.ref.Append("signalr_service_id"))
}

func (asscc azurermSignalrServiceCustomCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asscc.ref.Append("timeouts"))
}

type azurermSignalrServiceCustomCertificateState struct {
	CertificateVersion  string         `json:"certificate_version"`
	CustomCertificateId string         `json:"custom_certificate_id"`
	Id                  string         `json:"id"`
	Name                string         `json:"name"`
	SignalrServiceId    string         `json:"signalr_service_id"`
	Timeouts            *TimeoutsState `json:"timeouts"`
}
