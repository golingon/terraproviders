// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_palo_alto_local_rulestack_fqdn_list

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_palo_alto_local_rulestack_fqdn_list.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPaloAltoLocalRulestackFqdnListState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apalrfl *Resource) Type() string {
	return "azurerm_palo_alto_local_rulestack_fqdn_list"
}

// LocalName returns the local name for [Resource].
func (apalrfl *Resource) LocalName() string {
	return apalrfl.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apalrfl *Resource) Configuration() interface{} {
	return apalrfl.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apalrfl *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apalrfl)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apalrfl *Resource) Dependencies() terra.Dependencies {
	return apalrfl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apalrfl *Resource) LifecycleManagement() *terra.Lifecycle {
	return apalrfl.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apalrfl *Resource) Attributes() azurermPaloAltoLocalRulestackFqdnListAttributes {
	return azurermPaloAltoLocalRulestackFqdnListAttributes{ref: terra.ReferenceResource(apalrfl)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apalrfl *Resource) ImportState(state io.Reader) error {
	apalrfl.state = &azurermPaloAltoLocalRulestackFqdnListState{}
	if err := json.NewDecoder(state).Decode(apalrfl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apalrfl.Type(), apalrfl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apalrfl *Resource) State() (*azurermPaloAltoLocalRulestackFqdnListState, bool) {
	return apalrfl.state, apalrfl.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apalrfl *Resource) StateMust() *azurermPaloAltoLocalRulestackFqdnListState {
	if apalrfl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apalrfl.Type(), apalrfl.LocalName()))
	}
	return apalrfl.state
}

// Args contains the configurations for azurerm_palo_alto_local_rulestack_fqdn_list.
type Args struct {
	// AuditComment: string, optional
	AuditComment terra.StringValue `hcl:"audit_comment,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// FullyQualifiedDomainNames: list of string, required
	FullyQualifiedDomainNames terra.ListValue[terra.StringValue] `hcl:"fully_qualified_domain_names,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RulestackId: string, required
	RulestackId terra.StringValue `hcl:"rulestack_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPaloAltoLocalRulestackFqdnListAttributes struct {
	ref terra.Reference
}

// AuditComment returns a reference to field audit_comment of azurerm_palo_alto_local_rulestack_fqdn_list.
func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) AuditComment() terra.StringValue {
	return terra.ReferenceAsString(apalrfl.ref.Append("audit_comment"))
}

// Description returns a reference to field description of azurerm_palo_alto_local_rulestack_fqdn_list.
func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(apalrfl.ref.Append("description"))
}

// FullyQualifiedDomainNames returns a reference to field fully_qualified_domain_names of azurerm_palo_alto_local_rulestack_fqdn_list.
func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) FullyQualifiedDomainNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](apalrfl.ref.Append("fully_qualified_domain_names"))
}

// Id returns a reference to field id of azurerm_palo_alto_local_rulestack_fqdn_list.
func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apalrfl.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_palo_alto_local_rulestack_fqdn_list.
func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apalrfl.ref.Append("name"))
}

// RulestackId returns a reference to field rulestack_id of azurerm_palo_alto_local_rulestack_fqdn_list.
func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) RulestackId() terra.StringValue {
	return terra.ReferenceAsString(apalrfl.ref.Append("rulestack_id"))
}

func (apalrfl azurermPaloAltoLocalRulestackFqdnListAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apalrfl.ref.Append("timeouts"))
}

type azurermPaloAltoLocalRulestackFqdnListState struct {
	AuditComment              string         `json:"audit_comment"`
	Description               string         `json:"description"`
	FullyQualifiedDomainNames []string       `json:"fully_qualified_domain_names"`
	Id                        string         `json:"id"`
	Name                      string         `json:"name"`
	RulestackId               string         `json:"rulestack_id"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
