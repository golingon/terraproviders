// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iot_time_series_insights_access_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iot_time_series_insights_access_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIotTimeSeriesInsightsAccessPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aitsiap *Resource) Type() string {
	return "azurerm_iot_time_series_insights_access_policy"
}

// LocalName returns the local name for [Resource].
func (aitsiap *Resource) LocalName() string {
	return aitsiap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aitsiap *Resource) Configuration() interface{} {
	return aitsiap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aitsiap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aitsiap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aitsiap *Resource) Dependencies() terra.Dependencies {
	return aitsiap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aitsiap *Resource) LifecycleManagement() *terra.Lifecycle {
	return aitsiap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aitsiap *Resource) Attributes() azurermIotTimeSeriesInsightsAccessPolicyAttributes {
	return azurermIotTimeSeriesInsightsAccessPolicyAttributes{ref: terra.ReferenceResource(aitsiap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aitsiap *Resource) ImportState(state io.Reader) error {
	aitsiap.state = &azurermIotTimeSeriesInsightsAccessPolicyState{}
	if err := json.NewDecoder(state).Decode(aitsiap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aitsiap.Type(), aitsiap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aitsiap *Resource) State() (*azurermIotTimeSeriesInsightsAccessPolicyState, bool) {
	return aitsiap.state, aitsiap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aitsiap *Resource) StateMust() *azurermIotTimeSeriesInsightsAccessPolicyState {
	if aitsiap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aitsiap.Type(), aitsiap.LocalName()))
	}
	return aitsiap.state
}

// Args contains the configurations for azurerm_iot_time_series_insights_access_policy.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrincipalObjectId: string, required
	PrincipalObjectId terra.StringValue `hcl:"principal_object_id,attr" validate:"required"`
	// Roles: set of string, required
	Roles terra.SetValue[terra.StringValue] `hcl:"roles,attr" validate:"required"`
	// TimeSeriesInsightsEnvironmentId: string, required
	TimeSeriesInsightsEnvironmentId terra.StringValue `hcl:"time_series_insights_environment_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIotTimeSeriesInsightsAccessPolicyAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of azurerm_iot_time_series_insights_access_policy.
func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aitsiap.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_iot_time_series_insights_access_policy.
func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aitsiap.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_iot_time_series_insights_access_policy.
func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aitsiap.ref.Append("name"))
}

// PrincipalObjectId returns a reference to field principal_object_id of azurerm_iot_time_series_insights_access_policy.
func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) PrincipalObjectId() terra.StringValue {
	return terra.ReferenceAsString(aitsiap.ref.Append("principal_object_id"))
}

// Roles returns a reference to field roles of azurerm_iot_time_series_insights_access_policy.
func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) Roles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aitsiap.ref.Append("roles"))
}

// TimeSeriesInsightsEnvironmentId returns a reference to field time_series_insights_environment_id of azurerm_iot_time_series_insights_access_policy.
func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) TimeSeriesInsightsEnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(aitsiap.ref.Append("time_series_insights_environment_id"))
}

func (aitsiap azurermIotTimeSeriesInsightsAccessPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aitsiap.ref.Append("timeouts"))
}

type azurermIotTimeSeriesInsightsAccessPolicyState struct {
	Description                     string         `json:"description"`
	Id                              string         `json:"id"`
	Name                            string         `json:"name"`
	PrincipalObjectId               string         `json:"principal_object_id"`
	Roles                           []string       `json:"roles"`
	TimeSeriesInsightsEnvironmentId string         `json:"time_series_insights_environment_id"`
	Timeouts                        *TimeoutsState `json:"timeouts"`
}
