// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_named_value

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_named_value.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementNamedValueState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamnv *Resource) Type() string {
	return "azurerm_api_management_named_value"
}

// LocalName returns the local name for [Resource].
func (aamnv *Resource) LocalName() string {
	return aamnv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamnv *Resource) Configuration() interface{} {
	return aamnv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamnv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamnv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamnv *Resource) Dependencies() terra.Dependencies {
	return aamnv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamnv *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamnv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamnv *Resource) Attributes() azurermApiManagementNamedValueAttributes {
	return azurermApiManagementNamedValueAttributes{ref: terra.ReferenceResource(aamnv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamnv *Resource) ImportState(state io.Reader) error {
	aamnv.state = &azurermApiManagementNamedValueState{}
	if err := json.NewDecoder(state).Decode(aamnv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamnv.Type(), aamnv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamnv *Resource) State() (*azurermApiManagementNamedValueState, bool) {
	return aamnv.state, aamnv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamnv *Resource) StateMust() *azurermApiManagementNamedValueState {
	if aamnv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamnv.Type(), aamnv.LocalName()))
	}
	return aamnv.state
}

// Args contains the configurations for azurerm_api_management_named_value.
type Args struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Secret: bool, optional
	Secret terra.BoolValue `hcl:"secret,attr"`
	// Tags: list of string, optional
	Tags terra.ListValue[terra.StringValue] `hcl:"tags,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// ValueFromKeyVault: optional
	ValueFromKeyVault *ValueFromKeyVault `hcl:"value_from_key_vault,block"`
}

type azurermApiManagementNamedValueAttributes struct {
	ref terra.Reference
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aamnv.ref.Append("api_management_name"))
}

// DisplayName returns a reference to field display_name of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aamnv.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamnv.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aamnv.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aamnv.ref.Append("resource_group_name"))
}

// Secret returns a reference to field secret of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) Secret() terra.BoolValue {
	return terra.ReferenceAsBool(aamnv.ref.Append("secret"))
}

// Tags returns a reference to field tags of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aamnv.ref.Append("tags"))
}

// Value returns a reference to field value of azurerm_api_management_named_value.
func (aamnv azurermApiManagementNamedValueAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aamnv.ref.Append("value"))
}

func (aamnv azurermApiManagementNamedValueAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamnv.ref.Append("timeouts"))
}

func (aamnv azurermApiManagementNamedValueAttributes) ValueFromKeyVault() terra.ListValue[ValueFromKeyVaultAttributes] {
	return terra.ReferenceAsList[ValueFromKeyVaultAttributes](aamnv.ref.Append("value_from_key_vault"))
}

type azurermApiManagementNamedValueState struct {
	ApiManagementName string                   `json:"api_management_name"`
	DisplayName       string                   `json:"display_name"`
	Id                string                   `json:"id"`
	Name              string                   `json:"name"`
	ResourceGroupName string                   `json:"resource_group_name"`
	Secret            bool                     `json:"secret"`
	Tags              []string                 `json:"tags"`
	Value             string                   `json:"value"`
	Timeouts          *TimeoutsState           `json:"timeouts"`
	ValueFromKeyVault []ValueFromKeyVaultState `json:"value_from_key_vault"`
}
