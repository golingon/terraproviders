// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_network_interface_nat_rule_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_network_interface_nat_rule_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermNetworkInterfaceNatRuleAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aninra *Resource) Type() string {
	return "azurerm_network_interface_nat_rule_association"
}

// LocalName returns the local name for [Resource].
func (aninra *Resource) LocalName() string {
	return aninra.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aninra *Resource) Configuration() interface{} {
	return aninra.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aninra *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aninra)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aninra *Resource) Dependencies() terra.Dependencies {
	return aninra.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aninra *Resource) LifecycleManagement() *terra.Lifecycle {
	return aninra.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aninra *Resource) Attributes() azurermNetworkInterfaceNatRuleAssociationAttributes {
	return azurermNetworkInterfaceNatRuleAssociationAttributes{ref: terra.ReferenceResource(aninra)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aninra *Resource) ImportState(state io.Reader) error {
	aninra.state = &azurermNetworkInterfaceNatRuleAssociationState{}
	if err := json.NewDecoder(state).Decode(aninra.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aninra.Type(), aninra.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aninra *Resource) State() (*azurermNetworkInterfaceNatRuleAssociationState, bool) {
	return aninra.state, aninra.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aninra *Resource) StateMust() *azurermNetworkInterfaceNatRuleAssociationState {
	if aninra.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aninra.Type(), aninra.LocalName()))
	}
	return aninra.state
}

// Args contains the configurations for azurerm_network_interface_nat_rule_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpConfigurationName: string, required
	IpConfigurationName terra.StringValue `hcl:"ip_configuration_name,attr" validate:"required"`
	// NatRuleId: string, required
	NatRuleId terra.StringValue `hcl:"nat_rule_id,attr" validate:"required"`
	// NetworkInterfaceId: string, required
	NetworkInterfaceId terra.StringValue `hcl:"network_interface_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermNetworkInterfaceNatRuleAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_network_interface_nat_rule_association.
func (aninra azurermNetworkInterfaceNatRuleAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aninra.ref.Append("id"))
}

// IpConfigurationName returns a reference to field ip_configuration_name of azurerm_network_interface_nat_rule_association.
func (aninra azurermNetworkInterfaceNatRuleAssociationAttributes) IpConfigurationName() terra.StringValue {
	return terra.ReferenceAsString(aninra.ref.Append("ip_configuration_name"))
}

// NatRuleId returns a reference to field nat_rule_id of azurerm_network_interface_nat_rule_association.
func (aninra azurermNetworkInterfaceNatRuleAssociationAttributes) NatRuleId() terra.StringValue {
	return terra.ReferenceAsString(aninra.ref.Append("nat_rule_id"))
}

// NetworkInterfaceId returns a reference to field network_interface_id of azurerm_network_interface_nat_rule_association.
func (aninra azurermNetworkInterfaceNatRuleAssociationAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(aninra.ref.Append("network_interface_id"))
}

func (aninra azurermNetworkInterfaceNatRuleAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aninra.ref.Append("timeouts"))
}

type azurermNetworkInterfaceNatRuleAssociationState struct {
	Id                  string         `json:"id"`
	IpConfigurationName string         `json:"ip_configuration_name"`
	NatRuleId           string         `json:"nat_rule_id"`
	NetworkInterfaceId  string         `json:"network_interface_id"`
	Timeouts            *TimeoutsState `json:"timeouts"`
}
