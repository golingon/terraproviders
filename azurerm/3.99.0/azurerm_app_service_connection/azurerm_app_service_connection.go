// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_service_connection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_service_connection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppServiceConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasc *Resource) Type() string {
	return "azurerm_app_service_connection"
}

// LocalName returns the local name for [Resource].
func (aasc *Resource) LocalName() string {
	return aasc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasc *Resource) Configuration() interface{} {
	return aasc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasc *Resource) Dependencies() terra.Dependencies {
	return aasc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasc *Resource) Attributes() azurermAppServiceConnectionAttributes {
	return azurermAppServiceConnectionAttributes{ref: terra.ReferenceResource(aasc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasc *Resource) ImportState(state io.Reader) error {
	aasc.state = &azurermAppServiceConnectionState{}
	if err := json.NewDecoder(state).Decode(aasc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasc.Type(), aasc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasc *Resource) State() (*azurermAppServiceConnectionState, bool) {
	return aasc.state, aasc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasc *Resource) StateMust() *azurermAppServiceConnectionState {
	if aasc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasc.Type(), aasc.LocalName()))
	}
	return aasc.state
}

// Args contains the configurations for azurerm_app_service_connection.
type Args struct {
	// AppServiceId: string, required
	AppServiceId terra.StringValue `hcl:"app_service_id,attr" validate:"required"`
	// ClientType: string, optional
	ClientType terra.StringValue `hcl:"client_type,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// VnetSolution: string, optional
	VnetSolution terra.StringValue `hcl:"vnet_solution,attr"`
	// Authentication: required
	Authentication *Authentication `hcl:"authentication,block" validate:"required"`
	// SecretStore: optional
	SecretStore *SecretStore `hcl:"secret_store,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppServiceConnectionAttributes struct {
	ref terra.Reference
}

// AppServiceId returns a reference to field app_service_id of azurerm_app_service_connection.
func (aasc azurermAppServiceConnectionAttributes) AppServiceId() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("app_service_id"))
}

// ClientType returns a reference to field client_type of azurerm_app_service_connection.
func (aasc azurermAppServiceConnectionAttributes) ClientType() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("client_type"))
}

// Id returns a reference to field id of azurerm_app_service_connection.
func (aasc azurermAppServiceConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_app_service_connection.
func (aasc azurermAppServiceConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("name"))
}

// TargetResourceId returns a reference to field target_resource_id of azurerm_app_service_connection.
func (aasc azurermAppServiceConnectionAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("target_resource_id"))
}

// VnetSolution returns a reference to field vnet_solution of azurerm_app_service_connection.
func (aasc azurermAppServiceConnectionAttributes) VnetSolution() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("vnet_solution"))
}

func (aasc azurermAppServiceConnectionAttributes) Authentication() terra.ListValue[AuthenticationAttributes] {
	return terra.ReferenceAsList[AuthenticationAttributes](aasc.ref.Append("authentication"))
}

func (aasc azurermAppServiceConnectionAttributes) SecretStore() terra.ListValue[SecretStoreAttributes] {
	return terra.ReferenceAsList[SecretStoreAttributes](aasc.ref.Append("secret_store"))
}

func (aasc azurermAppServiceConnectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aasc.ref.Append("timeouts"))
}

type azurermAppServiceConnectionState struct {
	AppServiceId     string                `json:"app_service_id"`
	ClientType       string                `json:"client_type"`
	Id               string                `json:"id"`
	Name             string                `json:"name"`
	TargetResourceId string                `json:"target_resource_id"`
	VnetSolution     string                `json:"vnet_solution"`
	Authentication   []AuthenticationState `json:"authentication"`
	SecretStore      []SecretStoreState    `json:"secret_store"`
	Timeouts         *TimeoutsState        `json:"timeouts"`
}
