// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_service_managed_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_service_managed_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppServiceManagedCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasmc *Resource) Type() string {
	return "azurerm_app_service_managed_certificate"
}

// LocalName returns the local name for [Resource].
func (aasmc *Resource) LocalName() string {
	return aasmc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasmc *Resource) Configuration() interface{} {
	return aasmc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasmc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasmc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasmc *Resource) Dependencies() terra.Dependencies {
	return aasmc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasmc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasmc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasmc *Resource) Attributes() azurermAppServiceManagedCertificateAttributes {
	return azurermAppServiceManagedCertificateAttributes{ref: terra.ReferenceResource(aasmc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasmc *Resource) ImportState(state io.Reader) error {
	aasmc.state = &azurermAppServiceManagedCertificateState{}
	if err := json.NewDecoder(state).Decode(aasmc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasmc.Type(), aasmc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasmc *Resource) State() (*azurermAppServiceManagedCertificateState, bool) {
	return aasmc.state, aasmc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasmc *Resource) StateMust() *azurermAppServiceManagedCertificateState {
	if aasmc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasmc.Type(), aasmc.LocalName()))
	}
	return aasmc.state
}

// Args contains the configurations for azurerm_app_service_managed_certificate.
type Args struct {
	// CustomHostnameBindingId: string, required
	CustomHostnameBindingId terra.StringValue `hcl:"custom_hostname_binding_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppServiceManagedCertificateAttributes struct {
	ref terra.Reference
}

// CanonicalName returns a reference to field canonical_name of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) CanonicalName() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("canonical_name"))
}

// CustomHostnameBindingId returns a reference to field custom_hostname_binding_id of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) CustomHostnameBindingId() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("custom_hostname_binding_id"))
}

// ExpirationDate returns a reference to field expiration_date of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) ExpirationDate() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("expiration_date"))
}

// FriendlyName returns a reference to field friendly_name of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) FriendlyName() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("friendly_name"))
}

// HostNames returns a reference to field host_names of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) HostNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aasmc.ref.Append("host_names"))
}

// Id returns a reference to field id of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("id"))
}

// IssueDate returns a reference to field issue_date of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) IssueDate() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("issue_date"))
}

// Issuer returns a reference to field issuer of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("issuer"))
}

// SubjectName returns a reference to field subject_name of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) SubjectName() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("subject_name"))
}

// Tags returns a reference to field tags of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aasmc.ref.Append("tags"))
}

// Thumbprint returns a reference to field thumbprint of azurerm_app_service_managed_certificate.
func (aasmc azurermAppServiceManagedCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(aasmc.ref.Append("thumbprint"))
}

func (aasmc azurermAppServiceManagedCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aasmc.ref.Append("timeouts"))
}

type azurermAppServiceManagedCertificateState struct {
	CanonicalName           string            `json:"canonical_name"`
	CustomHostnameBindingId string            `json:"custom_hostname_binding_id"`
	ExpirationDate          string            `json:"expiration_date"`
	FriendlyName            string            `json:"friendly_name"`
	HostNames               []string          `json:"host_names"`
	Id                      string            `json:"id"`
	IssueDate               string            `json:"issue_date"`
	Issuer                  string            `json:"issuer"`
	SubjectName             string            `json:"subject_name"`
	Tags                    map[string]string `json:"tags"`
	Thumbprint              string            `json:"thumbprint"`
	Timeouts                *TimeoutsState    `json:"timeouts"`
}
