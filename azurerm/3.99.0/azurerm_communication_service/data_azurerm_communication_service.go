// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_communication_service

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_communication_service.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acs *DataSource) DataSource() string {
	return "azurerm_communication_service"
}

// LocalName returns the local name for [DataSource].
func (acs *DataSource) LocalName() string {
	return acs.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acs *DataSource) Configuration() interface{} {
	return acs.Args
}

// Attributes returns the attributes for [DataSource].
func (acs *DataSource) Attributes() dataAzurermCommunicationServiceAttributes {
	return dataAzurermCommunicationServiceAttributes{ref: terra.ReferenceDataSource(acs)}
}

// DataArgs contains the configurations for azurerm_communication_service.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermCommunicationServiceAttributes struct {
	ref terra.Reference
}

// DataLocation returns a reference to field data_location of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) DataLocation() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("data_location"))
}

// Id returns a reference to field id of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("name"))
}

// PrimaryConnectionString returns a reference to field primary_connection_string of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("primary_connection_string"))
}

// PrimaryKey returns a reference to field primary_key of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("primary_key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("resource_group_name"))
}

// SecondaryConnectionString returns a reference to field secondary_connection_string of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("secondary_connection_string"))
}

// SecondaryKey returns a reference to field secondary_key of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceAsString(acs.ref.Append("secondary_key"))
}

// Tags returns a reference to field tags of azurerm_communication_service.
func (acs dataAzurermCommunicationServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acs.ref.Append("tags"))
}

func (acs dataAzurermCommunicationServiceAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](acs.ref.Append("timeouts"))
}
