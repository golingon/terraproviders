// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_scheduled_query_rules_log

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataCriteriaAttributes struct {
	ref terra.Reference
}

func (c DataCriteriaAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataCriteriaAttributes) InternalWithRef(ref terra.Reference) DataCriteriaAttributes {
	return DataCriteriaAttributes{ref: ref}
}

func (c DataCriteriaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataCriteriaAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("metric_name"))
}

func (c DataCriteriaAttributes) Dimension() terra.SetValue[DataCriteriaDimensionAttributes] {
	return terra.ReferenceAsSet[DataCriteriaDimensionAttributes](c.ref.Append("dimension"))
}

type DataCriteriaDimensionAttributes struct {
	ref terra.Reference
}

func (d DataCriteriaDimensionAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataCriteriaDimensionAttributes) InternalWithRef(ref terra.Reference) DataCriteriaDimensionAttributes {
	return DataCriteriaDimensionAttributes{ref: ref}
}

func (d DataCriteriaDimensionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataCriteriaDimensionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d DataCriteriaDimensionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("operator"))
}

func (d DataCriteriaDimensionAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](d.ref.Append("values"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataCriteriaState struct {
	MetricName string                       `json:"metric_name"`
	Dimension  []DataCriteriaDimensionState `json:"dimension"`
}

type DataCriteriaDimensionState struct {
	Name     string   `json:"name"`
	Operator string   `json:"operator"`
	Values   []string `json:"values"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
