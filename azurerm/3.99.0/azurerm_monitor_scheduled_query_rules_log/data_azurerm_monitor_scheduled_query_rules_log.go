// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_scheduled_query_rules_log

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_monitor_scheduled_query_rules_log.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (amsqrl *DataSource) DataSource() string {
	return "azurerm_monitor_scheduled_query_rules_log"
}

// LocalName returns the local name for [DataSource].
func (amsqrl *DataSource) LocalName() string {
	return amsqrl.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (amsqrl *DataSource) Configuration() interface{} {
	return amsqrl.Args
}

// Attributes returns the attributes for [DataSource].
func (amsqrl *DataSource) Attributes() dataAzurermMonitorScheduledQueryRulesLogAttributes {
	return dataAzurermMonitorScheduledQueryRulesLogAttributes{ref: terra.ReferenceDataSource(amsqrl)}
}

// DataArgs contains the configurations for azurerm_monitor_scheduled_query_rules_log.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermMonitorScheduledQueryRulesLogAttributes struct {
	ref terra.Reference
}

// AuthorizedResourceIds returns a reference to field authorized_resource_ids of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) AuthorizedResourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amsqrl.ref.Append("authorized_resource_ids"))
}

// DataSourceId returns a reference to field data_source_id of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) DataSourceId() terra.StringValue {
	return terra.ReferenceAsString(amsqrl.ref.Append("data_source_id"))
}

// Description returns a reference to field description of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(amsqrl.ref.Append("description"))
}

// Enabled returns a reference to field enabled of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(amsqrl.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amsqrl.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amsqrl.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amsqrl.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(amsqrl.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_monitor_scheduled_query_rules_log.
func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amsqrl.ref.Append("tags"))
}

func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Criteria() terra.SetValue[DataCriteriaAttributes] {
	return terra.ReferenceAsSet[DataCriteriaAttributes](amsqrl.ref.Append("criteria"))
}

func (amsqrl dataAzurermMonitorScheduledQueryRulesLogAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](amsqrl.ref.Append("timeouts"))
}
