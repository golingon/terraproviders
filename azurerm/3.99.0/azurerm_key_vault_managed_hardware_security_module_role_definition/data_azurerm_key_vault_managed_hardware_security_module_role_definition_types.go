// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_key_vault_managed_hardware_security_module_role_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataPermissionAttributes struct {
	ref terra.Reference
}

func (p DataPermissionAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataPermissionAttributes) InternalWithRef(ref terra.Reference) DataPermissionAttributes {
	return DataPermissionAttributes{ref: ref}
}

func (p DataPermissionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataPermissionAttributes) Actions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](p.ref.Append("actions"))
}

func (p DataPermissionAttributes) DataActions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](p.ref.Append("data_actions"))
}

func (p DataPermissionAttributes) NotActions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](p.ref.Append("not_actions"))
}

func (p DataPermissionAttributes) NotDataActions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](p.ref.Append("not_data_actions"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataPermissionState struct {
	Actions        []string `json:"actions"`
	DataActions    []string `json:"data_actions"`
	NotActions     []string `json:"not_actions"`
	NotDataActions []string `json:"not_data_actions"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
