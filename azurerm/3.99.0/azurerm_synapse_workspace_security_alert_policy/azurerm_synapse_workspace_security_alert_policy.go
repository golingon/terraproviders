// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_synapse_workspace_security_alert_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_synapse_workspace_security_alert_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSynapseWorkspaceSecurityAlertPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aswsap *Resource) Type() string {
	return "azurerm_synapse_workspace_security_alert_policy"
}

// LocalName returns the local name for [Resource].
func (aswsap *Resource) LocalName() string {
	return aswsap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aswsap *Resource) Configuration() interface{} {
	return aswsap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aswsap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aswsap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aswsap *Resource) Dependencies() terra.Dependencies {
	return aswsap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aswsap *Resource) LifecycleManagement() *terra.Lifecycle {
	return aswsap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aswsap *Resource) Attributes() azurermSynapseWorkspaceSecurityAlertPolicyAttributes {
	return azurermSynapseWorkspaceSecurityAlertPolicyAttributes{ref: terra.ReferenceResource(aswsap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aswsap *Resource) ImportState(state io.Reader) error {
	aswsap.state = &azurermSynapseWorkspaceSecurityAlertPolicyState{}
	if err := json.NewDecoder(state).Decode(aswsap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aswsap.Type(), aswsap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aswsap *Resource) State() (*azurermSynapseWorkspaceSecurityAlertPolicyState, bool) {
	return aswsap.state, aswsap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aswsap *Resource) StateMust() *azurermSynapseWorkspaceSecurityAlertPolicyState {
	if aswsap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aswsap.Type(), aswsap.LocalName()))
	}
	return aswsap.state
}

// Args contains the configurations for azurerm_synapse_workspace_security_alert_policy.
type Args struct {
	// DisabledAlerts: set of string, optional
	DisabledAlerts terra.SetValue[terra.StringValue] `hcl:"disabled_alerts,attr"`
	// EmailAccountAdminsEnabled: bool, optional
	EmailAccountAdminsEnabled terra.BoolValue `hcl:"email_account_admins_enabled,attr"`
	// EmailAddresses: set of string, optional
	EmailAddresses terra.SetValue[terra.StringValue] `hcl:"email_addresses,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyState: string, required
	PolicyState terra.StringValue `hcl:"policy_state,attr" validate:"required"`
	// RetentionDays: number, optional
	RetentionDays terra.NumberValue `hcl:"retention_days,attr"`
	// StorageAccountAccessKey: string, optional
	StorageAccountAccessKey terra.StringValue `hcl:"storage_account_access_key,attr"`
	// StorageEndpoint: string, optional
	StorageEndpoint terra.StringValue `hcl:"storage_endpoint,attr"`
	// SynapseWorkspaceId: string, required
	SynapseWorkspaceId terra.StringValue `hcl:"synapse_workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSynapseWorkspaceSecurityAlertPolicyAttributes struct {
	ref terra.Reference
}

// DisabledAlerts returns a reference to field disabled_alerts of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) DisabledAlerts() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aswsap.ref.Append("disabled_alerts"))
}

// EmailAccountAdminsEnabled returns a reference to field email_account_admins_enabled of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) EmailAccountAdminsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aswsap.ref.Append("email_account_admins_enabled"))
}

// EmailAddresses returns a reference to field email_addresses of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) EmailAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aswsap.ref.Append("email_addresses"))
}

// Id returns a reference to field id of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aswsap.ref.Append("id"))
}

// PolicyState returns a reference to field policy_state of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) PolicyState() terra.StringValue {
	return terra.ReferenceAsString(aswsap.ref.Append("policy_state"))
}

// RetentionDays returns a reference to field retention_days of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) RetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(aswsap.ref.Append("retention_days"))
}

// StorageAccountAccessKey returns a reference to field storage_account_access_key of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(aswsap.ref.Append("storage_account_access_key"))
}

// StorageEndpoint returns a reference to field storage_endpoint of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) StorageEndpoint() terra.StringValue {
	return terra.ReferenceAsString(aswsap.ref.Append("storage_endpoint"))
}

// SynapseWorkspaceId returns a reference to field synapse_workspace_id of azurerm_synapse_workspace_security_alert_policy.
func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) SynapseWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(aswsap.ref.Append("synapse_workspace_id"))
}

func (aswsap azurermSynapseWorkspaceSecurityAlertPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aswsap.ref.Append("timeouts"))
}

type azurermSynapseWorkspaceSecurityAlertPolicyState struct {
	DisabledAlerts            []string       `json:"disabled_alerts"`
	EmailAccountAdminsEnabled bool           `json:"email_account_admins_enabled"`
	EmailAddresses            []string       `json:"email_addresses"`
	Id                        string         `json:"id"`
	PolicyState               string         `json:"policy_state"`
	RetentionDays             float64        `json:"retention_days"`
	StorageAccountAccessKey   string         `json:"storage_account_access_key"`
	StorageEndpoint           string         `json:"storage_endpoint"`
	SynapseWorkspaceId        string         `json:"synapse_workspace_id"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
