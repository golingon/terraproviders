// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_spring_cloud_app

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_spring_cloud_app.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (asca *DataSource) DataSource() string {
	return "azurerm_spring_cloud_app"
}

// LocalName returns the local name for [DataSource].
func (asca *DataSource) LocalName() string {
	return asca.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (asca *DataSource) Configuration() interface{} {
	return asca.Args
}

// Attributes returns the attributes for [DataSource].
func (asca *DataSource) Attributes() dataAzurermSpringCloudAppAttributes {
	return dataAzurermSpringCloudAppAttributes{ref: terra.ReferenceDataSource(asca)}
}

// DataArgs contains the configurations for azurerm_spring_cloud_app.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermSpringCloudAppAttributes struct {
	ref terra.Reference
}

// Fqdn returns a reference to field fqdn of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("fqdn"))
}

// HttpsOnly returns a reference to field https_only of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceAsBool(asca.ref.Append("https_only"))
}

// Id returns a reference to field id of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("id"))
}

// IsPublic returns a reference to field is_public of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) IsPublic() terra.BoolValue {
	return terra.ReferenceAsBool(asca.ref.Append("is_public"))
}

// Name returns a reference to field name of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("resource_group_name"))
}

// ServiceName returns a reference to field service_name of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("service_name"))
}

// TlsEnabled returns a reference to field tls_enabled of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) TlsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asca.ref.Append("tls_enabled"))
}

// Url returns a reference to field url of azurerm_spring_cloud_app.
func (asca dataAzurermSpringCloudAppAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(asca.ref.Append("url"))
}

func (asca dataAzurermSpringCloudAppAttributes) Identity() terra.ListValue[DataIdentityAttributes] {
	return terra.ReferenceAsList[DataIdentityAttributes](asca.ref.Append("identity"))
}

func (asca dataAzurermSpringCloudAppAttributes) PersistentDisk() terra.ListValue[DataPersistentDiskAttributes] {
	return terra.ReferenceAsList[DataPersistentDiskAttributes](asca.ref.Append("persistent_disk"))
}

func (asca dataAzurermSpringCloudAppAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](asca.ref.Append("timeouts"))
}
