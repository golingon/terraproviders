// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_frontdoor_custom_domain

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cdn_frontdoor_custom_domain.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCdnFrontdoorCustomDomainState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acfcd *Resource) Type() string {
	return "azurerm_cdn_frontdoor_custom_domain"
}

// LocalName returns the local name for [Resource].
func (acfcd *Resource) LocalName() string {
	return acfcd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acfcd *Resource) Configuration() interface{} {
	return acfcd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acfcd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acfcd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acfcd *Resource) Dependencies() terra.Dependencies {
	return acfcd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acfcd *Resource) LifecycleManagement() *terra.Lifecycle {
	return acfcd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acfcd *Resource) Attributes() azurermCdnFrontdoorCustomDomainAttributes {
	return azurermCdnFrontdoorCustomDomainAttributes{ref: terra.ReferenceResource(acfcd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acfcd *Resource) ImportState(state io.Reader) error {
	acfcd.state = &azurermCdnFrontdoorCustomDomainState{}
	if err := json.NewDecoder(state).Decode(acfcd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acfcd.Type(), acfcd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acfcd *Resource) State() (*azurermCdnFrontdoorCustomDomainState, bool) {
	return acfcd.state, acfcd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acfcd *Resource) StateMust() *azurermCdnFrontdoorCustomDomainState {
	if acfcd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acfcd.Type(), acfcd.LocalName()))
	}
	return acfcd.state
}

// Args contains the configurations for azurerm_cdn_frontdoor_custom_domain.
type Args struct {
	// CdnFrontdoorProfileId: string, required
	CdnFrontdoorProfileId terra.StringValue `hcl:"cdn_frontdoor_profile_id,attr" validate:"required"`
	// DnsZoneId: string, optional
	DnsZoneId terra.StringValue `hcl:"dns_zone_id,attr"`
	// HostName: string, required
	HostName terra.StringValue `hcl:"host_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// Tls: required
	Tls *Tls `hcl:"tls,block" validate:"required"`
}

type azurermCdnFrontdoorCustomDomainAttributes struct {
	ref terra.Reference
}

// CdnFrontdoorProfileId returns a reference to field cdn_frontdoor_profile_id of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) CdnFrontdoorProfileId() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("cdn_frontdoor_profile_id"))
}

// DnsZoneId returns a reference to field dns_zone_id of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) DnsZoneId() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("dns_zone_id"))
}

// ExpirationDate returns a reference to field expiration_date of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) ExpirationDate() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("expiration_date"))
}

// HostName returns a reference to field host_name of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) HostName() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("host_name"))
}

// Id returns a reference to field id of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("name"))
}

// ValidationToken returns a reference to field validation_token of azurerm_cdn_frontdoor_custom_domain.
func (acfcd azurermCdnFrontdoorCustomDomainAttributes) ValidationToken() terra.StringValue {
	return terra.ReferenceAsString(acfcd.ref.Append("validation_token"))
}

func (acfcd azurermCdnFrontdoorCustomDomainAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acfcd.ref.Append("timeouts"))
}

func (acfcd azurermCdnFrontdoorCustomDomainAttributes) Tls() terra.ListValue[TlsAttributes] {
	return terra.ReferenceAsList[TlsAttributes](acfcd.ref.Append("tls"))
}

type azurermCdnFrontdoorCustomDomainState struct {
	CdnFrontdoorProfileId string         `json:"cdn_frontdoor_profile_id"`
	DnsZoneId             string         `json:"dns_zone_id"`
	ExpirationDate        string         `json:"expiration_date"`
	HostName              string         `json:"host_name"`
	Id                    string         `json:"id"`
	Name                  string         `json:"name"`
	ValidationToken       string         `json:"validation_token"`
	Timeouts              *TimeoutsState `json:"timeouts"`
	Tls                   []TlsState     `json:"tls"`
}
