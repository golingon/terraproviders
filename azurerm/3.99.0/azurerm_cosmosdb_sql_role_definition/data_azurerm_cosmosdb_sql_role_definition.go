// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cosmosdb_sql_role_definition

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_cosmosdb_sql_role_definition.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (acsrd *DataSource) DataSource() string {
	return "azurerm_cosmosdb_sql_role_definition"
}

// LocalName returns the local name for [DataSource].
func (acsrd *DataSource) LocalName() string {
	return acsrd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (acsrd *DataSource) Configuration() interface{} {
	return acsrd.Args
}

// Attributes returns the attributes for [DataSource].
func (acsrd *DataSource) Attributes() dataAzurermCosmosdbSqlRoleDefinitionAttributes {
	return dataAzurermCosmosdbSqlRoleDefinitionAttributes{ref: terra.ReferenceDataSource(acsrd)}
}

// DataArgs contains the configurations for azurerm_cosmosdb_sql_role_definition.
type DataArgs struct {
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RoleDefinitionId: string, required
	RoleDefinitionId terra.StringValue `hcl:"role_definition_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermCosmosdbSqlRoleDefinitionAttributes struct {
	ref terra.Reference
}

// AccountName returns a reference to field account_name of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(acsrd.ref.Append("account_name"))
}

// AssignableScopes returns a reference to field assignable_scopes of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) AssignableScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acsrd.ref.Append("assignable_scopes"))
}

// Id returns a reference to field id of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acsrd.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acsrd.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(acsrd.ref.Append("resource_group_name"))
}

// RoleDefinitionId returns a reference to field role_definition_id of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) RoleDefinitionId() terra.StringValue {
	return terra.ReferenceAsString(acsrd.ref.Append("role_definition_id"))
}

// Type returns a reference to field type of azurerm_cosmosdb_sql_role_definition.
func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(acsrd.ref.Append("type"))
}

func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) Permissions() terra.SetValue[DataPermissionsAttributes] {
	return terra.ReferenceAsSet[DataPermissionsAttributes](acsrd.ref.Append("permissions"))
}

func (acsrd dataAzurermCosmosdbSqlRoleDefinitionAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](acsrd.ref.Append("timeouts"))
}
