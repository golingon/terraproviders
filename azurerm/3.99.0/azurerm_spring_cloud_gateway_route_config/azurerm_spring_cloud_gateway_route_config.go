// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_spring_cloud_gateway_route_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_spring_cloud_gateway_route_config.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSpringCloudGatewayRouteConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascgrc *Resource) Type() string {
	return "azurerm_spring_cloud_gateway_route_config"
}

// LocalName returns the local name for [Resource].
func (ascgrc *Resource) LocalName() string {
	return ascgrc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascgrc *Resource) Configuration() interface{} {
	return ascgrc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascgrc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascgrc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascgrc *Resource) Dependencies() terra.Dependencies {
	return ascgrc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascgrc *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascgrc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascgrc *Resource) Attributes() azurermSpringCloudGatewayRouteConfigAttributes {
	return azurermSpringCloudGatewayRouteConfigAttributes{ref: terra.ReferenceResource(ascgrc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascgrc *Resource) ImportState(state io.Reader) error {
	ascgrc.state = &azurermSpringCloudGatewayRouteConfigState{}
	if err := json.NewDecoder(state).Decode(ascgrc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascgrc.Type(), ascgrc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascgrc *Resource) State() (*azurermSpringCloudGatewayRouteConfigState, bool) {
	return ascgrc.state, ascgrc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascgrc *Resource) StateMust() *azurermSpringCloudGatewayRouteConfigState {
	if ascgrc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascgrc.Type(), ascgrc.LocalName()))
	}
	return ascgrc.state
}

// Args contains the configurations for azurerm_spring_cloud_gateway_route_config.
type Args struct {
	// Filters: set of string, optional
	Filters terra.SetValue[terra.StringValue] `hcl:"filters,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Predicates: set of string, optional
	Predicates terra.SetValue[terra.StringValue] `hcl:"predicates,attr"`
	// Protocol: string, optional
	Protocol terra.StringValue `hcl:"protocol,attr"`
	// SpringCloudAppId: string, optional
	SpringCloudAppId terra.StringValue `hcl:"spring_cloud_app_id,attr"`
	// SpringCloudGatewayId: string, required
	SpringCloudGatewayId terra.StringValue `hcl:"spring_cloud_gateway_id,attr" validate:"required"`
	// SsoValidationEnabled: bool, optional
	SsoValidationEnabled terra.BoolValue `hcl:"sso_validation_enabled,attr"`
	// OpenApi: optional
	OpenApi *OpenApi `hcl:"open_api,block"`
	// Route: min=0
	Route []Route `hcl:"route,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSpringCloudGatewayRouteConfigAttributes struct {
	ref terra.Reference
}

// Filters returns a reference to field filters of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Filters() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ascgrc.ref.Append("filters"))
}

// Id returns a reference to field id of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascgrc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ascgrc.ref.Append("name"))
}

// Predicates returns a reference to field predicates of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Predicates() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ascgrc.ref.Append("predicates"))
}

// Protocol returns a reference to field protocol of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ascgrc.ref.Append("protocol"))
}

// SpringCloudAppId returns a reference to field spring_cloud_app_id of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) SpringCloudAppId() terra.StringValue {
	return terra.ReferenceAsString(ascgrc.ref.Append("spring_cloud_app_id"))
}

// SpringCloudGatewayId returns a reference to field spring_cloud_gateway_id of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) SpringCloudGatewayId() terra.StringValue {
	return terra.ReferenceAsString(ascgrc.ref.Append("spring_cloud_gateway_id"))
}

// SsoValidationEnabled returns a reference to field sso_validation_enabled of azurerm_spring_cloud_gateway_route_config.
func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) SsoValidationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ascgrc.ref.Append("sso_validation_enabled"))
}

func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) OpenApi() terra.ListValue[OpenApiAttributes] {
	return terra.ReferenceAsList[OpenApiAttributes](ascgrc.ref.Append("open_api"))
}

func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Route() terra.SetValue[RouteAttributes] {
	return terra.ReferenceAsSet[RouteAttributes](ascgrc.ref.Append("route"))
}

func (ascgrc azurermSpringCloudGatewayRouteConfigAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascgrc.ref.Append("timeouts"))
}

type azurermSpringCloudGatewayRouteConfigState struct {
	Filters              []string       `json:"filters"`
	Id                   string         `json:"id"`
	Name                 string         `json:"name"`
	Predicates           []string       `json:"predicates"`
	Protocol             string         `json:"protocol"`
	SpringCloudAppId     string         `json:"spring_cloud_app_id"`
	SpringCloudGatewayId string         `json:"spring_cloud_gateway_id"`
	SsoValidationEnabled bool           `json:"sso_validation_enabled"`
	OpenApi              []OpenApiState `json:"open_api"`
	Route                []RouteState   `json:"route"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
