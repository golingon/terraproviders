// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_redis_enterprise_database

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_redis_enterprise_database.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ared *DataSource) DataSource() string {
	return "azurerm_redis_enterprise_database"
}

// LocalName returns the local name for [DataSource].
func (ared *DataSource) LocalName() string {
	return ared.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ared *DataSource) Configuration() interface{} {
	return ared.Args
}

// Attributes returns the attributes for [DataSource].
func (ared *DataSource) Attributes() dataAzurermRedisEnterpriseDatabaseAttributes {
	return dataAzurermRedisEnterpriseDatabaseAttributes{ref: terra.ReferenceDataSource(ared)}
}

// DataArgs contains the configurations for azurerm_redis_enterprise_database.
type DataArgs struct {
	// ClusterId: string, required
	ClusterId terra.StringValue `hcl:"cluster_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermRedisEnterpriseDatabaseAttributes struct {
	ref terra.Reference
}

// ClusterId returns a reference to field cluster_id of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) ClusterId() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("cluster_id"))
}

// Id returns a reference to field id of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("id"))
}

// LinkedDatabaseGroupNickname returns a reference to field linked_database_group_nickname of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) LinkedDatabaseGroupNickname() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("linked_database_group_nickname"))
}

// LinkedDatabaseId returns a reference to field linked_database_id of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) LinkedDatabaseId() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ared.ref.Append("linked_database_id"))
}

// Name returns a reference to field name of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("name"))
}

// PrimaryAccessKey returns a reference to field primary_access_key of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) PrimaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("primary_access_key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("resource_group_name"))
}

// SecondaryAccessKey returns a reference to field secondary_access_key of azurerm_redis_enterprise_database.
func (ared dataAzurermRedisEnterpriseDatabaseAttributes) SecondaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ared.ref.Append("secondary_access_key"))
}

func (ared dataAzurermRedisEnterpriseDatabaseAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ared.ref.Append("timeouts"))
}
