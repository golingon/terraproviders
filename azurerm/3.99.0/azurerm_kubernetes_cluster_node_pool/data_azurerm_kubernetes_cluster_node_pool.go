// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_kubernetes_cluster_node_pool

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_kubernetes_cluster_node_pool.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (akcnp *DataSource) DataSource() string {
	return "azurerm_kubernetes_cluster_node_pool"
}

// LocalName returns the local name for [DataSource].
func (akcnp *DataSource) LocalName() string {
	return akcnp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (akcnp *DataSource) Configuration() interface{} {
	return akcnp.Args
}

// Attributes returns the attributes for [DataSource].
func (akcnp *DataSource) Attributes() dataAzurermKubernetesClusterNodePoolAttributes {
	return dataAzurermKubernetesClusterNodePoolAttributes{ref: terra.ReferenceDataSource(akcnp)}
}

// DataArgs contains the configurations for azurerm_kubernetes_cluster_node_pool.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesClusterName: string, required
	KubernetesClusterName terra.StringValue `hcl:"kubernetes_cluster_name,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermKubernetesClusterNodePoolAttributes struct {
	ref terra.Reference
}

// EnableAutoScaling returns a reference to field enable_auto_scaling of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) EnableAutoScaling() terra.BoolValue {
	return terra.ReferenceAsBool(akcnp.ref.Append("enable_auto_scaling"))
}

// EnableNodePublicIp returns a reference to field enable_node_public_ip of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) EnableNodePublicIp() terra.BoolValue {
	return terra.ReferenceAsBool(akcnp.ref.Append("enable_node_public_ip"))
}

// EvictionPolicy returns a reference to field eviction_policy of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) EvictionPolicy() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("eviction_policy"))
}

// Id returns a reference to field id of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("id"))
}

// KubernetesClusterName returns a reference to field kubernetes_cluster_name of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) KubernetesClusterName() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("kubernetes_cluster_name"))
}

// MaxCount returns a reference to field max_count of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) MaxCount() terra.NumberValue {
	return terra.ReferenceAsNumber(akcnp.ref.Append("max_count"))
}

// MaxPods returns a reference to field max_pods of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) MaxPods() terra.NumberValue {
	return terra.ReferenceAsNumber(akcnp.ref.Append("max_pods"))
}

// MinCount returns a reference to field min_count of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) MinCount() terra.NumberValue {
	return terra.ReferenceAsNumber(akcnp.ref.Append("min_count"))
}

// Mode returns a reference to field mode of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("mode"))
}

// Name returns a reference to field name of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("name"))
}

// NodeCount returns a reference to field node_count of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) NodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(akcnp.ref.Append("node_count"))
}

// NodeLabels returns a reference to field node_labels of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) NodeLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](akcnp.ref.Append("node_labels"))
}

// NodePublicIpPrefixId returns a reference to field node_public_ip_prefix_id of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) NodePublicIpPrefixId() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("node_public_ip_prefix_id"))
}

// NodeTaints returns a reference to field node_taints of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) NodeTaints() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](akcnp.ref.Append("node_taints"))
}

// OrchestratorVersion returns a reference to field orchestrator_version of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) OrchestratorVersion() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("orchestrator_version"))
}

// OsDiskSizeGb returns a reference to field os_disk_size_gb of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) OsDiskSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(akcnp.ref.Append("os_disk_size_gb"))
}

// OsDiskType returns a reference to field os_disk_type of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) OsDiskType() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("os_disk_type"))
}

// OsType returns a reference to field os_type of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) OsType() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("os_type"))
}

// Priority returns a reference to field priority of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Priority() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("priority"))
}

// ProximityPlacementGroupId returns a reference to field proximity_placement_group_id of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) ProximityPlacementGroupId() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("proximity_placement_group_id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("resource_group_name"))
}

// SpotMaxPrice returns a reference to field spot_max_price of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) SpotMaxPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(akcnp.ref.Append("spot_max_price"))
}

// Tags returns a reference to field tags of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](akcnp.ref.Append("tags"))
}

// VmSize returns a reference to field vm_size of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) VmSize() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("vm_size"))
}

// VnetSubnetId returns a reference to field vnet_subnet_id of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) VnetSubnetId() terra.StringValue {
	return terra.ReferenceAsString(akcnp.ref.Append("vnet_subnet_id"))
}

// Zones returns a reference to field zones of azurerm_kubernetes_cluster_node_pool.
func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Zones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](akcnp.ref.Append("zones"))
}

func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) UpgradeSettings() terra.ListValue[DataUpgradeSettingsAttributes] {
	return terra.ReferenceAsList[DataUpgradeSettingsAttributes](akcnp.ref.Append("upgrade_settings"))
}

func (akcnp dataAzurermKubernetesClusterNodePoolAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](akcnp.ref.Append("timeouts"))
}
