// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_redis_cache_access_policy_assignment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_redis_cache_access_policy_assignment.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermRedisCacheAccessPolicyAssignmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (arcapa *Resource) Type() string {
	return "azurerm_redis_cache_access_policy_assignment"
}

// LocalName returns the local name for [Resource].
func (arcapa *Resource) LocalName() string {
	return arcapa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (arcapa *Resource) Configuration() interface{} {
	return arcapa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (arcapa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(arcapa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (arcapa *Resource) Dependencies() terra.Dependencies {
	return arcapa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (arcapa *Resource) LifecycleManagement() *terra.Lifecycle {
	return arcapa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (arcapa *Resource) Attributes() azurermRedisCacheAccessPolicyAssignmentAttributes {
	return azurermRedisCacheAccessPolicyAssignmentAttributes{ref: terra.ReferenceResource(arcapa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (arcapa *Resource) ImportState(state io.Reader) error {
	arcapa.state = &azurermRedisCacheAccessPolicyAssignmentState{}
	if err := json.NewDecoder(state).Decode(arcapa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arcapa.Type(), arcapa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (arcapa *Resource) State() (*azurermRedisCacheAccessPolicyAssignmentState, bool) {
	return arcapa.state, arcapa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (arcapa *Resource) StateMust() *azurermRedisCacheAccessPolicyAssignmentState {
	if arcapa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arcapa.Type(), arcapa.LocalName()))
	}
	return arcapa.state
}

// Args contains the configurations for azurerm_redis_cache_access_policy_assignment.
type Args struct {
	// AccessPolicyName: string, required
	AccessPolicyName terra.StringValue `hcl:"access_policy_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ObjectId: string, required
	ObjectId terra.StringValue `hcl:"object_id,attr" validate:"required"`
	// ObjectIdAlias: string, required
	ObjectIdAlias terra.StringValue `hcl:"object_id_alias,attr" validate:"required"`
	// RedisCacheId: string, required
	RedisCacheId terra.StringValue `hcl:"redis_cache_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermRedisCacheAccessPolicyAssignmentAttributes struct {
	ref terra.Reference
}

// AccessPolicyName returns a reference to field access_policy_name of azurerm_redis_cache_access_policy_assignment.
func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) AccessPolicyName() terra.StringValue {
	return terra.ReferenceAsString(arcapa.ref.Append("access_policy_name"))
}

// Id returns a reference to field id of azurerm_redis_cache_access_policy_assignment.
func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arcapa.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_redis_cache_access_policy_assignment.
func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arcapa.ref.Append("name"))
}

// ObjectId returns a reference to field object_id of azurerm_redis_cache_access_policy_assignment.
func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(arcapa.ref.Append("object_id"))
}

// ObjectIdAlias returns a reference to field object_id_alias of azurerm_redis_cache_access_policy_assignment.
func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) ObjectIdAlias() terra.StringValue {
	return terra.ReferenceAsString(arcapa.ref.Append("object_id_alias"))
}

// RedisCacheId returns a reference to field redis_cache_id of azurerm_redis_cache_access_policy_assignment.
func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) RedisCacheId() terra.StringValue {
	return terra.ReferenceAsString(arcapa.ref.Append("redis_cache_id"))
}

func (arcapa azurermRedisCacheAccessPolicyAssignmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](arcapa.ref.Append("timeouts"))
}

type azurermRedisCacheAccessPolicyAssignmentState struct {
	AccessPolicyName string         `json:"access_policy_name"`
	Id               string         `json:"id"`
	Name             string         `json:"name"`
	ObjectId         string         `json:"object_id"`
	ObjectIdAlias    string         `json:"object_id_alias"`
	RedisCacheId     string         `json:"redis_cache_id"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
