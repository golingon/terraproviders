// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_python3_package

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_python3_package.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationPython3PackageState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aapp *Resource) Type() string {
	return "azurerm_automation_python3_package"
}

// LocalName returns the local name for [Resource].
func (aapp *Resource) LocalName() string {
	return aapp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aapp *Resource) Configuration() interface{} {
	return aapp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aapp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aapp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aapp *Resource) Dependencies() terra.Dependencies {
	return aapp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aapp *Resource) LifecycleManagement() *terra.Lifecycle {
	return aapp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aapp *Resource) Attributes() azurermAutomationPython3PackageAttributes {
	return azurermAutomationPython3PackageAttributes{ref: terra.ReferenceResource(aapp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aapp *Resource) ImportState(state io.Reader) error {
	aapp.state = &azurermAutomationPython3PackageState{}
	if err := json.NewDecoder(state).Decode(aapp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aapp.Type(), aapp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aapp *Resource) State() (*azurermAutomationPython3PackageState, bool) {
	return aapp.state, aapp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aapp *Resource) StateMust() *azurermAutomationPython3PackageState {
	if aapp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aapp.Type(), aapp.LocalName()))
	}
	return aapp.state
}

// Args contains the configurations for azurerm_automation_python3_package.
type Args struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// ContentUri: string, required
	ContentUri terra.StringValue `hcl:"content_uri,attr" validate:"required"`
	// ContentVersion: string, optional
	ContentVersion terra.StringValue `hcl:"content_version,attr"`
	// HashAlgorithm: string, optional
	HashAlgorithm terra.StringValue `hcl:"hash_algorithm,attr"`
	// HashValue: string, optional
	HashValue terra.StringValue `hcl:"hash_value,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationPython3PackageAttributes struct {
	ref terra.Reference
}

// AutomationAccountName returns a reference to field automation_account_name of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("automation_account_name"))
}

// ContentUri returns a reference to field content_uri of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) ContentUri() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("content_uri"))
}

// ContentVersion returns a reference to field content_version of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) ContentVersion() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("content_version"))
}

// HashAlgorithm returns a reference to field hash_algorithm of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) HashAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("hash_algorithm"))
}

// HashValue returns a reference to field hash_value of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) HashValue() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("hash_value"))
}

// Id returns a reference to field id of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aapp.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_automation_python3_package.
func (aapp azurermAutomationPython3PackageAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aapp.ref.Append("tags"))
}

func (aapp azurermAutomationPython3PackageAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aapp.ref.Append("timeouts"))
}

type azurermAutomationPython3PackageState struct {
	AutomationAccountName string            `json:"automation_account_name"`
	ContentUri            string            `json:"content_uri"`
	ContentVersion        string            `json:"content_version"`
	HashAlgorithm         string            `json:"hash_algorithm"`
	HashValue             string            `json:"hash_value"`
	Id                    string            `json:"id"`
	Name                  string            `json:"name"`
	ResourceGroupName     string            `json:"resource_group_name"`
	Tags                  map[string]string `json:"tags"`
	Timeouts              *TimeoutsState    `json:"timeouts"`
}
