// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_spring_cloud_gateway

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_spring_cloud_gateway.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSpringCloudGatewayState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascg *Resource) Type() string {
	return "azurerm_spring_cloud_gateway"
}

// LocalName returns the local name for [Resource].
func (ascg *Resource) LocalName() string {
	return ascg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascg *Resource) Configuration() interface{} {
	return ascg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascg *Resource) Dependencies() terra.Dependencies {
	return ascg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascg *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascg *Resource) Attributes() azurermSpringCloudGatewayAttributes {
	return azurermSpringCloudGatewayAttributes{ref: terra.ReferenceResource(ascg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascg *Resource) ImportState(state io.Reader) error {
	ascg.state = &azurermSpringCloudGatewayState{}
	if err := json.NewDecoder(state).Decode(ascg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascg.Type(), ascg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascg *Resource) State() (*azurermSpringCloudGatewayState, bool) {
	return ascg.state, ascg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascg *Resource) StateMust() *azurermSpringCloudGatewayState {
	if ascg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascg.Type(), ascg.LocalName()))
	}
	return ascg.state
}

// Args contains the configurations for azurerm_spring_cloud_gateway.
type Args struct {
	// ApplicationPerformanceMonitoringIds: list of string, optional
	ApplicationPerformanceMonitoringIds terra.ListValue[terra.StringValue] `hcl:"application_performance_monitoring_ids,attr"`
	// ApplicationPerformanceMonitoringTypes: list of string, optional
	ApplicationPerformanceMonitoringTypes terra.ListValue[terra.StringValue] `hcl:"application_performance_monitoring_types,attr"`
	// EnvironmentVariables: map of string, optional
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// HttpsOnly: bool, optional
	HttpsOnly terra.BoolValue `hcl:"https_only,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceCount: number, optional
	InstanceCount terra.NumberValue `hcl:"instance_count,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// SensitiveEnvironmentVariables: map of string, optional
	SensitiveEnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"sensitive_environment_variables,attr"`
	// SpringCloudServiceId: string, required
	SpringCloudServiceId terra.StringValue `hcl:"spring_cloud_service_id,attr" validate:"required"`
	// ApiMetadata: optional
	ApiMetadata *ApiMetadata `hcl:"api_metadata,block"`
	// ClientAuthorization: optional
	ClientAuthorization *ClientAuthorization `hcl:"client_authorization,block"`
	// Cors: optional
	Cors *Cors `hcl:"cors,block"`
	// LocalResponseCachePerInstance: optional
	LocalResponseCachePerInstance *LocalResponseCachePerInstance `hcl:"local_response_cache_per_instance,block"`
	// LocalResponseCachePerRoute: optional
	LocalResponseCachePerRoute *LocalResponseCachePerRoute `hcl:"local_response_cache_per_route,block"`
	// Quota: optional
	Quota *Quota `hcl:"quota,block"`
	// Sso: optional
	Sso *Sso `hcl:"sso,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSpringCloudGatewayAttributes struct {
	ref terra.Reference
}

// ApplicationPerformanceMonitoringIds returns a reference to field application_performance_monitoring_ids of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) ApplicationPerformanceMonitoringIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ascg.ref.Append("application_performance_monitoring_ids"))
}

// ApplicationPerformanceMonitoringTypes returns a reference to field application_performance_monitoring_types of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) ApplicationPerformanceMonitoringTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ascg.ref.Append("application_performance_monitoring_types"))
}

// EnvironmentVariables returns a reference to field environment_variables of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascg.ref.Append("environment_variables"))
}

// HttpsOnly returns a reference to field https_only of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceAsBool(ascg.ref.Append("https_only"))
}

// Id returns a reference to field id of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascg.ref.Append("id"))
}

// InstanceCount returns a reference to field instance_count of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ascg.ref.Append("instance_count"))
}

// Name returns a reference to field name of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ascg.ref.Append("name"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ascg.ref.Append("public_network_access_enabled"))
}

// SensitiveEnvironmentVariables returns a reference to field sensitive_environment_variables of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) SensitiveEnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascg.ref.Append("sensitive_environment_variables"))
}

// SpringCloudServiceId returns a reference to field spring_cloud_service_id of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) SpringCloudServiceId() terra.StringValue {
	return terra.ReferenceAsString(ascg.ref.Append("spring_cloud_service_id"))
}

// Url returns a reference to field url of azurerm_spring_cloud_gateway.
func (ascg azurermSpringCloudGatewayAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(ascg.ref.Append("url"))
}

func (ascg azurermSpringCloudGatewayAttributes) ApiMetadata() terra.ListValue[ApiMetadataAttributes] {
	return terra.ReferenceAsList[ApiMetadataAttributes](ascg.ref.Append("api_metadata"))
}

func (ascg azurermSpringCloudGatewayAttributes) ClientAuthorization() terra.ListValue[ClientAuthorizationAttributes] {
	return terra.ReferenceAsList[ClientAuthorizationAttributes](ascg.ref.Append("client_authorization"))
}

func (ascg azurermSpringCloudGatewayAttributes) Cors() terra.ListValue[CorsAttributes] {
	return terra.ReferenceAsList[CorsAttributes](ascg.ref.Append("cors"))
}

func (ascg azurermSpringCloudGatewayAttributes) LocalResponseCachePerInstance() terra.ListValue[LocalResponseCachePerInstanceAttributes] {
	return terra.ReferenceAsList[LocalResponseCachePerInstanceAttributes](ascg.ref.Append("local_response_cache_per_instance"))
}

func (ascg azurermSpringCloudGatewayAttributes) LocalResponseCachePerRoute() terra.ListValue[LocalResponseCachePerRouteAttributes] {
	return terra.ReferenceAsList[LocalResponseCachePerRouteAttributes](ascg.ref.Append("local_response_cache_per_route"))
}

func (ascg azurermSpringCloudGatewayAttributes) Quota() terra.ListValue[QuotaAttributes] {
	return terra.ReferenceAsList[QuotaAttributes](ascg.ref.Append("quota"))
}

func (ascg azurermSpringCloudGatewayAttributes) Sso() terra.ListValue[SsoAttributes] {
	return terra.ReferenceAsList[SsoAttributes](ascg.ref.Append("sso"))
}

func (ascg azurermSpringCloudGatewayAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascg.ref.Append("timeouts"))
}

type azurermSpringCloudGatewayState struct {
	ApplicationPerformanceMonitoringIds   []string                             `json:"application_performance_monitoring_ids"`
	ApplicationPerformanceMonitoringTypes []string                             `json:"application_performance_monitoring_types"`
	EnvironmentVariables                  map[string]string                    `json:"environment_variables"`
	HttpsOnly                             bool                                 `json:"https_only"`
	Id                                    string                               `json:"id"`
	InstanceCount                         float64                              `json:"instance_count"`
	Name                                  string                               `json:"name"`
	PublicNetworkAccessEnabled            bool                                 `json:"public_network_access_enabled"`
	SensitiveEnvironmentVariables         map[string]string                    `json:"sensitive_environment_variables"`
	SpringCloudServiceId                  string                               `json:"spring_cloud_service_id"`
	Url                                   string                               `json:"url"`
	ApiMetadata                           []ApiMetadataState                   `json:"api_metadata"`
	ClientAuthorization                   []ClientAuthorizationState           `json:"client_authorization"`
	Cors                                  []CorsState                          `json:"cors"`
	LocalResponseCachePerInstance         []LocalResponseCachePerInstanceState `json:"local_response_cache_per_instance"`
	LocalResponseCachePerRoute            []LocalResponseCachePerRouteState    `json:"local_response_cache_per_route"`
	Quota                                 []QuotaState                         `json:"quota"`
	Sso                                   []SsoState                           `json:"sso"`
	Timeouts                              *TimeoutsState                       `json:"timeouts"`
}
