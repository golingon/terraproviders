// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_bot_channel_direct_line_speech

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_bot_channel_direct_line_speech.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermBotChannelDirectLineSpeechState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (abcdls *Resource) Type() string {
	return "azurerm_bot_channel_direct_line_speech"
}

// LocalName returns the local name for [Resource].
func (abcdls *Resource) LocalName() string {
	return abcdls.Name
}

// Configuration returns the configuration (args) for [Resource].
func (abcdls *Resource) Configuration() interface{} {
	return abcdls.Args
}

// DependOn is used for other resources to depend on [Resource].
func (abcdls *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(abcdls)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (abcdls *Resource) Dependencies() terra.Dependencies {
	return abcdls.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (abcdls *Resource) LifecycleManagement() *terra.Lifecycle {
	return abcdls.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (abcdls *Resource) Attributes() azurermBotChannelDirectLineSpeechAttributes {
	return azurermBotChannelDirectLineSpeechAttributes{ref: terra.ReferenceResource(abcdls)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (abcdls *Resource) ImportState(state io.Reader) error {
	abcdls.state = &azurermBotChannelDirectLineSpeechState{}
	if err := json.NewDecoder(state).Decode(abcdls.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", abcdls.Type(), abcdls.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (abcdls *Resource) State() (*azurermBotChannelDirectLineSpeechState, bool) {
	return abcdls.state, abcdls.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (abcdls *Resource) StateMust() *azurermBotChannelDirectLineSpeechState {
	if abcdls.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", abcdls.Type(), abcdls.LocalName()))
	}
	return abcdls.state
}

// Args contains the configurations for azurerm_bot_channel_direct_line_speech.
type Args struct {
	// BotName: string, required
	BotName terra.StringValue `hcl:"bot_name,attr" validate:"required"`
	// CognitiveAccountId: string, optional
	CognitiveAccountId terra.StringValue `hcl:"cognitive_account_id,attr"`
	// CognitiveServiceAccessKey: string, required
	CognitiveServiceAccessKey terra.StringValue `hcl:"cognitive_service_access_key,attr" validate:"required"`
	// CognitiveServiceLocation: string, required
	CognitiveServiceLocation terra.StringValue `hcl:"cognitive_service_location,attr" validate:"required"`
	// CustomSpeechModelId: string, optional
	CustomSpeechModelId terra.StringValue `hcl:"custom_speech_model_id,attr"`
	// CustomVoiceDeploymentId: string, optional
	CustomVoiceDeploymentId terra.StringValue `hcl:"custom_voice_deployment_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermBotChannelDirectLineSpeechAttributes struct {
	ref terra.Reference
}

// BotName returns a reference to field bot_name of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) BotName() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("bot_name"))
}

// CognitiveAccountId returns a reference to field cognitive_account_id of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) CognitiveAccountId() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("cognitive_account_id"))
}

// CognitiveServiceAccessKey returns a reference to field cognitive_service_access_key of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) CognitiveServiceAccessKey() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("cognitive_service_access_key"))
}

// CognitiveServiceLocation returns a reference to field cognitive_service_location of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) CognitiveServiceLocation() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("cognitive_service_location"))
}

// CustomSpeechModelId returns a reference to field custom_speech_model_id of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) CustomSpeechModelId() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("custom_speech_model_id"))
}

// CustomVoiceDeploymentId returns a reference to field custom_voice_deployment_id of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) CustomVoiceDeploymentId() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("custom_voice_deployment_id"))
}

// Id returns a reference to field id of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("location"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_bot_channel_direct_line_speech.
func (abcdls azurermBotChannelDirectLineSpeechAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(abcdls.ref.Append("resource_group_name"))
}

func (abcdls azurermBotChannelDirectLineSpeechAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](abcdls.ref.Append("timeouts"))
}

type azurermBotChannelDirectLineSpeechState struct {
	BotName                   string         `json:"bot_name"`
	CognitiveAccountId        string         `json:"cognitive_account_id"`
	CognitiveServiceAccessKey string         `json:"cognitive_service_access_key"`
	CognitiveServiceLocation  string         `json:"cognitive_service_location"`
	CustomSpeechModelId       string         `json:"custom_speech_model_id"`
	CustomVoiceDeploymentId   string         `json:"custom_voice_deployment_id"`
	Id                        string         `json:"id"`
	Location                  string         `json:"location"`
	ResourceGroupName         string         `json:"resource_group_name"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
