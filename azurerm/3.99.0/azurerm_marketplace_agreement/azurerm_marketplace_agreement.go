// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_marketplace_agreement

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_marketplace_agreement.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMarketplaceAgreementState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ama *Resource) Type() string {
	return "azurerm_marketplace_agreement"
}

// LocalName returns the local name for [Resource].
func (ama *Resource) LocalName() string {
	return ama.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ama *Resource) Configuration() interface{} {
	return ama.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ama *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ama)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ama *Resource) Dependencies() terra.Dependencies {
	return ama.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ama *Resource) LifecycleManagement() *terra.Lifecycle {
	return ama.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ama *Resource) Attributes() azurermMarketplaceAgreementAttributes {
	return azurermMarketplaceAgreementAttributes{ref: terra.ReferenceResource(ama)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ama *Resource) ImportState(state io.Reader) error {
	ama.state = &azurermMarketplaceAgreementState{}
	if err := json.NewDecoder(state).Decode(ama.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ama.Type(), ama.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ama *Resource) State() (*azurermMarketplaceAgreementState, bool) {
	return ama.state, ama.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ama *Resource) StateMust() *azurermMarketplaceAgreementState {
	if ama.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ama.Type(), ama.LocalName()))
	}
	return ama.state
}

// Args contains the configurations for azurerm_marketplace_agreement.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Plan: string, required
	Plan terra.StringValue `hcl:"plan,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMarketplaceAgreementAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_marketplace_agreement.
func (ama azurermMarketplaceAgreementAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("id"))
}

// LicenseTextLink returns a reference to field license_text_link of azurerm_marketplace_agreement.
func (ama azurermMarketplaceAgreementAttributes) LicenseTextLink() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("license_text_link"))
}

// Offer returns a reference to field offer of azurerm_marketplace_agreement.
func (ama azurermMarketplaceAgreementAttributes) Offer() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("offer"))
}

// Plan returns a reference to field plan of azurerm_marketplace_agreement.
func (ama azurermMarketplaceAgreementAttributes) Plan() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("plan"))
}

// PrivacyPolicyLink returns a reference to field privacy_policy_link of azurerm_marketplace_agreement.
func (ama azurermMarketplaceAgreementAttributes) PrivacyPolicyLink() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("privacy_policy_link"))
}

// Publisher returns a reference to field publisher of azurerm_marketplace_agreement.
func (ama azurermMarketplaceAgreementAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("publisher"))
}

func (ama azurermMarketplaceAgreementAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ama.ref.Append("timeouts"))
}

type azurermMarketplaceAgreementState struct {
	Id                string         `json:"id"`
	LicenseTextLink   string         `json:"license_text_link"`
	Offer             string         `json:"offer"`
	Plan              string         `json:"plan"`
	PrivacyPolicyLink string         `json:"privacy_policy_link"`
	Publisher         string         `json:"publisher"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
