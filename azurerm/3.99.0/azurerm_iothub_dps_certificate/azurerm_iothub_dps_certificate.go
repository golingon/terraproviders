// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iothub_dps_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iothub_dps_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIothubDpsCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aidc *Resource) Type() string {
	return "azurerm_iothub_dps_certificate"
}

// LocalName returns the local name for [Resource].
func (aidc *Resource) LocalName() string {
	return aidc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aidc *Resource) Configuration() interface{} {
	return aidc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aidc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aidc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aidc *Resource) Dependencies() terra.Dependencies {
	return aidc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aidc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aidc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aidc *Resource) Attributes() azurermIothubDpsCertificateAttributes {
	return azurermIothubDpsCertificateAttributes{ref: terra.ReferenceResource(aidc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aidc *Resource) ImportState(state io.Reader) error {
	aidc.state = &azurermIothubDpsCertificateState{}
	if err := json.NewDecoder(state).Decode(aidc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aidc.Type(), aidc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aidc *Resource) State() (*azurermIothubDpsCertificateState, bool) {
	return aidc.state, aidc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aidc *Resource) StateMust() *azurermIothubDpsCertificateState {
	if aidc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aidc.Type(), aidc.LocalName()))
	}
	return aidc.state
}

// Args contains the configurations for azurerm_iothub_dps_certificate.
type Args struct {
	// CertificateContent: string, required
	CertificateContent terra.StringValue `hcl:"certificate_content,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IotDpsName: string, required
	IotDpsName terra.StringValue `hcl:"iot_dps_name,attr" validate:"required"`
	// IsVerified: bool, optional
	IsVerified terra.BoolValue `hcl:"is_verified,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIothubDpsCertificateAttributes struct {
	ref terra.Reference
}

// CertificateContent returns a reference to field certificate_content of azurerm_iothub_dps_certificate.
func (aidc azurermIothubDpsCertificateAttributes) CertificateContent() terra.StringValue {
	return terra.ReferenceAsString(aidc.ref.Append("certificate_content"))
}

// Id returns a reference to field id of azurerm_iothub_dps_certificate.
func (aidc azurermIothubDpsCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aidc.ref.Append("id"))
}

// IotDpsName returns a reference to field iot_dps_name of azurerm_iothub_dps_certificate.
func (aidc azurermIothubDpsCertificateAttributes) IotDpsName() terra.StringValue {
	return terra.ReferenceAsString(aidc.ref.Append("iot_dps_name"))
}

// IsVerified returns a reference to field is_verified of azurerm_iothub_dps_certificate.
func (aidc azurermIothubDpsCertificateAttributes) IsVerified() terra.BoolValue {
	return terra.ReferenceAsBool(aidc.ref.Append("is_verified"))
}

// Name returns a reference to field name of azurerm_iothub_dps_certificate.
func (aidc azurermIothubDpsCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aidc.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_iothub_dps_certificate.
func (aidc azurermIothubDpsCertificateAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aidc.ref.Append("resource_group_name"))
}

func (aidc azurermIothubDpsCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aidc.ref.Append("timeouts"))
}

type azurermIothubDpsCertificateState struct {
	CertificateContent string         `json:"certificate_content"`
	Id                 string         `json:"id"`
	IotDpsName         string         `json:"iot_dps_name"`
	IsVerified         bool           `json:"is_verified"`
	Name               string         `json:"name"`
	ResourceGroupName  string         `json:"resource_group_name"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
