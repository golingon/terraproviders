// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_aadb2c_directory

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_aadb2c_directory.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAadb2CDirectoryState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aad *Resource) Type() string {
	return "azurerm_aadb2c_directory"
}

// LocalName returns the local name for [Resource].
func (aad *Resource) LocalName() string {
	return aad.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aad *Resource) Configuration() interface{} {
	return aad.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aad *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aad)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aad *Resource) Dependencies() terra.Dependencies {
	return aad.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aad *Resource) LifecycleManagement() *terra.Lifecycle {
	return aad.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aad *Resource) Attributes() azurermAadb2CDirectoryAttributes {
	return azurermAadb2CDirectoryAttributes{ref: terra.ReferenceResource(aad)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aad *Resource) ImportState(state io.Reader) error {
	aad.state = &azurermAadb2CDirectoryState{}
	if err := json.NewDecoder(state).Decode(aad.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aad.Type(), aad.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aad *Resource) State() (*azurermAadb2CDirectoryState, bool) {
	return aad.state, aad.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aad *Resource) StateMust() *azurermAadb2CDirectoryState {
	if aad.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aad.Type(), aad.LocalName()))
	}
	return aad.state
}

// Args contains the configurations for azurerm_aadb2c_directory.
type Args struct {
	// CountryCode: string, optional
	CountryCode terra.StringValue `hcl:"country_code,attr"`
	// DataResidencyLocation: string, required
	DataResidencyLocation terra.StringValue `hcl:"data_residency_location,attr" validate:"required"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// DomainName: string, required
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, required
	SkuName terra.StringValue `hcl:"sku_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAadb2CDirectoryAttributes struct {
	ref terra.Reference
}

// BillingType returns a reference to field billing_type of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) BillingType() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("billing_type"))
}

// CountryCode returns a reference to field country_code of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) CountryCode() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("country_code"))
}

// DataResidencyLocation returns a reference to field data_residency_location of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) DataResidencyLocation() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("data_residency_location"))
}

// DisplayName returns a reference to field display_name of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("display_name"))
}

// DomainName returns a reference to field domain_name of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("domain_name"))
}

// EffectiveStartDate returns a reference to field effective_start_date of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) EffectiveStartDate() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("effective_start_date"))
}

// Id returns a reference to field id of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("resource_group_name"))
}

// SkuName returns a reference to field sku_name of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("sku_name"))
}

// Tags returns a reference to field tags of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aad.ref.Append("tags"))
}

// TenantId returns a reference to field tenant_id of azurerm_aadb2c_directory.
func (aad azurermAadb2CDirectoryAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(aad.ref.Append("tenant_id"))
}

func (aad azurermAadb2CDirectoryAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aad.ref.Append("timeouts"))
}

type azurermAadb2CDirectoryState struct {
	BillingType           string            `json:"billing_type"`
	CountryCode           string            `json:"country_code"`
	DataResidencyLocation string            `json:"data_residency_location"`
	DisplayName           string            `json:"display_name"`
	DomainName            string            `json:"domain_name"`
	EffectiveStartDate    string            `json:"effective_start_date"`
	Id                    string            `json:"id"`
	ResourceGroupName     string            `json:"resource_group_name"`
	SkuName               string            `json:"sku_name"`
	Tags                  map[string]string `json:"tags"`
	TenantId              string            `json:"tenant_id"`
	Timeouts              *TimeoutsState    `json:"timeouts"`
}
