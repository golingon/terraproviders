// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_authorization_server

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_authorization_server.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementAuthorizationServerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamas *Resource) Type() string {
	return "azurerm_api_management_authorization_server"
}

// LocalName returns the local name for [Resource].
func (aamas *Resource) LocalName() string {
	return aamas.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamas *Resource) Configuration() interface{} {
	return aamas.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamas *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamas)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamas *Resource) Dependencies() terra.Dependencies {
	return aamas.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamas *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamas.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamas *Resource) Attributes() azurermApiManagementAuthorizationServerAttributes {
	return azurermApiManagementAuthorizationServerAttributes{ref: terra.ReferenceResource(aamas)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamas *Resource) ImportState(state io.Reader) error {
	aamas.state = &azurermApiManagementAuthorizationServerState{}
	if err := json.NewDecoder(state).Decode(aamas.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamas.Type(), aamas.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamas *Resource) State() (*azurermApiManagementAuthorizationServerState, bool) {
	return aamas.state, aamas.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamas *Resource) StateMust() *azurermApiManagementAuthorizationServerState {
	if aamas.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamas.Type(), aamas.LocalName()))
	}
	return aamas.state
}

// Args contains the configurations for azurerm_api_management_authorization_server.
type Args struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// AuthorizationEndpoint: string, required
	AuthorizationEndpoint terra.StringValue `hcl:"authorization_endpoint,attr" validate:"required"`
	// AuthorizationMethods: set of string, required
	AuthorizationMethods terra.SetValue[terra.StringValue] `hcl:"authorization_methods,attr" validate:"required"`
	// BearerTokenSendingMethods: set of string, optional
	BearerTokenSendingMethods terra.SetValue[terra.StringValue] `hcl:"bearer_token_sending_methods,attr"`
	// ClientAuthenticationMethod: set of string, optional
	ClientAuthenticationMethod terra.SetValue[terra.StringValue] `hcl:"client_authentication_method,attr"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientRegistrationEndpoint: string, required
	ClientRegistrationEndpoint terra.StringValue `hcl:"client_registration_endpoint,attr" validate:"required"`
	// ClientSecret: string, optional
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// DefaultScope: string, optional
	DefaultScope terra.StringValue `hcl:"default_scope,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// GrantTypes: set of string, required
	GrantTypes terra.SetValue[terra.StringValue] `hcl:"grant_types,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ResourceOwnerPassword: string, optional
	ResourceOwnerPassword terra.StringValue `hcl:"resource_owner_password,attr"`
	// ResourceOwnerUsername: string, optional
	ResourceOwnerUsername terra.StringValue `hcl:"resource_owner_username,attr"`
	// SupportState: bool, optional
	SupportState terra.BoolValue `hcl:"support_state,attr"`
	// TokenEndpoint: string, optional
	TokenEndpoint terra.StringValue `hcl:"token_endpoint,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// TokenBodyParameter: min=0
	TokenBodyParameter []TokenBodyParameter `hcl:"token_body_parameter,block" validate:"min=0"`
}

type azurermApiManagementAuthorizationServerAttributes struct {
	ref terra.Reference
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("api_management_name"))
}

// AuthorizationEndpoint returns a reference to field authorization_endpoint of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) AuthorizationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("authorization_endpoint"))
}

// AuthorizationMethods returns a reference to field authorization_methods of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) AuthorizationMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aamas.ref.Append("authorization_methods"))
}

// BearerTokenSendingMethods returns a reference to field bearer_token_sending_methods of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) BearerTokenSendingMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aamas.ref.Append("bearer_token_sending_methods"))
}

// ClientAuthenticationMethod returns a reference to field client_authentication_method of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ClientAuthenticationMethod() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aamas.ref.Append("client_authentication_method"))
}

// ClientId returns a reference to field client_id of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("client_id"))
}

// ClientRegistrationEndpoint returns a reference to field client_registration_endpoint of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ClientRegistrationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("client_registration_endpoint"))
}

// ClientSecret returns a reference to field client_secret of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("client_secret"))
}

// DefaultScope returns a reference to field default_scope of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) DefaultScope() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("default_scope"))
}

// Description returns a reference to field description of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("display_name"))
}

// GrantTypes returns a reference to field grant_types of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) GrantTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aamas.ref.Append("grant_types"))
}

// Id returns a reference to field id of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("resource_group_name"))
}

// ResourceOwnerPassword returns a reference to field resource_owner_password of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ResourceOwnerPassword() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("resource_owner_password"))
}

// ResourceOwnerUsername returns a reference to field resource_owner_username of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) ResourceOwnerUsername() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("resource_owner_username"))
}

// SupportState returns a reference to field support_state of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) SupportState() terra.BoolValue {
	return terra.ReferenceAsBool(aamas.ref.Append("support_state"))
}

// TokenEndpoint returns a reference to field token_endpoint of azurerm_api_management_authorization_server.
func (aamas azurermApiManagementAuthorizationServerAttributes) TokenEndpoint() terra.StringValue {
	return terra.ReferenceAsString(aamas.ref.Append("token_endpoint"))
}

func (aamas azurermApiManagementAuthorizationServerAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamas.ref.Append("timeouts"))
}

func (aamas azurermApiManagementAuthorizationServerAttributes) TokenBodyParameter() terra.ListValue[TokenBodyParameterAttributes] {
	return terra.ReferenceAsList[TokenBodyParameterAttributes](aamas.ref.Append("token_body_parameter"))
}

type azurermApiManagementAuthorizationServerState struct {
	ApiManagementName          string                    `json:"api_management_name"`
	AuthorizationEndpoint      string                    `json:"authorization_endpoint"`
	AuthorizationMethods       []string                  `json:"authorization_methods"`
	BearerTokenSendingMethods  []string                  `json:"bearer_token_sending_methods"`
	ClientAuthenticationMethod []string                  `json:"client_authentication_method"`
	ClientId                   string                    `json:"client_id"`
	ClientRegistrationEndpoint string                    `json:"client_registration_endpoint"`
	ClientSecret               string                    `json:"client_secret"`
	DefaultScope               string                    `json:"default_scope"`
	Description                string                    `json:"description"`
	DisplayName                string                    `json:"display_name"`
	GrantTypes                 []string                  `json:"grant_types"`
	Id                         string                    `json:"id"`
	Name                       string                    `json:"name"`
	ResourceGroupName          string                    `json:"resource_group_name"`
	ResourceOwnerPassword      string                    `json:"resource_owner_password"`
	ResourceOwnerUsername      string                    `json:"resource_owner_username"`
	SupportState               bool                      `json:"support_state"`
	TokenEndpoint              string                    `json:"token_endpoint"`
	Timeouts                   *TimeoutsState            `json:"timeouts"`
	TokenBodyParameter         []TokenBodyParameterState `json:"token_body_parameter"`
}
