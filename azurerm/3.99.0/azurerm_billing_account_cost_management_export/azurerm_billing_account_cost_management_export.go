// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_billing_account_cost_management_export

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_billing_account_cost_management_export.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermBillingAccountCostManagementExportState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (abacme *Resource) Type() string {
	return "azurerm_billing_account_cost_management_export"
}

// LocalName returns the local name for [Resource].
func (abacme *Resource) LocalName() string {
	return abacme.Name
}

// Configuration returns the configuration (args) for [Resource].
func (abacme *Resource) Configuration() interface{} {
	return abacme.Args
}

// DependOn is used for other resources to depend on [Resource].
func (abacme *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(abacme)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (abacme *Resource) Dependencies() terra.Dependencies {
	return abacme.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (abacme *Resource) LifecycleManagement() *terra.Lifecycle {
	return abacme.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (abacme *Resource) Attributes() azurermBillingAccountCostManagementExportAttributes {
	return azurermBillingAccountCostManagementExportAttributes{ref: terra.ReferenceResource(abacme)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (abacme *Resource) ImportState(state io.Reader) error {
	abacme.state = &azurermBillingAccountCostManagementExportState{}
	if err := json.NewDecoder(state).Decode(abacme.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", abacme.Type(), abacme.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (abacme *Resource) State() (*azurermBillingAccountCostManagementExportState, bool) {
	return abacme.state, abacme.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (abacme *Resource) StateMust() *azurermBillingAccountCostManagementExportState {
	if abacme.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", abacme.Type(), abacme.LocalName()))
	}
	return abacme.state
}

// Args contains the configurations for azurerm_billing_account_cost_management_export.
type Args struct {
	// Active: bool, optional
	Active terra.BoolValue `hcl:"active,attr"`
	// BillingAccountId: string, required
	BillingAccountId terra.StringValue `hcl:"billing_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RecurrencePeriodEndDate: string, required
	RecurrencePeriodEndDate terra.StringValue `hcl:"recurrence_period_end_date,attr" validate:"required"`
	// RecurrencePeriodStartDate: string, required
	RecurrencePeriodStartDate terra.StringValue `hcl:"recurrence_period_start_date,attr" validate:"required"`
	// RecurrenceType: string, required
	RecurrenceType terra.StringValue `hcl:"recurrence_type,attr" validate:"required"`
	// ExportDataOptions: required
	ExportDataOptions *ExportDataOptions `hcl:"export_data_options,block" validate:"required"`
	// ExportDataStorageLocation: required
	ExportDataStorageLocation *ExportDataStorageLocation `hcl:"export_data_storage_location,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermBillingAccountCostManagementExportAttributes struct {
	ref terra.Reference
}

// Active returns a reference to field active of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) Active() terra.BoolValue {
	return terra.ReferenceAsBool(abacme.ref.Append("active"))
}

// BillingAccountId returns a reference to field billing_account_id of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) BillingAccountId() terra.StringValue {
	return terra.ReferenceAsString(abacme.ref.Append("billing_account_id"))
}

// Id returns a reference to field id of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abacme.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(abacme.ref.Append("name"))
}

// RecurrencePeriodEndDate returns a reference to field recurrence_period_end_date of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) RecurrencePeriodEndDate() terra.StringValue {
	return terra.ReferenceAsString(abacme.ref.Append("recurrence_period_end_date"))
}

// RecurrencePeriodStartDate returns a reference to field recurrence_period_start_date of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) RecurrencePeriodStartDate() terra.StringValue {
	return terra.ReferenceAsString(abacme.ref.Append("recurrence_period_start_date"))
}

// RecurrenceType returns a reference to field recurrence_type of azurerm_billing_account_cost_management_export.
func (abacme azurermBillingAccountCostManagementExportAttributes) RecurrenceType() terra.StringValue {
	return terra.ReferenceAsString(abacme.ref.Append("recurrence_type"))
}

func (abacme azurermBillingAccountCostManagementExportAttributes) ExportDataOptions() terra.ListValue[ExportDataOptionsAttributes] {
	return terra.ReferenceAsList[ExportDataOptionsAttributes](abacme.ref.Append("export_data_options"))
}

func (abacme azurermBillingAccountCostManagementExportAttributes) ExportDataStorageLocation() terra.ListValue[ExportDataStorageLocationAttributes] {
	return terra.ReferenceAsList[ExportDataStorageLocationAttributes](abacme.ref.Append("export_data_storage_location"))
}

func (abacme azurermBillingAccountCostManagementExportAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](abacme.ref.Append("timeouts"))
}

type azurermBillingAccountCostManagementExportState struct {
	Active                    bool                             `json:"active"`
	BillingAccountId          string                           `json:"billing_account_id"`
	Id                        string                           `json:"id"`
	Name                      string                           `json:"name"`
	RecurrencePeriodEndDate   string                           `json:"recurrence_period_end_date"`
	RecurrencePeriodStartDate string                           `json:"recurrence_period_start_date"`
	RecurrenceType            string                           `json:"recurrence_type"`
	ExportDataOptions         []ExportDataOptionsState         `json:"export_data_options"`
	ExportDataStorageLocation []ExportDataStorageLocationState `json:"export_data_storage_location"`
	Timeouts                  *TimeoutsState                   `json:"timeouts"`
}
