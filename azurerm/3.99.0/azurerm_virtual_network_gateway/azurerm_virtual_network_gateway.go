// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_virtual_network_gateway

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_virtual_network_gateway.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermVirtualNetworkGatewayState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avng *Resource) Type() string {
	return "azurerm_virtual_network_gateway"
}

// LocalName returns the local name for [Resource].
func (avng *Resource) LocalName() string {
	return avng.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avng *Resource) Configuration() interface{} {
	return avng.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avng *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avng)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avng *Resource) Dependencies() terra.Dependencies {
	return avng.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avng *Resource) LifecycleManagement() *terra.Lifecycle {
	return avng.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avng *Resource) Attributes() azurermVirtualNetworkGatewayAttributes {
	return azurermVirtualNetworkGatewayAttributes{ref: terra.ReferenceResource(avng)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avng *Resource) ImportState(state io.Reader) error {
	avng.state = &azurermVirtualNetworkGatewayState{}
	if err := json.NewDecoder(state).Decode(avng.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avng.Type(), avng.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avng *Resource) State() (*azurermVirtualNetworkGatewayState, bool) {
	return avng.state, avng.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avng *Resource) StateMust() *azurermVirtualNetworkGatewayState {
	if avng.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avng.Type(), avng.LocalName()))
	}
	return avng.state
}

// Args contains the configurations for azurerm_virtual_network_gateway.
type Args struct {
	// ActiveActive: bool, optional
	ActiveActive terra.BoolValue `hcl:"active_active,attr"`
	// BgpRouteTranslationForNatEnabled: bool, optional
	BgpRouteTranslationForNatEnabled terra.BoolValue `hcl:"bgp_route_translation_for_nat_enabled,attr"`
	// DefaultLocalNetworkGatewayId: string, optional
	DefaultLocalNetworkGatewayId terra.StringValue `hcl:"default_local_network_gateway_id,attr"`
	// DnsForwardingEnabled: bool, optional
	DnsForwardingEnabled terra.BoolValue `hcl:"dns_forwarding_enabled,attr"`
	// EdgeZone: string, optional
	EdgeZone terra.StringValue `hcl:"edge_zone,attr"`
	// EnableBgp: bool, optional
	EnableBgp terra.BoolValue `hcl:"enable_bgp,attr"`
	// Generation: string, optional
	Generation terra.StringValue `hcl:"generation,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpSecReplayProtectionEnabled: bool, optional
	IpSecReplayProtectionEnabled terra.BoolValue `hcl:"ip_sec_replay_protection_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrivateIpAddressEnabled: bool, optional
	PrivateIpAddressEnabled terra.BoolValue `hcl:"private_ip_address_enabled,attr"`
	// RemoteVnetTrafficEnabled: bool, optional
	RemoteVnetTrafficEnabled terra.BoolValue `hcl:"remote_vnet_traffic_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// VirtualWanTrafficEnabled: bool, optional
	VirtualWanTrafficEnabled terra.BoolValue `hcl:"virtual_wan_traffic_enabled,attr"`
	// VpnType: string, optional
	VpnType terra.StringValue `hcl:"vpn_type,attr"`
	// BgpSettings: optional
	BgpSettings *BgpSettings `hcl:"bgp_settings,block"`
	// CustomRoute: optional
	CustomRoute *CustomRoute `hcl:"custom_route,block"`
	// IpConfiguration: min=1,max=3
	IpConfiguration []IpConfiguration `hcl:"ip_configuration,block" validate:"min=1,max=3"`
	// PolicyGroup: min=0
	PolicyGroup []PolicyGroup `hcl:"policy_group,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// VpnClientConfiguration: optional
	VpnClientConfiguration *VpnClientConfiguration `hcl:"vpn_client_configuration,block"`
}

type azurermVirtualNetworkGatewayAttributes struct {
	ref terra.Reference
}

// ActiveActive returns a reference to field active_active of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) ActiveActive() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("active_active"))
}

// BgpRouteTranslationForNatEnabled returns a reference to field bgp_route_translation_for_nat_enabled of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) BgpRouteTranslationForNatEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("bgp_route_translation_for_nat_enabled"))
}

// DefaultLocalNetworkGatewayId returns a reference to field default_local_network_gateway_id of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) DefaultLocalNetworkGatewayId() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("default_local_network_gateway_id"))
}

// DnsForwardingEnabled returns a reference to field dns_forwarding_enabled of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) DnsForwardingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("dns_forwarding_enabled"))
}

// EdgeZone returns a reference to field edge_zone of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) EdgeZone() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("edge_zone"))
}

// EnableBgp returns a reference to field enable_bgp of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) EnableBgp() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("enable_bgp"))
}

// Generation returns a reference to field generation of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Generation() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("generation"))
}

// Id returns a reference to field id of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("id"))
}

// IpSecReplayProtectionEnabled returns a reference to field ip_sec_replay_protection_enabled of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) IpSecReplayProtectionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("ip_sec_replay_protection_enabled"))
}

// Location returns a reference to field location of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("name"))
}

// PrivateIpAddressEnabled returns a reference to field private_ip_address_enabled of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) PrivateIpAddressEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("private_ip_address_enabled"))
}

// RemoteVnetTrafficEnabled returns a reference to field remote_vnet_traffic_enabled of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) RemoteVnetTrafficEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("remote_vnet_traffic_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("resource_group_name"))
}

// Sku returns a reference to field sku of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("sku"))
}

// Tags returns a reference to field tags of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](avng.ref.Append("tags"))
}

// Type returns a reference to field type of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("type"))
}

// VirtualWanTrafficEnabled returns a reference to field virtual_wan_traffic_enabled of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) VirtualWanTrafficEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avng.ref.Append("virtual_wan_traffic_enabled"))
}

// VpnType returns a reference to field vpn_type of azurerm_virtual_network_gateway.
func (avng azurermVirtualNetworkGatewayAttributes) VpnType() terra.StringValue {
	return terra.ReferenceAsString(avng.ref.Append("vpn_type"))
}

func (avng azurermVirtualNetworkGatewayAttributes) BgpSettings() terra.ListValue[BgpSettingsAttributes] {
	return terra.ReferenceAsList[BgpSettingsAttributes](avng.ref.Append("bgp_settings"))
}

func (avng azurermVirtualNetworkGatewayAttributes) CustomRoute() terra.ListValue[CustomRouteAttributes] {
	return terra.ReferenceAsList[CustomRouteAttributes](avng.ref.Append("custom_route"))
}

func (avng azurermVirtualNetworkGatewayAttributes) IpConfiguration() terra.ListValue[IpConfigurationAttributes] {
	return terra.ReferenceAsList[IpConfigurationAttributes](avng.ref.Append("ip_configuration"))
}

func (avng azurermVirtualNetworkGatewayAttributes) PolicyGroup() terra.ListValue[PolicyGroupAttributes] {
	return terra.ReferenceAsList[PolicyGroupAttributes](avng.ref.Append("policy_group"))
}

func (avng azurermVirtualNetworkGatewayAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avng.ref.Append("timeouts"))
}

func (avng azurermVirtualNetworkGatewayAttributes) VpnClientConfiguration() terra.ListValue[VpnClientConfigurationAttributes] {
	return terra.ReferenceAsList[VpnClientConfigurationAttributes](avng.ref.Append("vpn_client_configuration"))
}

type azurermVirtualNetworkGatewayState struct {
	ActiveActive                     bool                          `json:"active_active"`
	BgpRouteTranslationForNatEnabled bool                          `json:"bgp_route_translation_for_nat_enabled"`
	DefaultLocalNetworkGatewayId     string                        `json:"default_local_network_gateway_id"`
	DnsForwardingEnabled             bool                          `json:"dns_forwarding_enabled"`
	EdgeZone                         string                        `json:"edge_zone"`
	EnableBgp                        bool                          `json:"enable_bgp"`
	Generation                       string                        `json:"generation"`
	Id                               string                        `json:"id"`
	IpSecReplayProtectionEnabled     bool                          `json:"ip_sec_replay_protection_enabled"`
	Location                         string                        `json:"location"`
	Name                             string                        `json:"name"`
	PrivateIpAddressEnabled          bool                          `json:"private_ip_address_enabled"`
	RemoteVnetTrafficEnabled         bool                          `json:"remote_vnet_traffic_enabled"`
	ResourceGroupName                string                        `json:"resource_group_name"`
	Sku                              string                        `json:"sku"`
	Tags                             map[string]string             `json:"tags"`
	Type                             string                        `json:"type"`
	VirtualWanTrafficEnabled         bool                          `json:"virtual_wan_traffic_enabled"`
	VpnType                          string                        `json:"vpn_type"`
	BgpSettings                      []BgpSettingsState            `json:"bgp_settings"`
	CustomRoute                      []CustomRouteState            `json:"custom_route"`
	IpConfiguration                  []IpConfigurationState        `json:"ip_configuration"`
	PolicyGroup                      []PolicyGroupState            `json:"policy_group"`
	Timeouts                         *TimeoutsState                `json:"timeouts"`
	VpnClientConfiguration           []VpnClientConfigurationState `json:"vpn_client_configuration"`
}
