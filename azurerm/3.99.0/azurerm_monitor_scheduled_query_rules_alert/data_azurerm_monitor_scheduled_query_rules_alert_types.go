// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_scheduled_query_rules_alert

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataActionAttributes struct {
	ref terra.Reference
}

func (a DataActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataActionAttributes) InternalWithRef(ref terra.Reference) DataActionAttributes {
	return DataActionAttributes{ref: ref}
}

func (a DataActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataActionAttributes) ActionGroup() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("action_group"))
}

func (a DataActionAttributes) CustomWebhookPayload() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("custom_webhook_payload"))
}

func (a DataActionAttributes) EmailSubject() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("email_subject"))
}

type DataTriggerAttributes struct {
	ref terra.Reference
}

func (t DataTriggerAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTriggerAttributes) InternalWithRef(ref terra.Reference) DataTriggerAttributes {
	return DataTriggerAttributes{ref: ref}
}

func (t DataTriggerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTriggerAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("operator"))
}

func (t DataTriggerAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("threshold"))
}

func (t DataTriggerAttributes) MetricTrigger() terra.SetValue[DataTriggerMetricTriggerAttributes] {
	return terra.ReferenceAsSet[DataTriggerMetricTriggerAttributes](t.ref.Append("metric_trigger"))
}

type DataTriggerMetricTriggerAttributes struct {
	ref terra.Reference
}

func (mt DataTriggerMetricTriggerAttributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt DataTriggerMetricTriggerAttributes) InternalWithRef(ref terra.Reference) DataTriggerMetricTriggerAttributes {
	return DataTriggerMetricTriggerAttributes{ref: ref}
}

func (mt DataTriggerMetricTriggerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt DataTriggerMetricTriggerAttributes) MetricColumn() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("metric_column"))
}

func (mt DataTriggerMetricTriggerAttributes) MetricTriggerType() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("metric_trigger_type"))
}

func (mt DataTriggerMetricTriggerAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("operator"))
}

func (mt DataTriggerMetricTriggerAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceAsNumber(mt.ref.Append("threshold"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataActionState struct {
	ActionGroup          []string `json:"action_group"`
	CustomWebhookPayload string   `json:"custom_webhook_payload"`
	EmailSubject         string   `json:"email_subject"`
}

type DataTriggerState struct {
	Operator      string                          `json:"operator"`
	Threshold     float64                         `json:"threshold"`
	MetricTrigger []DataTriggerMetricTriggerState `json:"metric_trigger"`
}

type DataTriggerMetricTriggerState struct {
	MetricColumn      string  `json:"metric_column"`
	MetricTriggerType string  `json:"metric_trigger_type"`
	Operator          string  `json:"operator"`
	Threshold         float64 `json:"threshold"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
