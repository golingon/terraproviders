// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_scheduled_query_rules_alert

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_monitor_scheduled_query_rules_alert.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (amsqra *DataSource) DataSource() string {
	return "azurerm_monitor_scheduled_query_rules_alert"
}

// LocalName returns the local name for [DataSource].
func (amsqra *DataSource) LocalName() string {
	return amsqra.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (amsqra *DataSource) Configuration() interface{} {
	return amsqra.Args
}

// Attributes returns the attributes for [DataSource].
func (amsqra *DataSource) Attributes() dataAzurermMonitorScheduledQueryRulesAlertAttributes {
	return dataAzurermMonitorScheduledQueryRulesAlertAttributes{ref: terra.ReferenceDataSource(amsqra)}
}

// DataArgs contains the configurations for azurerm_monitor_scheduled_query_rules_alert.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermMonitorScheduledQueryRulesAlertAttributes struct {
	ref terra.Reference
}

// AuthorizedResourceIds returns a reference to field authorized_resource_ids of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) AuthorizedResourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](amsqra.ref.Append("authorized_resource_ids"))
}

// DataSourceId returns a reference to field data_source_id of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) DataSourceId() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("data_source_id"))
}

// Description returns a reference to field description of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("description"))
}

// Enabled returns a reference to field enabled of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(amsqra.ref.Append("enabled"))
}

// Frequency returns a reference to field frequency of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Frequency() terra.NumberValue {
	return terra.ReferenceAsNumber(amsqra.ref.Append("frequency"))
}

// Id returns a reference to field id of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("name"))
}

// Query returns a reference to field query of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Query() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("query"))
}

// QueryType returns a reference to field query_type of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) QueryType() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("query_type"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(amsqra.ref.Append("resource_group_name"))
}

// Severity returns a reference to field severity of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Severity() terra.NumberValue {
	return terra.ReferenceAsNumber(amsqra.ref.Append("severity"))
}

// Tags returns a reference to field tags of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amsqra.ref.Append("tags"))
}

// Throttling returns a reference to field throttling of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Throttling() terra.NumberValue {
	return terra.ReferenceAsNumber(amsqra.ref.Append("throttling"))
}

// TimeWindow returns a reference to field time_window of azurerm_monitor_scheduled_query_rules_alert.
func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) TimeWindow() terra.NumberValue {
	return terra.ReferenceAsNumber(amsqra.ref.Append("time_window"))
}

func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Action() terra.SetValue[DataActionAttributes] {
	return terra.ReferenceAsSet[DataActionAttributes](amsqra.ref.Append("action"))
}

func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Trigger() terra.SetValue[DataTriggerAttributes] {
	return terra.ReferenceAsSet[DataTriggerAttributes](amsqra.ref.Append("trigger"))
}

func (amsqra dataAzurermMonitorScheduledQueryRulesAlertAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](amsqra.ref.Append("timeouts"))
}
