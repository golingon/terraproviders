// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iotcentral_application_network_rule_set

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iotcentral_application_network_rule_set.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIotcentralApplicationNetworkRuleSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aianrs *Resource) Type() string {
	return "azurerm_iotcentral_application_network_rule_set"
}

// LocalName returns the local name for [Resource].
func (aianrs *Resource) LocalName() string {
	return aianrs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aianrs *Resource) Configuration() interface{} {
	return aianrs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aianrs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aianrs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aianrs *Resource) Dependencies() terra.Dependencies {
	return aianrs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aianrs *Resource) LifecycleManagement() *terra.Lifecycle {
	return aianrs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aianrs *Resource) Attributes() azurermIotcentralApplicationNetworkRuleSetAttributes {
	return azurermIotcentralApplicationNetworkRuleSetAttributes{ref: terra.ReferenceResource(aianrs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aianrs *Resource) ImportState(state io.Reader) error {
	aianrs.state = &azurermIotcentralApplicationNetworkRuleSetState{}
	if err := json.NewDecoder(state).Decode(aianrs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aianrs.Type(), aianrs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aianrs *Resource) State() (*azurermIotcentralApplicationNetworkRuleSetState, bool) {
	return aianrs.state, aianrs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aianrs *Resource) StateMust() *azurermIotcentralApplicationNetworkRuleSetState {
	if aianrs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aianrs.Type(), aianrs.LocalName()))
	}
	return aianrs.state
}

// Args contains the configurations for azurerm_iotcentral_application_network_rule_set.
type Args struct {
	// ApplyToDevice: bool, optional
	ApplyToDevice terra.BoolValue `hcl:"apply_to_device,attr"`
	// DefaultAction: string, optional
	DefaultAction terra.StringValue `hcl:"default_action,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IotcentralApplicationId: string, required
	IotcentralApplicationId terra.StringValue `hcl:"iotcentral_application_id,attr" validate:"required"`
	// IpRule: min=0
	IpRule []IpRule `hcl:"ip_rule,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIotcentralApplicationNetworkRuleSetAttributes struct {
	ref terra.Reference
}

// ApplyToDevice returns a reference to field apply_to_device of azurerm_iotcentral_application_network_rule_set.
func (aianrs azurermIotcentralApplicationNetworkRuleSetAttributes) ApplyToDevice() terra.BoolValue {
	return terra.ReferenceAsBool(aianrs.ref.Append("apply_to_device"))
}

// DefaultAction returns a reference to field default_action of azurerm_iotcentral_application_network_rule_set.
func (aianrs azurermIotcentralApplicationNetworkRuleSetAttributes) DefaultAction() terra.StringValue {
	return terra.ReferenceAsString(aianrs.ref.Append("default_action"))
}

// Id returns a reference to field id of azurerm_iotcentral_application_network_rule_set.
func (aianrs azurermIotcentralApplicationNetworkRuleSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aianrs.ref.Append("id"))
}

// IotcentralApplicationId returns a reference to field iotcentral_application_id of azurerm_iotcentral_application_network_rule_set.
func (aianrs azurermIotcentralApplicationNetworkRuleSetAttributes) IotcentralApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aianrs.ref.Append("iotcentral_application_id"))
}

func (aianrs azurermIotcentralApplicationNetworkRuleSetAttributes) IpRule() terra.ListValue[IpRuleAttributes] {
	return terra.ReferenceAsList[IpRuleAttributes](aianrs.ref.Append("ip_rule"))
}

func (aianrs azurermIotcentralApplicationNetworkRuleSetAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aianrs.ref.Append("timeouts"))
}

type azurermIotcentralApplicationNetworkRuleSetState struct {
	ApplyToDevice           bool           `json:"apply_to_device"`
	DefaultAction           string         `json:"default_action"`
	Id                      string         `json:"id"`
	IotcentralApplicationId string         `json:"iotcentral_application_id"`
	IpRule                  []IpRuleState  `json:"ip_rule"`
	Timeouts                *TimeoutsState `json:"timeouts"`
}
