// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logic_app_integration_account_partner

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_logic_app_integration_account_partner.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogicAppIntegrationAccountPartnerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alaiap *Resource) Type() string {
	return "azurerm_logic_app_integration_account_partner"
}

// LocalName returns the local name for [Resource].
func (alaiap *Resource) LocalName() string {
	return alaiap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alaiap *Resource) Configuration() interface{} {
	return alaiap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alaiap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alaiap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alaiap *Resource) Dependencies() terra.Dependencies {
	return alaiap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alaiap *Resource) LifecycleManagement() *terra.Lifecycle {
	return alaiap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alaiap *Resource) Attributes() azurermLogicAppIntegrationAccountPartnerAttributes {
	return azurermLogicAppIntegrationAccountPartnerAttributes{ref: terra.ReferenceResource(alaiap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alaiap *Resource) ImportState(state io.Reader) error {
	alaiap.state = &azurermLogicAppIntegrationAccountPartnerState{}
	if err := json.NewDecoder(state).Decode(alaiap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alaiap.Type(), alaiap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alaiap *Resource) State() (*azurermLogicAppIntegrationAccountPartnerState, bool) {
	return alaiap.state, alaiap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alaiap *Resource) StateMust() *azurermLogicAppIntegrationAccountPartnerState {
	if alaiap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alaiap.Type(), alaiap.LocalName()))
	}
	return alaiap.state
}

// Args contains the configurations for azurerm_logic_app_integration_account_partner.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationAccountName: string, required
	IntegrationAccountName terra.StringValue `hcl:"integration_account_name,attr" validate:"required"`
	// Metadata: string, optional
	Metadata terra.StringValue `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// BusinessIdentity: min=1
	BusinessIdentity []BusinessIdentity `hcl:"business_identity,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogicAppIntegrationAccountPartnerAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_logic_app_integration_account_partner.
func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alaiap.ref.Append("id"))
}

// IntegrationAccountName returns a reference to field integration_account_name of azurerm_logic_app_integration_account_partner.
func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) IntegrationAccountName() terra.StringValue {
	return terra.ReferenceAsString(alaiap.ref.Append("integration_account_name"))
}

// Metadata returns a reference to field metadata of azurerm_logic_app_integration_account_partner.
func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) Metadata() terra.StringValue {
	return terra.ReferenceAsString(alaiap.ref.Append("metadata"))
}

// Name returns a reference to field name of azurerm_logic_app_integration_account_partner.
func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alaiap.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_logic_app_integration_account_partner.
func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(alaiap.ref.Append("resource_group_name"))
}

func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) BusinessIdentity() terra.SetValue[BusinessIdentityAttributes] {
	return terra.ReferenceAsSet[BusinessIdentityAttributes](alaiap.ref.Append("business_identity"))
}

func (alaiap azurermLogicAppIntegrationAccountPartnerAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alaiap.ref.Append("timeouts"))
}

type azurermLogicAppIntegrationAccountPartnerState struct {
	Id                     string                  `json:"id"`
	IntegrationAccountName string                  `json:"integration_account_name"`
	Metadata               string                  `json:"metadata"`
	Name                   string                  `json:"name"`
	ResourceGroupName      string                  `json:"resource_group_name"`
	BusinessIdentity       []BusinessIdentityState `json:"business_identity"`
	Timeouts               *TimeoutsState          `json:"timeouts"`
}
