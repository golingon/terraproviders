// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_system_center_virtual_machine_manager_server

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_system_center_virtual_machine_manager_server.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSystemCenterVirtualMachineManagerServerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascvmms *Resource) Type() string {
	return "azurerm_system_center_virtual_machine_manager_server"
}

// LocalName returns the local name for [Resource].
func (ascvmms *Resource) LocalName() string {
	return ascvmms.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascvmms *Resource) Configuration() interface{} {
	return ascvmms.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascvmms *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascvmms)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascvmms *Resource) Dependencies() terra.Dependencies {
	return ascvmms.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascvmms *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascvmms.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascvmms *Resource) Attributes() azurermSystemCenterVirtualMachineManagerServerAttributes {
	return azurermSystemCenterVirtualMachineManagerServerAttributes{ref: terra.ReferenceResource(ascvmms)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascvmms *Resource) ImportState(state io.Reader) error {
	ascvmms.state = &azurermSystemCenterVirtualMachineManagerServerState{}
	if err := json.NewDecoder(state).Decode(ascvmms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascvmms.Type(), ascvmms.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascvmms *Resource) State() (*azurermSystemCenterVirtualMachineManagerServerState, bool) {
	return ascvmms.state, ascvmms.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascvmms *Resource) StateMust() *azurermSystemCenterVirtualMachineManagerServerState {
	if ascvmms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascvmms.Type(), ascvmms.LocalName()))
	}
	return ascvmms.state
}

// Args contains the configurations for azurerm_system_center_virtual_machine_manager_server.
type Args struct {
	// CustomLocationId: string, required
	CustomLocationId terra.StringValue `hcl:"custom_location_id,attr" validate:"required"`
	// Fqdn: string, required
	Fqdn terra.StringValue `hcl:"fqdn,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Port: number, optional
	Port terra.NumberValue `hcl:"port,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSystemCenterVirtualMachineManagerServerAttributes struct {
	ref terra.Reference
}

// CustomLocationId returns a reference to field custom_location_id of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) CustomLocationId() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("custom_location_id"))
}

// Fqdn returns a reference to field fqdn of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("fqdn"))
}

// Id returns a reference to field id of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("name"))
}

// Password returns a reference to field password of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("password"))
}

// Port returns a reference to field port of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ascvmms.ref.Append("port"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ascvmms.ref.Append("tags"))
}

// Username returns a reference to field username of azurerm_system_center_virtual_machine_manager_server.
func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(ascvmms.ref.Append("username"))
}

func (ascvmms azurermSystemCenterVirtualMachineManagerServerAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascvmms.ref.Append("timeouts"))
}

type azurermSystemCenterVirtualMachineManagerServerState struct {
	CustomLocationId  string            `json:"custom_location_id"`
	Fqdn              string            `json:"fqdn"`
	Id                string            `json:"id"`
	Location          string            `json:"location"`
	Name              string            `json:"name"`
	Password          string            `json:"password"`
	Port              float64           `json:"port"`
	ResourceGroupName string            `json:"resource_group_name"`
	Tags              map[string]string `json:"tags"`
	Username          string            `json:"username"`
	Timeouts          *TimeoutsState    `json:"timeouts"`
}
