// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_container_app

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Dapr struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// AppPort: number, optional
	AppPort terra.NumberValue `hcl:"app_port,attr"`
	// AppProtocol: string, optional
	AppProtocol terra.StringValue `hcl:"app_protocol,attr"`
}

type Identity struct {
	// IdentityIds: set of string, optional
	IdentityIds terra.SetValue[terra.StringValue] `hcl:"identity_ids,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Ingress struct {
	// AllowInsecureConnections: bool, optional
	AllowInsecureConnections terra.BoolValue `hcl:"allow_insecure_connections,attr"`
	// ExposedPort: number, optional
	ExposedPort terra.NumberValue `hcl:"exposed_port,attr"`
	// ExternalEnabled: bool, optional
	ExternalEnabled terra.BoolValue `hcl:"external_enabled,attr"`
	// TargetPort: number, required
	TargetPort terra.NumberValue `hcl:"target_port,attr" validate:"required"`
	// Transport: string, optional
	Transport terra.StringValue `hcl:"transport,attr"`
	// IngressCustomDomain: optional
	CustomDomain *IngressCustomDomain `hcl:"custom_domain,block"`
	// IngressIpSecurityRestriction: min=0
	IpSecurityRestriction []IngressIpSecurityRestriction `hcl:"ip_security_restriction,block" validate:"min=0"`
	// IngressTrafficWeight: min=1
	TrafficWeight []IngressTrafficWeight `hcl:"traffic_weight,block" validate:"min=1"`
}

type IngressCustomDomain struct {
	// CertificateBindingType: string, optional
	CertificateBindingType terra.StringValue `hcl:"certificate_binding_type,attr"`
	// CertificateId: string, required
	CertificateId terra.StringValue `hcl:"certificate_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type IngressIpSecurityRestriction struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// IpAddressRange: string, required
	IpAddressRange terra.StringValue `hcl:"ip_address_range,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type IngressTrafficWeight struct {
	// Label: string, optional
	Label terra.StringValue `hcl:"label,attr"`
	// LatestRevision: bool, optional
	LatestRevision terra.BoolValue `hcl:"latest_revision,attr"`
	// Percentage: number, required
	Percentage terra.NumberValue `hcl:"percentage,attr" validate:"required"`
	// RevisionSuffix: string, optional
	RevisionSuffix terra.StringValue `hcl:"revision_suffix,attr"`
}

type Registry struct {
	// Identity: string, optional
	Identity terra.StringValue `hcl:"identity,attr"`
	// PasswordSecretName: string, optional
	PasswordSecretName terra.StringValue `hcl:"password_secret_name,attr"`
	// Server: string, required
	Server terra.StringValue `hcl:"server,attr" validate:"required"`
	// Username: string, optional
	Username terra.StringValue `hcl:"username,attr"`
}

type Secret struct {
	// Identity: string, optional
	Identity terra.StringValue `hcl:"identity,attr"`
	// KeyVaultSecretId: string, optional
	KeyVaultSecretId terra.StringValue `hcl:"key_vault_secret_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type Template struct {
	// MaxReplicas: number, optional
	MaxReplicas terra.NumberValue `hcl:"max_replicas,attr"`
	// MinReplicas: number, optional
	MinReplicas terra.NumberValue `hcl:"min_replicas,attr"`
	// RevisionSuffix: string, optional
	RevisionSuffix terra.StringValue `hcl:"revision_suffix,attr"`
	// TemplateAzureQueueScaleRule: min=0
	AzureQueueScaleRule []TemplateAzureQueueScaleRule `hcl:"azure_queue_scale_rule,block" validate:"min=0"`
	// TemplateContainer: min=1
	Container []TemplateContainer `hcl:"container,block" validate:"min=1"`
	// TemplateCustomScaleRule: min=0
	CustomScaleRule []TemplateCustomScaleRule `hcl:"custom_scale_rule,block" validate:"min=0"`
	// TemplateHttpScaleRule: min=0
	HttpScaleRule []TemplateHttpScaleRule `hcl:"http_scale_rule,block" validate:"min=0"`
	// TemplateInitContainer: min=0
	InitContainer []TemplateInitContainer `hcl:"init_container,block" validate:"min=0"`
	// TemplateTcpScaleRule: min=0
	TcpScaleRule []TemplateTcpScaleRule `hcl:"tcp_scale_rule,block" validate:"min=0"`
	// TemplateVolume: min=0
	Volume []TemplateVolume `hcl:"volume,block" validate:"min=0"`
}

type TemplateAzureQueueScaleRule struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueueLength: number, required
	QueueLength terra.NumberValue `hcl:"queue_length,attr" validate:"required"`
	// QueueName: string, required
	QueueName terra.StringValue `hcl:"queue_name,attr" validate:"required"`
	// TemplateAzureQueueScaleRuleAuthentication: min=1
	Authentication []TemplateAzureQueueScaleRuleAuthentication `hcl:"authentication,block" validate:"min=1"`
}

type TemplateAzureQueueScaleRuleAuthentication struct {
	// SecretName: string, required
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
	// TriggerParameter: string, required
	TriggerParameter terra.StringValue `hcl:"trigger_parameter,attr" validate:"required"`
}

type TemplateContainer struct {
	// Args: list of string, optional
	Args terra.ListValue[terra.StringValue] `hcl:"args,attr"`
	// Command: list of string, optional
	Command terra.ListValue[terra.StringValue] `hcl:"command,attr"`
	// Cpu: number, required
	Cpu terra.NumberValue `hcl:"cpu,attr" validate:"required"`
	// Image: string, required
	Image terra.StringValue `hcl:"image,attr" validate:"required"`
	// Memory: string, required
	Memory terra.StringValue `hcl:"memory,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TemplateContainerEnv: min=0
	Env []TemplateContainerEnv `hcl:"env,block" validate:"min=0"`
	// TemplateContainerLivenessProbe: min=0
	LivenessProbe []TemplateContainerLivenessProbe `hcl:"liveness_probe,block" validate:"min=0"`
	// TemplateContainerReadinessProbe: min=0
	ReadinessProbe []TemplateContainerReadinessProbe `hcl:"readiness_probe,block" validate:"min=0"`
	// TemplateContainerStartupProbe: min=0
	StartupProbe []TemplateContainerStartupProbe `hcl:"startup_probe,block" validate:"min=0"`
	// TemplateContainerVolumeMounts: min=0
	VolumeMounts []TemplateContainerVolumeMounts `hcl:"volume_mounts,block" validate:"min=0"`
}

type TemplateContainerEnv struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SecretName: string, optional
	SecretName terra.StringValue `hcl:"secret_name,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type TemplateContainerLivenessProbe struct {
	// FailureCountThreshold: number, optional
	FailureCountThreshold terra.NumberValue `hcl:"failure_count_threshold,attr"`
	// Host: string, optional
	Host terra.StringValue `hcl:"host,attr"`
	// InitialDelay: number, optional
	InitialDelay terra.NumberValue `hcl:"initial_delay,attr"`
	// IntervalSeconds: number, optional
	IntervalSeconds terra.NumberValue `hcl:"interval_seconds,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
	// Timeout: number, optional
	Timeout terra.NumberValue `hcl:"timeout,attr"`
	// Transport: string, required
	Transport terra.StringValue `hcl:"transport,attr" validate:"required"`
	// TemplateContainerLivenessProbeHeader: min=0
	Header []TemplateContainerLivenessProbeHeader `hcl:"header,block" validate:"min=0"`
}

type TemplateContainerLivenessProbeHeader struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type TemplateContainerReadinessProbe struct {
	// FailureCountThreshold: number, optional
	FailureCountThreshold terra.NumberValue `hcl:"failure_count_threshold,attr"`
	// Host: string, optional
	Host terra.StringValue `hcl:"host,attr"`
	// IntervalSeconds: number, optional
	IntervalSeconds terra.NumberValue `hcl:"interval_seconds,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
	// SuccessCountThreshold: number, optional
	SuccessCountThreshold terra.NumberValue `hcl:"success_count_threshold,attr"`
	// Timeout: number, optional
	Timeout terra.NumberValue `hcl:"timeout,attr"`
	// Transport: string, required
	Transport terra.StringValue `hcl:"transport,attr" validate:"required"`
	// TemplateContainerReadinessProbeHeader: min=0
	Header []TemplateContainerReadinessProbeHeader `hcl:"header,block" validate:"min=0"`
}

type TemplateContainerReadinessProbeHeader struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type TemplateContainerStartupProbe struct {
	// FailureCountThreshold: number, optional
	FailureCountThreshold terra.NumberValue `hcl:"failure_count_threshold,attr"`
	// Host: string, optional
	Host terra.StringValue `hcl:"host,attr"`
	// IntervalSeconds: number, optional
	IntervalSeconds terra.NumberValue `hcl:"interval_seconds,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
	// Timeout: number, optional
	Timeout terra.NumberValue `hcl:"timeout,attr"`
	// Transport: string, required
	Transport terra.StringValue `hcl:"transport,attr" validate:"required"`
	// TemplateContainerStartupProbeHeader: min=0
	Header []TemplateContainerStartupProbeHeader `hcl:"header,block" validate:"min=0"`
}

type TemplateContainerStartupProbeHeader struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type TemplateContainerVolumeMounts struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
}

type TemplateCustomScaleRule struct {
	// CustomRuleType: string, required
	CustomRuleType terra.StringValue `hcl:"custom_rule_type,attr" validate:"required"`
	// Metadata: map of string, required
	Metadata terra.MapValue[terra.StringValue] `hcl:"metadata,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TemplateCustomScaleRuleAuthentication: min=0
	Authentication []TemplateCustomScaleRuleAuthentication `hcl:"authentication,block" validate:"min=0"`
}

type TemplateCustomScaleRuleAuthentication struct {
	// SecretName: string, required
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
	// TriggerParameter: string, required
	TriggerParameter terra.StringValue `hcl:"trigger_parameter,attr" validate:"required"`
}

type TemplateHttpScaleRule struct {
	// ConcurrentRequests: string, required
	ConcurrentRequests terra.StringValue `hcl:"concurrent_requests,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TemplateHttpScaleRuleAuthentication: min=0
	Authentication []TemplateHttpScaleRuleAuthentication `hcl:"authentication,block" validate:"min=0"`
}

type TemplateHttpScaleRuleAuthentication struct {
	// SecretName: string, required
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
	// TriggerParameter: string, optional
	TriggerParameter terra.StringValue `hcl:"trigger_parameter,attr"`
}

type TemplateInitContainer struct {
	// Args: list of string, optional
	Args terra.ListValue[terra.StringValue] `hcl:"args,attr"`
	// Command: list of string, optional
	Command terra.ListValue[terra.StringValue] `hcl:"command,attr"`
	// Cpu: number, optional
	Cpu terra.NumberValue `hcl:"cpu,attr"`
	// Image: string, required
	Image terra.StringValue `hcl:"image,attr" validate:"required"`
	// Memory: string, optional
	Memory terra.StringValue `hcl:"memory,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TemplateInitContainerEnv: min=0
	Env []TemplateInitContainerEnv `hcl:"env,block" validate:"min=0"`
	// TemplateInitContainerVolumeMounts: min=0
	VolumeMounts []TemplateInitContainerVolumeMounts `hcl:"volume_mounts,block" validate:"min=0"`
}

type TemplateInitContainerEnv struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SecretName: string, optional
	SecretName terra.StringValue `hcl:"secret_name,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type TemplateInitContainerVolumeMounts struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
}

type TemplateTcpScaleRule struct {
	// ConcurrentRequests: string, required
	ConcurrentRequests terra.StringValue `hcl:"concurrent_requests,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TemplateTcpScaleRuleAuthentication: min=0
	Authentication []TemplateTcpScaleRuleAuthentication `hcl:"authentication,block" validate:"min=0"`
}

type TemplateTcpScaleRuleAuthentication struct {
	// SecretName: string, required
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
	// TriggerParameter: string, optional
	TriggerParameter terra.StringValue `hcl:"trigger_parameter,attr"`
}

type TemplateVolume struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StorageName: string, optional
	StorageName terra.StringValue `hcl:"storage_name,attr"`
	// StorageType: string, optional
	StorageType terra.StringValue `hcl:"storage_type,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type DaprAttributes struct {
	ref terra.Reference
}

func (d DaprAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DaprAttributes) InternalWithRef(ref terra.Reference) DaprAttributes {
	return DaprAttributes{ref: ref}
}

func (d DaprAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DaprAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("app_id"))
}

func (d DaprAttributes) AppPort() terra.NumberValue {
	return terra.ReferenceAsNumber(d.ref.Append("app_port"))
}

func (d DaprAttributes) AppProtocol() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("app_protocol"))
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) IdentityIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i IdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i IdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i IdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type IngressAttributes struct {
	ref terra.Reference
}

func (i IngressAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IngressAttributes) InternalWithRef(ref terra.Reference) IngressAttributes {
	return IngressAttributes{ref: ref}
}

func (i IngressAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IngressAttributes) AllowInsecureConnections() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("allow_insecure_connections"))
}

func (i IngressAttributes) ExposedPort() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("exposed_port"))
}

func (i IngressAttributes) ExternalEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("external_enabled"))
}

func (i IngressAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("fqdn"))
}

func (i IngressAttributes) TargetPort() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("target_port"))
}

func (i IngressAttributes) Transport() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("transport"))
}

func (i IngressAttributes) CustomDomain() terra.ListValue[IngressCustomDomainAttributes] {
	return terra.ReferenceAsList[IngressCustomDomainAttributes](i.ref.Append("custom_domain"))
}

func (i IngressAttributes) IpSecurityRestriction() terra.ListValue[IngressIpSecurityRestrictionAttributes] {
	return terra.ReferenceAsList[IngressIpSecurityRestrictionAttributes](i.ref.Append("ip_security_restriction"))
}

func (i IngressAttributes) TrafficWeight() terra.ListValue[IngressTrafficWeightAttributes] {
	return terra.ReferenceAsList[IngressTrafficWeightAttributes](i.ref.Append("traffic_weight"))
}

type IngressCustomDomainAttributes struct {
	ref terra.Reference
}

func (cd IngressCustomDomainAttributes) InternalRef() (terra.Reference, error) {
	return cd.ref, nil
}

func (cd IngressCustomDomainAttributes) InternalWithRef(ref terra.Reference) IngressCustomDomainAttributes {
	return IngressCustomDomainAttributes{ref: ref}
}

func (cd IngressCustomDomainAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cd.ref.InternalTokens()
}

func (cd IngressCustomDomainAttributes) CertificateBindingType() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("certificate_binding_type"))
}

func (cd IngressCustomDomainAttributes) CertificateId() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("certificate_id"))
}

func (cd IngressCustomDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cd.ref.Append("name"))
}

type IngressIpSecurityRestrictionAttributes struct {
	ref terra.Reference
}

func (isr IngressIpSecurityRestrictionAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr IngressIpSecurityRestrictionAttributes) InternalWithRef(ref terra.Reference) IngressIpSecurityRestrictionAttributes {
	return IngressIpSecurityRestrictionAttributes{ref: ref}
}

func (isr IngressIpSecurityRestrictionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr IngressIpSecurityRestrictionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("action"))
}

func (isr IngressIpSecurityRestrictionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("description"))
}

func (isr IngressIpSecurityRestrictionAttributes) IpAddressRange() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("ip_address_range"))
}

func (isr IngressIpSecurityRestrictionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("name"))
}

type IngressTrafficWeightAttributes struct {
	ref terra.Reference
}

func (tw IngressTrafficWeightAttributes) InternalRef() (terra.Reference, error) {
	return tw.ref, nil
}

func (tw IngressTrafficWeightAttributes) InternalWithRef(ref terra.Reference) IngressTrafficWeightAttributes {
	return IngressTrafficWeightAttributes{ref: ref}
}

func (tw IngressTrafficWeightAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tw.ref.InternalTokens()
}

func (tw IngressTrafficWeightAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(tw.ref.Append("label"))
}

func (tw IngressTrafficWeightAttributes) LatestRevision() terra.BoolValue {
	return terra.ReferenceAsBool(tw.ref.Append("latest_revision"))
}

func (tw IngressTrafficWeightAttributes) Percentage() terra.NumberValue {
	return terra.ReferenceAsNumber(tw.ref.Append("percentage"))
}

func (tw IngressTrafficWeightAttributes) RevisionSuffix() terra.StringValue {
	return terra.ReferenceAsString(tw.ref.Append("revision_suffix"))
}

type RegistryAttributes struct {
	ref terra.Reference
}

func (r RegistryAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RegistryAttributes) InternalWithRef(ref terra.Reference) RegistryAttributes {
	return RegistryAttributes{ref: ref}
}

func (r RegistryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RegistryAttributes) Identity() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("identity"))
}

func (r RegistryAttributes) PasswordSecretName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("password_secret_name"))
}

func (r RegistryAttributes) Server() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("server"))
}

func (r RegistryAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("username"))
}

type SecretAttributes struct {
	ref terra.Reference
}

func (s SecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SecretAttributes) InternalWithRef(ref terra.Reference) SecretAttributes {
	return SecretAttributes{ref: ref}
}

func (s SecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SecretAttributes) Identity() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("identity"))
}

func (s SecretAttributes) KeyVaultSecretId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("key_vault_secret_id"))
}

func (s SecretAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s SecretAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("value"))
}

type TemplateAttributes struct {
	ref terra.Reference
}

func (t TemplateAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TemplateAttributes) InternalWithRef(ref terra.Reference) TemplateAttributes {
	return TemplateAttributes{ref: ref}
}

func (t TemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TemplateAttributes) MaxReplicas() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("max_replicas"))
}

func (t TemplateAttributes) MinReplicas() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("min_replicas"))
}

func (t TemplateAttributes) RevisionSuffix() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("revision_suffix"))
}

func (t TemplateAttributes) AzureQueueScaleRule() terra.ListValue[TemplateAzureQueueScaleRuleAttributes] {
	return terra.ReferenceAsList[TemplateAzureQueueScaleRuleAttributes](t.ref.Append("azure_queue_scale_rule"))
}

func (t TemplateAttributes) Container() terra.ListValue[TemplateContainerAttributes] {
	return terra.ReferenceAsList[TemplateContainerAttributes](t.ref.Append("container"))
}

func (t TemplateAttributes) CustomScaleRule() terra.ListValue[TemplateCustomScaleRuleAttributes] {
	return terra.ReferenceAsList[TemplateCustomScaleRuleAttributes](t.ref.Append("custom_scale_rule"))
}

func (t TemplateAttributes) HttpScaleRule() terra.ListValue[TemplateHttpScaleRuleAttributes] {
	return terra.ReferenceAsList[TemplateHttpScaleRuleAttributes](t.ref.Append("http_scale_rule"))
}

func (t TemplateAttributes) InitContainer() terra.ListValue[TemplateInitContainerAttributes] {
	return terra.ReferenceAsList[TemplateInitContainerAttributes](t.ref.Append("init_container"))
}

func (t TemplateAttributes) TcpScaleRule() terra.ListValue[TemplateTcpScaleRuleAttributes] {
	return terra.ReferenceAsList[TemplateTcpScaleRuleAttributes](t.ref.Append("tcp_scale_rule"))
}

func (t TemplateAttributes) Volume() terra.ListValue[TemplateVolumeAttributes] {
	return terra.ReferenceAsList[TemplateVolumeAttributes](t.ref.Append("volume"))
}

type TemplateAzureQueueScaleRuleAttributes struct {
	ref terra.Reference
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) InternalRef() (terra.Reference, error) {
	return aqsr.ref, nil
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) InternalWithRef(ref terra.Reference) TemplateAzureQueueScaleRuleAttributes {
	return TemplateAzureQueueScaleRuleAttributes{ref: ref}
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aqsr.ref.InternalTokens()
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aqsr.ref.Append("name"))
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) QueueLength() terra.NumberValue {
	return terra.ReferenceAsNumber(aqsr.ref.Append("queue_length"))
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) QueueName() terra.StringValue {
	return terra.ReferenceAsString(aqsr.ref.Append("queue_name"))
}

func (aqsr TemplateAzureQueueScaleRuleAttributes) Authentication() terra.ListValue[TemplateAzureQueueScaleRuleAuthenticationAttributes] {
	return terra.ReferenceAsList[TemplateAzureQueueScaleRuleAuthenticationAttributes](aqsr.ref.Append("authentication"))
}

type TemplateAzureQueueScaleRuleAuthenticationAttributes struct {
	ref terra.Reference
}

func (a TemplateAzureQueueScaleRuleAuthenticationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a TemplateAzureQueueScaleRuleAuthenticationAttributes) InternalWithRef(ref terra.Reference) TemplateAzureQueueScaleRuleAuthenticationAttributes {
	return TemplateAzureQueueScaleRuleAuthenticationAttributes{ref: ref}
}

func (a TemplateAzureQueueScaleRuleAuthenticationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a TemplateAzureQueueScaleRuleAuthenticationAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("secret_name"))
}

func (a TemplateAzureQueueScaleRuleAuthenticationAttributes) TriggerParameter() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("trigger_parameter"))
}

type TemplateContainerAttributes struct {
	ref terra.Reference
}

func (c TemplateContainerAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c TemplateContainerAttributes) InternalWithRef(ref terra.Reference) TemplateContainerAttributes {
	return TemplateContainerAttributes{ref: ref}
}

func (c TemplateContainerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c TemplateContainerAttributes) Args() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("args"))
}

func (c TemplateContainerAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("command"))
}

func (c TemplateContainerAttributes) Cpu() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("cpu"))
}

func (c TemplateContainerAttributes) EphemeralStorage() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("ephemeral_storage"))
}

func (c TemplateContainerAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image"))
}

func (c TemplateContainerAttributes) Memory() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("memory"))
}

func (c TemplateContainerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c TemplateContainerAttributes) Env() terra.ListValue[TemplateContainerEnvAttributes] {
	return terra.ReferenceAsList[TemplateContainerEnvAttributes](c.ref.Append("env"))
}

func (c TemplateContainerAttributes) LivenessProbe() terra.ListValue[TemplateContainerLivenessProbeAttributes] {
	return terra.ReferenceAsList[TemplateContainerLivenessProbeAttributes](c.ref.Append("liveness_probe"))
}

func (c TemplateContainerAttributes) ReadinessProbe() terra.ListValue[TemplateContainerReadinessProbeAttributes] {
	return terra.ReferenceAsList[TemplateContainerReadinessProbeAttributes](c.ref.Append("readiness_probe"))
}

func (c TemplateContainerAttributes) StartupProbe() terra.ListValue[TemplateContainerStartupProbeAttributes] {
	return terra.ReferenceAsList[TemplateContainerStartupProbeAttributes](c.ref.Append("startup_probe"))
}

func (c TemplateContainerAttributes) VolumeMounts() terra.ListValue[TemplateContainerVolumeMountsAttributes] {
	return terra.ReferenceAsList[TemplateContainerVolumeMountsAttributes](c.ref.Append("volume_mounts"))
}

type TemplateContainerEnvAttributes struct {
	ref terra.Reference
}

func (e TemplateContainerEnvAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e TemplateContainerEnvAttributes) InternalWithRef(ref terra.Reference) TemplateContainerEnvAttributes {
	return TemplateContainerEnvAttributes{ref: ref}
}

func (e TemplateContainerEnvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e TemplateContainerEnvAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e TemplateContainerEnvAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("secret_name"))
}

func (e TemplateContainerEnvAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type TemplateContainerLivenessProbeAttributes struct {
	ref terra.Reference
}

func (lp TemplateContainerLivenessProbeAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp TemplateContainerLivenessProbeAttributes) InternalWithRef(ref terra.Reference) TemplateContainerLivenessProbeAttributes {
	return TemplateContainerLivenessProbeAttributes{ref: ref}
}

func (lp TemplateContainerLivenessProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp TemplateContainerLivenessProbeAttributes) FailureCountThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("failure_count_threshold"))
}

func (lp TemplateContainerLivenessProbeAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("host"))
}

func (lp TemplateContainerLivenessProbeAttributes) InitialDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("initial_delay"))
}

func (lp TemplateContainerLivenessProbeAttributes) IntervalSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("interval_seconds"))
}

func (lp TemplateContainerLivenessProbeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("path"))
}

func (lp TemplateContainerLivenessProbeAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("port"))
}

func (lp TemplateContainerLivenessProbeAttributes) TerminationGracePeriodSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("termination_grace_period_seconds"))
}

func (lp TemplateContainerLivenessProbeAttributes) Timeout() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("timeout"))
}

func (lp TemplateContainerLivenessProbeAttributes) Transport() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("transport"))
}

func (lp TemplateContainerLivenessProbeAttributes) Header() terra.ListValue[TemplateContainerLivenessProbeHeaderAttributes] {
	return terra.ReferenceAsList[TemplateContainerLivenessProbeHeaderAttributes](lp.ref.Append("header"))
}

type TemplateContainerLivenessProbeHeaderAttributes struct {
	ref terra.Reference
}

func (h TemplateContainerLivenessProbeHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h TemplateContainerLivenessProbeHeaderAttributes) InternalWithRef(ref terra.Reference) TemplateContainerLivenessProbeHeaderAttributes {
	return TemplateContainerLivenessProbeHeaderAttributes{ref: ref}
}

func (h TemplateContainerLivenessProbeHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h TemplateContainerLivenessProbeHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h TemplateContainerLivenessProbeHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type TemplateContainerReadinessProbeAttributes struct {
	ref terra.Reference
}

func (rp TemplateContainerReadinessProbeAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp TemplateContainerReadinessProbeAttributes) InternalWithRef(ref terra.Reference) TemplateContainerReadinessProbeAttributes {
	return TemplateContainerReadinessProbeAttributes{ref: ref}
}

func (rp TemplateContainerReadinessProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp TemplateContainerReadinessProbeAttributes) FailureCountThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("failure_count_threshold"))
}

func (rp TemplateContainerReadinessProbeAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("host"))
}

func (rp TemplateContainerReadinessProbeAttributes) IntervalSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("interval_seconds"))
}

func (rp TemplateContainerReadinessProbeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("path"))
}

func (rp TemplateContainerReadinessProbeAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("port"))
}

func (rp TemplateContainerReadinessProbeAttributes) SuccessCountThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("success_count_threshold"))
}

func (rp TemplateContainerReadinessProbeAttributes) Timeout() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("timeout"))
}

func (rp TemplateContainerReadinessProbeAttributes) Transport() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("transport"))
}

func (rp TemplateContainerReadinessProbeAttributes) Header() terra.ListValue[TemplateContainerReadinessProbeHeaderAttributes] {
	return terra.ReferenceAsList[TemplateContainerReadinessProbeHeaderAttributes](rp.ref.Append("header"))
}

type TemplateContainerReadinessProbeHeaderAttributes struct {
	ref terra.Reference
}

func (h TemplateContainerReadinessProbeHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h TemplateContainerReadinessProbeHeaderAttributes) InternalWithRef(ref terra.Reference) TemplateContainerReadinessProbeHeaderAttributes {
	return TemplateContainerReadinessProbeHeaderAttributes{ref: ref}
}

func (h TemplateContainerReadinessProbeHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h TemplateContainerReadinessProbeHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h TemplateContainerReadinessProbeHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type TemplateContainerStartupProbeAttributes struct {
	ref terra.Reference
}

func (sp TemplateContainerStartupProbeAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp TemplateContainerStartupProbeAttributes) InternalWithRef(ref terra.Reference) TemplateContainerStartupProbeAttributes {
	return TemplateContainerStartupProbeAttributes{ref: ref}
}

func (sp TemplateContainerStartupProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp TemplateContainerStartupProbeAttributes) FailureCountThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("failure_count_threshold"))
}

func (sp TemplateContainerStartupProbeAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("host"))
}

func (sp TemplateContainerStartupProbeAttributes) IntervalSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("interval_seconds"))
}

func (sp TemplateContainerStartupProbeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("path"))
}

func (sp TemplateContainerStartupProbeAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("port"))
}

func (sp TemplateContainerStartupProbeAttributes) TerminationGracePeriodSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("termination_grace_period_seconds"))
}

func (sp TemplateContainerStartupProbeAttributes) Timeout() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("timeout"))
}

func (sp TemplateContainerStartupProbeAttributes) Transport() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("transport"))
}

func (sp TemplateContainerStartupProbeAttributes) Header() terra.ListValue[TemplateContainerStartupProbeHeaderAttributes] {
	return terra.ReferenceAsList[TemplateContainerStartupProbeHeaderAttributes](sp.ref.Append("header"))
}

type TemplateContainerStartupProbeHeaderAttributes struct {
	ref terra.Reference
}

func (h TemplateContainerStartupProbeHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h TemplateContainerStartupProbeHeaderAttributes) InternalWithRef(ref terra.Reference) TemplateContainerStartupProbeHeaderAttributes {
	return TemplateContainerStartupProbeHeaderAttributes{ref: ref}
}

func (h TemplateContainerStartupProbeHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h TemplateContainerStartupProbeHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("name"))
}

func (h TemplateContainerStartupProbeHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type TemplateContainerVolumeMountsAttributes struct {
	ref terra.Reference
}

func (vm TemplateContainerVolumeMountsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm TemplateContainerVolumeMountsAttributes) InternalWithRef(ref terra.Reference) TemplateContainerVolumeMountsAttributes {
	return TemplateContainerVolumeMountsAttributes{ref: ref}
}

func (vm TemplateContainerVolumeMountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm TemplateContainerVolumeMountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("name"))
}

func (vm TemplateContainerVolumeMountsAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("path"))
}

type TemplateCustomScaleRuleAttributes struct {
	ref terra.Reference
}

func (csr TemplateCustomScaleRuleAttributes) InternalRef() (terra.Reference, error) {
	return csr.ref, nil
}

func (csr TemplateCustomScaleRuleAttributes) InternalWithRef(ref terra.Reference) TemplateCustomScaleRuleAttributes {
	return TemplateCustomScaleRuleAttributes{ref: ref}
}

func (csr TemplateCustomScaleRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csr.ref.InternalTokens()
}

func (csr TemplateCustomScaleRuleAttributes) CustomRuleType() terra.StringValue {
	return terra.ReferenceAsString(csr.ref.Append("custom_rule_type"))
}

func (csr TemplateCustomScaleRuleAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](csr.ref.Append("metadata"))
}

func (csr TemplateCustomScaleRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(csr.ref.Append("name"))
}

func (csr TemplateCustomScaleRuleAttributes) Authentication() terra.ListValue[TemplateCustomScaleRuleAuthenticationAttributes] {
	return terra.ReferenceAsList[TemplateCustomScaleRuleAuthenticationAttributes](csr.ref.Append("authentication"))
}

type TemplateCustomScaleRuleAuthenticationAttributes struct {
	ref terra.Reference
}

func (a TemplateCustomScaleRuleAuthenticationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a TemplateCustomScaleRuleAuthenticationAttributes) InternalWithRef(ref terra.Reference) TemplateCustomScaleRuleAuthenticationAttributes {
	return TemplateCustomScaleRuleAuthenticationAttributes{ref: ref}
}

func (a TemplateCustomScaleRuleAuthenticationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a TemplateCustomScaleRuleAuthenticationAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("secret_name"))
}

func (a TemplateCustomScaleRuleAuthenticationAttributes) TriggerParameter() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("trigger_parameter"))
}

type TemplateHttpScaleRuleAttributes struct {
	ref terra.Reference
}

func (hsr TemplateHttpScaleRuleAttributes) InternalRef() (terra.Reference, error) {
	return hsr.ref, nil
}

func (hsr TemplateHttpScaleRuleAttributes) InternalWithRef(ref terra.Reference) TemplateHttpScaleRuleAttributes {
	return TemplateHttpScaleRuleAttributes{ref: ref}
}

func (hsr TemplateHttpScaleRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hsr.ref.InternalTokens()
}

func (hsr TemplateHttpScaleRuleAttributes) ConcurrentRequests() terra.StringValue {
	return terra.ReferenceAsString(hsr.ref.Append("concurrent_requests"))
}

func (hsr TemplateHttpScaleRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(hsr.ref.Append("name"))
}

func (hsr TemplateHttpScaleRuleAttributes) Authentication() terra.ListValue[TemplateHttpScaleRuleAuthenticationAttributes] {
	return terra.ReferenceAsList[TemplateHttpScaleRuleAuthenticationAttributes](hsr.ref.Append("authentication"))
}

type TemplateHttpScaleRuleAuthenticationAttributes struct {
	ref terra.Reference
}

func (a TemplateHttpScaleRuleAuthenticationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a TemplateHttpScaleRuleAuthenticationAttributes) InternalWithRef(ref terra.Reference) TemplateHttpScaleRuleAuthenticationAttributes {
	return TemplateHttpScaleRuleAuthenticationAttributes{ref: ref}
}

func (a TemplateHttpScaleRuleAuthenticationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a TemplateHttpScaleRuleAuthenticationAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("secret_name"))
}

func (a TemplateHttpScaleRuleAuthenticationAttributes) TriggerParameter() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("trigger_parameter"))
}

type TemplateInitContainerAttributes struct {
	ref terra.Reference
}

func (ic TemplateInitContainerAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic TemplateInitContainerAttributes) InternalWithRef(ref terra.Reference) TemplateInitContainerAttributes {
	return TemplateInitContainerAttributes{ref: ref}
}

func (ic TemplateInitContainerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic TemplateInitContainerAttributes) Args() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ic.ref.Append("args"))
}

func (ic TemplateInitContainerAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ic.ref.Append("command"))
}

func (ic TemplateInitContainerAttributes) Cpu() terra.NumberValue {
	return terra.ReferenceAsNumber(ic.ref.Append("cpu"))
}

func (ic TemplateInitContainerAttributes) EphemeralStorage() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("ephemeral_storage"))
}

func (ic TemplateInitContainerAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("image"))
}

func (ic TemplateInitContainerAttributes) Memory() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("memory"))
}

func (ic TemplateInitContainerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("name"))
}

func (ic TemplateInitContainerAttributes) Env() terra.ListValue[TemplateInitContainerEnvAttributes] {
	return terra.ReferenceAsList[TemplateInitContainerEnvAttributes](ic.ref.Append("env"))
}

func (ic TemplateInitContainerAttributes) VolumeMounts() terra.ListValue[TemplateInitContainerVolumeMountsAttributes] {
	return terra.ReferenceAsList[TemplateInitContainerVolumeMountsAttributes](ic.ref.Append("volume_mounts"))
}

type TemplateInitContainerEnvAttributes struct {
	ref terra.Reference
}

func (e TemplateInitContainerEnvAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e TemplateInitContainerEnvAttributes) InternalWithRef(ref terra.Reference) TemplateInitContainerEnvAttributes {
	return TemplateInitContainerEnvAttributes{ref: ref}
}

func (e TemplateInitContainerEnvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e TemplateInitContainerEnvAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e TemplateInitContainerEnvAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("secret_name"))
}

func (e TemplateInitContainerEnvAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type TemplateInitContainerVolumeMountsAttributes struct {
	ref terra.Reference
}

func (vm TemplateInitContainerVolumeMountsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm TemplateInitContainerVolumeMountsAttributes) InternalWithRef(ref terra.Reference) TemplateInitContainerVolumeMountsAttributes {
	return TemplateInitContainerVolumeMountsAttributes{ref: ref}
}

func (vm TemplateInitContainerVolumeMountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm TemplateInitContainerVolumeMountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("name"))
}

func (vm TemplateInitContainerVolumeMountsAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("path"))
}

type TemplateTcpScaleRuleAttributes struct {
	ref terra.Reference
}

func (tsr TemplateTcpScaleRuleAttributes) InternalRef() (terra.Reference, error) {
	return tsr.ref, nil
}

func (tsr TemplateTcpScaleRuleAttributes) InternalWithRef(ref terra.Reference) TemplateTcpScaleRuleAttributes {
	return TemplateTcpScaleRuleAttributes{ref: ref}
}

func (tsr TemplateTcpScaleRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsr.ref.InternalTokens()
}

func (tsr TemplateTcpScaleRuleAttributes) ConcurrentRequests() terra.StringValue {
	return terra.ReferenceAsString(tsr.ref.Append("concurrent_requests"))
}

func (tsr TemplateTcpScaleRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tsr.ref.Append("name"))
}

func (tsr TemplateTcpScaleRuleAttributes) Authentication() terra.ListValue[TemplateTcpScaleRuleAuthenticationAttributes] {
	return terra.ReferenceAsList[TemplateTcpScaleRuleAuthenticationAttributes](tsr.ref.Append("authentication"))
}

type TemplateTcpScaleRuleAuthenticationAttributes struct {
	ref terra.Reference
}

func (a TemplateTcpScaleRuleAuthenticationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a TemplateTcpScaleRuleAuthenticationAttributes) InternalWithRef(ref terra.Reference) TemplateTcpScaleRuleAuthenticationAttributes {
	return TemplateTcpScaleRuleAuthenticationAttributes{ref: ref}
}

func (a TemplateTcpScaleRuleAuthenticationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a TemplateTcpScaleRuleAuthenticationAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("secret_name"))
}

func (a TemplateTcpScaleRuleAuthenticationAttributes) TriggerParameter() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("trigger_parameter"))
}

type TemplateVolumeAttributes struct {
	ref terra.Reference
}

func (v TemplateVolumeAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v TemplateVolumeAttributes) InternalWithRef(ref terra.Reference) TemplateVolumeAttributes {
	return TemplateVolumeAttributes{ref: ref}
}

func (v TemplateVolumeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v TemplateVolumeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v TemplateVolumeAttributes) StorageName() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("storage_name"))
}

func (v TemplateVolumeAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("storage_type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DaprState struct {
	AppId       string  `json:"app_id"`
	AppPort     float64 `json:"app_port"`
	AppProtocol string  `json:"app_protocol"`
}

type IdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	PrincipalId string   `json:"principal_id"`
	TenantId    string   `json:"tenant_id"`
	Type        string   `json:"type"`
}

type IngressState struct {
	AllowInsecureConnections bool                                `json:"allow_insecure_connections"`
	ExposedPort              float64                             `json:"exposed_port"`
	ExternalEnabled          bool                                `json:"external_enabled"`
	Fqdn                     string                              `json:"fqdn"`
	TargetPort               float64                             `json:"target_port"`
	Transport                string                              `json:"transport"`
	CustomDomain             []IngressCustomDomainState          `json:"custom_domain"`
	IpSecurityRestriction    []IngressIpSecurityRestrictionState `json:"ip_security_restriction"`
	TrafficWeight            []IngressTrafficWeightState         `json:"traffic_weight"`
}

type IngressCustomDomainState struct {
	CertificateBindingType string `json:"certificate_binding_type"`
	CertificateId          string `json:"certificate_id"`
	Name                   string `json:"name"`
}

type IngressIpSecurityRestrictionState struct {
	Action         string `json:"action"`
	Description    string `json:"description"`
	IpAddressRange string `json:"ip_address_range"`
	Name           string `json:"name"`
}

type IngressTrafficWeightState struct {
	Label          string  `json:"label"`
	LatestRevision bool    `json:"latest_revision"`
	Percentage     float64 `json:"percentage"`
	RevisionSuffix string  `json:"revision_suffix"`
}

type RegistryState struct {
	Identity           string `json:"identity"`
	PasswordSecretName string `json:"password_secret_name"`
	Server             string `json:"server"`
	Username           string `json:"username"`
}

type SecretState struct {
	Identity         string `json:"identity"`
	KeyVaultSecretId string `json:"key_vault_secret_id"`
	Name             string `json:"name"`
	Value            string `json:"value"`
}

type TemplateState struct {
	MaxReplicas         float64                            `json:"max_replicas"`
	MinReplicas         float64                            `json:"min_replicas"`
	RevisionSuffix      string                             `json:"revision_suffix"`
	AzureQueueScaleRule []TemplateAzureQueueScaleRuleState `json:"azure_queue_scale_rule"`
	Container           []TemplateContainerState           `json:"container"`
	CustomScaleRule     []TemplateCustomScaleRuleState     `json:"custom_scale_rule"`
	HttpScaleRule       []TemplateHttpScaleRuleState       `json:"http_scale_rule"`
	InitContainer       []TemplateInitContainerState       `json:"init_container"`
	TcpScaleRule        []TemplateTcpScaleRuleState        `json:"tcp_scale_rule"`
	Volume              []TemplateVolumeState              `json:"volume"`
}

type TemplateAzureQueueScaleRuleState struct {
	Name           string                                           `json:"name"`
	QueueLength    float64                                          `json:"queue_length"`
	QueueName      string                                           `json:"queue_name"`
	Authentication []TemplateAzureQueueScaleRuleAuthenticationState `json:"authentication"`
}

type TemplateAzureQueueScaleRuleAuthenticationState struct {
	SecretName       string `json:"secret_name"`
	TriggerParameter string `json:"trigger_parameter"`
}

type TemplateContainerState struct {
	Args             []string                               `json:"args"`
	Command          []string                               `json:"command"`
	Cpu              float64                                `json:"cpu"`
	EphemeralStorage string                                 `json:"ephemeral_storage"`
	Image            string                                 `json:"image"`
	Memory           string                                 `json:"memory"`
	Name             string                                 `json:"name"`
	Env              []TemplateContainerEnvState            `json:"env"`
	LivenessProbe    []TemplateContainerLivenessProbeState  `json:"liveness_probe"`
	ReadinessProbe   []TemplateContainerReadinessProbeState `json:"readiness_probe"`
	StartupProbe     []TemplateContainerStartupProbeState   `json:"startup_probe"`
	VolumeMounts     []TemplateContainerVolumeMountsState   `json:"volume_mounts"`
}

type TemplateContainerEnvState struct {
	Name       string `json:"name"`
	SecretName string `json:"secret_name"`
	Value      string `json:"value"`
}

type TemplateContainerLivenessProbeState struct {
	FailureCountThreshold         float64                                     `json:"failure_count_threshold"`
	Host                          string                                      `json:"host"`
	InitialDelay                  float64                                     `json:"initial_delay"`
	IntervalSeconds               float64                                     `json:"interval_seconds"`
	Path                          string                                      `json:"path"`
	Port                          float64                                     `json:"port"`
	TerminationGracePeriodSeconds float64                                     `json:"termination_grace_period_seconds"`
	Timeout                       float64                                     `json:"timeout"`
	Transport                     string                                      `json:"transport"`
	Header                        []TemplateContainerLivenessProbeHeaderState `json:"header"`
}

type TemplateContainerLivenessProbeHeaderState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TemplateContainerReadinessProbeState struct {
	FailureCountThreshold float64                                      `json:"failure_count_threshold"`
	Host                  string                                       `json:"host"`
	IntervalSeconds       float64                                      `json:"interval_seconds"`
	Path                  string                                       `json:"path"`
	Port                  float64                                      `json:"port"`
	SuccessCountThreshold float64                                      `json:"success_count_threshold"`
	Timeout               float64                                      `json:"timeout"`
	Transport             string                                       `json:"transport"`
	Header                []TemplateContainerReadinessProbeHeaderState `json:"header"`
}

type TemplateContainerReadinessProbeHeaderState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TemplateContainerStartupProbeState struct {
	FailureCountThreshold         float64                                    `json:"failure_count_threshold"`
	Host                          string                                     `json:"host"`
	IntervalSeconds               float64                                    `json:"interval_seconds"`
	Path                          string                                     `json:"path"`
	Port                          float64                                    `json:"port"`
	TerminationGracePeriodSeconds float64                                    `json:"termination_grace_period_seconds"`
	Timeout                       float64                                    `json:"timeout"`
	Transport                     string                                     `json:"transport"`
	Header                        []TemplateContainerStartupProbeHeaderState `json:"header"`
}

type TemplateContainerStartupProbeHeaderState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TemplateContainerVolumeMountsState struct {
	Name string `json:"name"`
	Path string `json:"path"`
}

type TemplateCustomScaleRuleState struct {
	CustomRuleType string                                       `json:"custom_rule_type"`
	Metadata       map[string]string                            `json:"metadata"`
	Name           string                                       `json:"name"`
	Authentication []TemplateCustomScaleRuleAuthenticationState `json:"authentication"`
}

type TemplateCustomScaleRuleAuthenticationState struct {
	SecretName       string `json:"secret_name"`
	TriggerParameter string `json:"trigger_parameter"`
}

type TemplateHttpScaleRuleState struct {
	ConcurrentRequests string                                     `json:"concurrent_requests"`
	Name               string                                     `json:"name"`
	Authentication     []TemplateHttpScaleRuleAuthenticationState `json:"authentication"`
}

type TemplateHttpScaleRuleAuthenticationState struct {
	SecretName       string `json:"secret_name"`
	TriggerParameter string `json:"trigger_parameter"`
}

type TemplateInitContainerState struct {
	Args             []string                                 `json:"args"`
	Command          []string                                 `json:"command"`
	Cpu              float64                                  `json:"cpu"`
	EphemeralStorage string                                   `json:"ephemeral_storage"`
	Image            string                                   `json:"image"`
	Memory           string                                   `json:"memory"`
	Name             string                                   `json:"name"`
	Env              []TemplateInitContainerEnvState          `json:"env"`
	VolumeMounts     []TemplateInitContainerVolumeMountsState `json:"volume_mounts"`
}

type TemplateInitContainerEnvState struct {
	Name       string `json:"name"`
	SecretName string `json:"secret_name"`
	Value      string `json:"value"`
}

type TemplateInitContainerVolumeMountsState struct {
	Name string `json:"name"`
	Path string `json:"path"`
}

type TemplateTcpScaleRuleState struct {
	ConcurrentRequests string                                    `json:"concurrent_requests"`
	Name               string                                    `json:"name"`
	Authentication     []TemplateTcpScaleRuleAuthenticationState `json:"authentication"`
}

type TemplateTcpScaleRuleAuthenticationState struct {
	SecretName       string `json:"secret_name"`
	TriggerParameter string `json:"trigger_parameter"`
}

type TemplateVolumeState struct {
	Name        string `json:"name"`
	StorageName string `json:"storage_name"`
	StorageType string `json:"storage_type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
