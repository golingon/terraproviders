// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_container_app

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_container_app.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermContainerAppState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aca *Resource) Type() string {
	return "azurerm_container_app"
}

// LocalName returns the local name for [Resource].
func (aca *Resource) LocalName() string {
	return aca.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aca *Resource) Configuration() interface{} {
	return aca.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aca *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aca)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aca *Resource) Dependencies() terra.Dependencies {
	return aca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aca *Resource) LifecycleManagement() *terra.Lifecycle {
	return aca.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aca *Resource) Attributes() azurermContainerAppAttributes {
	return azurermContainerAppAttributes{ref: terra.ReferenceResource(aca)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aca *Resource) ImportState(state io.Reader) error {
	aca.state = &azurermContainerAppState{}
	if err := json.NewDecoder(state).Decode(aca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aca.Type(), aca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aca *Resource) State() (*azurermContainerAppState, bool) {
	return aca.state, aca.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aca *Resource) StateMust() *azurermContainerAppState {
	if aca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aca.Type(), aca.LocalName()))
	}
	return aca.state
}

// Args contains the configurations for azurerm_container_app.
type Args struct {
	// ContainerAppEnvironmentId: string, required
	ContainerAppEnvironmentId terra.StringValue `hcl:"container_app_environment_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RevisionMode: string, required
	RevisionMode terra.StringValue `hcl:"revision_mode,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// WorkloadProfileName: string, optional
	WorkloadProfileName terra.StringValue `hcl:"workload_profile_name,attr"`
	// Dapr: optional
	Dapr *Dapr `hcl:"dapr,block"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Ingress: optional
	Ingress *Ingress `hcl:"ingress,block"`
	// Registry: min=0
	Registry []Registry `hcl:"registry,block" validate:"min=0"`
	// Secret: min=0
	Secret []Secret `hcl:"secret,block" validate:"min=0"`
	// Template: required
	Template *Template `hcl:"template,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermContainerAppAttributes struct {
	ref terra.Reference
}

// ContainerAppEnvironmentId returns a reference to field container_app_environment_id of azurerm_container_app.
func (aca azurermContainerAppAttributes) ContainerAppEnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("container_app_environment_id"))
}

// CustomDomainVerificationId returns a reference to field custom_domain_verification_id of azurerm_container_app.
func (aca azurermContainerAppAttributes) CustomDomainVerificationId() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("custom_domain_verification_id"))
}

// Id returns a reference to field id of azurerm_container_app.
func (aca azurermContainerAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("id"))
}

// LatestRevisionFqdn returns a reference to field latest_revision_fqdn of azurerm_container_app.
func (aca azurermContainerAppAttributes) LatestRevisionFqdn() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("latest_revision_fqdn"))
}

// LatestRevisionName returns a reference to field latest_revision_name of azurerm_container_app.
func (aca azurermContainerAppAttributes) LatestRevisionName() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("latest_revision_name"))
}

// Location returns a reference to field location of azurerm_container_app.
func (aca azurermContainerAppAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_container_app.
func (aca azurermContainerAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("name"))
}

// OutboundIpAddresses returns a reference to field outbound_ip_addresses of azurerm_container_app.
func (aca azurermContainerAppAttributes) OutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aca.ref.Append("outbound_ip_addresses"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_container_app.
func (aca azurermContainerAppAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("resource_group_name"))
}

// RevisionMode returns a reference to field revision_mode of azurerm_container_app.
func (aca azurermContainerAppAttributes) RevisionMode() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("revision_mode"))
}

// Tags returns a reference to field tags of azurerm_container_app.
func (aca azurermContainerAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aca.ref.Append("tags"))
}

// WorkloadProfileName returns a reference to field workload_profile_name of azurerm_container_app.
func (aca azurermContainerAppAttributes) WorkloadProfileName() terra.StringValue {
	return terra.ReferenceAsString(aca.ref.Append("workload_profile_name"))
}

func (aca azurermContainerAppAttributes) Dapr() terra.ListValue[DaprAttributes] {
	return terra.ReferenceAsList[DaprAttributes](aca.ref.Append("dapr"))
}

func (aca azurermContainerAppAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](aca.ref.Append("identity"))
}

func (aca azurermContainerAppAttributes) Ingress() terra.ListValue[IngressAttributes] {
	return terra.ReferenceAsList[IngressAttributes](aca.ref.Append("ingress"))
}

func (aca azurermContainerAppAttributes) Registry() terra.ListValue[RegistryAttributes] {
	return terra.ReferenceAsList[RegistryAttributes](aca.ref.Append("registry"))
}

func (aca azurermContainerAppAttributes) Secret() terra.SetValue[SecretAttributes] {
	return terra.ReferenceAsSet[SecretAttributes](aca.ref.Append("secret"))
}

func (aca azurermContainerAppAttributes) Template() terra.ListValue[TemplateAttributes] {
	return terra.ReferenceAsList[TemplateAttributes](aca.ref.Append("template"))
}

func (aca azurermContainerAppAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aca.ref.Append("timeouts"))
}

type azurermContainerAppState struct {
	ContainerAppEnvironmentId  string            `json:"container_app_environment_id"`
	CustomDomainVerificationId string            `json:"custom_domain_verification_id"`
	Id                         string            `json:"id"`
	LatestRevisionFqdn         string            `json:"latest_revision_fqdn"`
	LatestRevisionName         string            `json:"latest_revision_name"`
	Location                   string            `json:"location"`
	Name                       string            `json:"name"`
	OutboundIpAddresses        []string          `json:"outbound_ip_addresses"`
	ResourceGroupName          string            `json:"resource_group_name"`
	RevisionMode               string            `json:"revision_mode"`
	Tags                       map[string]string `json:"tags"`
	WorkloadProfileName        string            `json:"workload_profile_name"`
	Dapr                       []DaprState       `json:"dapr"`
	Identity                   []IdentityState   `json:"identity"`
	Ingress                    []IngressState    `json:"ingress"`
	Registry                   []RegistryState   `json:"registry"`
	Secret                     []SecretState     `json:"secret"`
	Template                   []TemplateState   `json:"template"`
	Timeouts                   *TimeoutsState    `json:"timeouts"`
}
