// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mobile_network_service

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_mobile_network_service.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMobileNetworkServiceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amns *Resource) Type() string {
	return "azurerm_mobile_network_service"
}

// LocalName returns the local name for [Resource].
func (amns *Resource) LocalName() string {
	return amns.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amns *Resource) Configuration() interface{} {
	return amns.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amns *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amns)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amns *Resource) Dependencies() terra.Dependencies {
	return amns.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amns *Resource) LifecycleManagement() *terra.Lifecycle {
	return amns.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amns *Resource) Attributes() azurermMobileNetworkServiceAttributes {
	return azurermMobileNetworkServiceAttributes{ref: terra.ReferenceResource(amns)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amns *Resource) ImportState(state io.Reader) error {
	amns.state = &azurermMobileNetworkServiceState{}
	if err := json.NewDecoder(state).Decode(amns.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amns.Type(), amns.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amns *Resource) State() (*azurermMobileNetworkServiceState, bool) {
	return amns.state, amns.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amns *Resource) StateMust() *azurermMobileNetworkServiceState {
	if amns.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amns.Type(), amns.LocalName()))
	}
	return amns.state
}

// Args contains the configurations for azurerm_mobile_network_service.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MobileNetworkId: string, required
	MobileNetworkId terra.StringValue `hcl:"mobile_network_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServicePrecedence: number, required
	ServicePrecedence terra.NumberValue `hcl:"service_precedence,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// PccRule: min=1
	PccRule []PccRule `hcl:"pcc_rule,block" validate:"min=1"`
	// ServiceQosPolicy: optional
	ServiceQosPolicy *ServiceQosPolicy `hcl:"service_qos_policy,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMobileNetworkServiceAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_mobile_network_service.
func (amns azurermMobileNetworkServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amns.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_mobile_network_service.
func (amns azurermMobileNetworkServiceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amns.ref.Append("location"))
}

// MobileNetworkId returns a reference to field mobile_network_id of azurerm_mobile_network_service.
func (amns azurermMobileNetworkServiceAttributes) MobileNetworkId() terra.StringValue {
	return terra.ReferenceAsString(amns.ref.Append("mobile_network_id"))
}

// Name returns a reference to field name of azurerm_mobile_network_service.
func (amns azurermMobileNetworkServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amns.ref.Append("name"))
}

// ServicePrecedence returns a reference to field service_precedence of azurerm_mobile_network_service.
func (amns azurermMobileNetworkServiceAttributes) ServicePrecedence() terra.NumberValue {
	return terra.ReferenceAsNumber(amns.ref.Append("service_precedence"))
}

// Tags returns a reference to field tags of azurerm_mobile_network_service.
func (amns azurermMobileNetworkServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amns.ref.Append("tags"))
}

func (amns azurermMobileNetworkServiceAttributes) PccRule() terra.ListValue[PccRuleAttributes] {
	return terra.ReferenceAsList[PccRuleAttributes](amns.ref.Append("pcc_rule"))
}

func (amns azurermMobileNetworkServiceAttributes) ServiceQosPolicy() terra.ListValue[ServiceQosPolicyAttributes] {
	return terra.ReferenceAsList[ServiceQosPolicyAttributes](amns.ref.Append("service_qos_policy"))
}

func (amns azurermMobileNetworkServiceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amns.ref.Append("timeouts"))
}

type azurermMobileNetworkServiceState struct {
	Id                string                  `json:"id"`
	Location          string                  `json:"location"`
	MobileNetworkId   string                  `json:"mobile_network_id"`
	Name              string                  `json:"name"`
	ServicePrecedence float64                 `json:"service_precedence"`
	Tags              map[string]string       `json:"tags"`
	PccRule           []PccRuleState          `json:"pcc_rule"`
	ServiceQosPolicy  []ServiceQosPolicyState `json:"service_qos_policy"`
	Timeouts          *TimeoutsState          `json:"timeouts"`
}
