// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mobile_network_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataPccRuleAttributes struct {
	ref terra.Reference
}

func (pr DataPccRuleAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr DataPccRuleAttributes) InternalWithRef(ref terra.Reference) DataPccRuleAttributes {
	return DataPccRuleAttributes{ref: ref}
}

func (pr DataPccRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr DataPccRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pr.ref.Append("name"))
}

func (pr DataPccRuleAttributes) Precedence() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("precedence"))
}

func (pr DataPccRuleAttributes) TrafficControlEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("traffic_control_enabled"))
}

func (pr DataPccRuleAttributes) QosPolicy() terra.ListValue[DataPccRuleQosPolicyAttributes] {
	return terra.ReferenceAsList[DataPccRuleQosPolicyAttributes](pr.ref.Append("qos_policy"))
}

func (pr DataPccRuleAttributes) ServiceDataFlowTemplate() terra.ListValue[DataPccRuleServiceDataFlowTemplateAttributes] {
	return terra.ReferenceAsList[DataPccRuleServiceDataFlowTemplateAttributes](pr.ref.Append("service_data_flow_template"))
}

type DataPccRuleQosPolicyAttributes struct {
	ref terra.Reference
}

func (qp DataPccRuleQosPolicyAttributes) InternalRef() (terra.Reference, error) {
	return qp.ref, nil
}

func (qp DataPccRuleQosPolicyAttributes) InternalWithRef(ref terra.Reference) DataPccRuleQosPolicyAttributes {
	return DataPccRuleQosPolicyAttributes{ref: ref}
}

func (qp DataPccRuleQosPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qp.ref.InternalTokens()
}

func (qp DataPccRuleQosPolicyAttributes) AllocationAndRetentionPriorityLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(qp.ref.Append("allocation_and_retention_priority_level"))
}

func (qp DataPccRuleQosPolicyAttributes) PreemptionCapability() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("preemption_capability"))
}

func (qp DataPccRuleQosPolicyAttributes) PreemptionVulnerability() terra.StringValue {
	return terra.ReferenceAsString(qp.ref.Append("preemption_vulnerability"))
}

func (qp DataPccRuleQosPolicyAttributes) QosIndicator() terra.NumberValue {
	return terra.ReferenceAsNumber(qp.ref.Append("qos_indicator"))
}

func (qp DataPccRuleQosPolicyAttributes) GuaranteedBitRate() terra.ListValue[DataPccRuleQosPolicyGuaranteedBitRateAttributes] {
	return terra.ReferenceAsList[DataPccRuleQosPolicyGuaranteedBitRateAttributes](qp.ref.Append("guaranteed_bit_rate"))
}

func (qp DataPccRuleQosPolicyAttributes) MaximumBitRate() terra.ListValue[DataPccRuleQosPolicyMaximumBitRateAttributes] {
	return terra.ReferenceAsList[DataPccRuleQosPolicyMaximumBitRateAttributes](qp.ref.Append("maximum_bit_rate"))
}

type DataPccRuleQosPolicyGuaranteedBitRateAttributes struct {
	ref terra.Reference
}

func (gbr DataPccRuleQosPolicyGuaranteedBitRateAttributes) InternalRef() (terra.Reference, error) {
	return gbr.ref, nil
}

func (gbr DataPccRuleQosPolicyGuaranteedBitRateAttributes) InternalWithRef(ref terra.Reference) DataPccRuleQosPolicyGuaranteedBitRateAttributes {
	return DataPccRuleQosPolicyGuaranteedBitRateAttributes{ref: ref}
}

func (gbr DataPccRuleQosPolicyGuaranteedBitRateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gbr.ref.InternalTokens()
}

func (gbr DataPccRuleQosPolicyGuaranteedBitRateAttributes) Downlink() terra.StringValue {
	return terra.ReferenceAsString(gbr.ref.Append("downlink"))
}

func (gbr DataPccRuleQosPolicyGuaranteedBitRateAttributes) Uplink() terra.StringValue {
	return terra.ReferenceAsString(gbr.ref.Append("uplink"))
}

type DataPccRuleQosPolicyMaximumBitRateAttributes struct {
	ref terra.Reference
}

func (mbr DataPccRuleQosPolicyMaximumBitRateAttributes) InternalRef() (terra.Reference, error) {
	return mbr.ref, nil
}

func (mbr DataPccRuleQosPolicyMaximumBitRateAttributes) InternalWithRef(ref terra.Reference) DataPccRuleQosPolicyMaximumBitRateAttributes {
	return DataPccRuleQosPolicyMaximumBitRateAttributes{ref: ref}
}

func (mbr DataPccRuleQosPolicyMaximumBitRateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mbr.ref.InternalTokens()
}

func (mbr DataPccRuleQosPolicyMaximumBitRateAttributes) Downlink() terra.StringValue {
	return terra.ReferenceAsString(mbr.ref.Append("downlink"))
}

func (mbr DataPccRuleQosPolicyMaximumBitRateAttributes) Uplink() terra.StringValue {
	return terra.ReferenceAsString(mbr.ref.Append("uplink"))
}

type DataPccRuleServiceDataFlowTemplateAttributes struct {
	ref terra.Reference
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) InternalRef() (terra.Reference, error) {
	return sdft.ref, nil
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) InternalWithRef(ref terra.Reference) DataPccRuleServiceDataFlowTemplateAttributes {
	return DataPccRuleServiceDataFlowTemplateAttributes{ref: ref}
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sdft.ref.InternalTokens()
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sdft.ref.Append("direction"))
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sdft.ref.Append("name"))
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) Ports() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sdft.ref.Append("ports"))
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) Protocol() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sdft.ref.Append("protocol"))
}

func (sdft DataPccRuleServiceDataFlowTemplateAttributes) RemoteIpList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sdft.ref.Append("remote_ip_list"))
}

type DataServiceQosPolicyAttributes struct {
	ref terra.Reference
}

func (sqp DataServiceQosPolicyAttributes) InternalRef() (terra.Reference, error) {
	return sqp.ref, nil
}

func (sqp DataServiceQosPolicyAttributes) InternalWithRef(ref terra.Reference) DataServiceQosPolicyAttributes {
	return DataServiceQosPolicyAttributes{ref: ref}
}

func (sqp DataServiceQosPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sqp.ref.InternalTokens()
}

func (sqp DataServiceQosPolicyAttributes) AllocationAndRetentionPriorityLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(sqp.ref.Append("allocation_and_retention_priority_level"))
}

func (sqp DataServiceQosPolicyAttributes) PreemptionCapability() terra.StringValue {
	return terra.ReferenceAsString(sqp.ref.Append("preemption_capability"))
}

func (sqp DataServiceQosPolicyAttributes) PreemptionVulnerability() terra.StringValue {
	return terra.ReferenceAsString(sqp.ref.Append("preemption_vulnerability"))
}

func (sqp DataServiceQosPolicyAttributes) QosIndicator() terra.NumberValue {
	return terra.ReferenceAsNumber(sqp.ref.Append("qos_indicator"))
}

func (sqp DataServiceQosPolicyAttributes) MaximumBitRate() terra.ListValue[DataServiceQosPolicyMaximumBitRateAttributes] {
	return terra.ReferenceAsList[DataServiceQosPolicyMaximumBitRateAttributes](sqp.ref.Append("maximum_bit_rate"))
}

type DataServiceQosPolicyMaximumBitRateAttributes struct {
	ref terra.Reference
}

func (mbr DataServiceQosPolicyMaximumBitRateAttributes) InternalRef() (terra.Reference, error) {
	return mbr.ref, nil
}

func (mbr DataServiceQosPolicyMaximumBitRateAttributes) InternalWithRef(ref terra.Reference) DataServiceQosPolicyMaximumBitRateAttributes {
	return DataServiceQosPolicyMaximumBitRateAttributes{ref: ref}
}

func (mbr DataServiceQosPolicyMaximumBitRateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mbr.ref.InternalTokens()
}

func (mbr DataServiceQosPolicyMaximumBitRateAttributes) Downlink() terra.StringValue {
	return terra.ReferenceAsString(mbr.ref.Append("downlink"))
}

func (mbr DataServiceQosPolicyMaximumBitRateAttributes) Uplink() terra.StringValue {
	return terra.ReferenceAsString(mbr.ref.Append("uplink"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataPccRuleState struct {
	Name                    string                                    `json:"name"`
	Precedence              float64                                   `json:"precedence"`
	TrafficControlEnabled   bool                                      `json:"traffic_control_enabled"`
	QosPolicy               []DataPccRuleQosPolicyState               `json:"qos_policy"`
	ServiceDataFlowTemplate []DataPccRuleServiceDataFlowTemplateState `json:"service_data_flow_template"`
}

type DataPccRuleQosPolicyState struct {
	AllocationAndRetentionPriorityLevel float64                                      `json:"allocation_and_retention_priority_level"`
	PreemptionCapability                string                                       `json:"preemption_capability"`
	PreemptionVulnerability             string                                       `json:"preemption_vulnerability"`
	QosIndicator                        float64                                      `json:"qos_indicator"`
	GuaranteedBitRate                   []DataPccRuleQosPolicyGuaranteedBitRateState `json:"guaranteed_bit_rate"`
	MaximumBitRate                      []DataPccRuleQosPolicyMaximumBitRateState    `json:"maximum_bit_rate"`
}

type DataPccRuleQosPolicyGuaranteedBitRateState struct {
	Downlink string `json:"downlink"`
	Uplink   string `json:"uplink"`
}

type DataPccRuleQosPolicyMaximumBitRateState struct {
	Downlink string `json:"downlink"`
	Uplink   string `json:"uplink"`
}

type DataPccRuleServiceDataFlowTemplateState struct {
	Direction    string   `json:"direction"`
	Name         string   `json:"name"`
	Ports        []string `json:"ports"`
	Protocol     []string `json:"protocol"`
	RemoteIpList []string `json:"remote_ip_list"`
}

type DataServiceQosPolicyState struct {
	AllocationAndRetentionPriorityLevel float64                                   `json:"allocation_and_retention_priority_level"`
	PreemptionCapability                string                                    `json:"preemption_capability"`
	PreemptionVulnerability             string                                    `json:"preemption_vulnerability"`
	QosIndicator                        float64                                   `json:"qos_indicator"`
	MaximumBitRate                      []DataServiceQosPolicyMaximumBitRateState `json:"maximum_bit_rate"`
}

type DataServiceQosPolicyMaximumBitRateState struct {
	Downlink string `json:"downlink"`
	Uplink   string `json:"uplink"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
