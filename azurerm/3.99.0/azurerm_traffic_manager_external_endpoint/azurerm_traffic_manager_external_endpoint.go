// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_traffic_manager_external_endpoint

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_traffic_manager_external_endpoint.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermTrafficManagerExternalEndpointState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (atmee *Resource) Type() string {
	return "azurerm_traffic_manager_external_endpoint"
}

// LocalName returns the local name for [Resource].
func (atmee *Resource) LocalName() string {
	return atmee.Name
}

// Configuration returns the configuration (args) for [Resource].
func (atmee *Resource) Configuration() interface{} {
	return atmee.Args
}

// DependOn is used for other resources to depend on [Resource].
func (atmee *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(atmee)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (atmee *Resource) Dependencies() terra.Dependencies {
	return atmee.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (atmee *Resource) LifecycleManagement() *terra.Lifecycle {
	return atmee.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (atmee *Resource) Attributes() azurermTrafficManagerExternalEndpointAttributes {
	return azurermTrafficManagerExternalEndpointAttributes{ref: terra.ReferenceResource(atmee)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (atmee *Resource) ImportState(state io.Reader) error {
	atmee.state = &azurermTrafficManagerExternalEndpointState{}
	if err := json.NewDecoder(state).Decode(atmee.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", atmee.Type(), atmee.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (atmee *Resource) State() (*azurermTrafficManagerExternalEndpointState, bool) {
	return atmee.state, atmee.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (atmee *Resource) StateMust() *azurermTrafficManagerExternalEndpointState {
	if atmee.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", atmee.Type(), atmee.LocalName()))
	}
	return atmee.state
}

// Args contains the configurations for azurerm_traffic_manager_external_endpoint.
type Args struct {
	// AlwaysServeEnabled: bool, optional
	AlwaysServeEnabled terra.BoolValue `hcl:"always_serve_enabled,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// EndpointLocation: string, optional
	EndpointLocation terra.StringValue `hcl:"endpoint_location,attr"`
	// GeoMappings: list of string, optional
	GeoMappings terra.ListValue[terra.StringValue] `hcl:"geo_mappings,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// ProfileId: string, required
	ProfileId terra.StringValue `hcl:"profile_id,attr" validate:"required"`
	// Target: string, required
	Target terra.StringValue `hcl:"target,attr" validate:"required"`
	// Weight: number, optional
	Weight terra.NumberValue `hcl:"weight,attr"`
	// CustomHeader: min=0
	CustomHeader []CustomHeader `hcl:"custom_header,block" validate:"min=0"`
	// Subnet: min=0
	Subnet []Subnet `hcl:"subnet,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermTrafficManagerExternalEndpointAttributes struct {
	ref terra.Reference
}

// AlwaysServeEnabled returns a reference to field always_serve_enabled of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) AlwaysServeEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(atmee.ref.Append("always_serve_enabled"))
}

// Enabled returns a reference to field enabled of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(atmee.ref.Append("enabled"))
}

// EndpointLocation returns a reference to field endpoint_location of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) EndpointLocation() terra.StringValue {
	return terra.ReferenceAsString(atmee.ref.Append("endpoint_location"))
}

// GeoMappings returns a reference to field geo_mappings of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) GeoMappings() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](atmee.ref.Append("geo_mappings"))
}

// Id returns a reference to field id of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(atmee.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(atmee.ref.Append("name"))
}

// Priority returns a reference to field priority of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(atmee.ref.Append("priority"))
}

// ProfileId returns a reference to field profile_id of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) ProfileId() terra.StringValue {
	return terra.ReferenceAsString(atmee.ref.Append("profile_id"))
}

// Target returns a reference to field target of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(atmee.ref.Append("target"))
}

// Weight returns a reference to field weight of azurerm_traffic_manager_external_endpoint.
func (atmee azurermTrafficManagerExternalEndpointAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(atmee.ref.Append("weight"))
}

func (atmee azurermTrafficManagerExternalEndpointAttributes) CustomHeader() terra.ListValue[CustomHeaderAttributes] {
	return terra.ReferenceAsList[CustomHeaderAttributes](atmee.ref.Append("custom_header"))
}

func (atmee azurermTrafficManagerExternalEndpointAttributes) Subnet() terra.ListValue[SubnetAttributes] {
	return terra.ReferenceAsList[SubnetAttributes](atmee.ref.Append("subnet"))
}

func (atmee azurermTrafficManagerExternalEndpointAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](atmee.ref.Append("timeouts"))
}

type azurermTrafficManagerExternalEndpointState struct {
	AlwaysServeEnabled bool                `json:"always_serve_enabled"`
	Enabled            bool                `json:"enabled"`
	EndpointLocation   string              `json:"endpoint_location"`
	GeoMappings        []string            `json:"geo_mappings"`
	Id                 string              `json:"id"`
	Name               string              `json:"name"`
	Priority           float64             `json:"priority"`
	ProfileId          string              `json:"profile_id"`
	Target             string              `json:"target"`
	Weight             float64             `json:"weight"`
	CustomHeader       []CustomHeaderState `json:"custom_header"`
	Subnet             []SubnetState       `json:"subnet"`
	Timeouts           *TimeoutsState      `json:"timeouts"`
}
