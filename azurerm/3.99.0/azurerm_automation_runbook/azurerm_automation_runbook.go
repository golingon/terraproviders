// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_runbook

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_runbook.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationRunbookState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aar *Resource) Type() string {
	return "azurerm_automation_runbook"
}

// LocalName returns the local name for [Resource].
func (aar *Resource) LocalName() string {
	return aar.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aar *Resource) Configuration() interface{} {
	return aar.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aar *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aar)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aar *Resource) Dependencies() terra.Dependencies {
	return aar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aar *Resource) LifecycleManagement() *terra.Lifecycle {
	return aar.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aar *Resource) Attributes() azurermAutomationRunbookAttributes {
	return azurermAutomationRunbookAttributes{ref: terra.ReferenceResource(aar)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aar *Resource) ImportState(state io.Reader) error {
	aar.state = &azurermAutomationRunbookState{}
	if err := json.NewDecoder(state).Decode(aar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aar.Type(), aar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aar *Resource) State() (*azurermAutomationRunbookState, bool) {
	return aar.state, aar.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aar *Resource) StateMust() *azurermAutomationRunbookState {
	if aar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aar.Type(), aar.LocalName()))
	}
	return aar.state
}

// Args contains the configurations for azurerm_automation_runbook.
type Args struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// Content: string, optional
	Content terra.StringValue `hcl:"content,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LogActivityTraceLevel: number, optional
	LogActivityTraceLevel terra.NumberValue `hcl:"log_activity_trace_level,attr"`
	// LogProgress: bool, required
	LogProgress terra.BoolValue `hcl:"log_progress,attr" validate:"required"`
	// LogVerbose: bool, required
	LogVerbose terra.BoolValue `hcl:"log_verbose,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RunbookType: string, required
	RunbookType terra.StringValue `hcl:"runbook_type,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// JobSchedule: min=0
	JobSchedule []JobSchedule `hcl:"job_schedule,block" validate:"min=0"`
	// Draft: optional
	Draft *Draft `hcl:"draft,block"`
	// PublishContentLink: optional
	PublishContentLink *PublishContentLink `hcl:"publish_content_link,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationRunbookAttributes struct {
	ref terra.Reference
}

// AutomationAccountName returns a reference to field automation_account_name of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("automation_account_name"))
}

// Content returns a reference to field content of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("content"))
}

// Description returns a reference to field description of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("location"))
}

// LogActivityTraceLevel returns a reference to field log_activity_trace_level of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) LogActivityTraceLevel() terra.NumberValue {
	return terra.ReferenceAsNumber(aar.ref.Append("log_activity_trace_level"))
}

// LogProgress returns a reference to field log_progress of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) LogProgress() terra.BoolValue {
	return terra.ReferenceAsBool(aar.ref.Append("log_progress"))
}

// LogVerbose returns a reference to field log_verbose of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) LogVerbose() terra.BoolValue {
	return terra.ReferenceAsBool(aar.ref.Append("log_verbose"))
}

// Name returns a reference to field name of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("resource_group_name"))
}

// RunbookType returns a reference to field runbook_type of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) RunbookType() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("runbook_type"))
}

// Tags returns a reference to field tags of azurerm_automation_runbook.
func (aar azurermAutomationRunbookAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aar.ref.Append("tags"))
}

func (aar azurermAutomationRunbookAttributes) JobSchedule() terra.SetValue[JobScheduleAttributes] {
	return terra.ReferenceAsSet[JobScheduleAttributes](aar.ref.Append("job_schedule"))
}

func (aar azurermAutomationRunbookAttributes) Draft() terra.ListValue[DraftAttributes] {
	return terra.ReferenceAsList[DraftAttributes](aar.ref.Append("draft"))
}

func (aar azurermAutomationRunbookAttributes) PublishContentLink() terra.ListValue[PublishContentLinkAttributes] {
	return terra.ReferenceAsList[PublishContentLinkAttributes](aar.ref.Append("publish_content_link"))
}

func (aar azurermAutomationRunbookAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aar.ref.Append("timeouts"))
}

type azurermAutomationRunbookState struct {
	AutomationAccountName string                    `json:"automation_account_name"`
	Content               string                    `json:"content"`
	Description           string                    `json:"description"`
	Id                    string                    `json:"id"`
	Location              string                    `json:"location"`
	LogActivityTraceLevel float64                   `json:"log_activity_trace_level"`
	LogProgress           bool                      `json:"log_progress"`
	LogVerbose            bool                      `json:"log_verbose"`
	Name                  string                    `json:"name"`
	ResourceGroupName     string                    `json:"resource_group_name"`
	RunbookType           string                    `json:"runbook_type"`
	Tags                  map[string]string         `json:"tags"`
	JobSchedule           []JobScheduleState        `json:"job_schedule"`
	Draft                 []DraftState              `json:"draft"`
	PublishContentLink    []PublishContentLinkState `json:"publish_content_link"`
	Timeouts              *TimeoutsState            `json:"timeouts"`
}
