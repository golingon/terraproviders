// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_windows_function_app

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_windows_function_app.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermWindowsFunctionAppState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awfa *Resource) Type() string {
	return "azurerm_windows_function_app"
}

// LocalName returns the local name for [Resource].
func (awfa *Resource) LocalName() string {
	return awfa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awfa *Resource) Configuration() interface{} {
	return awfa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awfa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awfa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awfa *Resource) Dependencies() terra.Dependencies {
	return awfa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awfa *Resource) LifecycleManagement() *terra.Lifecycle {
	return awfa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awfa *Resource) Attributes() azurermWindowsFunctionAppAttributes {
	return azurermWindowsFunctionAppAttributes{ref: terra.ReferenceResource(awfa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awfa *Resource) ImportState(state io.Reader) error {
	awfa.state = &azurermWindowsFunctionAppState{}
	if err := json.NewDecoder(state).Decode(awfa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awfa.Type(), awfa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awfa *Resource) State() (*azurermWindowsFunctionAppState, bool) {
	return awfa.state, awfa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awfa *Resource) StateMust() *azurermWindowsFunctionAppState {
	if awfa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awfa.Type(), awfa.LocalName()))
	}
	return awfa.state
}

// Args contains the configurations for azurerm_windows_function_app.
type Args struct {
	// AppSettings: map of string, optional
	AppSettings terra.MapValue[terra.StringValue] `hcl:"app_settings,attr"`
	// BuiltinLoggingEnabled: bool, optional
	BuiltinLoggingEnabled terra.BoolValue `hcl:"builtin_logging_enabled,attr"`
	// ClientCertificateEnabled: bool, optional
	ClientCertificateEnabled terra.BoolValue `hcl:"client_certificate_enabled,attr"`
	// ClientCertificateExclusionPaths: string, optional
	ClientCertificateExclusionPaths terra.StringValue `hcl:"client_certificate_exclusion_paths,attr"`
	// ClientCertificateMode: string, optional
	ClientCertificateMode terra.StringValue `hcl:"client_certificate_mode,attr"`
	// ContentShareForceDisabled: bool, optional
	ContentShareForceDisabled terra.BoolValue `hcl:"content_share_force_disabled,attr"`
	// DailyMemoryTimeQuota: number, optional
	DailyMemoryTimeQuota terra.NumberValue `hcl:"daily_memory_time_quota,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// FtpPublishBasicAuthenticationEnabled: bool, optional
	FtpPublishBasicAuthenticationEnabled terra.BoolValue `hcl:"ftp_publish_basic_authentication_enabled,attr"`
	// FunctionsExtensionVersion: string, optional
	FunctionsExtensionVersion terra.StringValue `hcl:"functions_extension_version,attr"`
	// HttpsOnly: bool, optional
	HttpsOnly terra.BoolValue `hcl:"https_only,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultReferenceIdentityId: string, optional
	KeyVaultReferenceIdentityId terra.StringValue `hcl:"key_vault_reference_identity_id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServicePlanId: string, required
	ServicePlanId terra.StringValue `hcl:"service_plan_id,attr" validate:"required"`
	// StorageAccountAccessKey: string, optional
	StorageAccountAccessKey terra.StringValue `hcl:"storage_account_access_key,attr"`
	// StorageAccountName: string, optional
	StorageAccountName terra.StringValue `hcl:"storage_account_name,attr"`
	// StorageKeyVaultSecretId: string, optional
	StorageKeyVaultSecretId terra.StringValue `hcl:"storage_key_vault_secret_id,attr"`
	// StorageUsesManagedIdentity: bool, optional
	StorageUsesManagedIdentity terra.BoolValue `hcl:"storage_uses_managed_identity,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VirtualNetworkSubnetId: string, optional
	VirtualNetworkSubnetId terra.StringValue `hcl:"virtual_network_subnet_id,attr"`
	// WebdeployPublishBasicAuthenticationEnabled: bool, optional
	WebdeployPublishBasicAuthenticationEnabled terra.BoolValue `hcl:"webdeploy_publish_basic_authentication_enabled,attr"`
	// ZipDeployFile: string, optional
	ZipDeployFile terra.StringValue `hcl:"zip_deploy_file,attr"`
	// AuthSettings: optional
	AuthSettings *AuthSettings `hcl:"auth_settings,block"`
	// AuthSettingsV2: optional
	AuthSettingsV2 *AuthSettingsV2 `hcl:"auth_settings_v2,block"`
	// Backup: optional
	Backup *Backup `hcl:"backup,block"`
	// ConnectionString: min=0
	ConnectionString []ConnectionString `hcl:"connection_string,block" validate:"min=0"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// SiteConfig: required
	SiteConfig *SiteConfig `hcl:"site_config,block" validate:"required"`
	// StickySettings: optional
	StickySettings *StickySettings `hcl:"sticky_settings,block"`
	// StorageAccount: min=0
	StorageAccount []StorageAccount `hcl:"storage_account,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermWindowsFunctionAppAttributes struct {
	ref terra.Reference
}

// AppSettings returns a reference to field app_settings of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) AppSettings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](awfa.ref.Append("app_settings"))
}

// BuiltinLoggingEnabled returns a reference to field builtin_logging_enabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) BuiltinLoggingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("builtin_logging_enabled"))
}

// ClientCertificateEnabled returns a reference to field client_certificate_enabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ClientCertificateEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("client_certificate_enabled"))
}

// ClientCertificateExclusionPaths returns a reference to field client_certificate_exclusion_paths of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ClientCertificateExclusionPaths() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("client_certificate_exclusion_paths"))
}

// ClientCertificateMode returns a reference to field client_certificate_mode of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ClientCertificateMode() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("client_certificate_mode"))
}

// ContentShareForceDisabled returns a reference to field content_share_force_disabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ContentShareForceDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("content_share_force_disabled"))
}

// CustomDomainVerificationId returns a reference to field custom_domain_verification_id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) CustomDomainVerificationId() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("custom_domain_verification_id"))
}

// DailyMemoryTimeQuota returns a reference to field daily_memory_time_quota of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) DailyMemoryTimeQuota() terra.NumberValue {
	return terra.ReferenceAsNumber(awfa.ref.Append("daily_memory_time_quota"))
}

// DefaultHostname returns a reference to field default_hostname of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) DefaultHostname() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("default_hostname"))
}

// Enabled returns a reference to field enabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("enabled"))
}

// FtpPublishBasicAuthenticationEnabled returns a reference to field ftp_publish_basic_authentication_enabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) FtpPublishBasicAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("ftp_publish_basic_authentication_enabled"))
}

// FunctionsExtensionVersion returns a reference to field functions_extension_version of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) FunctionsExtensionVersion() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("functions_extension_version"))
}

// HostingEnvironmentId returns a reference to field hosting_environment_id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) HostingEnvironmentId() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("hosting_environment_id"))
}

// HttpsOnly returns a reference to field https_only of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("https_only"))
}

// Id returns a reference to field id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("id"))
}

// KeyVaultReferenceIdentityId returns a reference to field key_vault_reference_identity_id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) KeyVaultReferenceIdentityId() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("key_vault_reference_identity_id"))
}

// Kind returns a reference to field kind of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) Kind() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("kind"))
}

// Location returns a reference to field location of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("name"))
}

// OutboundIpAddressList returns a reference to field outbound_ip_address_list of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) OutboundIpAddressList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](awfa.ref.Append("outbound_ip_address_list"))
}

// OutboundIpAddresses returns a reference to field outbound_ip_addresses of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) OutboundIpAddresses() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("outbound_ip_addresses"))
}

// PossibleOutboundIpAddressList returns a reference to field possible_outbound_ip_address_list of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) PossibleOutboundIpAddressList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](awfa.ref.Append("possible_outbound_ip_address_list"))
}

// PossibleOutboundIpAddresses returns a reference to field possible_outbound_ip_addresses of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) PossibleOutboundIpAddresses() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("possible_outbound_ip_addresses"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("public_network_access_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("resource_group_name"))
}

// ServicePlanId returns a reference to field service_plan_id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ServicePlanId() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("service_plan_id"))
}

// StorageAccountAccessKey returns a reference to field storage_account_access_key of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("storage_account_access_key"))
}

// StorageAccountName returns a reference to field storage_account_name of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) StorageAccountName() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("storage_account_name"))
}

// StorageKeyVaultSecretId returns a reference to field storage_key_vault_secret_id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) StorageKeyVaultSecretId() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("storage_key_vault_secret_id"))
}

// StorageUsesManagedIdentity returns a reference to field storage_uses_managed_identity of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) StorageUsesManagedIdentity() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("storage_uses_managed_identity"))
}

// Tags returns a reference to field tags of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](awfa.ref.Append("tags"))
}

// VirtualNetworkSubnetId returns a reference to field virtual_network_subnet_id of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) VirtualNetworkSubnetId() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("virtual_network_subnet_id"))
}

// WebdeployPublishBasicAuthenticationEnabled returns a reference to field webdeploy_publish_basic_authentication_enabled of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) WebdeployPublishBasicAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awfa.ref.Append("webdeploy_publish_basic_authentication_enabled"))
}

// ZipDeployFile returns a reference to field zip_deploy_file of azurerm_windows_function_app.
func (awfa azurermWindowsFunctionAppAttributes) ZipDeployFile() terra.StringValue {
	return terra.ReferenceAsString(awfa.ref.Append("zip_deploy_file"))
}

func (awfa azurermWindowsFunctionAppAttributes) SiteCredential() terra.ListValue[SiteCredentialAttributes] {
	return terra.ReferenceAsList[SiteCredentialAttributes](awfa.ref.Append("site_credential"))
}

func (awfa azurermWindowsFunctionAppAttributes) AuthSettings() terra.ListValue[AuthSettingsAttributes] {
	return terra.ReferenceAsList[AuthSettingsAttributes](awfa.ref.Append("auth_settings"))
}

func (awfa azurermWindowsFunctionAppAttributes) AuthSettingsV2() terra.ListValue[AuthSettingsV2Attributes] {
	return terra.ReferenceAsList[AuthSettingsV2Attributes](awfa.ref.Append("auth_settings_v2"))
}

func (awfa azurermWindowsFunctionAppAttributes) Backup() terra.ListValue[BackupAttributes] {
	return terra.ReferenceAsList[BackupAttributes](awfa.ref.Append("backup"))
}

func (awfa azurermWindowsFunctionAppAttributes) ConnectionString() terra.SetValue[ConnectionStringAttributes] {
	return terra.ReferenceAsSet[ConnectionStringAttributes](awfa.ref.Append("connection_string"))
}

func (awfa azurermWindowsFunctionAppAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](awfa.ref.Append("identity"))
}

func (awfa azurermWindowsFunctionAppAttributes) SiteConfig() terra.ListValue[SiteConfigAttributes] {
	return terra.ReferenceAsList[SiteConfigAttributes](awfa.ref.Append("site_config"))
}

func (awfa azurermWindowsFunctionAppAttributes) StickySettings() terra.ListValue[StickySettingsAttributes] {
	return terra.ReferenceAsList[StickySettingsAttributes](awfa.ref.Append("sticky_settings"))
}

func (awfa azurermWindowsFunctionAppAttributes) StorageAccount() terra.SetValue[StorageAccountAttributes] {
	return terra.ReferenceAsSet[StorageAccountAttributes](awfa.ref.Append("storage_account"))
}

func (awfa azurermWindowsFunctionAppAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](awfa.ref.Append("timeouts"))
}

type azurermWindowsFunctionAppState struct {
	AppSettings                                map[string]string       `json:"app_settings"`
	BuiltinLoggingEnabled                      bool                    `json:"builtin_logging_enabled"`
	ClientCertificateEnabled                   bool                    `json:"client_certificate_enabled"`
	ClientCertificateExclusionPaths            string                  `json:"client_certificate_exclusion_paths"`
	ClientCertificateMode                      string                  `json:"client_certificate_mode"`
	ContentShareForceDisabled                  bool                    `json:"content_share_force_disabled"`
	CustomDomainVerificationId                 string                  `json:"custom_domain_verification_id"`
	DailyMemoryTimeQuota                       float64                 `json:"daily_memory_time_quota"`
	DefaultHostname                            string                  `json:"default_hostname"`
	Enabled                                    bool                    `json:"enabled"`
	FtpPublishBasicAuthenticationEnabled       bool                    `json:"ftp_publish_basic_authentication_enabled"`
	FunctionsExtensionVersion                  string                  `json:"functions_extension_version"`
	HostingEnvironmentId                       string                  `json:"hosting_environment_id"`
	HttpsOnly                                  bool                    `json:"https_only"`
	Id                                         string                  `json:"id"`
	KeyVaultReferenceIdentityId                string                  `json:"key_vault_reference_identity_id"`
	Kind                                       string                  `json:"kind"`
	Location                                   string                  `json:"location"`
	Name                                       string                  `json:"name"`
	OutboundIpAddressList                      []string                `json:"outbound_ip_address_list"`
	OutboundIpAddresses                        string                  `json:"outbound_ip_addresses"`
	PossibleOutboundIpAddressList              []string                `json:"possible_outbound_ip_address_list"`
	PossibleOutboundIpAddresses                string                  `json:"possible_outbound_ip_addresses"`
	PublicNetworkAccessEnabled                 bool                    `json:"public_network_access_enabled"`
	ResourceGroupName                          string                  `json:"resource_group_name"`
	ServicePlanId                              string                  `json:"service_plan_id"`
	StorageAccountAccessKey                    string                  `json:"storage_account_access_key"`
	StorageAccountName                         string                  `json:"storage_account_name"`
	StorageKeyVaultSecretId                    string                  `json:"storage_key_vault_secret_id"`
	StorageUsesManagedIdentity                 bool                    `json:"storage_uses_managed_identity"`
	Tags                                       map[string]string       `json:"tags"`
	VirtualNetworkSubnetId                     string                  `json:"virtual_network_subnet_id"`
	WebdeployPublishBasicAuthenticationEnabled bool                    `json:"webdeploy_publish_basic_authentication_enabled"`
	ZipDeployFile                              string                  `json:"zip_deploy_file"`
	SiteCredential                             []SiteCredentialState   `json:"site_credential"`
	AuthSettings                               []AuthSettingsState     `json:"auth_settings"`
	AuthSettingsV2                             []AuthSettingsV2State   `json:"auth_settings_v2"`
	Backup                                     []BackupState           `json:"backup"`
	ConnectionString                           []ConnectionStringState `json:"connection_string"`
	Identity                                   []IdentityState         `json:"identity"`
	SiteConfig                                 []SiteConfigState       `json:"site_config"`
	StickySettings                             []StickySettingsState   `json:"sticky_settings"`
	StorageAccount                             []StorageAccountState   `json:"storage_account"`
	Timeouts                                   *TimeoutsState          `json:"timeouts"`
}
