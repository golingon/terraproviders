// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_dev_test_windows_virtual_machine

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_dev_test_windows_virtual_machine.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDevTestWindowsVirtualMachineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adtwvm *Resource) Type() string {
	return "azurerm_dev_test_windows_virtual_machine"
}

// LocalName returns the local name for [Resource].
func (adtwvm *Resource) LocalName() string {
	return adtwvm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adtwvm *Resource) Configuration() interface{} {
	return adtwvm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adtwvm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adtwvm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adtwvm *Resource) Dependencies() terra.Dependencies {
	return adtwvm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adtwvm *Resource) LifecycleManagement() *terra.Lifecycle {
	return adtwvm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adtwvm *Resource) Attributes() azurermDevTestWindowsVirtualMachineAttributes {
	return azurermDevTestWindowsVirtualMachineAttributes{ref: terra.ReferenceResource(adtwvm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adtwvm *Resource) ImportState(state io.Reader) error {
	adtwvm.state = &azurermDevTestWindowsVirtualMachineState{}
	if err := json.NewDecoder(state).Decode(adtwvm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adtwvm.Type(), adtwvm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adtwvm *Resource) State() (*azurermDevTestWindowsVirtualMachineState, bool) {
	return adtwvm.state, adtwvm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adtwvm *Resource) StateMust() *azurermDevTestWindowsVirtualMachineState {
	if adtwvm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adtwvm.Type(), adtwvm.LocalName()))
	}
	return adtwvm.state
}

// Args contains the configurations for azurerm_dev_test_windows_virtual_machine.
type Args struct {
	// AllowClaim: bool, optional
	AllowClaim terra.BoolValue `hcl:"allow_claim,attr"`
	// DisallowPublicIpAddress: bool, optional
	DisallowPublicIpAddress terra.BoolValue `hcl:"disallow_public_ip_address,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LabName: string, required
	LabName terra.StringValue `hcl:"lab_name,attr" validate:"required"`
	// LabSubnetName: string, required
	LabSubnetName terra.StringValue `hcl:"lab_subnet_name,attr" validate:"required"`
	// LabVirtualNetworkId: string, required
	LabVirtualNetworkId terra.StringValue `hcl:"lab_virtual_network_id,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Notes: string, optional
	Notes terra.StringValue `hcl:"notes,attr"`
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Size: string, required
	Size terra.StringValue `hcl:"size,attr" validate:"required"`
	// StorageType: string, required
	StorageType terra.StringValue `hcl:"storage_type,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
	// GalleryImageReference: required
	GalleryImageReference *GalleryImageReference `hcl:"gallery_image_reference,block" validate:"required"`
	// InboundNatRule: min=0
	InboundNatRule []InboundNatRule `hcl:"inbound_nat_rule,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDevTestWindowsVirtualMachineAttributes struct {
	ref terra.Reference
}

// AllowClaim returns a reference to field allow_claim of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) AllowClaim() terra.BoolValue {
	return terra.ReferenceAsBool(adtwvm.ref.Append("allow_claim"))
}

// DisallowPublicIpAddress returns a reference to field disallow_public_ip_address of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) DisallowPublicIpAddress() terra.BoolValue {
	return terra.ReferenceAsBool(adtwvm.ref.Append("disallow_public_ip_address"))
}

// Fqdn returns a reference to field fqdn of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("fqdn"))
}

// Id returns a reference to field id of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("id"))
}

// LabName returns a reference to field lab_name of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) LabName() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("lab_name"))
}

// LabSubnetName returns a reference to field lab_subnet_name of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) LabSubnetName() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("lab_subnet_name"))
}

// LabVirtualNetworkId returns a reference to field lab_virtual_network_id of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) LabVirtualNetworkId() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("lab_virtual_network_id"))
}

// Location returns a reference to field location of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("name"))
}

// Notes returns a reference to field notes of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("notes"))
}

// Password returns a reference to field password of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("password"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("resource_group_name"))
}

// Size returns a reference to field size of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Size() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("size"))
}

// StorageType returns a reference to field storage_type of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("storage_type"))
}

// Tags returns a reference to field tags of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adtwvm.ref.Append("tags"))
}

// UniqueIdentifier returns a reference to field unique_identifier of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) UniqueIdentifier() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("unique_identifier"))
}

// Username returns a reference to field username of azurerm_dev_test_windows_virtual_machine.
func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(adtwvm.ref.Append("username"))
}

func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) GalleryImageReference() terra.ListValue[GalleryImageReferenceAttributes] {
	return terra.ReferenceAsList[GalleryImageReferenceAttributes](adtwvm.ref.Append("gallery_image_reference"))
}

func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) InboundNatRule() terra.SetValue[InboundNatRuleAttributes] {
	return terra.ReferenceAsSet[InboundNatRuleAttributes](adtwvm.ref.Append("inbound_nat_rule"))
}

func (adtwvm azurermDevTestWindowsVirtualMachineAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adtwvm.ref.Append("timeouts"))
}

type azurermDevTestWindowsVirtualMachineState struct {
	AllowClaim              bool                         `json:"allow_claim"`
	DisallowPublicIpAddress bool                         `json:"disallow_public_ip_address"`
	Fqdn                    string                       `json:"fqdn"`
	Id                      string                       `json:"id"`
	LabName                 string                       `json:"lab_name"`
	LabSubnetName           string                       `json:"lab_subnet_name"`
	LabVirtualNetworkId     string                       `json:"lab_virtual_network_id"`
	Location                string                       `json:"location"`
	Name                    string                       `json:"name"`
	Notes                   string                       `json:"notes"`
	Password                string                       `json:"password"`
	ResourceGroupName       string                       `json:"resource_group_name"`
	Size                    string                       `json:"size"`
	StorageType             string                       `json:"storage_type"`
	Tags                    map[string]string            `json:"tags"`
	UniqueIdentifier        string                       `json:"unique_identifier"`
	Username                string                       `json:"username"`
	GalleryImageReference   []GalleryImageReferenceState `json:"gallery_image_reference"`
	InboundNatRule          []InboundNatRuleState        `json:"inbound_nat_rule"`
	Timeouts                *TimeoutsState               `json:"timeouts"`
}
