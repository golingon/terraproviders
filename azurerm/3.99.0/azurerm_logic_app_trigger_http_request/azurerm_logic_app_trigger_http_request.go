// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logic_app_trigger_http_request

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_logic_app_trigger_http_request.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogicAppTriggerHttpRequestState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alathr *Resource) Type() string {
	return "azurerm_logic_app_trigger_http_request"
}

// LocalName returns the local name for [Resource].
func (alathr *Resource) LocalName() string {
	return alathr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alathr *Resource) Configuration() interface{} {
	return alathr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alathr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alathr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alathr *Resource) Dependencies() terra.Dependencies {
	return alathr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alathr *Resource) LifecycleManagement() *terra.Lifecycle {
	return alathr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alathr *Resource) Attributes() azurermLogicAppTriggerHttpRequestAttributes {
	return azurermLogicAppTriggerHttpRequestAttributes{ref: terra.ReferenceResource(alathr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alathr *Resource) ImportState(state io.Reader) error {
	alathr.state = &azurermLogicAppTriggerHttpRequestState{}
	if err := json.NewDecoder(state).Decode(alathr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alathr.Type(), alathr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alathr *Resource) State() (*azurermLogicAppTriggerHttpRequestState, bool) {
	return alathr.state, alathr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alathr *Resource) StateMust() *azurermLogicAppTriggerHttpRequestState {
	if alathr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alathr.Type(), alathr.LocalName()))
	}
	return alathr.state
}

// Args contains the configurations for azurerm_logic_app_trigger_http_request.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogicAppId: string, required
	LogicAppId terra.StringValue `hcl:"logic_app_id,attr" validate:"required"`
	// Method: string, optional
	Method terra.StringValue `hcl:"method,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RelativePath: string, optional
	RelativePath terra.StringValue `hcl:"relative_path,attr"`
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogicAppTriggerHttpRequestAttributes struct {
	ref terra.Reference
}

// CallbackUrl returns a reference to field callback_url of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) CallbackUrl() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("callback_url"))
}

// Id returns a reference to field id of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("id"))
}

// LogicAppId returns a reference to field logic_app_id of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) LogicAppId() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("logic_app_id"))
}

// Method returns a reference to field method of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) Method() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("method"))
}

// Name returns a reference to field name of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("name"))
}

// RelativePath returns a reference to field relative_path of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) RelativePath() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("relative_path"))
}

// Schema returns a reference to field schema of azurerm_logic_app_trigger_http_request.
func (alathr azurermLogicAppTriggerHttpRequestAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(alathr.ref.Append("schema"))
}

func (alathr azurermLogicAppTriggerHttpRequestAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alathr.ref.Append("timeouts"))
}

type azurermLogicAppTriggerHttpRequestState struct {
	CallbackUrl  string         `json:"callback_url"`
	Id           string         `json:"id"`
	LogicAppId   string         `json:"logic_app_id"`
	Method       string         `json:"method"`
	Name         string         `json:"name"`
	RelativePath string         `json:"relative_path"`
	Schema       string         `json:"schema"`
	Timeouts     *TimeoutsState `json:"timeouts"`
}
