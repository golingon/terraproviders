// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_firewall_application_rule_collection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_firewall_application_rule_collection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermFirewallApplicationRuleCollectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (afarc *Resource) Type() string {
	return "azurerm_firewall_application_rule_collection"
}

// LocalName returns the local name for [Resource].
func (afarc *Resource) LocalName() string {
	return afarc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (afarc *Resource) Configuration() interface{} {
	return afarc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (afarc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(afarc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (afarc *Resource) Dependencies() terra.Dependencies {
	return afarc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (afarc *Resource) LifecycleManagement() *terra.Lifecycle {
	return afarc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (afarc *Resource) Attributes() azurermFirewallApplicationRuleCollectionAttributes {
	return azurermFirewallApplicationRuleCollectionAttributes{ref: terra.ReferenceResource(afarc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (afarc *Resource) ImportState(state io.Reader) error {
	afarc.state = &azurermFirewallApplicationRuleCollectionState{}
	if err := json.NewDecoder(state).Decode(afarc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", afarc.Type(), afarc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (afarc *Resource) State() (*azurermFirewallApplicationRuleCollectionState, bool) {
	return afarc.state, afarc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (afarc *Resource) StateMust() *azurermFirewallApplicationRuleCollectionState {
	if afarc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", afarc.Type(), afarc.LocalName()))
	}
	return afarc.state
}

// Args contains the configurations for azurerm_firewall_application_rule_collection.
type Args struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// AzureFirewallName: string, required
	AzureFirewallName terra.StringValue `hcl:"azure_firewall_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Rule: min=1
	Rule []Rule `hcl:"rule,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermFirewallApplicationRuleCollectionAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of azurerm_firewall_application_rule_collection.
func (afarc azurermFirewallApplicationRuleCollectionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(afarc.ref.Append("action"))
}

// AzureFirewallName returns a reference to field azure_firewall_name of azurerm_firewall_application_rule_collection.
func (afarc azurermFirewallApplicationRuleCollectionAttributes) AzureFirewallName() terra.StringValue {
	return terra.ReferenceAsString(afarc.ref.Append("azure_firewall_name"))
}

// Id returns a reference to field id of azurerm_firewall_application_rule_collection.
func (afarc azurermFirewallApplicationRuleCollectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(afarc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_firewall_application_rule_collection.
func (afarc azurermFirewallApplicationRuleCollectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(afarc.ref.Append("name"))
}

// Priority returns a reference to field priority of azurerm_firewall_application_rule_collection.
func (afarc azurermFirewallApplicationRuleCollectionAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(afarc.ref.Append("priority"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_firewall_application_rule_collection.
func (afarc azurermFirewallApplicationRuleCollectionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(afarc.ref.Append("resource_group_name"))
}

func (afarc azurermFirewallApplicationRuleCollectionAttributes) Rule() terra.ListValue[RuleAttributes] {
	return terra.ReferenceAsList[RuleAttributes](afarc.ref.Append("rule"))
}

func (afarc azurermFirewallApplicationRuleCollectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](afarc.ref.Append("timeouts"))
}

type azurermFirewallApplicationRuleCollectionState struct {
	Action            string         `json:"action"`
	AzureFirewallName string         `json:"azure_firewall_name"`
	Id                string         `json:"id"`
	Name              string         `json:"name"`
	Priority          float64        `json:"priority"`
	ResourceGroupName string         `json:"resource_group_name"`
	Rule              []RuleState    `json:"rule"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
