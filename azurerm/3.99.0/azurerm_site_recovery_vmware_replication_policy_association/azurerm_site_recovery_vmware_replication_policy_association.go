// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_site_recovery_vmware_replication_policy_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_site_recovery_vmware_replication_policy_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSiteRecoveryVmwareReplicationPolicyAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asrvrpa *Resource) Type() string {
	return "azurerm_site_recovery_vmware_replication_policy_association"
}

// LocalName returns the local name for [Resource].
func (asrvrpa *Resource) LocalName() string {
	return asrvrpa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asrvrpa *Resource) Configuration() interface{} {
	return asrvrpa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asrvrpa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asrvrpa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asrvrpa *Resource) Dependencies() terra.Dependencies {
	return asrvrpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asrvrpa *Resource) LifecycleManagement() *terra.Lifecycle {
	return asrvrpa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asrvrpa *Resource) Attributes() azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes {
	return azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes{ref: terra.ReferenceResource(asrvrpa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asrvrpa *Resource) ImportState(state io.Reader) error {
	asrvrpa.state = &azurermSiteRecoveryVmwareReplicationPolicyAssociationState{}
	if err := json.NewDecoder(state).Decode(asrvrpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asrvrpa.Type(), asrvrpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asrvrpa *Resource) State() (*azurermSiteRecoveryVmwareReplicationPolicyAssociationState, bool) {
	return asrvrpa.state, asrvrpa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asrvrpa *Resource) StateMust() *azurermSiteRecoveryVmwareReplicationPolicyAssociationState {
	if asrvrpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asrvrpa.Type(), asrvrpa.LocalName()))
	}
	return asrvrpa.state
}

// Args contains the configurations for azurerm_site_recovery_vmware_replication_policy_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PolicyId: string, required
	PolicyId terra.StringValue `hcl:"policy_id,attr" validate:"required"`
	// RecoveryVaultId: string, required
	RecoveryVaultId terra.StringValue `hcl:"recovery_vault_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_site_recovery_vmware_replication_policy_association.
func (asrvrpa azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asrvrpa.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_site_recovery_vmware_replication_policy_association.
func (asrvrpa azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asrvrpa.ref.Append("name"))
}

// PolicyId returns a reference to field policy_id of azurerm_site_recovery_vmware_replication_policy_association.
func (asrvrpa azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(asrvrpa.ref.Append("policy_id"))
}

// RecoveryVaultId returns a reference to field recovery_vault_id of azurerm_site_recovery_vmware_replication_policy_association.
func (asrvrpa azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes) RecoveryVaultId() terra.StringValue {
	return terra.ReferenceAsString(asrvrpa.ref.Append("recovery_vault_id"))
}

func (asrvrpa azurermSiteRecoveryVmwareReplicationPolicyAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asrvrpa.ref.Append("timeouts"))
}

type azurermSiteRecoveryVmwareReplicationPolicyAssociationState struct {
	Id              string         `json:"id"`
	Name            string         `json:"name"`
	PolicyId        string         `json:"policy_id"`
	RecoveryVaultId string         `json:"recovery_vault_id"`
	Timeouts        *TimeoutsState `json:"timeouts"`
}
