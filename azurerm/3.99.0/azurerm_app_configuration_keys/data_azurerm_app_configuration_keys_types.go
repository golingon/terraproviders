// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_configuration_keys

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataItemsAttributes struct {
	ref terra.Reference
}

func (i DataItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataItemsAttributes) InternalWithRef(ref terra.Reference) DataItemsAttributes {
	return DataItemsAttributes{ref: ref}
}

func (i DataItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataItemsAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("content_type"))
}

func (i DataItemsAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("etag"))
}

func (i DataItemsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("key"))
}

func (i DataItemsAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("label"))
}

func (i DataItemsAttributes) Locked() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("locked"))
}

func (i DataItemsAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](i.ref.Append("tags"))
}

func (i DataItemsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

func (i DataItemsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("value"))
}

func (i DataItemsAttributes) VaultKeyReference() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("vault_key_reference"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataItemsState struct {
	ContentType       string            `json:"content_type"`
	Etag              string            `json:"etag"`
	Key               string            `json:"key"`
	Label             string            `json:"label"`
	Locked            bool              `json:"locked"`
	Tags              map[string]string `json:"tags"`
	Type              string            `json:"type"`
	Value             string            `json:"value"`
	VaultKeyReference string            `json:"vault_key_reference"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
