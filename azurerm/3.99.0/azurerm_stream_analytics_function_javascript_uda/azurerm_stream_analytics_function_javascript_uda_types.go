// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_stream_analytics_function_javascript_uda

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Input struct {
	// ConfigurationParameter: bool, optional
	ConfigurationParameter terra.BoolValue `hcl:"configuration_parameter,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Output struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type InputAttributes struct {
	ref terra.Reference
}

func (i InputAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i InputAttributes) InternalWithRef(ref terra.Reference) InputAttributes {
	return InputAttributes{ref: ref}
}

func (i InputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i InputAttributes) ConfigurationParameter() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("configuration_parameter"))
}

func (i InputAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type OutputAttributes struct {
	ref terra.Reference
}

func (o OutputAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o OutputAttributes) InternalWithRef(ref terra.Reference) OutputAttributes {
	return OutputAttributes{ref: ref}
}

func (o OutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o OutputAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type InputState struct {
	ConfigurationParameter bool   `json:"configuration_parameter"`
	Type                   string `json:"type"`
}

type OutputState struct {
	Type string `json:"type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
