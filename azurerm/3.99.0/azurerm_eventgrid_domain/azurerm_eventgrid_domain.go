// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_eventgrid_domain

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_eventgrid_domain.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermEventgridDomainState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aed *Resource) Type() string {
	return "azurerm_eventgrid_domain"
}

// LocalName returns the local name for [Resource].
func (aed *Resource) LocalName() string {
	return aed.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aed *Resource) Configuration() interface{} {
	return aed.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aed *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aed)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aed *Resource) Dependencies() terra.Dependencies {
	return aed.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aed *Resource) LifecycleManagement() *terra.Lifecycle {
	return aed.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aed *Resource) Attributes() azurermEventgridDomainAttributes {
	return azurermEventgridDomainAttributes{ref: terra.ReferenceResource(aed)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aed *Resource) ImportState(state io.Reader) error {
	aed.state = &azurermEventgridDomainState{}
	if err := json.NewDecoder(state).Decode(aed.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aed.Type(), aed.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aed *Resource) State() (*azurermEventgridDomainState, bool) {
	return aed.state, aed.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aed *Resource) StateMust() *azurermEventgridDomainState {
	if aed.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aed.Type(), aed.LocalName()))
	}
	return aed.state
}

// Args contains the configurations for azurerm_eventgrid_domain.
type Args struct {
	// AutoCreateTopicWithFirstSubscription: bool, optional
	AutoCreateTopicWithFirstSubscription terra.BoolValue `hcl:"auto_create_topic_with_first_subscription,attr"`
	// AutoDeleteTopicWithLastSubscription: bool, optional
	AutoDeleteTopicWithLastSubscription terra.BoolValue `hcl:"auto_delete_topic_with_last_subscription,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InputSchema: string, optional
	InputSchema terra.StringValue `hcl:"input_schema,attr"`
	// LocalAuthEnabled: bool, optional
	LocalAuthEnabled terra.BoolValue `hcl:"local_auth_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// InboundIpRule: min=0
	InboundIpRule []InboundIpRule `hcl:"inbound_ip_rule,block" validate:"min=0"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// InputMappingDefaultValues: optional
	InputMappingDefaultValues *InputMappingDefaultValues `hcl:"input_mapping_default_values,block"`
	// InputMappingFields: optional
	InputMappingFields *InputMappingFields `hcl:"input_mapping_fields,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermEventgridDomainAttributes struct {
	ref terra.Reference
}

// AutoCreateTopicWithFirstSubscription returns a reference to field auto_create_topic_with_first_subscription of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) AutoCreateTopicWithFirstSubscription() terra.BoolValue {
	return terra.ReferenceAsBool(aed.ref.Append("auto_create_topic_with_first_subscription"))
}

// AutoDeleteTopicWithLastSubscription returns a reference to field auto_delete_topic_with_last_subscription of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) AutoDeleteTopicWithLastSubscription() terra.BoolValue {
	return terra.ReferenceAsBool(aed.ref.Append("auto_delete_topic_with_last_subscription"))
}

// Endpoint returns a reference to field endpoint of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("endpoint"))
}

// Id returns a reference to field id of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("id"))
}

// InputSchema returns a reference to field input_schema of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) InputSchema() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("input_schema"))
}

// LocalAuthEnabled returns a reference to field local_auth_enabled of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) LocalAuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aed.ref.Append("local_auth_enabled"))
}

// Location returns a reference to field location of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("name"))
}

// PrimaryAccessKey returns a reference to field primary_access_key of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) PrimaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("primary_access_key"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aed.ref.Append("public_network_access_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("resource_group_name"))
}

// SecondaryAccessKey returns a reference to field secondary_access_key of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) SecondaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(aed.ref.Append("secondary_access_key"))
}

// Tags returns a reference to field tags of azurerm_eventgrid_domain.
func (aed azurermEventgridDomainAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aed.ref.Append("tags"))
}

func (aed azurermEventgridDomainAttributes) InboundIpRule() terra.ListValue[InboundIpRuleAttributes] {
	return terra.ReferenceAsList[InboundIpRuleAttributes](aed.ref.Append("inbound_ip_rule"))
}

func (aed azurermEventgridDomainAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](aed.ref.Append("identity"))
}

func (aed azurermEventgridDomainAttributes) InputMappingDefaultValues() terra.ListValue[InputMappingDefaultValuesAttributes] {
	return terra.ReferenceAsList[InputMappingDefaultValuesAttributes](aed.ref.Append("input_mapping_default_values"))
}

func (aed azurermEventgridDomainAttributes) InputMappingFields() terra.ListValue[InputMappingFieldsAttributes] {
	return terra.ReferenceAsList[InputMappingFieldsAttributes](aed.ref.Append("input_mapping_fields"))
}

func (aed azurermEventgridDomainAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aed.ref.Append("timeouts"))
}

type azurermEventgridDomainState struct {
	AutoCreateTopicWithFirstSubscription bool                             `json:"auto_create_topic_with_first_subscription"`
	AutoDeleteTopicWithLastSubscription  bool                             `json:"auto_delete_topic_with_last_subscription"`
	Endpoint                             string                           `json:"endpoint"`
	Id                                   string                           `json:"id"`
	InputSchema                          string                           `json:"input_schema"`
	LocalAuthEnabled                     bool                             `json:"local_auth_enabled"`
	Location                             string                           `json:"location"`
	Name                                 string                           `json:"name"`
	PrimaryAccessKey                     string                           `json:"primary_access_key"`
	PublicNetworkAccessEnabled           bool                             `json:"public_network_access_enabled"`
	ResourceGroupName                    string                           `json:"resource_group_name"`
	SecondaryAccessKey                   string                           `json:"secondary_access_key"`
	Tags                                 map[string]string                `json:"tags"`
	InboundIpRule                        []InboundIpRuleState             `json:"inbound_ip_rule"`
	Identity                             []IdentityState                  `json:"identity"`
	InputMappingDefaultValues            []InputMappingDefaultValuesState `json:"input_mapping_default_values"`
	InputMappingFields                   []InputMappingFieldsState        `json:"input_mapping_fields"`
	Timeouts                             *TimeoutsState                   `json:"timeouts"`
}
