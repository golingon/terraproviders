// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_healthcare_medtech_service_fhir_destination

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_healthcare_medtech_service_fhir_destination.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermHealthcareMedtechServiceFhirDestinationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ahmsfd *Resource) Type() string {
	return "azurerm_healthcare_medtech_service_fhir_destination"
}

// LocalName returns the local name for [Resource].
func (ahmsfd *Resource) LocalName() string {
	return ahmsfd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ahmsfd *Resource) Configuration() interface{} {
	return ahmsfd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ahmsfd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ahmsfd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ahmsfd *Resource) Dependencies() terra.Dependencies {
	return ahmsfd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ahmsfd *Resource) LifecycleManagement() *terra.Lifecycle {
	return ahmsfd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ahmsfd *Resource) Attributes() azurermHealthcareMedtechServiceFhirDestinationAttributes {
	return azurermHealthcareMedtechServiceFhirDestinationAttributes{ref: terra.ReferenceResource(ahmsfd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ahmsfd *Resource) ImportState(state io.Reader) error {
	ahmsfd.state = &azurermHealthcareMedtechServiceFhirDestinationState{}
	if err := json.NewDecoder(state).Decode(ahmsfd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ahmsfd.Type(), ahmsfd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ahmsfd *Resource) State() (*azurermHealthcareMedtechServiceFhirDestinationState, bool) {
	return ahmsfd.state, ahmsfd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ahmsfd *Resource) StateMust() *azurermHealthcareMedtechServiceFhirDestinationState {
	if ahmsfd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ahmsfd.Type(), ahmsfd.LocalName()))
	}
	return ahmsfd.state
}

// Args contains the configurations for azurerm_healthcare_medtech_service_fhir_destination.
type Args struct {
	// DestinationFhirMappingJson: string, required
	DestinationFhirMappingJson terra.StringValue `hcl:"destination_fhir_mapping_json,attr" validate:"required"`
	// DestinationFhirServiceId: string, required
	DestinationFhirServiceId terra.StringValue `hcl:"destination_fhir_service_id,attr" validate:"required"`
	// DestinationIdentityResolutionType: string, required
	DestinationIdentityResolutionType terra.StringValue `hcl:"destination_identity_resolution_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MedtechServiceId: string, required
	MedtechServiceId terra.StringValue `hcl:"medtech_service_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermHealthcareMedtechServiceFhirDestinationAttributes struct {
	ref terra.Reference
}

// DestinationFhirMappingJson returns a reference to field destination_fhir_mapping_json of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) DestinationFhirMappingJson() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("destination_fhir_mapping_json"))
}

// DestinationFhirServiceId returns a reference to field destination_fhir_service_id of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) DestinationFhirServiceId() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("destination_fhir_service_id"))
}

// DestinationIdentityResolutionType returns a reference to field destination_identity_resolution_type of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) DestinationIdentityResolutionType() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("destination_identity_resolution_type"))
}

// Id returns a reference to field id of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("location"))
}

// MedtechServiceId returns a reference to field medtech_service_id of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) MedtechServiceId() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("medtech_service_id"))
}

// Name returns a reference to field name of azurerm_healthcare_medtech_service_fhir_destination.
func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ahmsfd.ref.Append("name"))
}

func (ahmsfd azurermHealthcareMedtechServiceFhirDestinationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ahmsfd.ref.Append("timeouts"))
}

type azurermHealthcareMedtechServiceFhirDestinationState struct {
	DestinationFhirMappingJson        string         `json:"destination_fhir_mapping_json"`
	DestinationFhirServiceId          string         `json:"destination_fhir_service_id"`
	DestinationIdentityResolutionType string         `json:"destination_identity_resolution_type"`
	Id                                string         `json:"id"`
	Location                          string         `json:"location"`
	MedtechServiceId                  string         `json:"medtech_service_id"`
	Name                              string         `json:"name"`
	Timeouts                          *TimeoutsState `json:"timeouts"`
}
