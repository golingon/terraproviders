// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_netapp_snapshot

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_netapp_snapshot.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ans *DataSource) DataSource() string {
	return "azurerm_netapp_snapshot"
}

// LocalName returns the local name for [DataSource].
func (ans *DataSource) LocalName() string {
	return ans.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ans *DataSource) Configuration() interface{} {
	return ans.Args
}

// Attributes returns the attributes for [DataSource].
func (ans *DataSource) Attributes() dataAzurermNetappSnapshotAttributes {
	return dataAzurermNetappSnapshotAttributes{ref: terra.ReferenceDataSource(ans)}
}

// DataArgs contains the configurations for azurerm_netapp_snapshot.
type DataArgs struct {
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PoolName: string, required
	PoolName terra.StringValue `hcl:"pool_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// VolumeName: string, required
	VolumeName terra.StringValue `hcl:"volume_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermNetappSnapshotAttributes struct {
	ref terra.Reference
}

// AccountName returns a reference to field account_name of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("account_name"))
}

// Id returns a reference to field id of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("name"))
}

// PoolName returns a reference to field pool_name of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) PoolName() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("pool_name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("resource_group_name"))
}

// VolumeName returns a reference to field volume_name of azurerm_netapp_snapshot.
func (ans dataAzurermNetappSnapshotAttributes) VolumeName() terra.StringValue {
	return terra.ReferenceAsString(ans.ref.Append("volume_name"))
}

func (ans dataAzurermNetappSnapshotAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ans.ref.Append("timeouts"))
}
