// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_frontdoor_route

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cdn_frontdoor_route.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCdnFrontdoorRouteState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acfr *Resource) Type() string {
	return "azurerm_cdn_frontdoor_route"
}

// LocalName returns the local name for [Resource].
func (acfr *Resource) LocalName() string {
	return acfr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acfr *Resource) Configuration() interface{} {
	return acfr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acfr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acfr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acfr *Resource) Dependencies() terra.Dependencies {
	return acfr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acfr *Resource) LifecycleManagement() *terra.Lifecycle {
	return acfr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acfr *Resource) Attributes() azurermCdnFrontdoorRouteAttributes {
	return azurermCdnFrontdoorRouteAttributes{ref: terra.ReferenceResource(acfr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acfr *Resource) ImportState(state io.Reader) error {
	acfr.state = &azurermCdnFrontdoorRouteState{}
	if err := json.NewDecoder(state).Decode(acfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acfr.Type(), acfr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acfr *Resource) State() (*azurermCdnFrontdoorRouteState, bool) {
	return acfr.state, acfr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acfr *Resource) StateMust() *azurermCdnFrontdoorRouteState {
	if acfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acfr.Type(), acfr.LocalName()))
	}
	return acfr.state
}

// Args contains the configurations for azurerm_cdn_frontdoor_route.
type Args struct {
	// CdnFrontdoorCustomDomainIds: set of string, optional
	CdnFrontdoorCustomDomainIds terra.SetValue[terra.StringValue] `hcl:"cdn_frontdoor_custom_domain_ids,attr"`
	// CdnFrontdoorEndpointId: string, required
	CdnFrontdoorEndpointId terra.StringValue `hcl:"cdn_frontdoor_endpoint_id,attr" validate:"required"`
	// CdnFrontdoorOriginGroupId: string, required
	CdnFrontdoorOriginGroupId terra.StringValue `hcl:"cdn_frontdoor_origin_group_id,attr" validate:"required"`
	// CdnFrontdoorOriginIds: list of string, required
	CdnFrontdoorOriginIds terra.ListValue[terra.StringValue] `hcl:"cdn_frontdoor_origin_ids,attr" validate:"required"`
	// CdnFrontdoorOriginPath: string, optional
	CdnFrontdoorOriginPath terra.StringValue `hcl:"cdn_frontdoor_origin_path,attr"`
	// CdnFrontdoorRuleSetIds: set of string, optional
	CdnFrontdoorRuleSetIds terra.SetValue[terra.StringValue] `hcl:"cdn_frontdoor_rule_set_ids,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// ForwardingProtocol: string, optional
	ForwardingProtocol terra.StringValue `hcl:"forwarding_protocol,attr"`
	// HttpsRedirectEnabled: bool, optional
	HttpsRedirectEnabled terra.BoolValue `hcl:"https_redirect_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LinkToDefaultDomain: bool, optional
	LinkToDefaultDomain terra.BoolValue `hcl:"link_to_default_domain,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PatternsToMatch: list of string, required
	PatternsToMatch terra.ListValue[terra.StringValue] `hcl:"patterns_to_match,attr" validate:"required"`
	// SupportedProtocols: set of string, required
	SupportedProtocols terra.SetValue[terra.StringValue] `hcl:"supported_protocols,attr" validate:"required"`
	// Cache: optional
	Cache *Cache `hcl:"cache,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCdnFrontdoorRouteAttributes struct {
	ref terra.Reference
}

// CdnFrontdoorCustomDomainIds returns a reference to field cdn_frontdoor_custom_domain_ids of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) CdnFrontdoorCustomDomainIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acfr.ref.Append("cdn_frontdoor_custom_domain_ids"))
}

// CdnFrontdoorEndpointId returns a reference to field cdn_frontdoor_endpoint_id of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) CdnFrontdoorEndpointId() terra.StringValue {
	return terra.ReferenceAsString(acfr.ref.Append("cdn_frontdoor_endpoint_id"))
}

// CdnFrontdoorOriginGroupId returns a reference to field cdn_frontdoor_origin_group_id of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) CdnFrontdoorOriginGroupId() terra.StringValue {
	return terra.ReferenceAsString(acfr.ref.Append("cdn_frontdoor_origin_group_id"))
}

// CdnFrontdoorOriginIds returns a reference to field cdn_frontdoor_origin_ids of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) CdnFrontdoorOriginIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acfr.ref.Append("cdn_frontdoor_origin_ids"))
}

// CdnFrontdoorOriginPath returns a reference to field cdn_frontdoor_origin_path of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) CdnFrontdoorOriginPath() terra.StringValue {
	return terra.ReferenceAsString(acfr.ref.Append("cdn_frontdoor_origin_path"))
}

// CdnFrontdoorRuleSetIds returns a reference to field cdn_frontdoor_rule_set_ids of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) CdnFrontdoorRuleSetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acfr.ref.Append("cdn_frontdoor_rule_set_ids"))
}

// Enabled returns a reference to field enabled of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(acfr.ref.Append("enabled"))
}

// ForwardingProtocol returns a reference to field forwarding_protocol of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) ForwardingProtocol() terra.StringValue {
	return terra.ReferenceAsString(acfr.ref.Append("forwarding_protocol"))
}

// HttpsRedirectEnabled returns a reference to field https_redirect_enabled of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) HttpsRedirectEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(acfr.ref.Append("https_redirect_enabled"))
}

// Id returns a reference to field id of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acfr.ref.Append("id"))
}

// LinkToDefaultDomain returns a reference to field link_to_default_domain of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) LinkToDefaultDomain() terra.BoolValue {
	return terra.ReferenceAsBool(acfr.ref.Append("link_to_default_domain"))
}

// Name returns a reference to field name of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acfr.ref.Append("name"))
}

// PatternsToMatch returns a reference to field patterns_to_match of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) PatternsToMatch() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acfr.ref.Append("patterns_to_match"))
}

// SupportedProtocols returns a reference to field supported_protocols of azurerm_cdn_frontdoor_route.
func (acfr azurermCdnFrontdoorRouteAttributes) SupportedProtocols() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acfr.ref.Append("supported_protocols"))
}

func (acfr azurermCdnFrontdoorRouteAttributes) Cache() terra.ListValue[CacheAttributes] {
	return terra.ReferenceAsList[CacheAttributes](acfr.ref.Append("cache"))
}

func (acfr azurermCdnFrontdoorRouteAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acfr.ref.Append("timeouts"))
}

type azurermCdnFrontdoorRouteState struct {
	CdnFrontdoorCustomDomainIds []string       `json:"cdn_frontdoor_custom_domain_ids"`
	CdnFrontdoorEndpointId      string         `json:"cdn_frontdoor_endpoint_id"`
	CdnFrontdoorOriginGroupId   string         `json:"cdn_frontdoor_origin_group_id"`
	CdnFrontdoorOriginIds       []string       `json:"cdn_frontdoor_origin_ids"`
	CdnFrontdoorOriginPath      string         `json:"cdn_frontdoor_origin_path"`
	CdnFrontdoorRuleSetIds      []string       `json:"cdn_frontdoor_rule_set_ids"`
	Enabled                     bool           `json:"enabled"`
	ForwardingProtocol          string         `json:"forwarding_protocol"`
	HttpsRedirectEnabled        bool           `json:"https_redirect_enabled"`
	Id                          string         `json:"id"`
	LinkToDefaultDomain         bool           `json:"link_to_default_domain"`
	Name                        string         `json:"name"`
	PatternsToMatch             []string       `json:"patterns_to_match"`
	SupportedProtocols          []string       `json:"supported_protocols"`
	Cache                       []CacheState   `json:"cache"`
	Timeouts                    *TimeoutsState `json:"timeouts"`
}
