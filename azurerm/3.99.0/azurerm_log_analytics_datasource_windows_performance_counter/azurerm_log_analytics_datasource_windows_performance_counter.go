// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_log_analytics_datasource_windows_performance_counter

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_log_analytics_datasource_windows_performance_counter.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogAnalyticsDatasourceWindowsPerformanceCounterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aladwpc *Resource) Type() string {
	return "azurerm_log_analytics_datasource_windows_performance_counter"
}

// LocalName returns the local name for [Resource].
func (aladwpc *Resource) LocalName() string {
	return aladwpc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aladwpc *Resource) Configuration() interface{} {
	return aladwpc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aladwpc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aladwpc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aladwpc *Resource) Dependencies() terra.Dependencies {
	return aladwpc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aladwpc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aladwpc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aladwpc *Resource) Attributes() azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes {
	return azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes{ref: terra.ReferenceResource(aladwpc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aladwpc *Resource) ImportState(state io.Reader) error {
	aladwpc.state = &azurermLogAnalyticsDatasourceWindowsPerformanceCounterState{}
	if err := json.NewDecoder(state).Decode(aladwpc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aladwpc.Type(), aladwpc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aladwpc *Resource) State() (*azurermLogAnalyticsDatasourceWindowsPerformanceCounterState, bool) {
	return aladwpc.state, aladwpc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aladwpc *Resource) StateMust() *azurermLogAnalyticsDatasourceWindowsPerformanceCounterState {
	if aladwpc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aladwpc.Type(), aladwpc.LocalName()))
	}
	return aladwpc.state
}

// Args contains the configurations for azurerm_log_analytics_datasource_windows_performance_counter.
type Args struct {
	// CounterName: string, required
	CounterName terra.StringValue `hcl:"counter_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceName: string, required
	InstanceName terra.StringValue `hcl:"instance_name,attr" validate:"required"`
	// IntervalSeconds: number, required
	IntervalSeconds terra.NumberValue `hcl:"interval_seconds,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ObjectName: string, required
	ObjectName terra.StringValue `hcl:"object_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// WorkspaceName: string, required
	WorkspaceName terra.StringValue `hcl:"workspace_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes struct {
	ref terra.Reference
}

// CounterName returns a reference to field counter_name of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) CounterName() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("counter_name"))
}

// Id returns a reference to field id of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("id"))
}

// InstanceName returns a reference to field instance_name of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) InstanceName() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("instance_name"))
}

// IntervalSeconds returns a reference to field interval_seconds of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) IntervalSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(aladwpc.ref.Append("interval_seconds"))
}

// Name returns a reference to field name of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("name"))
}

// ObjectName returns a reference to field object_name of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) ObjectName() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("object_name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("resource_group_name"))
}

// WorkspaceName returns a reference to field workspace_name of azurerm_log_analytics_datasource_windows_performance_counter.
func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) WorkspaceName() terra.StringValue {
	return terra.ReferenceAsString(aladwpc.ref.Append("workspace_name"))
}

func (aladwpc azurermLogAnalyticsDatasourceWindowsPerformanceCounterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aladwpc.ref.Append("timeouts"))
}

type azurermLogAnalyticsDatasourceWindowsPerformanceCounterState struct {
	CounterName       string         `json:"counter_name"`
	Id                string         `json:"id"`
	InstanceName      string         `json:"instance_name"`
	IntervalSeconds   float64        `json:"interval_seconds"`
	Name              string         `json:"name"`
	ObjectName        string         `json:"object_name"`
	ResourceGroupName string         `json:"resource_group_name"`
	WorkspaceName     string         `json:"workspace_name"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
