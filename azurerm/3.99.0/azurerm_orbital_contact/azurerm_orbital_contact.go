// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_orbital_contact

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_orbital_contact.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermOrbitalContactState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aoc *Resource) Type() string {
	return "azurerm_orbital_contact"
}

// LocalName returns the local name for [Resource].
func (aoc *Resource) LocalName() string {
	return aoc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aoc *Resource) Configuration() interface{} {
	return aoc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aoc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aoc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aoc *Resource) Dependencies() terra.Dependencies {
	return aoc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aoc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aoc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aoc *Resource) Attributes() azurermOrbitalContactAttributes {
	return azurermOrbitalContactAttributes{ref: terra.ReferenceResource(aoc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aoc *Resource) ImportState(state io.Reader) error {
	aoc.state = &azurermOrbitalContactState{}
	if err := json.NewDecoder(state).Decode(aoc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aoc.Type(), aoc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aoc *Resource) State() (*azurermOrbitalContactState, bool) {
	return aoc.state, aoc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aoc *Resource) StateMust() *azurermOrbitalContactState {
	if aoc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aoc.Type(), aoc.LocalName()))
	}
	return aoc.state
}

// Args contains the configurations for azurerm_orbital_contact.
type Args struct {
	// ContactProfileId: string, required
	ContactProfileId terra.StringValue `hcl:"contact_profile_id,attr" validate:"required"`
	// GroundStationName: string, required
	GroundStationName terra.StringValue `hcl:"ground_station_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ReservationEndTime: string, required
	ReservationEndTime terra.StringValue `hcl:"reservation_end_time,attr" validate:"required"`
	// ReservationStartTime: string, required
	ReservationStartTime terra.StringValue `hcl:"reservation_start_time,attr" validate:"required"`
	// SpacecraftId: string, required
	SpacecraftId terra.StringValue `hcl:"spacecraft_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermOrbitalContactAttributes struct {
	ref terra.Reference
}

// ContactProfileId returns a reference to field contact_profile_id of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) ContactProfileId() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("contact_profile_id"))
}

// GroundStationName returns a reference to field ground_station_name of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) GroundStationName() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("ground_station_name"))
}

// Id returns a reference to field id of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("name"))
}

// ReservationEndTime returns a reference to field reservation_end_time of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) ReservationEndTime() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("reservation_end_time"))
}

// ReservationStartTime returns a reference to field reservation_start_time of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) ReservationStartTime() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("reservation_start_time"))
}

// SpacecraftId returns a reference to field spacecraft_id of azurerm_orbital_contact.
func (aoc azurermOrbitalContactAttributes) SpacecraftId() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("spacecraft_id"))
}

func (aoc azurermOrbitalContactAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aoc.ref.Append("timeouts"))
}

type azurermOrbitalContactState struct {
	ContactProfileId     string         `json:"contact_profile_id"`
	GroundStationName    string         `json:"ground_station_name"`
	Id                   string         `json:"id"`
	Name                 string         `json:"name"`
	ReservationEndTime   string         `json:"reservation_end_time"`
	ReservationStartTime string         `json:"reservation_start_time"`
	SpacecraftId         string         `json:"spacecraft_id"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
