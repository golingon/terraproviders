// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_table_entities

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataItemsAttributes struct {
	ref terra.Reference
}

func (i DataItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataItemsAttributes) InternalWithRef(ref terra.Reference) DataItemsAttributes {
	return DataItemsAttributes{ref: ref}
}

func (i DataItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataItemsAttributes) PartitionKey() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("partition_key"))
}

func (i DataItemsAttributes) Properties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](i.ref.Append("properties"))
}

func (i DataItemsAttributes) RowKey() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("row_key"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataItemsState struct {
	PartitionKey string            `json:"partition_key"`
	Properties   map[string]string `json:"properties"`
	RowKey       string            `json:"row_key"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
