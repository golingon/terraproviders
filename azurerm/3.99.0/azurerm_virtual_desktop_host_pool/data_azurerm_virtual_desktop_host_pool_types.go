// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_virtual_desktop_host_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataScheduledAgentUpdatesAttributes struct {
	ref terra.Reference
}

func (sau DataScheduledAgentUpdatesAttributes) InternalRef() (terra.Reference, error) {
	return sau.ref, nil
}

func (sau DataScheduledAgentUpdatesAttributes) InternalWithRef(ref terra.Reference) DataScheduledAgentUpdatesAttributes {
	return DataScheduledAgentUpdatesAttributes{ref: ref}
}

func (sau DataScheduledAgentUpdatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sau.ref.InternalTokens()
}

func (sau DataScheduledAgentUpdatesAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sau.ref.Append("enabled"))
}

func (sau DataScheduledAgentUpdatesAttributes) Timezone() terra.StringValue {
	return terra.ReferenceAsString(sau.ref.Append("timezone"))
}

func (sau DataScheduledAgentUpdatesAttributes) UseSessionHostTimezone() terra.BoolValue {
	return terra.ReferenceAsBool(sau.ref.Append("use_session_host_timezone"))
}

func (sau DataScheduledAgentUpdatesAttributes) Schedule() terra.ListValue[DataScheduledAgentUpdatesScheduleAttributes] {
	return terra.ReferenceAsList[DataScheduledAgentUpdatesScheduleAttributes](sau.ref.Append("schedule"))
}

type DataScheduledAgentUpdatesScheduleAttributes struct {
	ref terra.Reference
}

func (s DataScheduledAgentUpdatesScheduleAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataScheduledAgentUpdatesScheduleAttributes) InternalWithRef(ref terra.Reference) DataScheduledAgentUpdatesScheduleAttributes {
	return DataScheduledAgentUpdatesScheduleAttributes{ref: ref}
}

func (s DataScheduledAgentUpdatesScheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataScheduledAgentUpdatesScheduleAttributes) DayOfWeek() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("day_of_week"))
}

func (s DataScheduledAgentUpdatesScheduleAttributes) HourOfDay() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("hour_of_day"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataScheduledAgentUpdatesState struct {
	Enabled                bool                                     `json:"enabled"`
	Timezone               string                                   `json:"timezone"`
	UseSessionHostTimezone bool                                     `json:"use_session_host_timezone"`
	Schedule               []DataScheduledAgentUpdatesScheduleState `json:"schedule"`
}

type DataScheduledAgentUpdatesScheduleState struct {
	DayOfWeek string  `json:"day_of_week"`
	HourOfDay float64 `json:"hour_of_day"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
