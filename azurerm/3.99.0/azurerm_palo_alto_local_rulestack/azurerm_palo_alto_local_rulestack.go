// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_palo_alto_local_rulestack

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_palo_alto_local_rulestack.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPaloAltoLocalRulestackState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apalr *Resource) Type() string {
	return "azurerm_palo_alto_local_rulestack"
}

// LocalName returns the local name for [Resource].
func (apalr *Resource) LocalName() string {
	return apalr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apalr *Resource) Configuration() interface{} {
	return apalr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apalr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apalr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apalr *Resource) Dependencies() terra.Dependencies {
	return apalr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apalr *Resource) LifecycleManagement() *terra.Lifecycle {
	return apalr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apalr *Resource) Attributes() azurermPaloAltoLocalRulestackAttributes {
	return azurermPaloAltoLocalRulestackAttributes{ref: terra.ReferenceResource(apalr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apalr *Resource) ImportState(state io.Reader) error {
	apalr.state = &azurermPaloAltoLocalRulestackState{}
	if err := json.NewDecoder(state).Decode(apalr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apalr.Type(), apalr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apalr *Resource) State() (*azurermPaloAltoLocalRulestackState, bool) {
	return apalr.state, apalr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apalr *Resource) StateMust() *azurermPaloAltoLocalRulestackState {
	if apalr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apalr.Type(), apalr.LocalName()))
	}
	return apalr.state
}

// Args contains the configurations for azurerm_palo_alto_local_rulestack.
type Args struct {
	// AntiSpywareProfile: string, optional
	AntiSpywareProfile terra.StringValue `hcl:"anti_spyware_profile,attr"`
	// AntiVirusProfile: string, optional
	AntiVirusProfile terra.StringValue `hcl:"anti_virus_profile,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DnsSubscription: string, optional
	DnsSubscription terra.StringValue `hcl:"dns_subscription,attr"`
	// FileBlockingProfile: string, optional
	FileBlockingProfile terra.StringValue `hcl:"file_blocking_profile,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// UrlFilteringProfile: string, optional
	UrlFilteringProfile terra.StringValue `hcl:"url_filtering_profile,attr"`
	// VulnerabilityProfile: string, optional
	VulnerabilityProfile terra.StringValue `hcl:"vulnerability_profile,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPaloAltoLocalRulestackAttributes struct {
	ref terra.Reference
}

// AntiSpywareProfile returns a reference to field anti_spyware_profile of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) AntiSpywareProfile() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("anti_spyware_profile"))
}

// AntiVirusProfile returns a reference to field anti_virus_profile of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) AntiVirusProfile() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("anti_virus_profile"))
}

// Description returns a reference to field description of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("description"))
}

// DnsSubscription returns a reference to field dns_subscription of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) DnsSubscription() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("dns_subscription"))
}

// FileBlockingProfile returns a reference to field file_blocking_profile of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) FileBlockingProfile() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("file_blocking_profile"))
}

// Id returns a reference to field id of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("resource_group_name"))
}

// UrlFilteringProfile returns a reference to field url_filtering_profile of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) UrlFilteringProfile() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("url_filtering_profile"))
}

// VulnerabilityProfile returns a reference to field vulnerability_profile of azurerm_palo_alto_local_rulestack.
func (apalr azurermPaloAltoLocalRulestackAttributes) VulnerabilityProfile() terra.StringValue {
	return terra.ReferenceAsString(apalr.ref.Append("vulnerability_profile"))
}

func (apalr azurermPaloAltoLocalRulestackAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apalr.ref.Append("timeouts"))
}

type azurermPaloAltoLocalRulestackState struct {
	AntiSpywareProfile   string         `json:"anti_spyware_profile"`
	AntiVirusProfile     string         `json:"anti_virus_profile"`
	Description          string         `json:"description"`
	DnsSubscription      string         `json:"dns_subscription"`
	FileBlockingProfile  string         `json:"file_blocking_profile"`
	Id                   string         `json:"id"`
	Location             string         `json:"location"`
	Name                 string         `json:"name"`
	ResourceGroupName    string         `json:"resource_group_name"`
	UrlFilteringProfile  string         `json:"url_filtering_profile"`
	VulnerabilityProfile string         `json:"vulnerability_profile"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
