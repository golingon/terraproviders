// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_kusto_script

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_kusto_script.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermKustoScriptState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aks *Resource) Type() string {
	return "azurerm_kusto_script"
}

// LocalName returns the local name for [Resource].
func (aks *Resource) LocalName() string {
	return aks.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aks *Resource) Configuration() interface{} {
	return aks.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aks *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aks)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aks *Resource) Dependencies() terra.Dependencies {
	return aks.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aks *Resource) LifecycleManagement() *terra.Lifecycle {
	return aks.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aks *Resource) Attributes() azurermKustoScriptAttributes {
	return azurermKustoScriptAttributes{ref: terra.ReferenceResource(aks)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aks *Resource) ImportState(state io.Reader) error {
	aks.state = &azurermKustoScriptState{}
	if err := json.NewDecoder(state).Decode(aks.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aks.Type(), aks.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aks *Resource) State() (*azurermKustoScriptState, bool) {
	return aks.state, aks.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aks *Resource) StateMust() *azurermKustoScriptState {
	if aks.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aks.Type(), aks.LocalName()))
	}
	return aks.state
}

// Args contains the configurations for azurerm_kusto_script.
type Args struct {
	// ContinueOnErrorsEnabled: bool, optional
	ContinueOnErrorsEnabled terra.BoolValue `hcl:"continue_on_errors_enabled,attr"`
	// DatabaseId: string, required
	DatabaseId terra.StringValue `hcl:"database_id,attr" validate:"required"`
	// ForceAnUpdateWhenValueChanged: string, optional
	ForceAnUpdateWhenValueChanged terra.StringValue `hcl:"force_an_update_when_value_changed,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SasToken: string, optional
	SasToken terra.StringValue `hcl:"sas_token,attr"`
	// ScriptContent: string, optional
	ScriptContent terra.StringValue `hcl:"script_content,attr"`
	// Url: string, optional
	Url terra.StringValue `hcl:"url,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermKustoScriptAttributes struct {
	ref terra.Reference
}

// ContinueOnErrorsEnabled returns a reference to field continue_on_errors_enabled of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) ContinueOnErrorsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aks.ref.Append("continue_on_errors_enabled"))
}

// DatabaseId returns a reference to field database_id of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) DatabaseId() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("database_id"))
}

// ForceAnUpdateWhenValueChanged returns a reference to field force_an_update_when_value_changed of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) ForceAnUpdateWhenValueChanged() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("force_an_update_when_value_changed"))
}

// Id returns a reference to field id of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("name"))
}

// SasToken returns a reference to field sas_token of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) SasToken() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("sas_token"))
}

// ScriptContent returns a reference to field script_content of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) ScriptContent() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("script_content"))
}

// Url returns a reference to field url of azurerm_kusto_script.
func (aks azurermKustoScriptAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(aks.ref.Append("url"))
}

func (aks azurermKustoScriptAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aks.ref.Append("timeouts"))
}

type azurermKustoScriptState struct {
	ContinueOnErrorsEnabled       bool           `json:"continue_on_errors_enabled"`
	DatabaseId                    string         `json:"database_id"`
	ForceAnUpdateWhenValueChanged string         `json:"force_an_update_when_value_changed"`
	Id                            string         `json:"id"`
	Name                          string         `json:"name"`
	SasToken                      string         `json:"sas_token"`
	ScriptContent                 string         `json:"script_content"`
	Url                           string         `json:"url"`
	Timeouts                      *TimeoutsState `json:"timeouts"`
}
