// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_network_manager_admin_rule_collection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_network_manager_admin_rule_collection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermNetworkManagerAdminRuleCollectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (anmarc *Resource) Type() string {
	return "azurerm_network_manager_admin_rule_collection"
}

// LocalName returns the local name for [Resource].
func (anmarc *Resource) LocalName() string {
	return anmarc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (anmarc *Resource) Configuration() interface{} {
	return anmarc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (anmarc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(anmarc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (anmarc *Resource) Dependencies() terra.Dependencies {
	return anmarc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (anmarc *Resource) LifecycleManagement() *terra.Lifecycle {
	return anmarc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (anmarc *Resource) Attributes() azurermNetworkManagerAdminRuleCollectionAttributes {
	return azurermNetworkManagerAdminRuleCollectionAttributes{ref: terra.ReferenceResource(anmarc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (anmarc *Resource) ImportState(state io.Reader) error {
	anmarc.state = &azurermNetworkManagerAdminRuleCollectionState{}
	if err := json.NewDecoder(state).Decode(anmarc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", anmarc.Type(), anmarc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (anmarc *Resource) State() (*azurermNetworkManagerAdminRuleCollectionState, bool) {
	return anmarc.state, anmarc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (anmarc *Resource) StateMust() *azurermNetworkManagerAdminRuleCollectionState {
	if anmarc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", anmarc.Type(), anmarc.LocalName()))
	}
	return anmarc.state
}

// Args contains the configurations for azurerm_network_manager_admin_rule_collection.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NetworkGroupIds: list of string, required
	NetworkGroupIds terra.ListValue[terra.StringValue] `hcl:"network_group_ids,attr" validate:"required"`
	// SecurityAdminConfigurationId: string, required
	SecurityAdminConfigurationId terra.StringValue `hcl:"security_admin_configuration_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermNetworkManagerAdminRuleCollectionAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of azurerm_network_manager_admin_rule_collection.
func (anmarc azurermNetworkManagerAdminRuleCollectionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(anmarc.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_network_manager_admin_rule_collection.
func (anmarc azurermNetworkManagerAdminRuleCollectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(anmarc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_network_manager_admin_rule_collection.
func (anmarc azurermNetworkManagerAdminRuleCollectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(anmarc.ref.Append("name"))
}

// NetworkGroupIds returns a reference to field network_group_ids of azurerm_network_manager_admin_rule_collection.
func (anmarc azurermNetworkManagerAdminRuleCollectionAttributes) NetworkGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](anmarc.ref.Append("network_group_ids"))
}

// SecurityAdminConfigurationId returns a reference to field security_admin_configuration_id of azurerm_network_manager_admin_rule_collection.
func (anmarc azurermNetworkManagerAdminRuleCollectionAttributes) SecurityAdminConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(anmarc.ref.Append("security_admin_configuration_id"))
}

func (anmarc azurermNetworkManagerAdminRuleCollectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](anmarc.ref.Append("timeouts"))
}

type azurermNetworkManagerAdminRuleCollectionState struct {
	Description                  string         `json:"description"`
	Id                           string         `json:"id"`
	Name                         string         `json:"name"`
	NetworkGroupIds              []string       `json:"network_group_ids"`
	SecurityAdminConfigurationId string         `json:"security_admin_configuration_id"`
	Timeouts                     *TimeoutsState `json:"timeouts"`
}
