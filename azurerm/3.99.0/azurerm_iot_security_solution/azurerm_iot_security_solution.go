// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iot_security_solution

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iot_security_solution.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIotSecuritySolutionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aiss *Resource) Type() string {
	return "azurerm_iot_security_solution"
}

// LocalName returns the local name for [Resource].
func (aiss *Resource) LocalName() string {
	return aiss.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aiss *Resource) Configuration() interface{} {
	return aiss.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aiss *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aiss)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aiss *Resource) Dependencies() terra.Dependencies {
	return aiss.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aiss *Resource) LifecycleManagement() *terra.Lifecycle {
	return aiss.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aiss *Resource) Attributes() azurermIotSecuritySolutionAttributes {
	return azurermIotSecuritySolutionAttributes{ref: terra.ReferenceResource(aiss)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aiss *Resource) ImportState(state io.Reader) error {
	aiss.state = &azurermIotSecuritySolutionState{}
	if err := json.NewDecoder(state).Decode(aiss.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiss.Type(), aiss.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aiss *Resource) State() (*azurermIotSecuritySolutionState, bool) {
	return aiss.state, aiss.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aiss *Resource) StateMust() *azurermIotSecuritySolutionState {
	if aiss.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiss.Type(), aiss.LocalName()))
	}
	return aiss.state
}

// Args contains the configurations for azurerm_iot_security_solution.
type Args struct {
	// DisabledDataSources: set of string, optional
	DisabledDataSources terra.SetValue[terra.StringValue] `hcl:"disabled_data_sources,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// EventsToExport: set of string, optional
	EventsToExport terra.SetValue[terra.StringValue] `hcl:"events_to_export,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubIds: set of string, required
	IothubIds terra.SetValue[terra.StringValue] `hcl:"iothub_ids,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LogAnalyticsWorkspaceId: string, optional
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr"`
	// LogUnmaskedIpsEnabled: bool, optional
	LogUnmaskedIpsEnabled terra.BoolValue `hcl:"log_unmasked_ips_enabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueryForResources: string, optional
	QueryForResources terra.StringValue `hcl:"query_for_resources,attr"`
	// QuerySubscriptionIds: set of string, optional
	QuerySubscriptionIds terra.SetValue[terra.StringValue] `hcl:"query_subscription_ids,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// AdditionalWorkspace: min=0
	AdditionalWorkspace []AdditionalWorkspace `hcl:"additional_workspace,block" validate:"min=0"`
	// RecommendationsEnabled: optional
	RecommendationsEnabled *RecommendationsEnabled `hcl:"recommendations_enabled,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIotSecuritySolutionAttributes struct {
	ref terra.Reference
}

// DisabledDataSources returns a reference to field disabled_data_sources of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) DisabledDataSources() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiss.ref.Append("disabled_data_sources"))
}

// DisplayName returns a reference to field display_name of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("display_name"))
}

// Enabled returns a reference to field enabled of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(aiss.ref.Append("enabled"))
}

// EventsToExport returns a reference to field events_to_export of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) EventsToExport() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiss.ref.Append("events_to_export"))
}

// Id returns a reference to field id of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("id"))
}

// IothubIds returns a reference to field iothub_ids of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) IothubIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiss.ref.Append("iothub_ids"))
}

// Location returns a reference to field location of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("location"))
}

// LogAnalyticsWorkspaceId returns a reference to field log_analytics_workspace_id of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("log_analytics_workspace_id"))
}

// LogUnmaskedIpsEnabled returns a reference to field log_unmasked_ips_enabled of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) LogUnmaskedIpsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aiss.ref.Append("log_unmasked_ips_enabled"))
}

// Name returns a reference to field name of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("name"))
}

// QueryForResources returns a reference to field query_for_resources of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) QueryForResources() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("query_for_resources"))
}

// QuerySubscriptionIds returns a reference to field query_subscription_ids of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) QuerySubscriptionIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aiss.ref.Append("query_subscription_ids"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aiss.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_iot_security_solution.
func (aiss azurermIotSecuritySolutionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aiss.ref.Append("tags"))
}

func (aiss azurermIotSecuritySolutionAttributes) AdditionalWorkspace() terra.SetValue[AdditionalWorkspaceAttributes] {
	return terra.ReferenceAsSet[AdditionalWorkspaceAttributes](aiss.ref.Append("additional_workspace"))
}

func (aiss azurermIotSecuritySolutionAttributes) RecommendationsEnabled() terra.ListValue[RecommendationsEnabledAttributes] {
	return terra.ReferenceAsList[RecommendationsEnabledAttributes](aiss.ref.Append("recommendations_enabled"))
}

func (aiss azurermIotSecuritySolutionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aiss.ref.Append("timeouts"))
}

type azurermIotSecuritySolutionState struct {
	DisabledDataSources     []string                      `json:"disabled_data_sources"`
	DisplayName             string                        `json:"display_name"`
	Enabled                 bool                          `json:"enabled"`
	EventsToExport          []string                      `json:"events_to_export"`
	Id                      string                        `json:"id"`
	IothubIds               []string                      `json:"iothub_ids"`
	Location                string                        `json:"location"`
	LogAnalyticsWorkspaceId string                        `json:"log_analytics_workspace_id"`
	LogUnmaskedIpsEnabled   bool                          `json:"log_unmasked_ips_enabled"`
	Name                    string                        `json:"name"`
	QueryForResources       string                        `json:"query_for_resources"`
	QuerySubscriptionIds    []string                      `json:"query_subscription_ids"`
	ResourceGroupName       string                        `json:"resource_group_name"`
	Tags                    map[string]string             `json:"tags"`
	AdditionalWorkspace     []AdditionalWorkspaceState    `json:"additional_workspace"`
	RecommendationsEnabled  []RecommendationsEnabledState `json:"recommendations_enabled"`
	Timeouts                *TimeoutsState                `json:"timeouts"`
}
