// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_palo_alto_local_rulestack_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_palo_alto_local_rulestack_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPaloAltoLocalRulestackCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apalrc *Resource) Type() string {
	return "azurerm_palo_alto_local_rulestack_certificate"
}

// LocalName returns the local name for [Resource].
func (apalrc *Resource) LocalName() string {
	return apalrc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apalrc *Resource) Configuration() interface{} {
	return apalrc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apalrc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apalrc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apalrc *Resource) Dependencies() terra.Dependencies {
	return apalrc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apalrc *Resource) LifecycleManagement() *terra.Lifecycle {
	return apalrc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apalrc *Resource) Attributes() azurermPaloAltoLocalRulestackCertificateAttributes {
	return azurermPaloAltoLocalRulestackCertificateAttributes{ref: terra.ReferenceResource(apalrc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apalrc *Resource) ImportState(state io.Reader) error {
	apalrc.state = &azurermPaloAltoLocalRulestackCertificateState{}
	if err := json.NewDecoder(state).Decode(apalrc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apalrc.Type(), apalrc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apalrc *Resource) State() (*azurermPaloAltoLocalRulestackCertificateState, bool) {
	return apalrc.state, apalrc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apalrc *Resource) StateMust() *azurermPaloAltoLocalRulestackCertificateState {
	if apalrc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apalrc.Type(), apalrc.LocalName()))
	}
	return apalrc.state
}

// Args contains the configurations for azurerm_palo_alto_local_rulestack_certificate.
type Args struct {
	// AuditComment: string, optional
	AuditComment terra.StringValue `hcl:"audit_comment,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultCertificateId: string, optional
	KeyVaultCertificateId terra.StringValue `hcl:"key_vault_certificate_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RulestackId: string, required
	RulestackId terra.StringValue `hcl:"rulestack_id,attr" validate:"required"`
	// SelfSigned: bool, optional
	SelfSigned terra.BoolValue `hcl:"self_signed,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPaloAltoLocalRulestackCertificateAttributes struct {
	ref terra.Reference
}

// AuditComment returns a reference to field audit_comment of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) AuditComment() terra.StringValue {
	return terra.ReferenceAsString(apalrc.ref.Append("audit_comment"))
}

// Description returns a reference to field description of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(apalrc.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apalrc.ref.Append("id"))
}

// KeyVaultCertificateId returns a reference to field key_vault_certificate_id of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) KeyVaultCertificateId() terra.StringValue {
	return terra.ReferenceAsString(apalrc.ref.Append("key_vault_certificate_id"))
}

// Name returns a reference to field name of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apalrc.ref.Append("name"))
}

// RulestackId returns a reference to field rulestack_id of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) RulestackId() terra.StringValue {
	return terra.ReferenceAsString(apalrc.ref.Append("rulestack_id"))
}

// SelfSigned returns a reference to field self_signed of azurerm_palo_alto_local_rulestack_certificate.
func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) SelfSigned() terra.BoolValue {
	return terra.ReferenceAsBool(apalrc.ref.Append("self_signed"))
}

func (apalrc azurermPaloAltoLocalRulestackCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apalrc.ref.Append("timeouts"))
}

type azurermPaloAltoLocalRulestackCertificateState struct {
	AuditComment          string         `json:"audit_comment"`
	Description           string         `json:"description"`
	Id                    string         `json:"id"`
	KeyVaultCertificateId string         `json:"key_vault_certificate_id"`
	Name                  string         `json:"name"`
	RulestackId           string         `json:"rulestack_id"`
	SelfSigned            bool           `json:"self_signed"`
	Timeouts              *TimeoutsState `json:"timeouts"`
}
