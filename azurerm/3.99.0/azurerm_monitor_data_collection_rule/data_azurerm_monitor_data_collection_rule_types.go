// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_data_collection_rule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataDataFlowAttributes struct {
	ref terra.Reference
}

func (df DataDataFlowAttributes) InternalRef() (terra.Reference, error) {
	return df.ref, nil
}

func (df DataDataFlowAttributes) InternalWithRef(ref terra.Reference) DataDataFlowAttributes {
	return DataDataFlowAttributes{ref: ref}
}

func (df DataDataFlowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return df.ref.InternalTokens()
}

func (df DataDataFlowAttributes) BuiltInTransform() terra.StringValue {
	return terra.ReferenceAsString(df.ref.Append("built_in_transform"))
}

func (df DataDataFlowAttributes) Destinations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](df.ref.Append("destinations"))
}

func (df DataDataFlowAttributes) OutputStream() terra.StringValue {
	return terra.ReferenceAsString(df.ref.Append("output_stream"))
}

func (df DataDataFlowAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](df.ref.Append("streams"))
}

func (df DataDataFlowAttributes) TransformKql() terra.StringValue {
	return terra.ReferenceAsString(df.ref.Append("transform_kql"))
}

type DataDataSourcesAttributes struct {
	ref terra.Reference
}

func (ds DataDataSourcesAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds DataDataSourcesAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesAttributes {
	return DataDataSourcesAttributes{ref: ref}
}

func (ds DataDataSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds DataDataSourcesAttributes) DataImport() terra.ListValue[DataDataSourcesDataImportAttributes] {
	return terra.ReferenceAsList[DataDataSourcesDataImportAttributes](ds.ref.Append("data_import"))
}

func (ds DataDataSourcesAttributes) Extension() terra.ListValue[DataDataSourcesExtensionAttributes] {
	return terra.ReferenceAsList[DataDataSourcesExtensionAttributes](ds.ref.Append("extension"))
}

func (ds DataDataSourcesAttributes) IisLog() terra.ListValue[DataDataSourcesIisLogAttributes] {
	return terra.ReferenceAsList[DataDataSourcesIisLogAttributes](ds.ref.Append("iis_log"))
}

func (ds DataDataSourcesAttributes) LogFile() terra.ListValue[DataDataSourcesLogFileAttributes] {
	return terra.ReferenceAsList[DataDataSourcesLogFileAttributes](ds.ref.Append("log_file"))
}

func (ds DataDataSourcesAttributes) PerformanceCounter() terra.ListValue[DataDataSourcesPerformanceCounterAttributes] {
	return terra.ReferenceAsList[DataDataSourcesPerformanceCounterAttributes](ds.ref.Append("performance_counter"))
}

func (ds DataDataSourcesAttributes) PlatformTelemetry() terra.ListValue[DataDataSourcesPlatformTelemetryAttributes] {
	return terra.ReferenceAsList[DataDataSourcesPlatformTelemetryAttributes](ds.ref.Append("platform_telemetry"))
}

func (ds DataDataSourcesAttributes) PrometheusForwarder() terra.ListValue[DataDataSourcesPrometheusForwarderAttributes] {
	return terra.ReferenceAsList[DataDataSourcesPrometheusForwarderAttributes](ds.ref.Append("prometheus_forwarder"))
}

func (ds DataDataSourcesAttributes) Syslog() terra.ListValue[DataDataSourcesSyslogAttributes] {
	return terra.ReferenceAsList[DataDataSourcesSyslogAttributes](ds.ref.Append("syslog"))
}

func (ds DataDataSourcesAttributes) WindowsEventLog() terra.ListValue[DataDataSourcesWindowsEventLogAttributes] {
	return terra.ReferenceAsList[DataDataSourcesWindowsEventLogAttributes](ds.ref.Append("windows_event_log"))
}

func (ds DataDataSourcesAttributes) WindowsFirewallLog() terra.ListValue[DataDataSourcesWindowsFirewallLogAttributes] {
	return terra.ReferenceAsList[DataDataSourcesWindowsFirewallLogAttributes](ds.ref.Append("windows_firewall_log"))
}

type DataDataSourcesDataImportAttributes struct {
	ref terra.Reference
}

func (di DataDataSourcesDataImportAttributes) InternalRef() (terra.Reference, error) {
	return di.ref, nil
}

func (di DataDataSourcesDataImportAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesDataImportAttributes {
	return DataDataSourcesDataImportAttributes{ref: ref}
}

func (di DataDataSourcesDataImportAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return di.ref.InternalTokens()
}

func (di DataDataSourcesDataImportAttributes) EventHubDataSource() terra.ListValue[DataDataSourcesDataImportEventHubDataSourceAttributes] {
	return terra.ReferenceAsList[DataDataSourcesDataImportEventHubDataSourceAttributes](di.ref.Append("event_hub_data_source"))
}

type DataDataSourcesDataImportEventHubDataSourceAttributes struct {
	ref terra.Reference
}

func (ehds DataDataSourcesDataImportEventHubDataSourceAttributes) InternalRef() (terra.Reference, error) {
	return ehds.ref, nil
}

func (ehds DataDataSourcesDataImportEventHubDataSourceAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesDataImportEventHubDataSourceAttributes {
	return DataDataSourcesDataImportEventHubDataSourceAttributes{ref: ref}
}

func (ehds DataDataSourcesDataImportEventHubDataSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehds.ref.InternalTokens()
}

func (ehds DataDataSourcesDataImportEventHubDataSourceAttributes) ConsumerGroup() terra.StringValue {
	return terra.ReferenceAsString(ehds.ref.Append("consumer_group"))
}

func (ehds DataDataSourcesDataImportEventHubDataSourceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ehds.ref.Append("name"))
}

func (ehds DataDataSourcesDataImportEventHubDataSourceAttributes) Stream() terra.StringValue {
	return terra.ReferenceAsString(ehds.ref.Append("stream"))
}

type DataDataSourcesExtensionAttributes struct {
	ref terra.Reference
}

func (e DataDataSourcesExtensionAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataDataSourcesExtensionAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesExtensionAttributes {
	return DataDataSourcesExtensionAttributes{ref: ref}
}

func (e DataDataSourcesExtensionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataDataSourcesExtensionAttributes) ExtensionJson() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("extension_json"))
}

func (e DataDataSourcesExtensionAttributes) ExtensionName() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("extension_name"))
}

func (e DataDataSourcesExtensionAttributes) InputDataSources() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("input_data_sources"))
}

func (e DataDataSourcesExtensionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataDataSourcesExtensionAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("streams"))
}

type DataDataSourcesIisLogAttributes struct {
	ref terra.Reference
}

func (il DataDataSourcesIisLogAttributes) InternalRef() (terra.Reference, error) {
	return il.ref, nil
}

func (il DataDataSourcesIisLogAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesIisLogAttributes {
	return DataDataSourcesIisLogAttributes{ref: ref}
}

func (il DataDataSourcesIisLogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return il.ref.InternalTokens()
}

func (il DataDataSourcesIisLogAttributes) LogDirectories() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](il.ref.Append("log_directories"))
}

func (il DataDataSourcesIisLogAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(il.ref.Append("name"))
}

func (il DataDataSourcesIisLogAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](il.ref.Append("streams"))
}

type DataDataSourcesLogFileAttributes struct {
	ref terra.Reference
}

func (lf DataDataSourcesLogFileAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DataDataSourcesLogFileAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesLogFileAttributes {
	return DataDataSourcesLogFileAttributes{ref: ref}
}

func (lf DataDataSourcesLogFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DataDataSourcesLogFileAttributes) FilePatterns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lf.ref.Append("file_patterns"))
}

func (lf DataDataSourcesLogFileAttributes) Format() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("format"))
}

func (lf DataDataSourcesLogFileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

func (lf DataDataSourcesLogFileAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lf.ref.Append("streams"))
}

func (lf DataDataSourcesLogFileAttributes) Settings() terra.ListValue[DataDataSourcesLogFileSettingsAttributes] {
	return terra.ReferenceAsList[DataDataSourcesLogFileSettingsAttributes](lf.ref.Append("settings"))
}

type DataDataSourcesLogFileSettingsAttributes struct {
	ref terra.Reference
}

func (s DataDataSourcesLogFileSettingsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataDataSourcesLogFileSettingsAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesLogFileSettingsAttributes {
	return DataDataSourcesLogFileSettingsAttributes{ref: ref}
}

func (s DataDataSourcesLogFileSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataDataSourcesLogFileSettingsAttributes) Text() terra.ListValue[DataDataSourcesLogFileSettingsTextAttributes] {
	return terra.ReferenceAsList[DataDataSourcesLogFileSettingsTextAttributes](s.ref.Append("text"))
}

type DataDataSourcesLogFileSettingsTextAttributes struct {
	ref terra.Reference
}

func (t DataDataSourcesLogFileSettingsTextAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataDataSourcesLogFileSettingsTextAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesLogFileSettingsTextAttributes {
	return DataDataSourcesLogFileSettingsTextAttributes{ref: ref}
}

func (t DataDataSourcesLogFileSettingsTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataDataSourcesLogFileSettingsTextAttributes) RecordStartTimestampFormat() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("record_start_timestamp_format"))
}

type DataDataSourcesPerformanceCounterAttributes struct {
	ref terra.Reference
}

func (pc DataDataSourcesPerformanceCounterAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc DataDataSourcesPerformanceCounterAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesPerformanceCounterAttributes {
	return DataDataSourcesPerformanceCounterAttributes{ref: ref}
}

func (pc DataDataSourcesPerformanceCounterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc DataDataSourcesPerformanceCounterAttributes) CounterSpecifiers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pc.ref.Append("counter_specifiers"))
}

func (pc DataDataSourcesPerformanceCounterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("name"))
}

func (pc DataDataSourcesPerformanceCounterAttributes) SamplingFrequencyInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("sampling_frequency_in_seconds"))
}

func (pc DataDataSourcesPerformanceCounterAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pc.ref.Append("streams"))
}

type DataDataSourcesPlatformTelemetryAttributes struct {
	ref terra.Reference
}

func (pt DataDataSourcesPlatformTelemetryAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt DataDataSourcesPlatformTelemetryAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesPlatformTelemetryAttributes {
	return DataDataSourcesPlatformTelemetryAttributes{ref: ref}
}

func (pt DataDataSourcesPlatformTelemetryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt DataDataSourcesPlatformTelemetryAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("name"))
}

func (pt DataDataSourcesPlatformTelemetryAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pt.ref.Append("streams"))
}

type DataDataSourcesPrometheusForwarderAttributes struct {
	ref terra.Reference
}

func (pf DataDataSourcesPrometheusForwarderAttributes) InternalRef() (terra.Reference, error) {
	return pf.ref, nil
}

func (pf DataDataSourcesPrometheusForwarderAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesPrometheusForwarderAttributes {
	return DataDataSourcesPrometheusForwarderAttributes{ref: ref}
}

func (pf DataDataSourcesPrometheusForwarderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pf.ref.InternalTokens()
}

func (pf DataDataSourcesPrometheusForwarderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("name"))
}

func (pf DataDataSourcesPrometheusForwarderAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pf.ref.Append("streams"))
}

func (pf DataDataSourcesPrometheusForwarderAttributes) LabelIncludeFilter() terra.ListValue[DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes] {
	return terra.ReferenceAsList[DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes](pf.ref.Append("label_include_filter"))
}

type DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes struct {
	ref terra.Reference
}

func (lif DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes) InternalRef() (terra.Reference, error) {
	return lif.ref, nil
}

func (lif DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes {
	return DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes{ref: ref}
}

func (lif DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lif.ref.InternalTokens()
}

func (lif DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(lif.ref.Append("label"))
}

func (lif DataDataSourcesPrometheusForwarderLabelIncludeFilterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(lif.ref.Append("value"))
}

type DataDataSourcesSyslogAttributes struct {
	ref terra.Reference
}

func (s DataDataSourcesSyslogAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataDataSourcesSyslogAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesSyslogAttributes {
	return DataDataSourcesSyslogAttributes{ref: ref}
}

func (s DataDataSourcesSyslogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataDataSourcesSyslogAttributes) FacilityNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("facility_names"))
}

func (s DataDataSourcesSyslogAttributes) LogLevels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("log_levels"))
}

func (s DataDataSourcesSyslogAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DataDataSourcesSyslogAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("streams"))
}

type DataDataSourcesWindowsEventLogAttributes struct {
	ref terra.Reference
}

func (wel DataDataSourcesWindowsEventLogAttributes) InternalRef() (terra.Reference, error) {
	return wel.ref, nil
}

func (wel DataDataSourcesWindowsEventLogAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesWindowsEventLogAttributes {
	return DataDataSourcesWindowsEventLogAttributes{ref: ref}
}

func (wel DataDataSourcesWindowsEventLogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wel.ref.InternalTokens()
}

func (wel DataDataSourcesWindowsEventLogAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(wel.ref.Append("name"))
}

func (wel DataDataSourcesWindowsEventLogAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](wel.ref.Append("streams"))
}

func (wel DataDataSourcesWindowsEventLogAttributes) XPathQueries() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](wel.ref.Append("x_path_queries"))
}

type DataDataSourcesWindowsFirewallLogAttributes struct {
	ref terra.Reference
}

func (wfl DataDataSourcesWindowsFirewallLogAttributes) InternalRef() (terra.Reference, error) {
	return wfl.ref, nil
}

func (wfl DataDataSourcesWindowsFirewallLogAttributes) InternalWithRef(ref terra.Reference) DataDataSourcesWindowsFirewallLogAttributes {
	return DataDataSourcesWindowsFirewallLogAttributes{ref: ref}
}

func (wfl DataDataSourcesWindowsFirewallLogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wfl.ref.InternalTokens()
}

func (wfl DataDataSourcesWindowsFirewallLogAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(wfl.ref.Append("name"))
}

func (wfl DataDataSourcesWindowsFirewallLogAttributes) Streams() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](wfl.ref.Append("streams"))
}

type DataDestinationsAttributes struct {
	ref terra.Reference
}

func (d DataDestinationsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataDestinationsAttributes) InternalWithRef(ref terra.Reference) DataDestinationsAttributes {
	return DataDestinationsAttributes{ref: ref}
}

func (d DataDestinationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataDestinationsAttributes) AzureMonitorMetrics() terra.ListValue[DataDestinationsAzureMonitorMetricsAttributes] {
	return terra.ReferenceAsList[DataDestinationsAzureMonitorMetricsAttributes](d.ref.Append("azure_monitor_metrics"))
}

func (d DataDestinationsAttributes) EventHub() terra.ListValue[DataDestinationsEventHubAttributes] {
	return terra.ReferenceAsList[DataDestinationsEventHubAttributes](d.ref.Append("event_hub"))
}

func (d DataDestinationsAttributes) EventHubDirect() terra.ListValue[DataDestinationsEventHubDirectAttributes] {
	return terra.ReferenceAsList[DataDestinationsEventHubDirectAttributes](d.ref.Append("event_hub_direct"))
}

func (d DataDestinationsAttributes) LogAnalytics() terra.ListValue[DataDestinationsLogAnalyticsAttributes] {
	return terra.ReferenceAsList[DataDestinationsLogAnalyticsAttributes](d.ref.Append("log_analytics"))
}

func (d DataDestinationsAttributes) MonitorAccount() terra.ListValue[DataDestinationsMonitorAccountAttributes] {
	return terra.ReferenceAsList[DataDestinationsMonitorAccountAttributes](d.ref.Append("monitor_account"))
}

func (d DataDestinationsAttributes) StorageBlob() terra.ListValue[DataDestinationsStorageBlobAttributes] {
	return terra.ReferenceAsList[DataDestinationsStorageBlobAttributes](d.ref.Append("storage_blob"))
}

func (d DataDestinationsAttributes) StorageBlobDirect() terra.ListValue[DataDestinationsStorageBlobDirectAttributes] {
	return terra.ReferenceAsList[DataDestinationsStorageBlobDirectAttributes](d.ref.Append("storage_blob_direct"))
}

func (d DataDestinationsAttributes) StorageTableDirect() terra.ListValue[DataDestinationsStorageTableDirectAttributes] {
	return terra.ReferenceAsList[DataDestinationsStorageTableDirectAttributes](d.ref.Append("storage_table_direct"))
}

type DataDestinationsAzureMonitorMetricsAttributes struct {
	ref terra.Reference
}

func (amm DataDestinationsAzureMonitorMetricsAttributes) InternalRef() (terra.Reference, error) {
	return amm.ref, nil
}

func (amm DataDestinationsAzureMonitorMetricsAttributes) InternalWithRef(ref terra.Reference) DataDestinationsAzureMonitorMetricsAttributes {
	return DataDestinationsAzureMonitorMetricsAttributes{ref: ref}
}

func (amm DataDestinationsAzureMonitorMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return amm.ref.InternalTokens()
}

func (amm DataDestinationsAzureMonitorMetricsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amm.ref.Append("name"))
}

type DataDestinationsEventHubAttributes struct {
	ref terra.Reference
}

func (eh DataDestinationsEventHubAttributes) InternalRef() (terra.Reference, error) {
	return eh.ref, nil
}

func (eh DataDestinationsEventHubAttributes) InternalWithRef(ref terra.Reference) DataDestinationsEventHubAttributes {
	return DataDestinationsEventHubAttributes{ref: ref}
}

func (eh DataDestinationsEventHubAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eh.ref.InternalTokens()
}

func (eh DataDestinationsEventHubAttributes) EventHubId() terra.StringValue {
	return terra.ReferenceAsString(eh.ref.Append("event_hub_id"))
}

func (eh DataDestinationsEventHubAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(eh.ref.Append("name"))
}

type DataDestinationsEventHubDirectAttributes struct {
	ref terra.Reference
}

func (ehd DataDestinationsEventHubDirectAttributes) InternalRef() (terra.Reference, error) {
	return ehd.ref, nil
}

func (ehd DataDestinationsEventHubDirectAttributes) InternalWithRef(ref terra.Reference) DataDestinationsEventHubDirectAttributes {
	return DataDestinationsEventHubDirectAttributes{ref: ref}
}

func (ehd DataDestinationsEventHubDirectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehd.ref.InternalTokens()
}

func (ehd DataDestinationsEventHubDirectAttributes) EventHubId() terra.StringValue {
	return terra.ReferenceAsString(ehd.ref.Append("event_hub_id"))
}

func (ehd DataDestinationsEventHubDirectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ehd.ref.Append("name"))
}

type DataDestinationsLogAnalyticsAttributes struct {
	ref terra.Reference
}

func (la DataDestinationsLogAnalyticsAttributes) InternalRef() (terra.Reference, error) {
	return la.ref, nil
}

func (la DataDestinationsLogAnalyticsAttributes) InternalWithRef(ref terra.Reference) DataDestinationsLogAnalyticsAttributes {
	return DataDestinationsLogAnalyticsAttributes{ref: ref}
}

func (la DataDestinationsLogAnalyticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return la.ref.InternalTokens()
}

func (la DataDestinationsLogAnalyticsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(la.ref.Append("name"))
}

func (la DataDestinationsLogAnalyticsAttributes) WorkspaceResourceId() terra.StringValue {
	return terra.ReferenceAsString(la.ref.Append("workspace_resource_id"))
}

type DataDestinationsMonitorAccountAttributes struct {
	ref terra.Reference
}

func (ma DataDestinationsMonitorAccountAttributes) InternalRef() (terra.Reference, error) {
	return ma.ref, nil
}

func (ma DataDestinationsMonitorAccountAttributes) InternalWithRef(ref terra.Reference) DataDestinationsMonitorAccountAttributes {
	return DataDestinationsMonitorAccountAttributes{ref: ref}
}

func (ma DataDestinationsMonitorAccountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ma.ref.InternalTokens()
}

func (ma DataDestinationsMonitorAccountAttributes) MonitorAccountId() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("monitor_account_id"))
}

func (ma DataDestinationsMonitorAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("name"))
}

type DataDestinationsStorageBlobAttributes struct {
	ref terra.Reference
}

func (sb DataDestinationsStorageBlobAttributes) InternalRef() (terra.Reference, error) {
	return sb.ref, nil
}

func (sb DataDestinationsStorageBlobAttributes) InternalWithRef(ref terra.Reference) DataDestinationsStorageBlobAttributes {
	return DataDestinationsStorageBlobAttributes{ref: ref}
}

func (sb DataDestinationsStorageBlobAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sb.ref.InternalTokens()
}

func (sb DataDestinationsStorageBlobAttributes) ContainerName() terra.StringValue {
	return terra.ReferenceAsString(sb.ref.Append("container_name"))
}

func (sb DataDestinationsStorageBlobAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sb.ref.Append("name"))
}

func (sb DataDestinationsStorageBlobAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(sb.ref.Append("storage_account_id"))
}

type DataDestinationsStorageBlobDirectAttributes struct {
	ref terra.Reference
}

func (sbd DataDestinationsStorageBlobDirectAttributes) InternalRef() (terra.Reference, error) {
	return sbd.ref, nil
}

func (sbd DataDestinationsStorageBlobDirectAttributes) InternalWithRef(ref terra.Reference) DataDestinationsStorageBlobDirectAttributes {
	return DataDestinationsStorageBlobDirectAttributes{ref: ref}
}

func (sbd DataDestinationsStorageBlobDirectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sbd.ref.InternalTokens()
}

func (sbd DataDestinationsStorageBlobDirectAttributes) ContainerName() terra.StringValue {
	return terra.ReferenceAsString(sbd.ref.Append("container_name"))
}

func (sbd DataDestinationsStorageBlobDirectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sbd.ref.Append("name"))
}

func (sbd DataDestinationsStorageBlobDirectAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(sbd.ref.Append("storage_account_id"))
}

type DataDestinationsStorageTableDirectAttributes struct {
	ref terra.Reference
}

func (std DataDestinationsStorageTableDirectAttributes) InternalRef() (terra.Reference, error) {
	return std.ref, nil
}

func (std DataDestinationsStorageTableDirectAttributes) InternalWithRef(ref terra.Reference) DataDestinationsStorageTableDirectAttributes {
	return DataDestinationsStorageTableDirectAttributes{ref: ref}
}

func (std DataDestinationsStorageTableDirectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return std.ref.InternalTokens()
}

func (std DataDestinationsStorageTableDirectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(std.ref.Append("name"))
}

func (std DataDestinationsStorageTableDirectAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(std.ref.Append("storage_account_id"))
}

func (std DataDestinationsStorageTableDirectAttributes) TableName() terra.StringValue {
	return terra.ReferenceAsString(std.ref.Append("table_name"))
}

type DataIdentityAttributes struct {
	ref terra.Reference
}

func (i DataIdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIdentityAttributes) InternalWithRef(ref terra.Reference) DataIdentityAttributes {
	return DataIdentityAttributes{ref: ref}
}

func (i DataIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i DataIdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i DataIdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i DataIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type DataStreamDeclarationAttributes struct {
	ref terra.Reference
}

func (sd DataStreamDeclarationAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd DataStreamDeclarationAttributes) InternalWithRef(ref terra.Reference) DataStreamDeclarationAttributes {
	return DataStreamDeclarationAttributes{ref: ref}
}

func (sd DataStreamDeclarationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd DataStreamDeclarationAttributes) StreamName() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("stream_name"))
}

func (sd DataStreamDeclarationAttributes) Column() terra.ListValue[DataStreamDeclarationColumnAttributes] {
	return terra.ReferenceAsList[DataStreamDeclarationColumnAttributes](sd.ref.Append("column"))
}

type DataStreamDeclarationColumnAttributes struct {
	ref terra.Reference
}

func (c DataStreamDeclarationColumnAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataStreamDeclarationColumnAttributes) InternalWithRef(ref terra.Reference) DataStreamDeclarationColumnAttributes {
	return DataStreamDeclarationColumnAttributes{ref: ref}
}

func (c DataStreamDeclarationColumnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataStreamDeclarationColumnAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DataStreamDeclarationColumnAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataDataFlowState struct {
	BuiltInTransform string   `json:"built_in_transform"`
	Destinations     []string `json:"destinations"`
	OutputStream     string   `json:"output_stream"`
	Streams          []string `json:"streams"`
	TransformKql     string   `json:"transform_kql"`
}

type DataDataSourcesState struct {
	DataImport          []DataDataSourcesDataImportState          `json:"data_import"`
	Extension           []DataDataSourcesExtensionState           `json:"extension"`
	IisLog              []DataDataSourcesIisLogState              `json:"iis_log"`
	LogFile             []DataDataSourcesLogFileState             `json:"log_file"`
	PerformanceCounter  []DataDataSourcesPerformanceCounterState  `json:"performance_counter"`
	PlatformTelemetry   []DataDataSourcesPlatformTelemetryState   `json:"platform_telemetry"`
	PrometheusForwarder []DataDataSourcesPrometheusForwarderState `json:"prometheus_forwarder"`
	Syslog              []DataDataSourcesSyslogState              `json:"syslog"`
	WindowsEventLog     []DataDataSourcesWindowsEventLogState     `json:"windows_event_log"`
	WindowsFirewallLog  []DataDataSourcesWindowsFirewallLogState  `json:"windows_firewall_log"`
}

type DataDataSourcesDataImportState struct {
	EventHubDataSource []DataDataSourcesDataImportEventHubDataSourceState `json:"event_hub_data_source"`
}

type DataDataSourcesDataImportEventHubDataSourceState struct {
	ConsumerGroup string `json:"consumer_group"`
	Name          string `json:"name"`
	Stream        string `json:"stream"`
}

type DataDataSourcesExtensionState struct {
	ExtensionJson    string   `json:"extension_json"`
	ExtensionName    string   `json:"extension_name"`
	InputDataSources []string `json:"input_data_sources"`
	Name             string   `json:"name"`
	Streams          []string `json:"streams"`
}

type DataDataSourcesIisLogState struct {
	LogDirectories []string `json:"log_directories"`
	Name           string   `json:"name"`
	Streams        []string `json:"streams"`
}

type DataDataSourcesLogFileState struct {
	FilePatterns []string                              `json:"file_patterns"`
	Format       string                                `json:"format"`
	Name         string                                `json:"name"`
	Streams      []string                              `json:"streams"`
	Settings     []DataDataSourcesLogFileSettingsState `json:"settings"`
}

type DataDataSourcesLogFileSettingsState struct {
	Text []DataDataSourcesLogFileSettingsTextState `json:"text"`
}

type DataDataSourcesLogFileSettingsTextState struct {
	RecordStartTimestampFormat string `json:"record_start_timestamp_format"`
}

type DataDataSourcesPerformanceCounterState struct {
	CounterSpecifiers          []string `json:"counter_specifiers"`
	Name                       string   `json:"name"`
	SamplingFrequencyInSeconds float64  `json:"sampling_frequency_in_seconds"`
	Streams                    []string `json:"streams"`
}

type DataDataSourcesPlatformTelemetryState struct {
	Name    string   `json:"name"`
	Streams []string `json:"streams"`
}

type DataDataSourcesPrometheusForwarderState struct {
	Name               string                                                      `json:"name"`
	Streams            []string                                                    `json:"streams"`
	LabelIncludeFilter []DataDataSourcesPrometheusForwarderLabelIncludeFilterState `json:"label_include_filter"`
}

type DataDataSourcesPrometheusForwarderLabelIncludeFilterState struct {
	Label string `json:"label"`
	Value string `json:"value"`
}

type DataDataSourcesSyslogState struct {
	FacilityNames []string `json:"facility_names"`
	LogLevels     []string `json:"log_levels"`
	Name          string   `json:"name"`
	Streams       []string `json:"streams"`
}

type DataDataSourcesWindowsEventLogState struct {
	Name         string   `json:"name"`
	Streams      []string `json:"streams"`
	XPathQueries []string `json:"x_path_queries"`
}

type DataDataSourcesWindowsFirewallLogState struct {
	Name    string   `json:"name"`
	Streams []string `json:"streams"`
}

type DataDestinationsState struct {
	AzureMonitorMetrics []DataDestinationsAzureMonitorMetricsState `json:"azure_monitor_metrics"`
	EventHub            []DataDestinationsEventHubState            `json:"event_hub"`
	EventHubDirect      []DataDestinationsEventHubDirectState      `json:"event_hub_direct"`
	LogAnalytics        []DataDestinationsLogAnalyticsState        `json:"log_analytics"`
	MonitorAccount      []DataDestinationsMonitorAccountState      `json:"monitor_account"`
	StorageBlob         []DataDestinationsStorageBlobState         `json:"storage_blob"`
	StorageBlobDirect   []DataDestinationsStorageBlobDirectState   `json:"storage_blob_direct"`
	StorageTableDirect  []DataDestinationsStorageTableDirectState  `json:"storage_table_direct"`
}

type DataDestinationsAzureMonitorMetricsState struct {
	Name string `json:"name"`
}

type DataDestinationsEventHubState struct {
	EventHubId string `json:"event_hub_id"`
	Name       string `json:"name"`
}

type DataDestinationsEventHubDirectState struct {
	EventHubId string `json:"event_hub_id"`
	Name       string `json:"name"`
}

type DataDestinationsLogAnalyticsState struct {
	Name                string `json:"name"`
	WorkspaceResourceId string `json:"workspace_resource_id"`
}

type DataDestinationsMonitorAccountState struct {
	MonitorAccountId string `json:"monitor_account_id"`
	Name             string `json:"name"`
}

type DataDestinationsStorageBlobState struct {
	ContainerName    string `json:"container_name"`
	Name             string `json:"name"`
	StorageAccountId string `json:"storage_account_id"`
}

type DataDestinationsStorageBlobDirectState struct {
	ContainerName    string `json:"container_name"`
	Name             string `json:"name"`
	StorageAccountId string `json:"storage_account_id"`
}

type DataDestinationsStorageTableDirectState struct {
	Name             string `json:"name"`
	StorageAccountId string `json:"storage_account_id"`
	TableName        string `json:"table_name"`
}

type DataIdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	PrincipalId string   `json:"principal_id"`
	TenantId    string   `json:"tenant_id"`
	Type        string   `json:"type"`
}

type DataStreamDeclarationState struct {
	StreamName string                             `json:"stream_name"`
	Column     []DataStreamDeclarationColumnState `json:"column"`
}

type DataStreamDeclarationColumnState struct {
	Name string `json:"name"`
	Type string `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
