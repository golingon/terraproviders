// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_storage_account_customer_managed_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_storage_account_customer_managed_key.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermStorageAccountCustomerManagedKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asacmk *Resource) Type() string {
	return "azurerm_storage_account_customer_managed_key"
}

// LocalName returns the local name for [Resource].
func (asacmk *Resource) LocalName() string {
	return asacmk.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asacmk *Resource) Configuration() interface{} {
	return asacmk.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asacmk *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asacmk)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asacmk *Resource) Dependencies() terra.Dependencies {
	return asacmk.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asacmk *Resource) LifecycleManagement() *terra.Lifecycle {
	return asacmk.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asacmk *Resource) Attributes() azurermStorageAccountCustomerManagedKeyAttributes {
	return azurermStorageAccountCustomerManagedKeyAttributes{ref: terra.ReferenceResource(asacmk)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asacmk *Resource) ImportState(state io.Reader) error {
	asacmk.state = &azurermStorageAccountCustomerManagedKeyState{}
	if err := json.NewDecoder(state).Decode(asacmk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asacmk.Type(), asacmk.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asacmk *Resource) State() (*azurermStorageAccountCustomerManagedKeyState, bool) {
	return asacmk.state, asacmk.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asacmk *Resource) StateMust() *azurermStorageAccountCustomerManagedKeyState {
	if asacmk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asacmk.Type(), asacmk.LocalName()))
	}
	return asacmk.state
}

// Args contains the configurations for azurerm_storage_account_customer_managed_key.
type Args struct {
	// FederatedIdentityClientId: string, optional
	FederatedIdentityClientId terra.StringValue `hcl:"federated_identity_client_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyName: string, required
	KeyName terra.StringValue `hcl:"key_name,attr" validate:"required"`
	// KeyVaultId: string, optional
	KeyVaultId terra.StringValue `hcl:"key_vault_id,attr"`
	// KeyVaultUri: string, optional
	KeyVaultUri terra.StringValue `hcl:"key_vault_uri,attr"`
	// KeyVersion: string, optional
	KeyVersion terra.StringValue `hcl:"key_version,attr"`
	// StorageAccountId: string, required
	StorageAccountId terra.StringValue `hcl:"storage_account_id,attr" validate:"required"`
	// UserAssignedIdentityId: string, optional
	UserAssignedIdentityId terra.StringValue `hcl:"user_assigned_identity_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermStorageAccountCustomerManagedKeyAttributes struct {
	ref terra.Reference
}

// FederatedIdentityClientId returns a reference to field federated_identity_client_id of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) FederatedIdentityClientId() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("federated_identity_client_id"))
}

// Id returns a reference to field id of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("id"))
}

// KeyName returns a reference to field key_name of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("key_name"))
}

// KeyVaultId returns a reference to field key_vault_id of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) KeyVaultId() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("key_vault_id"))
}

// KeyVaultUri returns a reference to field key_vault_uri of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) KeyVaultUri() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("key_vault_uri"))
}

// KeyVersion returns a reference to field key_version of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) KeyVersion() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("key_version"))
}

// StorageAccountId returns a reference to field storage_account_id of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("storage_account_id"))
}

// UserAssignedIdentityId returns a reference to field user_assigned_identity_id of azurerm_storage_account_customer_managed_key.
func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) UserAssignedIdentityId() terra.StringValue {
	return terra.ReferenceAsString(asacmk.ref.Append("user_assigned_identity_id"))
}

func (asacmk azurermStorageAccountCustomerManagedKeyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asacmk.ref.Append("timeouts"))
}

type azurermStorageAccountCustomerManagedKeyState struct {
	FederatedIdentityClientId string         `json:"federated_identity_client_id"`
	Id                        string         `json:"id"`
	KeyName                   string         `json:"key_name"`
	KeyVaultId                string         `json:"key_vault_id"`
	KeyVaultUri               string         `json:"key_vault_uri"`
	KeyVersion                string         `json:"key_version"`
	StorageAccountId          string         `json:"storage_account_id"`
	UserAssignedIdentityId    string         `json:"user_assigned_identity_id"`
	Timeouts                  *TimeoutsState `json:"timeouts"`
}
