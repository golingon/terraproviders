// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_hdinsight_hbase_cluster

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_hdinsight_hbase_cluster.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermHdinsightHbaseClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ahhc *Resource) Type() string {
	return "azurerm_hdinsight_hbase_cluster"
}

// LocalName returns the local name for [Resource].
func (ahhc *Resource) LocalName() string {
	return ahhc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ahhc *Resource) Configuration() interface{} {
	return ahhc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ahhc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ahhc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ahhc *Resource) Dependencies() terra.Dependencies {
	return ahhc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ahhc *Resource) LifecycleManagement() *terra.Lifecycle {
	return ahhc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ahhc *Resource) Attributes() azurermHdinsightHbaseClusterAttributes {
	return azurermHdinsightHbaseClusterAttributes{ref: terra.ReferenceResource(ahhc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ahhc *Resource) ImportState(state io.Reader) error {
	ahhc.state = &azurermHdinsightHbaseClusterState{}
	if err := json.NewDecoder(state).Decode(ahhc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ahhc.Type(), ahhc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ahhc *Resource) State() (*azurermHdinsightHbaseClusterState, bool) {
	return ahhc.state, ahhc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ahhc *Resource) StateMust() *azurermHdinsightHbaseClusterState {
	if ahhc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ahhc.Type(), ahhc.LocalName()))
	}
	return ahhc.state
}

// Args contains the configurations for azurerm_hdinsight_hbase_cluster.
type Args struct {
	// ClusterVersion: string, required
	ClusterVersion terra.StringValue `hcl:"cluster_version,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Tier: string, required
	Tier terra.StringValue `hcl:"tier,attr" validate:"required"`
	// TlsMinVersion: string, optional
	TlsMinVersion terra.StringValue `hcl:"tls_min_version,attr"`
	// ComponentVersion: required
	ComponentVersion *ComponentVersion `hcl:"component_version,block" validate:"required"`
	// ComputeIsolation: optional
	ComputeIsolation *ComputeIsolation `hcl:"compute_isolation,block"`
	// DiskEncryption: min=0
	DiskEncryption []DiskEncryption `hcl:"disk_encryption,block" validate:"min=0"`
	// Extension: optional
	Extension *Extension `hcl:"extension,block"`
	// Gateway: required
	Gateway *Gateway `hcl:"gateway,block" validate:"required"`
	// Metastores: optional
	Metastores *Metastores `hcl:"metastores,block"`
	// Monitor: optional
	Monitor *Monitor `hcl:"monitor,block"`
	// Network: optional
	Network *Network `hcl:"network,block"`
	// Roles: required
	Roles *Roles `hcl:"roles,block" validate:"required"`
	// SecurityProfile: optional
	SecurityProfile *SecurityProfile `hcl:"security_profile,block"`
	// StorageAccount: min=0
	StorageAccount []StorageAccount `hcl:"storage_account,block" validate:"min=0"`
	// StorageAccountGen2: optional
	StorageAccountGen2 *StorageAccountGen2 `hcl:"storage_account_gen2,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermHdinsightHbaseClusterAttributes struct {
	ref terra.Reference
}

// ClusterVersion returns a reference to field cluster_version of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) ClusterVersion() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("cluster_version"))
}

// HttpsEndpoint returns a reference to field https_endpoint of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) HttpsEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("https_endpoint"))
}

// Id returns a reference to field id of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("resource_group_name"))
}

// SshEndpoint returns a reference to field ssh_endpoint of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) SshEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("ssh_endpoint"))
}

// Tags returns a reference to field tags of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ahhc.ref.Append("tags"))
}

// Tier returns a reference to field tier of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) Tier() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("tier"))
}

// TlsMinVersion returns a reference to field tls_min_version of azurerm_hdinsight_hbase_cluster.
func (ahhc azurermHdinsightHbaseClusterAttributes) TlsMinVersion() terra.StringValue {
	return terra.ReferenceAsString(ahhc.ref.Append("tls_min_version"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) ComponentVersion() terra.ListValue[ComponentVersionAttributes] {
	return terra.ReferenceAsList[ComponentVersionAttributes](ahhc.ref.Append("component_version"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) ComputeIsolation() terra.ListValue[ComputeIsolationAttributes] {
	return terra.ReferenceAsList[ComputeIsolationAttributes](ahhc.ref.Append("compute_isolation"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) DiskEncryption() terra.ListValue[DiskEncryptionAttributes] {
	return terra.ReferenceAsList[DiskEncryptionAttributes](ahhc.ref.Append("disk_encryption"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Extension() terra.ListValue[ExtensionAttributes] {
	return terra.ReferenceAsList[ExtensionAttributes](ahhc.ref.Append("extension"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Gateway() terra.ListValue[GatewayAttributes] {
	return terra.ReferenceAsList[GatewayAttributes](ahhc.ref.Append("gateway"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Metastores() terra.ListValue[MetastoresAttributes] {
	return terra.ReferenceAsList[MetastoresAttributes](ahhc.ref.Append("metastores"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Monitor() terra.ListValue[MonitorAttributes] {
	return terra.ReferenceAsList[MonitorAttributes](ahhc.ref.Append("monitor"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Network() terra.ListValue[NetworkAttributes] {
	return terra.ReferenceAsList[NetworkAttributes](ahhc.ref.Append("network"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Roles() terra.ListValue[RolesAttributes] {
	return terra.ReferenceAsList[RolesAttributes](ahhc.ref.Append("roles"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) SecurityProfile() terra.ListValue[SecurityProfileAttributes] {
	return terra.ReferenceAsList[SecurityProfileAttributes](ahhc.ref.Append("security_profile"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) StorageAccount() terra.ListValue[StorageAccountAttributes] {
	return terra.ReferenceAsList[StorageAccountAttributes](ahhc.ref.Append("storage_account"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) StorageAccountGen2() terra.ListValue[StorageAccountGen2Attributes] {
	return terra.ReferenceAsList[StorageAccountGen2Attributes](ahhc.ref.Append("storage_account_gen2"))
}

func (ahhc azurermHdinsightHbaseClusterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ahhc.ref.Append("timeouts"))
}

type azurermHdinsightHbaseClusterState struct {
	ClusterVersion     string                    `json:"cluster_version"`
	HttpsEndpoint      string                    `json:"https_endpoint"`
	Id                 string                    `json:"id"`
	Location           string                    `json:"location"`
	Name               string                    `json:"name"`
	ResourceGroupName  string                    `json:"resource_group_name"`
	SshEndpoint        string                    `json:"ssh_endpoint"`
	Tags               map[string]string         `json:"tags"`
	Tier               string                    `json:"tier"`
	TlsMinVersion      string                    `json:"tls_min_version"`
	ComponentVersion   []ComponentVersionState   `json:"component_version"`
	ComputeIsolation   []ComputeIsolationState   `json:"compute_isolation"`
	DiskEncryption     []DiskEncryptionState     `json:"disk_encryption"`
	Extension          []ExtensionState          `json:"extension"`
	Gateway            []GatewayState            `json:"gateway"`
	Metastores         []MetastoresState         `json:"metastores"`
	Monitor            []MonitorState            `json:"monitor"`
	Network            []NetworkState            `json:"network"`
	Roles              []RolesState              `json:"roles"`
	SecurityProfile    []SecurityProfileState    `json:"security_profile"`
	StorageAccount     []StorageAccountState     `json:"storage_account"`
	StorageAccountGen2 []StorageAccountGen2State `json:"storage_account_gen2"`
	Timeouts           *TimeoutsState            `json:"timeouts"`
}
