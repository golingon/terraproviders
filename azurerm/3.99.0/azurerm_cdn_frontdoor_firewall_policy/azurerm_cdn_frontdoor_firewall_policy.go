// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_frontdoor_firewall_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cdn_frontdoor_firewall_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCdnFrontdoorFirewallPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acffp *Resource) Type() string {
	return "azurerm_cdn_frontdoor_firewall_policy"
}

// LocalName returns the local name for [Resource].
func (acffp *Resource) LocalName() string {
	return acffp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acffp *Resource) Configuration() interface{} {
	return acffp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acffp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acffp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acffp *Resource) Dependencies() terra.Dependencies {
	return acffp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acffp *Resource) LifecycleManagement() *terra.Lifecycle {
	return acffp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acffp *Resource) Attributes() azurermCdnFrontdoorFirewallPolicyAttributes {
	return azurermCdnFrontdoorFirewallPolicyAttributes{ref: terra.ReferenceResource(acffp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acffp *Resource) ImportState(state io.Reader) error {
	acffp.state = &azurermCdnFrontdoorFirewallPolicyState{}
	if err := json.NewDecoder(state).Decode(acffp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acffp.Type(), acffp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acffp *Resource) State() (*azurermCdnFrontdoorFirewallPolicyState, bool) {
	return acffp.state, acffp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acffp *Resource) StateMust() *azurermCdnFrontdoorFirewallPolicyState {
	if acffp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acffp.Type(), acffp.LocalName()))
	}
	return acffp.state
}

// Args contains the configurations for azurerm_cdn_frontdoor_firewall_policy.
type Args struct {
	// CustomBlockResponseBody: string, optional
	CustomBlockResponseBody terra.StringValue `hcl:"custom_block_response_body,attr"`
	// CustomBlockResponseStatusCode: number, optional
	CustomBlockResponseStatusCode terra.NumberValue `hcl:"custom_block_response_status_code,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mode: string, required
	Mode terra.StringValue `hcl:"mode,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RedirectUrl: string, optional
	RedirectUrl terra.StringValue `hcl:"redirect_url,attr"`
	// RequestBodyCheckEnabled: bool, optional
	RequestBodyCheckEnabled terra.BoolValue `hcl:"request_body_check_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, required
	SkuName terra.StringValue `hcl:"sku_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// CustomRule: min=0,max=100
	CustomRule []CustomRule `hcl:"custom_rule,block" validate:"min=0,max=100"`
	// ManagedRule: min=0,max=100
	ManagedRule []ManagedRule `hcl:"managed_rule,block" validate:"min=0,max=100"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCdnFrontdoorFirewallPolicyAttributes struct {
	ref terra.Reference
}

// CustomBlockResponseBody returns a reference to field custom_block_response_body of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) CustomBlockResponseBody() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("custom_block_response_body"))
}

// CustomBlockResponseStatusCode returns a reference to field custom_block_response_status_code of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) CustomBlockResponseStatusCode() terra.NumberValue {
	return terra.ReferenceAsNumber(acffp.ref.Append("custom_block_response_status_code"))
}

// Enabled returns a reference to field enabled of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(acffp.ref.Append("enabled"))
}

// FrontendEndpointIds returns a reference to field frontend_endpoint_ids of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) FrontendEndpointIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acffp.ref.Append("frontend_endpoint_ids"))
}

// Id returns a reference to field id of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("id"))
}

// Mode returns a reference to field mode of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("mode"))
}

// Name returns a reference to field name of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("name"))
}

// RedirectUrl returns a reference to field redirect_url of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) RedirectUrl() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("redirect_url"))
}

// RequestBodyCheckEnabled returns a reference to field request_body_check_enabled of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) RequestBodyCheckEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(acffp.ref.Append("request_body_check_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("resource_group_name"))
}

// SkuName returns a reference to field sku_name of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(acffp.ref.Append("sku_name"))
}

// Tags returns a reference to field tags of azurerm_cdn_frontdoor_firewall_policy.
func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](acffp.ref.Append("tags"))
}

func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) CustomRule() terra.ListValue[CustomRuleAttributes] {
	return terra.ReferenceAsList[CustomRuleAttributes](acffp.ref.Append("custom_rule"))
}

func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) ManagedRule() terra.ListValue[ManagedRuleAttributes] {
	return terra.ReferenceAsList[ManagedRuleAttributes](acffp.ref.Append("managed_rule"))
}

func (acffp azurermCdnFrontdoorFirewallPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acffp.ref.Append("timeouts"))
}

type azurermCdnFrontdoorFirewallPolicyState struct {
	CustomBlockResponseBody       string             `json:"custom_block_response_body"`
	CustomBlockResponseStatusCode float64            `json:"custom_block_response_status_code"`
	Enabled                       bool               `json:"enabled"`
	FrontendEndpointIds           []string           `json:"frontend_endpoint_ids"`
	Id                            string             `json:"id"`
	Mode                          string             `json:"mode"`
	Name                          string             `json:"name"`
	RedirectUrl                   string             `json:"redirect_url"`
	RequestBodyCheckEnabled       bool               `json:"request_body_check_enabled"`
	ResourceGroupName             string             `json:"resource_group_name"`
	SkuName                       string             `json:"sku_name"`
	Tags                          map[string]string  `json:"tags"`
	CustomRule                    []CustomRuleState  `json:"custom_rule"`
	ManagedRule                   []ManagedRuleState `json:"managed_rule"`
	Timeouts                      *TimeoutsState     `json:"timeouts"`
}
