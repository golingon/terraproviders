// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_service_certificate_binding

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_service_certificate_binding.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppServiceCertificateBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aascb *Resource) Type() string {
	return "azurerm_app_service_certificate_binding"
}

// LocalName returns the local name for [Resource].
func (aascb *Resource) LocalName() string {
	return aascb.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aascb *Resource) Configuration() interface{} {
	return aascb.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aascb *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aascb)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aascb *Resource) Dependencies() terra.Dependencies {
	return aascb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aascb *Resource) LifecycleManagement() *terra.Lifecycle {
	return aascb.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aascb *Resource) Attributes() azurermAppServiceCertificateBindingAttributes {
	return azurermAppServiceCertificateBindingAttributes{ref: terra.ReferenceResource(aascb)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aascb *Resource) ImportState(state io.Reader) error {
	aascb.state = &azurermAppServiceCertificateBindingState{}
	if err := json.NewDecoder(state).Decode(aascb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aascb.Type(), aascb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aascb *Resource) State() (*azurermAppServiceCertificateBindingState, bool) {
	return aascb.state, aascb.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aascb *Resource) StateMust() *azurermAppServiceCertificateBindingState {
	if aascb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aascb.Type(), aascb.LocalName()))
	}
	return aascb.state
}

// Args contains the configurations for azurerm_app_service_certificate_binding.
type Args struct {
	// CertificateId: string, required
	CertificateId terra.StringValue `hcl:"certificate_id,attr" validate:"required"`
	// HostnameBindingId: string, required
	HostnameBindingId terra.StringValue `hcl:"hostname_binding_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SslState: string, required
	SslState terra.StringValue `hcl:"ssl_state,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppServiceCertificateBindingAttributes struct {
	ref terra.Reference
}

// AppServiceName returns a reference to field app_service_name of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) AppServiceName() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("app_service_name"))
}

// CertificateId returns a reference to field certificate_id of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) CertificateId() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("certificate_id"))
}

// Hostname returns a reference to field hostname of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) Hostname() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("hostname"))
}

// HostnameBindingId returns a reference to field hostname_binding_id of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) HostnameBindingId() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("hostname_binding_id"))
}

// Id returns a reference to field id of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("id"))
}

// SslState returns a reference to field ssl_state of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) SslState() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("ssl_state"))
}

// Thumbprint returns a reference to field thumbprint of azurerm_app_service_certificate_binding.
func (aascb azurermAppServiceCertificateBindingAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(aascb.ref.Append("thumbprint"))
}

func (aascb azurermAppServiceCertificateBindingAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aascb.ref.Append("timeouts"))
}

type azurermAppServiceCertificateBindingState struct {
	AppServiceName    string         `json:"app_service_name"`
	CertificateId     string         `json:"certificate_id"`
	Hostname          string         `json:"hostname"`
	HostnameBindingId string         `json:"hostname_binding_id"`
	Id                string         `json:"id"`
	SslState          string         `json:"ssl_state"`
	Thumbprint        string         `json:"thumbprint"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
