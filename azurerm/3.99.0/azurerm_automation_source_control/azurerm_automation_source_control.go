// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_source_control

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_source_control.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationSourceControlState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasc *Resource) Type() string {
	return "azurerm_automation_source_control"
}

// LocalName returns the local name for [Resource].
func (aasc *Resource) LocalName() string {
	return aasc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasc *Resource) Configuration() interface{} {
	return aasc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasc *Resource) Dependencies() terra.Dependencies {
	return aasc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasc *Resource) Attributes() azurermAutomationSourceControlAttributes {
	return azurermAutomationSourceControlAttributes{ref: terra.ReferenceResource(aasc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasc *Resource) ImportState(state io.Reader) error {
	aasc.state = &azurermAutomationSourceControlState{}
	if err := json.NewDecoder(state).Decode(aasc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasc.Type(), aasc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasc *Resource) State() (*azurermAutomationSourceControlState, bool) {
	return aasc.state, aasc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasc *Resource) StateMust() *azurermAutomationSourceControlState {
	if aasc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasc.Type(), aasc.LocalName()))
	}
	return aasc.state
}

// Args contains the configurations for azurerm_automation_source_control.
type Args struct {
	// AutomaticSync: bool, optional
	AutomaticSync terra.BoolValue `hcl:"automatic_sync,attr"`
	// AutomationAccountId: string, required
	AutomationAccountId terra.StringValue `hcl:"automation_account_id,attr" validate:"required"`
	// Branch: string, optional
	Branch terra.StringValue `hcl:"branch,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// FolderPath: string, required
	FolderPath terra.StringValue `hcl:"folder_path,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublishRunbookEnabled: bool, optional
	PublishRunbookEnabled terra.BoolValue `hcl:"publish_runbook_enabled,attr"`
	// RepositoryUrl: string, required
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
	// SourceControlType: string, required
	SourceControlType terra.StringValue `hcl:"source_control_type,attr" validate:"required"`
	// Security: required
	Security *Security `hcl:"security,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationSourceControlAttributes struct {
	ref terra.Reference
}

// AutomaticSync returns a reference to field automatic_sync of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) AutomaticSync() terra.BoolValue {
	return terra.ReferenceAsBool(aasc.ref.Append("automatic_sync"))
}

// AutomationAccountId returns a reference to field automation_account_id of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) AutomationAccountId() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("automation_account_id"))
}

// Branch returns a reference to field branch of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) Branch() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("branch"))
}

// Description returns a reference to field description of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("description"))
}

// FolderPath returns a reference to field folder_path of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) FolderPath() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("folder_path"))
}

// Id returns a reference to field id of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("name"))
}

// PublishRunbookEnabled returns a reference to field publish_runbook_enabled of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) PublishRunbookEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aasc.ref.Append("publish_runbook_enabled"))
}

// RepositoryUrl returns a reference to field repository_url of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("repository_url"))
}

// SourceControlType returns a reference to field source_control_type of azurerm_automation_source_control.
func (aasc azurermAutomationSourceControlAttributes) SourceControlType() terra.StringValue {
	return terra.ReferenceAsString(aasc.ref.Append("source_control_type"))
}

func (aasc azurermAutomationSourceControlAttributes) Security() terra.ListValue[SecurityAttributes] {
	return terra.ReferenceAsList[SecurityAttributes](aasc.ref.Append("security"))
}

func (aasc azurermAutomationSourceControlAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aasc.ref.Append("timeouts"))
}

type azurermAutomationSourceControlState struct {
	AutomaticSync         bool            `json:"automatic_sync"`
	AutomationAccountId   string          `json:"automation_account_id"`
	Branch                string          `json:"branch"`
	Description           string          `json:"description"`
	FolderPath            string          `json:"folder_path"`
	Id                    string          `json:"id"`
	Name                  string          `json:"name"`
	PublishRunbookEnabled bool            `json:"publish_runbook_enabled"`
	RepositoryUrl         string          `json:"repository_url"`
	SourceControlType     string          `json:"source_control_type"`
	Security              []SecurityState `json:"security"`
	Timeouts              *TimeoutsState  `json:"timeouts"`
}
