// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_service_public_certificate

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_service_public_certificate.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppServicePublicCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaspc *Resource) Type() string {
	return "azurerm_app_service_public_certificate"
}

// LocalName returns the local name for [Resource].
func (aaspc *Resource) LocalName() string {
	return aaspc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaspc *Resource) Configuration() interface{} {
	return aaspc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaspc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaspc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaspc *Resource) Dependencies() terra.Dependencies {
	return aaspc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaspc *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaspc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaspc *Resource) Attributes() azurermAppServicePublicCertificateAttributes {
	return azurermAppServicePublicCertificateAttributes{ref: terra.ReferenceResource(aaspc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaspc *Resource) ImportState(state io.Reader) error {
	aaspc.state = &azurermAppServicePublicCertificateState{}
	if err := json.NewDecoder(state).Decode(aaspc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaspc.Type(), aaspc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaspc *Resource) State() (*azurermAppServicePublicCertificateState, bool) {
	return aaspc.state, aaspc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaspc *Resource) StateMust() *azurermAppServicePublicCertificateState {
	if aaspc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaspc.Type(), aaspc.LocalName()))
	}
	return aaspc.state
}

// Args contains the configurations for azurerm_app_service_public_certificate.
type Args struct {
	// AppServiceName: string, required
	AppServiceName terra.StringValue `hcl:"app_service_name,attr" validate:"required"`
	// Blob: string, required
	Blob terra.StringValue `hcl:"blob,attr" validate:"required"`
	// CertificateLocation: string, required
	CertificateLocation terra.StringValue `hcl:"certificate_location,attr" validate:"required"`
	// CertificateName: string, required
	CertificateName terra.StringValue `hcl:"certificate_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppServicePublicCertificateAttributes struct {
	ref terra.Reference
}

// AppServiceName returns a reference to field app_service_name of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) AppServiceName() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("app_service_name"))
}

// Blob returns a reference to field blob of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) Blob() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("blob"))
}

// CertificateLocation returns a reference to field certificate_location of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) CertificateLocation() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("certificate_location"))
}

// CertificateName returns a reference to field certificate_name of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) CertificateName() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("certificate_name"))
}

// Id returns a reference to field id of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("resource_group_name"))
}

// Thumbprint returns a reference to field thumbprint of azurerm_app_service_public_certificate.
func (aaspc azurermAppServicePublicCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceAsString(aaspc.ref.Append("thumbprint"))
}

func (aaspc azurermAppServicePublicCertificateAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaspc.ref.Append("timeouts"))
}

type azurermAppServicePublicCertificateState struct {
	AppServiceName      string         `json:"app_service_name"`
	Blob                string         `json:"blob"`
	CertificateLocation string         `json:"certificate_location"`
	CertificateName     string         `json:"certificate_name"`
	Id                  string         `json:"id"`
	ResourceGroupName   string         `json:"resource_group_name"`
	Thumbprint          string         `json:"thumbprint"`
	Timeouts            *TimeoutsState `json:"timeouts"`
}
