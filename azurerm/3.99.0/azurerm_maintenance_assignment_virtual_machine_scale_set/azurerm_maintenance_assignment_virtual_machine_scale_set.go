// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_maintenance_assignment_virtual_machine_scale_set

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_maintenance_assignment_virtual_machine_scale_set.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMaintenanceAssignmentVirtualMachineScaleSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amavmss *Resource) Type() string {
	return "azurerm_maintenance_assignment_virtual_machine_scale_set"
}

// LocalName returns the local name for [Resource].
func (amavmss *Resource) LocalName() string {
	return amavmss.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amavmss *Resource) Configuration() interface{} {
	return amavmss.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amavmss *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amavmss)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amavmss *Resource) Dependencies() terra.Dependencies {
	return amavmss.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amavmss *Resource) LifecycleManagement() *terra.Lifecycle {
	return amavmss.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amavmss *Resource) Attributes() azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes {
	return azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes{ref: terra.ReferenceResource(amavmss)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amavmss *Resource) ImportState(state io.Reader) error {
	amavmss.state = &azurermMaintenanceAssignmentVirtualMachineScaleSetState{}
	if err := json.NewDecoder(state).Decode(amavmss.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amavmss.Type(), amavmss.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amavmss *Resource) State() (*azurermMaintenanceAssignmentVirtualMachineScaleSetState, bool) {
	return amavmss.state, amavmss.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amavmss *Resource) StateMust() *azurermMaintenanceAssignmentVirtualMachineScaleSetState {
	if amavmss.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amavmss.Type(), amavmss.LocalName()))
	}
	return amavmss.state
}

// Args contains the configurations for azurerm_maintenance_assignment_virtual_machine_scale_set.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MaintenanceConfigurationId: string, required
	MaintenanceConfigurationId terra.StringValue `hcl:"maintenance_configuration_id,attr" validate:"required"`
	// VirtualMachineScaleSetId: string, required
	VirtualMachineScaleSetId terra.StringValue `hcl:"virtual_machine_scale_set_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_maintenance_assignment_virtual_machine_scale_set.
func (amavmss azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amavmss.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_maintenance_assignment_virtual_machine_scale_set.
func (amavmss azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amavmss.ref.Append("location"))
}

// MaintenanceConfigurationId returns a reference to field maintenance_configuration_id of azurerm_maintenance_assignment_virtual_machine_scale_set.
func (amavmss azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes) MaintenanceConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(amavmss.ref.Append("maintenance_configuration_id"))
}

// VirtualMachineScaleSetId returns a reference to field virtual_machine_scale_set_id of azurerm_maintenance_assignment_virtual_machine_scale_set.
func (amavmss azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes) VirtualMachineScaleSetId() terra.StringValue {
	return terra.ReferenceAsString(amavmss.ref.Append("virtual_machine_scale_set_id"))
}

func (amavmss azurermMaintenanceAssignmentVirtualMachineScaleSetAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amavmss.ref.Append("timeouts"))
}

type azurermMaintenanceAssignmentVirtualMachineScaleSetState struct {
	Id                         string         `json:"id"`
	Location                   string         `json:"location"`
	MaintenanceConfigurationId string         `json:"maintenance_configuration_id"`
	VirtualMachineScaleSetId   string         `json:"virtual_machine_scale_set_id"`
	Timeouts                   *TimeoutsState `json:"timeouts"`
}
