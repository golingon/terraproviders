// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_factory_linked_service_data_lake_storage_gen2

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_data_factory_linked_service_data_lake_storage_gen2.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDataFactoryLinkedServiceDataLakeStorageGen2State
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adflsdlsg *Resource) Type() string {
	return "azurerm_data_factory_linked_service_data_lake_storage_gen2"
}

// LocalName returns the local name for [Resource].
func (adflsdlsg *Resource) LocalName() string {
	return adflsdlsg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adflsdlsg *Resource) Configuration() interface{} {
	return adflsdlsg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adflsdlsg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adflsdlsg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adflsdlsg *Resource) Dependencies() terra.Dependencies {
	return adflsdlsg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adflsdlsg *Resource) LifecycleManagement() *terra.Lifecycle {
	return adflsdlsg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adflsdlsg *Resource) Attributes() azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes {
	return azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes{ref: terra.ReferenceResource(adflsdlsg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adflsdlsg *Resource) ImportState(state io.Reader) error {
	adflsdlsg.state = &azurermDataFactoryLinkedServiceDataLakeStorageGen2State{}
	if err := json.NewDecoder(state).Decode(adflsdlsg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adflsdlsg.Type(), adflsdlsg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adflsdlsg *Resource) State() (*azurermDataFactoryLinkedServiceDataLakeStorageGen2State, bool) {
	return adflsdlsg.state, adflsdlsg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adflsdlsg *Resource) StateMust() *azurermDataFactoryLinkedServiceDataLakeStorageGen2State {
	if adflsdlsg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adflsdlsg.Type(), adflsdlsg.LocalName()))
	}
	return adflsdlsg.state
}

// Args contains the configurations for azurerm_data_factory_linked_service_data_lake_storage_gen2.
type Args struct {
	// AdditionalProperties: map of string, optional
	AdditionalProperties terra.MapValue[terra.StringValue] `hcl:"additional_properties,attr"`
	// Annotations: list of string, optional
	Annotations terra.ListValue[terra.StringValue] `hcl:"annotations,attr"`
	// DataFactoryId: string, required
	DataFactoryId terra.StringValue `hcl:"data_factory_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationRuntimeName: string, optional
	IntegrationRuntimeName terra.StringValue `hcl:"integration_runtime_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// ServicePrincipalId: string, optional
	ServicePrincipalId terra.StringValue `hcl:"service_principal_id,attr"`
	// ServicePrincipalKey: string, optional
	ServicePrincipalKey terra.StringValue `hcl:"service_principal_key,attr"`
	// StorageAccountKey: string, optional
	StorageAccountKey terra.StringValue `hcl:"storage_account_key,attr"`
	// Tenant: string, optional
	Tenant terra.StringValue `hcl:"tenant,attr"`
	// Url: string, required
	Url terra.StringValue `hcl:"url,attr" validate:"required"`
	// UseManagedIdentity: bool, optional
	UseManagedIdentity terra.BoolValue `hcl:"use_managed_identity,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes struct {
	ref terra.Reference
}

// AdditionalProperties returns a reference to field additional_properties of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) AdditionalProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adflsdlsg.ref.Append("additional_properties"))
}

// Annotations returns a reference to field annotations of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Annotations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adflsdlsg.ref.Append("annotations"))
}

// DataFactoryId returns a reference to field data_factory_id of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) DataFactoryId() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("data_factory_id"))
}

// Description returns a reference to field description of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Description() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("id"))
}

// IntegrationRuntimeName returns a reference to field integration_runtime_name of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) IntegrationRuntimeName() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("integration_runtime_name"))
}

// Name returns a reference to field name of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("name"))
}

// Parameters returns a reference to field parameters of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adflsdlsg.ref.Append("parameters"))
}

// ServicePrincipalId returns a reference to field service_principal_id of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) ServicePrincipalId() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("service_principal_id"))
}

// ServicePrincipalKey returns a reference to field service_principal_key of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) ServicePrincipalKey() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("service_principal_key"))
}

// StorageAccountKey returns a reference to field storage_account_key of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) StorageAccountKey() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("storage_account_key"))
}

// Tenant returns a reference to field tenant of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Tenant() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("tenant"))
}

// Url returns a reference to field url of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Url() terra.StringValue {
	return terra.ReferenceAsString(adflsdlsg.ref.Append("url"))
}

// UseManagedIdentity returns a reference to field use_managed_identity of azurerm_data_factory_linked_service_data_lake_storage_gen2.
func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) UseManagedIdentity() terra.BoolValue {
	return terra.ReferenceAsBool(adflsdlsg.ref.Append("use_managed_identity"))
}

func (adflsdlsg azurermDataFactoryLinkedServiceDataLakeStorageGen2Attributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adflsdlsg.ref.Append("timeouts"))
}

type azurermDataFactoryLinkedServiceDataLakeStorageGen2State struct {
	AdditionalProperties   map[string]string `json:"additional_properties"`
	Annotations            []string          `json:"annotations"`
	DataFactoryId          string            `json:"data_factory_id"`
	Description            string            `json:"description"`
	Id                     string            `json:"id"`
	IntegrationRuntimeName string            `json:"integration_runtime_name"`
	Name                   string            `json:"name"`
	Parameters             map[string]string `json:"parameters"`
	ServicePrincipalId     string            `json:"service_principal_id"`
	ServicePrincipalKey    string            `json:"service_principal_key"`
	StorageAccountKey      string            `json:"storage_account_key"`
	Tenant                 string            `json:"tenant"`
	Url                    string            `json:"url"`
	UseManagedIdentity     bool              `json:"use_managed_identity"`
	Timeouts               *TimeoutsState    `json:"timeouts"`
}
