// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_lb_backend_address_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type TunnelInterface struct {
	// Identifier: number, required
	Identifier terra.NumberValue `hcl:"identifier,attr" validate:"required"`
	// Port: number, required
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
	// Protocol: string, required
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TunnelInterfaceAttributes struct {
	ref terra.Reference
}

func (ti TunnelInterfaceAttributes) InternalRef() (terra.Reference, error) {
	return ti.ref, nil
}

func (ti TunnelInterfaceAttributes) InternalWithRef(ref terra.Reference) TunnelInterfaceAttributes {
	return TunnelInterfaceAttributes{ref: ref}
}

func (ti TunnelInterfaceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ti.ref.InternalTokens()
}

func (ti TunnelInterfaceAttributes) Identifier() terra.NumberValue {
	return terra.ReferenceAsNumber(ti.ref.Append("identifier"))
}

func (ti TunnelInterfaceAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ti.ref.Append("port"))
}

func (ti TunnelInterfaceAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ti.ref.Append("protocol"))
}

func (ti TunnelInterfaceAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ti.ref.Append("type"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}

type TunnelInterfaceState struct {
	Identifier float64 `json:"identifier"`
	Port       float64 `json:"port"`
	Protocol   string  `json:"protocol"`
	Type       string  `json:"type"`
}
