// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_lb_backend_address_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataBackendAddressAttributes struct {
	ref terra.Reference
}

func (ba DataBackendAddressAttributes) InternalRef() (terra.Reference, error) {
	return ba.ref, nil
}

func (ba DataBackendAddressAttributes) InternalWithRef(ref terra.Reference) DataBackendAddressAttributes {
	return DataBackendAddressAttributes{ref: ref}
}

func (ba DataBackendAddressAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ba.ref.InternalTokens()
}

func (ba DataBackendAddressAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("ip_address"))
}

func (ba DataBackendAddressAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("name"))
}

func (ba DataBackendAddressAttributes) VirtualNetworkId() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("virtual_network_id"))
}

func (ba DataBackendAddressAttributes) InboundNatRulePortMapping() terra.ListValue[DataBackendAddressInboundNatRulePortMappingAttributes] {
	return terra.ReferenceAsList[DataBackendAddressInboundNatRulePortMappingAttributes](ba.ref.Append("inbound_nat_rule_port_mapping"))
}

type DataBackendAddressInboundNatRulePortMappingAttributes struct {
	ref terra.Reference
}

func (inrpm DataBackendAddressInboundNatRulePortMappingAttributes) InternalRef() (terra.Reference, error) {
	return inrpm.ref, nil
}

func (inrpm DataBackendAddressInboundNatRulePortMappingAttributes) InternalWithRef(ref terra.Reference) DataBackendAddressInboundNatRulePortMappingAttributes {
	return DataBackendAddressInboundNatRulePortMappingAttributes{ref: ref}
}

func (inrpm DataBackendAddressInboundNatRulePortMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return inrpm.ref.InternalTokens()
}

func (inrpm DataBackendAddressInboundNatRulePortMappingAttributes) BackendPort() terra.NumberValue {
	return terra.ReferenceAsNumber(inrpm.ref.Append("backend_port"))
}

func (inrpm DataBackendAddressInboundNatRulePortMappingAttributes) FrontendPort() terra.NumberValue {
	return terra.ReferenceAsNumber(inrpm.ref.Append("frontend_port"))
}

func (inrpm DataBackendAddressInboundNatRulePortMappingAttributes) InboundNatRuleName() terra.StringValue {
	return terra.ReferenceAsString(inrpm.ref.Append("inbound_nat_rule_name"))
}

type DataBackendIpConfigurationsAttributes struct {
	ref terra.Reference
}

func (bic DataBackendIpConfigurationsAttributes) InternalRef() (terra.Reference, error) {
	return bic.ref, nil
}

func (bic DataBackendIpConfigurationsAttributes) InternalWithRef(ref terra.Reference) DataBackendIpConfigurationsAttributes {
	return DataBackendIpConfigurationsAttributes{ref: ref}
}

func (bic DataBackendIpConfigurationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bic.ref.InternalTokens()
}

func (bic DataBackendIpConfigurationsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bic.ref.Append("id"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataBackendAddressState struct {
	IpAddress                 string                                             `json:"ip_address"`
	Name                      string                                             `json:"name"`
	VirtualNetworkId          string                                             `json:"virtual_network_id"`
	InboundNatRulePortMapping []DataBackendAddressInboundNatRulePortMappingState `json:"inbound_nat_rule_port_mapping"`
}

type DataBackendAddressInboundNatRulePortMappingState struct {
	BackendPort        float64 `json:"backend_port"`
	FrontendPort       float64 `json:"frontend_port"`
	InboundNatRuleName string  `json:"inbound_nat_rule_name"`
}

type DataBackendIpConfigurationsState struct {
	Id string `json:"id"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
