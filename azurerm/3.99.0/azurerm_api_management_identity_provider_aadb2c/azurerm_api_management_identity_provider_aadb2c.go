// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_identity_provider_aadb2c

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_identity_provider_aadb2c.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementIdentityProviderAadb2CState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamipa *Resource) Type() string {
	return "azurerm_api_management_identity_provider_aadb2c"
}

// LocalName returns the local name for [Resource].
func (aamipa *Resource) LocalName() string {
	return aamipa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamipa *Resource) Configuration() interface{} {
	return aamipa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamipa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamipa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamipa *Resource) Dependencies() terra.Dependencies {
	return aamipa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamipa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamipa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamipa *Resource) Attributes() azurermApiManagementIdentityProviderAadb2CAttributes {
	return azurermApiManagementIdentityProviderAadb2CAttributes{ref: terra.ReferenceResource(aamipa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamipa *Resource) ImportState(state io.Reader) error {
	aamipa.state = &azurermApiManagementIdentityProviderAadb2CState{}
	if err := json.NewDecoder(state).Decode(aamipa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamipa.Type(), aamipa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamipa *Resource) State() (*azurermApiManagementIdentityProviderAadb2CState, bool) {
	return aamipa.state, aamipa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamipa *Resource) StateMust() *azurermApiManagementIdentityProviderAadb2CState {
	if aamipa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamipa.Type(), aamipa.LocalName()))
	}
	return aamipa.state
}

// Args contains the configurations for azurerm_api_management_identity_provider_aadb2c.
type Args struct {
	// AllowedTenant: string, required
	AllowedTenant terra.StringValue `hcl:"allowed_tenant,attr" validate:"required"`
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// Authority: string, required
	Authority terra.StringValue `hcl:"authority,attr" validate:"required"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PasswordResetPolicy: string, optional
	PasswordResetPolicy terra.StringValue `hcl:"password_reset_policy,attr"`
	// ProfileEditingPolicy: string, optional
	ProfileEditingPolicy terra.StringValue `hcl:"profile_editing_policy,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SigninPolicy: string, required
	SigninPolicy terra.StringValue `hcl:"signin_policy,attr" validate:"required"`
	// SigninTenant: string, required
	SigninTenant terra.StringValue `hcl:"signin_tenant,attr" validate:"required"`
	// SignupPolicy: string, required
	SignupPolicy terra.StringValue `hcl:"signup_policy,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApiManagementIdentityProviderAadb2CAttributes struct {
	ref terra.Reference
}

// AllowedTenant returns a reference to field allowed_tenant of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) AllowedTenant() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("allowed_tenant"))
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("api_management_name"))
}

// Authority returns a reference to field authority of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) Authority() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("authority"))
}

// ClientId returns a reference to field client_id of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("client_id"))
}

// ClientSecret returns a reference to field client_secret of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("client_secret"))
}

// Id returns a reference to field id of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("id"))
}

// PasswordResetPolicy returns a reference to field password_reset_policy of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) PasswordResetPolicy() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("password_reset_policy"))
}

// ProfileEditingPolicy returns a reference to field profile_editing_policy of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) ProfileEditingPolicy() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("profile_editing_policy"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("resource_group_name"))
}

// SigninPolicy returns a reference to field signin_policy of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) SigninPolicy() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("signin_policy"))
}

// SigninTenant returns a reference to field signin_tenant of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) SigninTenant() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("signin_tenant"))
}

// SignupPolicy returns a reference to field signup_policy of azurerm_api_management_identity_provider_aadb2c.
func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) SignupPolicy() terra.StringValue {
	return terra.ReferenceAsString(aamipa.ref.Append("signup_policy"))
}

func (aamipa azurermApiManagementIdentityProviderAadb2CAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamipa.ref.Append("timeouts"))
}

type azurermApiManagementIdentityProviderAadb2CState struct {
	AllowedTenant        string         `json:"allowed_tenant"`
	ApiManagementName    string         `json:"api_management_name"`
	Authority            string         `json:"authority"`
	ClientId             string         `json:"client_id"`
	ClientSecret         string         `json:"client_secret"`
	Id                   string         `json:"id"`
	PasswordResetPolicy  string         `json:"password_reset_policy"`
	ProfileEditingPolicy string         `json:"profile_editing_policy"`
	ResourceGroupName    string         `json:"resource_group_name"`
	SigninPolicy         string         `json:"signin_policy"`
	SigninTenant         string         `json:"signin_tenant"`
	SignupPolicy         string         `json:"signup_policy"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
