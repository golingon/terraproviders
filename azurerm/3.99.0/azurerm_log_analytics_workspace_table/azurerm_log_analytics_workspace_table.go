// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_log_analytics_workspace_table

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_log_analytics_workspace_table.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogAnalyticsWorkspaceTableState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alawt *Resource) Type() string {
	return "azurerm_log_analytics_workspace_table"
}

// LocalName returns the local name for [Resource].
func (alawt *Resource) LocalName() string {
	return alawt.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alawt *Resource) Configuration() interface{} {
	return alawt.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alawt *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alawt)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alawt *Resource) Dependencies() terra.Dependencies {
	return alawt.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alawt *Resource) LifecycleManagement() *terra.Lifecycle {
	return alawt.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alawt *Resource) Attributes() azurermLogAnalyticsWorkspaceTableAttributes {
	return azurermLogAnalyticsWorkspaceTableAttributes{ref: terra.ReferenceResource(alawt)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alawt *Resource) ImportState(state io.Reader) error {
	alawt.state = &azurermLogAnalyticsWorkspaceTableState{}
	if err := json.NewDecoder(state).Decode(alawt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alawt.Type(), alawt.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alawt *Resource) State() (*azurermLogAnalyticsWorkspaceTableState, bool) {
	return alawt.state, alawt.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alawt *Resource) StateMust() *azurermLogAnalyticsWorkspaceTableState {
	if alawt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alawt.Type(), alawt.LocalName()))
	}
	return alawt.state
}

// Args contains the configurations for azurerm_log_analytics_workspace_table.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Plan: string, optional
	Plan terra.StringValue `hcl:"plan,attr"`
	// RetentionInDays: number, optional
	RetentionInDays terra.NumberValue `hcl:"retention_in_days,attr"`
	// TotalRetentionInDays: number, optional
	TotalRetentionInDays terra.NumberValue `hcl:"total_retention_in_days,attr"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogAnalyticsWorkspaceTableAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_log_analytics_workspace_table.
func (alawt azurermLogAnalyticsWorkspaceTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alawt.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_log_analytics_workspace_table.
func (alawt azurermLogAnalyticsWorkspaceTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alawt.ref.Append("name"))
}

// Plan returns a reference to field plan of azurerm_log_analytics_workspace_table.
func (alawt azurermLogAnalyticsWorkspaceTableAttributes) Plan() terra.StringValue {
	return terra.ReferenceAsString(alawt.ref.Append("plan"))
}

// RetentionInDays returns a reference to field retention_in_days of azurerm_log_analytics_workspace_table.
func (alawt azurermLogAnalyticsWorkspaceTableAttributes) RetentionInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(alawt.ref.Append("retention_in_days"))
}

// TotalRetentionInDays returns a reference to field total_retention_in_days of azurerm_log_analytics_workspace_table.
func (alawt azurermLogAnalyticsWorkspaceTableAttributes) TotalRetentionInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(alawt.ref.Append("total_retention_in_days"))
}

// WorkspaceId returns a reference to field workspace_id of azurerm_log_analytics_workspace_table.
func (alawt azurermLogAnalyticsWorkspaceTableAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(alawt.ref.Append("workspace_id"))
}

func (alawt azurermLogAnalyticsWorkspaceTableAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alawt.ref.Append("timeouts"))
}

type azurermLogAnalyticsWorkspaceTableState struct {
	Id                   string         `json:"id"`
	Name                 string         `json:"name"`
	Plan                 string         `json:"plan"`
	RetentionInDays      float64        `json:"retention_in_days"`
	TotalRetentionInDays float64        `json:"total_retention_in_days"`
	WorkspaceId          string         `json:"workspace_id"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
