// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_monitor_action_group

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_monitor_action_group.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMonitorActionGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (amag *Resource) Type() string {
	return "azurerm_monitor_action_group"
}

// LocalName returns the local name for [Resource].
func (amag *Resource) LocalName() string {
	return amag.Name
}

// Configuration returns the configuration (args) for [Resource].
func (amag *Resource) Configuration() interface{} {
	return amag.Args
}

// DependOn is used for other resources to depend on [Resource].
func (amag *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(amag)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (amag *Resource) Dependencies() terra.Dependencies {
	return amag.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (amag *Resource) LifecycleManagement() *terra.Lifecycle {
	return amag.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (amag *Resource) Attributes() azurermMonitorActionGroupAttributes {
	return azurermMonitorActionGroupAttributes{ref: terra.ReferenceResource(amag)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (amag *Resource) ImportState(state io.Reader) error {
	amag.state = &azurermMonitorActionGroupState{}
	if err := json.NewDecoder(state).Decode(amag.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amag.Type(), amag.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (amag *Resource) State() (*azurermMonitorActionGroupState, bool) {
	return amag.state, amag.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (amag *Resource) StateMust() *azurermMonitorActionGroupState {
	if amag.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amag.Type(), amag.LocalName()))
	}
	return amag.state
}

// Args contains the configurations for azurerm_monitor_action_group.
type Args struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ShortName: string, required
	ShortName terra.StringValue `hcl:"short_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ArmRoleReceiver: min=0
	ArmRoleReceiver []ArmRoleReceiver `hcl:"arm_role_receiver,block" validate:"min=0"`
	// AutomationRunbookReceiver: min=0
	AutomationRunbookReceiver []AutomationRunbookReceiver `hcl:"automation_runbook_receiver,block" validate:"min=0"`
	// AzureAppPushReceiver: min=0
	AzureAppPushReceiver []AzureAppPushReceiver `hcl:"azure_app_push_receiver,block" validate:"min=0"`
	// AzureFunctionReceiver: min=0
	AzureFunctionReceiver []AzureFunctionReceiver `hcl:"azure_function_receiver,block" validate:"min=0"`
	// EmailReceiver: min=0
	EmailReceiver []EmailReceiver `hcl:"email_receiver,block" validate:"min=0"`
	// EventHubReceiver: min=0
	EventHubReceiver []EventHubReceiver `hcl:"event_hub_receiver,block" validate:"min=0"`
	// ItsmReceiver: min=0
	ItsmReceiver []ItsmReceiver `hcl:"itsm_receiver,block" validate:"min=0"`
	// LogicAppReceiver: min=0
	LogicAppReceiver []LogicAppReceiver `hcl:"logic_app_receiver,block" validate:"min=0"`
	// SmsReceiver: min=0
	SmsReceiver []SmsReceiver `hcl:"sms_receiver,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// VoiceReceiver: min=0
	VoiceReceiver []VoiceReceiver `hcl:"voice_receiver,block" validate:"min=0"`
	// WebhookReceiver: min=0
	WebhookReceiver []WebhookReceiver `hcl:"webhook_receiver,block" validate:"min=0"`
}

type azurermMonitorActionGroupAttributes struct {
	ref terra.Reference
}

// Enabled returns a reference to field enabled of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(amag.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amag.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(amag.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amag.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(amag.ref.Append("resource_group_name"))
}

// ShortName returns a reference to field short_name of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) ShortName() terra.StringValue {
	return terra.ReferenceAsString(amag.ref.Append("short_name"))
}

// Tags returns a reference to field tags of azurerm_monitor_action_group.
func (amag azurermMonitorActionGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](amag.ref.Append("tags"))
}

func (amag azurermMonitorActionGroupAttributes) ArmRoleReceiver() terra.ListValue[ArmRoleReceiverAttributes] {
	return terra.ReferenceAsList[ArmRoleReceiverAttributes](amag.ref.Append("arm_role_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) AutomationRunbookReceiver() terra.ListValue[AutomationRunbookReceiverAttributes] {
	return terra.ReferenceAsList[AutomationRunbookReceiverAttributes](amag.ref.Append("automation_runbook_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) AzureAppPushReceiver() terra.ListValue[AzureAppPushReceiverAttributes] {
	return terra.ReferenceAsList[AzureAppPushReceiverAttributes](amag.ref.Append("azure_app_push_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) AzureFunctionReceiver() terra.ListValue[AzureFunctionReceiverAttributes] {
	return terra.ReferenceAsList[AzureFunctionReceiverAttributes](amag.ref.Append("azure_function_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) EmailReceiver() terra.ListValue[EmailReceiverAttributes] {
	return terra.ReferenceAsList[EmailReceiverAttributes](amag.ref.Append("email_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) EventHubReceiver() terra.ListValue[EventHubReceiverAttributes] {
	return terra.ReferenceAsList[EventHubReceiverAttributes](amag.ref.Append("event_hub_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) ItsmReceiver() terra.ListValue[ItsmReceiverAttributes] {
	return terra.ReferenceAsList[ItsmReceiverAttributes](amag.ref.Append("itsm_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) LogicAppReceiver() terra.ListValue[LogicAppReceiverAttributes] {
	return terra.ReferenceAsList[LogicAppReceiverAttributes](amag.ref.Append("logic_app_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) SmsReceiver() terra.ListValue[SmsReceiverAttributes] {
	return terra.ReferenceAsList[SmsReceiverAttributes](amag.ref.Append("sms_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](amag.ref.Append("timeouts"))
}

func (amag azurermMonitorActionGroupAttributes) VoiceReceiver() terra.ListValue[VoiceReceiverAttributes] {
	return terra.ReferenceAsList[VoiceReceiverAttributes](amag.ref.Append("voice_receiver"))
}

func (amag azurermMonitorActionGroupAttributes) WebhookReceiver() terra.ListValue[WebhookReceiverAttributes] {
	return terra.ReferenceAsList[WebhookReceiverAttributes](amag.ref.Append("webhook_receiver"))
}

type azurermMonitorActionGroupState struct {
	Enabled                   bool                             `json:"enabled"`
	Id                        string                           `json:"id"`
	Location                  string                           `json:"location"`
	Name                      string                           `json:"name"`
	ResourceGroupName         string                           `json:"resource_group_name"`
	ShortName                 string                           `json:"short_name"`
	Tags                      map[string]string                `json:"tags"`
	ArmRoleReceiver           []ArmRoleReceiverState           `json:"arm_role_receiver"`
	AutomationRunbookReceiver []AutomationRunbookReceiverState `json:"automation_runbook_receiver"`
	AzureAppPushReceiver      []AzureAppPushReceiverState      `json:"azure_app_push_receiver"`
	AzureFunctionReceiver     []AzureFunctionReceiverState     `json:"azure_function_receiver"`
	EmailReceiver             []EmailReceiverState             `json:"email_receiver"`
	EventHubReceiver          []EventHubReceiverState          `json:"event_hub_receiver"`
	ItsmReceiver              []ItsmReceiverState              `json:"itsm_receiver"`
	LogicAppReceiver          []LogicAppReceiverState          `json:"logic_app_receiver"`
	SmsReceiver               []SmsReceiverState               `json:"sms_receiver"`
	Timeouts                  *TimeoutsState                   `json:"timeouts"`
	VoiceReceiver             []VoiceReceiverState             `json:"voice_receiver"`
	WebhookReceiver           []WebhookReceiverState           `json:"webhook_receiver"`
}
