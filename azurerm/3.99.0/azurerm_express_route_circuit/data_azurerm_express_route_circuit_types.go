// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_express_route_circuit

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataPeeringsAttributes struct {
	ref terra.Reference
}

func (p DataPeeringsAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataPeeringsAttributes) InternalWithRef(ref terra.Reference) DataPeeringsAttributes {
	return DataPeeringsAttributes{ref: ref}
}

func (p DataPeeringsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataPeeringsAttributes) AzureAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("azure_asn"))
}

func (p DataPeeringsAttributes) PeerAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("peer_asn"))
}

func (p DataPeeringsAttributes) PeeringType() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("peering_type"))
}

func (p DataPeeringsAttributes) PrimaryPeerAddressPrefix() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("primary_peer_address_prefix"))
}

func (p DataPeeringsAttributes) SecondaryPeerAddressPrefix() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("secondary_peer_address_prefix"))
}

func (p DataPeeringsAttributes) SharedKey() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("shared_key"))
}

func (p DataPeeringsAttributes) VlanId() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("vlan_id"))
}

type DataServiceProviderPropertiesAttributes struct {
	ref terra.Reference
}

func (spp DataServiceProviderPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return spp.ref, nil
}

func (spp DataServiceProviderPropertiesAttributes) InternalWithRef(ref terra.Reference) DataServiceProviderPropertiesAttributes {
	return DataServiceProviderPropertiesAttributes{ref: ref}
}

func (spp DataServiceProviderPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spp.ref.InternalTokens()
}

func (spp DataServiceProviderPropertiesAttributes) BandwidthInMbps() terra.NumberValue {
	return terra.ReferenceAsNumber(spp.ref.Append("bandwidth_in_mbps"))
}

func (spp DataServiceProviderPropertiesAttributes) PeeringLocation() terra.StringValue {
	return terra.ReferenceAsString(spp.ref.Append("peering_location"))
}

func (spp DataServiceProviderPropertiesAttributes) ServiceProviderName() terra.StringValue {
	return terra.ReferenceAsString(spp.ref.Append("service_provider_name"))
}

type DataSkuAttributes struct {
	ref terra.Reference
}

func (s DataSkuAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSkuAttributes) InternalWithRef(ref terra.Reference) DataSkuAttributes {
	return DataSkuAttributes{ref: ref}
}

func (s DataSkuAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSkuAttributes) Family() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("family"))
}

func (s DataSkuAttributes) Tier() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("tier"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataPeeringsState struct {
	AzureAsn                   float64 `json:"azure_asn"`
	PeerAsn                    float64 `json:"peer_asn"`
	PeeringType                string  `json:"peering_type"`
	PrimaryPeerAddressPrefix   string  `json:"primary_peer_address_prefix"`
	SecondaryPeerAddressPrefix string  `json:"secondary_peer_address_prefix"`
	SharedKey                  string  `json:"shared_key"`
	VlanId                     float64 `json:"vlan_id"`
}

type DataServiceProviderPropertiesState struct {
	BandwidthInMbps     float64 `json:"bandwidth_in_mbps"`
	PeeringLocation     string  `json:"peering_location"`
	ServiceProviderName string  `json:"service_provider_name"`
}

type DataSkuState struct {
	Family string `json:"family"`
	Tier   string `json:"tier"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
