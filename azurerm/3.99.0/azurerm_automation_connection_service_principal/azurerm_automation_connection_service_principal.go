// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_connection_service_principal

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_connection_service_principal.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationConnectionServicePrincipalState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aacsp *Resource) Type() string {
	return "azurerm_automation_connection_service_principal"
}

// LocalName returns the local name for [Resource].
func (aacsp *Resource) LocalName() string {
	return aacsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aacsp *Resource) Configuration() interface{} {
	return aacsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aacsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aacsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aacsp *Resource) Dependencies() terra.Dependencies {
	return aacsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aacsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return aacsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aacsp *Resource) Attributes() azurermAutomationConnectionServicePrincipalAttributes {
	return azurermAutomationConnectionServicePrincipalAttributes{ref: terra.ReferenceResource(aacsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aacsp *Resource) ImportState(state io.Reader) error {
	aacsp.state = &azurermAutomationConnectionServicePrincipalState{}
	if err := json.NewDecoder(state).Decode(aacsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aacsp.Type(), aacsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aacsp *Resource) State() (*azurermAutomationConnectionServicePrincipalState, bool) {
	return aacsp.state, aacsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aacsp *Resource) StateMust() *azurermAutomationConnectionServicePrincipalState {
	if aacsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aacsp.Type(), aacsp.LocalName()))
	}
	return aacsp.state
}

// Args contains the configurations for azurerm_automation_connection_service_principal.
type Args struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// CertificateThumbprint: string, required
	CertificateThumbprint terra.StringValue `hcl:"certificate_thumbprint,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SubscriptionId: string, required
	SubscriptionId terra.StringValue `hcl:"subscription_id,attr" validate:"required"`
	// TenantId: string, required
	TenantId terra.StringValue `hcl:"tenant_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationConnectionServicePrincipalAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("application_id"))
}

// AutomationAccountName returns a reference to field automation_account_name of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("automation_account_name"))
}

// CertificateThumbprint returns a reference to field certificate_thumbprint of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) CertificateThumbprint() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("certificate_thumbprint"))
}

// Description returns a reference to field description of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("resource_group_name"))
}

// SubscriptionId returns a reference to field subscription_id of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) SubscriptionId() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("subscription_id"))
}

// TenantId returns a reference to field tenant_id of azurerm_automation_connection_service_principal.
func (aacsp azurermAutomationConnectionServicePrincipalAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(aacsp.ref.Append("tenant_id"))
}

func (aacsp azurermAutomationConnectionServicePrincipalAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aacsp.ref.Append("timeouts"))
}

type azurermAutomationConnectionServicePrincipalState struct {
	ApplicationId         string         `json:"application_id"`
	AutomationAccountName string         `json:"automation_account_name"`
	CertificateThumbprint string         `json:"certificate_thumbprint"`
	Description           string         `json:"description"`
	Id                    string         `json:"id"`
	Name                  string         `json:"name"`
	ResourceGroupName     string         `json:"resource_group_name"`
	SubscriptionId        string         `json:"subscription_id"`
	TenantId              string         `json:"tenant_id"`
	Timeouts              *TimeoutsState `json:"timeouts"`
}
