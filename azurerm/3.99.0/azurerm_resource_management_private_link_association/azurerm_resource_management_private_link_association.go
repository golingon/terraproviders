// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_resource_management_private_link_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_resource_management_private_link_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermResourceManagementPrivateLinkAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (armpla *Resource) Type() string {
	return "azurerm_resource_management_private_link_association"
}

// LocalName returns the local name for [Resource].
func (armpla *Resource) LocalName() string {
	return armpla.Name
}

// Configuration returns the configuration (args) for [Resource].
func (armpla *Resource) Configuration() interface{} {
	return armpla.Args
}

// DependOn is used for other resources to depend on [Resource].
func (armpla *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(armpla)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (armpla *Resource) Dependencies() terra.Dependencies {
	return armpla.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (armpla *Resource) LifecycleManagement() *terra.Lifecycle {
	return armpla.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (armpla *Resource) Attributes() azurermResourceManagementPrivateLinkAssociationAttributes {
	return azurermResourceManagementPrivateLinkAssociationAttributes{ref: terra.ReferenceResource(armpla)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (armpla *Resource) ImportState(state io.Reader) error {
	armpla.state = &azurermResourceManagementPrivateLinkAssociationState{}
	if err := json.NewDecoder(state).Decode(armpla.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", armpla.Type(), armpla.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (armpla *Resource) State() (*azurermResourceManagementPrivateLinkAssociationState, bool) {
	return armpla.state, armpla.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (armpla *Resource) StateMust() *azurermResourceManagementPrivateLinkAssociationState {
	if armpla.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", armpla.Type(), armpla.LocalName()))
	}
	return armpla.state
}

// Args contains the configurations for azurerm_resource_management_private_link_association.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagementGroupId: string, required
	ManagementGroupId terra.StringValue `hcl:"management_group_id,attr" validate:"required"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// PublicNetworkAccessEnabled: bool, required
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr" validate:"required"`
	// ResourceManagementPrivateLinkId: string, required
	ResourceManagementPrivateLinkId terra.StringValue `hcl:"resource_management_private_link_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermResourceManagementPrivateLinkAssociationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_resource_management_private_link_association.
func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(armpla.ref.Append("id"))
}

// ManagementGroupId returns a reference to field management_group_id of azurerm_resource_management_private_link_association.
func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) ManagementGroupId() terra.StringValue {
	return terra.ReferenceAsString(armpla.ref.Append("management_group_id"))
}

// Name returns a reference to field name of azurerm_resource_management_private_link_association.
func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(armpla.ref.Append("name"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_resource_management_private_link_association.
func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(armpla.ref.Append("public_network_access_enabled"))
}

// ResourceManagementPrivateLinkId returns a reference to field resource_management_private_link_id of azurerm_resource_management_private_link_association.
func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) ResourceManagementPrivateLinkId() terra.StringValue {
	return terra.ReferenceAsString(armpla.ref.Append("resource_management_private_link_id"))
}

// TenantId returns a reference to field tenant_id of azurerm_resource_management_private_link_association.
func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(armpla.ref.Append("tenant_id"))
}

func (armpla azurermResourceManagementPrivateLinkAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](armpla.ref.Append("timeouts"))
}

type azurermResourceManagementPrivateLinkAssociationState struct {
	Id                              string         `json:"id"`
	ManagementGroupId               string         `json:"management_group_id"`
	Name                            string         `json:"name"`
	PublicNetworkAccessEnabled      bool           `json:"public_network_access_enabled"`
	ResourceManagementPrivateLinkId string         `json:"resource_management_private_link_id"`
	TenantId                        string         `json:"tenant_id"`
	Timeouts                        *TimeoutsState `json:"timeouts"`
}
