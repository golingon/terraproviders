// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_eventgrid_event_subscription

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_eventgrid_event_subscription.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermEventgridEventSubscriptionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aees *Resource) Type() string {
	return "azurerm_eventgrid_event_subscription"
}

// LocalName returns the local name for [Resource].
func (aees *Resource) LocalName() string {
	return aees.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aees *Resource) Configuration() interface{} {
	return aees.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aees *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aees)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aees *Resource) Dependencies() terra.Dependencies {
	return aees.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aees *Resource) LifecycleManagement() *terra.Lifecycle {
	return aees.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aees *Resource) Attributes() azurermEventgridEventSubscriptionAttributes {
	return azurermEventgridEventSubscriptionAttributes{ref: terra.ReferenceResource(aees)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aees *Resource) ImportState(state io.Reader) error {
	aees.state = &azurermEventgridEventSubscriptionState{}
	if err := json.NewDecoder(state).Decode(aees.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aees.Type(), aees.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aees *Resource) State() (*azurermEventgridEventSubscriptionState, bool) {
	return aees.state, aees.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aees *Resource) StateMust() *azurermEventgridEventSubscriptionState {
	if aees.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aees.Type(), aees.LocalName()))
	}
	return aees.state
}

// Args contains the configurations for azurerm_eventgrid_event_subscription.
type Args struct {
	// AdvancedFilteringOnArraysEnabled: bool, optional
	AdvancedFilteringOnArraysEnabled terra.BoolValue `hcl:"advanced_filtering_on_arrays_enabled,attr"`
	// EventDeliverySchema: string, optional
	EventDeliverySchema terra.StringValue `hcl:"event_delivery_schema,attr"`
	// EventhubEndpointId: string, optional
	EventhubEndpointId terra.StringValue `hcl:"eventhub_endpoint_id,attr"`
	// ExpirationTimeUtc: string, optional
	ExpirationTimeUtc terra.StringValue `hcl:"expiration_time_utc,attr"`
	// HybridConnectionEndpointId: string, optional
	HybridConnectionEndpointId terra.StringValue `hcl:"hybrid_connection_endpoint_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IncludedEventTypes: list of string, optional
	IncludedEventTypes terra.ListValue[terra.StringValue] `hcl:"included_event_types,attr"`
	// Labels: list of string, optional
	Labels terra.ListValue[terra.StringValue] `hcl:"labels,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Scope: string, required
	Scope terra.StringValue `hcl:"scope,attr" validate:"required"`
	// ServiceBusQueueEndpointId: string, optional
	ServiceBusQueueEndpointId terra.StringValue `hcl:"service_bus_queue_endpoint_id,attr"`
	// ServiceBusTopicEndpointId: string, optional
	ServiceBusTopicEndpointId terra.StringValue `hcl:"service_bus_topic_endpoint_id,attr"`
	// AdvancedFilter: optional
	AdvancedFilter *AdvancedFilter `hcl:"advanced_filter,block"`
	// AzureFunctionEndpoint: optional
	AzureFunctionEndpoint *AzureFunctionEndpoint `hcl:"azure_function_endpoint,block"`
	// DeadLetterIdentity: optional
	DeadLetterIdentity *DeadLetterIdentity `hcl:"dead_letter_identity,block"`
	// DeliveryIdentity: optional
	DeliveryIdentity *DeliveryIdentity `hcl:"delivery_identity,block"`
	// DeliveryProperty: min=0
	DeliveryProperty []DeliveryProperty `hcl:"delivery_property,block" validate:"min=0"`
	// RetryPolicy: optional
	RetryPolicy *RetryPolicy `hcl:"retry_policy,block"`
	// StorageBlobDeadLetterDestination: optional
	StorageBlobDeadLetterDestination *StorageBlobDeadLetterDestination `hcl:"storage_blob_dead_letter_destination,block"`
	// StorageQueueEndpoint: optional
	StorageQueueEndpoint *StorageQueueEndpoint `hcl:"storage_queue_endpoint,block"`
	// SubjectFilter: optional
	SubjectFilter *SubjectFilter `hcl:"subject_filter,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// WebhookEndpoint: optional
	WebhookEndpoint *WebhookEndpoint `hcl:"webhook_endpoint,block"`
}

type azurermEventgridEventSubscriptionAttributes struct {
	ref terra.Reference
}

// AdvancedFilteringOnArraysEnabled returns a reference to field advanced_filtering_on_arrays_enabled of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) AdvancedFilteringOnArraysEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aees.ref.Append("advanced_filtering_on_arrays_enabled"))
}

// EventDeliverySchema returns a reference to field event_delivery_schema of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) EventDeliverySchema() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("event_delivery_schema"))
}

// EventhubEndpointId returns a reference to field eventhub_endpoint_id of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) EventhubEndpointId() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("eventhub_endpoint_id"))
}

// ExpirationTimeUtc returns a reference to field expiration_time_utc of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) ExpirationTimeUtc() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("expiration_time_utc"))
}

// HybridConnectionEndpointId returns a reference to field hybrid_connection_endpoint_id of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) HybridConnectionEndpointId() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("hybrid_connection_endpoint_id"))
}

// Id returns a reference to field id of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("id"))
}

// IncludedEventTypes returns a reference to field included_event_types of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) IncludedEventTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aees.ref.Append("included_event_types"))
}

// Labels returns a reference to field labels of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) Labels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aees.ref.Append("labels"))
}

// Name returns a reference to field name of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("name"))
}

// Scope returns a reference to field scope of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("scope"))
}

// ServiceBusQueueEndpointId returns a reference to field service_bus_queue_endpoint_id of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) ServiceBusQueueEndpointId() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("service_bus_queue_endpoint_id"))
}

// ServiceBusTopicEndpointId returns a reference to field service_bus_topic_endpoint_id of azurerm_eventgrid_event_subscription.
func (aees azurermEventgridEventSubscriptionAttributes) ServiceBusTopicEndpointId() terra.StringValue {
	return terra.ReferenceAsString(aees.ref.Append("service_bus_topic_endpoint_id"))
}

func (aees azurermEventgridEventSubscriptionAttributes) AdvancedFilter() terra.ListValue[AdvancedFilterAttributes] {
	return terra.ReferenceAsList[AdvancedFilterAttributes](aees.ref.Append("advanced_filter"))
}

func (aees azurermEventgridEventSubscriptionAttributes) AzureFunctionEndpoint() terra.ListValue[AzureFunctionEndpointAttributes] {
	return terra.ReferenceAsList[AzureFunctionEndpointAttributes](aees.ref.Append("azure_function_endpoint"))
}

func (aees azurermEventgridEventSubscriptionAttributes) DeadLetterIdentity() terra.ListValue[DeadLetterIdentityAttributes] {
	return terra.ReferenceAsList[DeadLetterIdentityAttributes](aees.ref.Append("dead_letter_identity"))
}

func (aees azurermEventgridEventSubscriptionAttributes) DeliveryIdentity() terra.ListValue[DeliveryIdentityAttributes] {
	return terra.ReferenceAsList[DeliveryIdentityAttributes](aees.ref.Append("delivery_identity"))
}

func (aees azurermEventgridEventSubscriptionAttributes) DeliveryProperty() terra.ListValue[DeliveryPropertyAttributes] {
	return terra.ReferenceAsList[DeliveryPropertyAttributes](aees.ref.Append("delivery_property"))
}

func (aees azurermEventgridEventSubscriptionAttributes) RetryPolicy() terra.ListValue[RetryPolicyAttributes] {
	return terra.ReferenceAsList[RetryPolicyAttributes](aees.ref.Append("retry_policy"))
}

func (aees azurermEventgridEventSubscriptionAttributes) StorageBlobDeadLetterDestination() terra.ListValue[StorageBlobDeadLetterDestinationAttributes] {
	return terra.ReferenceAsList[StorageBlobDeadLetterDestinationAttributes](aees.ref.Append("storage_blob_dead_letter_destination"))
}

func (aees azurermEventgridEventSubscriptionAttributes) StorageQueueEndpoint() terra.ListValue[StorageQueueEndpointAttributes] {
	return terra.ReferenceAsList[StorageQueueEndpointAttributes](aees.ref.Append("storage_queue_endpoint"))
}

func (aees azurermEventgridEventSubscriptionAttributes) SubjectFilter() terra.ListValue[SubjectFilterAttributes] {
	return terra.ReferenceAsList[SubjectFilterAttributes](aees.ref.Append("subject_filter"))
}

func (aees azurermEventgridEventSubscriptionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aees.ref.Append("timeouts"))
}

func (aees azurermEventgridEventSubscriptionAttributes) WebhookEndpoint() terra.ListValue[WebhookEndpointAttributes] {
	return terra.ReferenceAsList[WebhookEndpointAttributes](aees.ref.Append("webhook_endpoint"))
}

type azurermEventgridEventSubscriptionState struct {
	AdvancedFilteringOnArraysEnabled bool                                    `json:"advanced_filtering_on_arrays_enabled"`
	EventDeliverySchema              string                                  `json:"event_delivery_schema"`
	EventhubEndpointId               string                                  `json:"eventhub_endpoint_id"`
	ExpirationTimeUtc                string                                  `json:"expiration_time_utc"`
	HybridConnectionEndpointId       string                                  `json:"hybrid_connection_endpoint_id"`
	Id                               string                                  `json:"id"`
	IncludedEventTypes               []string                                `json:"included_event_types"`
	Labels                           []string                                `json:"labels"`
	Name                             string                                  `json:"name"`
	Scope                            string                                  `json:"scope"`
	ServiceBusQueueEndpointId        string                                  `json:"service_bus_queue_endpoint_id"`
	ServiceBusTopicEndpointId        string                                  `json:"service_bus_topic_endpoint_id"`
	AdvancedFilter                   []AdvancedFilterState                   `json:"advanced_filter"`
	AzureFunctionEndpoint            []AzureFunctionEndpointState            `json:"azure_function_endpoint"`
	DeadLetterIdentity               []DeadLetterIdentityState               `json:"dead_letter_identity"`
	DeliveryIdentity                 []DeliveryIdentityState                 `json:"delivery_identity"`
	DeliveryProperty                 []DeliveryPropertyState                 `json:"delivery_property"`
	RetryPolicy                      []RetryPolicyState                      `json:"retry_policy"`
	StorageBlobDeadLetterDestination []StorageBlobDeadLetterDestinationState `json:"storage_blob_dead_letter_destination"`
	StorageQueueEndpoint             []StorageQueueEndpointState             `json:"storage_queue_endpoint"`
	SubjectFilter                    []SubjectFilterState                    `json:"subject_filter"`
	Timeouts                         *TimeoutsState                          `json:"timeouts"`
	WebhookEndpoint                  []WebhookEndpointState                  `json:"webhook_endpoint"`
}
