// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_databricks_workspace_root_dbfs_customer_managed_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_databricks_workspace_root_dbfs_customer_managed_key.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adwrdcmk *Resource) Type() string {
	return "azurerm_databricks_workspace_root_dbfs_customer_managed_key"
}

// LocalName returns the local name for [Resource].
func (adwrdcmk *Resource) LocalName() string {
	return adwrdcmk.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adwrdcmk *Resource) Configuration() interface{} {
	return adwrdcmk.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adwrdcmk *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adwrdcmk)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adwrdcmk *Resource) Dependencies() terra.Dependencies {
	return adwrdcmk.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adwrdcmk *Resource) LifecycleManagement() *terra.Lifecycle {
	return adwrdcmk.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adwrdcmk *Resource) Attributes() azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes {
	return azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes{ref: terra.ReferenceResource(adwrdcmk)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adwrdcmk *Resource) ImportState(state io.Reader) error {
	adwrdcmk.state = &azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyState{}
	if err := json.NewDecoder(state).Decode(adwrdcmk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adwrdcmk.Type(), adwrdcmk.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adwrdcmk *Resource) State() (*azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyState, bool) {
	return adwrdcmk.state, adwrdcmk.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adwrdcmk *Resource) StateMust() *azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyState {
	if adwrdcmk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adwrdcmk.Type(), adwrdcmk.LocalName()))
	}
	return adwrdcmk.state
}

// Args contains the configurations for azurerm_databricks_workspace_root_dbfs_customer_managed_key.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultId: string, optional
	KeyVaultId terra.StringValue `hcl:"key_vault_id,attr"`
	// KeyVaultKeyId: string, required
	KeyVaultKeyId terra.StringValue `hcl:"key_vault_key_id,attr" validate:"required"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (adwrdcmk azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adwrdcmk.ref.Append("id"))
}

// KeyVaultId returns a reference to field key_vault_id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (adwrdcmk azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes) KeyVaultId() terra.StringValue {
	return terra.ReferenceAsString(adwrdcmk.ref.Append("key_vault_id"))
}

// KeyVaultKeyId returns a reference to field key_vault_key_id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (adwrdcmk azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes) KeyVaultKeyId() terra.StringValue {
	return terra.ReferenceAsString(adwrdcmk.ref.Append("key_vault_key_id"))
}

// WorkspaceId returns a reference to field workspace_id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (adwrdcmk azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(adwrdcmk.ref.Append("workspace_id"))
}

func (adwrdcmk azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adwrdcmk.ref.Append("timeouts"))
}

type azurermDatabricksWorkspaceRootDbfsCustomerManagedKeyState struct {
	Id            string         `json:"id"`
	KeyVaultId    string         `json:"key_vault_id"`
	KeyVaultKeyId string         `json:"key_vault_key_id"`
	WorkspaceId   string         `json:"workspace_id"`
	Timeouts      *TimeoutsState `json:"timeouts"`
}
