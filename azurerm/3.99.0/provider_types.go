// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Features struct {
	// FeaturesApiManagement: optional
	ApiManagement *FeaturesApiManagement `hcl:"api_management,block"`
	// FeaturesAppConfiguration: optional
	AppConfiguration *FeaturesAppConfiguration `hcl:"app_configuration,block"`
	// FeaturesApplicationInsights: optional
	ApplicationInsights *FeaturesApplicationInsights `hcl:"application_insights,block"`
	// FeaturesCognitiveAccount: optional
	CognitiveAccount *FeaturesCognitiveAccount `hcl:"cognitive_account,block"`
	// FeaturesKeyVault: optional
	KeyVault *FeaturesKeyVault `hcl:"key_vault,block"`
	// FeaturesLogAnalyticsWorkspace: optional
	LogAnalyticsWorkspace *FeaturesLogAnalyticsWorkspace `hcl:"log_analytics_workspace,block"`
	// FeaturesManagedDisk: optional
	ManagedDisk *FeaturesManagedDisk `hcl:"managed_disk,block"`
	// FeaturesPostgresqlFlexibleServer: optional
	PostgresqlFlexibleServer *FeaturesPostgresqlFlexibleServer `hcl:"postgresql_flexible_server,block"`
	// FeaturesRecoveryService: optional
	RecoveryService *FeaturesRecoveryService `hcl:"recovery_service,block"`
	// FeaturesResourceGroup: optional
	ResourceGroup *FeaturesResourceGroup `hcl:"resource_group,block"`
	// FeaturesSubscription: optional
	Subscription *FeaturesSubscription `hcl:"subscription,block"`
	// FeaturesTemplateDeployment: optional
	TemplateDeployment *FeaturesTemplateDeployment `hcl:"template_deployment,block"`
	// FeaturesVirtualMachine: optional
	VirtualMachine *FeaturesVirtualMachine `hcl:"virtual_machine,block"`
	// FeaturesVirtualMachineScaleSet: optional
	VirtualMachineScaleSet *FeaturesVirtualMachineScaleSet `hcl:"virtual_machine_scale_set,block"`
}

type FeaturesApiManagement struct {
	// PurgeSoftDeleteOnDestroy: bool, optional
	PurgeSoftDeleteOnDestroy terra.BoolValue `hcl:"purge_soft_delete_on_destroy,attr"`
	// RecoverSoftDeleted: bool, optional
	RecoverSoftDeleted terra.BoolValue `hcl:"recover_soft_deleted,attr"`
}

type FeaturesAppConfiguration struct {
	// PurgeSoftDeleteOnDestroy: bool, optional
	PurgeSoftDeleteOnDestroy terra.BoolValue `hcl:"purge_soft_delete_on_destroy,attr"`
	// RecoverSoftDeleted: bool, optional
	RecoverSoftDeleted terra.BoolValue `hcl:"recover_soft_deleted,attr"`
}

type FeaturesApplicationInsights struct {
	// DisableGeneratedRule: bool, optional
	DisableGeneratedRule terra.BoolValue `hcl:"disable_generated_rule,attr"`
}

type FeaturesCognitiveAccount struct {
	// PurgeSoftDeleteOnDestroy: bool, optional
	PurgeSoftDeleteOnDestroy terra.BoolValue `hcl:"purge_soft_delete_on_destroy,attr"`
}

type FeaturesKeyVault struct {
	// PurgeSoftDeleteOnDestroy: bool, optional
	PurgeSoftDeleteOnDestroy terra.BoolValue `hcl:"purge_soft_delete_on_destroy,attr"`
	// PurgeSoftDeletedCertificatesOnDestroy: bool, optional
	PurgeSoftDeletedCertificatesOnDestroy terra.BoolValue `hcl:"purge_soft_deleted_certificates_on_destroy,attr"`
	// PurgeSoftDeletedHardwareSecurityModulesOnDestroy: bool, optional
	PurgeSoftDeletedHardwareSecurityModulesOnDestroy terra.BoolValue `hcl:"purge_soft_deleted_hardware_security_modules_on_destroy,attr"`
	// PurgeSoftDeletedKeysOnDestroy: bool, optional
	PurgeSoftDeletedKeysOnDestroy terra.BoolValue `hcl:"purge_soft_deleted_keys_on_destroy,attr"`
	// PurgeSoftDeletedSecretsOnDestroy: bool, optional
	PurgeSoftDeletedSecretsOnDestroy terra.BoolValue `hcl:"purge_soft_deleted_secrets_on_destroy,attr"`
	// RecoverSoftDeletedCertificates: bool, optional
	RecoverSoftDeletedCertificates terra.BoolValue `hcl:"recover_soft_deleted_certificates,attr"`
	// RecoverSoftDeletedKeyVaults: bool, optional
	RecoverSoftDeletedKeyVaults terra.BoolValue `hcl:"recover_soft_deleted_key_vaults,attr"`
	// RecoverSoftDeletedKeys: bool, optional
	RecoverSoftDeletedKeys terra.BoolValue `hcl:"recover_soft_deleted_keys,attr"`
	// RecoverSoftDeletedSecrets: bool, optional
	RecoverSoftDeletedSecrets terra.BoolValue `hcl:"recover_soft_deleted_secrets,attr"`
}

type FeaturesLogAnalyticsWorkspace struct {
	// PermanentlyDeleteOnDestroy: bool, optional
	PermanentlyDeleteOnDestroy terra.BoolValue `hcl:"permanently_delete_on_destroy,attr"`
}

type FeaturesManagedDisk struct {
	// ExpandWithoutDowntime: bool, optional
	ExpandWithoutDowntime terra.BoolValue `hcl:"expand_without_downtime,attr"`
}

type FeaturesPostgresqlFlexibleServer struct {
	// RestartServerOnConfigurationValueChange: bool, optional
	RestartServerOnConfigurationValueChange terra.BoolValue `hcl:"restart_server_on_configuration_value_change,attr"`
}

type FeaturesRecoveryService struct {
	// PurgeProtectedItemsFromVaultOnDestroy: bool, optional
	PurgeProtectedItemsFromVaultOnDestroy terra.BoolValue `hcl:"purge_protected_items_from_vault_on_destroy,attr"`
	// VmBackupStopProtectionAndRetainDataOnDestroy: bool, optional
	VmBackupStopProtectionAndRetainDataOnDestroy terra.BoolValue `hcl:"vm_backup_stop_protection_and_retain_data_on_destroy,attr"`
}

type FeaturesResourceGroup struct {
	// PreventDeletionIfContainsResources: bool, optional
	PreventDeletionIfContainsResources terra.BoolValue `hcl:"prevent_deletion_if_contains_resources,attr"`
}

type FeaturesSubscription struct {
	// PreventCancellationOnDestroy: bool, optional
	PreventCancellationOnDestroy terra.BoolValue `hcl:"prevent_cancellation_on_destroy,attr"`
}

type FeaturesTemplateDeployment struct {
	// DeleteNestedItemsDuringDeletion: bool, required
	DeleteNestedItemsDuringDeletion terra.BoolValue `hcl:"delete_nested_items_during_deletion,attr" validate:"required"`
}

type FeaturesVirtualMachine struct {
	// DeleteOsDiskOnDeletion: bool, optional
	DeleteOsDiskOnDeletion terra.BoolValue `hcl:"delete_os_disk_on_deletion,attr"`
	// GracefulShutdown: bool, optional
	GracefulShutdown terra.BoolValue `hcl:"graceful_shutdown,attr"`
	// SkipShutdownAndForceDelete: bool, optional
	SkipShutdownAndForceDelete terra.BoolValue `hcl:"skip_shutdown_and_force_delete,attr"`
}

type FeaturesVirtualMachineScaleSet struct {
	// ForceDelete: bool, optional
	ForceDelete terra.BoolValue `hcl:"force_delete,attr"`
	// ReimageOnManualUpgrade: bool, optional
	ReimageOnManualUpgrade terra.BoolValue `hcl:"reimage_on_manual_upgrade,attr"`
	// RollInstancesWhenRequired: bool, optional
	RollInstancesWhenRequired terra.BoolValue `hcl:"roll_instances_when_required,attr"`
	// ScaleToZeroBeforeDeletion: bool, optional
	ScaleToZeroBeforeDeletion terra.BoolValue `hcl:"scale_to_zero_before_deletion,attr"`
}

type FeaturesAttributes struct {
	ref terra.Reference
}

func (f FeaturesAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f FeaturesAttributes) InternalWithRef(ref terra.Reference) FeaturesAttributes {
	return FeaturesAttributes{ref: ref}
}

func (f FeaturesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f FeaturesAttributes) ApiManagement() terra.ListValue[FeaturesApiManagementAttributes] {
	return terra.ReferenceAsList[FeaturesApiManagementAttributes](f.ref.Append("api_management"))
}

func (f FeaturesAttributes) AppConfiguration() terra.ListValue[FeaturesAppConfigurationAttributes] {
	return terra.ReferenceAsList[FeaturesAppConfigurationAttributes](f.ref.Append("app_configuration"))
}

func (f FeaturesAttributes) ApplicationInsights() terra.ListValue[FeaturesApplicationInsightsAttributes] {
	return terra.ReferenceAsList[FeaturesApplicationInsightsAttributes](f.ref.Append("application_insights"))
}

func (f FeaturesAttributes) CognitiveAccount() terra.ListValue[FeaturesCognitiveAccountAttributes] {
	return terra.ReferenceAsList[FeaturesCognitiveAccountAttributes](f.ref.Append("cognitive_account"))
}

func (f FeaturesAttributes) KeyVault() terra.ListValue[FeaturesKeyVaultAttributes] {
	return terra.ReferenceAsList[FeaturesKeyVaultAttributes](f.ref.Append("key_vault"))
}

func (f FeaturesAttributes) LogAnalyticsWorkspace() terra.ListValue[FeaturesLogAnalyticsWorkspaceAttributes] {
	return terra.ReferenceAsList[FeaturesLogAnalyticsWorkspaceAttributes](f.ref.Append("log_analytics_workspace"))
}

func (f FeaturesAttributes) ManagedDisk() terra.ListValue[FeaturesManagedDiskAttributes] {
	return terra.ReferenceAsList[FeaturesManagedDiskAttributes](f.ref.Append("managed_disk"))
}

func (f FeaturesAttributes) PostgresqlFlexibleServer() terra.ListValue[FeaturesPostgresqlFlexibleServerAttributes] {
	return terra.ReferenceAsList[FeaturesPostgresqlFlexibleServerAttributes](f.ref.Append("postgresql_flexible_server"))
}

func (f FeaturesAttributes) RecoveryService() terra.ListValue[FeaturesRecoveryServiceAttributes] {
	return terra.ReferenceAsList[FeaturesRecoveryServiceAttributes](f.ref.Append("recovery_service"))
}

func (f FeaturesAttributes) ResourceGroup() terra.ListValue[FeaturesResourceGroupAttributes] {
	return terra.ReferenceAsList[FeaturesResourceGroupAttributes](f.ref.Append("resource_group"))
}

func (f FeaturesAttributes) Subscription() terra.ListValue[FeaturesSubscriptionAttributes] {
	return terra.ReferenceAsList[FeaturesSubscriptionAttributes](f.ref.Append("subscription"))
}

func (f FeaturesAttributes) TemplateDeployment() terra.ListValue[FeaturesTemplateDeploymentAttributes] {
	return terra.ReferenceAsList[FeaturesTemplateDeploymentAttributes](f.ref.Append("template_deployment"))
}

func (f FeaturesAttributes) VirtualMachine() terra.ListValue[FeaturesVirtualMachineAttributes] {
	return terra.ReferenceAsList[FeaturesVirtualMachineAttributes](f.ref.Append("virtual_machine"))
}

func (f FeaturesAttributes) VirtualMachineScaleSet() terra.ListValue[FeaturesVirtualMachineScaleSetAttributes] {
	return terra.ReferenceAsList[FeaturesVirtualMachineScaleSetAttributes](f.ref.Append("virtual_machine_scale_set"))
}

type FeaturesApiManagementAttributes struct {
	ref terra.Reference
}

func (am FeaturesApiManagementAttributes) InternalRef() (terra.Reference, error) {
	return am.ref, nil
}

func (am FeaturesApiManagementAttributes) InternalWithRef(ref terra.Reference) FeaturesApiManagementAttributes {
	return FeaturesApiManagementAttributes{ref: ref}
}

func (am FeaturesApiManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return am.ref.InternalTokens()
}

func (am FeaturesApiManagementAttributes) PurgeSoftDeleteOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(am.ref.Append("purge_soft_delete_on_destroy"))
}

func (am FeaturesApiManagementAttributes) RecoverSoftDeleted() terra.BoolValue {
	return terra.ReferenceAsBool(am.ref.Append("recover_soft_deleted"))
}

type FeaturesAppConfigurationAttributes struct {
	ref terra.Reference
}

func (ac FeaturesAppConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac FeaturesAppConfigurationAttributes) InternalWithRef(ref terra.Reference) FeaturesAppConfigurationAttributes {
	return FeaturesAppConfigurationAttributes{ref: ref}
}

func (ac FeaturesAppConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac FeaturesAppConfigurationAttributes) PurgeSoftDeleteOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(ac.ref.Append("purge_soft_delete_on_destroy"))
}

func (ac FeaturesAppConfigurationAttributes) RecoverSoftDeleted() terra.BoolValue {
	return terra.ReferenceAsBool(ac.ref.Append("recover_soft_deleted"))
}

type FeaturesApplicationInsightsAttributes struct {
	ref terra.Reference
}

func (ai FeaturesApplicationInsightsAttributes) InternalRef() (terra.Reference, error) {
	return ai.ref, nil
}

func (ai FeaturesApplicationInsightsAttributes) InternalWithRef(ref terra.Reference) FeaturesApplicationInsightsAttributes {
	return FeaturesApplicationInsightsAttributes{ref: ref}
}

func (ai FeaturesApplicationInsightsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ai.ref.InternalTokens()
}

func (ai FeaturesApplicationInsightsAttributes) DisableGeneratedRule() terra.BoolValue {
	return terra.ReferenceAsBool(ai.ref.Append("disable_generated_rule"))
}

type FeaturesCognitiveAccountAttributes struct {
	ref terra.Reference
}

func (ca FeaturesCognitiveAccountAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca FeaturesCognitiveAccountAttributes) InternalWithRef(ref terra.Reference) FeaturesCognitiveAccountAttributes {
	return FeaturesCognitiveAccountAttributes{ref: ref}
}

func (ca FeaturesCognitiveAccountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca FeaturesCognitiveAccountAttributes) PurgeSoftDeleteOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("purge_soft_delete_on_destroy"))
}

type FeaturesKeyVaultAttributes struct {
	ref terra.Reference
}

func (kv FeaturesKeyVaultAttributes) InternalRef() (terra.Reference, error) {
	return kv.ref, nil
}

func (kv FeaturesKeyVaultAttributes) InternalWithRef(ref terra.Reference) FeaturesKeyVaultAttributes {
	return FeaturesKeyVaultAttributes{ref: ref}
}

func (kv FeaturesKeyVaultAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kv.ref.InternalTokens()
}

func (kv FeaturesKeyVaultAttributes) PurgeSoftDeleteOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("purge_soft_delete_on_destroy"))
}

func (kv FeaturesKeyVaultAttributes) PurgeSoftDeletedCertificatesOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("purge_soft_deleted_certificates_on_destroy"))
}

func (kv FeaturesKeyVaultAttributes) PurgeSoftDeletedHardwareSecurityModulesOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("purge_soft_deleted_hardware_security_modules_on_destroy"))
}

func (kv FeaturesKeyVaultAttributes) PurgeSoftDeletedKeysOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("purge_soft_deleted_keys_on_destroy"))
}

func (kv FeaturesKeyVaultAttributes) PurgeSoftDeletedSecretsOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("purge_soft_deleted_secrets_on_destroy"))
}

func (kv FeaturesKeyVaultAttributes) RecoverSoftDeletedCertificates() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("recover_soft_deleted_certificates"))
}

func (kv FeaturesKeyVaultAttributes) RecoverSoftDeletedKeyVaults() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("recover_soft_deleted_key_vaults"))
}

func (kv FeaturesKeyVaultAttributes) RecoverSoftDeletedKeys() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("recover_soft_deleted_keys"))
}

func (kv FeaturesKeyVaultAttributes) RecoverSoftDeletedSecrets() terra.BoolValue {
	return terra.ReferenceAsBool(kv.ref.Append("recover_soft_deleted_secrets"))
}

type FeaturesLogAnalyticsWorkspaceAttributes struct {
	ref terra.Reference
}

func (law FeaturesLogAnalyticsWorkspaceAttributes) InternalRef() (terra.Reference, error) {
	return law.ref, nil
}

func (law FeaturesLogAnalyticsWorkspaceAttributes) InternalWithRef(ref terra.Reference) FeaturesLogAnalyticsWorkspaceAttributes {
	return FeaturesLogAnalyticsWorkspaceAttributes{ref: ref}
}

func (law FeaturesLogAnalyticsWorkspaceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return law.ref.InternalTokens()
}

func (law FeaturesLogAnalyticsWorkspaceAttributes) PermanentlyDeleteOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(law.ref.Append("permanently_delete_on_destroy"))
}

type FeaturesManagedDiskAttributes struct {
	ref terra.Reference
}

func (md FeaturesManagedDiskAttributes) InternalRef() (terra.Reference, error) {
	return md.ref, nil
}

func (md FeaturesManagedDiskAttributes) InternalWithRef(ref terra.Reference) FeaturesManagedDiskAttributes {
	return FeaturesManagedDiskAttributes{ref: ref}
}

func (md FeaturesManagedDiskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return md.ref.InternalTokens()
}

func (md FeaturesManagedDiskAttributes) ExpandWithoutDowntime() terra.BoolValue {
	return terra.ReferenceAsBool(md.ref.Append("expand_without_downtime"))
}

type FeaturesPostgresqlFlexibleServerAttributes struct {
	ref terra.Reference
}

func (pfs FeaturesPostgresqlFlexibleServerAttributes) InternalRef() (terra.Reference, error) {
	return pfs.ref, nil
}

func (pfs FeaturesPostgresqlFlexibleServerAttributes) InternalWithRef(ref terra.Reference) FeaturesPostgresqlFlexibleServerAttributes {
	return FeaturesPostgresqlFlexibleServerAttributes{ref: ref}
}

func (pfs FeaturesPostgresqlFlexibleServerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pfs.ref.InternalTokens()
}

func (pfs FeaturesPostgresqlFlexibleServerAttributes) RestartServerOnConfigurationValueChange() terra.BoolValue {
	return terra.ReferenceAsBool(pfs.ref.Append("restart_server_on_configuration_value_change"))
}

type FeaturesRecoveryServiceAttributes struct {
	ref terra.Reference
}

func (rs FeaturesRecoveryServiceAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs FeaturesRecoveryServiceAttributes) InternalWithRef(ref terra.Reference) FeaturesRecoveryServiceAttributes {
	return FeaturesRecoveryServiceAttributes{ref: ref}
}

func (rs FeaturesRecoveryServiceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs FeaturesRecoveryServiceAttributes) PurgeProtectedItemsFromVaultOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(rs.ref.Append("purge_protected_items_from_vault_on_destroy"))
}

func (rs FeaturesRecoveryServiceAttributes) VmBackupStopProtectionAndRetainDataOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(rs.ref.Append("vm_backup_stop_protection_and_retain_data_on_destroy"))
}

type FeaturesResourceGroupAttributes struct {
	ref terra.Reference
}

func (rg FeaturesResourceGroupAttributes) InternalRef() (terra.Reference, error) {
	return rg.ref, nil
}

func (rg FeaturesResourceGroupAttributes) InternalWithRef(ref terra.Reference) FeaturesResourceGroupAttributes {
	return FeaturesResourceGroupAttributes{ref: ref}
}

func (rg FeaturesResourceGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rg.ref.InternalTokens()
}

func (rg FeaturesResourceGroupAttributes) PreventDeletionIfContainsResources() terra.BoolValue {
	return terra.ReferenceAsBool(rg.ref.Append("prevent_deletion_if_contains_resources"))
}

type FeaturesSubscriptionAttributes struct {
	ref terra.Reference
}

func (s FeaturesSubscriptionAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s FeaturesSubscriptionAttributes) InternalWithRef(ref terra.Reference) FeaturesSubscriptionAttributes {
	return FeaturesSubscriptionAttributes{ref: ref}
}

func (s FeaturesSubscriptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s FeaturesSubscriptionAttributes) PreventCancellationOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("prevent_cancellation_on_destroy"))
}

type FeaturesTemplateDeploymentAttributes struct {
	ref terra.Reference
}

func (td FeaturesTemplateDeploymentAttributes) InternalRef() (terra.Reference, error) {
	return td.ref, nil
}

func (td FeaturesTemplateDeploymentAttributes) InternalWithRef(ref terra.Reference) FeaturesTemplateDeploymentAttributes {
	return FeaturesTemplateDeploymentAttributes{ref: ref}
}

func (td FeaturesTemplateDeploymentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return td.ref.InternalTokens()
}

func (td FeaturesTemplateDeploymentAttributes) DeleteNestedItemsDuringDeletion() terra.BoolValue {
	return terra.ReferenceAsBool(td.ref.Append("delete_nested_items_during_deletion"))
}

type FeaturesVirtualMachineAttributes struct {
	ref terra.Reference
}

func (vm FeaturesVirtualMachineAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm FeaturesVirtualMachineAttributes) InternalWithRef(ref terra.Reference) FeaturesVirtualMachineAttributes {
	return FeaturesVirtualMachineAttributes{ref: ref}
}

func (vm FeaturesVirtualMachineAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm FeaturesVirtualMachineAttributes) DeleteOsDiskOnDeletion() terra.BoolValue {
	return terra.ReferenceAsBool(vm.ref.Append("delete_os_disk_on_deletion"))
}

func (vm FeaturesVirtualMachineAttributes) GracefulShutdown() terra.BoolValue {
	return terra.ReferenceAsBool(vm.ref.Append("graceful_shutdown"))
}

func (vm FeaturesVirtualMachineAttributes) SkipShutdownAndForceDelete() terra.BoolValue {
	return terra.ReferenceAsBool(vm.ref.Append("skip_shutdown_and_force_delete"))
}

type FeaturesVirtualMachineScaleSetAttributes struct {
	ref terra.Reference
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) InternalRef() (terra.Reference, error) {
	return vmss.ref, nil
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) InternalWithRef(ref terra.Reference) FeaturesVirtualMachineScaleSetAttributes {
	return FeaturesVirtualMachineScaleSetAttributes{ref: ref}
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vmss.ref.InternalTokens()
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) ForceDelete() terra.BoolValue {
	return terra.ReferenceAsBool(vmss.ref.Append("force_delete"))
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) ReimageOnManualUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(vmss.ref.Append("reimage_on_manual_upgrade"))
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) RollInstancesWhenRequired() terra.BoolValue {
	return terra.ReferenceAsBool(vmss.ref.Append("roll_instances_when_required"))
}

func (vmss FeaturesVirtualMachineScaleSetAttributes) ScaleToZeroBeforeDeletion() terra.BoolValue {
	return terra.ReferenceAsBool(vmss.ref.Append("scale_to_zero_before_deletion"))
}

type FeaturesState struct {
	ApiManagement            []FeaturesApiManagementState            `json:"api_management"`
	AppConfiguration         []FeaturesAppConfigurationState         `json:"app_configuration"`
	ApplicationInsights      []FeaturesApplicationInsightsState      `json:"application_insights"`
	CognitiveAccount         []FeaturesCognitiveAccountState         `json:"cognitive_account"`
	KeyVault                 []FeaturesKeyVaultState                 `json:"key_vault"`
	LogAnalyticsWorkspace    []FeaturesLogAnalyticsWorkspaceState    `json:"log_analytics_workspace"`
	ManagedDisk              []FeaturesManagedDiskState              `json:"managed_disk"`
	PostgresqlFlexibleServer []FeaturesPostgresqlFlexibleServerState `json:"postgresql_flexible_server"`
	RecoveryService          []FeaturesRecoveryServiceState          `json:"recovery_service"`
	ResourceGroup            []FeaturesResourceGroupState            `json:"resource_group"`
	Subscription             []FeaturesSubscriptionState             `json:"subscription"`
	TemplateDeployment       []FeaturesTemplateDeploymentState       `json:"template_deployment"`
	VirtualMachine           []FeaturesVirtualMachineState           `json:"virtual_machine"`
	VirtualMachineScaleSet   []FeaturesVirtualMachineScaleSetState   `json:"virtual_machine_scale_set"`
}

type FeaturesApiManagementState struct {
	PurgeSoftDeleteOnDestroy bool `json:"purge_soft_delete_on_destroy"`
	RecoverSoftDeleted       bool `json:"recover_soft_deleted"`
}

type FeaturesAppConfigurationState struct {
	PurgeSoftDeleteOnDestroy bool `json:"purge_soft_delete_on_destroy"`
	RecoverSoftDeleted       bool `json:"recover_soft_deleted"`
}

type FeaturesApplicationInsightsState struct {
	DisableGeneratedRule bool `json:"disable_generated_rule"`
}

type FeaturesCognitiveAccountState struct {
	PurgeSoftDeleteOnDestroy bool `json:"purge_soft_delete_on_destroy"`
}

type FeaturesKeyVaultState struct {
	PurgeSoftDeleteOnDestroy                         bool `json:"purge_soft_delete_on_destroy"`
	PurgeSoftDeletedCertificatesOnDestroy            bool `json:"purge_soft_deleted_certificates_on_destroy"`
	PurgeSoftDeletedHardwareSecurityModulesOnDestroy bool `json:"purge_soft_deleted_hardware_security_modules_on_destroy"`
	PurgeSoftDeletedKeysOnDestroy                    bool `json:"purge_soft_deleted_keys_on_destroy"`
	PurgeSoftDeletedSecretsOnDestroy                 bool `json:"purge_soft_deleted_secrets_on_destroy"`
	RecoverSoftDeletedCertificates                   bool `json:"recover_soft_deleted_certificates"`
	RecoverSoftDeletedKeyVaults                      bool `json:"recover_soft_deleted_key_vaults"`
	RecoverSoftDeletedKeys                           bool `json:"recover_soft_deleted_keys"`
	RecoverSoftDeletedSecrets                        bool `json:"recover_soft_deleted_secrets"`
}

type FeaturesLogAnalyticsWorkspaceState struct {
	PermanentlyDeleteOnDestroy bool `json:"permanently_delete_on_destroy"`
}

type FeaturesManagedDiskState struct {
	ExpandWithoutDowntime bool `json:"expand_without_downtime"`
}

type FeaturesPostgresqlFlexibleServerState struct {
	RestartServerOnConfigurationValueChange bool `json:"restart_server_on_configuration_value_change"`
}

type FeaturesRecoveryServiceState struct {
	PurgeProtectedItemsFromVaultOnDestroy        bool `json:"purge_protected_items_from_vault_on_destroy"`
	VmBackupStopProtectionAndRetainDataOnDestroy bool `json:"vm_backup_stop_protection_and_retain_data_on_destroy"`
}

type FeaturesResourceGroupState struct {
	PreventDeletionIfContainsResources bool `json:"prevent_deletion_if_contains_resources"`
}

type FeaturesSubscriptionState struct {
	PreventCancellationOnDestroy bool `json:"prevent_cancellation_on_destroy"`
}

type FeaturesTemplateDeploymentState struct {
	DeleteNestedItemsDuringDeletion bool `json:"delete_nested_items_during_deletion"`
}

type FeaturesVirtualMachineState struct {
	DeleteOsDiskOnDeletion     bool `json:"delete_os_disk_on_deletion"`
	GracefulShutdown           bool `json:"graceful_shutdown"`
	SkipShutdownAndForceDelete bool `json:"skip_shutdown_and_force_delete"`
}

type FeaturesVirtualMachineScaleSetState struct {
	ForceDelete               bool `json:"force_delete"`
	ReimageOnManualUpgrade    bool `json:"reimage_on_manual_upgrade"`
	RollInstancesWhenRequired bool `json:"roll_instances_when_required"`
	ScaleToZeroBeforeDeletion bool `json:"scale_to_zero_before_deletion"`
}
