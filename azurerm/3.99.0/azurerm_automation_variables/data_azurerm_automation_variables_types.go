// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_variables

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataBoolAttributes struct {
	ref terra.Reference
}

func (b DataBoolAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b DataBoolAttributes) InternalWithRef(ref terra.Reference) DataBoolAttributes {
	return DataBoolAttributes{ref: ref}
}

func (b DataBoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b DataBoolAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("description"))
}

func (b DataBoolAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("encrypted"))
}

func (b DataBoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("id"))
}

func (b DataBoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("name"))
}

func (b DataBoolAttributes) Value() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("value"))
}

type DataDatetimeAttributes struct {
	ref terra.Reference
}

func (d DataDatetimeAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataDatetimeAttributes) InternalWithRef(ref terra.Reference) DataDatetimeAttributes {
	return DataDatetimeAttributes{ref: ref}
}

func (d DataDatetimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataDatetimeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("description"))
}

func (d DataDatetimeAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(d.ref.Append("encrypted"))
}

func (d DataDatetimeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("id"))
}

func (d DataDatetimeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d DataDatetimeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type DataEncryptedAttributes struct {
	ref terra.Reference
}

func (e DataEncryptedAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataEncryptedAttributes) InternalWithRef(ref terra.Reference) DataEncryptedAttributes {
	return DataEncryptedAttributes{ref: ref}
}

func (e DataEncryptedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataEncryptedAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e DataEncryptedAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("encrypted"))
}

func (e DataEncryptedAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("id"))
}

func (e DataEncryptedAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataEncryptedAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type DataIntAttributes struct {
	ref terra.Reference
}

func (i DataIntAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIntAttributes) InternalWithRef(ref terra.Reference) DataIntAttributes {
	return DataIntAttributes{ref: ref}
}

func (i DataIntAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIntAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("description"))
}

func (i DataIntAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("encrypted"))
}

func (i DataIntAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("id"))
}

func (i DataIntAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("name"))
}

func (i DataIntAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("value"))
}

type DataNullAttributes struct {
	ref terra.Reference
}

func (n DataNullAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n DataNullAttributes) InternalWithRef(ref terra.Reference) DataNullAttributes {
	return DataNullAttributes{ref: ref}
}

func (n DataNullAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n DataNullAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("description"))
}

func (n DataNullAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(n.ref.Append("encrypted"))
}

func (n DataNullAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("id"))
}

func (n DataNullAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("name"))
}

func (n DataNullAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("value"))
}

type DataObjectAttributes struct {
	ref terra.Reference
}

func (o DataObjectAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o DataObjectAttributes) InternalWithRef(ref terra.Reference) DataObjectAttributes {
	return DataObjectAttributes{ref: ref}
}

func (o DataObjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o DataObjectAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("description"))
}

func (o DataObjectAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(o.ref.Append("encrypted"))
}

func (o DataObjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("id"))
}

func (o DataObjectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("name"))
}

func (o DataObjectAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("value"))
}

type DataStringAttributes struct {
	ref terra.Reference
}

func (s DataStringAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataStringAttributes) InternalWithRef(ref terra.Reference) DataStringAttributes {
	return DataStringAttributes{ref: ref}
}

func (s DataStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataStringAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("description"))
}

func (s DataStringAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("encrypted"))
}

func (s DataStringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s DataStringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DataStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("value"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataBoolState struct {
	Description string `json:"description"`
	Encrypted   bool   `json:"encrypted"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Value       bool   `json:"value"`
}

type DataDatetimeState struct {
	Description string `json:"description"`
	Encrypted   bool   `json:"encrypted"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Value       string `json:"value"`
}

type DataEncryptedState struct {
	Description string `json:"description"`
	Encrypted   bool   `json:"encrypted"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Value       string `json:"value"`
}

type DataIntState struct {
	Description string  `json:"description"`
	Encrypted   bool    `json:"encrypted"`
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Value       float64 `json:"value"`
}

type DataNullState struct {
	Description string `json:"description"`
	Encrypted   bool   `json:"encrypted"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Value       string `json:"value"`
}

type DataObjectState struct {
	Description string `json:"description"`
	Encrypted   bool   `json:"encrypted"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Value       string `json:"value"`
}

type DataStringState struct {
	Description string `json:"description"`
	Encrypted   bool   `json:"encrypted"`
	Id          string `json:"id"`
	Name        string `json:"name"`
	Value       string `json:"value"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
