// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_site_recovery_hyperv_replication_policy_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_site_recovery_hyperv_replication_policy_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSiteRecoveryHypervReplicationPolicyAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asrhrpa *Resource) Type() string {
	return "azurerm_site_recovery_hyperv_replication_policy_association"
}

// LocalName returns the local name for [Resource].
func (asrhrpa *Resource) LocalName() string {
	return asrhrpa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asrhrpa *Resource) Configuration() interface{} {
	return asrhrpa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asrhrpa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asrhrpa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asrhrpa *Resource) Dependencies() terra.Dependencies {
	return asrhrpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asrhrpa *Resource) LifecycleManagement() *terra.Lifecycle {
	return asrhrpa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asrhrpa *Resource) Attributes() azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes {
	return azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes{ref: terra.ReferenceResource(asrhrpa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asrhrpa *Resource) ImportState(state io.Reader) error {
	asrhrpa.state = &azurermSiteRecoveryHypervReplicationPolicyAssociationState{}
	if err := json.NewDecoder(state).Decode(asrhrpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asrhrpa.Type(), asrhrpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asrhrpa *Resource) State() (*azurermSiteRecoveryHypervReplicationPolicyAssociationState, bool) {
	return asrhrpa.state, asrhrpa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asrhrpa *Resource) StateMust() *azurermSiteRecoveryHypervReplicationPolicyAssociationState {
	if asrhrpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asrhrpa.Type(), asrhrpa.LocalName()))
	}
	return asrhrpa.state
}

// Args contains the configurations for azurerm_site_recovery_hyperv_replication_policy_association.
type Args struct {
	// HypervSiteId: string, required
	HypervSiteId terra.StringValue `hcl:"hyperv_site_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PolicyId: string, required
	PolicyId terra.StringValue `hcl:"policy_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes struct {
	ref terra.Reference
}

// HypervSiteId returns a reference to field hyperv_site_id of azurerm_site_recovery_hyperv_replication_policy_association.
func (asrhrpa azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes) HypervSiteId() terra.StringValue {
	return terra.ReferenceAsString(asrhrpa.ref.Append("hyperv_site_id"))
}

// Id returns a reference to field id of azurerm_site_recovery_hyperv_replication_policy_association.
func (asrhrpa azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asrhrpa.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_site_recovery_hyperv_replication_policy_association.
func (asrhrpa azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asrhrpa.ref.Append("name"))
}

// PolicyId returns a reference to field policy_id of azurerm_site_recovery_hyperv_replication_policy_association.
func (asrhrpa azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(asrhrpa.ref.Append("policy_id"))
}

func (asrhrpa azurermSiteRecoveryHypervReplicationPolicyAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asrhrpa.ref.Append("timeouts"))
}

type azurermSiteRecoveryHypervReplicationPolicyAssociationState struct {
	HypervSiteId string         `json:"hyperv_site_id"`
	Id           string         `json:"id"`
	Name         string         `json:"name"`
	PolicyId     string         `json:"policy_id"`
	Timeouts     *TimeoutsState `json:"timeouts"`
}
