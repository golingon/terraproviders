// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cosmosdb_mongo_role_definition

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cosmosdb_mongo_role_definition.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCosmosdbMongoRoleDefinitionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acmrd *Resource) Type() string {
	return "azurerm_cosmosdb_mongo_role_definition"
}

// LocalName returns the local name for [Resource].
func (acmrd *Resource) LocalName() string {
	return acmrd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acmrd *Resource) Configuration() interface{} {
	return acmrd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acmrd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acmrd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acmrd *Resource) Dependencies() terra.Dependencies {
	return acmrd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acmrd *Resource) LifecycleManagement() *terra.Lifecycle {
	return acmrd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acmrd *Resource) Attributes() azurermCosmosdbMongoRoleDefinitionAttributes {
	return azurermCosmosdbMongoRoleDefinitionAttributes{ref: terra.ReferenceResource(acmrd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acmrd *Resource) ImportState(state io.Reader) error {
	acmrd.state = &azurermCosmosdbMongoRoleDefinitionState{}
	if err := json.NewDecoder(state).Decode(acmrd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acmrd.Type(), acmrd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acmrd *Resource) State() (*azurermCosmosdbMongoRoleDefinitionState, bool) {
	return acmrd.state, acmrd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acmrd *Resource) StateMust() *azurermCosmosdbMongoRoleDefinitionState {
	if acmrd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acmrd.Type(), acmrd.LocalName()))
	}
	return acmrd.state
}

// Args contains the configurations for azurerm_cosmosdb_mongo_role_definition.
type Args struct {
	// CosmosMongoDatabaseId: string, required
	CosmosMongoDatabaseId terra.StringValue `hcl:"cosmos_mongo_database_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InheritedRoleNames: list of string, optional
	InheritedRoleNames terra.ListValue[terra.StringValue] `hcl:"inherited_role_names,attr"`
	// RoleName: string, required
	RoleName terra.StringValue `hcl:"role_name,attr" validate:"required"`
	// Privilege: min=0
	Privilege []Privilege `hcl:"privilege,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCosmosdbMongoRoleDefinitionAttributes struct {
	ref terra.Reference
}

// CosmosMongoDatabaseId returns a reference to field cosmos_mongo_database_id of azurerm_cosmosdb_mongo_role_definition.
func (acmrd azurermCosmosdbMongoRoleDefinitionAttributes) CosmosMongoDatabaseId() terra.StringValue {
	return terra.ReferenceAsString(acmrd.ref.Append("cosmos_mongo_database_id"))
}

// Id returns a reference to field id of azurerm_cosmosdb_mongo_role_definition.
func (acmrd azurermCosmosdbMongoRoleDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acmrd.ref.Append("id"))
}

// InheritedRoleNames returns a reference to field inherited_role_names of azurerm_cosmosdb_mongo_role_definition.
func (acmrd azurermCosmosdbMongoRoleDefinitionAttributes) InheritedRoleNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](acmrd.ref.Append("inherited_role_names"))
}

// RoleName returns a reference to field role_name of azurerm_cosmosdb_mongo_role_definition.
func (acmrd azurermCosmosdbMongoRoleDefinitionAttributes) RoleName() terra.StringValue {
	return terra.ReferenceAsString(acmrd.ref.Append("role_name"))
}

func (acmrd azurermCosmosdbMongoRoleDefinitionAttributes) Privilege() terra.ListValue[PrivilegeAttributes] {
	return terra.ReferenceAsList[PrivilegeAttributes](acmrd.ref.Append("privilege"))
}

func (acmrd azurermCosmosdbMongoRoleDefinitionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acmrd.ref.Append("timeouts"))
}

type azurermCosmosdbMongoRoleDefinitionState struct {
	CosmosMongoDatabaseId string           `json:"cosmos_mongo_database_id"`
	Id                    string           `json:"id"`
	InheritedRoleNames    []string         `json:"inherited_role_names"`
	RoleName              string           `json:"role_name"`
	Privilege             []PrivilegeState `json:"privilege"`
	Timeouts              *TimeoutsState   `json:"timeouts"`
}
