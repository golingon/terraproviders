// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_resources

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataResourcesAttributes struct {
	ref terra.Reference
}

func (r DataResourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataResourcesAttributes) InternalWithRef(ref terra.Reference) DataResourcesAttributes {
	return DataResourcesAttributes{ref: ref}
}

func (r DataResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataResourcesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("id"))
}

func (r DataResourcesAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("location"))
}

func (r DataResourcesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("name"))
}

func (r DataResourcesAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("resource_group_name"))
}

func (r DataResourcesAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("tags"))
}

func (r DataResourcesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataResourcesState struct {
	Id                string            `json:"id"`
	Location          string            `json:"location"`
	Name              string            `json:"name"`
	ResourceGroupName string            `json:"resource_group_name"`
	Tags              map[string]string `json:"tags"`
	Type              string            `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
