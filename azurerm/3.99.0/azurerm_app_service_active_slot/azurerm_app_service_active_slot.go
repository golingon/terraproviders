// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_app_service_active_slot

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_app_service_active_slot.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAppServiceActiveSlotState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aasas *Resource) Type() string {
	return "azurerm_app_service_active_slot"
}

// LocalName returns the local name for [Resource].
func (aasas *Resource) LocalName() string {
	return aasas.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aasas *Resource) Configuration() interface{} {
	return aasas.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aasas *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aasas)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aasas *Resource) Dependencies() terra.Dependencies {
	return aasas.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aasas *Resource) LifecycleManagement() *terra.Lifecycle {
	return aasas.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aasas *Resource) Attributes() azurermAppServiceActiveSlotAttributes {
	return azurermAppServiceActiveSlotAttributes{ref: terra.ReferenceResource(aasas)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aasas *Resource) ImportState(state io.Reader) error {
	aasas.state = &azurermAppServiceActiveSlotState{}
	if err := json.NewDecoder(state).Decode(aasas.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aasas.Type(), aasas.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aasas *Resource) State() (*azurermAppServiceActiveSlotState, bool) {
	return aasas.state, aasas.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aasas *Resource) StateMust() *azurermAppServiceActiveSlotState {
	if aasas.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aasas.Type(), aasas.LocalName()))
	}
	return aasas.state
}

// Args contains the configurations for azurerm_app_service_active_slot.
type Args struct {
	// AppServiceName: string, required
	AppServiceName terra.StringValue `hcl:"app_service_name,attr" validate:"required"`
	// AppServiceSlotName: string, required
	AppServiceSlotName terra.StringValue `hcl:"app_service_slot_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAppServiceActiveSlotAttributes struct {
	ref terra.Reference
}

// AppServiceName returns a reference to field app_service_name of azurerm_app_service_active_slot.
func (aasas azurermAppServiceActiveSlotAttributes) AppServiceName() terra.StringValue {
	return terra.ReferenceAsString(aasas.ref.Append("app_service_name"))
}

// AppServiceSlotName returns a reference to field app_service_slot_name of azurerm_app_service_active_slot.
func (aasas azurermAppServiceActiveSlotAttributes) AppServiceSlotName() terra.StringValue {
	return terra.ReferenceAsString(aasas.ref.Append("app_service_slot_name"))
}

// Id returns a reference to field id of azurerm_app_service_active_slot.
func (aasas azurermAppServiceActiveSlotAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aasas.ref.Append("id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_app_service_active_slot.
func (aasas azurermAppServiceActiveSlotAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aasas.ref.Append("resource_group_name"))
}

func (aasas azurermAppServiceActiveSlotAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aasas.ref.Append("timeouts"))
}

type azurermAppServiceActiveSlotState struct {
	AppServiceName     string         `json:"app_service_name"`
	AppServiceSlotName string         `json:"app_service_slot_name"`
	Id                 string         `json:"id"`
	ResourceGroupName  string         `json:"resource_group_name"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
