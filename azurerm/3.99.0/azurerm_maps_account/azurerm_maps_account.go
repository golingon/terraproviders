// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_maps_account

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_maps_account.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermMapsAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ama *Resource) Type() string {
	return "azurerm_maps_account"
}

// LocalName returns the local name for [Resource].
func (ama *Resource) LocalName() string {
	return ama.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ama *Resource) Configuration() interface{} {
	return ama.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ama *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ama)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ama *Resource) Dependencies() terra.Dependencies {
	return ama.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ama *Resource) LifecycleManagement() *terra.Lifecycle {
	return ama.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ama *Resource) Attributes() azurermMapsAccountAttributes {
	return azurermMapsAccountAttributes{ref: terra.ReferenceResource(ama)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ama *Resource) ImportState(state io.Reader) error {
	ama.state = &azurermMapsAccountState{}
	if err := json.NewDecoder(state).Decode(ama.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ama.Type(), ama.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ama *Resource) State() (*azurermMapsAccountState, bool) {
	return ama.state, ama.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ama *Resource) StateMust() *azurermMapsAccountState {
	if ama.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ama.Type(), ama.LocalName()))
	}
	return ama.state
}

// Args contains the configurations for azurerm_maps_account.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalAuthenticationEnabled: bool, optional
	LocalAuthenticationEnabled terra.BoolValue `hcl:"local_authentication_enabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, required
	SkuName terra.StringValue `hcl:"sku_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermMapsAccountAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("id"))
}

// LocalAuthenticationEnabled returns a reference to field local_authentication_enabled of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) LocalAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ama.ref.Append("local_authentication_enabled"))
}

// Name returns a reference to field name of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("name"))
}

// PrimaryAccessKey returns a reference to field primary_access_key of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) PrimaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("primary_access_key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("resource_group_name"))
}

// SecondaryAccessKey returns a reference to field secondary_access_key of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) SecondaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("secondary_access_key"))
}

// SkuName returns a reference to field sku_name of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("sku_name"))
}

// Tags returns a reference to field tags of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ama.ref.Append("tags"))
}

// XMsClientId returns a reference to field x_ms_client_id of azurerm_maps_account.
func (ama azurermMapsAccountAttributes) XMsClientId() terra.StringValue {
	return terra.ReferenceAsString(ama.ref.Append("x_ms_client_id"))
}

func (ama azurermMapsAccountAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ama.ref.Append("timeouts"))
}

type azurermMapsAccountState struct {
	Id                         string            `json:"id"`
	LocalAuthenticationEnabled bool              `json:"local_authentication_enabled"`
	Name                       string            `json:"name"`
	PrimaryAccessKey           string            `json:"primary_access_key"`
	ResourceGroupName          string            `json:"resource_group_name"`
	SecondaryAccessKey         string            `json:"secondary_access_key"`
	SkuName                    string            `json:"sku_name"`
	Tags                       map[string]string `json:"tags"`
	XMsClientId                string            `json:"x_ms_client_id"`
	Timeouts                   *TimeoutsState    `json:"timeouts"`
}
