// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_policy_set_definition

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_policy_set_definition.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermPolicySetDefinitionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (apsd *Resource) Type() string {
	return "azurerm_policy_set_definition"
}

// LocalName returns the local name for [Resource].
func (apsd *Resource) LocalName() string {
	return apsd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (apsd *Resource) Configuration() interface{} {
	return apsd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (apsd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(apsd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (apsd *Resource) Dependencies() terra.Dependencies {
	return apsd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (apsd *Resource) LifecycleManagement() *terra.Lifecycle {
	return apsd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (apsd *Resource) Attributes() azurermPolicySetDefinitionAttributes {
	return azurermPolicySetDefinitionAttributes{ref: terra.ReferenceResource(apsd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (apsd *Resource) ImportState(state io.Reader) error {
	apsd.state = &azurermPolicySetDefinitionState{}
	if err := json.NewDecoder(state).Decode(apsd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", apsd.Type(), apsd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (apsd *Resource) State() (*azurermPolicySetDefinitionState, bool) {
	return apsd.state, apsd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (apsd *Resource) StateMust() *azurermPolicySetDefinitionState {
	if apsd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", apsd.Type(), apsd.LocalName()))
	}
	return apsd.state
}

// Args contains the configurations for azurerm_policy_set_definition.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagementGroupId: string, optional
	ManagementGroupId terra.StringValue `hcl:"management_group_id,attr"`
	// Metadata: string, optional
	Metadata terra.StringValue `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: string, optional
	Parameters terra.StringValue `hcl:"parameters,attr"`
	// PolicyType: string, required
	PolicyType terra.StringValue `hcl:"policy_type,attr" validate:"required"`
	// PolicyDefinitionGroup: min=0
	PolicyDefinitionGroup []PolicyDefinitionGroup `hcl:"policy_definition_group,block" validate:"min=0"`
	// PolicyDefinitionReference: min=1
	PolicyDefinitionReference []PolicyDefinitionReference `hcl:"policy_definition_reference,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermPolicySetDefinitionAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("id"))
}

// ManagementGroupId returns a reference to field management_group_id of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) ManagementGroupId() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("management_group_id"))
}

// Metadata returns a reference to field metadata of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) Metadata() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("metadata"))
}

// Name returns a reference to field name of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("name"))
}

// Parameters returns a reference to field parameters of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) Parameters() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("parameters"))
}

// PolicyType returns a reference to field policy_type of azurerm_policy_set_definition.
func (apsd azurermPolicySetDefinitionAttributes) PolicyType() terra.StringValue {
	return terra.ReferenceAsString(apsd.ref.Append("policy_type"))
}

func (apsd azurermPolicySetDefinitionAttributes) PolicyDefinitionGroup() terra.SetValue[PolicyDefinitionGroupAttributes] {
	return terra.ReferenceAsSet[PolicyDefinitionGroupAttributes](apsd.ref.Append("policy_definition_group"))
}

func (apsd azurermPolicySetDefinitionAttributes) PolicyDefinitionReference() terra.ListValue[PolicyDefinitionReferenceAttributes] {
	return terra.ReferenceAsList[PolicyDefinitionReferenceAttributes](apsd.ref.Append("policy_definition_reference"))
}

func (apsd azurermPolicySetDefinitionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](apsd.ref.Append("timeouts"))
}

type azurermPolicySetDefinitionState struct {
	Description               string                           `json:"description"`
	DisplayName               string                           `json:"display_name"`
	Id                        string                           `json:"id"`
	ManagementGroupId         string                           `json:"management_group_id"`
	Metadata                  string                           `json:"metadata"`
	Name                      string                           `json:"name"`
	Parameters                string                           `json:"parameters"`
	PolicyType                string                           `json:"policy_type"`
	PolicyDefinitionGroup     []PolicyDefinitionGroupState     `json:"policy_definition_group"`
	PolicyDefinitionReference []PolicyDefinitionReferenceState `json:"policy_definition_reference"`
	Timeouts                  *TimeoutsState                   `json:"timeouts"`
}
