// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_data_share_dataset_data_lake_gen2

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_data_share_dataset_data_lake_gen2.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermDataShareDatasetDataLakeGen2State
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adsddlg *Resource) Type() string {
	return "azurerm_data_share_dataset_data_lake_gen2"
}

// LocalName returns the local name for [Resource].
func (adsddlg *Resource) LocalName() string {
	return adsddlg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adsddlg *Resource) Configuration() interface{} {
	return adsddlg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adsddlg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adsddlg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adsddlg *Resource) Dependencies() terra.Dependencies {
	return adsddlg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adsddlg *Resource) LifecycleManagement() *terra.Lifecycle {
	return adsddlg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adsddlg *Resource) Attributes() azurermDataShareDatasetDataLakeGen2Attributes {
	return azurermDataShareDatasetDataLakeGen2Attributes{ref: terra.ReferenceResource(adsddlg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adsddlg *Resource) ImportState(state io.Reader) error {
	adsddlg.state = &azurermDataShareDatasetDataLakeGen2State{}
	if err := json.NewDecoder(state).Decode(adsddlg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adsddlg.Type(), adsddlg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adsddlg *Resource) State() (*azurermDataShareDatasetDataLakeGen2State, bool) {
	return adsddlg.state, adsddlg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adsddlg *Resource) StateMust() *azurermDataShareDatasetDataLakeGen2State {
	if adsddlg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adsddlg.Type(), adsddlg.LocalName()))
	}
	return adsddlg.state
}

// Args contains the configurations for azurerm_data_share_dataset_data_lake_gen2.
type Args struct {
	// FilePath: string, optional
	FilePath terra.StringValue `hcl:"file_path,attr"`
	// FileSystemName: string, required
	FileSystemName terra.StringValue `hcl:"file_system_name,attr" validate:"required"`
	// FolderPath: string, optional
	FolderPath terra.StringValue `hcl:"folder_path,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ShareId: string, required
	ShareId terra.StringValue `hcl:"share_id,attr" validate:"required"`
	// StorageAccountId: string, required
	StorageAccountId terra.StringValue `hcl:"storage_account_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermDataShareDatasetDataLakeGen2Attributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("display_name"))
}

// FilePath returns a reference to field file_path of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) FilePath() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("file_path"))
}

// FileSystemName returns a reference to field file_system_name of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) FileSystemName() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("file_system_name"))
}

// FolderPath returns a reference to field folder_path of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) FolderPath() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("folder_path"))
}

// Id returns a reference to field id of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("name"))
}

// ShareId returns a reference to field share_id of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) ShareId() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("share_id"))
}

// StorageAccountId returns a reference to field storage_account_id of azurerm_data_share_dataset_data_lake_gen2.
func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) StorageAccountId() terra.StringValue {
	return terra.ReferenceAsString(adsddlg.ref.Append("storage_account_id"))
}

func (adsddlg azurermDataShareDatasetDataLakeGen2Attributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](adsddlg.ref.Append("timeouts"))
}

type azurermDataShareDatasetDataLakeGen2State struct {
	DisplayName      string         `json:"display_name"`
	FilePath         string         `json:"file_path"`
	FileSystemName   string         `json:"file_system_name"`
	FolderPath       string         `json:"folder_path"`
	Id               string         `json:"id"`
	Name             string         `json:"name"`
	ShareId          string         `json:"share_id"`
	StorageAccountId string         `json:"storage_account_id"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
