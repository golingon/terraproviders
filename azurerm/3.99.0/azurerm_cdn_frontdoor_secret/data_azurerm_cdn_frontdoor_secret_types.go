// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_frontdoor_secret

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataSecretAttributes struct {
	ref terra.Reference
}

func (s DataSecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataSecretAttributes) InternalWithRef(ref terra.Reference) DataSecretAttributes {
	return DataSecretAttributes{ref: ref}
}

func (s DataSecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataSecretAttributes) CustomerCertificate() terra.ListValue[DataSecretCustomerCertificateAttributes] {
	return terra.ReferenceAsList[DataSecretCustomerCertificateAttributes](s.ref.Append("customer_certificate"))
}

type DataSecretCustomerCertificateAttributes struct {
	ref terra.Reference
}

func (cc DataSecretCustomerCertificateAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataSecretCustomerCertificateAttributes) InternalWithRef(ref terra.Reference) DataSecretCustomerCertificateAttributes {
	return DataSecretCustomerCertificateAttributes{ref: ref}
}

func (cc DataSecretCustomerCertificateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataSecretCustomerCertificateAttributes) ExpirationDate() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("expiration_date"))
}

func (cc DataSecretCustomerCertificateAttributes) KeyVaultCertificateId() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("key_vault_certificate_id"))
}

func (cc DataSecretCustomerCertificateAttributes) SubjectAlternativeNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cc.ref.Append("subject_alternative_names"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataSecretState struct {
	CustomerCertificate []DataSecretCustomerCertificateState `json:"customer_certificate"`
}

type DataSecretCustomerCertificateState struct {
	ExpirationDate          string   `json:"expiration_date"`
	KeyVaultCertificateId   string   `json:"key_vault_certificate_id"`
	SubjectAlternativeNames []string `json:"subject_alternative_names"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
