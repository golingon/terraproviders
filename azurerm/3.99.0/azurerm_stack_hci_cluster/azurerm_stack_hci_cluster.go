// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_stack_hci_cluster

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_stack_hci_cluster.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermStackHciClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ashc *Resource) Type() string {
	return "azurerm_stack_hci_cluster"
}

// LocalName returns the local name for [Resource].
func (ashc *Resource) LocalName() string {
	return ashc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ashc *Resource) Configuration() interface{} {
	return ashc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ashc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ashc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ashc *Resource) Dependencies() terra.Dependencies {
	return ashc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ashc *Resource) LifecycleManagement() *terra.Lifecycle {
	return ashc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ashc *Resource) Attributes() azurermStackHciClusterAttributes {
	return azurermStackHciClusterAttributes{ref: terra.ReferenceResource(ashc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ashc *Resource) ImportState(state io.Reader) error {
	ashc.state = &azurermStackHciClusterState{}
	if err := json.NewDecoder(state).Decode(ashc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ashc.Type(), ashc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ashc *Resource) State() (*azurermStackHciClusterState, bool) {
	return ashc.state, ashc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ashc *Resource) StateMust() *azurermStackHciClusterState {
	if ashc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ashc.Type(), ashc.LocalName()))
	}
	return ashc.state
}

// Args contains the configurations for azurerm_stack_hci_cluster.
type Args struct {
	// AutomanageConfigurationId: string, optional
	AutomanageConfigurationId terra.StringValue `hcl:"automanage_configuration_id,attr"`
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermStackHciClusterAttributes struct {
	ref terra.Reference
}

// AutomanageConfigurationId returns a reference to field automanage_configuration_id of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) AutomanageConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("automanage_configuration_id"))
}

// ClientId returns a reference to field client_id of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("client_id"))
}

// CloudId returns a reference to field cloud_id of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) CloudId() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("cloud_id"))
}

// Id returns a reference to field id of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("resource_group_name"))
}

// ResourceProviderObjectId returns a reference to field resource_provider_object_id of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) ResourceProviderObjectId() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("resource_provider_object_id"))
}

// ServiceEndpoint returns a reference to field service_endpoint of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) ServiceEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("service_endpoint"))
}

// Tags returns a reference to field tags of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ashc.ref.Append("tags"))
}

// TenantId returns a reference to field tenant_id of azurerm_stack_hci_cluster.
func (ashc azurermStackHciClusterAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(ashc.ref.Append("tenant_id"))
}

func (ashc azurermStackHciClusterAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](ashc.ref.Append("identity"))
}

func (ashc azurermStackHciClusterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ashc.ref.Append("timeouts"))
}

type azurermStackHciClusterState struct {
	AutomanageConfigurationId string            `json:"automanage_configuration_id"`
	ClientId                  string            `json:"client_id"`
	CloudId                   string            `json:"cloud_id"`
	Id                        string            `json:"id"`
	Location                  string            `json:"location"`
	Name                      string            `json:"name"`
	ResourceGroupName         string            `json:"resource_group_name"`
	ResourceProviderObjectId  string            `json:"resource_provider_object_id"`
	ServiceEndpoint           string            `json:"service_endpoint"`
	Tags                      map[string]string `json:"tags"`
	TenantId                  string            `json:"tenant_id"`
	Identity                  []IdentityState   `json:"identity"`
	Timeouts                  *TimeoutsState    `json:"timeouts"`
}
