// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_security_center_subscription_pricing

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_security_center_subscription_pricing.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSecurityCenterSubscriptionPricingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ascsp *Resource) Type() string {
	return "azurerm_security_center_subscription_pricing"
}

// LocalName returns the local name for [Resource].
func (ascsp *Resource) LocalName() string {
	return ascsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ascsp *Resource) Configuration() interface{} {
	return ascsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ascsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ascsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ascsp *Resource) Dependencies() terra.Dependencies {
	return ascsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ascsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return ascsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ascsp *Resource) Attributes() azurermSecurityCenterSubscriptionPricingAttributes {
	return azurermSecurityCenterSubscriptionPricingAttributes{ref: terra.ReferenceResource(ascsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ascsp *Resource) ImportState(state io.Reader) error {
	ascsp.state = &azurermSecurityCenterSubscriptionPricingState{}
	if err := json.NewDecoder(state).Decode(ascsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ascsp.Type(), ascsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ascsp *Resource) State() (*azurermSecurityCenterSubscriptionPricingState, bool) {
	return ascsp.state, ascsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ascsp *Resource) StateMust() *azurermSecurityCenterSubscriptionPricingState {
	if ascsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ascsp.Type(), ascsp.LocalName()))
	}
	return ascsp.state
}

// Args contains the configurations for azurerm_security_center_subscription_pricing.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceType: string, optional
	ResourceType terra.StringValue `hcl:"resource_type,attr"`
	// Subplan: string, optional
	Subplan terra.StringValue `hcl:"subplan,attr"`
	// Tier: string, required
	Tier terra.StringValue `hcl:"tier,attr" validate:"required"`
	// Extension: min=0
	Extension []Extension `hcl:"extension,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSecurityCenterSubscriptionPricingAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_security_center_subscription_pricing.
func (ascsp azurermSecurityCenterSubscriptionPricingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ascsp.ref.Append("id"))
}

// ResourceType returns a reference to field resource_type of azurerm_security_center_subscription_pricing.
func (ascsp azurermSecurityCenterSubscriptionPricingAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(ascsp.ref.Append("resource_type"))
}

// Subplan returns a reference to field subplan of azurerm_security_center_subscription_pricing.
func (ascsp azurermSecurityCenterSubscriptionPricingAttributes) Subplan() terra.StringValue {
	return terra.ReferenceAsString(ascsp.ref.Append("subplan"))
}

// Tier returns a reference to field tier of azurerm_security_center_subscription_pricing.
func (ascsp azurermSecurityCenterSubscriptionPricingAttributes) Tier() terra.StringValue {
	return terra.ReferenceAsString(ascsp.ref.Append("tier"))
}

func (ascsp azurermSecurityCenterSubscriptionPricingAttributes) Extension() terra.SetValue[ExtensionAttributes] {
	return terra.ReferenceAsSet[ExtensionAttributes](ascsp.ref.Append("extension"))
}

func (ascsp azurermSecurityCenterSubscriptionPricingAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ascsp.ref.Append("timeouts"))
}

type azurermSecurityCenterSubscriptionPricingState struct {
	Id           string           `json:"id"`
	ResourceType string           `json:"resource_type"`
	Subplan      string           `json:"subplan"`
	Tier         string           `json:"tier"`
	Extension    []ExtensionState `json:"extension"`
	Timeouts     *TimeoutsState   `json:"timeouts"`
}
