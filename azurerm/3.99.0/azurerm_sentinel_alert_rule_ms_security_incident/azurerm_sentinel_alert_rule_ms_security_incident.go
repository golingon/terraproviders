// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_sentinel_alert_rule_ms_security_incident

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_sentinel_alert_rule_ms_security_incident.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSentinelAlertRuleMsSecurityIncidentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asarmsi *Resource) Type() string {
	return "azurerm_sentinel_alert_rule_ms_security_incident"
}

// LocalName returns the local name for [Resource].
func (asarmsi *Resource) LocalName() string {
	return asarmsi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asarmsi *Resource) Configuration() interface{} {
	return asarmsi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asarmsi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asarmsi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asarmsi *Resource) Dependencies() terra.Dependencies {
	return asarmsi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asarmsi *Resource) LifecycleManagement() *terra.Lifecycle {
	return asarmsi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asarmsi *Resource) Attributes() azurermSentinelAlertRuleMsSecurityIncidentAttributes {
	return azurermSentinelAlertRuleMsSecurityIncidentAttributes{ref: terra.ReferenceResource(asarmsi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asarmsi *Resource) ImportState(state io.Reader) error {
	asarmsi.state = &azurermSentinelAlertRuleMsSecurityIncidentState{}
	if err := json.NewDecoder(state).Decode(asarmsi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asarmsi.Type(), asarmsi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asarmsi *Resource) State() (*azurermSentinelAlertRuleMsSecurityIncidentState, bool) {
	return asarmsi.state, asarmsi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asarmsi *Resource) StateMust() *azurermSentinelAlertRuleMsSecurityIncidentState {
	if asarmsi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asarmsi.Type(), asarmsi.LocalName()))
	}
	return asarmsi.state
}

// Args contains the configurations for azurerm_sentinel_alert_rule_ms_security_incident.
type Args struct {
	// AlertRuleTemplateGuid: string, optional
	AlertRuleTemplateGuid terra.StringValue `hcl:"alert_rule_template_guid,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// DisplayNameExcludeFilter: set of string, optional
	DisplayNameExcludeFilter terra.SetValue[terra.StringValue] `hcl:"display_name_exclude_filter,attr"`
	// DisplayNameFilter: set of string, optional
	DisplayNameFilter terra.SetValue[terra.StringValue] `hcl:"display_name_filter,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ProductFilter: string, required
	ProductFilter terra.StringValue `hcl:"product_filter,attr" validate:"required"`
	// SeverityFilter: set of string, required
	SeverityFilter terra.SetValue[terra.StringValue] `hcl:"severity_filter,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSentinelAlertRuleMsSecurityIncidentAttributes struct {
	ref terra.Reference
}

// AlertRuleTemplateGuid returns a reference to field alert_rule_template_guid of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) AlertRuleTemplateGuid() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("alert_rule_template_guid"))
}

// Description returns a reference to field description of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("display_name"))
}

// DisplayNameExcludeFilter returns a reference to field display_name_exclude_filter of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) DisplayNameExcludeFilter() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asarmsi.ref.Append("display_name_exclude_filter"))
}

// DisplayNameFilter returns a reference to field display_name_filter of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) DisplayNameFilter() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asarmsi.ref.Append("display_name_filter"))
}

// Enabled returns a reference to field enabled of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(asarmsi.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("id"))
}

// LogAnalyticsWorkspaceId returns a reference to field log_analytics_workspace_id of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("log_analytics_workspace_id"))
}

// Name returns a reference to field name of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("name"))
}

// ProductFilter returns a reference to field product_filter of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) ProductFilter() terra.StringValue {
	return terra.ReferenceAsString(asarmsi.ref.Append("product_filter"))
}

// SeverityFilter returns a reference to field severity_filter of azurerm_sentinel_alert_rule_ms_security_incident.
func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) SeverityFilter() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](asarmsi.ref.Append("severity_filter"))
}

func (asarmsi azurermSentinelAlertRuleMsSecurityIncidentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asarmsi.ref.Append("timeouts"))
}

type azurermSentinelAlertRuleMsSecurityIncidentState struct {
	AlertRuleTemplateGuid    string         `json:"alert_rule_template_guid"`
	Description              string         `json:"description"`
	DisplayName              string         `json:"display_name"`
	DisplayNameExcludeFilter []string       `json:"display_name_exclude_filter"`
	DisplayNameFilter        []string       `json:"display_name_filter"`
	Enabled                  bool           `json:"enabled"`
	Id                       string         `json:"id"`
	LogAnalyticsWorkspaceId  string         `json:"log_analytics_workspace_id"`
	Name                     string         `json:"name"`
	ProductFilter            string         `json:"product_filter"`
	SeverityFilter           []string       `json:"severity_filter"`
	Timeouts                 *TimeoutsState `json:"timeouts"`
}
