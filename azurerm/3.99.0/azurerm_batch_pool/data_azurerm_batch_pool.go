// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_batch_pool

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_batch_pool.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (abp *DataSource) DataSource() string {
	return "azurerm_batch_pool"
}

// LocalName returns the local name for [DataSource].
func (abp *DataSource) LocalName() string {
	return abp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (abp *DataSource) Configuration() interface{} {
	return abp.Args
}

// Attributes returns the attributes for [DataSource].
func (abp *DataSource) Attributes() dataAzurermBatchPoolAttributes {
	return dataAzurermBatchPoolAttributes{ref: terra.ReferenceDataSource(abp)}
}

// DataArgs contains the configurations for azurerm_batch_pool.
type DataArgs struct {
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermBatchPoolAttributes struct {
	ref terra.Reference
}

// AccountName returns a reference to field account_name of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("account_name"))
}

// DisplayName returns a reference to field display_name of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("id"))
}

// InterNodeCommunication returns a reference to field inter_node_communication of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) InterNodeCommunication() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("inter_node_communication"))
}

// LicenseType returns a reference to field license_type of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) LicenseType() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("license_type"))
}

// MaxTasksPerNode returns a reference to field max_tasks_per_node of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) MaxTasksPerNode() terra.NumberValue {
	return terra.ReferenceAsNumber(abp.ref.Append("max_tasks_per_node"))
}

// Metadata returns a reference to field metadata of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](abp.ref.Append("metadata"))
}

// Name returns a reference to field name of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("name"))
}

// NodeAgentSkuId returns a reference to field node_agent_sku_id of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) NodeAgentSkuId() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("node_agent_sku_id"))
}

// OsDiskPlacement returns a reference to field os_disk_placement of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) OsDiskPlacement() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("os_disk_placement"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("resource_group_name"))
}

// VmSize returns a reference to field vm_size of azurerm_batch_pool.
func (abp dataAzurermBatchPoolAttributes) VmSize() terra.StringValue {
	return terra.ReferenceAsString(abp.ref.Append("vm_size"))
}

func (abp dataAzurermBatchPoolAttributes) AutoScale() terra.ListValue[DataAutoScaleAttributes] {
	return terra.ReferenceAsList[DataAutoScaleAttributes](abp.ref.Append("auto_scale"))
}

func (abp dataAzurermBatchPoolAttributes) Certificate() terra.ListValue[DataCertificateAttributes] {
	return terra.ReferenceAsList[DataCertificateAttributes](abp.ref.Append("certificate"))
}

func (abp dataAzurermBatchPoolAttributes) ContainerConfiguration() terra.ListValue[DataContainerConfigurationAttributes] {
	return terra.ReferenceAsList[DataContainerConfigurationAttributes](abp.ref.Append("container_configuration"))
}

func (abp dataAzurermBatchPoolAttributes) DataDisks() terra.ListValue[DataDataDisksAttributes] {
	return terra.ReferenceAsList[DataDataDisksAttributes](abp.ref.Append("data_disks"))
}

func (abp dataAzurermBatchPoolAttributes) DiskEncryption() terra.ListValue[DataDiskEncryptionAttributes] {
	return terra.ReferenceAsList[DataDiskEncryptionAttributes](abp.ref.Append("disk_encryption"))
}

func (abp dataAzurermBatchPoolAttributes) Extensions() terra.ListValue[DataExtensionsAttributes] {
	return terra.ReferenceAsList[DataExtensionsAttributes](abp.ref.Append("extensions"))
}

func (abp dataAzurermBatchPoolAttributes) FixedScale() terra.ListValue[DataFixedScaleAttributes] {
	return terra.ReferenceAsList[DataFixedScaleAttributes](abp.ref.Append("fixed_scale"))
}

func (abp dataAzurermBatchPoolAttributes) Mount() terra.ListValue[DataMountAttributes] {
	return terra.ReferenceAsList[DataMountAttributes](abp.ref.Append("mount"))
}

func (abp dataAzurermBatchPoolAttributes) NetworkConfiguration() terra.ListValue[DataNetworkConfigurationAttributes] {
	return terra.ReferenceAsList[DataNetworkConfigurationAttributes](abp.ref.Append("network_configuration"))
}

func (abp dataAzurermBatchPoolAttributes) NodePlacement() terra.ListValue[DataNodePlacementAttributes] {
	return terra.ReferenceAsList[DataNodePlacementAttributes](abp.ref.Append("node_placement"))
}

func (abp dataAzurermBatchPoolAttributes) StartTask() terra.ListValue[DataStartTaskAttributes] {
	return terra.ReferenceAsList[DataStartTaskAttributes](abp.ref.Append("start_task"))
}

func (abp dataAzurermBatchPoolAttributes) StorageImageReference() terra.ListValue[DataStorageImageReferenceAttributes] {
	return terra.ReferenceAsList[DataStorageImageReferenceAttributes](abp.ref.Append("storage_image_reference"))
}

func (abp dataAzurermBatchPoolAttributes) TaskSchedulingPolicy() terra.ListValue[DataTaskSchedulingPolicyAttributes] {
	return terra.ReferenceAsList[DataTaskSchedulingPolicyAttributes](abp.ref.Append("task_scheduling_policy"))
}

func (abp dataAzurermBatchPoolAttributes) UserAccounts() terra.ListValue[DataUserAccountsAttributes] {
	return terra.ReferenceAsList[DataUserAccountsAttributes](abp.ref.Append("user_accounts"))
}

func (abp dataAzurermBatchPoolAttributes) Windows() terra.ListValue[DataWindowsAttributes] {
	return terra.ReferenceAsList[DataWindowsAttributes](abp.ref.Append("windows"))
}

func (abp dataAzurermBatchPoolAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](abp.ref.Append("timeouts"))
}
