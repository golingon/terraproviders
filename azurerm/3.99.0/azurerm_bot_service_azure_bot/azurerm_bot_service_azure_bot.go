// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_bot_service_azure_bot

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_bot_service_azure_bot.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermBotServiceAzureBotState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (absab *Resource) Type() string {
	return "azurerm_bot_service_azure_bot"
}

// LocalName returns the local name for [Resource].
func (absab *Resource) LocalName() string {
	return absab.Name
}

// Configuration returns the configuration (args) for [Resource].
func (absab *Resource) Configuration() interface{} {
	return absab.Args
}

// DependOn is used for other resources to depend on [Resource].
func (absab *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(absab)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (absab *Resource) Dependencies() terra.Dependencies {
	return absab.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (absab *Resource) LifecycleManagement() *terra.Lifecycle {
	return absab.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (absab *Resource) Attributes() azurermBotServiceAzureBotAttributes {
	return azurermBotServiceAzureBotAttributes{ref: terra.ReferenceResource(absab)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (absab *Resource) ImportState(state io.Reader) error {
	absab.state = &azurermBotServiceAzureBotState{}
	if err := json.NewDecoder(state).Decode(absab.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", absab.Type(), absab.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (absab *Resource) State() (*azurermBotServiceAzureBotState, bool) {
	return absab.state, absab.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (absab *Resource) StateMust() *azurermBotServiceAzureBotState {
	if absab.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", absab.Type(), absab.LocalName()))
	}
	return absab.state
}

// Args contains the configurations for azurerm_bot_service_azure_bot.
type Args struct {
	// CmkKeyVaultKeyUrl: string, optional
	CmkKeyVaultKeyUrl terra.StringValue `hcl:"cmk_key_vault_key_url,attr"`
	// DeveloperAppInsightsApiKey: string, optional
	DeveloperAppInsightsApiKey terra.StringValue `hcl:"developer_app_insights_api_key,attr"`
	// DeveloperAppInsightsApplicationId: string, optional
	DeveloperAppInsightsApplicationId terra.StringValue `hcl:"developer_app_insights_application_id,attr"`
	// DeveloperAppInsightsKey: string, optional
	DeveloperAppInsightsKey terra.StringValue `hcl:"developer_app_insights_key,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Endpoint: string, optional
	Endpoint terra.StringValue `hcl:"endpoint,attr"`
	// IconUrl: string, optional
	IconUrl terra.StringValue `hcl:"icon_url,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalAuthenticationEnabled: bool, optional
	LocalAuthenticationEnabled terra.BoolValue `hcl:"local_authentication_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LuisAppIds: list of string, optional
	LuisAppIds terra.ListValue[terra.StringValue] `hcl:"luis_app_ids,attr"`
	// LuisKey: string, optional
	LuisKey terra.StringValue `hcl:"luis_key,attr"`
	// MicrosoftAppId: string, required
	MicrosoftAppId terra.StringValue `hcl:"microsoft_app_id,attr" validate:"required"`
	// MicrosoftAppMsiId: string, optional
	MicrosoftAppMsiId terra.StringValue `hcl:"microsoft_app_msi_id,attr"`
	// MicrosoftAppTenantId: string, optional
	MicrosoftAppTenantId terra.StringValue `hcl:"microsoft_app_tenant_id,attr"`
	// MicrosoftAppType: string, optional
	MicrosoftAppType terra.StringValue `hcl:"microsoft_app_type,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// StreamingEndpointEnabled: bool, optional
	StreamingEndpointEnabled terra.BoolValue `hcl:"streaming_endpoint_enabled,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermBotServiceAzureBotAttributes struct {
	ref terra.Reference
}

// CmkKeyVaultKeyUrl returns a reference to field cmk_key_vault_key_url of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) CmkKeyVaultKeyUrl() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("cmk_key_vault_key_url"))
}

// DeveloperAppInsightsApiKey returns a reference to field developer_app_insights_api_key of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) DeveloperAppInsightsApiKey() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("developer_app_insights_api_key"))
}

// DeveloperAppInsightsApplicationId returns a reference to field developer_app_insights_application_id of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) DeveloperAppInsightsApplicationId() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("developer_app_insights_application_id"))
}

// DeveloperAppInsightsKey returns a reference to field developer_app_insights_key of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) DeveloperAppInsightsKey() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("developer_app_insights_key"))
}

// DisplayName returns a reference to field display_name of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("display_name"))
}

// Endpoint returns a reference to field endpoint of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("endpoint"))
}

// IconUrl returns a reference to field icon_url of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) IconUrl() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("icon_url"))
}

// Id returns a reference to field id of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("id"))
}

// LocalAuthenticationEnabled returns a reference to field local_authentication_enabled of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) LocalAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(absab.ref.Append("local_authentication_enabled"))
}

// Location returns a reference to field location of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("location"))
}

// LuisAppIds returns a reference to field luis_app_ids of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) LuisAppIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](absab.ref.Append("luis_app_ids"))
}

// LuisKey returns a reference to field luis_key of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) LuisKey() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("luis_key"))
}

// MicrosoftAppId returns a reference to field microsoft_app_id of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) MicrosoftAppId() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("microsoft_app_id"))
}

// MicrosoftAppMsiId returns a reference to field microsoft_app_msi_id of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) MicrosoftAppMsiId() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("microsoft_app_msi_id"))
}

// MicrosoftAppTenantId returns a reference to field microsoft_app_tenant_id of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) MicrosoftAppTenantId() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("microsoft_app_tenant_id"))
}

// MicrosoftAppType returns a reference to field microsoft_app_type of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) MicrosoftAppType() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("microsoft_app_type"))
}

// Name returns a reference to field name of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("name"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(absab.ref.Append("public_network_access_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("resource_group_name"))
}

// Sku returns a reference to field sku of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(absab.ref.Append("sku"))
}

// StreamingEndpointEnabled returns a reference to field streaming_endpoint_enabled of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) StreamingEndpointEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(absab.ref.Append("streaming_endpoint_enabled"))
}

// Tags returns a reference to field tags of azurerm_bot_service_azure_bot.
func (absab azurermBotServiceAzureBotAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](absab.ref.Append("tags"))
}

func (absab azurermBotServiceAzureBotAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](absab.ref.Append("timeouts"))
}

type azurermBotServiceAzureBotState struct {
	CmkKeyVaultKeyUrl                 string            `json:"cmk_key_vault_key_url"`
	DeveloperAppInsightsApiKey        string            `json:"developer_app_insights_api_key"`
	DeveloperAppInsightsApplicationId string            `json:"developer_app_insights_application_id"`
	DeveloperAppInsightsKey           string            `json:"developer_app_insights_key"`
	DisplayName                       string            `json:"display_name"`
	Endpoint                          string            `json:"endpoint"`
	IconUrl                           string            `json:"icon_url"`
	Id                                string            `json:"id"`
	LocalAuthenticationEnabled        bool              `json:"local_authentication_enabled"`
	Location                          string            `json:"location"`
	LuisAppIds                        []string          `json:"luis_app_ids"`
	LuisKey                           string            `json:"luis_key"`
	MicrosoftAppId                    string            `json:"microsoft_app_id"`
	MicrosoftAppMsiId                 string            `json:"microsoft_app_msi_id"`
	MicrosoftAppTenantId              string            `json:"microsoft_app_tenant_id"`
	MicrosoftAppType                  string            `json:"microsoft_app_type"`
	Name                              string            `json:"name"`
	PublicNetworkAccessEnabled        bool              `json:"public_network_access_enabled"`
	ResourceGroupName                 string            `json:"resource_group_name"`
	Sku                               string            `json:"sku"`
	StreamingEndpointEnabled          bool              `json:"streaming_endpoint_enabled"`
	Tags                              map[string]string `json:"tags"`
	Timeouts                          *TimeoutsState    `json:"timeouts"`
}
