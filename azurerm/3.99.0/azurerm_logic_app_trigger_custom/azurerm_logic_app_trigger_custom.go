// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logic_app_trigger_custom

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_logic_app_trigger_custom.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogicAppTriggerCustomState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alatc *Resource) Type() string {
	return "azurerm_logic_app_trigger_custom"
}

// LocalName returns the local name for [Resource].
func (alatc *Resource) LocalName() string {
	return alatc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alatc *Resource) Configuration() interface{} {
	return alatc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alatc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alatc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alatc *Resource) Dependencies() terra.Dependencies {
	return alatc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alatc *Resource) LifecycleManagement() *terra.Lifecycle {
	return alatc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alatc *Resource) Attributes() azurermLogicAppTriggerCustomAttributes {
	return azurermLogicAppTriggerCustomAttributes{ref: terra.ReferenceResource(alatc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alatc *Resource) ImportState(state io.Reader) error {
	alatc.state = &azurermLogicAppTriggerCustomState{}
	if err := json.NewDecoder(state).Decode(alatc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alatc.Type(), alatc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alatc *Resource) State() (*azurermLogicAppTriggerCustomState, bool) {
	return alatc.state, alatc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alatc *Resource) StateMust() *azurermLogicAppTriggerCustomState {
	if alatc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alatc.Type(), alatc.LocalName()))
	}
	return alatc.state
}

// Args contains the configurations for azurerm_logic_app_trigger_custom.
type Args struct {
	// Body: string, required
	Body terra.StringValue `hcl:"body,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogicAppId: string, required
	LogicAppId terra.StringValue `hcl:"logic_app_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogicAppTriggerCustomAttributes struct {
	ref terra.Reference
}

// Body returns a reference to field body of azurerm_logic_app_trigger_custom.
func (alatc azurermLogicAppTriggerCustomAttributes) Body() terra.StringValue {
	return terra.ReferenceAsString(alatc.ref.Append("body"))
}

// Id returns a reference to field id of azurerm_logic_app_trigger_custom.
func (alatc azurermLogicAppTriggerCustomAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alatc.ref.Append("id"))
}

// LogicAppId returns a reference to field logic_app_id of azurerm_logic_app_trigger_custom.
func (alatc azurermLogicAppTriggerCustomAttributes) LogicAppId() terra.StringValue {
	return terra.ReferenceAsString(alatc.ref.Append("logic_app_id"))
}

// Name returns a reference to field name of azurerm_logic_app_trigger_custom.
func (alatc azurermLogicAppTriggerCustomAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alatc.ref.Append("name"))
}

func (alatc azurermLogicAppTriggerCustomAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alatc.ref.Append("timeouts"))
}

type azurermLogicAppTriggerCustomState struct {
	Body       string         `json:"body"`
	Id         string         `json:"id"`
	LogicAppId string         `json:"logic_app_id"`
	Name       string         `json:"name"`
	Timeouts   *TimeoutsState `json:"timeouts"`
}
