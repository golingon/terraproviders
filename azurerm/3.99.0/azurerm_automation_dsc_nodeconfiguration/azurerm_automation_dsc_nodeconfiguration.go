// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_automation_dsc_nodeconfiguration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_automation_dsc_nodeconfiguration.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermAutomationDscNodeconfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aadn *Resource) Type() string {
	return "azurerm_automation_dsc_nodeconfiguration"
}

// LocalName returns the local name for [Resource].
func (aadn *Resource) LocalName() string {
	return aadn.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aadn *Resource) Configuration() interface{} {
	return aadn.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aadn *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aadn)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aadn *Resource) Dependencies() terra.Dependencies {
	return aadn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aadn *Resource) LifecycleManagement() *terra.Lifecycle {
	return aadn.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aadn *Resource) Attributes() azurermAutomationDscNodeconfigurationAttributes {
	return azurermAutomationDscNodeconfigurationAttributes{ref: terra.ReferenceResource(aadn)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aadn *Resource) ImportState(state io.Reader) error {
	aadn.state = &azurermAutomationDscNodeconfigurationState{}
	if err := json.NewDecoder(state).Decode(aadn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aadn.Type(), aadn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aadn *Resource) State() (*azurermAutomationDscNodeconfigurationState, bool) {
	return aadn.state, aadn.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aadn *Resource) StateMust() *azurermAutomationDscNodeconfigurationState {
	if aadn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aadn.Type(), aadn.LocalName()))
	}
	return aadn.state
}

// Args contains the configurations for azurerm_automation_dsc_nodeconfiguration.
type Args struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// ContentEmbedded: string, required
	ContentEmbedded terra.StringValue `hcl:"content_embedded,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermAutomationDscNodeconfigurationAttributes struct {
	ref terra.Reference
}

// AutomationAccountName returns a reference to field automation_account_name of azurerm_automation_dsc_nodeconfiguration.
func (aadn azurermAutomationDscNodeconfigurationAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("automation_account_name"))
}

// ConfigurationName returns a reference to field configuration_name of azurerm_automation_dsc_nodeconfiguration.
func (aadn azurermAutomationDscNodeconfigurationAttributes) ConfigurationName() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("configuration_name"))
}

// ContentEmbedded returns a reference to field content_embedded of azurerm_automation_dsc_nodeconfiguration.
func (aadn azurermAutomationDscNodeconfigurationAttributes) ContentEmbedded() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("content_embedded"))
}

// Id returns a reference to field id of azurerm_automation_dsc_nodeconfiguration.
func (aadn azurermAutomationDscNodeconfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_dsc_nodeconfiguration.
func (aadn azurermAutomationDscNodeconfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_automation_dsc_nodeconfiguration.
func (aadn azurermAutomationDscNodeconfigurationAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aadn.ref.Append("resource_group_name"))
}

func (aadn azurermAutomationDscNodeconfigurationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aadn.ref.Append("timeouts"))
}

type azurermAutomationDscNodeconfigurationState struct {
	AutomationAccountName string         `json:"automation_account_name"`
	ConfigurationName     string         `json:"configuration_name"`
	ContentEmbedded       string         `json:"content_embedded"`
	Id                    string         `json:"id"`
	Name                  string         `json:"name"`
	ResourceGroupName     string         `json:"resource_group_name"`
	Timeouts              *TimeoutsState `json:"timeouts"`
}
