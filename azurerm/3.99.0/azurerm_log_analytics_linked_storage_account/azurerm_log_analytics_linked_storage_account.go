// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_log_analytics_linked_storage_account

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_log_analytics_linked_storage_account.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogAnalyticsLinkedStorageAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alalsa *Resource) Type() string {
	return "azurerm_log_analytics_linked_storage_account"
}

// LocalName returns the local name for [Resource].
func (alalsa *Resource) LocalName() string {
	return alalsa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alalsa *Resource) Configuration() interface{} {
	return alalsa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alalsa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alalsa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alalsa *Resource) Dependencies() terra.Dependencies {
	return alalsa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alalsa *Resource) LifecycleManagement() *terra.Lifecycle {
	return alalsa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alalsa *Resource) Attributes() azurermLogAnalyticsLinkedStorageAccountAttributes {
	return azurermLogAnalyticsLinkedStorageAccountAttributes{ref: terra.ReferenceResource(alalsa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alalsa *Resource) ImportState(state io.Reader) error {
	alalsa.state = &azurermLogAnalyticsLinkedStorageAccountState{}
	if err := json.NewDecoder(state).Decode(alalsa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alalsa.Type(), alalsa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alalsa *Resource) State() (*azurermLogAnalyticsLinkedStorageAccountState, bool) {
	return alalsa.state, alalsa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alalsa *Resource) StateMust() *azurermLogAnalyticsLinkedStorageAccountState {
	if alalsa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alalsa.Type(), alalsa.LocalName()))
	}
	return alalsa.state
}

// Args contains the configurations for azurerm_log_analytics_linked_storage_account.
type Args struct {
	// DataSourceType: string, required
	DataSourceType terra.StringValue `hcl:"data_source_type,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// StorageAccountIds: set of string, required
	StorageAccountIds terra.SetValue[terra.StringValue] `hcl:"storage_account_ids,attr" validate:"required"`
	// WorkspaceResourceId: string, required
	WorkspaceResourceId terra.StringValue `hcl:"workspace_resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogAnalyticsLinkedStorageAccountAttributes struct {
	ref terra.Reference
}

// DataSourceType returns a reference to field data_source_type of azurerm_log_analytics_linked_storage_account.
func (alalsa azurermLogAnalyticsLinkedStorageAccountAttributes) DataSourceType() terra.StringValue {
	return terra.ReferenceAsString(alalsa.ref.Append("data_source_type"))
}

// Id returns a reference to field id of azurerm_log_analytics_linked_storage_account.
func (alalsa azurermLogAnalyticsLinkedStorageAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alalsa.ref.Append("id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_log_analytics_linked_storage_account.
func (alalsa azurermLogAnalyticsLinkedStorageAccountAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(alalsa.ref.Append("resource_group_name"))
}

// StorageAccountIds returns a reference to field storage_account_ids of azurerm_log_analytics_linked_storage_account.
func (alalsa azurermLogAnalyticsLinkedStorageAccountAttributes) StorageAccountIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](alalsa.ref.Append("storage_account_ids"))
}

// WorkspaceResourceId returns a reference to field workspace_resource_id of azurerm_log_analytics_linked_storage_account.
func (alalsa azurermLogAnalyticsLinkedStorageAccountAttributes) WorkspaceResourceId() terra.StringValue {
	return terra.ReferenceAsString(alalsa.ref.Append("workspace_resource_id"))
}

func (alalsa azurermLogAnalyticsLinkedStorageAccountAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alalsa.ref.Append("timeouts"))
}

type azurermLogAnalyticsLinkedStorageAccountState struct {
	DataSourceType      string         `json:"data_source_type"`
	Id                  string         `json:"id"`
	ResourceGroupName   string         `json:"resource_group_name"`
	StorageAccountIds   []string       `json:"storage_account_ids"`
	WorkspaceResourceId string         `json:"workspace_resource_id"`
	Timeouts            *TimeoutsState `json:"timeouts"`
}
