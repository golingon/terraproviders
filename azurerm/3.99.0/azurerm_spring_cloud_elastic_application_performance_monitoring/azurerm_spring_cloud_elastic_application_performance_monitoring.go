// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_spring_cloud_elastic_application_performance_monitoring

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_spring_cloud_elastic_application_performance_monitoring.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSpringCloudElasticApplicationPerformanceMonitoringState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asceapm *Resource) Type() string {
	return "azurerm_spring_cloud_elastic_application_performance_monitoring"
}

// LocalName returns the local name for [Resource].
func (asceapm *Resource) LocalName() string {
	return asceapm.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asceapm *Resource) Configuration() interface{} {
	return asceapm.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asceapm *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asceapm)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asceapm *Resource) Dependencies() terra.Dependencies {
	return asceapm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asceapm *Resource) LifecycleManagement() *terra.Lifecycle {
	return asceapm.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asceapm *Resource) Attributes() azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes {
	return azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes{ref: terra.ReferenceResource(asceapm)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asceapm *Resource) ImportState(state io.Reader) error {
	asceapm.state = &azurermSpringCloudElasticApplicationPerformanceMonitoringState{}
	if err := json.NewDecoder(state).Decode(asceapm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asceapm.Type(), asceapm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asceapm *Resource) State() (*azurermSpringCloudElasticApplicationPerformanceMonitoringState, bool) {
	return asceapm.state, asceapm.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asceapm *Resource) StateMust() *azurermSpringCloudElasticApplicationPerformanceMonitoringState {
	if asceapm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asceapm.Type(), asceapm.LocalName()))
	}
	return asceapm.state
}

// Args contains the configurations for azurerm_spring_cloud_elastic_application_performance_monitoring.
type Args struct {
	// ApplicationPackages: list of string, required
	ApplicationPackages terra.ListValue[terra.StringValue] `hcl:"application_packages,attr" validate:"required"`
	// GloballyEnabled: bool, optional
	GloballyEnabled terra.BoolValue `hcl:"globally_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServerUrl: string, required
	ServerUrl terra.StringValue `hcl:"server_url,attr" validate:"required"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// SpringCloudServiceId: string, required
	SpringCloudServiceId terra.StringValue `hcl:"spring_cloud_service_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes struct {
	ref terra.Reference
}

// ApplicationPackages returns a reference to field application_packages of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) ApplicationPackages() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asceapm.ref.Append("application_packages"))
}

// GloballyEnabled returns a reference to field globally_enabled of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) GloballyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asceapm.ref.Append("globally_enabled"))
}

// Id returns a reference to field id of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asceapm.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asceapm.ref.Append("name"))
}

// ServerUrl returns a reference to field server_url of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) ServerUrl() terra.StringValue {
	return terra.ReferenceAsString(asceapm.ref.Append("server_url"))
}

// ServiceName returns a reference to field service_name of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(asceapm.ref.Append("service_name"))
}

// SpringCloudServiceId returns a reference to field spring_cloud_service_id of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) SpringCloudServiceId() terra.StringValue {
	return terra.ReferenceAsString(asceapm.ref.Append("spring_cloud_service_id"))
}

func (asceapm azurermSpringCloudElasticApplicationPerformanceMonitoringAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asceapm.ref.Append("timeouts"))
}

type azurermSpringCloudElasticApplicationPerformanceMonitoringState struct {
	ApplicationPackages  []string       `json:"application_packages"`
	GloballyEnabled      bool           `json:"globally_enabled"`
	Id                   string         `json:"id"`
	Name                 string         `json:"name"`
	ServerUrl            string         `json:"server_url"`
	ServiceName          string         `json:"service_name"`
	SpringCloudServiceId string         `json:"spring_cloud_service_id"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
