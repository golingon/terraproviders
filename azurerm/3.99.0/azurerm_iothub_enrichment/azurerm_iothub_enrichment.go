// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_iothub_enrichment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_iothub_enrichment.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermIothubEnrichmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aie *Resource) Type() string {
	return "azurerm_iothub_enrichment"
}

// LocalName returns the local name for [Resource].
func (aie *Resource) LocalName() string {
	return aie.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aie *Resource) Configuration() interface{} {
	return aie.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aie *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aie)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aie *Resource) Dependencies() terra.Dependencies {
	return aie.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aie *Resource) LifecycleManagement() *terra.Lifecycle {
	return aie.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aie *Resource) Attributes() azurermIothubEnrichmentAttributes {
	return azurermIothubEnrichmentAttributes{ref: terra.ReferenceResource(aie)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aie *Resource) ImportState(state io.Reader) error {
	aie.state = &azurermIothubEnrichmentState{}
	if err := json.NewDecoder(state).Decode(aie.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aie.Type(), aie.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aie *Resource) State() (*azurermIothubEnrichmentState, bool) {
	return aie.state, aie.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aie *Resource) StateMust() *azurermIothubEnrichmentState {
	if aie.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aie.Type(), aie.LocalName()))
	}
	return aie.state
}

// Args contains the configurations for azurerm_iothub_enrichment.
type Args struct {
	// EndpointNames: list of string, required
	EndpointNames terra.ListValue[terra.StringValue] `hcl:"endpoint_names,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubName: string, required
	IothubName terra.StringValue `hcl:"iothub_name,attr" validate:"required"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermIothubEnrichmentAttributes struct {
	ref terra.Reference
}

// EndpointNames returns a reference to field endpoint_names of azurerm_iothub_enrichment.
func (aie azurermIothubEnrichmentAttributes) EndpointNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aie.ref.Append("endpoint_names"))
}

// Id returns a reference to field id of azurerm_iothub_enrichment.
func (aie azurermIothubEnrichmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aie.ref.Append("id"))
}

// IothubName returns a reference to field iothub_name of azurerm_iothub_enrichment.
func (aie azurermIothubEnrichmentAttributes) IothubName() terra.StringValue {
	return terra.ReferenceAsString(aie.ref.Append("iothub_name"))
}

// Key returns a reference to field key of azurerm_iothub_enrichment.
func (aie azurermIothubEnrichmentAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(aie.ref.Append("key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_iothub_enrichment.
func (aie azurermIothubEnrichmentAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aie.ref.Append("resource_group_name"))
}

// Value returns a reference to field value of azurerm_iothub_enrichment.
func (aie azurermIothubEnrichmentAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aie.ref.Append("value"))
}

func (aie azurermIothubEnrichmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aie.ref.Append("timeouts"))
}

type azurermIothubEnrichmentState struct {
	EndpointNames     []string       `json:"endpoint_names"`
	Id                string         `json:"id"`
	IothubName        string         `json:"iothub_name"`
	Key               string         `json:"key"`
	ResourceGroupName string         `json:"resource_group_name"`
	Value             string         `json:"value"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
