// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_logz_sub_account_tag_rule

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_logz_sub_account_tag_rule.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermLogzSubAccountTagRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (alsatr *Resource) Type() string {
	return "azurerm_logz_sub_account_tag_rule"
}

// LocalName returns the local name for [Resource].
func (alsatr *Resource) LocalName() string {
	return alsatr.Name
}

// Configuration returns the configuration (args) for [Resource].
func (alsatr *Resource) Configuration() interface{} {
	return alsatr.Args
}

// DependOn is used for other resources to depend on [Resource].
func (alsatr *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(alsatr)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (alsatr *Resource) Dependencies() terra.Dependencies {
	return alsatr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (alsatr *Resource) LifecycleManagement() *terra.Lifecycle {
	return alsatr.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (alsatr *Resource) Attributes() azurermLogzSubAccountTagRuleAttributes {
	return azurermLogzSubAccountTagRuleAttributes{ref: terra.ReferenceResource(alsatr)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (alsatr *Resource) ImportState(state io.Reader) error {
	alsatr.state = &azurermLogzSubAccountTagRuleState{}
	if err := json.NewDecoder(state).Decode(alsatr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", alsatr.Type(), alsatr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (alsatr *Resource) State() (*azurermLogzSubAccountTagRuleState, bool) {
	return alsatr.state, alsatr.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (alsatr *Resource) StateMust() *azurermLogzSubAccountTagRuleState {
	if alsatr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", alsatr.Type(), alsatr.LocalName()))
	}
	return alsatr.state
}

// Args contains the configurations for azurerm_logz_sub_account_tag_rule.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogzSubAccountId: string, required
	LogzSubAccountId terra.StringValue `hcl:"logz_sub_account_id,attr" validate:"required"`
	// SendAadLogs: bool, optional
	SendAadLogs terra.BoolValue `hcl:"send_aad_logs,attr"`
	// SendActivityLogs: bool, optional
	SendActivityLogs terra.BoolValue `hcl:"send_activity_logs,attr"`
	// SendSubscriptionLogs: bool, optional
	SendSubscriptionLogs terra.BoolValue `hcl:"send_subscription_logs,attr"`
	// TagFilter: min=0,max=10
	TagFilter []TagFilter `hcl:"tag_filter,block" validate:"min=0,max=10"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermLogzSubAccountTagRuleAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_logz_sub_account_tag_rule.
func (alsatr azurermLogzSubAccountTagRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alsatr.ref.Append("id"))
}

// LogzSubAccountId returns a reference to field logz_sub_account_id of azurerm_logz_sub_account_tag_rule.
func (alsatr azurermLogzSubAccountTagRuleAttributes) LogzSubAccountId() terra.StringValue {
	return terra.ReferenceAsString(alsatr.ref.Append("logz_sub_account_id"))
}

// SendAadLogs returns a reference to field send_aad_logs of azurerm_logz_sub_account_tag_rule.
func (alsatr azurermLogzSubAccountTagRuleAttributes) SendAadLogs() terra.BoolValue {
	return terra.ReferenceAsBool(alsatr.ref.Append("send_aad_logs"))
}

// SendActivityLogs returns a reference to field send_activity_logs of azurerm_logz_sub_account_tag_rule.
func (alsatr azurermLogzSubAccountTagRuleAttributes) SendActivityLogs() terra.BoolValue {
	return terra.ReferenceAsBool(alsatr.ref.Append("send_activity_logs"))
}

// SendSubscriptionLogs returns a reference to field send_subscription_logs of azurerm_logz_sub_account_tag_rule.
func (alsatr azurermLogzSubAccountTagRuleAttributes) SendSubscriptionLogs() terra.BoolValue {
	return terra.ReferenceAsBool(alsatr.ref.Append("send_subscription_logs"))
}

func (alsatr azurermLogzSubAccountTagRuleAttributes) TagFilter() terra.ListValue[TagFilterAttributes] {
	return terra.ReferenceAsList[TagFilterAttributes](alsatr.ref.Append("tag_filter"))
}

func (alsatr azurermLogzSubAccountTagRuleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](alsatr.ref.Append("timeouts"))
}

type azurermLogzSubAccountTagRuleState struct {
	Id                   string           `json:"id"`
	LogzSubAccountId     string           `json:"logz_sub_account_id"`
	SendAadLogs          bool             `json:"send_aad_logs"`
	SendActivityLogs     bool             `json:"send_activity_logs"`
	SendSubscriptionLogs bool             `json:"send_subscription_logs"`
	TagFilter            []TagFilterState `json:"tag_filter"`
	Timeouts             *TimeoutsState   `json:"timeouts"`
}
