// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_kusto_iothub_data_connection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_kusto_iothub_data_connection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermKustoIothubDataConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (akidc *Resource) Type() string {
	return "azurerm_kusto_iothub_data_connection"
}

// LocalName returns the local name for [Resource].
func (akidc *Resource) LocalName() string {
	return akidc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (akidc *Resource) Configuration() interface{} {
	return akidc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (akidc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(akidc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (akidc *Resource) Dependencies() terra.Dependencies {
	return akidc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (akidc *Resource) LifecycleManagement() *terra.Lifecycle {
	return akidc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (akidc *Resource) Attributes() azurermKustoIothubDataConnectionAttributes {
	return azurermKustoIothubDataConnectionAttributes{ref: terra.ReferenceResource(akidc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (akidc *Resource) ImportState(state io.Reader) error {
	akidc.state = &azurermKustoIothubDataConnectionState{}
	if err := json.NewDecoder(state).Decode(akidc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", akidc.Type(), akidc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (akidc *Resource) State() (*azurermKustoIothubDataConnectionState, bool) {
	return akidc.state, akidc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (akidc *Resource) StateMust() *azurermKustoIothubDataConnectionState {
	if akidc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", akidc.Type(), akidc.LocalName()))
	}
	return akidc.state
}

// Args contains the configurations for azurerm_kusto_iothub_data_connection.
type Args struct {
	// ClusterName: string, required
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// ConsumerGroup: string, required
	ConsumerGroup terra.StringValue `hcl:"consumer_group,attr" validate:"required"`
	// DataFormat: string, optional
	DataFormat terra.StringValue `hcl:"data_format,attr"`
	// DatabaseName: string, required
	DatabaseName terra.StringValue `hcl:"database_name,attr" validate:"required"`
	// DatabaseRoutingType: string, optional
	DatabaseRoutingType terra.StringValue `hcl:"database_routing_type,attr"`
	// EventSystemProperties: set of string, optional
	EventSystemProperties terra.SetValue[terra.StringValue] `hcl:"event_system_properties,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubId: string, required
	IothubId terra.StringValue `hcl:"iothub_id,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MappingRuleName: string, optional
	MappingRuleName terra.StringValue `hcl:"mapping_rule_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SharedAccessPolicyName: string, required
	SharedAccessPolicyName terra.StringValue `hcl:"shared_access_policy_name,attr" validate:"required"`
	// TableName: string, optional
	TableName terra.StringValue `hcl:"table_name,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermKustoIothubDataConnectionAttributes struct {
	ref terra.Reference
}

// ClusterName returns a reference to field cluster_name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("cluster_name"))
}

// ConsumerGroup returns a reference to field consumer_group of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) ConsumerGroup() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("consumer_group"))
}

// DataFormat returns a reference to field data_format of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) DataFormat() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("data_format"))
}

// DatabaseName returns a reference to field database_name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("database_name"))
}

// DatabaseRoutingType returns a reference to field database_routing_type of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) DatabaseRoutingType() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("database_routing_type"))
}

// EventSystemProperties returns a reference to field event_system_properties of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) EventSystemProperties() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](akidc.ref.Append("event_system_properties"))
}

// Id returns a reference to field id of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("id"))
}

// IothubId returns a reference to field iothub_id of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) IothubId() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("iothub_id"))
}

// Location returns a reference to field location of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("location"))
}

// MappingRuleName returns a reference to field mapping_rule_name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) MappingRuleName() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("mapping_rule_name"))
}

// Name returns a reference to field name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("resource_group_name"))
}

// SharedAccessPolicyName returns a reference to field shared_access_policy_name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) SharedAccessPolicyName() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("shared_access_policy_name"))
}

// TableName returns a reference to field table_name of azurerm_kusto_iothub_data_connection.
func (akidc azurermKustoIothubDataConnectionAttributes) TableName() terra.StringValue {
	return terra.ReferenceAsString(akidc.ref.Append("table_name"))
}

func (akidc azurermKustoIothubDataConnectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](akidc.ref.Append("timeouts"))
}

type azurermKustoIothubDataConnectionState struct {
	ClusterName            string         `json:"cluster_name"`
	ConsumerGroup          string         `json:"consumer_group"`
	DataFormat             string         `json:"data_format"`
	DatabaseName           string         `json:"database_name"`
	DatabaseRoutingType    string         `json:"database_routing_type"`
	EventSystemProperties  []string       `json:"event_system_properties"`
	Id                     string         `json:"id"`
	IothubId               string         `json:"iothub_id"`
	Location               string         `json:"location"`
	MappingRuleName        string         `json:"mapping_rule_name"`
	Name                   string         `json:"name"`
	ResourceGroupName      string         `json:"resource_group_name"`
	SharedAccessPolicyName string         `json:"shared_access_policy_name"`
	TableName              string         `json:"table_name"`
	Timeouts               *TimeoutsState `json:"timeouts"`
}
