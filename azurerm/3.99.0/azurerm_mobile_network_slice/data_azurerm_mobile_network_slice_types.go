// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_mobile_network_slice

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataSingleNetworkSliceSelectionAssistanceInformationAttributes struct {
	ref terra.Reference
}

func (snssai DataSingleNetworkSliceSelectionAssistanceInformationAttributes) InternalRef() (terra.Reference, error) {
	return snssai.ref, nil
}

func (snssai DataSingleNetworkSliceSelectionAssistanceInformationAttributes) InternalWithRef(ref terra.Reference) DataSingleNetworkSliceSelectionAssistanceInformationAttributes {
	return DataSingleNetworkSliceSelectionAssistanceInformationAttributes{ref: ref}
}

func (snssai DataSingleNetworkSliceSelectionAssistanceInformationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return snssai.ref.InternalTokens()
}

func (snssai DataSingleNetworkSliceSelectionAssistanceInformationAttributes) SliceDifferentiator() terra.StringValue {
	return terra.ReferenceAsString(snssai.ref.Append("slice_differentiator"))
}

func (snssai DataSingleNetworkSliceSelectionAssistanceInformationAttributes) SliceServiceType() terra.NumberValue {
	return terra.ReferenceAsNumber(snssai.ref.Append("slice_service_type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataSingleNetworkSliceSelectionAssistanceInformationState struct {
	SliceDifferentiator string  `json:"slice_differentiator"`
	SliceServiceType    float64 `json:"slice_service_type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
