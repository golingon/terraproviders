// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_orchestrated_virtual_machine_scale_set

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataIdentityAttributes struct {
	ref terra.Reference
}

func (i DataIdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIdentityAttributes) InternalWithRef(ref terra.Reference) DataIdentityAttributes {
	return DataIdentityAttributes{ref: ref}
}

func (i DataIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i DataIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type DataNetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (ni DataNetworkInterfaceAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni DataNetworkInterfaceAttributes) InternalWithRef(ref terra.Reference) DataNetworkInterfaceAttributes {
	return DataNetworkInterfaceAttributes{ref: ref}
}

func (ni DataNetworkInterfaceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ni.ref.InternalTokens()
}

func (ni DataNetworkInterfaceAttributes) AcceleratedNetworkingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ni.ref.Append("accelerated_networking_enabled"))
}

func (ni DataNetworkInterfaceAttributes) DnsServers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ni.ref.Append("dns_servers"))
}

func (ni DataNetworkInterfaceAttributes) IpForwardingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ni.ref.Append("ip_forwarding_enabled"))
}

func (ni DataNetworkInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("name"))
}

func (ni DataNetworkInterfaceAttributes) NetworkSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("network_security_group_id"))
}

func (ni DataNetworkInterfaceAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(ni.ref.Append("primary"))
}

func (ni DataNetworkInterfaceAttributes) IpConfiguration() terra.ListValue[DataNetworkInterfaceIpConfigurationAttributes] {
	return terra.ReferenceAsList[DataNetworkInterfaceIpConfigurationAttributes](ni.ref.Append("ip_configuration"))
}

type DataNetworkInterfaceIpConfigurationAttributes struct {
	ref terra.Reference
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) InternalWithRef(ref terra.Reference) DataNetworkInterfaceIpConfigurationAttributes {
	return DataNetworkInterfaceIpConfigurationAttributes{ref: ref}
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) ApplicationGatewayBackendAddressPoolIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ic.ref.Append("application_gateway_backend_address_pool_ids"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) ApplicationSecurityGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ic.ref.Append("application_security_group_ids"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) LoadBalancerBackendAddressPoolIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ic.ref.Append("load_balancer_backend_address_pool_ids"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) LoadBalancerInboundNatRulesIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ic.ref.Append("load_balancer_inbound_nat_rules_ids"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("name"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("primary"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("subnet_id"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("version"))
}

func (ic DataNetworkInterfaceIpConfigurationAttributes) PublicIpAddress() terra.ListValue[DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes] {
	return terra.ReferenceAsList[DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes](ic.ref.Append("public_ip_address"))
}

type DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes struct {
	ref terra.Reference
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) InternalRef() (terra.Reference, error) {
	return pia.ref, nil
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) InternalWithRef(ref terra.Reference) DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes {
	return DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes{ref: ref}
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pia.ref.InternalTokens()
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) DomainNameLabel() terra.StringValue {
	return terra.ReferenceAsString(pia.ref.Append("domain_name_label"))
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) IdleTimeoutInMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(pia.ref.Append("idle_timeout_in_minutes"))
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pia.ref.Append("name"))
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) PublicIpPrefixId() terra.StringValue {
	return terra.ReferenceAsString(pia.ref.Append("public_ip_prefix_id"))
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(pia.ref.Append("version"))
}

func (pia DataNetworkInterfaceIpConfigurationPublicIpAddressAttributes) IpTag() terra.ListValue[DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes] {
	return terra.ReferenceAsList[DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes](pia.ref.Append("ip_tag"))
}

type DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes struct {
	ref terra.Reference
}

func (it DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes) InternalWithRef(ref terra.Reference) DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes {
	return DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes{ref: ref}
}

func (it DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("tag"))
}

func (it DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("type"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataIdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	Type        string   `json:"type"`
}

type DataNetworkInterfaceState struct {
	AcceleratedNetworkingEnabled bool                                       `json:"accelerated_networking_enabled"`
	DnsServers                   []string                                   `json:"dns_servers"`
	IpForwardingEnabled          bool                                       `json:"ip_forwarding_enabled"`
	Name                         string                                     `json:"name"`
	NetworkSecurityGroupId       string                                     `json:"network_security_group_id"`
	Primary                      bool                                       `json:"primary"`
	IpConfiguration              []DataNetworkInterfaceIpConfigurationState `json:"ip_configuration"`
}

type DataNetworkInterfaceIpConfigurationState struct {
	ApplicationGatewayBackendAddressPoolIds []string                                                  `json:"application_gateway_backend_address_pool_ids"`
	ApplicationSecurityGroupIds             []string                                                  `json:"application_security_group_ids"`
	LoadBalancerBackendAddressPoolIds       []string                                                  `json:"load_balancer_backend_address_pool_ids"`
	LoadBalancerInboundNatRulesIds          []string                                                  `json:"load_balancer_inbound_nat_rules_ids"`
	Name                                    string                                                    `json:"name"`
	Primary                                 bool                                                      `json:"primary"`
	SubnetId                                string                                                    `json:"subnet_id"`
	Version                                 string                                                    `json:"version"`
	PublicIpAddress                         []DataNetworkInterfaceIpConfigurationPublicIpAddressState `json:"public_ip_address"`
}

type DataNetworkInterfaceIpConfigurationPublicIpAddressState struct {
	DomainNameLabel      string                                                         `json:"domain_name_label"`
	IdleTimeoutInMinutes float64                                                        `json:"idle_timeout_in_minutes"`
	Name                 string                                                         `json:"name"`
	PublicIpPrefixId     string                                                         `json:"public_ip_prefix_id"`
	Version              string                                                         `json:"version"`
	IpTag                []DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagState `json:"ip_tag"`
}

type DataNetworkInterfaceIpConfigurationPublicIpAddressIpTagState struct {
	Tag  string `json:"tag"`
	Type string `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
