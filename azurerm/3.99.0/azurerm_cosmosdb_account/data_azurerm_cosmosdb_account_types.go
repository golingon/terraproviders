// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cosmosdb_account

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataCapabilitiesAttributes struct {
	ref terra.Reference
}

func (c DataCapabilitiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataCapabilitiesAttributes) InternalWithRef(ref terra.Reference) DataCapabilitiesAttributes {
	return DataCapabilitiesAttributes{ref: ref}
}

func (c DataCapabilitiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataCapabilitiesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type DataConsistencyPolicyAttributes struct {
	ref terra.Reference
}

func (cp DataConsistencyPolicyAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp DataConsistencyPolicyAttributes) InternalWithRef(ref terra.Reference) DataConsistencyPolicyAttributes {
	return DataConsistencyPolicyAttributes{ref: ref}
}

func (cp DataConsistencyPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp DataConsistencyPolicyAttributes) ConsistencyLevel() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("consistency_level"))
}

func (cp DataConsistencyPolicyAttributes) MaxIntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(cp.ref.Append("max_interval_in_seconds"))
}

func (cp DataConsistencyPolicyAttributes) MaxStalenessPrefix() terra.NumberValue {
	return terra.ReferenceAsNumber(cp.ref.Append("max_staleness_prefix"))
}

type DataGeoLocationAttributes struct {
	ref terra.Reference
}

func (gl DataGeoLocationAttributes) InternalRef() (terra.Reference, error) {
	return gl.ref, nil
}

func (gl DataGeoLocationAttributes) InternalWithRef(ref terra.Reference) DataGeoLocationAttributes {
	return DataGeoLocationAttributes{ref: ref}
}

func (gl DataGeoLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gl.ref.InternalTokens()
}

func (gl DataGeoLocationAttributes) FailoverPriority() terra.NumberValue {
	return terra.ReferenceAsNumber(gl.ref.Append("failover_priority"))
}

func (gl DataGeoLocationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gl.ref.Append("id"))
}

func (gl DataGeoLocationAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gl.ref.Append("location"))
}

type DataVirtualNetworkRuleAttributes struct {
	ref terra.Reference
}

func (vnr DataVirtualNetworkRuleAttributes) InternalRef() (terra.Reference, error) {
	return vnr.ref, nil
}

func (vnr DataVirtualNetworkRuleAttributes) InternalWithRef(ref terra.Reference) DataVirtualNetworkRuleAttributes {
	return DataVirtualNetworkRuleAttributes{ref: ref}
}

func (vnr DataVirtualNetworkRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vnr.ref.InternalTokens()
}

func (vnr DataVirtualNetworkRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vnr.ref.Append("id"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataCapabilitiesState struct {
	Name string `json:"name"`
}

type DataConsistencyPolicyState struct {
	ConsistencyLevel     string  `json:"consistency_level"`
	MaxIntervalInSeconds float64 `json:"max_interval_in_seconds"`
	MaxStalenessPrefix   float64 `json:"max_staleness_prefix"`
}

type DataGeoLocationState struct {
	FailoverPriority float64 `json:"failover_priority"`
	Id               string  `json:"id"`
	Location         string  `json:"location"`
}

type DataVirtualNetworkRuleState struct {
	Id string `json:"id"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
