// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_role_definition

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azurerm_role_definition.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ard *DataSource) DataSource() string {
	return "azurerm_role_definition"
}

// LocalName returns the local name for [DataSource].
func (ard *DataSource) LocalName() string {
	return ard.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ard *DataSource) Configuration() interface{} {
	return ard.Args
}

// Attributes returns the attributes for [DataSource].
func (ard *DataSource) Attributes() dataAzurermRoleDefinitionAttributes {
	return dataAzurermRoleDefinitionAttributes{ref: terra.ReferenceDataSource(ard)}
}

// DataArgs contains the configurations for azurerm_role_definition.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// RoleDefinitionId: string, optional
	RoleDefinitionId terra.StringValue `hcl:"role_definition_id,attr"`
	// Scope: string, optional
	Scope terra.StringValue `hcl:"scope,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzurermRoleDefinitionAttributes struct {
	ref terra.Reference
}

// AssignableScopes returns a reference to field assignable_scopes of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) AssignableScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ard.ref.Append("assignable_scopes"))
}

// Description returns a reference to field description of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("name"))
}

// RoleDefinitionId returns a reference to field role_definition_id of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) RoleDefinitionId() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("role_definition_id"))
}

// Scope returns a reference to field scope of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("scope"))
}

// Type returns a reference to field type of azurerm_role_definition.
func (ard dataAzurermRoleDefinitionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ard.ref.Append("type"))
}

func (ard dataAzurermRoleDefinitionAttributes) Permissions() terra.ListValue[DataPermissionsAttributes] {
	return terra.ReferenceAsList[DataPermissionsAttributes](ard.ref.Append("permissions"))
}

func (ard dataAzurermRoleDefinitionAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ard.ref.Append("timeouts"))
}
