// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_synapse_sql_pool_vulnerability_assessment_baseline

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_synapse_sql_pool_vulnerability_assessment_baseline.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermSynapseSqlPoolVulnerabilityAssessmentBaselineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asspvab *Resource) Type() string {
	return "azurerm_synapse_sql_pool_vulnerability_assessment_baseline"
}

// LocalName returns the local name for [Resource].
func (asspvab *Resource) LocalName() string {
	return asspvab.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asspvab *Resource) Configuration() interface{} {
	return asspvab.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asspvab *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asspvab)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asspvab *Resource) Dependencies() terra.Dependencies {
	return asspvab.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asspvab *Resource) LifecycleManagement() *terra.Lifecycle {
	return asspvab.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asspvab *Resource) Attributes() azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes {
	return azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes{ref: terra.ReferenceResource(asspvab)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asspvab *Resource) ImportState(state io.Reader) error {
	asspvab.state = &azurermSynapseSqlPoolVulnerabilityAssessmentBaselineState{}
	if err := json.NewDecoder(state).Decode(asspvab.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asspvab.Type(), asspvab.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asspvab *Resource) State() (*azurermSynapseSqlPoolVulnerabilityAssessmentBaselineState, bool) {
	return asspvab.state, asspvab.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asspvab *Resource) StateMust() *azurermSynapseSqlPoolVulnerabilityAssessmentBaselineState {
	if asspvab.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asspvab.Type(), asspvab.LocalName()))
	}
	return asspvab.state
}

// Args contains the configurations for azurerm_synapse_sql_pool_vulnerability_assessment_baseline.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RuleName: string, required
	RuleName terra.StringValue `hcl:"rule_name,attr" validate:"required"`
	// SqlPoolVulnerabilityAssessmentId: string, required
	SqlPoolVulnerabilityAssessmentId terra.StringValue `hcl:"sql_pool_vulnerability_assessment_id,attr" validate:"required"`
	// Baseline: min=0
	Baseline []Baseline `hcl:"baseline,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_synapse_sql_pool_vulnerability_assessment_baseline.
func (asspvab azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asspvab.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_synapse_sql_pool_vulnerability_assessment_baseline.
func (asspvab azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asspvab.ref.Append("name"))
}

// RuleName returns a reference to field rule_name of azurerm_synapse_sql_pool_vulnerability_assessment_baseline.
func (asspvab azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes) RuleName() terra.StringValue {
	return terra.ReferenceAsString(asspvab.ref.Append("rule_name"))
}

// SqlPoolVulnerabilityAssessmentId returns a reference to field sql_pool_vulnerability_assessment_id of azurerm_synapse_sql_pool_vulnerability_assessment_baseline.
func (asspvab azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes) SqlPoolVulnerabilityAssessmentId() terra.StringValue {
	return terra.ReferenceAsString(asspvab.ref.Append("sql_pool_vulnerability_assessment_id"))
}

func (asspvab azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes) Baseline() terra.ListValue[BaselineAttributes] {
	return terra.ReferenceAsList[BaselineAttributes](asspvab.ref.Append("baseline"))
}

func (asspvab azurermSynapseSqlPoolVulnerabilityAssessmentBaselineAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](asspvab.ref.Append("timeouts"))
}

type azurermSynapseSqlPoolVulnerabilityAssessmentBaselineState struct {
	Id                               string          `json:"id"`
	Name                             string          `json:"name"`
	RuleName                         string          `json:"rule_name"`
	SqlPoolVulnerabilityAssessmentId string          `json:"sql_pool_vulnerability_assessment_id"`
	Baseline                         []BaselineState `json:"baseline"`
	Timeouts                         *TimeoutsState  `json:"timeouts"`
}
