// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cdn_endpoint

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DeliveryRule struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Order: number, required
	Order terra.NumberValue `hcl:"order,attr" validate:"required"`
	// DeliveryRuleCacheExpirationAction: optional
	CacheExpirationAction *DeliveryRuleCacheExpirationAction `hcl:"cache_expiration_action,block"`
	// DeliveryRuleCacheKeyQueryStringAction: optional
	CacheKeyQueryStringAction *DeliveryRuleCacheKeyQueryStringAction `hcl:"cache_key_query_string_action,block"`
	// DeliveryRuleCookiesCondition: min=0
	CookiesCondition []DeliveryRuleCookiesCondition `hcl:"cookies_condition,block" validate:"min=0"`
	// DeliveryRuleDeviceCondition: optional
	DeviceCondition *DeliveryRuleDeviceCondition `hcl:"device_condition,block"`
	// DeliveryRuleHttpVersionCondition: min=0
	HttpVersionCondition []DeliveryRuleHttpVersionCondition `hcl:"http_version_condition,block" validate:"min=0"`
	// DeliveryRuleModifyRequestHeaderAction: min=0
	ModifyRequestHeaderAction []DeliveryRuleModifyRequestHeaderAction `hcl:"modify_request_header_action,block" validate:"min=0"`
	// DeliveryRuleModifyResponseHeaderAction: min=0
	ModifyResponseHeaderAction []DeliveryRuleModifyResponseHeaderAction `hcl:"modify_response_header_action,block" validate:"min=0"`
	// DeliveryRulePostArgCondition: min=0
	PostArgCondition []DeliveryRulePostArgCondition `hcl:"post_arg_condition,block" validate:"min=0"`
	// DeliveryRuleQueryStringCondition: min=0
	QueryStringCondition []DeliveryRuleQueryStringCondition `hcl:"query_string_condition,block" validate:"min=0"`
	// DeliveryRuleRemoteAddressCondition: min=0
	RemoteAddressCondition []DeliveryRuleRemoteAddressCondition `hcl:"remote_address_condition,block" validate:"min=0"`
	// DeliveryRuleRequestBodyCondition: min=0
	RequestBodyCondition []DeliveryRuleRequestBodyCondition `hcl:"request_body_condition,block" validate:"min=0"`
	// DeliveryRuleRequestHeaderCondition: min=0
	RequestHeaderCondition []DeliveryRuleRequestHeaderCondition `hcl:"request_header_condition,block" validate:"min=0"`
	// DeliveryRuleRequestMethodCondition: optional
	RequestMethodCondition *DeliveryRuleRequestMethodCondition `hcl:"request_method_condition,block"`
	// DeliveryRuleRequestSchemeCondition: optional
	RequestSchemeCondition *DeliveryRuleRequestSchemeCondition `hcl:"request_scheme_condition,block"`
	// DeliveryRuleRequestUriCondition: min=0
	RequestUriCondition []DeliveryRuleRequestUriCondition `hcl:"request_uri_condition,block" validate:"min=0"`
	// DeliveryRuleUrlFileExtensionCondition: min=0
	UrlFileExtensionCondition []DeliveryRuleUrlFileExtensionCondition `hcl:"url_file_extension_condition,block" validate:"min=0"`
	// DeliveryRuleUrlFileNameCondition: min=0
	UrlFileNameCondition []DeliveryRuleUrlFileNameCondition `hcl:"url_file_name_condition,block" validate:"min=0"`
	// DeliveryRuleUrlPathCondition: min=0
	UrlPathCondition []DeliveryRuleUrlPathCondition `hcl:"url_path_condition,block" validate:"min=0"`
	// DeliveryRuleUrlRedirectAction: optional
	UrlRedirectAction *DeliveryRuleUrlRedirectAction `hcl:"url_redirect_action,block"`
	// DeliveryRuleUrlRewriteAction: optional
	UrlRewriteAction *DeliveryRuleUrlRewriteAction `hcl:"url_rewrite_action,block"`
}

type DeliveryRuleCacheExpirationAction struct {
	// Behavior: string, required
	Behavior terra.StringValue `hcl:"behavior,attr" validate:"required"`
	// Duration: string, optional
	Duration terra.StringValue `hcl:"duration,attr"`
}

type DeliveryRuleCacheKeyQueryStringAction struct {
	// Behavior: string, required
	Behavior terra.StringValue `hcl:"behavior,attr" validate:"required"`
	// Parameters: string, optional
	Parameters terra.StringValue `hcl:"parameters,attr"`
}

type DeliveryRuleCookiesCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Selector: string, required
	Selector terra.StringValue `hcl:"selector,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleDeviceCondition struct {
	// MatchValues: set of string, required
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr" validate:"required"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, optional
	Operator terra.StringValue `hcl:"operator,attr"`
}

type DeliveryRuleHttpVersionCondition struct {
	// MatchValues: set of string, required
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr" validate:"required"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, optional
	Operator terra.StringValue `hcl:"operator,attr"`
}

type DeliveryRuleModifyRequestHeaderAction struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type DeliveryRuleModifyResponseHeaderAction struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type DeliveryRulePostArgCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Selector: string, required
	Selector terra.StringValue `hcl:"selector,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleQueryStringCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleRemoteAddressCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
}

type DeliveryRuleRequestBodyCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleRequestHeaderCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Selector: string, required
	Selector terra.StringValue `hcl:"selector,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleRequestMethodCondition struct {
	// MatchValues: set of string, required
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr" validate:"required"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, optional
	Operator terra.StringValue `hcl:"operator,attr"`
}

type DeliveryRuleRequestSchemeCondition struct {
	// MatchValues: set of string, required
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr" validate:"required"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, optional
	Operator terra.StringValue `hcl:"operator,attr"`
}

type DeliveryRuleRequestUriCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleUrlFileExtensionCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleUrlFileNameCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleUrlPathCondition struct {
	// MatchValues: set of string, optional
	MatchValues terra.SetValue[terra.StringValue] `hcl:"match_values,attr"`
	// NegateCondition: bool, optional
	NegateCondition terra.BoolValue `hcl:"negate_condition,attr"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Transforms: list of string, optional
	Transforms terra.ListValue[terra.StringValue] `hcl:"transforms,attr"`
}

type DeliveryRuleUrlRedirectAction struct {
	// Fragment: string, optional
	Fragment terra.StringValue `hcl:"fragment,attr"`
	// Hostname: string, optional
	Hostname terra.StringValue `hcl:"hostname,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Protocol: string, optional
	Protocol terra.StringValue `hcl:"protocol,attr"`
	// QueryString: string, optional
	QueryString terra.StringValue `hcl:"query_string,attr"`
	// RedirectType: string, required
	RedirectType terra.StringValue `hcl:"redirect_type,attr" validate:"required"`
}

type DeliveryRuleUrlRewriteAction struct {
	// Destination: string, required
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// PreserveUnmatchedPath: bool, optional
	PreserveUnmatchedPath terra.BoolValue `hcl:"preserve_unmatched_path,attr"`
	// SourcePattern: string, required
	SourcePattern terra.StringValue `hcl:"source_pattern,attr" validate:"required"`
}

type GeoFilter struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// CountryCodes: list of string, required
	CountryCodes terra.ListValue[terra.StringValue] `hcl:"country_codes,attr" validate:"required"`
	// RelativePath: string, required
	RelativePath terra.StringValue `hcl:"relative_path,attr" validate:"required"`
}

type GlobalDeliveryRule struct {
	// GlobalDeliveryRuleCacheExpirationAction: optional
	CacheExpirationAction *GlobalDeliveryRuleCacheExpirationAction `hcl:"cache_expiration_action,block"`
	// GlobalDeliveryRuleCacheKeyQueryStringAction: optional
	CacheKeyQueryStringAction *GlobalDeliveryRuleCacheKeyQueryStringAction `hcl:"cache_key_query_string_action,block"`
	// GlobalDeliveryRuleModifyRequestHeaderAction: min=0
	ModifyRequestHeaderAction []GlobalDeliveryRuleModifyRequestHeaderAction `hcl:"modify_request_header_action,block" validate:"min=0"`
	// GlobalDeliveryRuleModifyResponseHeaderAction: min=0
	ModifyResponseHeaderAction []GlobalDeliveryRuleModifyResponseHeaderAction `hcl:"modify_response_header_action,block" validate:"min=0"`
	// GlobalDeliveryRuleUrlRedirectAction: optional
	UrlRedirectAction *GlobalDeliveryRuleUrlRedirectAction `hcl:"url_redirect_action,block"`
	// GlobalDeliveryRuleUrlRewriteAction: optional
	UrlRewriteAction *GlobalDeliveryRuleUrlRewriteAction `hcl:"url_rewrite_action,block"`
}

type GlobalDeliveryRuleCacheExpirationAction struct {
	// Behavior: string, required
	Behavior terra.StringValue `hcl:"behavior,attr" validate:"required"`
	// Duration: string, optional
	Duration terra.StringValue `hcl:"duration,attr"`
}

type GlobalDeliveryRuleCacheKeyQueryStringAction struct {
	// Behavior: string, required
	Behavior terra.StringValue `hcl:"behavior,attr" validate:"required"`
	// Parameters: string, optional
	Parameters terra.StringValue `hcl:"parameters,attr"`
}

type GlobalDeliveryRuleModifyRequestHeaderAction struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type GlobalDeliveryRuleModifyResponseHeaderAction struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type GlobalDeliveryRuleUrlRedirectAction struct {
	// Fragment: string, optional
	Fragment terra.StringValue `hcl:"fragment,attr"`
	// Hostname: string, optional
	Hostname terra.StringValue `hcl:"hostname,attr"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Protocol: string, optional
	Protocol terra.StringValue `hcl:"protocol,attr"`
	// QueryString: string, optional
	QueryString terra.StringValue `hcl:"query_string,attr"`
	// RedirectType: string, required
	RedirectType terra.StringValue `hcl:"redirect_type,attr" validate:"required"`
}

type GlobalDeliveryRuleUrlRewriteAction struct {
	// Destination: string, required
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// PreserveUnmatchedPath: bool, optional
	PreserveUnmatchedPath terra.BoolValue `hcl:"preserve_unmatched_path,attr"`
	// SourcePattern: string, required
	SourcePattern terra.StringValue `hcl:"source_pattern,attr" validate:"required"`
}

type Origin struct {
	// HostName: string, required
	HostName terra.StringValue `hcl:"host_name,attr" validate:"required"`
	// HttpPort: number, optional
	HttpPort terra.NumberValue `hcl:"http_port,attr"`
	// HttpsPort: number, optional
	HttpsPort terra.NumberValue `hcl:"https_port,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type DeliveryRuleAttributes struct {
	ref terra.Reference
}

func (dr DeliveryRuleAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr DeliveryRuleAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleAttributes {
	return DeliveryRuleAttributes{ref: ref}
}

func (dr DeliveryRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr DeliveryRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("name"))
}

func (dr DeliveryRuleAttributes) Order() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("order"))
}

func (dr DeliveryRuleAttributes) CacheExpirationAction() terra.ListValue[DeliveryRuleCacheExpirationActionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleCacheExpirationActionAttributes](dr.ref.Append("cache_expiration_action"))
}

func (dr DeliveryRuleAttributes) CacheKeyQueryStringAction() terra.ListValue[DeliveryRuleCacheKeyQueryStringActionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleCacheKeyQueryStringActionAttributes](dr.ref.Append("cache_key_query_string_action"))
}

func (dr DeliveryRuleAttributes) CookiesCondition() terra.ListValue[DeliveryRuleCookiesConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleCookiesConditionAttributes](dr.ref.Append("cookies_condition"))
}

func (dr DeliveryRuleAttributes) DeviceCondition() terra.ListValue[DeliveryRuleDeviceConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleDeviceConditionAttributes](dr.ref.Append("device_condition"))
}

func (dr DeliveryRuleAttributes) HttpVersionCondition() terra.ListValue[DeliveryRuleHttpVersionConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleHttpVersionConditionAttributes](dr.ref.Append("http_version_condition"))
}

func (dr DeliveryRuleAttributes) ModifyRequestHeaderAction() terra.ListValue[DeliveryRuleModifyRequestHeaderActionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleModifyRequestHeaderActionAttributes](dr.ref.Append("modify_request_header_action"))
}

func (dr DeliveryRuleAttributes) ModifyResponseHeaderAction() terra.ListValue[DeliveryRuleModifyResponseHeaderActionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleModifyResponseHeaderActionAttributes](dr.ref.Append("modify_response_header_action"))
}

func (dr DeliveryRuleAttributes) PostArgCondition() terra.ListValue[DeliveryRulePostArgConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRulePostArgConditionAttributes](dr.ref.Append("post_arg_condition"))
}

func (dr DeliveryRuleAttributes) QueryStringCondition() terra.ListValue[DeliveryRuleQueryStringConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleQueryStringConditionAttributes](dr.ref.Append("query_string_condition"))
}

func (dr DeliveryRuleAttributes) RemoteAddressCondition() terra.ListValue[DeliveryRuleRemoteAddressConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleRemoteAddressConditionAttributes](dr.ref.Append("remote_address_condition"))
}

func (dr DeliveryRuleAttributes) RequestBodyCondition() terra.ListValue[DeliveryRuleRequestBodyConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleRequestBodyConditionAttributes](dr.ref.Append("request_body_condition"))
}

func (dr DeliveryRuleAttributes) RequestHeaderCondition() terra.ListValue[DeliveryRuleRequestHeaderConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleRequestHeaderConditionAttributes](dr.ref.Append("request_header_condition"))
}

func (dr DeliveryRuleAttributes) RequestMethodCondition() terra.ListValue[DeliveryRuleRequestMethodConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleRequestMethodConditionAttributes](dr.ref.Append("request_method_condition"))
}

func (dr DeliveryRuleAttributes) RequestSchemeCondition() terra.ListValue[DeliveryRuleRequestSchemeConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleRequestSchemeConditionAttributes](dr.ref.Append("request_scheme_condition"))
}

func (dr DeliveryRuleAttributes) RequestUriCondition() terra.ListValue[DeliveryRuleRequestUriConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleRequestUriConditionAttributes](dr.ref.Append("request_uri_condition"))
}

func (dr DeliveryRuleAttributes) UrlFileExtensionCondition() terra.ListValue[DeliveryRuleUrlFileExtensionConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleUrlFileExtensionConditionAttributes](dr.ref.Append("url_file_extension_condition"))
}

func (dr DeliveryRuleAttributes) UrlFileNameCondition() terra.ListValue[DeliveryRuleUrlFileNameConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleUrlFileNameConditionAttributes](dr.ref.Append("url_file_name_condition"))
}

func (dr DeliveryRuleAttributes) UrlPathCondition() terra.ListValue[DeliveryRuleUrlPathConditionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleUrlPathConditionAttributes](dr.ref.Append("url_path_condition"))
}

func (dr DeliveryRuleAttributes) UrlRedirectAction() terra.ListValue[DeliveryRuleUrlRedirectActionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleUrlRedirectActionAttributes](dr.ref.Append("url_redirect_action"))
}

func (dr DeliveryRuleAttributes) UrlRewriteAction() terra.ListValue[DeliveryRuleUrlRewriteActionAttributes] {
	return terra.ReferenceAsList[DeliveryRuleUrlRewriteActionAttributes](dr.ref.Append("url_rewrite_action"))
}

type DeliveryRuleCacheExpirationActionAttributes struct {
	ref terra.Reference
}

func (cea DeliveryRuleCacheExpirationActionAttributes) InternalRef() (terra.Reference, error) {
	return cea.ref, nil
}

func (cea DeliveryRuleCacheExpirationActionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleCacheExpirationActionAttributes {
	return DeliveryRuleCacheExpirationActionAttributes{ref: ref}
}

func (cea DeliveryRuleCacheExpirationActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cea.ref.InternalTokens()
}

func (cea DeliveryRuleCacheExpirationActionAttributes) Behavior() terra.StringValue {
	return terra.ReferenceAsString(cea.ref.Append("behavior"))
}

func (cea DeliveryRuleCacheExpirationActionAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(cea.ref.Append("duration"))
}

type DeliveryRuleCacheKeyQueryStringActionAttributes struct {
	ref terra.Reference
}

func (ckqsa DeliveryRuleCacheKeyQueryStringActionAttributes) InternalRef() (terra.Reference, error) {
	return ckqsa.ref, nil
}

func (ckqsa DeliveryRuleCacheKeyQueryStringActionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleCacheKeyQueryStringActionAttributes {
	return DeliveryRuleCacheKeyQueryStringActionAttributes{ref: ref}
}

func (ckqsa DeliveryRuleCacheKeyQueryStringActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ckqsa.ref.InternalTokens()
}

func (ckqsa DeliveryRuleCacheKeyQueryStringActionAttributes) Behavior() terra.StringValue {
	return terra.ReferenceAsString(ckqsa.ref.Append("behavior"))
}

func (ckqsa DeliveryRuleCacheKeyQueryStringActionAttributes) Parameters() terra.StringValue {
	return terra.ReferenceAsString(ckqsa.ref.Append("parameters"))
}

type DeliveryRuleCookiesConditionAttributes struct {
	ref terra.Reference
}

func (cc DeliveryRuleCookiesConditionAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DeliveryRuleCookiesConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleCookiesConditionAttributes {
	return DeliveryRuleCookiesConditionAttributes{ref: ref}
}

func (cc DeliveryRuleCookiesConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DeliveryRuleCookiesConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("match_values"))
}

func (cc DeliveryRuleCookiesConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("negate_condition"))
}

func (cc DeliveryRuleCookiesConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("operator"))
}

func (cc DeliveryRuleCookiesConditionAttributes) Selector() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("selector"))
}

func (cc DeliveryRuleCookiesConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cc.ref.Append("transforms"))
}

type DeliveryRuleDeviceConditionAttributes struct {
	ref terra.Reference
}

func (dc DeliveryRuleDeviceConditionAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DeliveryRuleDeviceConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleDeviceConditionAttributes {
	return DeliveryRuleDeviceConditionAttributes{ref: ref}
}

func (dc DeliveryRuleDeviceConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DeliveryRuleDeviceConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dc.ref.Append("match_values"))
}

func (dc DeliveryRuleDeviceConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(dc.ref.Append("negate_condition"))
}

func (dc DeliveryRuleDeviceConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("operator"))
}

type DeliveryRuleHttpVersionConditionAttributes struct {
	ref terra.Reference
}

func (hvc DeliveryRuleHttpVersionConditionAttributes) InternalRef() (terra.Reference, error) {
	return hvc.ref, nil
}

func (hvc DeliveryRuleHttpVersionConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleHttpVersionConditionAttributes {
	return DeliveryRuleHttpVersionConditionAttributes{ref: ref}
}

func (hvc DeliveryRuleHttpVersionConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hvc.ref.InternalTokens()
}

func (hvc DeliveryRuleHttpVersionConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](hvc.ref.Append("match_values"))
}

func (hvc DeliveryRuleHttpVersionConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(hvc.ref.Append("negate_condition"))
}

func (hvc DeliveryRuleHttpVersionConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(hvc.ref.Append("operator"))
}

type DeliveryRuleModifyRequestHeaderActionAttributes struct {
	ref terra.Reference
}

func (mrha DeliveryRuleModifyRequestHeaderActionAttributes) InternalRef() (terra.Reference, error) {
	return mrha.ref, nil
}

func (mrha DeliveryRuleModifyRequestHeaderActionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleModifyRequestHeaderActionAttributes {
	return DeliveryRuleModifyRequestHeaderActionAttributes{ref: ref}
}

func (mrha DeliveryRuleModifyRequestHeaderActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrha.ref.InternalTokens()
}

func (mrha DeliveryRuleModifyRequestHeaderActionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("action"))
}

func (mrha DeliveryRuleModifyRequestHeaderActionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("name"))
}

func (mrha DeliveryRuleModifyRequestHeaderActionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("value"))
}

type DeliveryRuleModifyResponseHeaderActionAttributes struct {
	ref terra.Reference
}

func (mrha DeliveryRuleModifyResponseHeaderActionAttributes) InternalRef() (terra.Reference, error) {
	return mrha.ref, nil
}

func (mrha DeliveryRuleModifyResponseHeaderActionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleModifyResponseHeaderActionAttributes {
	return DeliveryRuleModifyResponseHeaderActionAttributes{ref: ref}
}

func (mrha DeliveryRuleModifyResponseHeaderActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrha.ref.InternalTokens()
}

func (mrha DeliveryRuleModifyResponseHeaderActionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("action"))
}

func (mrha DeliveryRuleModifyResponseHeaderActionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("name"))
}

func (mrha DeliveryRuleModifyResponseHeaderActionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("value"))
}

type DeliveryRulePostArgConditionAttributes struct {
	ref terra.Reference
}

func (pac DeliveryRulePostArgConditionAttributes) InternalRef() (terra.Reference, error) {
	return pac.ref, nil
}

func (pac DeliveryRulePostArgConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRulePostArgConditionAttributes {
	return DeliveryRulePostArgConditionAttributes{ref: ref}
}

func (pac DeliveryRulePostArgConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pac.ref.InternalTokens()
}

func (pac DeliveryRulePostArgConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](pac.ref.Append("match_values"))
}

func (pac DeliveryRulePostArgConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(pac.ref.Append("negate_condition"))
}

func (pac DeliveryRulePostArgConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(pac.ref.Append("operator"))
}

func (pac DeliveryRulePostArgConditionAttributes) Selector() terra.StringValue {
	return terra.ReferenceAsString(pac.ref.Append("selector"))
}

func (pac DeliveryRulePostArgConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pac.ref.Append("transforms"))
}

type DeliveryRuleQueryStringConditionAttributes struct {
	ref terra.Reference
}

func (qsc DeliveryRuleQueryStringConditionAttributes) InternalRef() (terra.Reference, error) {
	return qsc.ref, nil
}

func (qsc DeliveryRuleQueryStringConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleQueryStringConditionAttributes {
	return DeliveryRuleQueryStringConditionAttributes{ref: ref}
}

func (qsc DeliveryRuleQueryStringConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qsc.ref.InternalTokens()
}

func (qsc DeliveryRuleQueryStringConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qsc.ref.Append("match_values"))
}

func (qsc DeliveryRuleQueryStringConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(qsc.ref.Append("negate_condition"))
}

func (qsc DeliveryRuleQueryStringConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(qsc.ref.Append("operator"))
}

func (qsc DeliveryRuleQueryStringConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](qsc.ref.Append("transforms"))
}

type DeliveryRuleRemoteAddressConditionAttributes struct {
	ref terra.Reference
}

func (rac DeliveryRuleRemoteAddressConditionAttributes) InternalRef() (terra.Reference, error) {
	return rac.ref, nil
}

func (rac DeliveryRuleRemoteAddressConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleRemoteAddressConditionAttributes {
	return DeliveryRuleRemoteAddressConditionAttributes{ref: ref}
}

func (rac DeliveryRuleRemoteAddressConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rac.ref.InternalTokens()
}

func (rac DeliveryRuleRemoteAddressConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rac.ref.Append("match_values"))
}

func (rac DeliveryRuleRemoteAddressConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(rac.ref.Append("negate_condition"))
}

func (rac DeliveryRuleRemoteAddressConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rac.ref.Append("operator"))
}

type DeliveryRuleRequestBodyConditionAttributes struct {
	ref terra.Reference
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) InternalRef() (terra.Reference, error) {
	return rbc.ref, nil
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleRequestBodyConditionAttributes {
	return DeliveryRuleRequestBodyConditionAttributes{ref: ref}
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rbc.ref.InternalTokens()
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rbc.ref.Append("match_values"))
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(rbc.ref.Append("negate_condition"))
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rbc.ref.Append("operator"))
}

func (rbc DeliveryRuleRequestBodyConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](rbc.ref.Append("transforms"))
}

type DeliveryRuleRequestHeaderConditionAttributes struct {
	ref terra.Reference
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) InternalRef() (terra.Reference, error) {
	return rhc.ref, nil
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleRequestHeaderConditionAttributes {
	return DeliveryRuleRequestHeaderConditionAttributes{ref: ref}
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rhc.ref.InternalTokens()
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rhc.ref.Append("match_values"))
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(rhc.ref.Append("negate_condition"))
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rhc.ref.Append("operator"))
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) Selector() terra.StringValue {
	return terra.ReferenceAsString(rhc.ref.Append("selector"))
}

func (rhc DeliveryRuleRequestHeaderConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](rhc.ref.Append("transforms"))
}

type DeliveryRuleRequestMethodConditionAttributes struct {
	ref terra.Reference
}

func (rmc DeliveryRuleRequestMethodConditionAttributes) InternalRef() (terra.Reference, error) {
	return rmc.ref, nil
}

func (rmc DeliveryRuleRequestMethodConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleRequestMethodConditionAttributes {
	return DeliveryRuleRequestMethodConditionAttributes{ref: ref}
}

func (rmc DeliveryRuleRequestMethodConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rmc.ref.InternalTokens()
}

func (rmc DeliveryRuleRequestMethodConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rmc.ref.Append("match_values"))
}

func (rmc DeliveryRuleRequestMethodConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(rmc.ref.Append("negate_condition"))
}

func (rmc DeliveryRuleRequestMethodConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rmc.ref.Append("operator"))
}

type DeliveryRuleRequestSchemeConditionAttributes struct {
	ref terra.Reference
}

func (rsc DeliveryRuleRequestSchemeConditionAttributes) InternalRef() (terra.Reference, error) {
	return rsc.ref, nil
}

func (rsc DeliveryRuleRequestSchemeConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleRequestSchemeConditionAttributes {
	return DeliveryRuleRequestSchemeConditionAttributes{ref: ref}
}

func (rsc DeliveryRuleRequestSchemeConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsc.ref.InternalTokens()
}

func (rsc DeliveryRuleRequestSchemeConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rsc.ref.Append("match_values"))
}

func (rsc DeliveryRuleRequestSchemeConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(rsc.ref.Append("negate_condition"))
}

func (rsc DeliveryRuleRequestSchemeConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rsc.ref.Append("operator"))
}

type DeliveryRuleRequestUriConditionAttributes struct {
	ref terra.Reference
}

func (ruc DeliveryRuleRequestUriConditionAttributes) InternalRef() (terra.Reference, error) {
	return ruc.ref, nil
}

func (ruc DeliveryRuleRequestUriConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleRequestUriConditionAttributes {
	return DeliveryRuleRequestUriConditionAttributes{ref: ref}
}

func (ruc DeliveryRuleRequestUriConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ruc.ref.InternalTokens()
}

func (ruc DeliveryRuleRequestUriConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ruc.ref.Append("match_values"))
}

func (ruc DeliveryRuleRequestUriConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(ruc.ref.Append("negate_condition"))
}

func (ruc DeliveryRuleRequestUriConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(ruc.ref.Append("operator"))
}

func (ruc DeliveryRuleRequestUriConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ruc.ref.Append("transforms"))
}

type DeliveryRuleUrlFileExtensionConditionAttributes struct {
	ref terra.Reference
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) InternalRef() (terra.Reference, error) {
	return ufec.ref, nil
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleUrlFileExtensionConditionAttributes {
	return DeliveryRuleUrlFileExtensionConditionAttributes{ref: ref}
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ufec.ref.InternalTokens()
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ufec.ref.Append("match_values"))
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(ufec.ref.Append("negate_condition"))
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(ufec.ref.Append("operator"))
}

func (ufec DeliveryRuleUrlFileExtensionConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ufec.ref.Append("transforms"))
}

type DeliveryRuleUrlFileNameConditionAttributes struct {
	ref terra.Reference
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) InternalRef() (terra.Reference, error) {
	return ufnc.ref, nil
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleUrlFileNameConditionAttributes {
	return DeliveryRuleUrlFileNameConditionAttributes{ref: ref}
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ufnc.ref.InternalTokens()
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ufnc.ref.Append("match_values"))
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(ufnc.ref.Append("negate_condition"))
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(ufnc.ref.Append("operator"))
}

func (ufnc DeliveryRuleUrlFileNameConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ufnc.ref.Append("transforms"))
}

type DeliveryRuleUrlPathConditionAttributes struct {
	ref terra.Reference
}

func (upc DeliveryRuleUrlPathConditionAttributes) InternalRef() (terra.Reference, error) {
	return upc.ref, nil
}

func (upc DeliveryRuleUrlPathConditionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleUrlPathConditionAttributes {
	return DeliveryRuleUrlPathConditionAttributes{ref: ref}
}

func (upc DeliveryRuleUrlPathConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return upc.ref.InternalTokens()
}

func (upc DeliveryRuleUrlPathConditionAttributes) MatchValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](upc.ref.Append("match_values"))
}

func (upc DeliveryRuleUrlPathConditionAttributes) NegateCondition() terra.BoolValue {
	return terra.ReferenceAsBool(upc.ref.Append("negate_condition"))
}

func (upc DeliveryRuleUrlPathConditionAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(upc.ref.Append("operator"))
}

func (upc DeliveryRuleUrlPathConditionAttributes) Transforms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](upc.ref.Append("transforms"))
}

type DeliveryRuleUrlRedirectActionAttributes struct {
	ref terra.Reference
}

func (ura DeliveryRuleUrlRedirectActionAttributes) InternalRef() (terra.Reference, error) {
	return ura.ref, nil
}

func (ura DeliveryRuleUrlRedirectActionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleUrlRedirectActionAttributes {
	return DeliveryRuleUrlRedirectActionAttributes{ref: ref}
}

func (ura DeliveryRuleUrlRedirectActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ura.ref.InternalTokens()
}

func (ura DeliveryRuleUrlRedirectActionAttributes) Fragment() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("fragment"))
}

func (ura DeliveryRuleUrlRedirectActionAttributes) Hostname() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("hostname"))
}

func (ura DeliveryRuleUrlRedirectActionAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("path"))
}

func (ura DeliveryRuleUrlRedirectActionAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("protocol"))
}

func (ura DeliveryRuleUrlRedirectActionAttributes) QueryString() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("query_string"))
}

func (ura DeliveryRuleUrlRedirectActionAttributes) RedirectType() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("redirect_type"))
}

type DeliveryRuleUrlRewriteActionAttributes struct {
	ref terra.Reference
}

func (ura DeliveryRuleUrlRewriteActionAttributes) InternalRef() (terra.Reference, error) {
	return ura.ref, nil
}

func (ura DeliveryRuleUrlRewriteActionAttributes) InternalWithRef(ref terra.Reference) DeliveryRuleUrlRewriteActionAttributes {
	return DeliveryRuleUrlRewriteActionAttributes{ref: ref}
}

func (ura DeliveryRuleUrlRewriteActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ura.ref.InternalTokens()
}

func (ura DeliveryRuleUrlRewriteActionAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("destination"))
}

func (ura DeliveryRuleUrlRewriteActionAttributes) PreserveUnmatchedPath() terra.BoolValue {
	return terra.ReferenceAsBool(ura.ref.Append("preserve_unmatched_path"))
}

func (ura DeliveryRuleUrlRewriteActionAttributes) SourcePattern() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("source_pattern"))
}

type GeoFilterAttributes struct {
	ref terra.Reference
}

func (gf GeoFilterAttributes) InternalRef() (terra.Reference, error) {
	return gf.ref, nil
}

func (gf GeoFilterAttributes) InternalWithRef(ref terra.Reference) GeoFilterAttributes {
	return GeoFilterAttributes{ref: ref}
}

func (gf GeoFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gf.ref.InternalTokens()
}

func (gf GeoFilterAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(gf.ref.Append("action"))
}

func (gf GeoFilterAttributes) CountryCodes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gf.ref.Append("country_codes"))
}

func (gf GeoFilterAttributes) RelativePath() terra.StringValue {
	return terra.ReferenceAsString(gf.ref.Append("relative_path"))
}

type GlobalDeliveryRuleAttributes struct {
	ref terra.Reference
}

func (gdr GlobalDeliveryRuleAttributes) InternalRef() (terra.Reference, error) {
	return gdr.ref, nil
}

func (gdr GlobalDeliveryRuleAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleAttributes {
	return GlobalDeliveryRuleAttributes{ref: ref}
}

func (gdr GlobalDeliveryRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gdr.ref.InternalTokens()
}

func (gdr GlobalDeliveryRuleAttributes) CacheExpirationAction() terra.ListValue[GlobalDeliveryRuleCacheExpirationActionAttributes] {
	return terra.ReferenceAsList[GlobalDeliveryRuleCacheExpirationActionAttributes](gdr.ref.Append("cache_expiration_action"))
}

func (gdr GlobalDeliveryRuleAttributes) CacheKeyQueryStringAction() terra.ListValue[GlobalDeliveryRuleCacheKeyQueryStringActionAttributes] {
	return terra.ReferenceAsList[GlobalDeliveryRuleCacheKeyQueryStringActionAttributes](gdr.ref.Append("cache_key_query_string_action"))
}

func (gdr GlobalDeliveryRuleAttributes) ModifyRequestHeaderAction() terra.ListValue[GlobalDeliveryRuleModifyRequestHeaderActionAttributes] {
	return terra.ReferenceAsList[GlobalDeliveryRuleModifyRequestHeaderActionAttributes](gdr.ref.Append("modify_request_header_action"))
}

func (gdr GlobalDeliveryRuleAttributes) ModifyResponseHeaderAction() terra.ListValue[GlobalDeliveryRuleModifyResponseHeaderActionAttributes] {
	return terra.ReferenceAsList[GlobalDeliveryRuleModifyResponseHeaderActionAttributes](gdr.ref.Append("modify_response_header_action"))
}

func (gdr GlobalDeliveryRuleAttributes) UrlRedirectAction() terra.ListValue[GlobalDeliveryRuleUrlRedirectActionAttributes] {
	return terra.ReferenceAsList[GlobalDeliveryRuleUrlRedirectActionAttributes](gdr.ref.Append("url_redirect_action"))
}

func (gdr GlobalDeliveryRuleAttributes) UrlRewriteAction() terra.ListValue[GlobalDeliveryRuleUrlRewriteActionAttributes] {
	return terra.ReferenceAsList[GlobalDeliveryRuleUrlRewriteActionAttributes](gdr.ref.Append("url_rewrite_action"))
}

type GlobalDeliveryRuleCacheExpirationActionAttributes struct {
	ref terra.Reference
}

func (cea GlobalDeliveryRuleCacheExpirationActionAttributes) InternalRef() (terra.Reference, error) {
	return cea.ref, nil
}

func (cea GlobalDeliveryRuleCacheExpirationActionAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleCacheExpirationActionAttributes {
	return GlobalDeliveryRuleCacheExpirationActionAttributes{ref: ref}
}

func (cea GlobalDeliveryRuleCacheExpirationActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cea.ref.InternalTokens()
}

func (cea GlobalDeliveryRuleCacheExpirationActionAttributes) Behavior() terra.StringValue {
	return terra.ReferenceAsString(cea.ref.Append("behavior"))
}

func (cea GlobalDeliveryRuleCacheExpirationActionAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(cea.ref.Append("duration"))
}

type GlobalDeliveryRuleCacheKeyQueryStringActionAttributes struct {
	ref terra.Reference
}

func (ckqsa GlobalDeliveryRuleCacheKeyQueryStringActionAttributes) InternalRef() (terra.Reference, error) {
	return ckqsa.ref, nil
}

func (ckqsa GlobalDeliveryRuleCacheKeyQueryStringActionAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleCacheKeyQueryStringActionAttributes {
	return GlobalDeliveryRuleCacheKeyQueryStringActionAttributes{ref: ref}
}

func (ckqsa GlobalDeliveryRuleCacheKeyQueryStringActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ckqsa.ref.InternalTokens()
}

func (ckqsa GlobalDeliveryRuleCacheKeyQueryStringActionAttributes) Behavior() terra.StringValue {
	return terra.ReferenceAsString(ckqsa.ref.Append("behavior"))
}

func (ckqsa GlobalDeliveryRuleCacheKeyQueryStringActionAttributes) Parameters() terra.StringValue {
	return terra.ReferenceAsString(ckqsa.ref.Append("parameters"))
}

type GlobalDeliveryRuleModifyRequestHeaderActionAttributes struct {
	ref terra.Reference
}

func (mrha GlobalDeliveryRuleModifyRequestHeaderActionAttributes) InternalRef() (terra.Reference, error) {
	return mrha.ref, nil
}

func (mrha GlobalDeliveryRuleModifyRequestHeaderActionAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleModifyRequestHeaderActionAttributes {
	return GlobalDeliveryRuleModifyRequestHeaderActionAttributes{ref: ref}
}

func (mrha GlobalDeliveryRuleModifyRequestHeaderActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrha.ref.InternalTokens()
}

func (mrha GlobalDeliveryRuleModifyRequestHeaderActionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("action"))
}

func (mrha GlobalDeliveryRuleModifyRequestHeaderActionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("name"))
}

func (mrha GlobalDeliveryRuleModifyRequestHeaderActionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("value"))
}

type GlobalDeliveryRuleModifyResponseHeaderActionAttributes struct {
	ref terra.Reference
}

func (mrha GlobalDeliveryRuleModifyResponseHeaderActionAttributes) InternalRef() (terra.Reference, error) {
	return mrha.ref, nil
}

func (mrha GlobalDeliveryRuleModifyResponseHeaderActionAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleModifyResponseHeaderActionAttributes {
	return GlobalDeliveryRuleModifyResponseHeaderActionAttributes{ref: ref}
}

func (mrha GlobalDeliveryRuleModifyResponseHeaderActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrha.ref.InternalTokens()
}

func (mrha GlobalDeliveryRuleModifyResponseHeaderActionAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("action"))
}

func (mrha GlobalDeliveryRuleModifyResponseHeaderActionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("name"))
}

func (mrha GlobalDeliveryRuleModifyResponseHeaderActionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mrha.ref.Append("value"))
}

type GlobalDeliveryRuleUrlRedirectActionAttributes struct {
	ref terra.Reference
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) InternalRef() (terra.Reference, error) {
	return ura.ref, nil
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleUrlRedirectActionAttributes {
	return GlobalDeliveryRuleUrlRedirectActionAttributes{ref: ref}
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ura.ref.InternalTokens()
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) Fragment() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("fragment"))
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) Hostname() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("hostname"))
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("path"))
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("protocol"))
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) QueryString() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("query_string"))
}

func (ura GlobalDeliveryRuleUrlRedirectActionAttributes) RedirectType() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("redirect_type"))
}

type GlobalDeliveryRuleUrlRewriteActionAttributes struct {
	ref terra.Reference
}

func (ura GlobalDeliveryRuleUrlRewriteActionAttributes) InternalRef() (terra.Reference, error) {
	return ura.ref, nil
}

func (ura GlobalDeliveryRuleUrlRewriteActionAttributes) InternalWithRef(ref terra.Reference) GlobalDeliveryRuleUrlRewriteActionAttributes {
	return GlobalDeliveryRuleUrlRewriteActionAttributes{ref: ref}
}

func (ura GlobalDeliveryRuleUrlRewriteActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ura.ref.InternalTokens()
}

func (ura GlobalDeliveryRuleUrlRewriteActionAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("destination"))
}

func (ura GlobalDeliveryRuleUrlRewriteActionAttributes) PreserveUnmatchedPath() terra.BoolValue {
	return terra.ReferenceAsBool(ura.ref.Append("preserve_unmatched_path"))
}

func (ura GlobalDeliveryRuleUrlRewriteActionAttributes) SourcePattern() terra.StringValue {
	return terra.ReferenceAsString(ura.ref.Append("source_pattern"))
}

type OriginAttributes struct {
	ref terra.Reference
}

func (o OriginAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o OriginAttributes) InternalWithRef(ref terra.Reference) OriginAttributes {
	return OriginAttributes{ref: ref}
}

func (o OriginAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o OriginAttributes) HostName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("host_name"))
}

func (o OriginAttributes) HttpPort() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("http_port"))
}

func (o OriginAttributes) HttpsPort() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("https_port"))
}

func (o OriginAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DeliveryRuleState struct {
	Name                       string                                        `json:"name"`
	Order                      float64                                       `json:"order"`
	CacheExpirationAction      []DeliveryRuleCacheExpirationActionState      `json:"cache_expiration_action"`
	CacheKeyQueryStringAction  []DeliveryRuleCacheKeyQueryStringActionState  `json:"cache_key_query_string_action"`
	CookiesCondition           []DeliveryRuleCookiesConditionState           `json:"cookies_condition"`
	DeviceCondition            []DeliveryRuleDeviceConditionState            `json:"device_condition"`
	HttpVersionCondition       []DeliveryRuleHttpVersionConditionState       `json:"http_version_condition"`
	ModifyRequestHeaderAction  []DeliveryRuleModifyRequestHeaderActionState  `json:"modify_request_header_action"`
	ModifyResponseHeaderAction []DeliveryRuleModifyResponseHeaderActionState `json:"modify_response_header_action"`
	PostArgCondition           []DeliveryRulePostArgConditionState           `json:"post_arg_condition"`
	QueryStringCondition       []DeliveryRuleQueryStringConditionState       `json:"query_string_condition"`
	RemoteAddressCondition     []DeliveryRuleRemoteAddressConditionState     `json:"remote_address_condition"`
	RequestBodyCondition       []DeliveryRuleRequestBodyConditionState       `json:"request_body_condition"`
	RequestHeaderCondition     []DeliveryRuleRequestHeaderConditionState     `json:"request_header_condition"`
	RequestMethodCondition     []DeliveryRuleRequestMethodConditionState     `json:"request_method_condition"`
	RequestSchemeCondition     []DeliveryRuleRequestSchemeConditionState     `json:"request_scheme_condition"`
	RequestUriCondition        []DeliveryRuleRequestUriConditionState        `json:"request_uri_condition"`
	UrlFileExtensionCondition  []DeliveryRuleUrlFileExtensionConditionState  `json:"url_file_extension_condition"`
	UrlFileNameCondition       []DeliveryRuleUrlFileNameConditionState       `json:"url_file_name_condition"`
	UrlPathCondition           []DeliveryRuleUrlPathConditionState           `json:"url_path_condition"`
	UrlRedirectAction          []DeliveryRuleUrlRedirectActionState          `json:"url_redirect_action"`
	UrlRewriteAction           []DeliveryRuleUrlRewriteActionState           `json:"url_rewrite_action"`
}

type DeliveryRuleCacheExpirationActionState struct {
	Behavior string `json:"behavior"`
	Duration string `json:"duration"`
}

type DeliveryRuleCacheKeyQueryStringActionState struct {
	Behavior   string `json:"behavior"`
	Parameters string `json:"parameters"`
}

type DeliveryRuleCookiesConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Selector        string   `json:"selector"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleDeviceConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
}

type DeliveryRuleHttpVersionConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
}

type DeliveryRuleModifyRequestHeaderActionState struct {
	Action string `json:"action"`
	Name   string `json:"name"`
	Value  string `json:"value"`
}

type DeliveryRuleModifyResponseHeaderActionState struct {
	Action string `json:"action"`
	Name   string `json:"name"`
	Value  string `json:"value"`
}

type DeliveryRulePostArgConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Selector        string   `json:"selector"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleQueryStringConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleRemoteAddressConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
}

type DeliveryRuleRequestBodyConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleRequestHeaderConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Selector        string   `json:"selector"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleRequestMethodConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
}

type DeliveryRuleRequestSchemeConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
}

type DeliveryRuleRequestUriConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleUrlFileExtensionConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleUrlFileNameConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleUrlPathConditionState struct {
	MatchValues     []string `json:"match_values"`
	NegateCondition bool     `json:"negate_condition"`
	Operator        string   `json:"operator"`
	Transforms      []string `json:"transforms"`
}

type DeliveryRuleUrlRedirectActionState struct {
	Fragment     string `json:"fragment"`
	Hostname     string `json:"hostname"`
	Path         string `json:"path"`
	Protocol     string `json:"protocol"`
	QueryString  string `json:"query_string"`
	RedirectType string `json:"redirect_type"`
}

type DeliveryRuleUrlRewriteActionState struct {
	Destination           string `json:"destination"`
	PreserveUnmatchedPath bool   `json:"preserve_unmatched_path"`
	SourcePattern         string `json:"source_pattern"`
}

type GeoFilterState struct {
	Action       string   `json:"action"`
	CountryCodes []string `json:"country_codes"`
	RelativePath string   `json:"relative_path"`
}

type GlobalDeliveryRuleState struct {
	CacheExpirationAction      []GlobalDeliveryRuleCacheExpirationActionState      `json:"cache_expiration_action"`
	CacheKeyQueryStringAction  []GlobalDeliveryRuleCacheKeyQueryStringActionState  `json:"cache_key_query_string_action"`
	ModifyRequestHeaderAction  []GlobalDeliveryRuleModifyRequestHeaderActionState  `json:"modify_request_header_action"`
	ModifyResponseHeaderAction []GlobalDeliveryRuleModifyResponseHeaderActionState `json:"modify_response_header_action"`
	UrlRedirectAction          []GlobalDeliveryRuleUrlRedirectActionState          `json:"url_redirect_action"`
	UrlRewriteAction           []GlobalDeliveryRuleUrlRewriteActionState           `json:"url_rewrite_action"`
}

type GlobalDeliveryRuleCacheExpirationActionState struct {
	Behavior string `json:"behavior"`
	Duration string `json:"duration"`
}

type GlobalDeliveryRuleCacheKeyQueryStringActionState struct {
	Behavior   string `json:"behavior"`
	Parameters string `json:"parameters"`
}

type GlobalDeliveryRuleModifyRequestHeaderActionState struct {
	Action string `json:"action"`
	Name   string `json:"name"`
	Value  string `json:"value"`
}

type GlobalDeliveryRuleModifyResponseHeaderActionState struct {
	Action string `json:"action"`
	Name   string `json:"name"`
	Value  string `json:"value"`
}

type GlobalDeliveryRuleUrlRedirectActionState struct {
	Fragment     string `json:"fragment"`
	Hostname     string `json:"hostname"`
	Path         string `json:"path"`
	Protocol     string `json:"protocol"`
	QueryString  string `json:"query_string"`
	RedirectType string `json:"redirect_type"`
}

type GlobalDeliveryRuleUrlRewriteActionState struct {
	Destination           string `json:"destination"`
	PreserveUnmatchedPath bool   `json:"preserve_unmatched_path"`
	SourcePattern         string `json:"source_pattern"`
}

type OriginState struct {
	HostName  string  `json:"host_name"`
	HttpPort  float64 `json:"http_port"`
	HttpsPort float64 `json:"https_port"`
	Name      string  `json:"name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
