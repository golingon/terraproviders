// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_bot_channel_alexa

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_bot_channel_alexa.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermBotChannelAlexaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (abca *Resource) Type() string {
	return "azurerm_bot_channel_alexa"
}

// LocalName returns the local name for [Resource].
func (abca *Resource) LocalName() string {
	return abca.Name
}

// Configuration returns the configuration (args) for [Resource].
func (abca *Resource) Configuration() interface{} {
	return abca.Args
}

// DependOn is used for other resources to depend on [Resource].
func (abca *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(abca)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (abca *Resource) Dependencies() terra.Dependencies {
	return abca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (abca *Resource) LifecycleManagement() *terra.Lifecycle {
	return abca.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (abca *Resource) Attributes() azurermBotChannelAlexaAttributes {
	return azurermBotChannelAlexaAttributes{ref: terra.ReferenceResource(abca)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (abca *Resource) ImportState(state io.Reader) error {
	abca.state = &azurermBotChannelAlexaState{}
	if err := json.NewDecoder(state).Decode(abca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", abca.Type(), abca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (abca *Resource) State() (*azurermBotChannelAlexaState, bool) {
	return abca.state, abca.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (abca *Resource) StateMust() *azurermBotChannelAlexaState {
	if abca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", abca.Type(), abca.LocalName()))
	}
	return abca.state
}

// Args contains the configurations for azurerm_bot_channel_alexa.
type Args struct {
	// BotName: string, required
	BotName terra.StringValue `hcl:"bot_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkillId: string, required
	SkillId terra.StringValue `hcl:"skill_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermBotChannelAlexaAttributes struct {
	ref terra.Reference
}

// BotName returns a reference to field bot_name of azurerm_bot_channel_alexa.
func (abca azurermBotChannelAlexaAttributes) BotName() terra.StringValue {
	return terra.ReferenceAsString(abca.ref.Append("bot_name"))
}

// Id returns a reference to field id of azurerm_bot_channel_alexa.
func (abca azurermBotChannelAlexaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(abca.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_bot_channel_alexa.
func (abca azurermBotChannelAlexaAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(abca.ref.Append("location"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_bot_channel_alexa.
func (abca azurermBotChannelAlexaAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(abca.ref.Append("resource_group_name"))
}

// SkillId returns a reference to field skill_id of azurerm_bot_channel_alexa.
func (abca azurermBotChannelAlexaAttributes) SkillId() terra.StringValue {
	return terra.ReferenceAsString(abca.ref.Append("skill_id"))
}

func (abca azurermBotChannelAlexaAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](abca.ref.Append("timeouts"))
}

type azurermBotChannelAlexaState struct {
	BotName           string         `json:"bot_name"`
	Id                string         `json:"id"`
	Location          string         `json:"location"`
	ResourceGroupName string         `json:"resource_group_name"`
	SkillId           string         `json:"skill_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
