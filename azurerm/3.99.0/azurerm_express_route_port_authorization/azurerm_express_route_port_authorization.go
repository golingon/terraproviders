// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_express_route_port_authorization

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_express_route_port_authorization.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermExpressRoutePortAuthorizationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aerpa *Resource) Type() string {
	return "azurerm_express_route_port_authorization"
}

// LocalName returns the local name for [Resource].
func (aerpa *Resource) LocalName() string {
	return aerpa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aerpa *Resource) Configuration() interface{} {
	return aerpa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aerpa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aerpa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aerpa *Resource) Dependencies() terra.Dependencies {
	return aerpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aerpa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aerpa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aerpa *Resource) Attributes() azurermExpressRoutePortAuthorizationAttributes {
	return azurermExpressRoutePortAuthorizationAttributes{ref: terra.ReferenceResource(aerpa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aerpa *Resource) ImportState(state io.Reader) error {
	aerpa.state = &azurermExpressRoutePortAuthorizationState{}
	if err := json.NewDecoder(state).Decode(aerpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aerpa.Type(), aerpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aerpa *Resource) State() (*azurermExpressRoutePortAuthorizationState, bool) {
	return aerpa.state, aerpa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aerpa *Resource) StateMust() *azurermExpressRoutePortAuthorizationState {
	if aerpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aerpa.Type(), aerpa.LocalName()))
	}
	return aerpa.state
}

// Args contains the configurations for azurerm_express_route_port_authorization.
type Args struct {
	// ExpressRoutePortName: string, required
	ExpressRoutePortName terra.StringValue `hcl:"express_route_port_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermExpressRoutePortAuthorizationAttributes struct {
	ref terra.Reference
}

// AuthorizationKey returns a reference to field authorization_key of azurerm_express_route_port_authorization.
func (aerpa azurermExpressRoutePortAuthorizationAttributes) AuthorizationKey() terra.StringValue {
	return terra.ReferenceAsString(aerpa.ref.Append("authorization_key"))
}

// AuthorizationUseStatus returns a reference to field authorization_use_status of azurerm_express_route_port_authorization.
func (aerpa azurermExpressRoutePortAuthorizationAttributes) AuthorizationUseStatus() terra.StringValue {
	return terra.ReferenceAsString(aerpa.ref.Append("authorization_use_status"))
}

// ExpressRoutePortName returns a reference to field express_route_port_name of azurerm_express_route_port_authorization.
func (aerpa azurermExpressRoutePortAuthorizationAttributes) ExpressRoutePortName() terra.StringValue {
	return terra.ReferenceAsString(aerpa.ref.Append("express_route_port_name"))
}

// Id returns a reference to field id of azurerm_express_route_port_authorization.
func (aerpa azurermExpressRoutePortAuthorizationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aerpa.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_express_route_port_authorization.
func (aerpa azurermExpressRoutePortAuthorizationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aerpa.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_express_route_port_authorization.
func (aerpa azurermExpressRoutePortAuthorizationAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aerpa.ref.Append("resource_group_name"))
}

func (aerpa azurermExpressRoutePortAuthorizationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aerpa.ref.Append("timeouts"))
}

type azurermExpressRoutePortAuthorizationState struct {
	AuthorizationKey       string         `json:"authorization_key"`
	AuthorizationUseStatus string         `json:"authorization_use_status"`
	ExpressRoutePortName   string         `json:"express_route_port_name"`
	Id                     string         `json:"id"`
	Name                   string         `json:"name"`
	ResourceGroupName      string         `json:"resource_group_name"`
	Timeouts               *TimeoutsState `json:"timeouts"`
}
