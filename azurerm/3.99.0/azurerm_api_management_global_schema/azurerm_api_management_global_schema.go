// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_api_management_global_schema

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_api_management_global_schema.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermApiManagementGlobalSchemaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aamgs *Resource) Type() string {
	return "azurerm_api_management_global_schema"
}

// LocalName returns the local name for [Resource].
func (aamgs *Resource) LocalName() string {
	return aamgs.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aamgs *Resource) Configuration() interface{} {
	return aamgs.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aamgs *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aamgs)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aamgs *Resource) Dependencies() terra.Dependencies {
	return aamgs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aamgs *Resource) LifecycleManagement() *terra.Lifecycle {
	return aamgs.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aamgs *Resource) Attributes() azurermApiManagementGlobalSchemaAttributes {
	return azurermApiManagementGlobalSchemaAttributes{ref: terra.ReferenceResource(aamgs)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aamgs *Resource) ImportState(state io.Reader) error {
	aamgs.state = &azurermApiManagementGlobalSchemaState{}
	if err := json.NewDecoder(state).Decode(aamgs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aamgs.Type(), aamgs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aamgs *Resource) State() (*azurermApiManagementGlobalSchemaState, bool) {
	return aamgs.state, aamgs.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aamgs *Resource) StateMust() *azurermApiManagementGlobalSchemaState {
	if aamgs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aamgs.Type(), aamgs.LocalName()))
	}
	return aamgs.state
}

// Args contains the configurations for azurerm_api_management_global_schema.
type Args struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SchemaId: string, required
	SchemaId terra.StringValue `hcl:"schema_id,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermApiManagementGlobalSchemaAttributes struct {
	ref terra.Reference
}

// ApiManagementName returns a reference to field api_management_name of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("api_management_name"))
}

// Description returns a reference to field description of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("resource_group_name"))
}

// SchemaId returns a reference to field schema_id of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) SchemaId() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("schema_id"))
}

// Type returns a reference to field type of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("type"))
}

// Value returns a reference to field value of azurerm_api_management_global_schema.
func (aamgs azurermApiManagementGlobalSchemaAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aamgs.ref.Append("value"))
}

func (aamgs azurermApiManagementGlobalSchemaAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aamgs.ref.Append("timeouts"))
}

type azurermApiManagementGlobalSchemaState struct {
	ApiManagementName string         `json:"api_management_name"`
	Description       string         `json:"description"`
	Id                string         `json:"id"`
	ResourceGroupName string         `json:"resource_group_name"`
	SchemaId          string         `json:"schema_id"`
	Type              string         `json:"type"`
	Value             string         `json:"value"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
