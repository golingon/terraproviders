// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_cognitive_account_customer_managed_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_cognitive_account_customer_managed_key.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermCognitiveAccountCustomerManagedKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (acacmk *Resource) Type() string {
	return "azurerm_cognitive_account_customer_managed_key"
}

// LocalName returns the local name for [Resource].
func (acacmk *Resource) LocalName() string {
	return acacmk.Name
}

// Configuration returns the configuration (args) for [Resource].
func (acacmk *Resource) Configuration() interface{} {
	return acacmk.Args
}

// DependOn is used for other resources to depend on [Resource].
func (acacmk *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(acacmk)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (acacmk *Resource) Dependencies() terra.Dependencies {
	return acacmk.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (acacmk *Resource) LifecycleManagement() *terra.Lifecycle {
	return acacmk.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (acacmk *Resource) Attributes() azurermCognitiveAccountCustomerManagedKeyAttributes {
	return azurermCognitiveAccountCustomerManagedKeyAttributes{ref: terra.ReferenceResource(acacmk)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (acacmk *Resource) ImportState(state io.Reader) error {
	acacmk.state = &azurermCognitiveAccountCustomerManagedKeyState{}
	if err := json.NewDecoder(state).Decode(acacmk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", acacmk.Type(), acacmk.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (acacmk *Resource) State() (*azurermCognitiveAccountCustomerManagedKeyState, bool) {
	return acacmk.state, acacmk.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (acacmk *Resource) StateMust() *azurermCognitiveAccountCustomerManagedKeyState {
	if acacmk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", acacmk.Type(), acacmk.LocalName()))
	}
	return acacmk.state
}

// Args contains the configurations for azurerm_cognitive_account_customer_managed_key.
type Args struct {
	// CognitiveAccountId: string, required
	CognitiveAccountId terra.StringValue `hcl:"cognitive_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityClientId: string, optional
	IdentityClientId terra.StringValue `hcl:"identity_client_id,attr"`
	// KeyVaultKeyId: string, required
	KeyVaultKeyId terra.StringValue `hcl:"key_vault_key_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermCognitiveAccountCustomerManagedKeyAttributes struct {
	ref terra.Reference
}

// CognitiveAccountId returns a reference to field cognitive_account_id of azurerm_cognitive_account_customer_managed_key.
func (acacmk azurermCognitiveAccountCustomerManagedKeyAttributes) CognitiveAccountId() terra.StringValue {
	return terra.ReferenceAsString(acacmk.ref.Append("cognitive_account_id"))
}

// Id returns a reference to field id of azurerm_cognitive_account_customer_managed_key.
func (acacmk azurermCognitiveAccountCustomerManagedKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(acacmk.ref.Append("id"))
}

// IdentityClientId returns a reference to field identity_client_id of azurerm_cognitive_account_customer_managed_key.
func (acacmk azurermCognitiveAccountCustomerManagedKeyAttributes) IdentityClientId() terra.StringValue {
	return terra.ReferenceAsString(acacmk.ref.Append("identity_client_id"))
}

// KeyVaultKeyId returns a reference to field key_vault_key_id of azurerm_cognitive_account_customer_managed_key.
func (acacmk azurermCognitiveAccountCustomerManagedKeyAttributes) KeyVaultKeyId() terra.StringValue {
	return terra.ReferenceAsString(acacmk.ref.Append("key_vault_key_id"))
}

func (acacmk azurermCognitiveAccountCustomerManagedKeyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](acacmk.ref.Append("timeouts"))
}

type azurermCognitiveAccountCustomerManagedKeyState struct {
	CognitiveAccountId string         `json:"cognitive_account_id"`
	Id                 string         `json:"id"`
	IdentityClientId   string         `json:"identity_client_id"`
	KeyVaultKeyId      string         `json:"key_vault_key_id"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
