// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_web_pubsub

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_web_pubsub.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermWebPubsubState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (awp *Resource) Type() string {
	return "azurerm_web_pubsub"
}

// LocalName returns the local name for [Resource].
func (awp *Resource) LocalName() string {
	return awp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (awp *Resource) Configuration() interface{} {
	return awp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (awp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(awp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (awp *Resource) Dependencies() terra.Dependencies {
	return awp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (awp *Resource) LifecycleManagement() *terra.Lifecycle {
	return awp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (awp *Resource) Attributes() azurermWebPubsubAttributes {
	return azurermWebPubsubAttributes{ref: terra.ReferenceResource(awp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (awp *Resource) ImportState(state io.Reader) error {
	awp.state = &azurermWebPubsubState{}
	if err := json.NewDecoder(state).Decode(awp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", awp.Type(), awp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (awp *Resource) State() (*azurermWebPubsubState, bool) {
	return awp.state, awp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (awp *Resource) StateMust() *azurermWebPubsubState {
	if awp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", awp.Type(), awp.LocalName()))
	}
	return awp.state
}

// Args contains the configurations for azurerm_web_pubsub.
type Args struct {
	// AadAuthEnabled: bool, optional
	AadAuthEnabled terra.BoolValue `hcl:"aad_auth_enabled,attr"`
	// Capacity: number, optional
	Capacity terra.NumberValue `hcl:"capacity,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalAuthEnabled: bool, optional
	LocalAuthEnabled terra.BoolValue `hcl:"local_auth_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TlsClientCertEnabled: bool, optional
	TlsClientCertEnabled terra.BoolValue `hcl:"tls_client_cert_enabled,attr"`
	// Identity: optional
	Identity *Identity `hcl:"identity,block"`
	// LiveTrace: optional
	LiveTrace *LiveTrace `hcl:"live_trace,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermWebPubsubAttributes struct {
	ref terra.Reference
}

// AadAuthEnabled returns a reference to field aad_auth_enabled of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) AadAuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awp.ref.Append("aad_auth_enabled"))
}

// Capacity returns a reference to field capacity of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Capacity() terra.NumberValue {
	return terra.ReferenceAsNumber(awp.ref.Append("capacity"))
}

// ExternalIp returns a reference to field external_ip of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) ExternalIp() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("external_ip"))
}

// Hostname returns a reference to field hostname of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Hostname() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("hostname"))
}

// Id returns a reference to field id of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("id"))
}

// LocalAuthEnabled returns a reference to field local_auth_enabled of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) LocalAuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awp.ref.Append("local_auth_enabled"))
}

// Location returns a reference to field location of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("name"))
}

// PrimaryAccessKey returns a reference to field primary_access_key of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) PrimaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("primary_access_key"))
}

// PrimaryConnectionString returns a reference to field primary_connection_string of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("primary_connection_string"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awp.ref.Append("public_network_access_enabled"))
}

// PublicPort returns a reference to field public_port of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) PublicPort() terra.NumberValue {
	return terra.ReferenceAsNumber(awp.ref.Append("public_port"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("resource_group_name"))
}

// SecondaryAccessKey returns a reference to field secondary_access_key of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) SecondaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("secondary_access_key"))
}

// SecondaryConnectionString returns a reference to field secondary_connection_string of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("secondary_connection_string"))
}

// ServerPort returns a reference to field server_port of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) ServerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(awp.ref.Append("server_port"))
}

// Sku returns a reference to field sku of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("sku"))
}

// Tags returns a reference to field tags of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](awp.ref.Append("tags"))
}

// TlsClientCertEnabled returns a reference to field tls_client_cert_enabled of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) TlsClientCertEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(awp.ref.Append("tls_client_cert_enabled"))
}

// Version returns a reference to field version of azurerm_web_pubsub.
func (awp azurermWebPubsubAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(awp.ref.Append("version"))
}

func (awp azurermWebPubsubAttributes) Identity() terra.ListValue[IdentityAttributes] {
	return terra.ReferenceAsList[IdentityAttributes](awp.ref.Append("identity"))
}

func (awp azurermWebPubsubAttributes) LiveTrace() terra.ListValue[LiveTraceAttributes] {
	return terra.ReferenceAsList[LiveTraceAttributes](awp.ref.Append("live_trace"))
}

func (awp azurermWebPubsubAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](awp.ref.Append("timeouts"))
}

type azurermWebPubsubState struct {
	AadAuthEnabled             bool              `json:"aad_auth_enabled"`
	Capacity                   float64           `json:"capacity"`
	ExternalIp                 string            `json:"external_ip"`
	Hostname                   string            `json:"hostname"`
	Id                         string            `json:"id"`
	LocalAuthEnabled           bool              `json:"local_auth_enabled"`
	Location                   string            `json:"location"`
	Name                       string            `json:"name"`
	PrimaryAccessKey           string            `json:"primary_access_key"`
	PrimaryConnectionString    string            `json:"primary_connection_string"`
	PublicNetworkAccessEnabled bool              `json:"public_network_access_enabled"`
	PublicPort                 float64           `json:"public_port"`
	ResourceGroupName          string            `json:"resource_group_name"`
	SecondaryAccessKey         string            `json:"secondary_access_key"`
	SecondaryConnectionString  string            `json:"secondary_connection_string"`
	ServerPort                 float64           `json:"server_port"`
	Sku                        string            `json:"sku"`
	Tags                       map[string]string `json:"tags"`
	TlsClientCertEnabled       bool              `json:"tls_client_cert_enabled"`
	Version                    string            `json:"version"`
	Identity                   []IdentityState   `json:"identity"`
	LiveTrace                  []LiveTraceState  `json:"live_trace"`
	Timeouts                   *TimeoutsState    `json:"timeouts"`
}
