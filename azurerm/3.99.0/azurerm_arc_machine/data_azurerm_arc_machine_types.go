// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_arc_machine

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataAgentAttributes struct {
	ref terra.Reference
}

func (a DataAgentAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAgentAttributes) InternalWithRef(ref terra.Reference) DataAgentAttributes {
	return DataAgentAttributes{ref: ref}
}

func (a DataAgentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAgentAttributes) ExtensionsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("extensions_enabled"))
}

func (a DataAgentAttributes) GuestConfigurationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("guest_configuration_enabled"))
}

func (a DataAgentAttributes) IncomingConnectionsPorts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](a.ref.Append("incoming_connections_ports"))
}

func (a DataAgentAttributes) ProxyBypass() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](a.ref.Append("proxy_bypass"))
}

func (a DataAgentAttributes) ProxyUrl() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("proxy_url"))
}

func (a DataAgentAttributes) ExtensionsAllowList() terra.ListValue[DataAgentExtensionsAllowListAttributes] {
	return terra.ReferenceAsList[DataAgentExtensionsAllowListAttributes](a.ref.Append("extensions_allow_list"))
}

func (a DataAgentAttributes) ExtensionsBlockList() terra.ListValue[DataAgentExtensionsBlockListAttributes] {
	return terra.ReferenceAsList[DataAgentExtensionsBlockListAttributes](a.ref.Append("extensions_block_list"))
}

type DataAgentExtensionsAllowListAttributes struct {
	ref terra.Reference
}

func (eal DataAgentExtensionsAllowListAttributes) InternalRef() (terra.Reference, error) {
	return eal.ref, nil
}

func (eal DataAgentExtensionsAllowListAttributes) InternalWithRef(ref terra.Reference) DataAgentExtensionsAllowListAttributes {
	return DataAgentExtensionsAllowListAttributes{ref: ref}
}

func (eal DataAgentExtensionsAllowListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eal.ref.InternalTokens()
}

func (eal DataAgentExtensionsAllowListAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(eal.ref.Append("publisher"))
}

func (eal DataAgentExtensionsAllowListAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(eal.ref.Append("type"))
}

type DataAgentExtensionsBlockListAttributes struct {
	ref terra.Reference
}

func (ebl DataAgentExtensionsBlockListAttributes) InternalRef() (terra.Reference, error) {
	return ebl.ref, nil
}

func (ebl DataAgentExtensionsBlockListAttributes) InternalWithRef(ref terra.Reference) DataAgentExtensionsBlockListAttributes {
	return DataAgentExtensionsBlockListAttributes{ref: ref}
}

func (ebl DataAgentExtensionsBlockListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ebl.ref.InternalTokens()
}

func (ebl DataAgentExtensionsBlockListAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(ebl.ref.Append("publisher"))
}

func (ebl DataAgentExtensionsBlockListAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ebl.ref.Append("type"))
}

type DataCloudMetadataAttributes struct {
	ref terra.Reference
}

func (cm DataCloudMetadataAttributes) InternalRef() (terra.Reference, error) {
	return cm.ref, nil
}

func (cm DataCloudMetadataAttributes) InternalWithRef(ref terra.Reference) DataCloudMetadataAttributes {
	return DataCloudMetadataAttributes{ref: ref}
}

func (cm DataCloudMetadataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cm.ref.InternalTokens()
}

func (cm DataCloudMetadataAttributes) Provider() terra.StringValue {
	return terra.ReferenceAsString(cm.ref.Append("provider"))
}

type DataIdentityAttributes struct {
	ref terra.Reference
}

func (i DataIdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIdentityAttributes) InternalWithRef(ref terra.Reference) DataIdentityAttributes {
	return DataIdentityAttributes{ref: ref}
}

func (i DataIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIdentityAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("principal_id"))
}

func (i DataIdentityAttributes) TenantId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("tenant_id"))
}

func (i DataIdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type DataLocationDataAttributes struct {
	ref terra.Reference
}

func (ld DataLocationDataAttributes) InternalRef() (terra.Reference, error) {
	return ld.ref, nil
}

func (ld DataLocationDataAttributes) InternalWithRef(ref terra.Reference) DataLocationDataAttributes {
	return DataLocationDataAttributes{ref: ref}
}

func (ld DataLocationDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ld.ref.InternalTokens()
}

func (ld DataLocationDataAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("city"))
}

func (ld DataLocationDataAttributes) CountryOrRegion() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("country_or_region"))
}

func (ld DataLocationDataAttributes) District() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("district"))
}

func (ld DataLocationDataAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("name"))
}

type DataOsProfileAttributes struct {
	ref terra.Reference
}

func (op DataOsProfileAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op DataOsProfileAttributes) InternalWithRef(ref terra.Reference) DataOsProfileAttributes {
	return DataOsProfileAttributes{ref: ref}
}

func (op DataOsProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op DataOsProfileAttributes) ComputerName() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("computer_name"))
}

func (op DataOsProfileAttributes) Linux() terra.ListValue[DataOsProfileLinuxAttributes] {
	return terra.ReferenceAsList[DataOsProfileLinuxAttributes](op.ref.Append("linux"))
}

func (op DataOsProfileAttributes) Windows() terra.ListValue[DataOsProfileWindowsAttributes] {
	return terra.ReferenceAsList[DataOsProfileWindowsAttributes](op.ref.Append("windows"))
}

type DataOsProfileLinuxAttributes struct {
	ref terra.Reference
}

func (l DataOsProfileLinuxAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l DataOsProfileLinuxAttributes) InternalWithRef(ref terra.Reference) DataOsProfileLinuxAttributes {
	return DataOsProfileLinuxAttributes{ref: ref}
}

func (l DataOsProfileLinuxAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l DataOsProfileLinuxAttributes) Patch() terra.ListValue[DataOsProfileLinuxPatchAttributes] {
	return terra.ReferenceAsList[DataOsProfileLinuxPatchAttributes](l.ref.Append("patch"))
}

type DataOsProfileLinuxPatchAttributes struct {
	ref terra.Reference
}

func (p DataOsProfileLinuxPatchAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataOsProfileLinuxPatchAttributes) InternalWithRef(ref terra.Reference) DataOsProfileLinuxPatchAttributes {
	return DataOsProfileLinuxPatchAttributes{ref: ref}
}

func (p DataOsProfileLinuxPatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataOsProfileLinuxPatchAttributes) AssessmentMode() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("assessment_mode"))
}

func (p DataOsProfileLinuxPatchAttributes) PatchMode() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("patch_mode"))
}

type DataOsProfileWindowsAttributes struct {
	ref terra.Reference
}

func (w DataOsProfileWindowsAttributes) InternalRef() (terra.Reference, error) {
	return w.ref, nil
}

func (w DataOsProfileWindowsAttributes) InternalWithRef(ref terra.Reference) DataOsProfileWindowsAttributes {
	return DataOsProfileWindowsAttributes{ref: ref}
}

func (w DataOsProfileWindowsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return w.ref.InternalTokens()
}

func (w DataOsProfileWindowsAttributes) Patch() terra.ListValue[DataOsProfileWindowsPatchAttributes] {
	return terra.ReferenceAsList[DataOsProfileWindowsPatchAttributes](w.ref.Append("patch"))
}

type DataOsProfileWindowsPatchAttributes struct {
	ref terra.Reference
}

func (p DataOsProfileWindowsPatchAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataOsProfileWindowsPatchAttributes) InternalWithRef(ref terra.Reference) DataOsProfileWindowsPatchAttributes {
	return DataOsProfileWindowsPatchAttributes{ref: ref}
}

func (p DataOsProfileWindowsPatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataOsProfileWindowsPatchAttributes) AssessmentMode() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("assessment_mode"))
}

func (p DataOsProfileWindowsPatchAttributes) PatchMode() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("patch_mode"))
}

type DataServiceStatusAttributes struct {
	ref terra.Reference
}

func (ss DataServiceStatusAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DataServiceStatusAttributes) InternalWithRef(ref terra.Reference) DataServiceStatusAttributes {
	return DataServiceStatusAttributes{ref: ref}
}

func (ss DataServiceStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DataServiceStatusAttributes) ExtensionService() terra.ListValue[DataServiceStatusExtensionServiceAttributes] {
	return terra.ReferenceAsList[DataServiceStatusExtensionServiceAttributes](ss.ref.Append("extension_service"))
}

func (ss DataServiceStatusAttributes) GuestConfigurationService() terra.ListValue[DataServiceStatusGuestConfigurationServiceAttributes] {
	return terra.ReferenceAsList[DataServiceStatusGuestConfigurationServiceAttributes](ss.ref.Append("guest_configuration_service"))
}

type DataServiceStatusExtensionServiceAttributes struct {
	ref terra.Reference
}

func (es DataServiceStatusExtensionServiceAttributes) InternalRef() (terra.Reference, error) {
	return es.ref, nil
}

func (es DataServiceStatusExtensionServiceAttributes) InternalWithRef(ref terra.Reference) DataServiceStatusExtensionServiceAttributes {
	return DataServiceStatusExtensionServiceAttributes{ref: ref}
}

func (es DataServiceStatusExtensionServiceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return es.ref.InternalTokens()
}

func (es DataServiceStatusExtensionServiceAttributes) StartupType() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("startup_type"))
}

func (es DataServiceStatusExtensionServiceAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(es.ref.Append("status"))
}

type DataServiceStatusGuestConfigurationServiceAttributes struct {
	ref terra.Reference
}

func (gcs DataServiceStatusGuestConfigurationServiceAttributes) InternalRef() (terra.Reference, error) {
	return gcs.ref, nil
}

func (gcs DataServiceStatusGuestConfigurationServiceAttributes) InternalWithRef(ref terra.Reference) DataServiceStatusGuestConfigurationServiceAttributes {
	return DataServiceStatusGuestConfigurationServiceAttributes{ref: ref}
}

func (gcs DataServiceStatusGuestConfigurationServiceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gcs.ref.InternalTokens()
}

func (gcs DataServiceStatusGuestConfigurationServiceAttributes) StartupType() terra.StringValue {
	return terra.ReferenceAsString(gcs.ref.Append("startup_type"))
}

func (gcs DataServiceStatusGuestConfigurationServiceAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(gcs.ref.Append("status"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAgentState struct {
	ExtensionsEnabled         bool                                `json:"extensions_enabled"`
	GuestConfigurationEnabled bool                                `json:"guest_configuration_enabled"`
	IncomingConnectionsPorts  []string                            `json:"incoming_connections_ports"`
	ProxyBypass               []string                            `json:"proxy_bypass"`
	ProxyUrl                  string                              `json:"proxy_url"`
	ExtensionsAllowList       []DataAgentExtensionsAllowListState `json:"extensions_allow_list"`
	ExtensionsBlockList       []DataAgentExtensionsBlockListState `json:"extensions_block_list"`
}

type DataAgentExtensionsAllowListState struct {
	Publisher string `json:"publisher"`
	Type      string `json:"type"`
}

type DataAgentExtensionsBlockListState struct {
	Publisher string `json:"publisher"`
	Type      string `json:"type"`
}

type DataCloudMetadataState struct {
	Provider string `json:"provider"`
}

type DataIdentityState struct {
	PrincipalId string `json:"principal_id"`
	TenantId    string `json:"tenant_id"`
	Type        string `json:"type"`
}

type DataLocationDataState struct {
	City            string `json:"city"`
	CountryOrRegion string `json:"country_or_region"`
	District        string `json:"district"`
	Name            string `json:"name"`
}

type DataOsProfileState struct {
	ComputerName string                      `json:"computer_name"`
	Linux        []DataOsProfileLinuxState   `json:"linux"`
	Windows      []DataOsProfileWindowsState `json:"windows"`
}

type DataOsProfileLinuxState struct {
	Patch []DataOsProfileLinuxPatchState `json:"patch"`
}

type DataOsProfileLinuxPatchState struct {
	AssessmentMode string `json:"assessment_mode"`
	PatchMode      string `json:"patch_mode"`
}

type DataOsProfileWindowsState struct {
	Patch []DataOsProfileWindowsPatchState `json:"patch"`
}

type DataOsProfileWindowsPatchState struct {
	AssessmentMode string `json:"assessment_mode"`
	PatchMode      string `json:"patch_mode"`
}

type DataServiceStatusState struct {
	ExtensionService          []DataServiceStatusExtensionServiceState          `json:"extension_service"`
	GuestConfigurationService []DataServiceStatusGuestConfigurationServiceState `json:"guest_configuration_service"`
}

type DataServiceStatusExtensionServiceState struct {
	StartupType string `json:"startup_type"`
	Status      string `json:"status"`
}

type DataServiceStatusGuestConfigurationServiceState struct {
	StartupType string `json:"startup_type"`
	Status      string `json:"status"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
