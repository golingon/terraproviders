// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_vpn_site

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Link struct {
	// Fqdn: string, optional
	Fqdn terra.StringValue `hcl:"fqdn,attr"`
	// IpAddress: string, optional
	IpAddress terra.StringValue `hcl:"ip_address,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// SpeedInMbps: number, optional
	SpeedInMbps terra.NumberValue `hcl:"speed_in_mbps,attr"`
	// LinkBgp: optional
	Bgp *LinkBgp `hcl:"bgp,block"`
}

type LinkBgp struct {
	// Asn: number, required
	Asn terra.NumberValue `hcl:"asn,attr" validate:"required"`
	// PeeringAddress: string, required
	PeeringAddress terra.StringValue `hcl:"peering_address,attr" validate:"required"`
}

type O365Policy struct {
	// O365PolicyTrafficCategory: optional
	TrafficCategory *O365PolicyTrafficCategory `hcl:"traffic_category,block"`
}

type O365PolicyTrafficCategory struct {
	// AllowEndpointEnabled: bool, optional
	AllowEndpointEnabled terra.BoolValue `hcl:"allow_endpoint_enabled,attr"`
	// DefaultEndpointEnabled: bool, optional
	DefaultEndpointEnabled terra.BoolValue `hcl:"default_endpoint_enabled,attr"`
	// OptimizeEndpointEnabled: bool, optional
	OptimizeEndpointEnabled terra.BoolValue `hcl:"optimize_endpoint_enabled,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LinkAttributes struct {
	ref terra.Reference
}

func (l LinkAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l LinkAttributes) InternalWithRef(ref terra.Reference) LinkAttributes {
	return LinkAttributes{ref: ref}
}

func (l LinkAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l LinkAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("fqdn"))
}

func (l LinkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("id"))
}

func (l LinkAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("ip_address"))
}

func (l LinkAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("name"))
}

func (l LinkAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("provider_name"))
}

func (l LinkAttributes) SpeedInMbps() terra.NumberValue {
	return terra.ReferenceAsNumber(l.ref.Append("speed_in_mbps"))
}

func (l LinkAttributes) Bgp() terra.ListValue[LinkBgpAttributes] {
	return terra.ReferenceAsList[LinkBgpAttributes](l.ref.Append("bgp"))
}

type LinkBgpAttributes struct {
	ref terra.Reference
}

func (b LinkBgpAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b LinkBgpAttributes) InternalWithRef(ref terra.Reference) LinkBgpAttributes {
	return LinkBgpAttributes{ref: ref}
}

func (b LinkBgpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b LinkBgpAttributes) Asn() terra.NumberValue {
	return terra.ReferenceAsNumber(b.ref.Append("asn"))
}

func (b LinkBgpAttributes) PeeringAddress() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("peering_address"))
}

type O365PolicyAttributes struct {
	ref terra.Reference
}

func (op O365PolicyAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op O365PolicyAttributes) InternalWithRef(ref terra.Reference) O365PolicyAttributes {
	return O365PolicyAttributes{ref: ref}
}

func (op O365PolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op O365PolicyAttributes) TrafficCategory() terra.ListValue[O365PolicyTrafficCategoryAttributes] {
	return terra.ReferenceAsList[O365PolicyTrafficCategoryAttributes](op.ref.Append("traffic_category"))
}

type O365PolicyTrafficCategoryAttributes struct {
	ref terra.Reference
}

func (tc O365PolicyTrafficCategoryAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc O365PolicyTrafficCategoryAttributes) InternalWithRef(ref terra.Reference) O365PolicyTrafficCategoryAttributes {
	return O365PolicyTrafficCategoryAttributes{ref: ref}
}

func (tc O365PolicyTrafficCategoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc O365PolicyTrafficCategoryAttributes) AllowEndpointEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(tc.ref.Append("allow_endpoint_enabled"))
}

func (tc O365PolicyTrafficCategoryAttributes) DefaultEndpointEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(tc.ref.Append("default_endpoint_enabled"))
}

func (tc O365PolicyTrafficCategoryAttributes) OptimizeEndpointEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(tc.ref.Append("optimize_endpoint_enabled"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LinkState struct {
	Fqdn         string         `json:"fqdn"`
	Id           string         `json:"id"`
	IpAddress    string         `json:"ip_address"`
	Name         string         `json:"name"`
	ProviderName string         `json:"provider_name"`
	SpeedInMbps  float64        `json:"speed_in_mbps"`
	Bgp          []LinkBgpState `json:"bgp"`
}

type LinkBgpState struct {
	Asn            float64 `json:"asn"`
	PeeringAddress string  `json:"peering_address"`
}

type O365PolicyState struct {
	TrafficCategory []O365PolicyTrafficCategoryState `json:"traffic_category"`
}

type O365PolicyTrafficCategoryState struct {
	AllowEndpointEnabled    bool `json:"allow_endpoint_enabled"`
	DefaultEndpointEnabled  bool `json:"default_endpoint_enabled"`
	OptimizeEndpointEnabled bool `json:"optimize_endpoint_enabled"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
