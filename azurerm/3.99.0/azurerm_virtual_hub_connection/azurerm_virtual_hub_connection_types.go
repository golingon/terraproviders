// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_virtual_hub_connection

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Routing struct {
	// AssociatedRouteTableId: string, optional
	AssociatedRouteTableId terra.StringValue `hcl:"associated_route_table_id,attr"`
	// InboundRouteMapId: string, optional
	InboundRouteMapId terra.StringValue `hcl:"inbound_route_map_id,attr"`
	// OutboundRouteMapId: string, optional
	OutboundRouteMapId terra.StringValue `hcl:"outbound_route_map_id,attr"`
	// StaticVnetLocalRouteOverrideCriteria: string, optional
	StaticVnetLocalRouteOverrideCriteria terra.StringValue `hcl:"static_vnet_local_route_override_criteria,attr"`
	// RoutingPropagatedRouteTable: optional
	PropagatedRouteTable *RoutingPropagatedRouteTable `hcl:"propagated_route_table,block"`
	// RoutingStaticVnetRoute: min=0
	StaticVnetRoute []RoutingStaticVnetRoute `hcl:"static_vnet_route,block" validate:"min=0"`
}

type RoutingPropagatedRouteTable struct {
	// Labels: set of string, optional
	Labels terra.SetValue[terra.StringValue] `hcl:"labels,attr"`
	// RouteTableIds: list of string, optional
	RouteTableIds terra.ListValue[terra.StringValue] `hcl:"route_table_ids,attr"`
}

type RoutingStaticVnetRoute struct {
	// AddressPrefixes: set of string, optional
	AddressPrefixes terra.SetValue[terra.StringValue] `hcl:"address_prefixes,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// NextHopIpAddress: string, optional
	NextHopIpAddress terra.StringValue `hcl:"next_hop_ip_address,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type RoutingAttributes struct {
	ref terra.Reference
}

func (r RoutingAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RoutingAttributes) InternalWithRef(ref terra.Reference) RoutingAttributes {
	return RoutingAttributes{ref: ref}
}

func (r RoutingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RoutingAttributes) AssociatedRouteTableId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("associated_route_table_id"))
}

func (r RoutingAttributes) InboundRouteMapId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("inbound_route_map_id"))
}

func (r RoutingAttributes) OutboundRouteMapId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("outbound_route_map_id"))
}

func (r RoutingAttributes) StaticVnetLocalRouteOverrideCriteria() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("static_vnet_local_route_override_criteria"))
}

func (r RoutingAttributes) PropagatedRouteTable() terra.ListValue[RoutingPropagatedRouteTableAttributes] {
	return terra.ReferenceAsList[RoutingPropagatedRouteTableAttributes](r.ref.Append("propagated_route_table"))
}

func (r RoutingAttributes) StaticVnetRoute() terra.ListValue[RoutingStaticVnetRouteAttributes] {
	return terra.ReferenceAsList[RoutingStaticVnetRouteAttributes](r.ref.Append("static_vnet_route"))
}

type RoutingPropagatedRouteTableAttributes struct {
	ref terra.Reference
}

func (prt RoutingPropagatedRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return prt.ref, nil
}

func (prt RoutingPropagatedRouteTableAttributes) InternalWithRef(ref terra.Reference) RoutingPropagatedRouteTableAttributes {
	return RoutingPropagatedRouteTableAttributes{ref: ref}
}

func (prt RoutingPropagatedRouteTableAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return prt.ref.InternalTokens()
}

func (prt RoutingPropagatedRouteTableAttributes) Labels() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](prt.ref.Append("labels"))
}

func (prt RoutingPropagatedRouteTableAttributes) RouteTableIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](prt.ref.Append("route_table_ids"))
}

type RoutingStaticVnetRouteAttributes struct {
	ref terra.Reference
}

func (svr RoutingStaticVnetRouteAttributes) InternalRef() (terra.Reference, error) {
	return svr.ref, nil
}

func (svr RoutingStaticVnetRouteAttributes) InternalWithRef(ref terra.Reference) RoutingStaticVnetRouteAttributes {
	return RoutingStaticVnetRouteAttributes{ref: ref}
}

func (svr RoutingStaticVnetRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return svr.ref.InternalTokens()
}

func (svr RoutingStaticVnetRouteAttributes) AddressPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](svr.ref.Append("address_prefixes"))
}

func (svr RoutingStaticVnetRouteAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(svr.ref.Append("name"))
}

func (svr RoutingStaticVnetRouteAttributes) NextHopIpAddress() terra.StringValue {
	return terra.ReferenceAsString(svr.ref.Append("next_hop_ip_address"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type RoutingState struct {
	AssociatedRouteTableId               string                             `json:"associated_route_table_id"`
	InboundRouteMapId                    string                             `json:"inbound_route_map_id"`
	OutboundRouteMapId                   string                             `json:"outbound_route_map_id"`
	StaticVnetLocalRouteOverrideCriteria string                             `json:"static_vnet_local_route_override_criteria"`
	PropagatedRouteTable                 []RoutingPropagatedRouteTableState `json:"propagated_route_table"`
	StaticVnetRoute                      []RoutingStaticVnetRouteState      `json:"static_vnet_route"`
}

type RoutingPropagatedRouteTableState struct {
	Labels        []string `json:"labels"`
	RouteTableIds []string `json:"route_table_ids"`
}

type RoutingStaticVnetRouteState struct {
	AddressPrefixes  []string `json:"address_prefixes"`
	Name             string   `json:"name"`
	NextHopIpAddress string   `json:"next_hop_ip_address"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
