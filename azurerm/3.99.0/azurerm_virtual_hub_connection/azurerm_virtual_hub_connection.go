// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm_virtual_hub_connection

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azurerm_virtual_hub_connection.
type Resource struct {
	Name      string
	Args      Args
	state     *azurermVirtualHubConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (avhc *Resource) Type() string {
	return "azurerm_virtual_hub_connection"
}

// LocalName returns the local name for [Resource].
func (avhc *Resource) LocalName() string {
	return avhc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (avhc *Resource) Configuration() interface{} {
	return avhc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (avhc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(avhc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (avhc *Resource) Dependencies() terra.Dependencies {
	return avhc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (avhc *Resource) LifecycleManagement() *terra.Lifecycle {
	return avhc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (avhc *Resource) Attributes() azurermVirtualHubConnectionAttributes {
	return azurermVirtualHubConnectionAttributes{ref: terra.ReferenceResource(avhc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (avhc *Resource) ImportState(state io.Reader) error {
	avhc.state = &azurermVirtualHubConnectionState{}
	if err := json.NewDecoder(state).Decode(avhc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avhc.Type(), avhc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (avhc *Resource) State() (*azurermVirtualHubConnectionState, bool) {
	return avhc.state, avhc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (avhc *Resource) StateMust() *azurermVirtualHubConnectionState {
	if avhc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avhc.Type(), avhc.LocalName()))
	}
	return avhc.state
}

// Args contains the configurations for azurerm_virtual_hub_connection.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InternetSecurityEnabled: bool, optional
	InternetSecurityEnabled terra.BoolValue `hcl:"internet_security_enabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RemoteVirtualNetworkId: string, required
	RemoteVirtualNetworkId terra.StringValue `hcl:"remote_virtual_network_id,attr" validate:"required"`
	// VirtualHubId: string, required
	VirtualHubId terra.StringValue `hcl:"virtual_hub_id,attr" validate:"required"`
	// Routing: optional
	Routing *Routing `hcl:"routing,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azurermVirtualHubConnectionAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_virtual_hub_connection.
func (avhc azurermVirtualHubConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(avhc.ref.Append("id"))
}

// InternetSecurityEnabled returns a reference to field internet_security_enabled of azurerm_virtual_hub_connection.
func (avhc azurermVirtualHubConnectionAttributes) InternetSecurityEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(avhc.ref.Append("internet_security_enabled"))
}

// Name returns a reference to field name of azurerm_virtual_hub_connection.
func (avhc azurermVirtualHubConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(avhc.ref.Append("name"))
}

// RemoteVirtualNetworkId returns a reference to field remote_virtual_network_id of azurerm_virtual_hub_connection.
func (avhc azurermVirtualHubConnectionAttributes) RemoteVirtualNetworkId() terra.StringValue {
	return terra.ReferenceAsString(avhc.ref.Append("remote_virtual_network_id"))
}

// VirtualHubId returns a reference to field virtual_hub_id of azurerm_virtual_hub_connection.
func (avhc azurermVirtualHubConnectionAttributes) VirtualHubId() terra.StringValue {
	return terra.ReferenceAsString(avhc.ref.Append("virtual_hub_id"))
}

func (avhc azurermVirtualHubConnectionAttributes) Routing() terra.ListValue[RoutingAttributes] {
	return terra.ReferenceAsList[RoutingAttributes](avhc.ref.Append("routing"))
}

func (avhc azurermVirtualHubConnectionAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](avhc.ref.Append("timeouts"))
}

type azurermVirtualHubConnectionState struct {
	Id                      string         `json:"id"`
	InternetSecurityEnabled bool           `json:"internet_security_enabled"`
	Name                    string         `json:"name"`
	RemoteVirtualNetworkId  string         `json:"remote_virtual_network_id"`
	VirtualHubId            string         `json:"virtual_hub_id"`
	Routing                 []RoutingState `json:"routing"`
	Timeouts                *TimeoutsState `json:"timeouts"`
}
