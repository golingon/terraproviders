// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	securitycenterservervulnerabilityassessmentvirtualmachine "github.com/golingon/terraproviders/azurerm/3.69.0/securitycenterservervulnerabilityassessmentvirtualmachine"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSecurityCenterServerVulnerabilityAssessmentVirtualMachine creates a new instance of [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func NewSecurityCenterServerVulnerabilityAssessmentVirtualMachine(name string, args SecurityCenterServerVulnerabilityAssessmentVirtualMachineArgs) *SecurityCenterServerVulnerabilityAssessmentVirtualMachine {
	return &SecurityCenterServerVulnerabilityAssessmentVirtualMachine{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityCenterServerVulnerabilityAssessmentVirtualMachine)(nil)

// SecurityCenterServerVulnerabilityAssessmentVirtualMachine represents the Terraform resource azurerm_security_center_server_vulnerability_assessment_virtual_machine.
type SecurityCenterServerVulnerabilityAssessmentVirtualMachine struct {
	Name      string
	Args      SecurityCenterServerVulnerabilityAssessmentVirtualMachineArgs
	state     *securityCenterServerVulnerabilityAssessmentVirtualMachineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) Type() string {
	return "azurerm_security_center_server_vulnerability_assessment_virtual_machine"
}

// LocalName returns the local name for [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) LocalName() string {
	return scsvavm.Name
}

// Configuration returns the configuration (args) for [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) Configuration() interface{} {
	return scsvavm.Args
}

// DependOn is used for other resources to depend on [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) DependOn() terra.Reference {
	return terra.ReferenceResource(scsvavm)
}

// Dependencies returns the list of resources [SecurityCenterServerVulnerabilityAssessmentVirtualMachine] depends_on.
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) Dependencies() terra.Dependencies {
	return scsvavm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) LifecycleManagement() *terra.Lifecycle {
	return scsvavm.Lifecycle
}

// Attributes returns the attributes for [SecurityCenterServerVulnerabilityAssessmentVirtualMachine].
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) Attributes() securityCenterServerVulnerabilityAssessmentVirtualMachineAttributes {
	return securityCenterServerVulnerabilityAssessmentVirtualMachineAttributes{ref: terra.ReferenceResource(scsvavm)}
}

// ImportState imports the given attribute values into [SecurityCenterServerVulnerabilityAssessmentVirtualMachine]'s state.
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) ImportState(av io.Reader) error {
	scsvavm.state = &securityCenterServerVulnerabilityAssessmentVirtualMachineState{}
	if err := json.NewDecoder(av).Decode(scsvavm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", scsvavm.Type(), scsvavm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecurityCenterServerVulnerabilityAssessmentVirtualMachine] has state.
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) State() (*securityCenterServerVulnerabilityAssessmentVirtualMachineState, bool) {
	return scsvavm.state, scsvavm.state != nil
}

// StateMust returns the state for [SecurityCenterServerVulnerabilityAssessmentVirtualMachine]. Panics if the state is nil.
func (scsvavm *SecurityCenterServerVulnerabilityAssessmentVirtualMachine) StateMust() *securityCenterServerVulnerabilityAssessmentVirtualMachineState {
	if scsvavm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", scsvavm.Type(), scsvavm.LocalName()))
	}
	return scsvavm.state
}

// SecurityCenterServerVulnerabilityAssessmentVirtualMachineArgs contains the configurations for azurerm_security_center_server_vulnerability_assessment_virtual_machine.
type SecurityCenterServerVulnerabilityAssessmentVirtualMachineArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// VirtualMachineId: string, required
	VirtualMachineId terra.StringValue `hcl:"virtual_machine_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *securitycenterservervulnerabilityassessmentvirtualmachine.Timeouts `hcl:"timeouts,block"`
}
type securityCenterServerVulnerabilityAssessmentVirtualMachineAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_security_center_server_vulnerability_assessment_virtual_machine.
func (scsvavm securityCenterServerVulnerabilityAssessmentVirtualMachineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(scsvavm.ref.Append("id"))
}

// VirtualMachineId returns a reference to field virtual_machine_id of azurerm_security_center_server_vulnerability_assessment_virtual_machine.
func (scsvavm securityCenterServerVulnerabilityAssessmentVirtualMachineAttributes) VirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(scsvavm.ref.Append("virtual_machine_id"))
}

func (scsvavm securityCenterServerVulnerabilityAssessmentVirtualMachineAttributes) Timeouts() securitycenterservervulnerabilityassessmentvirtualmachine.TimeoutsAttributes {
	return terra.ReferenceAsSingle[securitycenterservervulnerabilityassessmentvirtualmachine.TimeoutsAttributes](scsvavm.ref.Append("timeouts"))
}

type securityCenterServerVulnerabilityAssessmentVirtualMachineState struct {
	Id               string                                                                   `json:"id"`
	VirtualMachineId string                                                                   `json:"virtual_machine_id"`
	Timeouts         *securitycenterservervulnerabilityassessmentvirtualmachine.TimeoutsState `json:"timeouts"`
}
