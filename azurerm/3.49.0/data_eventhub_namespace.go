// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataeventhubnamespace "github.com/golingon/terraproviders/azurerm/3.49.0/dataeventhubnamespace"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataEventhubNamespace(name string, args DataEventhubNamespaceArgs) *DataEventhubNamespace {
	return &DataEventhubNamespace{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEventhubNamespace)(nil)

type DataEventhubNamespace struct {
	Name string
	Args DataEventhubNamespaceArgs
}

func (en *DataEventhubNamespace) DataSource() string {
	return "azurerm_eventhub_namespace"
}

func (en *DataEventhubNamespace) LocalName() string {
	return en.Name
}

func (en *DataEventhubNamespace) Configuration() interface{} {
	return en.Args
}

func (en *DataEventhubNamespace) Attributes() dataEventhubNamespaceAttributes {
	return dataEventhubNamespaceAttributes{ref: terra.ReferenceDataResource(en)}
}

type DataEventhubNamespaceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dataeventhubnamespace.Timeouts `hcl:"timeouts,block"`
}
type dataEventhubNamespaceAttributes struct {
	ref terra.Reference
}

func (en dataEventhubNamespaceAttributes) AutoInflateEnabled() terra.BoolValue {
	return terra.ReferenceBool(en.ref.Append("auto_inflate_enabled"))
}

func (en dataEventhubNamespaceAttributes) Capacity() terra.NumberValue {
	return terra.ReferenceNumber(en.ref.Append("capacity"))
}

func (en dataEventhubNamespaceAttributes) DedicatedClusterId() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("dedicated_cluster_id"))
}

func (en dataEventhubNamespaceAttributes) DefaultPrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("default_primary_connection_string"))
}

func (en dataEventhubNamespaceAttributes) DefaultPrimaryConnectionStringAlias() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("default_primary_connection_string_alias"))
}

func (en dataEventhubNamespaceAttributes) DefaultPrimaryKey() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("default_primary_key"))
}

func (en dataEventhubNamespaceAttributes) DefaultSecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("default_secondary_connection_string"))
}

func (en dataEventhubNamespaceAttributes) DefaultSecondaryConnectionStringAlias() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("default_secondary_connection_string_alias"))
}

func (en dataEventhubNamespaceAttributes) DefaultSecondaryKey() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("default_secondary_key"))
}

func (en dataEventhubNamespaceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("id"))
}

func (en dataEventhubNamespaceAttributes) KafkaEnabled() terra.BoolValue {
	return terra.ReferenceBool(en.ref.Append("kafka_enabled"))
}

func (en dataEventhubNamespaceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("location"))
}

func (en dataEventhubNamespaceAttributes) MaximumThroughputUnits() terra.NumberValue {
	return terra.ReferenceNumber(en.ref.Append("maximum_throughput_units"))
}

func (en dataEventhubNamespaceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("name"))
}

func (en dataEventhubNamespaceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("resource_group_name"))
}

func (en dataEventhubNamespaceAttributes) Sku() terra.StringValue {
	return terra.ReferenceString(en.ref.Append("sku"))
}

func (en dataEventhubNamespaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](en.ref.Append("tags"))
}

func (en dataEventhubNamespaceAttributes) ZoneRedundant() terra.BoolValue {
	return terra.ReferenceBool(en.ref.Append("zone_redundant"))
}

func (en dataEventhubNamespaceAttributes) Timeouts() dataeventhubnamespace.TimeoutsAttributes {
	return terra.ReferenceSingle[dataeventhubnamespace.TimeoutsAttributes](en.ref.Append("timeouts"))
}
