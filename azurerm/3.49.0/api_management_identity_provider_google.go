// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementidentityprovidergoogle "github.com/golingon/terraproviders/azurerm/3.49.0/apimanagementidentityprovidergoogle"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiManagementIdentityProviderGoogle(name string, args ApiManagementIdentityProviderGoogleArgs) *ApiManagementIdentityProviderGoogle {
	return &ApiManagementIdentityProviderGoogle{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementIdentityProviderGoogle)(nil)

type ApiManagementIdentityProviderGoogle struct {
	Name  string
	Args  ApiManagementIdentityProviderGoogleArgs
	state *apiManagementIdentityProviderGoogleState
}

func (amipg *ApiManagementIdentityProviderGoogle) Type() string {
	return "azurerm_api_management_identity_provider_google"
}

func (amipg *ApiManagementIdentityProviderGoogle) LocalName() string {
	return amipg.Name
}

func (amipg *ApiManagementIdentityProviderGoogle) Configuration() interface{} {
	return amipg.Args
}

func (amipg *ApiManagementIdentityProviderGoogle) Attributes() apiManagementIdentityProviderGoogleAttributes {
	return apiManagementIdentityProviderGoogleAttributes{ref: terra.ReferenceResource(amipg)}
}

func (amipg *ApiManagementIdentityProviderGoogle) ImportState(av io.Reader) error {
	amipg.state = &apiManagementIdentityProviderGoogleState{}
	if err := json.NewDecoder(av).Decode(amipg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amipg.Type(), amipg.LocalName(), err)
	}
	return nil
}

func (amipg *ApiManagementIdentityProviderGoogle) State() (*apiManagementIdentityProviderGoogleState, bool) {
	return amipg.state, amipg.state != nil
}

func (amipg *ApiManagementIdentityProviderGoogle) StateMust() *apiManagementIdentityProviderGoogleState {
	if amipg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amipg.Type(), amipg.LocalName()))
	}
	return amipg.state
}

func (amipg *ApiManagementIdentityProviderGoogle) DependOn() terra.Reference {
	return terra.ReferenceResource(amipg)
}

type ApiManagementIdentityProviderGoogleArgs struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *apimanagementidentityprovidergoogle.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApiManagementIdentityProviderGoogle depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiManagementIdentityProviderGoogleAttributes struct {
	ref terra.Reference
}

func (amipg apiManagementIdentityProviderGoogleAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceString(amipg.ref.Append("api_management_name"))
}

func (amipg apiManagementIdentityProviderGoogleAttributes) ClientId() terra.StringValue {
	return terra.ReferenceString(amipg.ref.Append("client_id"))
}

func (amipg apiManagementIdentityProviderGoogleAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceString(amipg.ref.Append("client_secret"))
}

func (amipg apiManagementIdentityProviderGoogleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(amipg.ref.Append("id"))
}

func (amipg apiManagementIdentityProviderGoogleAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(amipg.ref.Append("resource_group_name"))
}

func (amipg apiManagementIdentityProviderGoogleAttributes) Timeouts() apimanagementidentityprovidergoogle.TimeoutsAttributes {
	return terra.ReferenceSingle[apimanagementidentityprovidergoogle.TimeoutsAttributes](amipg.ref.Append("timeouts"))
}

type apiManagementIdentityProviderGoogleState struct {
	ApiManagementName string                                             `json:"api_management_name"`
	ClientId          string                                             `json:"client_id"`
	ClientSecret      string                                             `json:"client_secret"`
	Id                string                                             `json:"id"`
	ResourceGroupName string                                             `json:"resource_group_name"`
	Timeouts          *apimanagementidentityprovidergoogle.TimeoutsState `json:"timeouts"`
}
