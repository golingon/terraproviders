// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	capacityreservationgroup "github.com/golingon/terraproviders/azurerm/3.49.0/capacityreservationgroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCapacityReservationGroup(name string, args CapacityReservationGroupArgs) *CapacityReservationGroup {
	return &CapacityReservationGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CapacityReservationGroup)(nil)

type CapacityReservationGroup struct {
	Name  string
	Args  CapacityReservationGroupArgs
	state *capacityReservationGroupState
}

func (crg *CapacityReservationGroup) Type() string {
	return "azurerm_capacity_reservation_group"
}

func (crg *CapacityReservationGroup) LocalName() string {
	return crg.Name
}

func (crg *CapacityReservationGroup) Configuration() interface{} {
	return crg.Args
}

func (crg *CapacityReservationGroup) Attributes() capacityReservationGroupAttributes {
	return capacityReservationGroupAttributes{ref: terra.ReferenceResource(crg)}
}

func (crg *CapacityReservationGroup) ImportState(av io.Reader) error {
	crg.state = &capacityReservationGroupState{}
	if err := json.NewDecoder(av).Decode(crg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", crg.Type(), crg.LocalName(), err)
	}
	return nil
}

func (crg *CapacityReservationGroup) State() (*capacityReservationGroupState, bool) {
	return crg.state, crg.state != nil
}

func (crg *CapacityReservationGroup) StateMust() *capacityReservationGroupState {
	if crg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", crg.Type(), crg.LocalName()))
	}
	return crg.state
}

func (crg *CapacityReservationGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(crg)
}

type CapacityReservationGroupArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Zones: set of string, optional
	Zones terra.SetValue[terra.StringValue] `hcl:"zones,attr"`
	// Timeouts: optional
	Timeouts *capacityreservationgroup.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CapacityReservationGroup depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type capacityReservationGroupAttributes struct {
	ref terra.Reference
}

func (crg capacityReservationGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(crg.ref.Append("id"))
}

func (crg capacityReservationGroupAttributes) Location() terra.StringValue {
	return terra.ReferenceString(crg.ref.Append("location"))
}

func (crg capacityReservationGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceString(crg.ref.Append("name"))
}

func (crg capacityReservationGroupAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(crg.ref.Append("resource_group_name"))
}

func (crg capacityReservationGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](crg.ref.Append("tags"))
}

func (crg capacityReservationGroupAttributes) Zones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](crg.ref.Append("zones"))
}

func (crg capacityReservationGroupAttributes) Timeouts() capacityreservationgroup.TimeoutsAttributes {
	return terra.ReferenceSingle[capacityreservationgroup.TimeoutsAttributes](crg.ref.Append("timeouts"))
}

type capacityReservationGroupState struct {
	Id                string                                  `json:"id"`
	Location          string                                  `json:"location"`
	Name              string                                  `json:"name"`
	ResourceGroupName string                                  `json:"resource_group_name"`
	Tags              map[string]string                       `json:"tags"`
	Zones             []string                                `json:"zones"`
	Timeouts          *capacityreservationgroup.TimeoutsState `json:"timeouts"`
}
