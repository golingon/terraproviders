// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	frontdoorcustomhttpsconfiguration "github.com/golingon/terraproviders/azurerm/3.49.0/frontdoorcustomhttpsconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewFrontdoorCustomHttpsConfiguration(name string, args FrontdoorCustomHttpsConfigurationArgs) *FrontdoorCustomHttpsConfiguration {
	return &FrontdoorCustomHttpsConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*FrontdoorCustomHttpsConfiguration)(nil)

type FrontdoorCustomHttpsConfiguration struct {
	Name  string
	Args  FrontdoorCustomHttpsConfigurationArgs
	state *frontdoorCustomHttpsConfigurationState
}

func (fchc *FrontdoorCustomHttpsConfiguration) Type() string {
	return "azurerm_frontdoor_custom_https_configuration"
}

func (fchc *FrontdoorCustomHttpsConfiguration) LocalName() string {
	return fchc.Name
}

func (fchc *FrontdoorCustomHttpsConfiguration) Configuration() interface{} {
	return fchc.Args
}

func (fchc *FrontdoorCustomHttpsConfiguration) Attributes() frontdoorCustomHttpsConfigurationAttributes {
	return frontdoorCustomHttpsConfigurationAttributes{ref: terra.ReferenceResource(fchc)}
}

func (fchc *FrontdoorCustomHttpsConfiguration) ImportState(av io.Reader) error {
	fchc.state = &frontdoorCustomHttpsConfigurationState{}
	if err := json.NewDecoder(av).Decode(fchc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", fchc.Type(), fchc.LocalName(), err)
	}
	return nil
}

func (fchc *FrontdoorCustomHttpsConfiguration) State() (*frontdoorCustomHttpsConfigurationState, bool) {
	return fchc.state, fchc.state != nil
}

func (fchc *FrontdoorCustomHttpsConfiguration) StateMust() *frontdoorCustomHttpsConfigurationState {
	if fchc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", fchc.Type(), fchc.LocalName()))
	}
	return fchc.state
}

func (fchc *FrontdoorCustomHttpsConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(fchc)
}

type FrontdoorCustomHttpsConfigurationArgs struct {
	// CustomHttpsProvisioningEnabled: bool, required
	CustomHttpsProvisioningEnabled terra.BoolValue `hcl:"custom_https_provisioning_enabled,attr" validate:"required"`
	// FrontendEndpointId: string, required
	FrontendEndpointId terra.StringValue `hcl:"frontend_endpoint_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// CustomHttpsConfiguration: optional
	CustomHttpsConfiguration *frontdoorcustomhttpsconfiguration.CustomHttpsConfiguration `hcl:"custom_https_configuration,block"`
	// Timeouts: optional
	Timeouts *frontdoorcustomhttpsconfiguration.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that FrontdoorCustomHttpsConfiguration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type frontdoorCustomHttpsConfigurationAttributes struct {
	ref terra.Reference
}

func (fchc frontdoorCustomHttpsConfigurationAttributes) CustomHttpsProvisioningEnabled() terra.BoolValue {
	return terra.ReferenceBool(fchc.ref.Append("custom_https_provisioning_enabled"))
}

func (fchc frontdoorCustomHttpsConfigurationAttributes) FrontendEndpointId() terra.StringValue {
	return terra.ReferenceString(fchc.ref.Append("frontend_endpoint_id"))
}

func (fchc frontdoorCustomHttpsConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(fchc.ref.Append("id"))
}

func (fchc frontdoorCustomHttpsConfigurationAttributes) CustomHttpsConfiguration() terra.ListValue[frontdoorcustomhttpsconfiguration.CustomHttpsConfigurationAttributes] {
	return terra.ReferenceList[frontdoorcustomhttpsconfiguration.CustomHttpsConfigurationAttributes](fchc.ref.Append("custom_https_configuration"))
}

func (fchc frontdoorCustomHttpsConfigurationAttributes) Timeouts() frontdoorcustomhttpsconfiguration.TimeoutsAttributes {
	return terra.ReferenceSingle[frontdoorcustomhttpsconfiguration.TimeoutsAttributes](fchc.ref.Append("timeouts"))
}

type frontdoorCustomHttpsConfigurationState struct {
	CustomHttpsProvisioningEnabled bool                                                              `json:"custom_https_provisioning_enabled"`
	FrontendEndpointId             string                                                            `json:"frontend_endpoint_id"`
	Id                             string                                                            `json:"id"`
	CustomHttpsConfiguration       []frontdoorcustomhttpsconfiguration.CustomHttpsConfigurationState `json:"custom_https_configuration"`
	Timeouts                       *frontdoorcustomhttpsconfiguration.TimeoutsState                  `json:"timeouts"`
}
