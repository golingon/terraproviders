// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	mobilenetwork "github.com/golingon/terraproviders/azurerm/3.49.0/mobilenetwork"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewMobileNetwork(name string, args MobileNetworkArgs) *MobileNetwork {
	return &MobileNetwork{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MobileNetwork)(nil)

type MobileNetwork struct {
	Name  string
	Args  MobileNetworkArgs
	state *mobileNetworkState
}

func (mn *MobileNetwork) Type() string {
	return "azurerm_mobile_network"
}

func (mn *MobileNetwork) LocalName() string {
	return mn.Name
}

func (mn *MobileNetwork) Configuration() interface{} {
	return mn.Args
}

func (mn *MobileNetwork) Attributes() mobileNetworkAttributes {
	return mobileNetworkAttributes{ref: terra.ReferenceResource(mn)}
}

func (mn *MobileNetwork) ImportState(av io.Reader) error {
	mn.state = &mobileNetworkState{}
	if err := json.NewDecoder(av).Decode(mn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mn.Type(), mn.LocalName(), err)
	}
	return nil
}

func (mn *MobileNetwork) State() (*mobileNetworkState, bool) {
	return mn.state, mn.state != nil
}

func (mn *MobileNetwork) StateMust() *mobileNetworkState {
	if mn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mn.Type(), mn.LocalName()))
	}
	return mn.state
}

func (mn *MobileNetwork) DependOn() terra.Reference {
	return terra.ReferenceResource(mn)
}

type MobileNetworkArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MobileCountryCode: string, required
	MobileCountryCode terra.StringValue `hcl:"mobile_country_code,attr" validate:"required"`
	// MobileNetworkCode: string, required
	MobileNetworkCode terra.StringValue `hcl:"mobile_network_code,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *mobilenetwork.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that MobileNetwork depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type mobileNetworkAttributes struct {
	ref terra.Reference
}

func (mn mobileNetworkAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("id"))
}

func (mn mobileNetworkAttributes) Location() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("location"))
}

func (mn mobileNetworkAttributes) MobileCountryCode() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("mobile_country_code"))
}

func (mn mobileNetworkAttributes) MobileNetworkCode() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("mobile_network_code"))
}

func (mn mobileNetworkAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("name"))
}

func (mn mobileNetworkAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("resource_group_name"))
}

func (mn mobileNetworkAttributes) ServiceKey() terra.StringValue {
	return terra.ReferenceString(mn.ref.Append("service_key"))
}

func (mn mobileNetworkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mn.ref.Append("tags"))
}

func (mn mobileNetworkAttributes) Timeouts() mobilenetwork.TimeoutsAttributes {
	return terra.ReferenceSingle[mobilenetwork.TimeoutsAttributes](mn.ref.Append("timeouts"))
}

type mobileNetworkState struct {
	Id                string                       `json:"id"`
	Location          string                       `json:"location"`
	MobileCountryCode string                       `json:"mobile_country_code"`
	MobileNetworkCode string                       `json:"mobile_network_code"`
	Name              string                       `json:"name"`
	ResourceGroupName string                       `json:"resource_group_name"`
	ServiceKey        string                       `json:"service_key"`
	Tags              map[string]string            `json:"tags"`
	Timeouts          *mobilenetwork.TimeoutsState `json:"timeouts"`
}
