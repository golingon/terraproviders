// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package notificationhub

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ApnsCredential struct {
	// ApplicationMode: string, required
	ApplicationMode terra.StringValue `hcl:"application_mode,attr" validate:"required"`
	// BundleId: string, required
	BundleId terra.StringValue `hcl:"bundle_id,attr" validate:"required"`
	// KeyId: string, required
	KeyId terra.StringValue `hcl:"key_id,attr" validate:"required"`
	// TeamId: string, required
	TeamId terra.StringValue `hcl:"team_id,attr" validate:"required"`
	// Token: string, required
	Token terra.StringValue `hcl:"token,attr" validate:"required"`
}

type GcmCredential struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ApnsCredentialAttributes struct {
	ref terra.Reference
}

func (ac ApnsCredentialAttributes) InternalRef() terra.Reference {
	return ac.ref
}

func (ac ApnsCredentialAttributes) InternalWithRef(ref terra.Reference) ApnsCredentialAttributes {
	return ApnsCredentialAttributes{ref: ref}
}

func (ac ApnsCredentialAttributes) InternalTokens() hclwrite.Tokens {
	return ac.ref.InternalTokens()
}

func (ac ApnsCredentialAttributes) ApplicationMode() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("application_mode"))
}

func (ac ApnsCredentialAttributes) BundleId() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("bundle_id"))
}

func (ac ApnsCredentialAttributes) KeyId() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("key_id"))
}

func (ac ApnsCredentialAttributes) TeamId() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("team_id"))
}

func (ac ApnsCredentialAttributes) Token() terra.StringValue {
	return terra.ReferenceString(ac.ref.Append("token"))
}

type GcmCredentialAttributes struct {
	ref terra.Reference
}

func (gc GcmCredentialAttributes) InternalRef() terra.Reference {
	return gc.ref
}

func (gc GcmCredentialAttributes) InternalWithRef(ref terra.Reference) GcmCredentialAttributes {
	return GcmCredentialAttributes{ref: ref}
}

func (gc GcmCredentialAttributes) InternalTokens() hclwrite.Tokens {
	return gc.ref.InternalTokens()
}

func (gc GcmCredentialAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceString(gc.ref.Append("api_key"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type ApnsCredentialState struct {
	ApplicationMode string `json:"application_mode"`
	BundleId        string `json:"bundle_id"`
	KeyId           string `json:"key_id"`
	TeamId          string `json:"team_id"`
	Token           string `json:"token"`
}

type GcmCredentialState struct {
	ApiKey string `json:"api_key"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
