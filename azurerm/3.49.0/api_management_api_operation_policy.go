// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementapioperationpolicy "github.com/golingon/terraproviders/azurerm/3.49.0/apimanagementapioperationpolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiManagementApiOperationPolicy(name string, args ApiManagementApiOperationPolicyArgs) *ApiManagementApiOperationPolicy {
	return &ApiManagementApiOperationPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementApiOperationPolicy)(nil)

type ApiManagementApiOperationPolicy struct {
	Name  string
	Args  ApiManagementApiOperationPolicyArgs
	state *apiManagementApiOperationPolicyState
}

func (amaop *ApiManagementApiOperationPolicy) Type() string {
	return "azurerm_api_management_api_operation_policy"
}

func (amaop *ApiManagementApiOperationPolicy) LocalName() string {
	return amaop.Name
}

func (amaop *ApiManagementApiOperationPolicy) Configuration() interface{} {
	return amaop.Args
}

func (amaop *ApiManagementApiOperationPolicy) Attributes() apiManagementApiOperationPolicyAttributes {
	return apiManagementApiOperationPolicyAttributes{ref: terra.ReferenceResource(amaop)}
}

func (amaop *ApiManagementApiOperationPolicy) ImportState(av io.Reader) error {
	amaop.state = &apiManagementApiOperationPolicyState{}
	if err := json.NewDecoder(av).Decode(amaop.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amaop.Type(), amaop.LocalName(), err)
	}
	return nil
}

func (amaop *ApiManagementApiOperationPolicy) State() (*apiManagementApiOperationPolicyState, bool) {
	return amaop.state, amaop.state != nil
}

func (amaop *ApiManagementApiOperationPolicy) StateMust() *apiManagementApiOperationPolicyState {
	if amaop.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amaop.Type(), amaop.LocalName()))
	}
	return amaop.state
}

func (amaop *ApiManagementApiOperationPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(amaop)
}

type ApiManagementApiOperationPolicyArgs struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// ApiName: string, required
	ApiName terra.StringValue `hcl:"api_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OperationId: string, required
	OperationId terra.StringValue `hcl:"operation_id,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// XmlContent: string, optional
	XmlContent terra.StringValue `hcl:"xml_content,attr"`
	// XmlLink: string, optional
	XmlLink terra.StringValue `hcl:"xml_link,attr"`
	// Timeouts: optional
	Timeouts *apimanagementapioperationpolicy.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApiManagementApiOperationPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiManagementApiOperationPolicyAttributes struct {
	ref terra.Reference
}

func (amaop apiManagementApiOperationPolicyAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("api_management_name"))
}

func (amaop apiManagementApiOperationPolicyAttributes) ApiName() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("api_name"))
}

func (amaop apiManagementApiOperationPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("id"))
}

func (amaop apiManagementApiOperationPolicyAttributes) OperationId() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("operation_id"))
}

func (amaop apiManagementApiOperationPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("resource_group_name"))
}

func (amaop apiManagementApiOperationPolicyAttributes) XmlContent() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("xml_content"))
}

func (amaop apiManagementApiOperationPolicyAttributes) XmlLink() terra.StringValue {
	return terra.ReferenceString(amaop.ref.Append("xml_link"))
}

func (amaop apiManagementApiOperationPolicyAttributes) Timeouts() apimanagementapioperationpolicy.TimeoutsAttributes {
	return terra.ReferenceSingle[apimanagementapioperationpolicy.TimeoutsAttributes](amaop.ref.Append("timeouts"))
}

type apiManagementApiOperationPolicyState struct {
	ApiManagementName string                                         `json:"api_management_name"`
	ApiName           string                                         `json:"api_name"`
	Id                string                                         `json:"id"`
	OperationId       string                                         `json:"operation_id"`
	ResourceGroupName string                                         `json:"resource_group_name"`
	XmlContent        string                                         `json:"xml_content"`
	XmlLink           string                                         `json:"xml_link"`
	Timeouts          *apimanagementapioperationpolicy.TimeoutsState `json:"timeouts"`
}
