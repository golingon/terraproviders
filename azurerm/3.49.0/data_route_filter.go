// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataroutefilter "github.com/golingon/terraproviders/azurerm/3.49.0/dataroutefilter"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataRouteFilter(name string, args DataRouteFilterArgs) *DataRouteFilter {
	return &DataRouteFilter{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataRouteFilter)(nil)

type DataRouteFilter struct {
	Name string
	Args DataRouteFilterArgs
}

func (rf *DataRouteFilter) DataSource() string {
	return "azurerm_route_filter"
}

func (rf *DataRouteFilter) LocalName() string {
	return rf.Name
}

func (rf *DataRouteFilter) Configuration() interface{} {
	return rf.Args
}

func (rf *DataRouteFilter) Attributes() dataRouteFilterAttributes {
	return dataRouteFilterAttributes{ref: terra.ReferenceDataResource(rf)}
}

type DataRouteFilterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Rule: min=0
	Rule []dataroutefilter.Rule `hcl:"rule,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataroutefilter.Timeouts `hcl:"timeouts,block"`
}
type dataRouteFilterAttributes struct {
	ref terra.Reference
}

func (rf dataRouteFilterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rf.ref.Append("id"))
}

func (rf dataRouteFilterAttributes) Location() terra.StringValue {
	return terra.ReferenceString(rf.ref.Append("location"))
}

func (rf dataRouteFilterAttributes) Name() terra.StringValue {
	return terra.ReferenceString(rf.ref.Append("name"))
}

func (rf dataRouteFilterAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(rf.ref.Append("resource_group_name"))
}

func (rf dataRouteFilterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](rf.ref.Append("tags"))
}

func (rf dataRouteFilterAttributes) Rule() terra.ListValue[dataroutefilter.RuleAttributes] {
	return terra.ReferenceList[dataroutefilter.RuleAttributes](rf.ref.Append("rule"))
}

func (rf dataRouteFilterAttributes) Timeouts() dataroutefilter.TimeoutsAttributes {
	return terra.ReferenceSingle[dataroutefilter.TimeoutsAttributes](rf.ref.Append("timeouts"))
}
