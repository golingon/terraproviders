// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package confidentialledger

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type AzureadBasedServicePrincipal struct {
	// LedgerRoleName: string, required
	LedgerRoleName terra.StringValue `hcl:"ledger_role_name,attr" validate:"required"`
	// PrincipalId: string, required
	PrincipalId terra.StringValue `hcl:"principal_id,attr" validate:"required"`
	// TenantId: string, required
	TenantId terra.StringValue `hcl:"tenant_id,attr" validate:"required"`
}

type CertificateBasedSecurityPrincipal struct {
	// LedgerRoleName: string, required
	LedgerRoleName terra.StringValue `hcl:"ledger_role_name,attr" validate:"required"`
	// PemPublicKey: string, required
	PemPublicKey terra.StringValue `hcl:"pem_public_key,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AzureadBasedServicePrincipalAttributes struct {
	ref terra.Reference
}

func (absp AzureadBasedServicePrincipalAttributes) InternalRef() terra.Reference {
	return absp.ref
}

func (absp AzureadBasedServicePrincipalAttributes) InternalWithRef(ref terra.Reference) AzureadBasedServicePrincipalAttributes {
	return AzureadBasedServicePrincipalAttributes{ref: ref}
}

func (absp AzureadBasedServicePrincipalAttributes) InternalTokens() hclwrite.Tokens {
	return absp.ref.InternalTokens()
}

func (absp AzureadBasedServicePrincipalAttributes) LedgerRoleName() terra.StringValue {
	return terra.ReferenceString(absp.ref.Append("ledger_role_name"))
}

func (absp AzureadBasedServicePrincipalAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceString(absp.ref.Append("principal_id"))
}

func (absp AzureadBasedServicePrincipalAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(absp.ref.Append("tenant_id"))
}

type CertificateBasedSecurityPrincipalAttributes struct {
	ref terra.Reference
}

func (cbsp CertificateBasedSecurityPrincipalAttributes) InternalRef() terra.Reference {
	return cbsp.ref
}

func (cbsp CertificateBasedSecurityPrincipalAttributes) InternalWithRef(ref terra.Reference) CertificateBasedSecurityPrincipalAttributes {
	return CertificateBasedSecurityPrincipalAttributes{ref: ref}
}

func (cbsp CertificateBasedSecurityPrincipalAttributes) InternalTokens() hclwrite.Tokens {
	return cbsp.ref.InternalTokens()
}

func (cbsp CertificateBasedSecurityPrincipalAttributes) LedgerRoleName() terra.StringValue {
	return terra.ReferenceString(cbsp.ref.Append("ledger_role_name"))
}

func (cbsp CertificateBasedSecurityPrincipalAttributes) PemPublicKey() terra.StringValue {
	return terra.ReferenceString(cbsp.ref.Append("pem_public_key"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type AzureadBasedServicePrincipalState struct {
	LedgerRoleName string `json:"ledger_role_name"`
	PrincipalId    string `json:"principal_id"`
	TenantId       string `json:"tenant_id"`
}

type CertificateBasedSecurityPrincipalState struct {
	LedgerRoleName string `json:"ledger_role_name"`
	PemPublicKey   string `json:"pem_public_key"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
