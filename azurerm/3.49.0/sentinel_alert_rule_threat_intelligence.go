// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentinelalertrulethreatintelligence "github.com/golingon/terraproviders/azurerm/3.49.0/sentinelalertrulethreatintelligence"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelAlertRuleThreatIntelligence(name string, args SentinelAlertRuleThreatIntelligenceArgs) *SentinelAlertRuleThreatIntelligence {
	return &SentinelAlertRuleThreatIntelligence{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelAlertRuleThreatIntelligence)(nil)

type SentinelAlertRuleThreatIntelligence struct {
	Name  string
	Args  SentinelAlertRuleThreatIntelligenceArgs
	state *sentinelAlertRuleThreatIntelligenceState
}

func (sarti *SentinelAlertRuleThreatIntelligence) Type() string {
	return "azurerm_sentinel_alert_rule_threat_intelligence"
}

func (sarti *SentinelAlertRuleThreatIntelligence) LocalName() string {
	return sarti.Name
}

func (sarti *SentinelAlertRuleThreatIntelligence) Configuration() interface{} {
	return sarti.Args
}

func (sarti *SentinelAlertRuleThreatIntelligence) Attributes() sentinelAlertRuleThreatIntelligenceAttributes {
	return sentinelAlertRuleThreatIntelligenceAttributes{ref: terra.ReferenceResource(sarti)}
}

func (sarti *SentinelAlertRuleThreatIntelligence) ImportState(av io.Reader) error {
	sarti.state = &sentinelAlertRuleThreatIntelligenceState{}
	if err := json.NewDecoder(av).Decode(sarti.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sarti.Type(), sarti.LocalName(), err)
	}
	return nil
}

func (sarti *SentinelAlertRuleThreatIntelligence) State() (*sentinelAlertRuleThreatIntelligenceState, bool) {
	return sarti.state, sarti.state != nil
}

func (sarti *SentinelAlertRuleThreatIntelligence) StateMust() *sentinelAlertRuleThreatIntelligenceState {
	if sarti.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sarti.Type(), sarti.LocalName()))
	}
	return sarti.state
}

func (sarti *SentinelAlertRuleThreatIntelligence) DependOn() terra.Reference {
	return terra.ReferenceResource(sarti)
}

type SentinelAlertRuleThreatIntelligenceArgs struct {
	// AlertRuleTemplateGuid: string, required
	AlertRuleTemplateGuid terra.StringValue `hcl:"alert_rule_template_guid,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *sentinelalertrulethreatintelligence.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelAlertRuleThreatIntelligence depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelAlertRuleThreatIntelligenceAttributes struct {
	ref terra.Reference
}

func (sarti sentinelAlertRuleThreatIntelligenceAttributes) AlertRuleTemplateGuid() terra.StringValue {
	return terra.ReferenceString(sarti.ref.Append("alert_rule_template_guid"))
}

func (sarti sentinelAlertRuleThreatIntelligenceAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(sarti.ref.Append("enabled"))
}

func (sarti sentinelAlertRuleThreatIntelligenceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sarti.ref.Append("id"))
}

func (sarti sentinelAlertRuleThreatIntelligenceAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sarti.ref.Append("log_analytics_workspace_id"))
}

func (sarti sentinelAlertRuleThreatIntelligenceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sarti.ref.Append("name"))
}

func (sarti sentinelAlertRuleThreatIntelligenceAttributes) Timeouts() sentinelalertrulethreatintelligence.TimeoutsAttributes {
	return terra.ReferenceSingle[sentinelalertrulethreatintelligence.TimeoutsAttributes](sarti.ref.Append("timeouts"))
}

type sentinelAlertRuleThreatIntelligenceState struct {
	AlertRuleTemplateGuid   string                                             `json:"alert_rule_template_guid"`
	Enabled                 bool                                               `json:"enabled"`
	Id                      string                                             `json:"id"`
	LogAnalyticsWorkspaceId string                                             `json:"log_analytics_workspace_id"`
	Name                    string                                             `json:"name"`
	Timeouts                *sentinelalertrulethreatintelligence.TimeoutsState `json:"timeouts"`
}
