// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datakeyvaultcertificateissuer "github.com/golingon/terraproviders/azurerm/3.49.0/datakeyvaultcertificateissuer"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKeyVaultCertificateIssuer(name string, args DataKeyVaultCertificateIssuerArgs) *DataKeyVaultCertificateIssuer {
	return &DataKeyVaultCertificateIssuer{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKeyVaultCertificateIssuer)(nil)

type DataKeyVaultCertificateIssuer struct {
	Name string
	Args DataKeyVaultCertificateIssuerArgs
}

func (kvci *DataKeyVaultCertificateIssuer) DataSource() string {
	return "azurerm_key_vault_certificate_issuer"
}

func (kvci *DataKeyVaultCertificateIssuer) LocalName() string {
	return kvci.Name
}

func (kvci *DataKeyVaultCertificateIssuer) Configuration() interface{} {
	return kvci.Args
}

func (kvci *DataKeyVaultCertificateIssuer) Attributes() dataKeyVaultCertificateIssuerAttributes {
	return dataKeyVaultCertificateIssuerAttributes{ref: terra.ReferenceDataResource(kvci)}
}

type DataKeyVaultCertificateIssuerArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultId: string, required
	KeyVaultId terra.StringValue `hcl:"key_vault_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Admin: min=0
	Admin []datakeyvaultcertificateissuer.Admin `hcl:"admin,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datakeyvaultcertificateissuer.Timeouts `hcl:"timeouts,block"`
}
type dataKeyVaultCertificateIssuerAttributes struct {
	ref terra.Reference
}

func (kvci dataKeyVaultCertificateIssuerAttributes) AccountId() terra.StringValue {
	return terra.ReferenceString(kvci.ref.Append("account_id"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kvci.ref.Append("id"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) KeyVaultId() terra.StringValue {
	return terra.ReferenceString(kvci.ref.Append("key_vault_id"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kvci.ref.Append("name"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) OrgId() terra.StringValue {
	return terra.ReferenceString(kvci.ref.Append("org_id"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceString(kvci.ref.Append("provider_name"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) Admin() terra.ListValue[datakeyvaultcertificateissuer.AdminAttributes] {
	return terra.ReferenceList[datakeyvaultcertificateissuer.AdminAttributes](kvci.ref.Append("admin"))
}

func (kvci dataKeyVaultCertificateIssuerAttributes) Timeouts() datakeyvaultcertificateissuer.TimeoutsAttributes {
	return terra.ReferenceSingle[datakeyvaultcertificateissuer.TimeoutsAttributes](kvci.ref.Append("timeouts"))
}
