// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	synapseintegrationruntimeselfhosted "github.com/golingon/terraproviders/azurerm/3.49.0/synapseintegrationruntimeselfhosted"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSynapseIntegrationRuntimeSelfHosted(name string, args SynapseIntegrationRuntimeSelfHostedArgs) *SynapseIntegrationRuntimeSelfHosted {
	return &SynapseIntegrationRuntimeSelfHosted{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SynapseIntegrationRuntimeSelfHosted)(nil)

type SynapseIntegrationRuntimeSelfHosted struct {
	Name  string
	Args  SynapseIntegrationRuntimeSelfHostedArgs
	state *synapseIntegrationRuntimeSelfHostedState
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) Type() string {
	return "azurerm_synapse_integration_runtime_self_hosted"
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) LocalName() string {
	return sirsh.Name
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) Configuration() interface{} {
	return sirsh.Args
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) Attributes() synapseIntegrationRuntimeSelfHostedAttributes {
	return synapseIntegrationRuntimeSelfHostedAttributes{ref: terra.ReferenceResource(sirsh)}
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) ImportState(av io.Reader) error {
	sirsh.state = &synapseIntegrationRuntimeSelfHostedState{}
	if err := json.NewDecoder(av).Decode(sirsh.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sirsh.Type(), sirsh.LocalName(), err)
	}
	return nil
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) State() (*synapseIntegrationRuntimeSelfHostedState, bool) {
	return sirsh.state, sirsh.state != nil
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) StateMust() *synapseIntegrationRuntimeSelfHostedState {
	if sirsh.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sirsh.Type(), sirsh.LocalName()))
	}
	return sirsh.state
}

func (sirsh *SynapseIntegrationRuntimeSelfHosted) DependOn() terra.Reference {
	return terra.ReferenceResource(sirsh)
}

type SynapseIntegrationRuntimeSelfHostedArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SynapseWorkspaceId: string, required
	SynapseWorkspaceId terra.StringValue `hcl:"synapse_workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *synapseintegrationruntimeselfhosted.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SynapseIntegrationRuntimeSelfHosted depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type synapseIntegrationRuntimeSelfHostedAttributes struct {
	ref terra.Reference
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) AuthorizationKeyPrimary() terra.StringValue {
	return terra.ReferenceString(sirsh.ref.Append("authorization_key_primary"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) AuthorizationKeySecondary() terra.StringValue {
	return terra.ReferenceString(sirsh.ref.Append("authorization_key_secondary"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sirsh.ref.Append("description"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sirsh.ref.Append("id"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sirsh.ref.Append("name"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) SynapseWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sirsh.ref.Append("synapse_workspace_id"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Timeouts() synapseintegrationruntimeselfhosted.TimeoutsAttributes {
	return terra.ReferenceSingle[synapseintegrationruntimeselfhosted.TimeoutsAttributes](sirsh.ref.Append("timeouts"))
}

type synapseIntegrationRuntimeSelfHostedState struct {
	AuthorizationKeyPrimary   string                                             `json:"authorization_key_primary"`
	AuthorizationKeySecondary string                                             `json:"authorization_key_secondary"`
	Description               string                                             `json:"description"`
	Id                        string                                             `json:"id"`
	Name                      string                                             `json:"name"`
	SynapseWorkspaceId        string                                             `json:"synapse_workspace_id"`
	Timeouts                  *synapseintegrationruntimeselfhosted.TimeoutsState `json:"timeouts"`
}
