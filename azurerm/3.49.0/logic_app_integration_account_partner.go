// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	logicappintegrationaccountpartner "github.com/golingon/terraproviders/azurerm/3.49.0/logicappintegrationaccountpartner"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLogicAppIntegrationAccountPartner(name string, args LogicAppIntegrationAccountPartnerArgs) *LogicAppIntegrationAccountPartner {
	return &LogicAppIntegrationAccountPartner{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LogicAppIntegrationAccountPartner)(nil)

type LogicAppIntegrationAccountPartner struct {
	Name  string
	Args  LogicAppIntegrationAccountPartnerArgs
	state *logicAppIntegrationAccountPartnerState
}

func (laiap *LogicAppIntegrationAccountPartner) Type() string {
	return "azurerm_logic_app_integration_account_partner"
}

func (laiap *LogicAppIntegrationAccountPartner) LocalName() string {
	return laiap.Name
}

func (laiap *LogicAppIntegrationAccountPartner) Configuration() interface{} {
	return laiap.Args
}

func (laiap *LogicAppIntegrationAccountPartner) Attributes() logicAppIntegrationAccountPartnerAttributes {
	return logicAppIntegrationAccountPartnerAttributes{ref: terra.ReferenceResource(laiap)}
}

func (laiap *LogicAppIntegrationAccountPartner) ImportState(av io.Reader) error {
	laiap.state = &logicAppIntegrationAccountPartnerState{}
	if err := json.NewDecoder(av).Decode(laiap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", laiap.Type(), laiap.LocalName(), err)
	}
	return nil
}

func (laiap *LogicAppIntegrationAccountPartner) State() (*logicAppIntegrationAccountPartnerState, bool) {
	return laiap.state, laiap.state != nil
}

func (laiap *LogicAppIntegrationAccountPartner) StateMust() *logicAppIntegrationAccountPartnerState {
	if laiap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", laiap.Type(), laiap.LocalName()))
	}
	return laiap.state
}

func (laiap *LogicAppIntegrationAccountPartner) DependOn() terra.Reference {
	return terra.ReferenceResource(laiap)
}

type LogicAppIntegrationAccountPartnerArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationAccountName: string, required
	IntegrationAccountName terra.StringValue `hcl:"integration_account_name,attr" validate:"required"`
	// Metadata: string, optional
	Metadata terra.StringValue `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// BusinessIdentity: min=1
	BusinessIdentity []logicappintegrationaccountpartner.BusinessIdentity `hcl:"business_identity,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *logicappintegrationaccountpartner.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that LogicAppIntegrationAccountPartner depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type logicAppIntegrationAccountPartnerAttributes struct {
	ref terra.Reference
}

func (laiap logicAppIntegrationAccountPartnerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(laiap.ref.Append("id"))
}

func (laiap logicAppIntegrationAccountPartnerAttributes) IntegrationAccountName() terra.StringValue {
	return terra.ReferenceString(laiap.ref.Append("integration_account_name"))
}

func (laiap logicAppIntegrationAccountPartnerAttributes) Metadata() terra.StringValue {
	return terra.ReferenceString(laiap.ref.Append("metadata"))
}

func (laiap logicAppIntegrationAccountPartnerAttributes) Name() terra.StringValue {
	return terra.ReferenceString(laiap.ref.Append("name"))
}

func (laiap logicAppIntegrationAccountPartnerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(laiap.ref.Append("resource_group_name"))
}

func (laiap logicAppIntegrationAccountPartnerAttributes) BusinessIdentity() terra.SetValue[logicappintegrationaccountpartner.BusinessIdentityAttributes] {
	return terra.ReferenceSet[logicappintegrationaccountpartner.BusinessIdentityAttributes](laiap.ref.Append("business_identity"))
}

func (laiap logicAppIntegrationAccountPartnerAttributes) Timeouts() logicappintegrationaccountpartner.TimeoutsAttributes {
	return terra.ReferenceSingle[logicappintegrationaccountpartner.TimeoutsAttributes](laiap.ref.Append("timeouts"))
}

type logicAppIntegrationAccountPartnerState struct {
	Id                     string                                                    `json:"id"`
	IntegrationAccountName string                                                    `json:"integration_account_name"`
	Metadata               string                                                    `json:"metadata"`
	Name                   string                                                    `json:"name"`
	ResourceGroupName      string                                                    `json:"resource_group_name"`
	BusinessIdentity       []logicappintegrationaccountpartner.BusinessIdentityState `json:"business_identity"`
	Timeouts               *logicappintegrationaccountpartner.TimeoutsState          `json:"timeouts"`
}
