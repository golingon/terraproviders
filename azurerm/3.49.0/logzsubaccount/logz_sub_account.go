// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package logzsubaccount

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type User struct {
	// Email: string, required
	Email terra.StringValue `hcl:"email,attr" validate:"required"`
	// FirstName: string, required
	FirstName terra.StringValue `hcl:"first_name,attr" validate:"required"`
	// LastName: string, required
	LastName terra.StringValue `hcl:"last_name,attr" validate:"required"`
	// PhoneNumber: string, required
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type UserAttributes struct {
	ref terra.Reference
}

func (u UserAttributes) InternalRef() terra.Reference {
	return u.ref
}

func (u UserAttributes) InternalWithRef(ref terra.Reference) UserAttributes {
	return UserAttributes{ref: ref}
}

func (u UserAttributes) InternalTokens() hclwrite.Tokens {
	return u.ref.InternalTokens()
}

func (u UserAttributes) Email() terra.StringValue {
	return terra.ReferenceString(u.ref.Append("email"))
}

func (u UserAttributes) FirstName() terra.StringValue {
	return terra.ReferenceString(u.ref.Append("first_name"))
}

func (u UserAttributes) LastName() terra.StringValue {
	return terra.ReferenceString(u.ref.Append("last_name"))
}

func (u UserAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceString(u.ref.Append("phone_number"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}

type UserState struct {
	Email       string `json:"email"`
	FirstName   string `json:"first_name"`
	LastName    string `json:"last_name"`
	PhoneNumber string `json:"phone_number"`
}
