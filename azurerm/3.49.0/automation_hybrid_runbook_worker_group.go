// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	automationhybridrunbookworkergroup "github.com/golingon/terraproviders/azurerm/3.49.0/automationhybridrunbookworkergroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAutomationHybridRunbookWorkerGroup(name string, args AutomationHybridRunbookWorkerGroupArgs) *AutomationHybridRunbookWorkerGroup {
	return &AutomationHybridRunbookWorkerGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AutomationHybridRunbookWorkerGroup)(nil)

type AutomationHybridRunbookWorkerGroup struct {
	Name  string
	Args  AutomationHybridRunbookWorkerGroupArgs
	state *automationHybridRunbookWorkerGroupState
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) Type() string {
	return "azurerm_automation_hybrid_runbook_worker_group"
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) LocalName() string {
	return ahrwg.Name
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) Configuration() interface{} {
	return ahrwg.Args
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) Attributes() automationHybridRunbookWorkerGroupAttributes {
	return automationHybridRunbookWorkerGroupAttributes{ref: terra.ReferenceResource(ahrwg)}
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) ImportState(av io.Reader) error {
	ahrwg.state = &automationHybridRunbookWorkerGroupState{}
	if err := json.NewDecoder(av).Decode(ahrwg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ahrwg.Type(), ahrwg.LocalName(), err)
	}
	return nil
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) State() (*automationHybridRunbookWorkerGroupState, bool) {
	return ahrwg.state, ahrwg.state != nil
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) StateMust() *automationHybridRunbookWorkerGroupState {
	if ahrwg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ahrwg.Type(), ahrwg.LocalName()))
	}
	return ahrwg.state
}

func (ahrwg *AutomationHybridRunbookWorkerGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(ahrwg)
}

type AutomationHybridRunbookWorkerGroupArgs struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// CredentialName: string, optional
	CredentialName terra.StringValue `hcl:"credential_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *automationhybridrunbookworkergroup.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that AutomationHybridRunbookWorkerGroup depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type automationHybridRunbookWorkerGroupAttributes struct {
	ref terra.Reference
}

func (ahrwg automationHybridRunbookWorkerGroupAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceString(ahrwg.ref.Append("automation_account_name"))
}

func (ahrwg automationHybridRunbookWorkerGroupAttributes) CredentialName() terra.StringValue {
	return terra.ReferenceString(ahrwg.ref.Append("credential_name"))
}

func (ahrwg automationHybridRunbookWorkerGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ahrwg.ref.Append("id"))
}

func (ahrwg automationHybridRunbookWorkerGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ahrwg.ref.Append("name"))
}

func (ahrwg automationHybridRunbookWorkerGroupAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ahrwg.ref.Append("resource_group_name"))
}

func (ahrwg automationHybridRunbookWorkerGroupAttributes) Timeouts() automationhybridrunbookworkergroup.TimeoutsAttributes {
	return terra.ReferenceSingle[automationhybridrunbookworkergroup.TimeoutsAttributes](ahrwg.ref.Append("timeouts"))
}

type automationHybridRunbookWorkerGroupState struct {
	AutomationAccountName string                                            `json:"automation_account_name"`
	CredentialName        string                                            `json:"credential_name"`
	Id                    string                                            `json:"id"`
	Name                  string                                            `json:"name"`
	ResourceGroupName     string                                            `json:"resource_group_name"`
	Timeouts              *automationhybridrunbookworkergroup.TimeoutsState `json:"timeouts"`
}
