// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datamonitorscheduledqueryruleslog "github.com/golingon/terraproviders/azurerm/3.49.0/datamonitorscheduledqueryruleslog"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMonitorScheduledQueryRulesLog(name string, args DataMonitorScheduledQueryRulesLogArgs) *DataMonitorScheduledQueryRulesLog {
	return &DataMonitorScheduledQueryRulesLog{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMonitorScheduledQueryRulesLog)(nil)

type DataMonitorScheduledQueryRulesLog struct {
	Name string
	Args DataMonitorScheduledQueryRulesLogArgs
}

func (msqrl *DataMonitorScheduledQueryRulesLog) DataSource() string {
	return "azurerm_monitor_scheduled_query_rules_log"
}

func (msqrl *DataMonitorScheduledQueryRulesLog) LocalName() string {
	return msqrl.Name
}

func (msqrl *DataMonitorScheduledQueryRulesLog) Configuration() interface{} {
	return msqrl.Args
}

func (msqrl *DataMonitorScheduledQueryRulesLog) Attributes() dataMonitorScheduledQueryRulesLogAttributes {
	return dataMonitorScheduledQueryRulesLogAttributes{ref: terra.ReferenceDataResource(msqrl)}
}

type DataMonitorScheduledQueryRulesLogArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Criteria: min=0
	Criteria []datamonitorscheduledqueryruleslog.Criteria `hcl:"criteria,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datamonitorscheduledqueryruleslog.Timeouts `hcl:"timeouts,block"`
}
type dataMonitorScheduledQueryRulesLogAttributes struct {
	ref terra.Reference
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) AuthorizedResourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](msqrl.ref.Append("authorized_resource_ids"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) DataSourceId() terra.StringValue {
	return terra.ReferenceString(msqrl.ref.Append("data_source_id"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Description() terra.StringValue {
	return terra.ReferenceString(msqrl.ref.Append("description"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(msqrl.ref.Append("enabled"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Id() terra.StringValue {
	return terra.ReferenceString(msqrl.ref.Append("id"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Location() terra.StringValue {
	return terra.ReferenceString(msqrl.ref.Append("location"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Name() terra.StringValue {
	return terra.ReferenceString(msqrl.ref.Append("name"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(msqrl.ref.Append("resource_group_name"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](msqrl.ref.Append("tags"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Criteria() terra.SetValue[datamonitorscheduledqueryruleslog.CriteriaAttributes] {
	return terra.ReferenceSet[datamonitorscheduledqueryruleslog.CriteriaAttributes](msqrl.ref.Append("criteria"))
}

func (msqrl dataMonitorScheduledQueryRulesLogAttributes) Timeouts() datamonitorscheduledqueryruleslog.TimeoutsAttributes {
	return terra.ReferenceSingle[datamonitorscheduledqueryruleslog.TimeoutsAttributes](msqrl.ref.Append("timeouts"))
}
