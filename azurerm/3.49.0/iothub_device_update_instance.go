// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iothubdeviceupdateinstance "github.com/golingon/terraproviders/azurerm/3.49.0/iothubdeviceupdateinstance"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIothubDeviceUpdateInstance(name string, args IothubDeviceUpdateInstanceArgs) *IothubDeviceUpdateInstance {
	return &IothubDeviceUpdateInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IothubDeviceUpdateInstance)(nil)

type IothubDeviceUpdateInstance struct {
	Name  string
	Args  IothubDeviceUpdateInstanceArgs
	state *iothubDeviceUpdateInstanceState
}

func (idui *IothubDeviceUpdateInstance) Type() string {
	return "azurerm_iothub_device_update_instance"
}

func (idui *IothubDeviceUpdateInstance) LocalName() string {
	return idui.Name
}

func (idui *IothubDeviceUpdateInstance) Configuration() interface{} {
	return idui.Args
}

func (idui *IothubDeviceUpdateInstance) Attributes() iothubDeviceUpdateInstanceAttributes {
	return iothubDeviceUpdateInstanceAttributes{ref: terra.ReferenceResource(idui)}
}

func (idui *IothubDeviceUpdateInstance) ImportState(av io.Reader) error {
	idui.state = &iothubDeviceUpdateInstanceState{}
	if err := json.NewDecoder(av).Decode(idui.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", idui.Type(), idui.LocalName(), err)
	}
	return nil
}

func (idui *IothubDeviceUpdateInstance) State() (*iothubDeviceUpdateInstanceState, bool) {
	return idui.state, idui.state != nil
}

func (idui *IothubDeviceUpdateInstance) StateMust() *iothubDeviceUpdateInstanceState {
	if idui.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", idui.Type(), idui.LocalName()))
	}
	return idui.state
}

func (idui *IothubDeviceUpdateInstance) DependOn() terra.Reference {
	return terra.ReferenceResource(idui)
}

type IothubDeviceUpdateInstanceArgs struct {
	// DeviceUpdateAccountId: string, required
	DeviceUpdateAccountId terra.StringValue `hcl:"device_update_account_id,attr" validate:"required"`
	// DiagnosticEnabled: bool, optional
	DiagnosticEnabled terra.BoolValue `hcl:"diagnostic_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubId: string, required
	IothubId terra.StringValue `hcl:"iothub_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// DiagnosticStorageAccount: optional
	DiagnosticStorageAccount *iothubdeviceupdateinstance.DiagnosticStorageAccount `hcl:"diagnostic_storage_account,block"`
	// Timeouts: optional
	Timeouts *iothubdeviceupdateinstance.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IothubDeviceUpdateInstance depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iothubDeviceUpdateInstanceAttributes struct {
	ref terra.Reference
}

func (idui iothubDeviceUpdateInstanceAttributes) DeviceUpdateAccountId() terra.StringValue {
	return terra.ReferenceString(idui.ref.Append("device_update_account_id"))
}

func (idui iothubDeviceUpdateInstanceAttributes) DiagnosticEnabled() terra.BoolValue {
	return terra.ReferenceBool(idui.ref.Append("diagnostic_enabled"))
}

func (idui iothubDeviceUpdateInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(idui.ref.Append("id"))
}

func (idui iothubDeviceUpdateInstanceAttributes) IothubId() terra.StringValue {
	return terra.ReferenceString(idui.ref.Append("iothub_id"))
}

func (idui iothubDeviceUpdateInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(idui.ref.Append("name"))
}

func (idui iothubDeviceUpdateInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](idui.ref.Append("tags"))
}

func (idui iothubDeviceUpdateInstanceAttributes) DiagnosticStorageAccount() terra.ListValue[iothubdeviceupdateinstance.DiagnosticStorageAccountAttributes] {
	return terra.ReferenceList[iothubdeviceupdateinstance.DiagnosticStorageAccountAttributes](idui.ref.Append("diagnostic_storage_account"))
}

func (idui iothubDeviceUpdateInstanceAttributes) Timeouts() iothubdeviceupdateinstance.TimeoutsAttributes {
	return terra.ReferenceSingle[iothubdeviceupdateinstance.TimeoutsAttributes](idui.ref.Append("timeouts"))
}

type iothubDeviceUpdateInstanceState struct {
	DeviceUpdateAccountId    string                                                     `json:"device_update_account_id"`
	DiagnosticEnabled        bool                                                       `json:"diagnostic_enabled"`
	Id                       string                                                     `json:"id"`
	IothubId                 string                                                     `json:"iothub_id"`
	Name                     string                                                     `json:"name"`
	Tags                     map[string]string                                          `json:"tags"`
	DiagnosticStorageAccount []iothubdeviceupdateinstance.DiagnosticStorageAccountState `json:"diagnostic_storage_account"`
	Timeouts                 *iothubdeviceupdateinstance.TimeoutsState                  `json:"timeouts"`
}
