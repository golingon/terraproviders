// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datasentinelalertruletemplate

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type NrtTemplate struct{}

type ScheduledTemplate struct{}

type SecurityIncidentTemplate struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type NrtTemplateAttributes struct {
	ref terra.Reference
}

func (nt NrtTemplateAttributes) InternalRef() terra.Reference {
	return nt.ref
}

func (nt NrtTemplateAttributes) InternalWithRef(ref terra.Reference) NrtTemplateAttributes {
	return NrtTemplateAttributes{ref: ref}
}

func (nt NrtTemplateAttributes) InternalTokens() hclwrite.Tokens {
	return nt.ref.InternalTokens()
}

func (nt NrtTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(nt.ref.Append("description"))
}

func (nt NrtTemplateAttributes) Query() terra.StringValue {
	return terra.ReferenceString(nt.ref.Append("query"))
}

func (nt NrtTemplateAttributes) Severity() terra.StringValue {
	return terra.ReferenceString(nt.ref.Append("severity"))
}

func (nt NrtTemplateAttributes) Tactics() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](nt.ref.Append("tactics"))
}

type ScheduledTemplateAttributes struct {
	ref terra.Reference
}

func (st ScheduledTemplateAttributes) InternalRef() terra.Reference {
	return st.ref
}

func (st ScheduledTemplateAttributes) InternalWithRef(ref terra.Reference) ScheduledTemplateAttributes {
	return ScheduledTemplateAttributes{ref: ref}
}

func (st ScheduledTemplateAttributes) InternalTokens() hclwrite.Tokens {
	return st.ref.InternalTokens()
}

func (st ScheduledTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("description"))
}

func (st ScheduledTemplateAttributes) Query() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("query"))
}

func (st ScheduledTemplateAttributes) QueryFrequency() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("query_frequency"))
}

func (st ScheduledTemplateAttributes) QueryPeriod() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("query_period"))
}

func (st ScheduledTemplateAttributes) Severity() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("severity"))
}

func (st ScheduledTemplateAttributes) Tactics() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](st.ref.Append("tactics"))
}

func (st ScheduledTemplateAttributes) TriggerOperator() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("trigger_operator"))
}

func (st ScheduledTemplateAttributes) TriggerThreshold() terra.NumberValue {
	return terra.ReferenceNumber(st.ref.Append("trigger_threshold"))
}

type SecurityIncidentTemplateAttributes struct {
	ref terra.Reference
}

func (sit SecurityIncidentTemplateAttributes) InternalRef() terra.Reference {
	return sit.ref
}

func (sit SecurityIncidentTemplateAttributes) InternalWithRef(ref terra.Reference) SecurityIncidentTemplateAttributes {
	return SecurityIncidentTemplateAttributes{ref: ref}
}

func (sit SecurityIncidentTemplateAttributes) InternalTokens() hclwrite.Tokens {
	return sit.ref.InternalTokens()
}

func (sit SecurityIncidentTemplateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sit.ref.Append("description"))
}

func (sit SecurityIncidentTemplateAttributes) ProductFilter() terra.StringValue {
	return terra.ReferenceString(sit.ref.Append("product_filter"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type NrtTemplateState struct {
	Description string   `json:"description"`
	Query       string   `json:"query"`
	Severity    string   `json:"severity"`
	Tactics     []string `json:"tactics"`
}

type ScheduledTemplateState struct {
	Description      string   `json:"description"`
	Query            string   `json:"query"`
	QueryFrequency   string   `json:"query_frequency"`
	QueryPeriod      string   `json:"query_period"`
	Severity         string   `json:"severity"`
	Tactics          []string `json:"tactics"`
	TriggerOperator  string   `json:"trigger_operator"`
	TriggerThreshold float64  `json:"trigger_threshold"`
}

type SecurityIncidentTemplateState struct {
	Description   string `json:"description"`
	ProductFilter string `json:"product_filter"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
