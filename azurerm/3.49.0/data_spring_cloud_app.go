// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataspringcloudapp "github.com/golingon/terraproviders/azurerm/3.49.0/dataspringcloudapp"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataSpringCloudApp(name string, args DataSpringCloudAppArgs) *DataSpringCloudApp {
	return &DataSpringCloudApp{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSpringCloudApp)(nil)

type DataSpringCloudApp struct {
	Name string
	Args DataSpringCloudAppArgs
}

func (sca *DataSpringCloudApp) DataSource() string {
	return "azurerm_spring_cloud_app"
}

func (sca *DataSpringCloudApp) LocalName() string {
	return sca.Name
}

func (sca *DataSpringCloudApp) Configuration() interface{} {
	return sca.Args
}

func (sca *DataSpringCloudApp) Attributes() dataSpringCloudAppAttributes {
	return dataSpringCloudAppAttributes{ref: terra.ReferenceDataResource(sca)}
}

type DataSpringCloudAppArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// Identity: min=0
	Identity []dataspringcloudapp.Identity `hcl:"identity,block" validate:"min=0"`
	// PersistentDisk: min=0
	PersistentDisk []dataspringcloudapp.PersistentDisk `hcl:"persistent_disk,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataspringcloudapp.Timeouts `hcl:"timeouts,block"`
}
type dataSpringCloudAppAttributes struct {
	ref terra.Reference
}

func (sca dataSpringCloudAppAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(sca.ref.Append("fqdn"))
}

func (sca dataSpringCloudAppAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceBool(sca.ref.Append("https_only"))
}

func (sca dataSpringCloudAppAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sca.ref.Append("id"))
}

func (sca dataSpringCloudAppAttributes) IsPublic() terra.BoolValue {
	return terra.ReferenceBool(sca.ref.Append("is_public"))
}

func (sca dataSpringCloudAppAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sca.ref.Append("name"))
}

func (sca dataSpringCloudAppAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(sca.ref.Append("resource_group_name"))
}

func (sca dataSpringCloudAppAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceString(sca.ref.Append("service_name"))
}

func (sca dataSpringCloudAppAttributes) TlsEnabled() terra.BoolValue {
	return terra.ReferenceBool(sca.ref.Append("tls_enabled"))
}

func (sca dataSpringCloudAppAttributes) Url() terra.StringValue {
	return terra.ReferenceString(sca.ref.Append("url"))
}

func (sca dataSpringCloudAppAttributes) Identity() terra.ListValue[dataspringcloudapp.IdentityAttributes] {
	return terra.ReferenceList[dataspringcloudapp.IdentityAttributes](sca.ref.Append("identity"))
}

func (sca dataSpringCloudAppAttributes) PersistentDisk() terra.ListValue[dataspringcloudapp.PersistentDiskAttributes] {
	return terra.ReferenceList[dataspringcloudapp.PersistentDiskAttributes](sca.ref.Append("persistent_disk"))
}

func (sca dataSpringCloudAppAttributes) Timeouts() dataspringcloudapp.TimeoutsAttributes {
	return terra.ReferenceSingle[dataspringcloudapp.TimeoutsAttributes](sca.ref.Append("timeouts"))
}
