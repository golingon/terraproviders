// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataresources "github.com/golingon/terraproviders/azurerm/3.49.0/dataresources"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataResources(name string, args DataResourcesArgs) *DataResources {
	return &DataResources{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataResources)(nil)

type DataResources struct {
	Name string
	Args DataResourcesArgs
}

func (r *DataResources) DataSource() string {
	return "azurerm_resources"
}

func (r *DataResources) LocalName() string {
	return r.Name
}

func (r *DataResources) Configuration() interface{} {
	return r.Args
}

func (r *DataResources) Attributes() dataResourcesAttributes {
	return dataResourcesAttributes{ref: terra.ReferenceDataResource(r)}
}

type DataResourcesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// RequiredTags: map of string, optional
	RequiredTags terra.MapValue[terra.StringValue] `hcl:"required_tags,attr"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Resources: min=0
	Resources []dataresources.Resources `hcl:"resources,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataresources.Timeouts `hcl:"timeouts,block"`
}
type dataResourcesAttributes struct {
	ref terra.Reference
}

func (r dataResourcesAttributes) Id() terra.StringValue {
	return terra.ReferenceString(r.ref.Append("id"))
}

func (r dataResourcesAttributes) Name() terra.StringValue {
	return terra.ReferenceString(r.ref.Append("name"))
}

func (r dataResourcesAttributes) RequiredTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](r.ref.Append("required_tags"))
}

func (r dataResourcesAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(r.ref.Append("resource_group_name"))
}

func (r dataResourcesAttributes) Type() terra.StringValue {
	return terra.ReferenceString(r.ref.Append("type"))
}

func (r dataResourcesAttributes) Resources() terra.ListValue[dataresources.ResourcesAttributes] {
	return terra.ReferenceList[dataresources.ResourcesAttributes](r.ref.Append("resources"))
}

func (r dataResourcesAttributes) Timeouts() dataresources.TimeoutsAttributes {
	return terra.ReferenceSingle[dataresources.TimeoutsAttributes](r.ref.Append("timeouts"))
}
