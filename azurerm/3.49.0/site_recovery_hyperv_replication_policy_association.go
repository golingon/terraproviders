// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	siterecoveryhypervreplicationpolicyassociation "github.com/golingon/terraproviders/azurerm/3.49.0/siterecoveryhypervreplicationpolicyassociation"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSiteRecoveryHypervReplicationPolicyAssociation creates a new instance of [SiteRecoveryHypervReplicationPolicyAssociation].
func NewSiteRecoveryHypervReplicationPolicyAssociation(name string, args SiteRecoveryHypervReplicationPolicyAssociationArgs) *SiteRecoveryHypervReplicationPolicyAssociation {
	return &SiteRecoveryHypervReplicationPolicyAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SiteRecoveryHypervReplicationPolicyAssociation)(nil)

// SiteRecoveryHypervReplicationPolicyAssociation represents the Terraform resource azurerm_site_recovery_hyperv_replication_policy_association.
type SiteRecoveryHypervReplicationPolicyAssociation struct {
	Name      string
	Args      SiteRecoveryHypervReplicationPolicyAssociationArgs
	state     *siteRecoveryHypervReplicationPolicyAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SiteRecoveryHypervReplicationPolicyAssociation].
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) Type() string {
	return "azurerm_site_recovery_hyperv_replication_policy_association"
}

// LocalName returns the local name for [SiteRecoveryHypervReplicationPolicyAssociation].
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) LocalName() string {
	return srhrpa.Name
}

// Configuration returns the configuration (args) for [SiteRecoveryHypervReplicationPolicyAssociation].
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) Configuration() interface{} {
	return srhrpa.Args
}

// DependOn is used for other resources to depend on [SiteRecoveryHypervReplicationPolicyAssociation].
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(srhrpa)
}

// Dependencies returns the list of resources [SiteRecoveryHypervReplicationPolicyAssociation] depends_on.
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) Dependencies() terra.Dependencies {
	return srhrpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SiteRecoveryHypervReplicationPolicyAssociation].
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) LifecycleManagement() *terra.Lifecycle {
	return srhrpa.Lifecycle
}

// Attributes returns the attributes for [SiteRecoveryHypervReplicationPolicyAssociation].
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) Attributes() siteRecoveryHypervReplicationPolicyAssociationAttributes {
	return siteRecoveryHypervReplicationPolicyAssociationAttributes{ref: terra.ReferenceResource(srhrpa)}
}

// ImportState imports the given attribute values into [SiteRecoveryHypervReplicationPolicyAssociation]'s state.
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) ImportState(av io.Reader) error {
	srhrpa.state = &siteRecoveryHypervReplicationPolicyAssociationState{}
	if err := json.NewDecoder(av).Decode(srhrpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", srhrpa.Type(), srhrpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SiteRecoveryHypervReplicationPolicyAssociation] has state.
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) State() (*siteRecoveryHypervReplicationPolicyAssociationState, bool) {
	return srhrpa.state, srhrpa.state != nil
}

// StateMust returns the state for [SiteRecoveryHypervReplicationPolicyAssociation]. Panics if the state is nil.
func (srhrpa *SiteRecoveryHypervReplicationPolicyAssociation) StateMust() *siteRecoveryHypervReplicationPolicyAssociationState {
	if srhrpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", srhrpa.Type(), srhrpa.LocalName()))
	}
	return srhrpa.state
}

// SiteRecoveryHypervReplicationPolicyAssociationArgs contains the configurations for azurerm_site_recovery_hyperv_replication_policy_association.
type SiteRecoveryHypervReplicationPolicyAssociationArgs struct {
	// HypervSiteId: string, required
	HypervSiteId terra.StringValue `hcl:"hyperv_site_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PolicyId: string, required
	PolicyId terra.StringValue `hcl:"policy_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *siterecoveryhypervreplicationpolicyassociation.Timeouts `hcl:"timeouts,block"`
}
type siteRecoveryHypervReplicationPolicyAssociationAttributes struct {
	ref terra.Reference
}

// HypervSiteId returns a reference to field hyperv_site_id of azurerm_site_recovery_hyperv_replication_policy_association.
func (srhrpa siteRecoveryHypervReplicationPolicyAssociationAttributes) HypervSiteId() terra.StringValue {
	return terra.ReferenceAsString(srhrpa.ref.Append("hyperv_site_id"))
}

// Id returns a reference to field id of azurerm_site_recovery_hyperv_replication_policy_association.
func (srhrpa siteRecoveryHypervReplicationPolicyAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(srhrpa.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_site_recovery_hyperv_replication_policy_association.
func (srhrpa siteRecoveryHypervReplicationPolicyAssociationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(srhrpa.ref.Append("name"))
}

// PolicyId returns a reference to field policy_id of azurerm_site_recovery_hyperv_replication_policy_association.
func (srhrpa siteRecoveryHypervReplicationPolicyAssociationAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(srhrpa.ref.Append("policy_id"))
}

func (srhrpa siteRecoveryHypervReplicationPolicyAssociationAttributes) Timeouts() siterecoveryhypervreplicationpolicyassociation.TimeoutsAttributes {
	return terra.ReferenceAsSingle[siterecoveryhypervreplicationpolicyassociation.TimeoutsAttributes](srhrpa.ref.Append("timeouts"))
}

type siteRecoveryHypervReplicationPolicyAssociationState struct {
	HypervSiteId string                                                        `json:"hyperv_site_id"`
	Id           string                                                        `json:"id"`
	Name         string                                                        `json:"name"`
	PolicyId     string                                                        `json:"policy_id"`
	Timeouts     *siterecoveryhypervreplicationpolicyassociation.TimeoutsState `json:"timeouts"`
}
