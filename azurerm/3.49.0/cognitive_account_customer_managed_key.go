// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	cognitiveaccountcustomermanagedkey "github.com/golingon/terraproviders/azurerm/3.49.0/cognitiveaccountcustomermanagedkey"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCognitiveAccountCustomerManagedKey(name string, args CognitiveAccountCustomerManagedKeyArgs) *CognitiveAccountCustomerManagedKey {
	return &CognitiveAccountCustomerManagedKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CognitiveAccountCustomerManagedKey)(nil)

type CognitiveAccountCustomerManagedKey struct {
	Name  string
	Args  CognitiveAccountCustomerManagedKeyArgs
	state *cognitiveAccountCustomerManagedKeyState
}

func (cacmk *CognitiveAccountCustomerManagedKey) Type() string {
	return "azurerm_cognitive_account_customer_managed_key"
}

func (cacmk *CognitiveAccountCustomerManagedKey) LocalName() string {
	return cacmk.Name
}

func (cacmk *CognitiveAccountCustomerManagedKey) Configuration() interface{} {
	return cacmk.Args
}

func (cacmk *CognitiveAccountCustomerManagedKey) Attributes() cognitiveAccountCustomerManagedKeyAttributes {
	return cognitiveAccountCustomerManagedKeyAttributes{ref: terra.ReferenceResource(cacmk)}
}

func (cacmk *CognitiveAccountCustomerManagedKey) ImportState(av io.Reader) error {
	cacmk.state = &cognitiveAccountCustomerManagedKeyState{}
	if err := json.NewDecoder(av).Decode(cacmk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cacmk.Type(), cacmk.LocalName(), err)
	}
	return nil
}

func (cacmk *CognitiveAccountCustomerManagedKey) State() (*cognitiveAccountCustomerManagedKeyState, bool) {
	return cacmk.state, cacmk.state != nil
}

func (cacmk *CognitiveAccountCustomerManagedKey) StateMust() *cognitiveAccountCustomerManagedKeyState {
	if cacmk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cacmk.Type(), cacmk.LocalName()))
	}
	return cacmk.state
}

func (cacmk *CognitiveAccountCustomerManagedKey) DependOn() terra.Reference {
	return terra.ReferenceResource(cacmk)
}

type CognitiveAccountCustomerManagedKeyArgs struct {
	// CognitiveAccountId: string, required
	CognitiveAccountId terra.StringValue `hcl:"cognitive_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityClientId: string, optional
	IdentityClientId terra.StringValue `hcl:"identity_client_id,attr"`
	// KeyVaultKeyId: string, required
	KeyVaultKeyId terra.StringValue `hcl:"key_vault_key_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *cognitiveaccountcustomermanagedkey.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CognitiveAccountCustomerManagedKey depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cognitiveAccountCustomerManagedKeyAttributes struct {
	ref terra.Reference
}

func (cacmk cognitiveAccountCustomerManagedKeyAttributes) CognitiveAccountId() terra.StringValue {
	return terra.ReferenceString(cacmk.ref.Append("cognitive_account_id"))
}

func (cacmk cognitiveAccountCustomerManagedKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cacmk.ref.Append("id"))
}

func (cacmk cognitiveAccountCustomerManagedKeyAttributes) IdentityClientId() terra.StringValue {
	return terra.ReferenceString(cacmk.ref.Append("identity_client_id"))
}

func (cacmk cognitiveAccountCustomerManagedKeyAttributes) KeyVaultKeyId() terra.StringValue {
	return terra.ReferenceString(cacmk.ref.Append("key_vault_key_id"))
}

func (cacmk cognitiveAccountCustomerManagedKeyAttributes) Timeouts() cognitiveaccountcustomermanagedkey.TimeoutsAttributes {
	return terra.ReferenceSingle[cognitiveaccountcustomermanagedkey.TimeoutsAttributes](cacmk.ref.Append("timeouts"))
}

type cognitiveAccountCustomerManagedKeyState struct {
	CognitiveAccountId string                                            `json:"cognitive_account_id"`
	Id                 string                                            `json:"id"`
	IdentityClientId   string                                            `json:"identity_client_id"`
	KeyVaultKeyId      string                                            `json:"key_vault_key_id"`
	Timeouts           *cognitiveaccountcustomermanagedkey.TimeoutsState `json:"timeouts"`
}
