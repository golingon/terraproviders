// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataappserviceenvironmentv3 "github.com/golingon/terraproviders/azurerm/3.49.0/dataappserviceenvironmentv3"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataAppServiceEnvironmentV3(name string, args DataAppServiceEnvironmentV3Args) *DataAppServiceEnvironmentV3 {
	return &DataAppServiceEnvironmentV3{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAppServiceEnvironmentV3)(nil)

type DataAppServiceEnvironmentV3 struct {
	Name string
	Args DataAppServiceEnvironmentV3Args
}

func (asev *DataAppServiceEnvironmentV3) DataSource() string {
	return "azurerm_app_service_environment_v3"
}

func (asev *DataAppServiceEnvironmentV3) LocalName() string {
	return asev.Name
}

func (asev *DataAppServiceEnvironmentV3) Configuration() interface{} {
	return asev.Args
}

func (asev *DataAppServiceEnvironmentV3) Attributes() dataAppServiceEnvironmentV3Attributes {
	return dataAppServiceEnvironmentV3Attributes{ref: terra.ReferenceDataResource(asev)}
}

type DataAppServiceEnvironmentV3Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ClusterSetting: min=0
	ClusterSetting []dataappserviceenvironmentv3.ClusterSetting `hcl:"cluster_setting,block" validate:"min=0"`
	// InboundNetworkDependencies: min=0
	InboundNetworkDependencies []dataappserviceenvironmentv3.InboundNetworkDependencies `hcl:"inbound_network_dependencies,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataappserviceenvironmentv3.Timeouts `hcl:"timeouts,block"`
}
type dataAppServiceEnvironmentV3Attributes struct {
	ref terra.Reference
}

func (asev dataAppServiceEnvironmentV3Attributes) AllowNewPrivateEndpointConnections() terra.BoolValue {
	return terra.ReferenceBool(asev.ref.Append("allow_new_private_endpoint_connections"))
}

func (asev dataAppServiceEnvironmentV3Attributes) DedicatedHostCount() terra.NumberValue {
	return terra.ReferenceNumber(asev.ref.Append("dedicated_host_count"))
}

func (asev dataAppServiceEnvironmentV3Attributes) DnsSuffix() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("dns_suffix"))
}

func (asev dataAppServiceEnvironmentV3Attributes) ExternalInboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](asev.ref.Append("external_inbound_ip_addresses"))
}

func (asev dataAppServiceEnvironmentV3Attributes) Id() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("id"))
}

func (asev dataAppServiceEnvironmentV3Attributes) InternalInboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](asev.ref.Append("internal_inbound_ip_addresses"))
}

func (asev dataAppServiceEnvironmentV3Attributes) InternalLoadBalancingMode() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("internal_load_balancing_mode"))
}

func (asev dataAppServiceEnvironmentV3Attributes) IpSslAddressCount() terra.NumberValue {
	return terra.ReferenceNumber(asev.ref.Append("ip_ssl_address_count"))
}

func (asev dataAppServiceEnvironmentV3Attributes) LinuxOutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](asev.ref.Append("linux_outbound_ip_addresses"))
}

func (asev dataAppServiceEnvironmentV3Attributes) Location() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("location"))
}

func (asev dataAppServiceEnvironmentV3Attributes) Name() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("name"))
}

func (asev dataAppServiceEnvironmentV3Attributes) PricingTier() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("pricing_tier"))
}

func (asev dataAppServiceEnvironmentV3Attributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("resource_group_name"))
}

func (asev dataAppServiceEnvironmentV3Attributes) SubnetId() terra.StringValue {
	return terra.ReferenceString(asev.ref.Append("subnet_id"))
}

func (asev dataAppServiceEnvironmentV3Attributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](asev.ref.Append("tags"))
}

func (asev dataAppServiceEnvironmentV3Attributes) WindowsOutboundIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](asev.ref.Append("windows_outbound_ip_addresses"))
}

func (asev dataAppServiceEnvironmentV3Attributes) ZoneRedundant() terra.BoolValue {
	return terra.ReferenceBool(asev.ref.Append("zone_redundant"))
}

func (asev dataAppServiceEnvironmentV3Attributes) ClusterSetting() terra.ListValue[dataappserviceenvironmentv3.ClusterSettingAttributes] {
	return terra.ReferenceList[dataappserviceenvironmentv3.ClusterSettingAttributes](asev.ref.Append("cluster_setting"))
}

func (asev dataAppServiceEnvironmentV3Attributes) InboundNetworkDependencies() terra.ListValue[dataappserviceenvironmentv3.InboundNetworkDependenciesAttributes] {
	return terra.ReferenceList[dataappserviceenvironmentv3.InboundNetworkDependenciesAttributes](asev.ref.Append("inbound_network_dependencies"))
}

func (asev dataAppServiceEnvironmentV3Attributes) Timeouts() dataappserviceenvironmentv3.TimeoutsAttributes {
	return terra.ReferenceSingle[dataappserviceenvironmentv3.TimeoutsAttributes](asev.ref.Append("timeouts"))
}
