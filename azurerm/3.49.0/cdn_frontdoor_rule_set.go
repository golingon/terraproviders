// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	cdnfrontdoorruleset "github.com/golingon/terraproviders/azurerm/3.49.0/cdnfrontdoorruleset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCdnFrontdoorRuleSet(name string, args CdnFrontdoorRuleSetArgs) *CdnFrontdoorRuleSet {
	return &CdnFrontdoorRuleSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CdnFrontdoorRuleSet)(nil)

type CdnFrontdoorRuleSet struct {
	Name  string
	Args  CdnFrontdoorRuleSetArgs
	state *cdnFrontdoorRuleSetState
}

func (cfrs *CdnFrontdoorRuleSet) Type() string {
	return "azurerm_cdn_frontdoor_rule_set"
}

func (cfrs *CdnFrontdoorRuleSet) LocalName() string {
	return cfrs.Name
}

func (cfrs *CdnFrontdoorRuleSet) Configuration() interface{} {
	return cfrs.Args
}

func (cfrs *CdnFrontdoorRuleSet) Attributes() cdnFrontdoorRuleSetAttributes {
	return cdnFrontdoorRuleSetAttributes{ref: terra.ReferenceResource(cfrs)}
}

func (cfrs *CdnFrontdoorRuleSet) ImportState(av io.Reader) error {
	cfrs.state = &cdnFrontdoorRuleSetState{}
	if err := json.NewDecoder(av).Decode(cfrs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cfrs.Type(), cfrs.LocalName(), err)
	}
	return nil
}

func (cfrs *CdnFrontdoorRuleSet) State() (*cdnFrontdoorRuleSetState, bool) {
	return cfrs.state, cfrs.state != nil
}

func (cfrs *CdnFrontdoorRuleSet) StateMust() *cdnFrontdoorRuleSetState {
	if cfrs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cfrs.Type(), cfrs.LocalName()))
	}
	return cfrs.state
}

func (cfrs *CdnFrontdoorRuleSet) DependOn() terra.Reference {
	return terra.ReferenceResource(cfrs)
}

type CdnFrontdoorRuleSetArgs struct {
	// CdnFrontdoorProfileId: string, required
	CdnFrontdoorProfileId terra.StringValue `hcl:"cdn_frontdoor_profile_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *cdnfrontdoorruleset.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CdnFrontdoorRuleSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cdnFrontdoorRuleSetAttributes struct {
	ref terra.Reference
}

func (cfrs cdnFrontdoorRuleSetAttributes) CdnFrontdoorProfileId() terra.StringValue {
	return terra.ReferenceString(cfrs.ref.Append("cdn_frontdoor_profile_id"))
}

func (cfrs cdnFrontdoorRuleSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cfrs.ref.Append("id"))
}

func (cfrs cdnFrontdoorRuleSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cfrs.ref.Append("name"))
}

func (cfrs cdnFrontdoorRuleSetAttributes) Timeouts() cdnfrontdoorruleset.TimeoutsAttributes {
	return terra.ReferenceSingle[cdnfrontdoorruleset.TimeoutsAttributes](cfrs.ref.Append("timeouts"))
}

type cdnFrontdoorRuleSetState struct {
	CdnFrontdoorProfileId string                             `json:"cdn_frontdoor_profile_id"`
	Id                    string                             `json:"id"`
	Name                  string                             `json:"name"`
	Timeouts              *cdnfrontdoorruleset.TimeoutsState `json:"timeouts"`
}
