// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iottimeseriesinsightsreferencedataset "github.com/golingon/terraproviders/azurerm/3.49.0/iottimeseriesinsightsreferencedataset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotTimeSeriesInsightsReferenceDataSet(name string, args IotTimeSeriesInsightsReferenceDataSetArgs) *IotTimeSeriesInsightsReferenceDataSet {
	return &IotTimeSeriesInsightsReferenceDataSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotTimeSeriesInsightsReferenceDataSet)(nil)

type IotTimeSeriesInsightsReferenceDataSet struct {
	Name  string
	Args  IotTimeSeriesInsightsReferenceDataSetArgs
	state *iotTimeSeriesInsightsReferenceDataSetState
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) Type() string {
	return "azurerm_iot_time_series_insights_reference_data_set"
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) LocalName() string {
	return itsirds.Name
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) Configuration() interface{} {
	return itsirds.Args
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) Attributes() iotTimeSeriesInsightsReferenceDataSetAttributes {
	return iotTimeSeriesInsightsReferenceDataSetAttributes{ref: terra.ReferenceResource(itsirds)}
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) ImportState(av io.Reader) error {
	itsirds.state = &iotTimeSeriesInsightsReferenceDataSetState{}
	if err := json.NewDecoder(av).Decode(itsirds.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itsirds.Type(), itsirds.LocalName(), err)
	}
	return nil
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) State() (*iotTimeSeriesInsightsReferenceDataSetState, bool) {
	return itsirds.state, itsirds.state != nil
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) StateMust() *iotTimeSeriesInsightsReferenceDataSetState {
	if itsirds.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itsirds.Type(), itsirds.LocalName()))
	}
	return itsirds.state
}

func (itsirds *IotTimeSeriesInsightsReferenceDataSet) DependOn() terra.Reference {
	return terra.ReferenceResource(itsirds)
}

type IotTimeSeriesInsightsReferenceDataSetArgs struct {
	// DataStringComparisonBehavior: string, optional
	DataStringComparisonBehavior terra.StringValue `hcl:"data_string_comparison_behavior,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TimeSeriesInsightsEnvironmentId: string, required
	TimeSeriesInsightsEnvironmentId terra.StringValue `hcl:"time_series_insights_environment_id,attr" validate:"required"`
	// KeyProperty: min=1
	KeyProperty []iottimeseriesinsightsreferencedataset.KeyProperty `hcl:"key_property,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *iottimeseriesinsightsreferencedataset.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IotTimeSeriesInsightsReferenceDataSet depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotTimeSeriesInsightsReferenceDataSetAttributes struct {
	ref terra.Reference
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) DataStringComparisonBehavior() terra.StringValue {
	return terra.ReferenceString(itsirds.ref.Append("data_string_comparison_behavior"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) Id() terra.StringValue {
	return terra.ReferenceString(itsirds.ref.Append("id"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) Location() terra.StringValue {
	return terra.ReferenceString(itsirds.ref.Append("location"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) Name() terra.StringValue {
	return terra.ReferenceString(itsirds.ref.Append("name"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](itsirds.ref.Append("tags"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) TimeSeriesInsightsEnvironmentId() terra.StringValue {
	return terra.ReferenceString(itsirds.ref.Append("time_series_insights_environment_id"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) KeyProperty() terra.SetValue[iottimeseriesinsightsreferencedataset.KeyPropertyAttributes] {
	return terra.ReferenceSet[iottimeseriesinsightsreferencedataset.KeyPropertyAttributes](itsirds.ref.Append("key_property"))
}

func (itsirds iotTimeSeriesInsightsReferenceDataSetAttributes) Timeouts() iottimeseriesinsightsreferencedataset.TimeoutsAttributes {
	return terra.ReferenceSingle[iottimeseriesinsightsreferencedataset.TimeoutsAttributes](itsirds.ref.Append("timeouts"))
}

type iotTimeSeriesInsightsReferenceDataSetState struct {
	DataStringComparisonBehavior    string                                                   `json:"data_string_comparison_behavior"`
	Id                              string                                                   `json:"id"`
	Location                        string                                                   `json:"location"`
	Name                            string                                                   `json:"name"`
	Tags                            map[string]string                                        `json:"tags"`
	TimeSeriesInsightsEnvironmentId string                                                   `json:"time_series_insights_environment_id"`
	KeyProperty                     []iottimeseriesinsightsreferencedataset.KeyPropertyState `json:"key_property"`
	Timeouts                        *iottimeseriesinsightsreferencedataset.TimeoutsState     `json:"timeouts"`
}
