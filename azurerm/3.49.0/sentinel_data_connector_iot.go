// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentineldataconnectoriot "github.com/golingon/terraproviders/azurerm/3.49.0/sentineldataconnectoriot"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelDataConnectorIot(name string, args SentinelDataConnectorIotArgs) *SentinelDataConnectorIot {
	return &SentinelDataConnectorIot{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelDataConnectorIot)(nil)

type SentinelDataConnectorIot struct {
	Name  string
	Args  SentinelDataConnectorIotArgs
	state *sentinelDataConnectorIotState
}

func (sdci *SentinelDataConnectorIot) Type() string {
	return "azurerm_sentinel_data_connector_iot"
}

func (sdci *SentinelDataConnectorIot) LocalName() string {
	return sdci.Name
}

func (sdci *SentinelDataConnectorIot) Configuration() interface{} {
	return sdci.Args
}

func (sdci *SentinelDataConnectorIot) Attributes() sentinelDataConnectorIotAttributes {
	return sentinelDataConnectorIotAttributes{ref: terra.ReferenceResource(sdci)}
}

func (sdci *SentinelDataConnectorIot) ImportState(av io.Reader) error {
	sdci.state = &sentinelDataConnectorIotState{}
	if err := json.NewDecoder(av).Decode(sdci.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdci.Type(), sdci.LocalName(), err)
	}
	return nil
}

func (sdci *SentinelDataConnectorIot) State() (*sentinelDataConnectorIotState, bool) {
	return sdci.state, sdci.state != nil
}

func (sdci *SentinelDataConnectorIot) StateMust() *sentinelDataConnectorIotState {
	if sdci.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdci.Type(), sdci.LocalName()))
	}
	return sdci.state
}

func (sdci *SentinelDataConnectorIot) DependOn() terra.Reference {
	return terra.ReferenceResource(sdci)
}

type SentinelDataConnectorIotArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SubscriptionId: string, optional
	SubscriptionId terra.StringValue `hcl:"subscription_id,attr"`
	// Timeouts: optional
	Timeouts *sentineldataconnectoriot.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelDataConnectorIot depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelDataConnectorIotAttributes struct {
	ref terra.Reference
}

func (sdci sentinelDataConnectorIotAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdci.ref.Append("id"))
}

func (sdci sentinelDataConnectorIotAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sdci.ref.Append("log_analytics_workspace_id"))
}

func (sdci sentinelDataConnectorIotAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdci.ref.Append("name"))
}

func (sdci sentinelDataConnectorIotAttributes) SubscriptionId() terra.StringValue {
	return terra.ReferenceString(sdci.ref.Append("subscription_id"))
}

func (sdci sentinelDataConnectorIotAttributes) Timeouts() sentineldataconnectoriot.TimeoutsAttributes {
	return terra.ReferenceSingle[sentineldataconnectoriot.TimeoutsAttributes](sdci.ref.Append("timeouts"))
}

type sentinelDataConnectorIotState struct {
	Id                      string                                  `json:"id"`
	LogAnalyticsWorkspaceId string                                  `json:"log_analytics_workspace_id"`
	Name                    string                                  `json:"name"`
	SubscriptionId          string                                  `json:"subscription_id"`
	Timeouts                *sentineldataconnectoriot.TimeoutsState `json:"timeouts"`
}
