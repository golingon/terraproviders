// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	springcloudgatewaycustomdomain "github.com/golingon/terraproviders/azurerm/3.49.0/springcloudgatewaycustomdomain"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSpringCloudGatewayCustomDomain(name string, args SpringCloudGatewayCustomDomainArgs) *SpringCloudGatewayCustomDomain {
	return &SpringCloudGatewayCustomDomain{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SpringCloudGatewayCustomDomain)(nil)

type SpringCloudGatewayCustomDomain struct {
	Name  string
	Args  SpringCloudGatewayCustomDomainArgs
	state *springCloudGatewayCustomDomainState
}

func (scgcd *SpringCloudGatewayCustomDomain) Type() string {
	return "azurerm_spring_cloud_gateway_custom_domain"
}

func (scgcd *SpringCloudGatewayCustomDomain) LocalName() string {
	return scgcd.Name
}

func (scgcd *SpringCloudGatewayCustomDomain) Configuration() interface{} {
	return scgcd.Args
}

func (scgcd *SpringCloudGatewayCustomDomain) Attributes() springCloudGatewayCustomDomainAttributes {
	return springCloudGatewayCustomDomainAttributes{ref: terra.ReferenceResource(scgcd)}
}

func (scgcd *SpringCloudGatewayCustomDomain) ImportState(av io.Reader) error {
	scgcd.state = &springCloudGatewayCustomDomainState{}
	if err := json.NewDecoder(av).Decode(scgcd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", scgcd.Type(), scgcd.LocalName(), err)
	}
	return nil
}

func (scgcd *SpringCloudGatewayCustomDomain) State() (*springCloudGatewayCustomDomainState, bool) {
	return scgcd.state, scgcd.state != nil
}

func (scgcd *SpringCloudGatewayCustomDomain) StateMust() *springCloudGatewayCustomDomainState {
	if scgcd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", scgcd.Type(), scgcd.LocalName()))
	}
	return scgcd.state
}

func (scgcd *SpringCloudGatewayCustomDomain) DependOn() terra.Reference {
	return terra.ReferenceResource(scgcd)
}

type SpringCloudGatewayCustomDomainArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SpringCloudGatewayId: string, required
	SpringCloudGatewayId terra.StringValue `hcl:"spring_cloud_gateway_id,attr" validate:"required"`
	// Thumbprint: string, optional
	Thumbprint terra.StringValue `hcl:"thumbprint,attr"`
	// Timeouts: optional
	Timeouts *springcloudgatewaycustomdomain.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SpringCloudGatewayCustomDomain depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type springCloudGatewayCustomDomainAttributes struct {
	ref terra.Reference
}

func (scgcd springCloudGatewayCustomDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceString(scgcd.ref.Append("id"))
}

func (scgcd springCloudGatewayCustomDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceString(scgcd.ref.Append("name"))
}

func (scgcd springCloudGatewayCustomDomainAttributes) SpringCloudGatewayId() terra.StringValue {
	return terra.ReferenceString(scgcd.ref.Append("spring_cloud_gateway_id"))
}

func (scgcd springCloudGatewayCustomDomainAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceString(scgcd.ref.Append("thumbprint"))
}

func (scgcd springCloudGatewayCustomDomainAttributes) Timeouts() springcloudgatewaycustomdomain.TimeoutsAttributes {
	return terra.ReferenceSingle[springcloudgatewaycustomdomain.TimeoutsAttributes](scgcd.ref.Append("timeouts"))
}

type springCloudGatewayCustomDomainState struct {
	Id                   string                                        `json:"id"`
	Name                 string                                        `json:"name"`
	SpringCloudGatewayId string                                        `json:"spring_cloud_gateway_id"`
	Thumbprint           string                                        `json:"thumbprint"`
	Timeouts             *springcloudgatewaycustomdomain.TimeoutsState `json:"timeouts"`
}
