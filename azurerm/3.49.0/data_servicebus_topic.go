// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataservicebustopic "github.com/golingon/terraproviders/azurerm/3.49.0/dataservicebustopic"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicebusTopic(name string, args DataServicebusTopicArgs) *DataServicebusTopic {
	return &DataServicebusTopic{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicebusTopic)(nil)

type DataServicebusTopic struct {
	Name string
	Args DataServicebusTopicArgs
}

func (st *DataServicebusTopic) DataSource() string {
	return "azurerm_servicebus_topic"
}

func (st *DataServicebusTopic) LocalName() string {
	return st.Name
}

func (st *DataServicebusTopic) Configuration() interface{} {
	return st.Args
}

func (st *DataServicebusTopic) Attributes() dataServicebusTopicAttributes {
	return dataServicebusTopicAttributes{ref: terra.ReferenceDataResource(st)}
}

type DataServicebusTopicArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NamespaceId: string, optional
	NamespaceId terra.StringValue `hcl:"namespace_id,attr"`
	// NamespaceName: string, optional
	NamespaceName terra.StringValue `hcl:"namespace_name,attr"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// Timeouts: optional
	Timeouts *dataservicebustopic.Timeouts `hcl:"timeouts,block"`
}
type dataServicebusTopicAttributes struct {
	ref terra.Reference
}

func (st dataServicebusTopicAttributes) AutoDeleteOnIdle() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("auto_delete_on_idle"))
}

func (st dataServicebusTopicAttributes) DefaultMessageTtl() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("default_message_ttl"))
}

func (st dataServicebusTopicAttributes) DuplicateDetectionHistoryTimeWindow() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("duplicate_detection_history_time_window"))
}

func (st dataServicebusTopicAttributes) EnableBatchedOperations() terra.BoolValue {
	return terra.ReferenceBool(st.ref.Append("enable_batched_operations"))
}

func (st dataServicebusTopicAttributes) EnableExpress() terra.BoolValue {
	return terra.ReferenceBool(st.ref.Append("enable_express"))
}

func (st dataServicebusTopicAttributes) EnablePartitioning() terra.BoolValue {
	return terra.ReferenceBool(st.ref.Append("enable_partitioning"))
}

func (st dataServicebusTopicAttributes) Id() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("id"))
}

func (st dataServicebusTopicAttributes) MaxSizeInMegabytes() terra.NumberValue {
	return terra.ReferenceNumber(st.ref.Append("max_size_in_megabytes"))
}

func (st dataServicebusTopicAttributes) Name() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("name"))
}

func (st dataServicebusTopicAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("namespace_id"))
}

func (st dataServicebusTopicAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("namespace_name"))
}

func (st dataServicebusTopicAttributes) RequiresDuplicateDetection() terra.BoolValue {
	return terra.ReferenceBool(st.ref.Append("requires_duplicate_detection"))
}

func (st dataServicebusTopicAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("resource_group_name"))
}

func (st dataServicebusTopicAttributes) Status() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("status"))
}

func (st dataServicebusTopicAttributes) SupportOrdering() terra.BoolValue {
	return terra.ReferenceBool(st.ref.Append("support_ordering"))
}

func (st dataServicebusTopicAttributes) Timeouts() dataservicebustopic.TimeoutsAttributes {
	return terra.ReferenceSingle[dataservicebustopic.TimeoutsAttributes](st.ref.Append("timeouts"))
}
