// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package kubernetesfleetmanager

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type HubProfile struct {
	// DnsPrefix: string, required
	DnsPrefix terra.StringValue `hcl:"dns_prefix,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type HubProfileAttributes struct {
	ref terra.Reference
}

func (hp HubProfileAttributes) InternalRef() terra.Reference {
	return hp.ref
}

func (hp HubProfileAttributes) InternalWithRef(ref terra.Reference) HubProfileAttributes {
	return HubProfileAttributes{ref: ref}
}

func (hp HubProfileAttributes) InternalTokens() hclwrite.Tokens {
	return hp.ref.InternalTokens()
}

func (hp HubProfileAttributes) DnsPrefix() terra.StringValue {
	return terra.ReferenceString(hp.ref.Append("dns_prefix"))
}

func (hp HubProfileAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(hp.ref.Append("fqdn"))
}

func (hp HubProfileAttributes) KubernetesVersion() terra.StringValue {
	return terra.ReferenceString(hp.ref.Append("kubernetes_version"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type HubProfileState struct {
	DnsPrefix         string `json:"dns_prefix"`
	Fqdn              string `json:"fqdn"`
	KubernetesVersion string `json:"kubernetes_version"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
