// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	signalrservicenetworkacl "github.com/golingon/terraproviders/azurerm/3.49.0/signalrservicenetworkacl"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSignalrServiceNetworkAcl(name string, args SignalrServiceNetworkAclArgs) *SignalrServiceNetworkAcl {
	return &SignalrServiceNetworkAcl{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SignalrServiceNetworkAcl)(nil)

type SignalrServiceNetworkAcl struct {
	Name  string
	Args  SignalrServiceNetworkAclArgs
	state *signalrServiceNetworkAclState
}

func (ssna *SignalrServiceNetworkAcl) Type() string {
	return "azurerm_signalr_service_network_acl"
}

func (ssna *SignalrServiceNetworkAcl) LocalName() string {
	return ssna.Name
}

func (ssna *SignalrServiceNetworkAcl) Configuration() interface{} {
	return ssna.Args
}

func (ssna *SignalrServiceNetworkAcl) Attributes() signalrServiceNetworkAclAttributes {
	return signalrServiceNetworkAclAttributes{ref: terra.ReferenceResource(ssna)}
}

func (ssna *SignalrServiceNetworkAcl) ImportState(av io.Reader) error {
	ssna.state = &signalrServiceNetworkAclState{}
	if err := json.NewDecoder(av).Decode(ssna.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssna.Type(), ssna.LocalName(), err)
	}
	return nil
}

func (ssna *SignalrServiceNetworkAcl) State() (*signalrServiceNetworkAclState, bool) {
	return ssna.state, ssna.state != nil
}

func (ssna *SignalrServiceNetworkAcl) StateMust() *signalrServiceNetworkAclState {
	if ssna.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssna.Type(), ssna.LocalName()))
	}
	return ssna.state
}

func (ssna *SignalrServiceNetworkAcl) DependOn() terra.Reference {
	return terra.ReferenceResource(ssna)
}

type SignalrServiceNetworkAclArgs struct {
	// DefaultAction: string, required
	DefaultAction terra.StringValue `hcl:"default_action,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SignalrServiceId: string, required
	SignalrServiceId terra.StringValue `hcl:"signalr_service_id,attr" validate:"required"`
	// PrivateEndpoint: min=0
	PrivateEndpoint []signalrservicenetworkacl.PrivateEndpoint `hcl:"private_endpoint,block" validate:"min=0"`
	// PublicNetwork: required
	PublicNetwork *signalrservicenetworkacl.PublicNetwork `hcl:"public_network,block" validate:"required"`
	// Timeouts: optional
	Timeouts *signalrservicenetworkacl.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SignalrServiceNetworkAcl depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type signalrServiceNetworkAclAttributes struct {
	ref terra.Reference
}

func (ssna signalrServiceNetworkAclAttributes) DefaultAction() terra.StringValue {
	return terra.ReferenceString(ssna.ref.Append("default_action"))
}

func (ssna signalrServiceNetworkAclAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ssna.ref.Append("id"))
}

func (ssna signalrServiceNetworkAclAttributes) SignalrServiceId() terra.StringValue {
	return terra.ReferenceString(ssna.ref.Append("signalr_service_id"))
}

func (ssna signalrServiceNetworkAclAttributes) PrivateEndpoint() terra.SetValue[signalrservicenetworkacl.PrivateEndpointAttributes] {
	return terra.ReferenceSet[signalrservicenetworkacl.PrivateEndpointAttributes](ssna.ref.Append("private_endpoint"))
}

func (ssna signalrServiceNetworkAclAttributes) PublicNetwork() terra.ListValue[signalrservicenetworkacl.PublicNetworkAttributes] {
	return terra.ReferenceList[signalrservicenetworkacl.PublicNetworkAttributes](ssna.ref.Append("public_network"))
}

func (ssna signalrServiceNetworkAclAttributes) Timeouts() signalrservicenetworkacl.TimeoutsAttributes {
	return terra.ReferenceSingle[signalrservicenetworkacl.TimeoutsAttributes](ssna.ref.Append("timeouts"))
}

type signalrServiceNetworkAclState struct {
	DefaultAction    string                                          `json:"default_action"`
	Id               string                                          `json:"id"`
	SignalrServiceId string                                          `json:"signalr_service_id"`
	PrivateEndpoint  []signalrservicenetworkacl.PrivateEndpointState `json:"private_endpoint"`
	PublicNetwork    []signalrservicenetworkacl.PublicNetworkState   `json:"public_network"`
	Timeouts         *signalrservicenetworkacl.TimeoutsState         `json:"timeouts"`
}
