// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datanetappvolume

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type DataProtectionReplication struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataProtectionReplicationAttributes struct {
	ref terra.Reference
}

func (dpr DataProtectionReplicationAttributes) InternalRef() terra.Reference {
	return dpr.ref
}

func (dpr DataProtectionReplicationAttributes) InternalWithRef(ref terra.Reference) DataProtectionReplicationAttributes {
	return DataProtectionReplicationAttributes{ref: ref}
}

func (dpr DataProtectionReplicationAttributes) InternalTokens() hclwrite.Tokens {
	return dpr.ref.InternalTokens()
}

func (dpr DataProtectionReplicationAttributes) EndpointType() terra.StringValue {
	return terra.ReferenceString(dpr.ref.Append("endpoint_type"))
}

func (dpr DataProtectionReplicationAttributes) RemoteVolumeLocation() terra.StringValue {
	return terra.ReferenceString(dpr.ref.Append("remote_volume_location"))
}

func (dpr DataProtectionReplicationAttributes) RemoteVolumeResourceId() terra.StringValue {
	return terra.ReferenceString(dpr.ref.Append("remote_volume_resource_id"))
}

func (dpr DataProtectionReplicationAttributes) ReplicationFrequency() terra.StringValue {
	return terra.ReferenceString(dpr.ref.Append("replication_frequency"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type DataProtectionReplicationState struct {
	EndpointType           string `json:"endpoint_type"`
	RemoteVolumeLocation   string `json:"remote_volume_location"`
	RemoteVolumeResourceId string `json:"remote_volume_resource_id"`
	ReplicationFrequency   string `json:"replication_frequency"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
