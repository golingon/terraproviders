// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	networkinterfaceapplicationsecuritygroupassociation "github.com/golingon/terraproviders/azurerm/3.49.0/networkinterfaceapplicationsecuritygroupassociation"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewNetworkInterfaceApplicationSecurityGroupAssociation(name string, args NetworkInterfaceApplicationSecurityGroupAssociationArgs) *NetworkInterfaceApplicationSecurityGroupAssociation {
	return &NetworkInterfaceApplicationSecurityGroupAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkInterfaceApplicationSecurityGroupAssociation)(nil)

type NetworkInterfaceApplicationSecurityGroupAssociation struct {
	Name  string
	Args  NetworkInterfaceApplicationSecurityGroupAssociationArgs
	state *networkInterfaceApplicationSecurityGroupAssociationState
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) Type() string {
	return "azurerm_network_interface_application_security_group_association"
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) LocalName() string {
	return niasga.Name
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) Configuration() interface{} {
	return niasga.Args
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) Attributes() networkInterfaceApplicationSecurityGroupAssociationAttributes {
	return networkInterfaceApplicationSecurityGroupAssociationAttributes{ref: terra.ReferenceResource(niasga)}
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) ImportState(av io.Reader) error {
	niasga.state = &networkInterfaceApplicationSecurityGroupAssociationState{}
	if err := json.NewDecoder(av).Decode(niasga.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", niasga.Type(), niasga.LocalName(), err)
	}
	return nil
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) State() (*networkInterfaceApplicationSecurityGroupAssociationState, bool) {
	return niasga.state, niasga.state != nil
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) StateMust() *networkInterfaceApplicationSecurityGroupAssociationState {
	if niasga.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", niasga.Type(), niasga.LocalName()))
	}
	return niasga.state
}

func (niasga *NetworkInterfaceApplicationSecurityGroupAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(niasga)
}

type NetworkInterfaceApplicationSecurityGroupAssociationArgs struct {
	// ApplicationSecurityGroupId: string, required
	ApplicationSecurityGroupId terra.StringValue `hcl:"application_security_group_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NetworkInterfaceId: string, required
	NetworkInterfaceId terra.StringValue `hcl:"network_interface_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *networkinterfaceapplicationsecuritygroupassociation.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that NetworkInterfaceApplicationSecurityGroupAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type networkInterfaceApplicationSecurityGroupAssociationAttributes struct {
	ref terra.Reference
}

func (niasga networkInterfaceApplicationSecurityGroupAssociationAttributes) ApplicationSecurityGroupId() terra.StringValue {
	return terra.ReferenceString(niasga.ref.Append("application_security_group_id"))
}

func (niasga networkInterfaceApplicationSecurityGroupAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(niasga.ref.Append("id"))
}

func (niasga networkInterfaceApplicationSecurityGroupAssociationAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceString(niasga.ref.Append("network_interface_id"))
}

func (niasga networkInterfaceApplicationSecurityGroupAssociationAttributes) Timeouts() networkinterfaceapplicationsecuritygroupassociation.TimeoutsAttributes {
	return terra.ReferenceSingle[networkinterfaceapplicationsecuritygroupassociation.TimeoutsAttributes](niasga.ref.Append("timeouts"))
}

type networkInterfaceApplicationSecurityGroupAssociationState struct {
	ApplicationSecurityGroupId string                                                             `json:"application_security_group_id"`
	Id                         string                                                             `json:"id"`
	NetworkInterfaceId         string                                                             `json:"network_interface_id"`
	Timeouts                   *networkinterfaceapplicationsecuritygroupassociation.TimeoutsState `json:"timeouts"`
}
