// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	synapseworkspacesqlaadadmin "github.com/golingon/terraproviders/azurerm/3.49.0/synapseworkspacesqlaadadmin"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSynapseWorkspaceSqlAadAdmin(name string, args SynapseWorkspaceSqlAadAdminArgs) *SynapseWorkspaceSqlAadAdmin {
	return &SynapseWorkspaceSqlAadAdmin{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SynapseWorkspaceSqlAadAdmin)(nil)

type SynapseWorkspaceSqlAadAdmin struct {
	Name  string
	Args  SynapseWorkspaceSqlAadAdminArgs
	state *synapseWorkspaceSqlAadAdminState
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) Type() string {
	return "azurerm_synapse_workspace_sql_aad_admin"
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) LocalName() string {
	return swsaa.Name
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) Configuration() interface{} {
	return swsaa.Args
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) Attributes() synapseWorkspaceSqlAadAdminAttributes {
	return synapseWorkspaceSqlAadAdminAttributes{ref: terra.ReferenceResource(swsaa)}
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) ImportState(av io.Reader) error {
	swsaa.state = &synapseWorkspaceSqlAadAdminState{}
	if err := json.NewDecoder(av).Decode(swsaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", swsaa.Type(), swsaa.LocalName(), err)
	}
	return nil
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) State() (*synapseWorkspaceSqlAadAdminState, bool) {
	return swsaa.state, swsaa.state != nil
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) StateMust() *synapseWorkspaceSqlAadAdminState {
	if swsaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", swsaa.Type(), swsaa.LocalName()))
	}
	return swsaa.state
}

func (swsaa *SynapseWorkspaceSqlAadAdmin) DependOn() terra.Reference {
	return terra.ReferenceResource(swsaa)
}

type SynapseWorkspaceSqlAadAdminArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Login: string, required
	Login terra.StringValue `hcl:"login,attr" validate:"required"`
	// ObjectId: string, required
	ObjectId terra.StringValue `hcl:"object_id,attr" validate:"required"`
	// SynapseWorkspaceId: string, required
	SynapseWorkspaceId terra.StringValue `hcl:"synapse_workspace_id,attr" validate:"required"`
	// TenantId: string, required
	TenantId terra.StringValue `hcl:"tenant_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *synapseworkspacesqlaadadmin.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SynapseWorkspaceSqlAadAdmin depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type synapseWorkspaceSqlAadAdminAttributes struct {
	ref terra.Reference
}

func (swsaa synapseWorkspaceSqlAadAdminAttributes) Id() terra.StringValue {
	return terra.ReferenceString(swsaa.ref.Append("id"))
}

func (swsaa synapseWorkspaceSqlAadAdminAttributes) Login() terra.StringValue {
	return terra.ReferenceString(swsaa.ref.Append("login"))
}

func (swsaa synapseWorkspaceSqlAadAdminAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceString(swsaa.ref.Append("object_id"))
}

func (swsaa synapseWorkspaceSqlAadAdminAttributes) SynapseWorkspaceId() terra.StringValue {
	return terra.ReferenceString(swsaa.ref.Append("synapse_workspace_id"))
}

func (swsaa synapseWorkspaceSqlAadAdminAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(swsaa.ref.Append("tenant_id"))
}

func (swsaa synapseWorkspaceSqlAadAdminAttributes) Timeouts() synapseworkspacesqlaadadmin.TimeoutsAttributes {
	return terra.ReferenceSingle[synapseworkspacesqlaadadmin.TimeoutsAttributes](swsaa.ref.Append("timeouts"))
}

type synapseWorkspaceSqlAadAdminState struct {
	Id                 string                                     `json:"id"`
	Login              string                                     `json:"login"`
	ObjectId           string                                     `json:"object_id"`
	SynapseWorkspaceId string                                     `json:"synapse_workspace_id"`
	TenantId           string                                     `json:"tenant_id"`
	Timeouts           *synapseworkspacesqlaadadmin.TimeoutsState `json:"timeouts"`
}
