// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	mysqlactivedirectoryadministrator "github.com/golingon/terraproviders/azurerm/3.49.0/mysqlactivedirectoryadministrator"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewMysqlActiveDirectoryAdministrator(name string, args MysqlActiveDirectoryAdministratorArgs) *MysqlActiveDirectoryAdministrator {
	return &MysqlActiveDirectoryAdministrator{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MysqlActiveDirectoryAdministrator)(nil)

type MysqlActiveDirectoryAdministrator struct {
	Name  string
	Args  MysqlActiveDirectoryAdministratorArgs
	state *mysqlActiveDirectoryAdministratorState
}

func (mada *MysqlActiveDirectoryAdministrator) Type() string {
	return "azurerm_mysql_active_directory_administrator"
}

func (mada *MysqlActiveDirectoryAdministrator) LocalName() string {
	return mada.Name
}

func (mada *MysqlActiveDirectoryAdministrator) Configuration() interface{} {
	return mada.Args
}

func (mada *MysqlActiveDirectoryAdministrator) Attributes() mysqlActiveDirectoryAdministratorAttributes {
	return mysqlActiveDirectoryAdministratorAttributes{ref: terra.ReferenceResource(mada)}
}

func (mada *MysqlActiveDirectoryAdministrator) ImportState(av io.Reader) error {
	mada.state = &mysqlActiveDirectoryAdministratorState{}
	if err := json.NewDecoder(av).Decode(mada.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mada.Type(), mada.LocalName(), err)
	}
	return nil
}

func (mada *MysqlActiveDirectoryAdministrator) State() (*mysqlActiveDirectoryAdministratorState, bool) {
	return mada.state, mada.state != nil
}

func (mada *MysqlActiveDirectoryAdministrator) StateMust() *mysqlActiveDirectoryAdministratorState {
	if mada.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mada.Type(), mada.LocalName()))
	}
	return mada.state
}

func (mada *MysqlActiveDirectoryAdministrator) DependOn() terra.Reference {
	return terra.ReferenceResource(mada)
}

type MysqlActiveDirectoryAdministratorArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Login: string, required
	Login terra.StringValue `hcl:"login,attr" validate:"required"`
	// ObjectId: string, required
	ObjectId terra.StringValue `hcl:"object_id,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServerName: string, required
	ServerName terra.StringValue `hcl:"server_name,attr" validate:"required"`
	// TenantId: string, required
	TenantId terra.StringValue `hcl:"tenant_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *mysqlactivedirectoryadministrator.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that MysqlActiveDirectoryAdministrator depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type mysqlActiveDirectoryAdministratorAttributes struct {
	ref terra.Reference
}

func (mada mysqlActiveDirectoryAdministratorAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mada.ref.Append("id"))
}

func (mada mysqlActiveDirectoryAdministratorAttributes) Login() terra.StringValue {
	return terra.ReferenceString(mada.ref.Append("login"))
}

func (mada mysqlActiveDirectoryAdministratorAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceString(mada.ref.Append("object_id"))
}

func (mada mysqlActiveDirectoryAdministratorAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(mada.ref.Append("resource_group_name"))
}

func (mada mysqlActiveDirectoryAdministratorAttributes) ServerName() terra.StringValue {
	return terra.ReferenceString(mada.ref.Append("server_name"))
}

func (mada mysqlActiveDirectoryAdministratorAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(mada.ref.Append("tenant_id"))
}

func (mada mysqlActiveDirectoryAdministratorAttributes) Timeouts() mysqlactivedirectoryadministrator.TimeoutsAttributes {
	return terra.ReferenceSingle[mysqlactivedirectoryadministrator.TimeoutsAttributes](mada.ref.Append("timeouts"))
}

type mysqlActiveDirectoryAdministratorState struct {
	Id                string                                           `json:"id"`
	Login             string                                           `json:"login"`
	ObjectId          string                                           `json:"object_id"`
	ResourceGroupName string                                           `json:"resource_group_name"`
	ServerName        string                                           `json:"server_name"`
	TenantId          string                                           `json:"tenant_id"`
	Timeouts          *mysqlactivedirectoryadministrator.TimeoutsState `json:"timeouts"`
}
