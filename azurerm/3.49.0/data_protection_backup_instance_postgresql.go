// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	dataprotectionbackupinstancepostgresql "github.com/golingon/terraproviders/azurerm/3.49.0/dataprotectionbackupinstancepostgresql"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDataProtectionBackupInstancePostgresql(name string, args DataProtectionBackupInstancePostgresqlArgs) *DataProtectionBackupInstancePostgresql {
	return &DataProtectionBackupInstancePostgresql{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataProtectionBackupInstancePostgresql)(nil)

type DataProtectionBackupInstancePostgresql struct {
	Name  string
	Args  DataProtectionBackupInstancePostgresqlArgs
	state *dataProtectionBackupInstancePostgresqlState
}

func (dpbip *DataProtectionBackupInstancePostgresql) Type() string {
	return "azurerm_data_protection_backup_instance_postgresql"
}

func (dpbip *DataProtectionBackupInstancePostgresql) LocalName() string {
	return dpbip.Name
}

func (dpbip *DataProtectionBackupInstancePostgresql) Configuration() interface{} {
	return dpbip.Args
}

func (dpbip *DataProtectionBackupInstancePostgresql) Attributes() dataProtectionBackupInstancePostgresqlAttributes {
	return dataProtectionBackupInstancePostgresqlAttributes{ref: terra.ReferenceResource(dpbip)}
}

func (dpbip *DataProtectionBackupInstancePostgresql) ImportState(av io.Reader) error {
	dpbip.state = &dataProtectionBackupInstancePostgresqlState{}
	if err := json.NewDecoder(av).Decode(dpbip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dpbip.Type(), dpbip.LocalName(), err)
	}
	return nil
}

func (dpbip *DataProtectionBackupInstancePostgresql) State() (*dataProtectionBackupInstancePostgresqlState, bool) {
	return dpbip.state, dpbip.state != nil
}

func (dpbip *DataProtectionBackupInstancePostgresql) StateMust() *dataProtectionBackupInstancePostgresqlState {
	if dpbip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dpbip.Type(), dpbip.LocalName()))
	}
	return dpbip.state
}

func (dpbip *DataProtectionBackupInstancePostgresql) DependOn() terra.Reference {
	return terra.ReferenceResource(dpbip)
}

type DataProtectionBackupInstancePostgresqlArgs struct {
	// BackupPolicyId: string, required
	BackupPolicyId terra.StringValue `hcl:"backup_policy_id,attr" validate:"required"`
	// DatabaseCredentialKeyVaultSecretId: string, optional
	DatabaseCredentialKeyVaultSecretId terra.StringValue `hcl:"database_credential_key_vault_secret_id,attr"`
	// DatabaseId: string, required
	DatabaseId terra.StringValue `hcl:"database_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// VaultId: string, required
	VaultId terra.StringValue `hcl:"vault_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dataprotectionbackupinstancepostgresql.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DataProtectionBackupInstancePostgresql depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type dataProtectionBackupInstancePostgresqlAttributes struct {
	ref terra.Reference
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) BackupPolicyId() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("backup_policy_id"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) DatabaseCredentialKeyVaultSecretId() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("database_credential_key_vault_secret_id"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) DatabaseId() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("database_id"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("id"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) Location() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("location"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("name"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) VaultId() terra.StringValue {
	return terra.ReferenceString(dpbip.ref.Append("vault_id"))
}

func (dpbip dataProtectionBackupInstancePostgresqlAttributes) Timeouts() dataprotectionbackupinstancepostgresql.TimeoutsAttributes {
	return terra.ReferenceSingle[dataprotectionbackupinstancepostgresql.TimeoutsAttributes](dpbip.ref.Append("timeouts"))
}

type dataProtectionBackupInstancePostgresqlState struct {
	BackupPolicyId                     string                                                `json:"backup_policy_id"`
	DatabaseCredentialKeyVaultSecretId string                                                `json:"database_credential_key_vault_secret_id"`
	DatabaseId                         string                                                `json:"database_id"`
	Id                                 string                                                `json:"id"`
	Location                           string                                                `json:"location"`
	Name                               string                                                `json:"name"`
	VaultId                            string                                                `json:"vault_id"`
	Timeouts                           *dataprotectionbackupinstancepostgresql.TimeoutsState `json:"timeouts"`
}
