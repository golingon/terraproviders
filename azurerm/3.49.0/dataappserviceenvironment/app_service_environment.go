// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataappserviceenvironment

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ClusterSetting struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type ClusterSettingAttributes struct {
	ref terra.Reference
}

func (cs ClusterSettingAttributes) InternalRef() terra.Reference {
	return cs.ref
}

func (cs ClusterSettingAttributes) InternalWithRef(ref terra.Reference) ClusterSettingAttributes {
	return ClusterSettingAttributes{ref: ref}
}

func (cs ClusterSettingAttributes) InternalTokens() hclwrite.Tokens {
	return cs.ref.InternalTokens()
}

func (cs ClusterSettingAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cs.ref.Append("name"))
}

func (cs ClusterSettingAttributes) Value() terra.StringValue {
	return terra.ReferenceString(cs.ref.Append("value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type ClusterSettingState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
