// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	automationjobschedule "github.com/golingon/terraproviders/azurerm/3.49.0/automationjobschedule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAutomationJobSchedule(name string, args AutomationJobScheduleArgs) *AutomationJobSchedule {
	return &AutomationJobSchedule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AutomationJobSchedule)(nil)

type AutomationJobSchedule struct {
	Name  string
	Args  AutomationJobScheduleArgs
	state *automationJobScheduleState
}

func (ajs *AutomationJobSchedule) Type() string {
	return "azurerm_automation_job_schedule"
}

func (ajs *AutomationJobSchedule) LocalName() string {
	return ajs.Name
}

func (ajs *AutomationJobSchedule) Configuration() interface{} {
	return ajs.Args
}

func (ajs *AutomationJobSchedule) Attributes() automationJobScheduleAttributes {
	return automationJobScheduleAttributes{ref: terra.ReferenceResource(ajs)}
}

func (ajs *AutomationJobSchedule) ImportState(av io.Reader) error {
	ajs.state = &automationJobScheduleState{}
	if err := json.NewDecoder(av).Decode(ajs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ajs.Type(), ajs.LocalName(), err)
	}
	return nil
}

func (ajs *AutomationJobSchedule) State() (*automationJobScheduleState, bool) {
	return ajs.state, ajs.state != nil
}

func (ajs *AutomationJobSchedule) StateMust() *automationJobScheduleState {
	if ajs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ajs.Type(), ajs.LocalName()))
	}
	return ajs.state
}

func (ajs *AutomationJobSchedule) DependOn() terra.Reference {
	return terra.ReferenceResource(ajs)
}

type AutomationJobScheduleArgs struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// JobScheduleId: string, optional
	JobScheduleId terra.StringValue `hcl:"job_schedule_id,attr"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RunOn: string, optional
	RunOn terra.StringValue `hcl:"run_on,attr"`
	// RunbookName: string, required
	RunbookName terra.StringValue `hcl:"runbook_name,attr" validate:"required"`
	// ScheduleName: string, required
	ScheduleName terra.StringValue `hcl:"schedule_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *automationjobschedule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that AutomationJobSchedule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type automationJobScheduleAttributes struct {
	ref terra.Reference
}

func (ajs automationJobScheduleAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("automation_account_name"))
}

func (ajs automationJobScheduleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("id"))
}

func (ajs automationJobScheduleAttributes) JobScheduleId() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("job_schedule_id"))
}

func (ajs automationJobScheduleAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ajs.ref.Append("parameters"))
}

func (ajs automationJobScheduleAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("resource_group_name"))
}

func (ajs automationJobScheduleAttributes) RunOn() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("run_on"))
}

func (ajs automationJobScheduleAttributes) RunbookName() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("runbook_name"))
}

func (ajs automationJobScheduleAttributes) ScheduleName() terra.StringValue {
	return terra.ReferenceString(ajs.ref.Append("schedule_name"))
}

func (ajs automationJobScheduleAttributes) Timeouts() automationjobschedule.TimeoutsAttributes {
	return terra.ReferenceSingle[automationjobschedule.TimeoutsAttributes](ajs.ref.Append("timeouts"))
}

type automationJobScheduleState struct {
	AutomationAccountName string                               `json:"automation_account_name"`
	Id                    string                               `json:"id"`
	JobScheduleId         string                               `json:"job_schedule_id"`
	Parameters            map[string]string                    `json:"parameters"`
	ResourceGroupName     string                               `json:"resource_group_name"`
	RunOn                 string                               `json:"run_on"`
	RunbookName           string                               `json:"runbook_name"`
	ScheduleName          string                               `json:"schedule_name"`
	Timeouts              *automationjobschedule.TimeoutsState `json:"timeouts"`
}
