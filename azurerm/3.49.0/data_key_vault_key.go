// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datakeyvaultkey "github.com/golingon/terraproviders/azurerm/3.49.0/datakeyvaultkey"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKeyVaultKey(name string, args DataKeyVaultKeyArgs) *DataKeyVaultKey {
	return &DataKeyVaultKey{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKeyVaultKey)(nil)

type DataKeyVaultKey struct {
	Name string
	Args DataKeyVaultKeyArgs
}

func (kvk *DataKeyVaultKey) DataSource() string {
	return "azurerm_key_vault_key"
}

func (kvk *DataKeyVaultKey) LocalName() string {
	return kvk.Name
}

func (kvk *DataKeyVaultKey) Configuration() interface{} {
	return kvk.Args
}

func (kvk *DataKeyVaultKey) Attributes() dataKeyVaultKeyAttributes {
	return dataKeyVaultKeyAttributes{ref: terra.ReferenceDataResource(kvk)}
}

type DataKeyVaultKeyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultId: string, required
	KeyVaultId terra.StringValue `hcl:"key_vault_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datakeyvaultkey.Timeouts `hcl:"timeouts,block"`
}
type dataKeyVaultKeyAttributes struct {
	ref terra.Reference
}

func (kvk dataKeyVaultKeyAttributes) Curve() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("curve"))
}

func (kvk dataKeyVaultKeyAttributes) E() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("e"))
}

func (kvk dataKeyVaultKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("id"))
}

func (kvk dataKeyVaultKeyAttributes) KeyOpts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](kvk.ref.Append("key_opts"))
}

func (kvk dataKeyVaultKeyAttributes) KeySize() terra.NumberValue {
	return terra.ReferenceNumber(kvk.ref.Append("key_size"))
}

func (kvk dataKeyVaultKeyAttributes) KeyType() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("key_type"))
}

func (kvk dataKeyVaultKeyAttributes) KeyVaultId() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("key_vault_id"))
}

func (kvk dataKeyVaultKeyAttributes) N() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("n"))
}

func (kvk dataKeyVaultKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("name"))
}

func (kvk dataKeyVaultKeyAttributes) PublicKeyOpenssh() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("public_key_openssh"))
}

func (kvk dataKeyVaultKeyAttributes) PublicKeyPem() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("public_key_pem"))
}

func (kvk dataKeyVaultKeyAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("resource_id"))
}

func (kvk dataKeyVaultKeyAttributes) ResourceVersionlessId() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("resource_versionless_id"))
}

func (kvk dataKeyVaultKeyAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kvk.ref.Append("tags"))
}

func (kvk dataKeyVaultKeyAttributes) Version() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("version"))
}

func (kvk dataKeyVaultKeyAttributes) VersionlessId() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("versionless_id"))
}

func (kvk dataKeyVaultKeyAttributes) X() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("x"))
}

func (kvk dataKeyVaultKeyAttributes) Y() terra.StringValue {
	return terra.ReferenceString(kvk.ref.Append("y"))
}

func (kvk dataKeyVaultKeyAttributes) Timeouts() datakeyvaultkey.TimeoutsAttributes {
	return terra.ReferenceSingle[datakeyvaultkey.TimeoutsAttributes](kvk.ref.Append("timeouts"))
}
