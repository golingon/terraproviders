// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementapioperationtag "github.com/golingon/terraproviders/azurerm/3.49.0/apimanagementapioperationtag"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiManagementApiOperationTag(name string, args ApiManagementApiOperationTagArgs) *ApiManagementApiOperationTag {
	return &ApiManagementApiOperationTag{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementApiOperationTag)(nil)

type ApiManagementApiOperationTag struct {
	Name  string
	Args  ApiManagementApiOperationTagArgs
	state *apiManagementApiOperationTagState
}

func (amaot *ApiManagementApiOperationTag) Type() string {
	return "azurerm_api_management_api_operation_tag"
}

func (amaot *ApiManagementApiOperationTag) LocalName() string {
	return amaot.Name
}

func (amaot *ApiManagementApiOperationTag) Configuration() interface{} {
	return amaot.Args
}

func (amaot *ApiManagementApiOperationTag) Attributes() apiManagementApiOperationTagAttributes {
	return apiManagementApiOperationTagAttributes{ref: terra.ReferenceResource(amaot)}
}

func (amaot *ApiManagementApiOperationTag) ImportState(av io.Reader) error {
	amaot.state = &apiManagementApiOperationTagState{}
	if err := json.NewDecoder(av).Decode(amaot.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amaot.Type(), amaot.LocalName(), err)
	}
	return nil
}

func (amaot *ApiManagementApiOperationTag) State() (*apiManagementApiOperationTagState, bool) {
	return amaot.state, amaot.state != nil
}

func (amaot *ApiManagementApiOperationTag) StateMust() *apiManagementApiOperationTagState {
	if amaot.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amaot.Type(), amaot.LocalName()))
	}
	return amaot.state
}

func (amaot *ApiManagementApiOperationTag) DependOn() terra.Reference {
	return terra.ReferenceResource(amaot)
}

type ApiManagementApiOperationTagArgs struct {
	// ApiOperationId: string, required
	ApiOperationId terra.StringValue `hcl:"api_operation_id,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *apimanagementapioperationtag.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApiManagementApiOperationTag depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiManagementApiOperationTagAttributes struct {
	ref terra.Reference
}

func (amaot apiManagementApiOperationTagAttributes) ApiOperationId() terra.StringValue {
	return terra.ReferenceString(amaot.ref.Append("api_operation_id"))
}

func (amaot apiManagementApiOperationTagAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(amaot.ref.Append("display_name"))
}

func (amaot apiManagementApiOperationTagAttributes) Id() terra.StringValue {
	return terra.ReferenceString(amaot.ref.Append("id"))
}

func (amaot apiManagementApiOperationTagAttributes) Name() terra.StringValue {
	return terra.ReferenceString(amaot.ref.Append("name"))
}

func (amaot apiManagementApiOperationTagAttributes) Timeouts() apimanagementapioperationtag.TimeoutsAttributes {
	return terra.ReferenceSingle[apimanagementapioperationtag.TimeoutsAttributes](amaot.ref.Append("timeouts"))
}

type apiManagementApiOperationTagState struct {
	ApiOperationId string                                      `json:"api_operation_id"`
	DisplayName    string                                      `json:"display_name"`
	Id             string                                      `json:"id"`
	Name           string                                      `json:"name"`
	Timeouts       *apimanagementapioperationtag.TimeoutsState `json:"timeouts"`
}
