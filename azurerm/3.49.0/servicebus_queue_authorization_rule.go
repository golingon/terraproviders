// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	servicebusqueueauthorizationrule "github.com/golingon/terraproviders/azurerm/3.49.0/servicebusqueueauthorizationrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewServicebusQueueAuthorizationRule(name string, args ServicebusQueueAuthorizationRuleArgs) *ServicebusQueueAuthorizationRule {
	return &ServicebusQueueAuthorizationRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServicebusQueueAuthorizationRule)(nil)

type ServicebusQueueAuthorizationRule struct {
	Name  string
	Args  ServicebusQueueAuthorizationRuleArgs
	state *servicebusQueueAuthorizationRuleState
}

func (sqar *ServicebusQueueAuthorizationRule) Type() string {
	return "azurerm_servicebus_queue_authorization_rule"
}

func (sqar *ServicebusQueueAuthorizationRule) LocalName() string {
	return sqar.Name
}

func (sqar *ServicebusQueueAuthorizationRule) Configuration() interface{} {
	return sqar.Args
}

func (sqar *ServicebusQueueAuthorizationRule) Attributes() servicebusQueueAuthorizationRuleAttributes {
	return servicebusQueueAuthorizationRuleAttributes{ref: terra.ReferenceResource(sqar)}
}

func (sqar *ServicebusQueueAuthorizationRule) ImportState(av io.Reader) error {
	sqar.state = &servicebusQueueAuthorizationRuleState{}
	if err := json.NewDecoder(av).Decode(sqar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sqar.Type(), sqar.LocalName(), err)
	}
	return nil
}

func (sqar *ServicebusQueueAuthorizationRule) State() (*servicebusQueueAuthorizationRuleState, bool) {
	return sqar.state, sqar.state != nil
}

func (sqar *ServicebusQueueAuthorizationRule) StateMust() *servicebusQueueAuthorizationRuleState {
	if sqar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sqar.Type(), sqar.LocalName()))
	}
	return sqar.state
}

func (sqar *ServicebusQueueAuthorizationRule) DependOn() terra.Reference {
	return terra.ReferenceResource(sqar)
}

type ServicebusQueueAuthorizationRuleArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Listen: bool, optional
	Listen terra.BoolValue `hcl:"listen,attr"`
	// Manage: bool, optional
	Manage terra.BoolValue `hcl:"manage,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueueId: string, required
	QueueId terra.StringValue `hcl:"queue_id,attr" validate:"required"`
	// Send: bool, optional
	Send terra.BoolValue `hcl:"send,attr"`
	// Timeouts: optional
	Timeouts *servicebusqueueauthorizationrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ServicebusQueueAuthorizationRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type servicebusQueueAuthorizationRuleAttributes struct {
	ref terra.Reference
}

func (sqar servicebusQueueAuthorizationRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("id"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) Listen() terra.BoolValue {
	return terra.ReferenceBool(sqar.ref.Append("listen"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) Manage() terra.BoolValue {
	return terra.ReferenceBool(sqar.ref.Append("manage"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("name"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("primary_connection_string"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) PrimaryConnectionStringAlias() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("primary_connection_string_alias"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("primary_key"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) QueueId() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("queue_id"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("secondary_connection_string"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) SecondaryConnectionStringAlias() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("secondary_connection_string_alias"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceString(sqar.ref.Append("secondary_key"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) Send() terra.BoolValue {
	return terra.ReferenceBool(sqar.ref.Append("send"))
}

func (sqar servicebusQueueAuthorizationRuleAttributes) Timeouts() servicebusqueueauthorizationrule.TimeoutsAttributes {
	return terra.ReferenceSingle[servicebusqueueauthorizationrule.TimeoutsAttributes](sqar.ref.Append("timeouts"))
}

type servicebusQueueAuthorizationRuleState struct {
	Id                             string                                          `json:"id"`
	Listen                         bool                                            `json:"listen"`
	Manage                         bool                                            `json:"manage"`
	Name                           string                                          `json:"name"`
	PrimaryConnectionString        string                                          `json:"primary_connection_string"`
	PrimaryConnectionStringAlias   string                                          `json:"primary_connection_string_alias"`
	PrimaryKey                     string                                          `json:"primary_key"`
	QueueId                        string                                          `json:"queue_id"`
	SecondaryConnectionString      string                                          `json:"secondary_connection_string"`
	SecondaryConnectionStringAlias string                                          `json:"secondary_connection_string_alias"`
	SecondaryKey                   string                                          `json:"secondary_key"`
	Send                           bool                                            `json:"send"`
	Timeouts                       *servicebusqueueauthorizationrule.TimeoutsState `json:"timeouts"`
}
