// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datamonitorscheduledqueryrulesalert "github.com/golingon/terraproviders/azurerm/3.49.0/datamonitorscheduledqueryrulesalert"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMonitorScheduledQueryRulesAlert(name string, args DataMonitorScheduledQueryRulesAlertArgs) *DataMonitorScheduledQueryRulesAlert {
	return &DataMonitorScheduledQueryRulesAlert{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMonitorScheduledQueryRulesAlert)(nil)

type DataMonitorScheduledQueryRulesAlert struct {
	Name string
	Args DataMonitorScheduledQueryRulesAlertArgs
}

func (msqra *DataMonitorScheduledQueryRulesAlert) DataSource() string {
	return "azurerm_monitor_scheduled_query_rules_alert"
}

func (msqra *DataMonitorScheduledQueryRulesAlert) LocalName() string {
	return msqra.Name
}

func (msqra *DataMonitorScheduledQueryRulesAlert) Configuration() interface{} {
	return msqra.Args
}

func (msqra *DataMonitorScheduledQueryRulesAlert) Attributes() dataMonitorScheduledQueryRulesAlertAttributes {
	return dataMonitorScheduledQueryRulesAlertAttributes{ref: terra.ReferenceDataResource(msqra)}
}

type DataMonitorScheduledQueryRulesAlertArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Action: min=0
	Action []datamonitorscheduledqueryrulesalert.Action `hcl:"action,block" validate:"min=0"`
	// Trigger: min=0
	Trigger []datamonitorscheduledqueryrulesalert.Trigger `hcl:"trigger,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datamonitorscheduledqueryrulesalert.Timeouts `hcl:"timeouts,block"`
}
type dataMonitorScheduledQueryRulesAlertAttributes struct {
	ref terra.Reference
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) AuthorizedResourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](msqra.ref.Append("authorized_resource_ids"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) DataSourceId() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("data_source_id"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Description() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("description"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(msqra.ref.Append("enabled"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Frequency() terra.NumberValue {
	return terra.ReferenceNumber(msqra.ref.Append("frequency"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Id() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("id"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Location() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("location"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Name() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("name"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Query() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("query"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) QueryType() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("query_type"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(msqra.ref.Append("resource_group_name"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Severity() terra.NumberValue {
	return terra.ReferenceNumber(msqra.ref.Append("severity"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](msqra.ref.Append("tags"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Throttling() terra.NumberValue {
	return terra.ReferenceNumber(msqra.ref.Append("throttling"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) TimeWindow() terra.NumberValue {
	return terra.ReferenceNumber(msqra.ref.Append("time_window"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Action() terra.SetValue[datamonitorscheduledqueryrulesalert.ActionAttributes] {
	return terra.ReferenceSet[datamonitorscheduledqueryrulesalert.ActionAttributes](msqra.ref.Append("action"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Trigger() terra.SetValue[datamonitorscheduledqueryrulesalert.TriggerAttributes] {
	return terra.ReferenceSet[datamonitorscheduledqueryrulesalert.TriggerAttributes](msqra.ref.Append("trigger"))
}

func (msqra dataMonitorScheduledQueryRulesAlertAttributes) Timeouts() datamonitorscheduledqueryrulesalert.TimeoutsAttributes {
	return terra.ReferenceSingle[datamonitorscheduledqueryrulesalert.TimeoutsAttributes](msqra.ref.Append("timeouts"))
}
