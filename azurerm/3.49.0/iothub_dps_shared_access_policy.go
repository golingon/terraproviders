// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iothubdpssharedaccesspolicy "github.com/golingon/terraproviders/azurerm/3.49.0/iothubdpssharedaccesspolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIothubDpsSharedAccessPolicy(name string, args IothubDpsSharedAccessPolicyArgs) *IothubDpsSharedAccessPolicy {
	return &IothubDpsSharedAccessPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IothubDpsSharedAccessPolicy)(nil)

type IothubDpsSharedAccessPolicy struct {
	Name  string
	Args  IothubDpsSharedAccessPolicyArgs
	state *iothubDpsSharedAccessPolicyState
}

func (idsap *IothubDpsSharedAccessPolicy) Type() string {
	return "azurerm_iothub_dps_shared_access_policy"
}

func (idsap *IothubDpsSharedAccessPolicy) LocalName() string {
	return idsap.Name
}

func (idsap *IothubDpsSharedAccessPolicy) Configuration() interface{} {
	return idsap.Args
}

func (idsap *IothubDpsSharedAccessPolicy) Attributes() iothubDpsSharedAccessPolicyAttributes {
	return iothubDpsSharedAccessPolicyAttributes{ref: terra.ReferenceResource(idsap)}
}

func (idsap *IothubDpsSharedAccessPolicy) ImportState(av io.Reader) error {
	idsap.state = &iothubDpsSharedAccessPolicyState{}
	if err := json.NewDecoder(av).Decode(idsap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", idsap.Type(), idsap.LocalName(), err)
	}
	return nil
}

func (idsap *IothubDpsSharedAccessPolicy) State() (*iothubDpsSharedAccessPolicyState, bool) {
	return idsap.state, idsap.state != nil
}

func (idsap *IothubDpsSharedAccessPolicy) StateMust() *iothubDpsSharedAccessPolicyState {
	if idsap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", idsap.Type(), idsap.LocalName()))
	}
	return idsap.state
}

func (idsap *IothubDpsSharedAccessPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(idsap)
}

type IothubDpsSharedAccessPolicyArgs struct {
	// EnrollmentRead: bool, optional
	EnrollmentRead terra.BoolValue `hcl:"enrollment_read,attr"`
	// EnrollmentWrite: bool, optional
	EnrollmentWrite terra.BoolValue `hcl:"enrollment_write,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubDpsName: string, required
	IothubDpsName terra.StringValue `hcl:"iothub_dps_name,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RegistrationRead: bool, optional
	RegistrationRead terra.BoolValue `hcl:"registration_read,attr"`
	// RegistrationWrite: bool, optional
	RegistrationWrite terra.BoolValue `hcl:"registration_write,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServiceConfig: bool, optional
	ServiceConfig terra.BoolValue `hcl:"service_config,attr"`
	// Timeouts: optional
	Timeouts *iothubdpssharedaccesspolicy.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IothubDpsSharedAccessPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iothubDpsSharedAccessPolicyAttributes struct {
	ref terra.Reference
}

func (idsap iothubDpsSharedAccessPolicyAttributes) EnrollmentRead() terra.BoolValue {
	return terra.ReferenceBool(idsap.ref.Append("enrollment_read"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) EnrollmentWrite() terra.BoolValue {
	return terra.ReferenceBool(idsap.ref.Append("enrollment_write"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("id"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) IothubDpsName() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("iothub_dps_name"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("name"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("primary_connection_string"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("primary_key"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) RegistrationRead() terra.BoolValue {
	return terra.ReferenceBool(idsap.ref.Append("registration_read"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) RegistrationWrite() terra.BoolValue {
	return terra.ReferenceBool(idsap.ref.Append("registration_write"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("resource_group_name"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("secondary_connection_string"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceString(idsap.ref.Append("secondary_key"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) ServiceConfig() terra.BoolValue {
	return terra.ReferenceBool(idsap.ref.Append("service_config"))
}

func (idsap iothubDpsSharedAccessPolicyAttributes) Timeouts() iothubdpssharedaccesspolicy.TimeoutsAttributes {
	return terra.ReferenceSingle[iothubdpssharedaccesspolicy.TimeoutsAttributes](idsap.ref.Append("timeouts"))
}

type iothubDpsSharedAccessPolicyState struct {
	EnrollmentRead            bool                                       `json:"enrollment_read"`
	EnrollmentWrite           bool                                       `json:"enrollment_write"`
	Id                        string                                     `json:"id"`
	IothubDpsName             string                                     `json:"iothub_dps_name"`
	Name                      string                                     `json:"name"`
	PrimaryConnectionString   string                                     `json:"primary_connection_string"`
	PrimaryKey                string                                     `json:"primary_key"`
	RegistrationRead          bool                                       `json:"registration_read"`
	RegistrationWrite         bool                                       `json:"registration_write"`
	ResourceGroupName         string                                     `json:"resource_group_name"`
	SecondaryConnectionString string                                     `json:"secondary_connection_string"`
	SecondaryKey              string                                     `json:"secondary_key"`
	ServiceConfig             bool                                       `json:"service_config"`
	Timeouts                  *iothubdpssharedaccesspolicy.TimeoutsState `json:"timeouts"`
}
