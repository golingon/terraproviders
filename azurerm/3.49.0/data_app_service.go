// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataappservice "github.com/golingon/terraproviders/azurerm/3.49.0/dataappservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataAppService(name string, args DataAppServiceArgs) *DataAppService {
	return &DataAppService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAppService)(nil)

type DataAppService struct {
	Name string
	Args DataAppServiceArgs
}

func (as *DataAppService) DataSource() string {
	return "azurerm_app_service"
}

func (as *DataAppService) LocalName() string {
	return as.Name
}

func (as *DataAppService) Configuration() interface{} {
	return as.Args
}

func (as *DataAppService) Attributes() dataAppServiceAttributes {
	return dataAppServiceAttributes{ref: terra.ReferenceDataResource(as)}
}

type DataAppServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ConnectionString: min=0
	ConnectionString []dataappservice.ConnectionString `hcl:"connection_string,block" validate:"min=0"`
	// SiteConfig: min=0
	SiteConfig []dataappservice.SiteConfig `hcl:"site_config,block" validate:"min=0"`
	// SiteCredential: min=0
	SiteCredential []dataappservice.SiteCredential `hcl:"site_credential,block" validate:"min=0"`
	// SourceControl: min=0
	SourceControl []dataappservice.SourceControl `hcl:"source_control,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataappservice.Timeouts `hcl:"timeouts,block"`
}
type dataAppServiceAttributes struct {
	ref terra.Reference
}

func (as dataAppServiceAttributes) AppServicePlanId() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("app_service_plan_id"))
}

func (as dataAppServiceAttributes) AppSettings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](as.ref.Append("app_settings"))
}

func (as dataAppServiceAttributes) ClientAffinityEnabled() terra.BoolValue {
	return terra.ReferenceBool(as.ref.Append("client_affinity_enabled"))
}

func (as dataAppServiceAttributes) ClientCertEnabled() terra.BoolValue {
	return terra.ReferenceBool(as.ref.Append("client_cert_enabled"))
}

func (as dataAppServiceAttributes) CustomDomainVerificationId() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("custom_domain_verification_id"))
}

func (as dataAppServiceAttributes) DefaultSiteHostname() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("default_site_hostname"))
}

func (as dataAppServiceAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(as.ref.Append("enabled"))
}

func (as dataAppServiceAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceBool(as.ref.Append("https_only"))
}

func (as dataAppServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("id"))
}

func (as dataAppServiceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("location"))
}

func (as dataAppServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("name"))
}

func (as dataAppServiceAttributes) OutboundIpAddressList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](as.ref.Append("outbound_ip_address_list"))
}

func (as dataAppServiceAttributes) OutboundIpAddresses() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("outbound_ip_addresses"))
}

func (as dataAppServiceAttributes) PossibleOutboundIpAddressList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](as.ref.Append("possible_outbound_ip_address_list"))
}

func (as dataAppServiceAttributes) PossibleOutboundIpAddresses() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("possible_outbound_ip_addresses"))
}

func (as dataAppServiceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(as.ref.Append("resource_group_name"))
}

func (as dataAppServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](as.ref.Append("tags"))
}

func (as dataAppServiceAttributes) ConnectionString() terra.ListValue[dataappservice.ConnectionStringAttributes] {
	return terra.ReferenceList[dataappservice.ConnectionStringAttributes](as.ref.Append("connection_string"))
}

func (as dataAppServiceAttributes) SiteConfig() terra.ListValue[dataappservice.SiteConfigAttributes] {
	return terra.ReferenceList[dataappservice.SiteConfigAttributes](as.ref.Append("site_config"))
}

func (as dataAppServiceAttributes) SiteCredential() terra.ListValue[dataappservice.SiteCredentialAttributes] {
	return terra.ReferenceList[dataappservice.SiteCredentialAttributes](as.ref.Append("site_credential"))
}

func (as dataAppServiceAttributes) SourceControl() terra.ListValue[dataappservice.SourceControlAttributes] {
	return terra.ReferenceList[dataappservice.SourceControlAttributes](as.ref.Append("source_control"))
}

func (as dataAppServiceAttributes) Timeouts() dataappservice.TimeoutsAttributes {
	return terra.ReferenceSingle[dataappservice.TimeoutsAttributes](as.ref.Append("timeouts"))
}
