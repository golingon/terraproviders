// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	cdnfrontdoorfirewallpolicy "github.com/golingon/terraproviders/azurerm/3.49.0/cdnfrontdoorfirewallpolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCdnFrontdoorFirewallPolicy(name string, args CdnFrontdoorFirewallPolicyArgs) *CdnFrontdoorFirewallPolicy {
	return &CdnFrontdoorFirewallPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CdnFrontdoorFirewallPolicy)(nil)

type CdnFrontdoorFirewallPolicy struct {
	Name  string
	Args  CdnFrontdoorFirewallPolicyArgs
	state *cdnFrontdoorFirewallPolicyState
}

func (cffp *CdnFrontdoorFirewallPolicy) Type() string {
	return "azurerm_cdn_frontdoor_firewall_policy"
}

func (cffp *CdnFrontdoorFirewallPolicy) LocalName() string {
	return cffp.Name
}

func (cffp *CdnFrontdoorFirewallPolicy) Configuration() interface{} {
	return cffp.Args
}

func (cffp *CdnFrontdoorFirewallPolicy) Attributes() cdnFrontdoorFirewallPolicyAttributes {
	return cdnFrontdoorFirewallPolicyAttributes{ref: terra.ReferenceResource(cffp)}
}

func (cffp *CdnFrontdoorFirewallPolicy) ImportState(av io.Reader) error {
	cffp.state = &cdnFrontdoorFirewallPolicyState{}
	if err := json.NewDecoder(av).Decode(cffp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cffp.Type(), cffp.LocalName(), err)
	}
	return nil
}

func (cffp *CdnFrontdoorFirewallPolicy) State() (*cdnFrontdoorFirewallPolicyState, bool) {
	return cffp.state, cffp.state != nil
}

func (cffp *CdnFrontdoorFirewallPolicy) StateMust() *cdnFrontdoorFirewallPolicyState {
	if cffp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cffp.Type(), cffp.LocalName()))
	}
	return cffp.state
}

func (cffp *CdnFrontdoorFirewallPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(cffp)
}

type CdnFrontdoorFirewallPolicyArgs struct {
	// CustomBlockResponseBody: string, optional
	CustomBlockResponseBody terra.StringValue `hcl:"custom_block_response_body,attr"`
	// CustomBlockResponseStatusCode: number, optional
	CustomBlockResponseStatusCode terra.NumberValue `hcl:"custom_block_response_status_code,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Mode: string, required
	Mode terra.StringValue `hcl:"mode,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RedirectUrl: string, optional
	RedirectUrl terra.StringValue `hcl:"redirect_url,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, required
	SkuName terra.StringValue `hcl:"sku_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// CustomRule: min=0,max=100
	CustomRule []cdnfrontdoorfirewallpolicy.CustomRule `hcl:"custom_rule,block" validate:"min=0,max=100"`
	// ManagedRule: min=0,max=100
	ManagedRule []cdnfrontdoorfirewallpolicy.ManagedRule `hcl:"managed_rule,block" validate:"min=0,max=100"`
	// Timeouts: optional
	Timeouts *cdnfrontdoorfirewallpolicy.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CdnFrontdoorFirewallPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cdnFrontdoorFirewallPolicyAttributes struct {
	ref terra.Reference
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) CustomBlockResponseBody() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("custom_block_response_body"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) CustomBlockResponseStatusCode() terra.NumberValue {
	return terra.ReferenceNumber(cffp.ref.Append("custom_block_response_status_code"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(cffp.ref.Append("enabled"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) FrontendEndpointIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cffp.ref.Append("frontend_endpoint_ids"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("id"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) Mode() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("mode"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("name"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) RedirectUrl() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("redirect_url"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("resource_group_name"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) SkuName() terra.StringValue {
	return terra.ReferenceString(cffp.ref.Append("sku_name"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cffp.ref.Append("tags"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) CustomRule() terra.ListValue[cdnfrontdoorfirewallpolicy.CustomRuleAttributes] {
	return terra.ReferenceList[cdnfrontdoorfirewallpolicy.CustomRuleAttributes](cffp.ref.Append("custom_rule"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) ManagedRule() terra.ListValue[cdnfrontdoorfirewallpolicy.ManagedRuleAttributes] {
	return terra.ReferenceList[cdnfrontdoorfirewallpolicy.ManagedRuleAttributes](cffp.ref.Append("managed_rule"))
}

func (cffp cdnFrontdoorFirewallPolicyAttributes) Timeouts() cdnfrontdoorfirewallpolicy.TimeoutsAttributes {
	return terra.ReferenceSingle[cdnfrontdoorfirewallpolicy.TimeoutsAttributes](cffp.ref.Append("timeouts"))
}

type cdnFrontdoorFirewallPolicyState struct {
	CustomBlockResponseBody       string                                        `json:"custom_block_response_body"`
	CustomBlockResponseStatusCode float64                                       `json:"custom_block_response_status_code"`
	Enabled                       bool                                          `json:"enabled"`
	FrontendEndpointIds           []string                                      `json:"frontend_endpoint_ids"`
	Id                            string                                        `json:"id"`
	Mode                          string                                        `json:"mode"`
	Name                          string                                        `json:"name"`
	RedirectUrl                   string                                        `json:"redirect_url"`
	ResourceGroupName             string                                        `json:"resource_group_name"`
	SkuName                       string                                        `json:"sku_name"`
	Tags                          map[string]string                             `json:"tags"`
	CustomRule                    []cdnfrontdoorfirewallpolicy.CustomRuleState  `json:"custom_rule"`
	ManagedRule                   []cdnfrontdoorfirewallpolicy.ManagedRuleState `json:"managed_rule"`
	Timeouts                      *cdnfrontdoorfirewallpolicy.TimeoutsState     `json:"timeouts"`
}
