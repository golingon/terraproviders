// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	cdnfrontdoorrule "github.com/golingon/terraproviders/azurerm/3.49.0/cdnfrontdoorrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCdnFrontdoorRule(name string, args CdnFrontdoorRuleArgs) *CdnFrontdoorRule {
	return &CdnFrontdoorRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CdnFrontdoorRule)(nil)

type CdnFrontdoorRule struct {
	Name  string
	Args  CdnFrontdoorRuleArgs
	state *cdnFrontdoorRuleState
}

func (cfr *CdnFrontdoorRule) Type() string {
	return "azurerm_cdn_frontdoor_rule"
}

func (cfr *CdnFrontdoorRule) LocalName() string {
	return cfr.Name
}

func (cfr *CdnFrontdoorRule) Configuration() interface{} {
	return cfr.Args
}

func (cfr *CdnFrontdoorRule) Attributes() cdnFrontdoorRuleAttributes {
	return cdnFrontdoorRuleAttributes{ref: terra.ReferenceResource(cfr)}
}

func (cfr *CdnFrontdoorRule) ImportState(av io.Reader) error {
	cfr.state = &cdnFrontdoorRuleState{}
	if err := json.NewDecoder(av).Decode(cfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cfr.Type(), cfr.LocalName(), err)
	}
	return nil
}

func (cfr *CdnFrontdoorRule) State() (*cdnFrontdoorRuleState, bool) {
	return cfr.state, cfr.state != nil
}

func (cfr *CdnFrontdoorRule) StateMust() *cdnFrontdoorRuleState {
	if cfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cfr.Type(), cfr.LocalName()))
	}
	return cfr.state
}

func (cfr *CdnFrontdoorRule) DependOn() terra.Reference {
	return terra.ReferenceResource(cfr)
}

type CdnFrontdoorRuleArgs struct {
	// BehaviorOnMatch: string, optional
	BehaviorOnMatch terra.StringValue `hcl:"behavior_on_match,attr"`
	// CdnFrontdoorRuleSetId: string, required
	CdnFrontdoorRuleSetId terra.StringValue `hcl:"cdn_frontdoor_rule_set_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Order: number, required
	Order terra.NumberValue `hcl:"order,attr" validate:"required"`
	// Actions: required
	Actions *cdnfrontdoorrule.Actions `hcl:"actions,block" validate:"required"`
	// Conditions: optional
	Conditions *cdnfrontdoorrule.Conditions `hcl:"conditions,block"`
	// Timeouts: optional
	Timeouts *cdnfrontdoorrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CdnFrontdoorRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cdnFrontdoorRuleAttributes struct {
	ref terra.Reference
}

func (cfr cdnFrontdoorRuleAttributes) BehaviorOnMatch() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("behavior_on_match"))
}

func (cfr cdnFrontdoorRuleAttributes) CdnFrontdoorRuleSetId() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("cdn_frontdoor_rule_set_id"))
}

func (cfr cdnFrontdoorRuleAttributes) CdnFrontdoorRuleSetName() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("cdn_frontdoor_rule_set_name"))
}

func (cfr cdnFrontdoorRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("id"))
}

func (cfr cdnFrontdoorRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cfr.ref.Append("name"))
}

func (cfr cdnFrontdoorRuleAttributes) Order() terra.NumberValue {
	return terra.ReferenceNumber(cfr.ref.Append("order"))
}

func (cfr cdnFrontdoorRuleAttributes) Actions() terra.ListValue[cdnfrontdoorrule.ActionsAttributes] {
	return terra.ReferenceList[cdnfrontdoorrule.ActionsAttributes](cfr.ref.Append("actions"))
}

func (cfr cdnFrontdoorRuleAttributes) Conditions() terra.ListValue[cdnfrontdoorrule.ConditionsAttributes] {
	return terra.ReferenceList[cdnfrontdoorrule.ConditionsAttributes](cfr.ref.Append("conditions"))
}

func (cfr cdnFrontdoorRuleAttributes) Timeouts() cdnfrontdoorrule.TimeoutsAttributes {
	return terra.ReferenceSingle[cdnfrontdoorrule.TimeoutsAttributes](cfr.ref.Append("timeouts"))
}

type cdnFrontdoorRuleState struct {
	BehaviorOnMatch         string                             `json:"behavior_on_match"`
	CdnFrontdoorRuleSetId   string                             `json:"cdn_frontdoor_rule_set_id"`
	CdnFrontdoorRuleSetName string                             `json:"cdn_frontdoor_rule_set_name"`
	Id                      string                             `json:"id"`
	Name                    string                             `json:"name"`
	Order                   float64                            `json:"order"`
	Actions                 []cdnfrontdoorrule.ActionsState    `json:"actions"`
	Conditions              []cdnfrontdoorrule.ConditionsState `json:"conditions"`
	Timeouts                *cdnfrontdoorrule.TimeoutsState    `json:"timeouts"`
}
