// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package databoxedgeorder

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ReturnTracking struct{}

type ShipmentHistory struct{}

type ShipmentTracking struct{}

type Status struct{}

type Contact struct {
	// CompanyName: string, required
	CompanyName terra.StringValue `hcl:"company_name,attr" validate:"required"`
	// Emails: set of string, required
	Emails terra.SetValue[terra.StringValue] `hcl:"emails,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PhoneNumber: string, required
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
}

type ShipmentAddress struct {
	// Address: list of string, required
	Address terra.ListValue[terra.StringValue] `hcl:"address,attr" validate:"required"`
	// City: string, required
	City terra.StringValue `hcl:"city,attr" validate:"required"`
	// Country: string, required
	Country terra.StringValue `hcl:"country,attr" validate:"required"`
	// PostalCode: string, required
	PostalCode terra.StringValue `hcl:"postal_code,attr" validate:"required"`
	// State: string, required
	State terra.StringValue `hcl:"state,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ReturnTrackingAttributes struct {
	ref terra.Reference
}

func (rt ReturnTrackingAttributes) InternalRef() terra.Reference {
	return rt.ref
}

func (rt ReturnTrackingAttributes) InternalWithRef(ref terra.Reference) ReturnTrackingAttributes {
	return ReturnTrackingAttributes{ref: ref}
}

func (rt ReturnTrackingAttributes) InternalTokens() hclwrite.Tokens {
	return rt.ref.InternalTokens()
}

func (rt ReturnTrackingAttributes) CarrierName() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("carrier_name"))
}

func (rt ReturnTrackingAttributes) SerialNumber() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("serial_number"))
}

func (rt ReturnTrackingAttributes) TrackingId() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("tracking_id"))
}

func (rt ReturnTrackingAttributes) TrackingUrl() terra.StringValue {
	return terra.ReferenceString(rt.ref.Append("tracking_url"))
}

type ShipmentHistoryAttributes struct {
	ref terra.Reference
}

func (sh ShipmentHistoryAttributes) InternalRef() terra.Reference {
	return sh.ref
}

func (sh ShipmentHistoryAttributes) InternalWithRef(ref terra.Reference) ShipmentHistoryAttributes {
	return ShipmentHistoryAttributes{ref: ref}
}

func (sh ShipmentHistoryAttributes) InternalTokens() hclwrite.Tokens {
	return sh.ref.InternalTokens()
}

func (sh ShipmentHistoryAttributes) AdditionalDetails() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sh.ref.Append("additional_details"))
}

func (sh ShipmentHistoryAttributes) Comments() terra.StringValue {
	return terra.ReferenceString(sh.ref.Append("comments"))
}

func (sh ShipmentHistoryAttributes) LastUpdate() terra.StringValue {
	return terra.ReferenceString(sh.ref.Append("last_update"))
}

type ShipmentTrackingAttributes struct {
	ref terra.Reference
}

func (st ShipmentTrackingAttributes) InternalRef() terra.Reference {
	return st.ref
}

func (st ShipmentTrackingAttributes) InternalWithRef(ref terra.Reference) ShipmentTrackingAttributes {
	return ShipmentTrackingAttributes{ref: ref}
}

func (st ShipmentTrackingAttributes) InternalTokens() hclwrite.Tokens {
	return st.ref.InternalTokens()
}

func (st ShipmentTrackingAttributes) CarrierName() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("carrier_name"))
}

func (st ShipmentTrackingAttributes) SerialNumber() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("serial_number"))
}

func (st ShipmentTrackingAttributes) TrackingId() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("tracking_id"))
}

func (st ShipmentTrackingAttributes) TrackingUrl() terra.StringValue {
	return terra.ReferenceString(st.ref.Append("tracking_url"))
}

type StatusAttributes struct {
	ref terra.Reference
}

func (s StatusAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s StatusAttributes) InternalWithRef(ref terra.Reference) StatusAttributes {
	return StatusAttributes{ref: ref}
}

func (s StatusAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s StatusAttributes) AdditionalDetails() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](s.ref.Append("additional_details"))
}

func (s StatusAttributes) Comments() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("comments"))
}

func (s StatusAttributes) Info() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("info"))
}

func (s StatusAttributes) LastUpdate() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("last_update"))
}

type ContactAttributes struct {
	ref terra.Reference
}

func (c ContactAttributes) InternalRef() terra.Reference {
	return c.ref
}

func (c ContactAttributes) InternalWithRef(ref terra.Reference) ContactAttributes {
	return ContactAttributes{ref: ref}
}

func (c ContactAttributes) InternalTokens() hclwrite.Tokens {
	return c.ref.InternalTokens()
}

func (c ContactAttributes) CompanyName() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("company_name"))
}

func (c ContactAttributes) Emails() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](c.ref.Append("emails"))
}

func (c ContactAttributes) Name() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("name"))
}

func (c ContactAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("phone_number"))
}

type ShipmentAddressAttributes struct {
	ref terra.Reference
}

func (sa ShipmentAddressAttributes) InternalRef() terra.Reference {
	return sa.ref
}

func (sa ShipmentAddressAttributes) InternalWithRef(ref terra.Reference) ShipmentAddressAttributes {
	return ShipmentAddressAttributes{ref: ref}
}

func (sa ShipmentAddressAttributes) InternalTokens() hclwrite.Tokens {
	return sa.ref.InternalTokens()
}

func (sa ShipmentAddressAttributes) Address() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sa.ref.Append("address"))
}

func (sa ShipmentAddressAttributes) City() terra.StringValue {
	return terra.ReferenceString(sa.ref.Append("city"))
}

func (sa ShipmentAddressAttributes) Country() terra.StringValue {
	return terra.ReferenceString(sa.ref.Append("country"))
}

func (sa ShipmentAddressAttributes) PostalCode() terra.StringValue {
	return terra.ReferenceString(sa.ref.Append("postal_code"))
}

func (sa ShipmentAddressAttributes) State() terra.StringValue {
	return terra.ReferenceString(sa.ref.Append("state"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type ReturnTrackingState struct {
	CarrierName  string `json:"carrier_name"`
	SerialNumber string `json:"serial_number"`
	TrackingId   string `json:"tracking_id"`
	TrackingUrl  string `json:"tracking_url"`
}

type ShipmentHistoryState struct {
	AdditionalDetails map[string]string `json:"additional_details"`
	Comments          string            `json:"comments"`
	LastUpdate        string            `json:"last_update"`
}

type ShipmentTrackingState struct {
	CarrierName  string `json:"carrier_name"`
	SerialNumber string `json:"serial_number"`
	TrackingId   string `json:"tracking_id"`
	TrackingUrl  string `json:"tracking_url"`
}

type StatusState struct {
	AdditionalDetails map[string]string `json:"additional_details"`
	Comments          string            `json:"comments"`
	Info              string            `json:"info"`
	LastUpdate        string            `json:"last_update"`
}

type ContactState struct {
	CompanyName string   `json:"company_name"`
	Emails      []string `json:"emails"`
	Name        string   `json:"name"`
	PhoneNumber string   `json:"phone_number"`
}

type ShipmentAddressState struct {
	Address    []string `json:"address"`
	City       string   `json:"city"`
	Country    string   `json:"country"`
	PostalCode string   `json:"postal_code"`
	State      string   `json:"state"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
