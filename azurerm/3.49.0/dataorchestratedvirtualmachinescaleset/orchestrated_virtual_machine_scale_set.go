// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataorchestratedvirtualmachinescaleset

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Identity struct{}

type NetworkInterface struct {
	// IpConfiguration: min=0
	IpConfiguration []IpConfiguration `hcl:"ip_configuration,block" validate:"min=0"`
}

type IpConfiguration struct {
	// PublicIpAddress: min=0
	PublicIpAddress []PublicIpAddress `hcl:"public_ip_address,block" validate:"min=0"`
}

type PublicIpAddress struct {
	// IpTag: min=0
	IpTag []IpTag `hcl:"ip_tag,block" validate:"min=0"`
}

type IpTag struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() terra.Reference {
	return i.ref
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() hclwrite.Tokens {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i IdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceString(i.ref.Append("type"))
}

type NetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (ni NetworkInterfaceAttributes) InternalRef() terra.Reference {
	return ni.ref
}

func (ni NetworkInterfaceAttributes) InternalWithRef(ref terra.Reference) NetworkInterfaceAttributes {
	return NetworkInterfaceAttributes{ref: ref}
}

func (ni NetworkInterfaceAttributes) InternalTokens() hclwrite.Tokens {
	return ni.ref.InternalTokens()
}

func (ni NetworkInterfaceAttributes) AcceleratedNetworkingEnabled() terra.BoolValue {
	return terra.ReferenceBool(ni.ref.Append("accelerated_networking_enabled"))
}

func (ni NetworkInterfaceAttributes) DnsServers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ni.ref.Append("dns_servers"))
}

func (ni NetworkInterfaceAttributes) IpForwardingEnabled() terra.BoolValue {
	return terra.ReferenceBool(ni.ref.Append("ip_forwarding_enabled"))
}

func (ni NetworkInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("name"))
}

func (ni NetworkInterfaceAttributes) NetworkSecurityGroupId() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("network_security_group_id"))
}

func (ni NetworkInterfaceAttributes) Primary() terra.BoolValue {
	return terra.ReferenceBool(ni.ref.Append("primary"))
}

func (ni NetworkInterfaceAttributes) IpConfiguration() terra.ListValue[IpConfigurationAttributes] {
	return terra.ReferenceList[IpConfigurationAttributes](ni.ref.Append("ip_configuration"))
}

type IpConfigurationAttributes struct {
	ref terra.Reference
}

func (ic IpConfigurationAttributes) InternalRef() terra.Reference {
	return ic.ref
}

func (ic IpConfigurationAttributes) InternalWithRef(ref terra.Reference) IpConfigurationAttributes {
	return IpConfigurationAttributes{ref: ref}
}

func (ic IpConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ic.ref.InternalTokens()
}

func (ic IpConfigurationAttributes) ApplicationGatewayBackendAddressPoolIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ic.ref.Append("application_gateway_backend_address_pool_ids"))
}

func (ic IpConfigurationAttributes) ApplicationSecurityGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ic.ref.Append("application_security_group_ids"))
}

func (ic IpConfigurationAttributes) LoadBalancerBackendAddressPoolIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ic.ref.Append("load_balancer_backend_address_pool_ids"))
}

func (ic IpConfigurationAttributes) LoadBalancerInboundNatRulesIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ic.ref.Append("load_balancer_inbound_nat_rules_ids"))
}

func (ic IpConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("name"))
}

func (ic IpConfigurationAttributes) Primary() terra.BoolValue {
	return terra.ReferenceBool(ic.ref.Append("primary"))
}

func (ic IpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("subnet_id"))
}

func (ic IpConfigurationAttributes) Version() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("version"))
}

func (ic IpConfigurationAttributes) PublicIpAddress() terra.ListValue[PublicIpAddressAttributes] {
	return terra.ReferenceList[PublicIpAddressAttributes](ic.ref.Append("public_ip_address"))
}

type PublicIpAddressAttributes struct {
	ref terra.Reference
}

func (pia PublicIpAddressAttributes) InternalRef() terra.Reference {
	return pia.ref
}

func (pia PublicIpAddressAttributes) InternalWithRef(ref terra.Reference) PublicIpAddressAttributes {
	return PublicIpAddressAttributes{ref: ref}
}

func (pia PublicIpAddressAttributes) InternalTokens() hclwrite.Tokens {
	return pia.ref.InternalTokens()
}

func (pia PublicIpAddressAttributes) DomainNameLabel() terra.StringValue {
	return terra.ReferenceString(pia.ref.Append("domain_name_label"))
}

func (pia PublicIpAddressAttributes) IdleTimeoutInMinutes() terra.NumberValue {
	return terra.ReferenceNumber(pia.ref.Append("idle_timeout_in_minutes"))
}

func (pia PublicIpAddressAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pia.ref.Append("name"))
}

func (pia PublicIpAddressAttributes) PublicIpPrefixId() terra.StringValue {
	return terra.ReferenceString(pia.ref.Append("public_ip_prefix_id"))
}

func (pia PublicIpAddressAttributes) Version() terra.StringValue {
	return terra.ReferenceString(pia.ref.Append("version"))
}

func (pia PublicIpAddressAttributes) IpTag() terra.ListValue[IpTagAttributes] {
	return terra.ReferenceList[IpTagAttributes](pia.ref.Append("ip_tag"))
}

type IpTagAttributes struct {
	ref terra.Reference
}

func (it IpTagAttributes) InternalRef() terra.Reference {
	return it.ref
}

func (it IpTagAttributes) InternalWithRef(ref terra.Reference) IpTagAttributes {
	return IpTagAttributes{ref: ref}
}

func (it IpTagAttributes) InternalTokens() hclwrite.Tokens {
	return it.ref.InternalTokens()
}

func (it IpTagAttributes) Tag() terra.StringValue {
	return terra.ReferenceString(it.ref.Append("tag"))
}

func (it IpTagAttributes) Type() terra.StringValue {
	return terra.ReferenceString(it.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type IdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	Type        string   `json:"type"`
}

type NetworkInterfaceState struct {
	AcceleratedNetworkingEnabled bool                   `json:"accelerated_networking_enabled"`
	DnsServers                   []string               `json:"dns_servers"`
	IpForwardingEnabled          bool                   `json:"ip_forwarding_enabled"`
	Name                         string                 `json:"name"`
	NetworkSecurityGroupId       string                 `json:"network_security_group_id"`
	Primary                      bool                   `json:"primary"`
	IpConfiguration              []IpConfigurationState `json:"ip_configuration"`
}

type IpConfigurationState struct {
	ApplicationGatewayBackendAddressPoolIds []string               `json:"application_gateway_backend_address_pool_ids"`
	ApplicationSecurityGroupIds             []string               `json:"application_security_group_ids"`
	LoadBalancerBackendAddressPoolIds       []string               `json:"load_balancer_backend_address_pool_ids"`
	LoadBalancerInboundNatRulesIds          []string               `json:"load_balancer_inbound_nat_rules_ids"`
	Name                                    string                 `json:"name"`
	Primary                                 bool                   `json:"primary"`
	SubnetId                                string                 `json:"subnet_id"`
	Version                                 string                 `json:"version"`
	PublicIpAddress                         []PublicIpAddressState `json:"public_ip_address"`
}

type PublicIpAddressState struct {
	DomainNameLabel      string       `json:"domain_name_label"`
	IdleTimeoutInMinutes float64      `json:"idle_timeout_in_minutes"`
	Name                 string       `json:"name"`
	PublicIpPrefixId     string       `json:"public_ip_prefix_id"`
	Version              string       `json:"version"`
	IpTag                []IpTagState `json:"ip_tag"`
}

type IpTagState struct {
	Tag  string `json:"tag"`
	Type string `json:"type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
