// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	automationvariablestring "github.com/golingon/terraproviders/azurerm/3.49.0/automationvariablestring"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewAutomationVariableString(name string, args AutomationVariableStringArgs) *AutomationVariableString {
	return &AutomationVariableString{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AutomationVariableString)(nil)

type AutomationVariableString struct {
	Name  string
	Args  AutomationVariableStringArgs
	state *automationVariableStringState
}

func (avs *AutomationVariableString) Type() string {
	return "azurerm_automation_variable_string"
}

func (avs *AutomationVariableString) LocalName() string {
	return avs.Name
}

func (avs *AutomationVariableString) Configuration() interface{} {
	return avs.Args
}

func (avs *AutomationVariableString) Attributes() automationVariableStringAttributes {
	return automationVariableStringAttributes{ref: terra.ReferenceResource(avs)}
}

func (avs *AutomationVariableString) ImportState(av io.Reader) error {
	avs.state = &automationVariableStringState{}
	if err := json.NewDecoder(av).Decode(avs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", avs.Type(), avs.LocalName(), err)
	}
	return nil
}

func (avs *AutomationVariableString) State() (*automationVariableStringState, bool) {
	return avs.state, avs.state != nil
}

func (avs *AutomationVariableString) StateMust() *automationVariableStringState {
	if avs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", avs.Type(), avs.LocalName()))
	}
	return avs.state
}

func (avs *AutomationVariableString) DependOn() terra.Reference {
	return terra.ReferenceResource(avs)
}

type AutomationVariableStringArgs struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Encrypted: bool, optional
	Encrypted terra.BoolValue `hcl:"encrypted,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
	// Timeouts: optional
	Timeouts *automationvariablestring.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that AutomationVariableString depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type automationVariableStringAttributes struct {
	ref terra.Reference
}

func (avs automationVariableStringAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceString(avs.ref.Append("automation_account_name"))
}

func (avs automationVariableStringAttributes) Description() terra.StringValue {
	return terra.ReferenceString(avs.ref.Append("description"))
}

func (avs automationVariableStringAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceBool(avs.ref.Append("encrypted"))
}

func (avs automationVariableStringAttributes) Id() terra.StringValue {
	return terra.ReferenceString(avs.ref.Append("id"))
}

func (avs automationVariableStringAttributes) Name() terra.StringValue {
	return terra.ReferenceString(avs.ref.Append("name"))
}

func (avs automationVariableStringAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(avs.ref.Append("resource_group_name"))
}

func (avs automationVariableStringAttributes) Value() terra.StringValue {
	return terra.ReferenceString(avs.ref.Append("value"))
}

func (avs automationVariableStringAttributes) Timeouts() automationvariablestring.TimeoutsAttributes {
	return terra.ReferenceSingle[automationvariablestring.TimeoutsAttributes](avs.ref.Append("timeouts"))
}

type automationVariableStringState struct {
	AutomationAccountName string                                  `json:"automation_account_name"`
	Description           string                                  `json:"description"`
	Encrypted             bool                                    `json:"encrypted"`
	Id                    string                                  `json:"id"`
	Name                  string                                  `json:"name"`
	ResourceGroupName     string                                  `json:"resource_group_name"`
	Value                 string                                  `json:"value"`
	Timeouts              *automationvariablestring.TimeoutsState `json:"timeouts"`
}
