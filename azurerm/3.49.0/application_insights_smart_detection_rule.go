// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	applicationinsightssmartdetectionrule "github.com/golingon/terraproviders/azurerm/3.49.0/applicationinsightssmartdetectionrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApplicationInsightsSmartDetectionRule(name string, args ApplicationInsightsSmartDetectionRuleArgs) *ApplicationInsightsSmartDetectionRule {
	return &ApplicationInsightsSmartDetectionRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationInsightsSmartDetectionRule)(nil)

type ApplicationInsightsSmartDetectionRule struct {
	Name  string
	Args  ApplicationInsightsSmartDetectionRuleArgs
	state *applicationInsightsSmartDetectionRuleState
}

func (aisdr *ApplicationInsightsSmartDetectionRule) Type() string {
	return "azurerm_application_insights_smart_detection_rule"
}

func (aisdr *ApplicationInsightsSmartDetectionRule) LocalName() string {
	return aisdr.Name
}

func (aisdr *ApplicationInsightsSmartDetectionRule) Configuration() interface{} {
	return aisdr.Args
}

func (aisdr *ApplicationInsightsSmartDetectionRule) Attributes() applicationInsightsSmartDetectionRuleAttributes {
	return applicationInsightsSmartDetectionRuleAttributes{ref: terra.ReferenceResource(aisdr)}
}

func (aisdr *ApplicationInsightsSmartDetectionRule) ImportState(av io.Reader) error {
	aisdr.state = &applicationInsightsSmartDetectionRuleState{}
	if err := json.NewDecoder(av).Decode(aisdr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aisdr.Type(), aisdr.LocalName(), err)
	}
	return nil
}

func (aisdr *ApplicationInsightsSmartDetectionRule) State() (*applicationInsightsSmartDetectionRuleState, bool) {
	return aisdr.state, aisdr.state != nil
}

func (aisdr *ApplicationInsightsSmartDetectionRule) StateMust() *applicationInsightsSmartDetectionRuleState {
	if aisdr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aisdr.Type(), aisdr.LocalName()))
	}
	return aisdr.state
}

func (aisdr *ApplicationInsightsSmartDetectionRule) DependOn() terra.Reference {
	return terra.ReferenceResource(aisdr)
}

type ApplicationInsightsSmartDetectionRuleArgs struct {
	// AdditionalEmailRecipients: set of string, optional
	AdditionalEmailRecipients terra.SetValue[terra.StringValue] `hcl:"additional_email_recipients,attr"`
	// ApplicationInsightsId: string, required
	ApplicationInsightsId terra.StringValue `hcl:"application_insights_id,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SendEmailsToSubscriptionOwners: bool, optional
	SendEmailsToSubscriptionOwners terra.BoolValue `hcl:"send_emails_to_subscription_owners,attr"`
	// Timeouts: optional
	Timeouts *applicationinsightssmartdetectionrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApplicationInsightsSmartDetectionRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type applicationInsightsSmartDetectionRuleAttributes struct {
	ref terra.Reference
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) AdditionalEmailRecipients() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](aisdr.ref.Append("additional_email_recipients"))
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) ApplicationInsightsId() terra.StringValue {
	return terra.ReferenceString(aisdr.ref.Append("application_insights_id"))
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(aisdr.ref.Append("enabled"))
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aisdr.ref.Append("id"))
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(aisdr.ref.Append("name"))
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) SendEmailsToSubscriptionOwners() terra.BoolValue {
	return terra.ReferenceBool(aisdr.ref.Append("send_emails_to_subscription_owners"))
}

func (aisdr applicationInsightsSmartDetectionRuleAttributes) Timeouts() applicationinsightssmartdetectionrule.TimeoutsAttributes {
	return terra.ReferenceSingle[applicationinsightssmartdetectionrule.TimeoutsAttributes](aisdr.ref.Append("timeouts"))
}

type applicationInsightsSmartDetectionRuleState struct {
	AdditionalEmailRecipients      []string                                             `json:"additional_email_recipients"`
	ApplicationInsightsId          string                                               `json:"application_insights_id"`
	Enabled                        bool                                                 `json:"enabled"`
	Id                             string                                               `json:"id"`
	Name                           string                                               `json:"name"`
	SendEmailsToSubscriptionOwners bool                                                 `json:"send_emails_to_subscription_owners"`
	Timeouts                       *applicationinsightssmartdetectionrule.TimeoutsState `json:"timeouts"`
}
