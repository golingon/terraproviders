// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sentinelalertruleanomalybuiltin

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type MultiSelectObservation struct{}

type PrioritizedExcludeObservation struct{}

type RequiredDataConnector struct{}

type SingleSelectObservation struct{}

type ThresholdObservation struct{}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type MultiSelectObservationAttributes struct {
	ref terra.Reference
}

func (mso MultiSelectObservationAttributes) InternalRef() terra.Reference {
	return mso.ref
}

func (mso MultiSelectObservationAttributes) InternalWithRef(ref terra.Reference) MultiSelectObservationAttributes {
	return MultiSelectObservationAttributes{ref: ref}
}

func (mso MultiSelectObservationAttributes) InternalTokens() hclwrite.Tokens {
	return mso.ref.InternalTokens()
}

func (mso MultiSelectObservationAttributes) Description() terra.StringValue {
	return terra.ReferenceString(mso.ref.Append("description"))
}

func (mso MultiSelectObservationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mso.ref.Append("name"))
}

func (mso MultiSelectObservationAttributes) SupportedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](mso.ref.Append("supported_values"))
}

func (mso MultiSelectObservationAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](mso.ref.Append("values"))
}

type PrioritizedExcludeObservationAttributes struct {
	ref terra.Reference
}

func (peo PrioritizedExcludeObservationAttributes) InternalRef() terra.Reference {
	return peo.ref
}

func (peo PrioritizedExcludeObservationAttributes) InternalWithRef(ref terra.Reference) PrioritizedExcludeObservationAttributes {
	return PrioritizedExcludeObservationAttributes{ref: ref}
}

func (peo PrioritizedExcludeObservationAttributes) InternalTokens() hclwrite.Tokens {
	return peo.ref.InternalTokens()
}

func (peo PrioritizedExcludeObservationAttributes) Description() terra.StringValue {
	return terra.ReferenceString(peo.ref.Append("description"))
}

func (peo PrioritizedExcludeObservationAttributes) Exclude() terra.StringValue {
	return terra.ReferenceString(peo.ref.Append("exclude"))
}

func (peo PrioritizedExcludeObservationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(peo.ref.Append("name"))
}

func (peo PrioritizedExcludeObservationAttributes) Prioritize() terra.StringValue {
	return terra.ReferenceString(peo.ref.Append("prioritize"))
}

type RequiredDataConnectorAttributes struct {
	ref terra.Reference
}

func (rdc RequiredDataConnectorAttributes) InternalRef() terra.Reference {
	return rdc.ref
}

func (rdc RequiredDataConnectorAttributes) InternalWithRef(ref terra.Reference) RequiredDataConnectorAttributes {
	return RequiredDataConnectorAttributes{ref: ref}
}

func (rdc RequiredDataConnectorAttributes) InternalTokens() hclwrite.Tokens {
	return rdc.ref.InternalTokens()
}

func (rdc RequiredDataConnectorAttributes) ConnectorId() terra.StringValue {
	return terra.ReferenceString(rdc.ref.Append("connector_id"))
}

func (rdc RequiredDataConnectorAttributes) DataTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](rdc.ref.Append("data_types"))
}

type SingleSelectObservationAttributes struct {
	ref terra.Reference
}

func (sso SingleSelectObservationAttributes) InternalRef() terra.Reference {
	return sso.ref
}

func (sso SingleSelectObservationAttributes) InternalWithRef(ref terra.Reference) SingleSelectObservationAttributes {
	return SingleSelectObservationAttributes{ref: ref}
}

func (sso SingleSelectObservationAttributes) InternalTokens() hclwrite.Tokens {
	return sso.ref.InternalTokens()
}

func (sso SingleSelectObservationAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sso.ref.Append("description"))
}

func (sso SingleSelectObservationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sso.ref.Append("name"))
}

func (sso SingleSelectObservationAttributes) SupportedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sso.ref.Append("supported_values"))
}

func (sso SingleSelectObservationAttributes) Value() terra.StringValue {
	return terra.ReferenceString(sso.ref.Append("value"))
}

type ThresholdObservationAttributes struct {
	ref terra.Reference
}

func (to ThresholdObservationAttributes) InternalRef() terra.Reference {
	return to.ref
}

func (to ThresholdObservationAttributes) InternalWithRef(ref terra.Reference) ThresholdObservationAttributes {
	return ThresholdObservationAttributes{ref: ref}
}

func (to ThresholdObservationAttributes) InternalTokens() hclwrite.Tokens {
	return to.ref.InternalTokens()
}

func (to ThresholdObservationAttributes) Description() terra.StringValue {
	return terra.ReferenceString(to.ref.Append("description"))
}

func (to ThresholdObservationAttributes) Max() terra.StringValue {
	return terra.ReferenceString(to.ref.Append("max"))
}

func (to ThresholdObservationAttributes) Min() terra.StringValue {
	return terra.ReferenceString(to.ref.Append("min"))
}

func (to ThresholdObservationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(to.ref.Append("name"))
}

func (to ThresholdObservationAttributes) Value() terra.StringValue {
	return terra.ReferenceString(to.ref.Append("value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type MultiSelectObservationState struct {
	Description     string   `json:"description"`
	Name            string   `json:"name"`
	SupportedValues []string `json:"supported_values"`
	Values          []string `json:"values"`
}

type PrioritizedExcludeObservationState struct {
	Description string `json:"description"`
	Exclude     string `json:"exclude"`
	Name        string `json:"name"`
	Prioritize  string `json:"prioritize"`
}

type RequiredDataConnectorState struct {
	ConnectorId string   `json:"connector_id"`
	DataTypes   []string `json:"data_types"`
}

type SingleSelectObservationState struct {
	Description     string   `json:"description"`
	Name            string   `json:"name"`
	SupportedValues []string `json:"supported_values"`
	Value           string   `json:"value"`
}

type ThresholdObservationState struct {
	Description string `json:"description"`
	Max         string `json:"max"`
	Min         string `json:"min"`
	Name        string `json:"name"`
	Value       string `json:"value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
