// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datalbrule "github.com/golingon/terraproviders/azurerm/3.49.0/datalbrule"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataLbRule(name string, args DataLbRuleArgs) *DataLbRule {
	return &DataLbRule{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataLbRule)(nil)

type DataLbRule struct {
	Name string
	Args DataLbRuleArgs
}

func (lr *DataLbRule) DataSource() string {
	return "azurerm_lb_rule"
}

func (lr *DataLbRule) LocalName() string {
	return lr.Name
}

func (lr *DataLbRule) Configuration() interface{} {
	return lr.Args
}

func (lr *DataLbRule) Attributes() dataLbRuleAttributes {
	return dataLbRuleAttributes{ref: terra.ReferenceDataResource(lr)}
}

type DataLbRuleArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LoadbalancerId: string, required
	LoadbalancerId terra.StringValue `hcl:"loadbalancer_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datalbrule.Timeouts `hcl:"timeouts,block"`
}
type dataLbRuleAttributes struct {
	ref terra.Reference
}

func (lr dataLbRuleAttributes) BackendAddressPoolId() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("backend_address_pool_id"))
}

func (lr dataLbRuleAttributes) BackendPort() terra.NumberValue {
	return terra.ReferenceNumber(lr.ref.Append("backend_port"))
}

func (lr dataLbRuleAttributes) DisableOutboundSnat() terra.BoolValue {
	return terra.ReferenceBool(lr.ref.Append("disable_outbound_snat"))
}

func (lr dataLbRuleAttributes) EnableFloatingIp() terra.BoolValue {
	return terra.ReferenceBool(lr.ref.Append("enable_floating_ip"))
}

func (lr dataLbRuleAttributes) EnableTcpReset() terra.BoolValue {
	return terra.ReferenceBool(lr.ref.Append("enable_tcp_reset"))
}

func (lr dataLbRuleAttributes) FrontendIpConfigurationName() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("frontend_ip_configuration_name"))
}

func (lr dataLbRuleAttributes) FrontendPort() terra.NumberValue {
	return terra.ReferenceNumber(lr.ref.Append("frontend_port"))
}

func (lr dataLbRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("id"))
}

func (lr dataLbRuleAttributes) IdleTimeoutInMinutes() terra.NumberValue {
	return terra.ReferenceNumber(lr.ref.Append("idle_timeout_in_minutes"))
}

func (lr dataLbRuleAttributes) LoadDistribution() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("load_distribution"))
}

func (lr dataLbRuleAttributes) LoadbalancerId() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("loadbalancer_id"))
}

func (lr dataLbRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("name"))
}

func (lr dataLbRuleAttributes) ProbeId() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("probe_id"))
}

func (lr dataLbRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(lr.ref.Append("protocol"))
}

func (lr dataLbRuleAttributes) Timeouts() datalbrule.TimeoutsAttributes {
	return terra.ReferenceSingle[datalbrule.TimeoutsAttributes](lr.ref.Append("timeouts"))
}
