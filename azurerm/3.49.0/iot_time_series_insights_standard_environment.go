// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iottimeseriesinsightsstandardenvironment "github.com/golingon/terraproviders/azurerm/3.49.0/iottimeseriesinsightsstandardenvironment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotTimeSeriesInsightsStandardEnvironment(name string, args IotTimeSeriesInsightsStandardEnvironmentArgs) *IotTimeSeriesInsightsStandardEnvironment {
	return &IotTimeSeriesInsightsStandardEnvironment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotTimeSeriesInsightsStandardEnvironment)(nil)

type IotTimeSeriesInsightsStandardEnvironment struct {
	Name  string
	Args  IotTimeSeriesInsightsStandardEnvironmentArgs
	state *iotTimeSeriesInsightsStandardEnvironmentState
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) Type() string {
	return "azurerm_iot_time_series_insights_standard_environment"
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) LocalName() string {
	return itsise.Name
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) Configuration() interface{} {
	return itsise.Args
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) Attributes() iotTimeSeriesInsightsStandardEnvironmentAttributes {
	return iotTimeSeriesInsightsStandardEnvironmentAttributes{ref: terra.ReferenceResource(itsise)}
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) ImportState(av io.Reader) error {
	itsise.state = &iotTimeSeriesInsightsStandardEnvironmentState{}
	if err := json.NewDecoder(av).Decode(itsise.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itsise.Type(), itsise.LocalName(), err)
	}
	return nil
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) State() (*iotTimeSeriesInsightsStandardEnvironmentState, bool) {
	return itsise.state, itsise.state != nil
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) StateMust() *iotTimeSeriesInsightsStandardEnvironmentState {
	if itsise.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itsise.Type(), itsise.LocalName()))
	}
	return itsise.state
}

func (itsise *IotTimeSeriesInsightsStandardEnvironment) DependOn() terra.Reference {
	return terra.ReferenceResource(itsise)
}

type IotTimeSeriesInsightsStandardEnvironmentArgs struct {
	// DataRetentionTime: string, required
	DataRetentionTime terra.StringValue `hcl:"data_retention_time,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PartitionKey: string, optional
	PartitionKey terra.StringValue `hcl:"partition_key,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuName: string, required
	SkuName terra.StringValue `hcl:"sku_name,attr" validate:"required"`
	// StorageLimitExceededBehavior: string, optional
	StorageLimitExceededBehavior terra.StringValue `hcl:"storage_limit_exceeded_behavior,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *iottimeseriesinsightsstandardenvironment.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IotTimeSeriesInsightsStandardEnvironment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotTimeSeriesInsightsStandardEnvironmentAttributes struct {
	ref terra.Reference
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) DataRetentionTime() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("data_retention_time"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("id"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) Location() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("location"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) Name() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("name"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) PartitionKey() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("partition_key"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("resource_group_name"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) SkuName() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("sku_name"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) StorageLimitExceededBehavior() terra.StringValue {
	return terra.ReferenceString(itsise.ref.Append("storage_limit_exceeded_behavior"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](itsise.ref.Append("tags"))
}

func (itsise iotTimeSeriesInsightsStandardEnvironmentAttributes) Timeouts() iottimeseriesinsightsstandardenvironment.TimeoutsAttributes {
	return terra.ReferenceSingle[iottimeseriesinsightsstandardenvironment.TimeoutsAttributes](itsise.ref.Append("timeouts"))
}

type iotTimeSeriesInsightsStandardEnvironmentState struct {
	DataRetentionTime            string                                                  `json:"data_retention_time"`
	Id                           string                                                  `json:"id"`
	Location                     string                                                  `json:"location"`
	Name                         string                                                  `json:"name"`
	PartitionKey                 string                                                  `json:"partition_key"`
	ResourceGroupName            string                                                  `json:"resource_group_name"`
	SkuName                      string                                                  `json:"sku_name"`
	StorageLimitExceededBehavior string                                                  `json:"storage_limit_exceeded_behavior"`
	Tags                         map[string]string                                       `json:"tags"`
	Timeouts                     *iottimeseriesinsightsstandardenvironment.TimeoutsState `json:"timeouts"`
}
