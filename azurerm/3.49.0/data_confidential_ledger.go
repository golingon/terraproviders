// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataconfidentialledger "github.com/golingon/terraproviders/azurerm/3.49.0/dataconfidentialledger"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataConfidentialLedger(name string, args DataConfidentialLedgerArgs) *DataConfidentialLedger {
	return &DataConfidentialLedger{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataConfidentialLedger)(nil)

type DataConfidentialLedger struct {
	Name string
	Args DataConfidentialLedgerArgs
}

func (cl *DataConfidentialLedger) DataSource() string {
	return "azurerm_confidential_ledger"
}

func (cl *DataConfidentialLedger) LocalName() string {
	return cl.Name
}

func (cl *DataConfidentialLedger) Configuration() interface{} {
	return cl.Args
}

func (cl *DataConfidentialLedger) Attributes() dataConfidentialLedgerAttributes {
	return dataConfidentialLedgerAttributes{ref: terra.ReferenceDataResource(cl)}
}

type DataConfidentialLedgerArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// AzureadBasedServicePrincipal: min=0
	AzureadBasedServicePrincipal []dataconfidentialledger.AzureadBasedServicePrincipal `hcl:"azuread_based_service_principal,block" validate:"min=0"`
	// CertificateBasedSecurityPrincipal: min=0
	CertificateBasedSecurityPrincipal []dataconfidentialledger.CertificateBasedSecurityPrincipal `hcl:"certificate_based_security_principal,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataconfidentialledger.Timeouts `hcl:"timeouts,block"`
}
type dataConfidentialLedgerAttributes struct {
	ref terra.Reference
}

func (cl dataConfidentialLedgerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("id"))
}

func (cl dataConfidentialLedgerAttributes) IdentityServiceEndpoint() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("identity_service_endpoint"))
}

func (cl dataConfidentialLedgerAttributes) LedgerEndpoint() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("ledger_endpoint"))
}

func (cl dataConfidentialLedgerAttributes) LedgerType() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("ledger_type"))
}

func (cl dataConfidentialLedgerAttributes) Location() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("location"))
}

func (cl dataConfidentialLedgerAttributes) Name() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("name"))
}

func (cl dataConfidentialLedgerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(cl.ref.Append("resource_group_name"))
}

func (cl dataConfidentialLedgerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](cl.ref.Append("tags"))
}

func (cl dataConfidentialLedgerAttributes) AzureadBasedServicePrincipal() terra.ListValue[dataconfidentialledger.AzureadBasedServicePrincipalAttributes] {
	return terra.ReferenceList[dataconfidentialledger.AzureadBasedServicePrincipalAttributes](cl.ref.Append("azuread_based_service_principal"))
}

func (cl dataConfidentialLedgerAttributes) CertificateBasedSecurityPrincipal() terra.ListValue[dataconfidentialledger.CertificateBasedSecurityPrincipalAttributes] {
	return terra.ReferenceList[dataconfidentialledger.CertificateBasedSecurityPrincipalAttributes](cl.ref.Append("certificate_based_security_principal"))
}

func (cl dataConfidentialLedgerAttributes) Timeouts() dataconfidentialledger.TimeoutsAttributes {
	return terra.ReferenceSingle[dataconfidentialledger.TimeoutsAttributes](cl.ref.Append("timeouts"))
}
