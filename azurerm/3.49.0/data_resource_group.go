// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataresourcegroup "github.com/golingon/terraproviders/azurerm/3.49.0/dataresourcegroup"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataResourceGroup(name string, args DataResourceGroupArgs) *DataResourceGroup {
	return &DataResourceGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataResourceGroup)(nil)

type DataResourceGroup struct {
	Name string
	Args DataResourceGroupArgs
}

func (rg *DataResourceGroup) DataSource() string {
	return "azurerm_resource_group"
}

func (rg *DataResourceGroup) LocalName() string {
	return rg.Name
}

func (rg *DataResourceGroup) Configuration() interface{} {
	return rg.Args
}

func (rg *DataResourceGroup) Attributes() dataResourceGroupAttributes {
	return dataResourceGroupAttributes{ref: terra.ReferenceDataResource(rg)}
}

type DataResourceGroupArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dataresourcegroup.Timeouts `hcl:"timeouts,block"`
}
type dataResourceGroupAttributes struct {
	ref terra.Reference
}

func (rg dataResourceGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceString(rg.ref.Append("id"))
}

func (rg dataResourceGroupAttributes) Location() terra.StringValue {
	return terra.ReferenceString(rg.ref.Append("location"))
}

func (rg dataResourceGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceString(rg.ref.Append("name"))
}

func (rg dataResourceGroupAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](rg.ref.Append("tags"))
}

func (rg dataResourceGroupAttributes) Timeouts() dataresourcegroup.TimeoutsAttributes {
	return terra.ReferenceSingle[dataresourcegroup.TimeoutsAttributes](rg.ref.Append("timeouts"))
}
