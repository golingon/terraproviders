// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iothubfallbackroute "github.com/golingon/terraproviders/azurerm/3.49.0/iothubfallbackroute"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIothubFallbackRoute(name string, args IothubFallbackRouteArgs) *IothubFallbackRoute {
	return &IothubFallbackRoute{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IothubFallbackRoute)(nil)

type IothubFallbackRoute struct {
	Name  string
	Args  IothubFallbackRouteArgs
	state *iothubFallbackRouteState
}

func (ifr *IothubFallbackRoute) Type() string {
	return "azurerm_iothub_fallback_route"
}

func (ifr *IothubFallbackRoute) LocalName() string {
	return ifr.Name
}

func (ifr *IothubFallbackRoute) Configuration() interface{} {
	return ifr.Args
}

func (ifr *IothubFallbackRoute) Attributes() iothubFallbackRouteAttributes {
	return iothubFallbackRouteAttributes{ref: terra.ReferenceResource(ifr)}
}

func (ifr *IothubFallbackRoute) ImportState(av io.Reader) error {
	ifr.state = &iothubFallbackRouteState{}
	if err := json.NewDecoder(av).Decode(ifr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ifr.Type(), ifr.LocalName(), err)
	}
	return nil
}

func (ifr *IothubFallbackRoute) State() (*iothubFallbackRouteState, bool) {
	return ifr.state, ifr.state != nil
}

func (ifr *IothubFallbackRoute) StateMust() *iothubFallbackRouteState {
	if ifr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ifr.Type(), ifr.LocalName()))
	}
	return ifr.state
}

func (ifr *IothubFallbackRoute) DependOn() terra.Reference {
	return terra.ReferenceResource(ifr)
}

type IothubFallbackRouteArgs struct {
	// Condition: string, optional
	Condition terra.StringValue `hcl:"condition,attr"`
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// EndpointNames: list of string, required
	EndpointNames terra.ListValue[terra.StringValue] `hcl:"endpoint_names,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubName: string, required
	IothubName terra.StringValue `hcl:"iothub_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Source: string, optional
	Source terra.StringValue `hcl:"source,attr"`
	// Timeouts: optional
	Timeouts *iothubfallbackroute.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IothubFallbackRoute depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iothubFallbackRouteAttributes struct {
	ref terra.Reference
}

func (ifr iothubFallbackRouteAttributes) Condition() terra.StringValue {
	return terra.ReferenceString(ifr.ref.Append("condition"))
}

func (ifr iothubFallbackRouteAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(ifr.ref.Append("enabled"))
}

func (ifr iothubFallbackRouteAttributes) EndpointNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ifr.ref.Append("endpoint_names"))
}

func (ifr iothubFallbackRouteAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ifr.ref.Append("id"))
}

func (ifr iothubFallbackRouteAttributes) IothubName() terra.StringValue {
	return terra.ReferenceString(ifr.ref.Append("iothub_name"))
}

func (ifr iothubFallbackRouteAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ifr.ref.Append("resource_group_name"))
}

func (ifr iothubFallbackRouteAttributes) Source() terra.StringValue {
	return terra.ReferenceString(ifr.ref.Append("source"))
}

func (ifr iothubFallbackRouteAttributes) Timeouts() iothubfallbackroute.TimeoutsAttributes {
	return terra.ReferenceSingle[iothubfallbackroute.TimeoutsAttributes](ifr.ref.Append("timeouts"))
}

type iothubFallbackRouteState struct {
	Condition         string                             `json:"condition"`
	Enabled           bool                               `json:"enabled"`
	EndpointNames     []string                           `json:"endpoint_names"`
	Id                string                             `json:"id"`
	IothubName        string                             `json:"iothub_name"`
	ResourceGroupName string                             `json:"resource_group_name"`
	Source            string                             `json:"source"`
	Timeouts          *iothubfallbackroute.TimeoutsState `json:"timeouts"`
}
