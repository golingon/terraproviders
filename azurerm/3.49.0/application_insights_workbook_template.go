// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	applicationinsightsworkbooktemplate "github.com/golingon/terraproviders/azurerm/3.49.0/applicationinsightsworkbooktemplate"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApplicationInsightsWorkbookTemplate(name string, args ApplicationInsightsWorkbookTemplateArgs) *ApplicationInsightsWorkbookTemplate {
	return &ApplicationInsightsWorkbookTemplate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationInsightsWorkbookTemplate)(nil)

type ApplicationInsightsWorkbookTemplate struct {
	Name  string
	Args  ApplicationInsightsWorkbookTemplateArgs
	state *applicationInsightsWorkbookTemplateState
}

func (aiwt *ApplicationInsightsWorkbookTemplate) Type() string {
	return "azurerm_application_insights_workbook_template"
}

func (aiwt *ApplicationInsightsWorkbookTemplate) LocalName() string {
	return aiwt.Name
}

func (aiwt *ApplicationInsightsWorkbookTemplate) Configuration() interface{} {
	return aiwt.Args
}

func (aiwt *ApplicationInsightsWorkbookTemplate) Attributes() applicationInsightsWorkbookTemplateAttributes {
	return applicationInsightsWorkbookTemplateAttributes{ref: terra.ReferenceResource(aiwt)}
}

func (aiwt *ApplicationInsightsWorkbookTemplate) ImportState(av io.Reader) error {
	aiwt.state = &applicationInsightsWorkbookTemplateState{}
	if err := json.NewDecoder(av).Decode(aiwt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiwt.Type(), aiwt.LocalName(), err)
	}
	return nil
}

func (aiwt *ApplicationInsightsWorkbookTemplate) State() (*applicationInsightsWorkbookTemplateState, bool) {
	return aiwt.state, aiwt.state != nil
}

func (aiwt *ApplicationInsightsWorkbookTemplate) StateMust() *applicationInsightsWorkbookTemplateState {
	if aiwt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiwt.Type(), aiwt.LocalName()))
	}
	return aiwt.state
}

func (aiwt *ApplicationInsightsWorkbookTemplate) DependOn() terra.Reference {
	return terra.ReferenceResource(aiwt)
}

type ApplicationInsightsWorkbookTemplateArgs struct {
	// Author: string, optional
	Author terra.StringValue `hcl:"author,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Localized: string, optional
	Localized terra.StringValue `hcl:"localized,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Priority: number, optional
	Priority terra.NumberValue `hcl:"priority,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TemplateData: string, required
	TemplateData terra.StringValue `hcl:"template_data,attr" validate:"required"`
	// Galleries: min=1
	Galleries []applicationinsightsworkbooktemplate.Galleries `hcl:"galleries,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *applicationinsightsworkbooktemplate.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApplicationInsightsWorkbookTemplate depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type applicationInsightsWorkbookTemplateAttributes struct {
	ref terra.Reference
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Author() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("author"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("id"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Localized() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("localized"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Location() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("location"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("name"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Priority() terra.NumberValue {
	return terra.ReferenceNumber(aiwt.ref.Append("priority"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("resource_group_name"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aiwt.ref.Append("tags"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) TemplateData() terra.StringValue {
	return terra.ReferenceString(aiwt.ref.Append("template_data"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Galleries() terra.ListValue[applicationinsightsworkbooktemplate.GalleriesAttributes] {
	return terra.ReferenceList[applicationinsightsworkbooktemplate.GalleriesAttributes](aiwt.ref.Append("galleries"))
}

func (aiwt applicationInsightsWorkbookTemplateAttributes) Timeouts() applicationinsightsworkbooktemplate.TimeoutsAttributes {
	return terra.ReferenceSingle[applicationinsightsworkbooktemplate.TimeoutsAttributes](aiwt.ref.Append("timeouts"))
}

type applicationInsightsWorkbookTemplateState struct {
	Author            string                                               `json:"author"`
	Id                string                                               `json:"id"`
	Localized         string                                               `json:"localized"`
	Location          string                                               `json:"location"`
	Name              string                                               `json:"name"`
	Priority          float64                                              `json:"priority"`
	ResourceGroupName string                                               `json:"resource_group_name"`
	Tags              map[string]string                                    `json:"tags"`
	TemplateData      string                                               `json:"template_data"`
	Galleries         []applicationinsightsworkbooktemplate.GalleriesState `json:"galleries"`
	Timeouts          *applicationinsightsworkbooktemplate.TimeoutsState   `json:"timeouts"`
}
