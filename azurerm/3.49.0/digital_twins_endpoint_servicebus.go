// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	digitaltwinsendpointservicebus "github.com/golingon/terraproviders/azurerm/3.49.0/digitaltwinsendpointservicebus"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDigitalTwinsEndpointServicebus(name string, args DigitalTwinsEndpointServicebusArgs) *DigitalTwinsEndpointServicebus {
	return &DigitalTwinsEndpointServicebus{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DigitalTwinsEndpointServicebus)(nil)

type DigitalTwinsEndpointServicebus struct {
	Name  string
	Args  DigitalTwinsEndpointServicebusArgs
	state *digitalTwinsEndpointServicebusState
}

func (dtes *DigitalTwinsEndpointServicebus) Type() string {
	return "azurerm_digital_twins_endpoint_servicebus"
}

func (dtes *DigitalTwinsEndpointServicebus) LocalName() string {
	return dtes.Name
}

func (dtes *DigitalTwinsEndpointServicebus) Configuration() interface{} {
	return dtes.Args
}

func (dtes *DigitalTwinsEndpointServicebus) Attributes() digitalTwinsEndpointServicebusAttributes {
	return digitalTwinsEndpointServicebusAttributes{ref: terra.ReferenceResource(dtes)}
}

func (dtes *DigitalTwinsEndpointServicebus) ImportState(av io.Reader) error {
	dtes.state = &digitalTwinsEndpointServicebusState{}
	if err := json.NewDecoder(av).Decode(dtes.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dtes.Type(), dtes.LocalName(), err)
	}
	return nil
}

func (dtes *DigitalTwinsEndpointServicebus) State() (*digitalTwinsEndpointServicebusState, bool) {
	return dtes.state, dtes.state != nil
}

func (dtes *DigitalTwinsEndpointServicebus) StateMust() *digitalTwinsEndpointServicebusState {
	if dtes.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dtes.Type(), dtes.LocalName()))
	}
	return dtes.state
}

func (dtes *DigitalTwinsEndpointServicebus) DependOn() terra.Reference {
	return terra.ReferenceResource(dtes)
}

type DigitalTwinsEndpointServicebusArgs struct {
	// DeadLetterStorageSecret: string, optional
	DeadLetterStorageSecret terra.StringValue `hcl:"dead_letter_storage_secret,attr"`
	// DigitalTwinsId: string, required
	DigitalTwinsId terra.StringValue `hcl:"digital_twins_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServicebusPrimaryConnectionString: string, required
	ServicebusPrimaryConnectionString terra.StringValue `hcl:"servicebus_primary_connection_string,attr" validate:"required"`
	// ServicebusSecondaryConnectionString: string, required
	ServicebusSecondaryConnectionString terra.StringValue `hcl:"servicebus_secondary_connection_string,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *digitaltwinsendpointservicebus.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DigitalTwinsEndpointServicebus depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type digitalTwinsEndpointServicebusAttributes struct {
	ref terra.Reference
}

func (dtes digitalTwinsEndpointServicebusAttributes) DeadLetterStorageSecret() terra.StringValue {
	return terra.ReferenceString(dtes.ref.Append("dead_letter_storage_secret"))
}

func (dtes digitalTwinsEndpointServicebusAttributes) DigitalTwinsId() terra.StringValue {
	return terra.ReferenceString(dtes.ref.Append("digital_twins_id"))
}

func (dtes digitalTwinsEndpointServicebusAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dtes.ref.Append("id"))
}

func (dtes digitalTwinsEndpointServicebusAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dtes.ref.Append("name"))
}

func (dtes digitalTwinsEndpointServicebusAttributes) ServicebusPrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(dtes.ref.Append("servicebus_primary_connection_string"))
}

func (dtes digitalTwinsEndpointServicebusAttributes) ServicebusSecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(dtes.ref.Append("servicebus_secondary_connection_string"))
}

func (dtes digitalTwinsEndpointServicebusAttributes) Timeouts() digitaltwinsendpointservicebus.TimeoutsAttributes {
	return terra.ReferenceSingle[digitaltwinsendpointservicebus.TimeoutsAttributes](dtes.ref.Append("timeouts"))
}

type digitalTwinsEndpointServicebusState struct {
	DeadLetterStorageSecret             string                                        `json:"dead_letter_storage_secret"`
	DigitalTwinsId                      string                                        `json:"digital_twins_id"`
	Id                                  string                                        `json:"id"`
	Name                                string                                        `json:"name"`
	ServicebusPrimaryConnectionString   string                                        `json:"servicebus_primary_connection_string"`
	ServicebusSecondaryConnectionString string                                        `json:"servicebus_secondary_connection_string"`
	Timeouts                            *digitaltwinsendpointservicebus.TimeoutsState `json:"timeouts"`
}
