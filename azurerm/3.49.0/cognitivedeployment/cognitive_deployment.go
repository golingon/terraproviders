// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package cognitivedeployment

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Model struct {
	// Format: string, required
	Format terra.StringValue `hcl:"format,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type Scale struct {
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type ModelAttributes struct {
	ref terra.Reference
}

func (m ModelAttributes) InternalRef() terra.Reference {
	return m.ref
}

func (m ModelAttributes) InternalWithRef(ref terra.Reference) ModelAttributes {
	return ModelAttributes{ref: ref}
}

func (m ModelAttributes) InternalTokens() hclwrite.Tokens {
	return m.ref.InternalTokens()
}

func (m ModelAttributes) Format() terra.StringValue {
	return terra.ReferenceString(m.ref.Append("format"))
}

func (m ModelAttributes) Name() terra.StringValue {
	return terra.ReferenceString(m.ref.Append("name"))
}

func (m ModelAttributes) Version() terra.StringValue {
	return terra.ReferenceString(m.ref.Append("version"))
}

type ScaleAttributes struct {
	ref terra.Reference
}

func (s ScaleAttributes) InternalRef() terra.Reference {
	return s.ref
}

func (s ScaleAttributes) InternalWithRef(ref terra.Reference) ScaleAttributes {
	return ScaleAttributes{ref: ref}
}

func (s ScaleAttributes) InternalTokens() hclwrite.Tokens {
	return s.ref.InternalTokens()
}

func (s ScaleAttributes) Type() terra.StringValue {
	return terra.ReferenceString(s.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type ModelState struct {
	Format  string `json:"format"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type ScaleState struct {
	Type string `json:"type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
}
