// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentinelalertrulescheduled "github.com/golingon/terraproviders/azurerm/3.49.0/sentinelalertrulescheduled"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelAlertRuleScheduled(name string, args SentinelAlertRuleScheduledArgs) *SentinelAlertRuleScheduled {
	return &SentinelAlertRuleScheduled{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelAlertRuleScheduled)(nil)

type SentinelAlertRuleScheduled struct {
	Name  string
	Args  SentinelAlertRuleScheduledArgs
	state *sentinelAlertRuleScheduledState
}

func (sars *SentinelAlertRuleScheduled) Type() string {
	return "azurerm_sentinel_alert_rule_scheduled"
}

func (sars *SentinelAlertRuleScheduled) LocalName() string {
	return sars.Name
}

func (sars *SentinelAlertRuleScheduled) Configuration() interface{} {
	return sars.Args
}

func (sars *SentinelAlertRuleScheduled) Attributes() sentinelAlertRuleScheduledAttributes {
	return sentinelAlertRuleScheduledAttributes{ref: terra.ReferenceResource(sars)}
}

func (sars *SentinelAlertRuleScheduled) ImportState(av io.Reader) error {
	sars.state = &sentinelAlertRuleScheduledState{}
	if err := json.NewDecoder(av).Decode(sars.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sars.Type(), sars.LocalName(), err)
	}
	return nil
}

func (sars *SentinelAlertRuleScheduled) State() (*sentinelAlertRuleScheduledState, bool) {
	return sars.state, sars.state != nil
}

func (sars *SentinelAlertRuleScheduled) StateMust() *sentinelAlertRuleScheduledState {
	if sars.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sars.Type(), sars.LocalName()))
	}
	return sars.state
}

func (sars *SentinelAlertRuleScheduled) DependOn() terra.Reference {
	return terra.ReferenceResource(sars)
}

type SentinelAlertRuleScheduledArgs struct {
	// AlertRuleTemplateGuid: string, optional
	AlertRuleTemplateGuid terra.StringValue `hcl:"alert_rule_template_guid,attr"`
	// AlertRuleTemplateVersion: string, optional
	AlertRuleTemplateVersion terra.StringValue `hcl:"alert_rule_template_version,attr"`
	// CustomDetails: map of string, optional
	CustomDetails terra.MapValue[terra.StringValue] `hcl:"custom_details,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Query: string, required
	Query terra.StringValue `hcl:"query,attr" validate:"required"`
	// QueryFrequency: string, optional
	QueryFrequency terra.StringValue `hcl:"query_frequency,attr"`
	// QueryPeriod: string, optional
	QueryPeriod terra.StringValue `hcl:"query_period,attr"`
	// Severity: string, required
	Severity terra.StringValue `hcl:"severity,attr" validate:"required"`
	// SuppressionDuration: string, optional
	SuppressionDuration terra.StringValue `hcl:"suppression_duration,attr"`
	// SuppressionEnabled: bool, optional
	SuppressionEnabled terra.BoolValue `hcl:"suppression_enabled,attr"`
	// Tactics: set of string, optional
	Tactics terra.SetValue[terra.StringValue] `hcl:"tactics,attr"`
	// Techniques: set of string, optional
	Techniques terra.SetValue[terra.StringValue] `hcl:"techniques,attr"`
	// TriggerOperator: string, optional
	TriggerOperator terra.StringValue `hcl:"trigger_operator,attr"`
	// TriggerThreshold: number, optional
	TriggerThreshold terra.NumberValue `hcl:"trigger_threshold,attr"`
	// AlertDetailsOverride: min=0
	AlertDetailsOverride []sentinelalertrulescheduled.AlertDetailsOverride `hcl:"alert_details_override,block" validate:"min=0"`
	// EntityMapping: min=0,max=5
	EntityMapping []sentinelalertrulescheduled.EntityMapping `hcl:"entity_mapping,block" validate:"min=0,max=5"`
	// EventGrouping: optional
	EventGrouping *sentinelalertrulescheduled.EventGrouping `hcl:"event_grouping,block"`
	// IncidentConfiguration: optional
	IncidentConfiguration *sentinelalertrulescheduled.IncidentConfiguration `hcl:"incident_configuration,block"`
	// SentinelEntityMapping: min=0,max=5
	SentinelEntityMapping []sentinelalertrulescheduled.SentinelEntityMapping `hcl:"sentinel_entity_mapping,block" validate:"min=0,max=5"`
	// Timeouts: optional
	Timeouts *sentinelalertrulescheduled.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelAlertRuleScheduled depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelAlertRuleScheduledAttributes struct {
	ref terra.Reference
}

func (sars sentinelAlertRuleScheduledAttributes) AlertRuleTemplateGuid() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("alert_rule_template_guid"))
}

func (sars sentinelAlertRuleScheduledAttributes) AlertRuleTemplateVersion() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("alert_rule_template_version"))
}

func (sars sentinelAlertRuleScheduledAttributes) CustomDetails() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sars.ref.Append("custom_details"))
}

func (sars sentinelAlertRuleScheduledAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("description"))
}

func (sars sentinelAlertRuleScheduledAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("display_name"))
}

func (sars sentinelAlertRuleScheduledAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(sars.ref.Append("enabled"))
}

func (sars sentinelAlertRuleScheduledAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("id"))
}

func (sars sentinelAlertRuleScheduledAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("log_analytics_workspace_id"))
}

func (sars sentinelAlertRuleScheduledAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("name"))
}

func (sars sentinelAlertRuleScheduledAttributes) Query() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("query"))
}

func (sars sentinelAlertRuleScheduledAttributes) QueryFrequency() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("query_frequency"))
}

func (sars sentinelAlertRuleScheduledAttributes) QueryPeriod() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("query_period"))
}

func (sars sentinelAlertRuleScheduledAttributes) Severity() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("severity"))
}

func (sars sentinelAlertRuleScheduledAttributes) SuppressionDuration() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("suppression_duration"))
}

func (sars sentinelAlertRuleScheduledAttributes) SuppressionEnabled() terra.BoolValue {
	return terra.ReferenceBool(sars.ref.Append("suppression_enabled"))
}

func (sars sentinelAlertRuleScheduledAttributes) Tactics() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sars.ref.Append("tactics"))
}

func (sars sentinelAlertRuleScheduledAttributes) Techniques() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](sars.ref.Append("techniques"))
}

func (sars sentinelAlertRuleScheduledAttributes) TriggerOperator() terra.StringValue {
	return terra.ReferenceString(sars.ref.Append("trigger_operator"))
}

func (sars sentinelAlertRuleScheduledAttributes) TriggerThreshold() terra.NumberValue {
	return terra.ReferenceNumber(sars.ref.Append("trigger_threshold"))
}

func (sars sentinelAlertRuleScheduledAttributes) AlertDetailsOverride() terra.ListValue[sentinelalertrulescheduled.AlertDetailsOverrideAttributes] {
	return terra.ReferenceList[sentinelalertrulescheduled.AlertDetailsOverrideAttributes](sars.ref.Append("alert_details_override"))
}

func (sars sentinelAlertRuleScheduledAttributes) EntityMapping() terra.ListValue[sentinelalertrulescheduled.EntityMappingAttributes] {
	return terra.ReferenceList[sentinelalertrulescheduled.EntityMappingAttributes](sars.ref.Append("entity_mapping"))
}

func (sars sentinelAlertRuleScheduledAttributes) EventGrouping() terra.ListValue[sentinelalertrulescheduled.EventGroupingAttributes] {
	return terra.ReferenceList[sentinelalertrulescheduled.EventGroupingAttributes](sars.ref.Append("event_grouping"))
}

func (sars sentinelAlertRuleScheduledAttributes) IncidentConfiguration() terra.ListValue[sentinelalertrulescheduled.IncidentConfigurationAttributes] {
	return terra.ReferenceList[sentinelalertrulescheduled.IncidentConfigurationAttributes](sars.ref.Append("incident_configuration"))
}

func (sars sentinelAlertRuleScheduledAttributes) SentinelEntityMapping() terra.ListValue[sentinelalertrulescheduled.SentinelEntityMappingAttributes] {
	return terra.ReferenceList[sentinelalertrulescheduled.SentinelEntityMappingAttributes](sars.ref.Append("sentinel_entity_mapping"))
}

func (sars sentinelAlertRuleScheduledAttributes) Timeouts() sentinelalertrulescheduled.TimeoutsAttributes {
	return terra.ReferenceSingle[sentinelalertrulescheduled.TimeoutsAttributes](sars.ref.Append("timeouts"))
}

type sentinelAlertRuleScheduledState struct {
	AlertRuleTemplateGuid    string                                                  `json:"alert_rule_template_guid"`
	AlertRuleTemplateVersion string                                                  `json:"alert_rule_template_version"`
	CustomDetails            map[string]string                                       `json:"custom_details"`
	Description              string                                                  `json:"description"`
	DisplayName              string                                                  `json:"display_name"`
	Enabled                  bool                                                    `json:"enabled"`
	Id                       string                                                  `json:"id"`
	LogAnalyticsWorkspaceId  string                                                  `json:"log_analytics_workspace_id"`
	Name                     string                                                  `json:"name"`
	Query                    string                                                  `json:"query"`
	QueryFrequency           string                                                  `json:"query_frequency"`
	QueryPeriod              string                                                  `json:"query_period"`
	Severity                 string                                                  `json:"severity"`
	SuppressionDuration      string                                                  `json:"suppression_duration"`
	SuppressionEnabled       bool                                                    `json:"suppression_enabled"`
	Tactics                  []string                                                `json:"tactics"`
	Techniques               []string                                                `json:"techniques"`
	TriggerOperator          string                                                  `json:"trigger_operator"`
	TriggerThreshold         float64                                                 `json:"trigger_threshold"`
	AlertDetailsOverride     []sentinelalertrulescheduled.AlertDetailsOverrideState  `json:"alert_details_override"`
	EntityMapping            []sentinelalertrulescheduled.EntityMappingState         `json:"entity_mapping"`
	EventGrouping            []sentinelalertrulescheduled.EventGroupingState         `json:"event_grouping"`
	IncidentConfiguration    []sentinelalertrulescheduled.IncidentConfigurationState `json:"incident_configuration"`
	SentinelEntityMapping    []sentinelalertrulescheduled.SentinelEntityMappingState `json:"sentinel_entity_mapping"`
	Timeouts                 *sentinelalertrulescheduled.TimeoutsState               `json:"timeouts"`
}
