// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	servicebusnamespace "github.com/golingon/terraproviders/azurerm/3.49.0/servicebusnamespace"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewServicebusNamespace(name string, args ServicebusNamespaceArgs) *ServicebusNamespace {
	return &ServicebusNamespace{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServicebusNamespace)(nil)

type ServicebusNamespace struct {
	Name  string
	Args  ServicebusNamespaceArgs
	state *servicebusNamespaceState
}

func (sn *ServicebusNamespace) Type() string {
	return "azurerm_servicebus_namespace"
}

func (sn *ServicebusNamespace) LocalName() string {
	return sn.Name
}

func (sn *ServicebusNamespace) Configuration() interface{} {
	return sn.Args
}

func (sn *ServicebusNamespace) Attributes() servicebusNamespaceAttributes {
	return servicebusNamespaceAttributes{ref: terra.ReferenceResource(sn)}
}

func (sn *ServicebusNamespace) ImportState(av io.Reader) error {
	sn.state = &servicebusNamespaceState{}
	if err := json.NewDecoder(av).Decode(sn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sn.Type(), sn.LocalName(), err)
	}
	return nil
}

func (sn *ServicebusNamespace) State() (*servicebusNamespaceState, bool) {
	return sn.state, sn.state != nil
}

func (sn *ServicebusNamespace) StateMust() *servicebusNamespaceState {
	if sn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sn.Type(), sn.LocalName()))
	}
	return sn.state
}

func (sn *ServicebusNamespace) DependOn() terra.Reference {
	return terra.ReferenceResource(sn)
}

type ServicebusNamespaceArgs struct {
	// Capacity: number, optional
	Capacity terra.NumberValue `hcl:"capacity,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LocalAuthEnabled: bool, optional
	LocalAuthEnabled terra.BoolValue `hcl:"local_auth_enabled,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MinimumTlsVersion: string, optional
	MinimumTlsVersion terra.StringValue `hcl:"minimum_tls_version,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PublicNetworkAccessEnabled: bool, optional
	PublicNetworkAccessEnabled terra.BoolValue `hcl:"public_network_access_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ZoneRedundant: bool, optional
	ZoneRedundant terra.BoolValue `hcl:"zone_redundant,attr"`
	// CustomerManagedKey: optional
	CustomerManagedKey *servicebusnamespace.CustomerManagedKey `hcl:"customer_managed_key,block"`
	// Identity: optional
	Identity *servicebusnamespace.Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *servicebusnamespace.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ServicebusNamespace depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type servicebusNamespaceAttributes struct {
	ref terra.Reference
}

func (sn servicebusNamespaceAttributes) Capacity() terra.NumberValue {
	return terra.ReferenceNumber(sn.ref.Append("capacity"))
}

func (sn servicebusNamespaceAttributes) DefaultPrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("default_primary_connection_string"))
}

func (sn servicebusNamespaceAttributes) DefaultPrimaryKey() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("default_primary_key"))
}

func (sn servicebusNamespaceAttributes) DefaultSecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("default_secondary_connection_string"))
}

func (sn servicebusNamespaceAttributes) DefaultSecondaryKey() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("default_secondary_key"))
}

func (sn servicebusNamespaceAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("endpoint"))
}

func (sn servicebusNamespaceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("id"))
}

func (sn servicebusNamespaceAttributes) LocalAuthEnabled() terra.BoolValue {
	return terra.ReferenceBool(sn.ref.Append("local_auth_enabled"))
}

func (sn servicebusNamespaceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("location"))
}

func (sn servicebusNamespaceAttributes) MinimumTlsVersion() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("minimum_tls_version"))
}

func (sn servicebusNamespaceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("name"))
}

func (sn servicebusNamespaceAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceBool(sn.ref.Append("public_network_access_enabled"))
}

func (sn servicebusNamespaceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("resource_group_name"))
}

func (sn servicebusNamespaceAttributes) Sku() terra.StringValue {
	return terra.ReferenceString(sn.ref.Append("sku"))
}

func (sn servicebusNamespaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sn.ref.Append("tags"))
}

func (sn servicebusNamespaceAttributes) ZoneRedundant() terra.BoolValue {
	return terra.ReferenceBool(sn.ref.Append("zone_redundant"))
}

func (sn servicebusNamespaceAttributes) CustomerManagedKey() terra.ListValue[servicebusnamespace.CustomerManagedKeyAttributes] {
	return terra.ReferenceList[servicebusnamespace.CustomerManagedKeyAttributes](sn.ref.Append("customer_managed_key"))
}

func (sn servicebusNamespaceAttributes) Identity() terra.ListValue[servicebusnamespace.IdentityAttributes] {
	return terra.ReferenceList[servicebusnamespace.IdentityAttributes](sn.ref.Append("identity"))
}

func (sn servicebusNamespaceAttributes) Timeouts() servicebusnamespace.TimeoutsAttributes {
	return terra.ReferenceSingle[servicebusnamespace.TimeoutsAttributes](sn.ref.Append("timeouts"))
}

type servicebusNamespaceState struct {
	Capacity                         float64                                       `json:"capacity"`
	DefaultPrimaryConnectionString   string                                        `json:"default_primary_connection_string"`
	DefaultPrimaryKey                string                                        `json:"default_primary_key"`
	DefaultSecondaryConnectionString string                                        `json:"default_secondary_connection_string"`
	DefaultSecondaryKey              string                                        `json:"default_secondary_key"`
	Endpoint                         string                                        `json:"endpoint"`
	Id                               string                                        `json:"id"`
	LocalAuthEnabled                 bool                                          `json:"local_auth_enabled"`
	Location                         string                                        `json:"location"`
	MinimumTlsVersion                string                                        `json:"minimum_tls_version"`
	Name                             string                                        `json:"name"`
	PublicNetworkAccessEnabled       bool                                          `json:"public_network_access_enabled"`
	ResourceGroupName                string                                        `json:"resource_group_name"`
	Sku                              string                                        `json:"sku"`
	Tags                             map[string]string                             `json:"tags"`
	ZoneRedundant                    bool                                          `json:"zone_redundant"`
	CustomerManagedKey               []servicebusnamespace.CustomerManagedKeyState `json:"customer_managed_key"`
	Identity                         []servicebusnamespace.IdentityState           `json:"identity"`
	Timeouts                         *servicebusnamespace.TimeoutsState            `json:"timeouts"`
}
