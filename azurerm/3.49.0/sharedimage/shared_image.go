// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package sharedimage

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Identifier struct {
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
}

type PurchasePlan struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Product: string, optional
	Product terra.StringValue `hcl:"product,attr"`
	// Publisher: string, optional
	Publisher terra.StringValue `hcl:"publisher,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type IdentifierAttributes struct {
	ref terra.Reference
}

func (i IdentifierAttributes) InternalRef() terra.Reference {
	return i.ref
}

func (i IdentifierAttributes) InternalWithRef(ref terra.Reference) IdentifierAttributes {
	return IdentifierAttributes{ref: ref}
}

func (i IdentifierAttributes) InternalTokens() hclwrite.Tokens {
	return i.ref.InternalTokens()
}

func (i IdentifierAttributes) Offer() terra.StringValue {
	return terra.ReferenceString(i.ref.Append("offer"))
}

func (i IdentifierAttributes) Publisher() terra.StringValue {
	return terra.ReferenceString(i.ref.Append("publisher"))
}

func (i IdentifierAttributes) Sku() terra.StringValue {
	return terra.ReferenceString(i.ref.Append("sku"))
}

type PurchasePlanAttributes struct {
	ref terra.Reference
}

func (pp PurchasePlanAttributes) InternalRef() terra.Reference {
	return pp.ref
}

func (pp PurchasePlanAttributes) InternalWithRef(ref terra.Reference) PurchasePlanAttributes {
	return PurchasePlanAttributes{ref: ref}
}

func (pp PurchasePlanAttributes) InternalTokens() hclwrite.Tokens {
	return pp.ref.InternalTokens()
}

func (pp PurchasePlanAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("name"))
}

func (pp PurchasePlanAttributes) Product() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("product"))
}

func (pp PurchasePlanAttributes) Publisher() terra.StringValue {
	return terra.ReferenceString(pp.ref.Append("publisher"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type IdentifierState struct {
	Offer     string `json:"offer"`
	Publisher string `json:"publisher"`
	Sku       string `json:"sku"`
}

type PurchasePlanState struct {
	Name      string `json:"name"`
	Product   string `json:"product"`
	Publisher string `json:"publisher"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
