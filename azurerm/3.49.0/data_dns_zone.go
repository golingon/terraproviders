// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datadnszone "github.com/golingon/terraproviders/azurerm/3.49.0/datadnszone"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataDnsZone(name string, args DataDnsZoneArgs) *DataDnsZone {
	return &DataDnsZone{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDnsZone)(nil)

type DataDnsZone struct {
	Name string
	Args DataDnsZoneArgs
}

func (dz *DataDnsZone) DataSource() string {
	return "azurerm_dns_zone"
}

func (dz *DataDnsZone) LocalName() string {
	return dz.Name
}

func (dz *DataDnsZone) Configuration() interface{} {
	return dz.Args
}

func (dz *DataDnsZone) Attributes() dataDnsZoneAttributes {
	return dataDnsZoneAttributes{ref: terra.ReferenceDataResource(dz)}
}

type DataDnsZoneArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// Timeouts: optional
	Timeouts *datadnszone.Timeouts `hcl:"timeouts,block"`
}
type dataDnsZoneAttributes struct {
	ref terra.Reference
}

func (dz dataDnsZoneAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dz.ref.Append("id"))
}

func (dz dataDnsZoneAttributes) MaxNumberOfRecordSets() terra.NumberValue {
	return terra.ReferenceNumber(dz.ref.Append("max_number_of_record_sets"))
}

func (dz dataDnsZoneAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dz.ref.Append("name"))
}

func (dz dataDnsZoneAttributes) NameServers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](dz.ref.Append("name_servers"))
}

func (dz dataDnsZoneAttributes) NumberOfRecordSets() terra.NumberValue {
	return terra.ReferenceNumber(dz.ref.Append("number_of_record_sets"))
}

func (dz dataDnsZoneAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(dz.ref.Append("resource_group_name"))
}

func (dz dataDnsZoneAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dz.ref.Append("tags"))
}

func (dz dataDnsZoneAttributes) Timeouts() datadnszone.TimeoutsAttributes {
	return terra.ReferenceSingle[datadnszone.TimeoutsAttributes](dz.ref.Append("timeouts"))
}
