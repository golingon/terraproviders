// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datanetworkinterface "github.com/golingon/terraproviders/azurerm/3.49.0/datanetworkinterface"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataNetworkInterface(name string, args DataNetworkInterfaceArgs) *DataNetworkInterface {
	return &DataNetworkInterface{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNetworkInterface)(nil)

type DataNetworkInterface struct {
	Name string
	Args DataNetworkInterfaceArgs
}

func (ni *DataNetworkInterface) DataSource() string {
	return "azurerm_network_interface"
}

func (ni *DataNetworkInterface) LocalName() string {
	return ni.Name
}

func (ni *DataNetworkInterface) Configuration() interface{} {
	return ni.Args
}

func (ni *DataNetworkInterface) Attributes() dataNetworkInterfaceAttributes {
	return dataNetworkInterfaceAttributes{ref: terra.ReferenceDataResource(ni)}
}

type DataNetworkInterfaceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// IpConfiguration: min=0
	IpConfiguration []datanetworkinterface.IpConfiguration `hcl:"ip_configuration,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datanetworkinterface.Timeouts `hcl:"timeouts,block"`
}
type dataNetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (ni dataNetworkInterfaceAttributes) AppliedDnsServers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ni.ref.Append("applied_dns_servers"))
}

func (ni dataNetworkInterfaceAttributes) DnsServers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](ni.ref.Append("dns_servers"))
}

func (ni dataNetworkInterfaceAttributes) EnableAcceleratedNetworking() terra.BoolValue {
	return terra.ReferenceBool(ni.ref.Append("enable_accelerated_networking"))
}

func (ni dataNetworkInterfaceAttributes) EnableIpForwarding() terra.BoolValue {
	return terra.ReferenceBool(ni.ref.Append("enable_ip_forwarding"))
}

func (ni dataNetworkInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("id"))
}

func (ni dataNetworkInterfaceAttributes) InternalDnsNameLabel() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("internal_dns_name_label"))
}

func (ni dataNetworkInterfaceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("location"))
}

func (ni dataNetworkInterfaceAttributes) MacAddress() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("mac_address"))
}

func (ni dataNetworkInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("name"))
}

func (ni dataNetworkInterfaceAttributes) NetworkSecurityGroupId() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("network_security_group_id"))
}

func (ni dataNetworkInterfaceAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("private_ip_address"))
}

func (ni dataNetworkInterfaceAttributes) PrivateIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](ni.ref.Append("private_ip_addresses"))
}

func (ni dataNetworkInterfaceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("resource_group_name"))
}

func (ni dataNetworkInterfaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ni.ref.Append("tags"))
}

func (ni dataNetworkInterfaceAttributes) VirtualMachineId() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("virtual_machine_id"))
}

func (ni dataNetworkInterfaceAttributes) IpConfiguration() terra.ListValue[datanetworkinterface.IpConfigurationAttributes] {
	return terra.ReferenceList[datanetworkinterface.IpConfigurationAttributes](ni.ref.Append("ip_configuration"))
}

func (ni dataNetworkInterfaceAttributes) Timeouts() datanetworkinterface.TimeoutsAttributes {
	return terra.ReferenceSingle[datanetworkinterface.TimeoutsAttributes](ni.ref.Append("timeouts"))
}
