// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	streamanalyticsoutputpowerbi "github.com/golingon/terraproviders/azurerm/3.49.0/streamanalyticsoutputpowerbi"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewStreamAnalyticsOutputPowerbi(name string, args StreamAnalyticsOutputPowerbiArgs) *StreamAnalyticsOutputPowerbi {
	return &StreamAnalyticsOutputPowerbi{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StreamAnalyticsOutputPowerbi)(nil)

type StreamAnalyticsOutputPowerbi struct {
	Name  string
	Args  StreamAnalyticsOutputPowerbiArgs
	state *streamAnalyticsOutputPowerbiState
}

func (saop *StreamAnalyticsOutputPowerbi) Type() string {
	return "azurerm_stream_analytics_output_powerbi"
}

func (saop *StreamAnalyticsOutputPowerbi) LocalName() string {
	return saop.Name
}

func (saop *StreamAnalyticsOutputPowerbi) Configuration() interface{} {
	return saop.Args
}

func (saop *StreamAnalyticsOutputPowerbi) Attributes() streamAnalyticsOutputPowerbiAttributes {
	return streamAnalyticsOutputPowerbiAttributes{ref: terra.ReferenceResource(saop)}
}

func (saop *StreamAnalyticsOutputPowerbi) ImportState(av io.Reader) error {
	saop.state = &streamAnalyticsOutputPowerbiState{}
	if err := json.NewDecoder(av).Decode(saop.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", saop.Type(), saop.LocalName(), err)
	}
	return nil
}

func (saop *StreamAnalyticsOutputPowerbi) State() (*streamAnalyticsOutputPowerbiState, bool) {
	return saop.state, saop.state != nil
}

func (saop *StreamAnalyticsOutputPowerbi) StateMust() *streamAnalyticsOutputPowerbiState {
	if saop.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", saop.Type(), saop.LocalName()))
	}
	return saop.state
}

func (saop *StreamAnalyticsOutputPowerbi) DependOn() terra.Reference {
	return terra.ReferenceResource(saop)
}

type StreamAnalyticsOutputPowerbiArgs struct {
	// Dataset: string, required
	Dataset terra.StringValue `hcl:"dataset,attr" validate:"required"`
	// GroupId: string, required
	GroupId terra.StringValue `hcl:"group_id,attr" validate:"required"`
	// GroupName: string, required
	GroupName terra.StringValue `hcl:"group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StreamAnalyticsJobId: string, required
	StreamAnalyticsJobId terra.StringValue `hcl:"stream_analytics_job_id,attr" validate:"required"`
	// Table: string, required
	Table terra.StringValue `hcl:"table,attr" validate:"required"`
	// TokenUserDisplayName: string, optional
	TokenUserDisplayName terra.StringValue `hcl:"token_user_display_name,attr"`
	// TokenUserPrincipalName: string, optional
	TokenUserPrincipalName terra.StringValue `hcl:"token_user_principal_name,attr"`
	// Timeouts: optional
	Timeouts *streamanalyticsoutputpowerbi.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that StreamAnalyticsOutputPowerbi depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type streamAnalyticsOutputPowerbiAttributes struct {
	ref terra.Reference
}

func (saop streamAnalyticsOutputPowerbiAttributes) Dataset() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("dataset"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) GroupId() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("group_id"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) GroupName() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("group_name"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) Id() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("id"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) Name() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("name"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) StreamAnalyticsJobId() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("stream_analytics_job_id"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) Table() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("table"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) TokenUserDisplayName() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("token_user_display_name"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) TokenUserPrincipalName() terra.StringValue {
	return terra.ReferenceString(saop.ref.Append("token_user_principal_name"))
}

func (saop streamAnalyticsOutputPowerbiAttributes) Timeouts() streamanalyticsoutputpowerbi.TimeoutsAttributes {
	return terra.ReferenceSingle[streamanalyticsoutputpowerbi.TimeoutsAttributes](saop.ref.Append("timeouts"))
}

type streamAnalyticsOutputPowerbiState struct {
	Dataset                string                                      `json:"dataset"`
	GroupId                string                                      `json:"group_id"`
	GroupName              string                                      `json:"group_name"`
	Id                     string                                      `json:"id"`
	Name                   string                                      `json:"name"`
	StreamAnalyticsJobId   string                                      `json:"stream_analytics_job_id"`
	Table                  string                                      `json:"table"`
	TokenUserDisplayName   string                                      `json:"token_user_display_name"`
	TokenUserPrincipalName string                                      `json:"token_user_principal_name"`
	Timeouts               *streamanalyticsoutputpowerbi.TimeoutsState `json:"timeouts"`
}
