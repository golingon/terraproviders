// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	billingaccountcostmanagementexport "github.com/golingon/terraproviders/azurerm/3.49.0/billingaccountcostmanagementexport"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewBillingAccountCostManagementExport(name string, args BillingAccountCostManagementExportArgs) *BillingAccountCostManagementExport {
	return &BillingAccountCostManagementExport{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BillingAccountCostManagementExport)(nil)

type BillingAccountCostManagementExport struct {
	Name  string
	Args  BillingAccountCostManagementExportArgs
	state *billingAccountCostManagementExportState
}

func (bacme *BillingAccountCostManagementExport) Type() string {
	return "azurerm_billing_account_cost_management_export"
}

func (bacme *BillingAccountCostManagementExport) LocalName() string {
	return bacme.Name
}

func (bacme *BillingAccountCostManagementExport) Configuration() interface{} {
	return bacme.Args
}

func (bacme *BillingAccountCostManagementExport) Attributes() billingAccountCostManagementExportAttributes {
	return billingAccountCostManagementExportAttributes{ref: terra.ReferenceResource(bacme)}
}

func (bacme *BillingAccountCostManagementExport) ImportState(av io.Reader) error {
	bacme.state = &billingAccountCostManagementExportState{}
	if err := json.NewDecoder(av).Decode(bacme.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bacme.Type(), bacme.LocalName(), err)
	}
	return nil
}

func (bacme *BillingAccountCostManagementExport) State() (*billingAccountCostManagementExportState, bool) {
	return bacme.state, bacme.state != nil
}

func (bacme *BillingAccountCostManagementExport) StateMust() *billingAccountCostManagementExportState {
	if bacme.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bacme.Type(), bacme.LocalName()))
	}
	return bacme.state
}

func (bacme *BillingAccountCostManagementExport) DependOn() terra.Reference {
	return terra.ReferenceResource(bacme)
}

type BillingAccountCostManagementExportArgs struct {
	// Active: bool, optional
	Active terra.BoolValue `hcl:"active,attr"`
	// BillingAccountId: string, required
	BillingAccountId terra.StringValue `hcl:"billing_account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RecurrencePeriodEndDate: string, required
	RecurrencePeriodEndDate terra.StringValue `hcl:"recurrence_period_end_date,attr" validate:"required"`
	// RecurrencePeriodStartDate: string, required
	RecurrencePeriodStartDate terra.StringValue `hcl:"recurrence_period_start_date,attr" validate:"required"`
	// RecurrenceType: string, required
	RecurrenceType terra.StringValue `hcl:"recurrence_type,attr" validate:"required"`
	// ExportDataOptions: required
	ExportDataOptions *billingaccountcostmanagementexport.ExportDataOptions `hcl:"export_data_options,block" validate:"required"`
	// ExportDataStorageLocation: required
	ExportDataStorageLocation *billingaccountcostmanagementexport.ExportDataStorageLocation `hcl:"export_data_storage_location,block" validate:"required"`
	// Timeouts: optional
	Timeouts *billingaccountcostmanagementexport.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that BillingAccountCostManagementExport depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type billingAccountCostManagementExportAttributes struct {
	ref terra.Reference
}

func (bacme billingAccountCostManagementExportAttributes) Active() terra.BoolValue {
	return terra.ReferenceBool(bacme.ref.Append("active"))
}

func (bacme billingAccountCostManagementExportAttributes) BillingAccountId() terra.StringValue {
	return terra.ReferenceString(bacme.ref.Append("billing_account_id"))
}

func (bacme billingAccountCostManagementExportAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bacme.ref.Append("id"))
}

func (bacme billingAccountCostManagementExportAttributes) Name() terra.StringValue {
	return terra.ReferenceString(bacme.ref.Append("name"))
}

func (bacme billingAccountCostManagementExportAttributes) RecurrencePeriodEndDate() terra.StringValue {
	return terra.ReferenceString(bacme.ref.Append("recurrence_period_end_date"))
}

func (bacme billingAccountCostManagementExportAttributes) RecurrencePeriodStartDate() terra.StringValue {
	return terra.ReferenceString(bacme.ref.Append("recurrence_period_start_date"))
}

func (bacme billingAccountCostManagementExportAttributes) RecurrenceType() terra.StringValue {
	return terra.ReferenceString(bacme.ref.Append("recurrence_type"))
}

func (bacme billingAccountCostManagementExportAttributes) ExportDataOptions() terra.ListValue[billingaccountcostmanagementexport.ExportDataOptionsAttributes] {
	return terra.ReferenceList[billingaccountcostmanagementexport.ExportDataOptionsAttributes](bacme.ref.Append("export_data_options"))
}

func (bacme billingAccountCostManagementExportAttributes) ExportDataStorageLocation() terra.ListValue[billingaccountcostmanagementexport.ExportDataStorageLocationAttributes] {
	return terra.ReferenceList[billingaccountcostmanagementexport.ExportDataStorageLocationAttributes](bacme.ref.Append("export_data_storage_location"))
}

func (bacme billingAccountCostManagementExportAttributes) Timeouts() billingaccountcostmanagementexport.TimeoutsAttributes {
	return terra.ReferenceSingle[billingaccountcostmanagementexport.TimeoutsAttributes](bacme.ref.Append("timeouts"))
}

type billingAccountCostManagementExportState struct {
	Active                    bool                                                                `json:"active"`
	BillingAccountId          string                                                              `json:"billing_account_id"`
	Id                        string                                                              `json:"id"`
	Name                      string                                                              `json:"name"`
	RecurrencePeriodEndDate   string                                                              `json:"recurrence_period_end_date"`
	RecurrencePeriodStartDate string                                                              `json:"recurrence_period_start_date"`
	RecurrenceType            string                                                              `json:"recurrence_type"`
	ExportDataOptions         []billingaccountcostmanagementexport.ExportDataOptionsState         `json:"export_data_options"`
	ExportDataStorageLocation []billingaccountcostmanagementexport.ExportDataStorageLocationState `json:"export_data_storage_location"`
	Timeouts                  *billingaccountcostmanagementexport.TimeoutsState                   `json:"timeouts"`
}
