// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementproductapi "github.com/golingon/terraproviders/azurerm/3.49.0/apimanagementproductapi"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiManagementProductApi(name string, args ApiManagementProductApiArgs) *ApiManagementProductApi {
	return &ApiManagementProductApi{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementProductApi)(nil)

type ApiManagementProductApi struct {
	Name  string
	Args  ApiManagementProductApiArgs
	state *apiManagementProductApiState
}

func (ampa *ApiManagementProductApi) Type() string {
	return "azurerm_api_management_product_api"
}

func (ampa *ApiManagementProductApi) LocalName() string {
	return ampa.Name
}

func (ampa *ApiManagementProductApi) Configuration() interface{} {
	return ampa.Args
}

func (ampa *ApiManagementProductApi) Attributes() apiManagementProductApiAttributes {
	return apiManagementProductApiAttributes{ref: terra.ReferenceResource(ampa)}
}

func (ampa *ApiManagementProductApi) ImportState(av io.Reader) error {
	ampa.state = &apiManagementProductApiState{}
	if err := json.NewDecoder(av).Decode(ampa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ampa.Type(), ampa.LocalName(), err)
	}
	return nil
}

func (ampa *ApiManagementProductApi) State() (*apiManagementProductApiState, bool) {
	return ampa.state, ampa.state != nil
}

func (ampa *ApiManagementProductApi) StateMust() *apiManagementProductApiState {
	if ampa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ampa.Type(), ampa.LocalName()))
	}
	return ampa.state
}

func (ampa *ApiManagementProductApi) DependOn() terra.Reference {
	return terra.ReferenceResource(ampa)
}

type ApiManagementProductApiArgs struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// ApiName: string, required
	ApiName terra.StringValue `hcl:"api_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ProductId: string, required
	ProductId terra.StringValue `hcl:"product_id,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *apimanagementproductapi.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApiManagementProductApi depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiManagementProductApiAttributes struct {
	ref terra.Reference
}

func (ampa apiManagementProductApiAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceString(ampa.ref.Append("api_management_name"))
}

func (ampa apiManagementProductApiAttributes) ApiName() terra.StringValue {
	return terra.ReferenceString(ampa.ref.Append("api_name"))
}

func (ampa apiManagementProductApiAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ampa.ref.Append("id"))
}

func (ampa apiManagementProductApiAttributes) ProductId() terra.StringValue {
	return terra.ReferenceString(ampa.ref.Append("product_id"))
}

func (ampa apiManagementProductApiAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ampa.ref.Append("resource_group_name"))
}

func (ampa apiManagementProductApiAttributes) Timeouts() apimanagementproductapi.TimeoutsAttributes {
	return terra.ReferenceSingle[apimanagementproductapi.TimeoutsAttributes](ampa.ref.Append("timeouts"))
}

type apiManagementProductApiState struct {
	ApiManagementName string                                 `json:"api_management_name"`
	ApiName           string                                 `json:"api_name"`
	Id                string                                 `json:"id"`
	ProductId         string                                 `json:"product_id"`
	ResourceGroupName string                                 `json:"resource_group_name"`
	Timeouts          *apimanagementproductapi.TimeoutsState `json:"timeouts"`
}
