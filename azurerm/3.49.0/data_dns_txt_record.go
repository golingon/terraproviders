// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datadnstxtrecord "github.com/golingon/terraproviders/azurerm/3.49.0/datadnstxtrecord"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataDnsTxtRecord(name string, args DataDnsTxtRecordArgs) *DataDnsTxtRecord {
	return &DataDnsTxtRecord{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDnsTxtRecord)(nil)

type DataDnsTxtRecord struct {
	Name string
	Args DataDnsTxtRecordArgs
}

func (dtr *DataDnsTxtRecord) DataSource() string {
	return "azurerm_dns_txt_record"
}

func (dtr *DataDnsTxtRecord) LocalName() string {
	return dtr.Name
}

func (dtr *DataDnsTxtRecord) Configuration() interface{} {
	return dtr.Args
}

func (dtr *DataDnsTxtRecord) Attributes() dataDnsTxtRecordAttributes {
	return dataDnsTxtRecordAttributes{ref: terra.ReferenceDataResource(dtr)}
}

type DataDnsTxtRecordArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ZoneName: string, required
	ZoneName terra.StringValue `hcl:"zone_name,attr" validate:"required"`
	// Record: min=0
	Record []datadnstxtrecord.Record `hcl:"record,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datadnstxtrecord.Timeouts `hcl:"timeouts,block"`
}
type dataDnsTxtRecordAttributes struct {
	ref terra.Reference
}

func (dtr dataDnsTxtRecordAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(dtr.ref.Append("fqdn"))
}

func (dtr dataDnsTxtRecordAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dtr.ref.Append("id"))
}

func (dtr dataDnsTxtRecordAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dtr.ref.Append("name"))
}

func (dtr dataDnsTxtRecordAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(dtr.ref.Append("resource_group_name"))
}

func (dtr dataDnsTxtRecordAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dtr.ref.Append("tags"))
}

func (dtr dataDnsTxtRecordAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceNumber(dtr.ref.Append("ttl"))
}

func (dtr dataDnsTxtRecordAttributes) ZoneName() terra.StringValue {
	return terra.ReferenceString(dtr.ref.Append("zone_name"))
}

func (dtr dataDnsTxtRecordAttributes) Record() terra.SetValue[datadnstxtrecord.RecordAttributes] {
	return terra.ReferenceSet[datadnstxtrecord.RecordAttributes](dtr.ref.Append("record"))
}

func (dtr dataDnsTxtRecordAttributes) Timeouts() datadnstxtrecord.TimeoutsAttributes {
	return terra.ReferenceSingle[datadnstxtrecord.TimeoutsAttributes](dtr.ref.Append("timeouts"))
}
