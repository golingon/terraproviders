// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datawindowswebapp "github.com/golingon/terraproviders/azurerm/3.49.0/datawindowswebapp"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataWindowsWebApp(name string, args DataWindowsWebAppArgs) *DataWindowsWebApp {
	return &DataWindowsWebApp{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataWindowsWebApp)(nil)

type DataWindowsWebApp struct {
	Name string
	Args DataWindowsWebAppArgs
}

func (wwa *DataWindowsWebApp) DataSource() string {
	return "azurerm_windows_web_app"
}

func (wwa *DataWindowsWebApp) LocalName() string {
	return wwa.Name
}

func (wwa *DataWindowsWebApp) Configuration() interface{} {
	return wwa.Args
}

func (wwa *DataWindowsWebApp) Attributes() dataWindowsWebAppAttributes {
	return dataWindowsWebAppAttributes{ref: terra.ReferenceDataResource(wwa)}
}

type DataWindowsWebAppArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// AuthSettings: min=0
	AuthSettings []datawindowswebapp.AuthSettings `hcl:"auth_settings,block" validate:"min=0"`
	// AuthSettingsV2: min=0
	AuthSettingsV2 []datawindowswebapp.AuthSettingsV2 `hcl:"auth_settings_v2,block" validate:"min=0"`
	// Backup: min=0
	Backup []datawindowswebapp.Backup `hcl:"backup,block" validate:"min=0"`
	// ConnectionString: min=0
	ConnectionString []datawindowswebapp.ConnectionString `hcl:"connection_string,block" validate:"min=0"`
	// Identity: min=0
	Identity []datawindowswebapp.Identity `hcl:"identity,block" validate:"min=0"`
	// Logs: min=0
	Logs []datawindowswebapp.Logs `hcl:"logs,block" validate:"min=0"`
	// SiteConfig: min=0
	SiteConfig []datawindowswebapp.SiteConfig `hcl:"site_config,block" validate:"min=0"`
	// SiteCredential: min=0
	SiteCredential []datawindowswebapp.SiteCredential `hcl:"site_credential,block" validate:"min=0"`
	// StickySettings: min=0
	StickySettings []datawindowswebapp.StickySettings `hcl:"sticky_settings,block" validate:"min=0"`
	// StorageAccount: min=0
	StorageAccount []datawindowswebapp.StorageAccount `hcl:"storage_account,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datawindowswebapp.Timeouts `hcl:"timeouts,block"`
}
type dataWindowsWebAppAttributes struct {
	ref terra.Reference
}

func (wwa dataWindowsWebAppAttributes) AppSettings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](wwa.ref.Append("app_settings"))
}

func (wwa dataWindowsWebAppAttributes) ClientAffinityEnabled() terra.BoolValue {
	return terra.ReferenceBool(wwa.ref.Append("client_affinity_enabled"))
}

func (wwa dataWindowsWebAppAttributes) ClientCertificateEnabled() terra.BoolValue {
	return terra.ReferenceBool(wwa.ref.Append("client_certificate_enabled"))
}

func (wwa dataWindowsWebAppAttributes) ClientCertificateExclusionPaths() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("client_certificate_exclusion_paths"))
}

func (wwa dataWindowsWebAppAttributes) ClientCertificateMode() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("client_certificate_mode"))
}

func (wwa dataWindowsWebAppAttributes) CustomDomainVerificationId() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("custom_domain_verification_id"))
}

func (wwa dataWindowsWebAppAttributes) DefaultHostname() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("default_hostname"))
}

func (wwa dataWindowsWebAppAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(wwa.ref.Append("enabled"))
}

func (wwa dataWindowsWebAppAttributes) HttpsOnly() terra.BoolValue {
	return terra.ReferenceBool(wwa.ref.Append("https_only"))
}

func (wwa dataWindowsWebAppAttributes) Id() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("id"))
}

func (wwa dataWindowsWebAppAttributes) Kind() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("kind"))
}

func (wwa dataWindowsWebAppAttributes) Location() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("location"))
}

func (wwa dataWindowsWebAppAttributes) Name() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("name"))
}

func (wwa dataWindowsWebAppAttributes) OutboundIpAddressList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](wwa.ref.Append("outbound_ip_address_list"))
}

func (wwa dataWindowsWebAppAttributes) OutboundIpAddresses() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("outbound_ip_addresses"))
}

func (wwa dataWindowsWebAppAttributes) PossibleOutboundIpAddressList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](wwa.ref.Append("possible_outbound_ip_address_list"))
}

func (wwa dataWindowsWebAppAttributes) PossibleOutboundIpAddresses() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("possible_outbound_ip_addresses"))
}

func (wwa dataWindowsWebAppAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("resource_group_name"))
}

func (wwa dataWindowsWebAppAttributes) ServicePlanId() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("service_plan_id"))
}

func (wwa dataWindowsWebAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](wwa.ref.Append("tags"))
}

func (wwa dataWindowsWebAppAttributes) VirtualNetworkSubnetId() terra.StringValue {
	return terra.ReferenceString(wwa.ref.Append("virtual_network_subnet_id"))
}

func (wwa dataWindowsWebAppAttributes) AuthSettings() terra.ListValue[datawindowswebapp.AuthSettingsAttributes] {
	return terra.ReferenceList[datawindowswebapp.AuthSettingsAttributes](wwa.ref.Append("auth_settings"))
}

func (wwa dataWindowsWebAppAttributes) AuthSettingsV2() terra.ListValue[datawindowswebapp.AuthSettingsV2Attributes] {
	return terra.ReferenceList[datawindowswebapp.AuthSettingsV2Attributes](wwa.ref.Append("auth_settings_v2"))
}

func (wwa dataWindowsWebAppAttributes) Backup() terra.ListValue[datawindowswebapp.BackupAttributes] {
	return terra.ReferenceList[datawindowswebapp.BackupAttributes](wwa.ref.Append("backup"))
}

func (wwa dataWindowsWebAppAttributes) ConnectionString() terra.SetValue[datawindowswebapp.ConnectionStringAttributes] {
	return terra.ReferenceSet[datawindowswebapp.ConnectionStringAttributes](wwa.ref.Append("connection_string"))
}

func (wwa dataWindowsWebAppAttributes) Identity() terra.ListValue[datawindowswebapp.IdentityAttributes] {
	return terra.ReferenceList[datawindowswebapp.IdentityAttributes](wwa.ref.Append("identity"))
}

func (wwa dataWindowsWebAppAttributes) Logs() terra.ListValue[datawindowswebapp.LogsAttributes] {
	return terra.ReferenceList[datawindowswebapp.LogsAttributes](wwa.ref.Append("logs"))
}

func (wwa dataWindowsWebAppAttributes) SiteConfig() terra.ListValue[datawindowswebapp.SiteConfigAttributes] {
	return terra.ReferenceList[datawindowswebapp.SiteConfigAttributes](wwa.ref.Append("site_config"))
}

func (wwa dataWindowsWebAppAttributes) SiteCredential() terra.ListValue[datawindowswebapp.SiteCredentialAttributes] {
	return terra.ReferenceList[datawindowswebapp.SiteCredentialAttributes](wwa.ref.Append("site_credential"))
}

func (wwa dataWindowsWebAppAttributes) StickySettings() terra.ListValue[datawindowswebapp.StickySettingsAttributes] {
	return terra.ReferenceList[datawindowswebapp.StickySettingsAttributes](wwa.ref.Append("sticky_settings"))
}

func (wwa dataWindowsWebAppAttributes) StorageAccount() terra.ListValue[datawindowswebapp.StorageAccountAttributes] {
	return terra.ReferenceList[datawindowswebapp.StorageAccountAttributes](wwa.ref.Append("storage_account"))
}

func (wwa dataWindowsWebAppAttributes) Timeouts() datawindowswebapp.TimeoutsAttributes {
	return terra.ReferenceSingle[datawindowswebapp.TimeoutsAttributes](wwa.ref.Append("timeouts"))
}
