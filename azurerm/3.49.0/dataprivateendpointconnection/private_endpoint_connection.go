// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataprivateendpointconnection

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type NetworkInterface struct{}

type PrivateServiceConnection struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type NetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (ni NetworkInterfaceAttributes) InternalRef() terra.Reference {
	return ni.ref
}

func (ni NetworkInterfaceAttributes) InternalWithRef(ref terra.Reference) NetworkInterfaceAttributes {
	return NetworkInterfaceAttributes{ref: ref}
}

func (ni NetworkInterfaceAttributes) InternalTokens() hclwrite.Tokens {
	return ni.ref.InternalTokens()
}

func (ni NetworkInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("id"))
}

func (ni NetworkInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ni.ref.Append("name"))
}

type PrivateServiceConnectionAttributes struct {
	ref terra.Reference
}

func (psc PrivateServiceConnectionAttributes) InternalRef() terra.Reference {
	return psc.ref
}

func (psc PrivateServiceConnectionAttributes) InternalWithRef(ref terra.Reference) PrivateServiceConnectionAttributes {
	return PrivateServiceConnectionAttributes{ref: ref}
}

func (psc PrivateServiceConnectionAttributes) InternalTokens() hclwrite.Tokens {
	return psc.ref.InternalTokens()
}

func (psc PrivateServiceConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceString(psc.ref.Append("name"))
}

func (psc PrivateServiceConnectionAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceString(psc.ref.Append("private_ip_address"))
}

func (psc PrivateServiceConnectionAttributes) RequestResponse() terra.StringValue {
	return terra.ReferenceString(psc.ref.Append("request_response"))
}

func (psc PrivateServiceConnectionAttributes) Status() terra.StringValue {
	return terra.ReferenceString(psc.ref.Append("status"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type NetworkInterfaceState struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

type PrivateServiceConnectionState struct {
	Name             string `json:"name"`
	PrivateIpAddress string `json:"private_ip_address"`
	RequestResponse  string `json:"request_response"`
	Status           string `json:"status"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
