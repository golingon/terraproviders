// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	streamanalyticsoutputservicebusqueue "github.com/golingon/terraproviders/azurerm/3.49.0/streamanalyticsoutputservicebusqueue"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewStreamAnalyticsOutputServicebusQueue(name string, args StreamAnalyticsOutputServicebusQueueArgs) *StreamAnalyticsOutputServicebusQueue {
	return &StreamAnalyticsOutputServicebusQueue{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StreamAnalyticsOutputServicebusQueue)(nil)

type StreamAnalyticsOutputServicebusQueue struct {
	Name  string
	Args  StreamAnalyticsOutputServicebusQueueArgs
	state *streamAnalyticsOutputServicebusQueueState
}

func (saosq *StreamAnalyticsOutputServicebusQueue) Type() string {
	return "azurerm_stream_analytics_output_servicebus_queue"
}

func (saosq *StreamAnalyticsOutputServicebusQueue) LocalName() string {
	return saosq.Name
}

func (saosq *StreamAnalyticsOutputServicebusQueue) Configuration() interface{} {
	return saosq.Args
}

func (saosq *StreamAnalyticsOutputServicebusQueue) Attributes() streamAnalyticsOutputServicebusQueueAttributes {
	return streamAnalyticsOutputServicebusQueueAttributes{ref: terra.ReferenceResource(saosq)}
}

func (saosq *StreamAnalyticsOutputServicebusQueue) ImportState(av io.Reader) error {
	saosq.state = &streamAnalyticsOutputServicebusQueueState{}
	if err := json.NewDecoder(av).Decode(saosq.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", saosq.Type(), saosq.LocalName(), err)
	}
	return nil
}

func (saosq *StreamAnalyticsOutputServicebusQueue) State() (*streamAnalyticsOutputServicebusQueueState, bool) {
	return saosq.state, saosq.state != nil
}

func (saosq *StreamAnalyticsOutputServicebusQueue) StateMust() *streamAnalyticsOutputServicebusQueueState {
	if saosq.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", saosq.Type(), saosq.LocalName()))
	}
	return saosq.state
}

func (saosq *StreamAnalyticsOutputServicebusQueue) DependOn() terra.Reference {
	return terra.ReferenceResource(saosq)
}

type StreamAnalyticsOutputServicebusQueueArgs struct {
	// AuthenticationMode: string, optional
	AuthenticationMode terra.StringValue `hcl:"authentication_mode,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PropertyColumns: list of string, optional
	PropertyColumns terra.ListValue[terra.StringValue] `hcl:"property_columns,attr"`
	// QueueName: string, required
	QueueName terra.StringValue `hcl:"queue_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ServicebusNamespace: string, required
	ServicebusNamespace terra.StringValue `hcl:"servicebus_namespace,attr" validate:"required"`
	// SharedAccessPolicyKey: string, optional
	SharedAccessPolicyKey terra.StringValue `hcl:"shared_access_policy_key,attr"`
	// SharedAccessPolicyName: string, optional
	SharedAccessPolicyName terra.StringValue `hcl:"shared_access_policy_name,attr"`
	// StreamAnalyticsJobName: string, required
	StreamAnalyticsJobName terra.StringValue `hcl:"stream_analytics_job_name,attr" validate:"required"`
	// SystemPropertyColumns: map of string, optional
	SystemPropertyColumns terra.MapValue[terra.StringValue] `hcl:"system_property_columns,attr"`
	// Serialization: required
	Serialization *streamanalyticsoutputservicebusqueue.Serialization `hcl:"serialization,block" validate:"required"`
	// Timeouts: optional
	Timeouts *streamanalyticsoutputservicebusqueue.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that StreamAnalyticsOutputServicebusQueue depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type streamAnalyticsOutputServicebusQueueAttributes struct {
	ref terra.Reference
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) AuthenticationMode() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("authentication_mode"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) Id() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("id"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) Name() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("name"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) PropertyColumns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](saosq.ref.Append("property_columns"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) QueueName() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("queue_name"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("resource_group_name"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) ServicebusNamespace() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("servicebus_namespace"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) SharedAccessPolicyKey() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("shared_access_policy_key"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) SharedAccessPolicyName() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("shared_access_policy_name"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) StreamAnalyticsJobName() terra.StringValue {
	return terra.ReferenceString(saosq.ref.Append("stream_analytics_job_name"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) SystemPropertyColumns() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](saosq.ref.Append("system_property_columns"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) Serialization() terra.ListValue[streamanalyticsoutputservicebusqueue.SerializationAttributes] {
	return terra.ReferenceList[streamanalyticsoutputservicebusqueue.SerializationAttributes](saosq.ref.Append("serialization"))
}

func (saosq streamAnalyticsOutputServicebusQueueAttributes) Timeouts() streamanalyticsoutputservicebusqueue.TimeoutsAttributes {
	return terra.ReferenceSingle[streamanalyticsoutputservicebusqueue.TimeoutsAttributes](saosq.ref.Append("timeouts"))
}

type streamAnalyticsOutputServicebusQueueState struct {
	AuthenticationMode     string                                                    `json:"authentication_mode"`
	Id                     string                                                    `json:"id"`
	Name                   string                                                    `json:"name"`
	PropertyColumns        []string                                                  `json:"property_columns"`
	QueueName              string                                                    `json:"queue_name"`
	ResourceGroupName      string                                                    `json:"resource_group_name"`
	ServicebusNamespace    string                                                    `json:"servicebus_namespace"`
	SharedAccessPolicyKey  string                                                    `json:"shared_access_policy_key"`
	SharedAccessPolicyName string                                                    `json:"shared_access_policy_name"`
	StreamAnalyticsJobName string                                                    `json:"stream_analytics_job_name"`
	SystemPropertyColumns  map[string]string                                         `json:"system_property_columns"`
	Serialization          []streamanalyticsoutputservicebusqueue.SerializationState `json:"serialization"`
	Timeouts               *streamanalyticsoutputservicebusqueue.TimeoutsState       `json:"timeouts"`
}
