// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datapublicips

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type PublicIps struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type PublicIpsAttributes struct {
	ref terra.Reference
}

func (pi PublicIpsAttributes) InternalRef() terra.Reference {
	return pi.ref
}

func (pi PublicIpsAttributes) InternalWithRef(ref terra.Reference) PublicIpsAttributes {
	return PublicIpsAttributes{ref: ref}
}

func (pi PublicIpsAttributes) InternalTokens() hclwrite.Tokens {
	return pi.ref.InternalTokens()
}

func (pi PublicIpsAttributes) DomainNameLabel() terra.StringValue {
	return terra.ReferenceString(pi.ref.Append("domain_name_label"))
}

func (pi PublicIpsAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(pi.ref.Append("fqdn"))
}

func (pi PublicIpsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pi.ref.Append("id"))
}

func (pi PublicIpsAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceString(pi.ref.Append("ip_address"))
}

func (pi PublicIpsAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pi.ref.Append("name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type PublicIpsState struct {
	DomainNameLabel string `json:"domain_name_label"`
	Fqdn            string `json:"fqdn"`
	Id              string `json:"id"`
	IpAddress       string `json:"ip_address"`
	Name            string `json:"name"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
