// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datacdnfrontdoororigingroup

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type HealthProbe struct{}

type LoadBalancing struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type HealthProbeAttributes struct {
	ref terra.Reference
}

func (hp HealthProbeAttributes) InternalRef() terra.Reference {
	return hp.ref
}

func (hp HealthProbeAttributes) InternalWithRef(ref terra.Reference) HealthProbeAttributes {
	return HealthProbeAttributes{ref: ref}
}

func (hp HealthProbeAttributes) InternalTokens() hclwrite.Tokens {
	return hp.ref.InternalTokens()
}

func (hp HealthProbeAttributes) IntervalInSeconds() terra.NumberValue {
	return terra.ReferenceNumber(hp.ref.Append("interval_in_seconds"))
}

func (hp HealthProbeAttributes) Path() terra.StringValue {
	return terra.ReferenceString(hp.ref.Append("path"))
}

func (hp HealthProbeAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(hp.ref.Append("protocol"))
}

func (hp HealthProbeAttributes) RequestType() terra.StringValue {
	return terra.ReferenceString(hp.ref.Append("request_type"))
}

type LoadBalancingAttributes struct {
	ref terra.Reference
}

func (lb LoadBalancingAttributes) InternalRef() terra.Reference {
	return lb.ref
}

func (lb LoadBalancingAttributes) InternalWithRef(ref terra.Reference) LoadBalancingAttributes {
	return LoadBalancingAttributes{ref: ref}
}

func (lb LoadBalancingAttributes) InternalTokens() hclwrite.Tokens {
	return lb.ref.InternalTokens()
}

func (lb LoadBalancingAttributes) AdditionalLatencyInMilliseconds() terra.NumberValue {
	return terra.ReferenceNumber(lb.ref.Append("additional_latency_in_milliseconds"))
}

func (lb LoadBalancingAttributes) SampleSize() terra.NumberValue {
	return terra.ReferenceNumber(lb.ref.Append("sample_size"))
}

func (lb LoadBalancingAttributes) SuccessfulSamplesRequired() terra.NumberValue {
	return terra.ReferenceNumber(lb.ref.Append("successful_samples_required"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type HealthProbeState struct {
	IntervalInSeconds float64 `json:"interval_in_seconds"`
	Path              string  `json:"path"`
	Protocol          string  `json:"protocol"`
	RequestType       string  `json:"request_type"`
}

type LoadBalancingState struct {
	AdditionalLatencyInMilliseconds float64 `json:"additional_latency_in_milliseconds"`
	SampleSize                      float64 `json:"sample_size"`
	SuccessfulSamplesRequired       float64 `json:"successful_samples_required"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
