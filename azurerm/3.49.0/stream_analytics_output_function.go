// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	streamanalyticsoutputfunction "github.com/golingon/terraproviders/azurerm/3.49.0/streamanalyticsoutputfunction"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewStreamAnalyticsOutputFunction(name string, args StreamAnalyticsOutputFunctionArgs) *StreamAnalyticsOutputFunction {
	return &StreamAnalyticsOutputFunction{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StreamAnalyticsOutputFunction)(nil)

type StreamAnalyticsOutputFunction struct {
	Name  string
	Args  StreamAnalyticsOutputFunctionArgs
	state *streamAnalyticsOutputFunctionState
}

func (saof *StreamAnalyticsOutputFunction) Type() string {
	return "azurerm_stream_analytics_output_function"
}

func (saof *StreamAnalyticsOutputFunction) LocalName() string {
	return saof.Name
}

func (saof *StreamAnalyticsOutputFunction) Configuration() interface{} {
	return saof.Args
}

func (saof *StreamAnalyticsOutputFunction) Attributes() streamAnalyticsOutputFunctionAttributes {
	return streamAnalyticsOutputFunctionAttributes{ref: terra.ReferenceResource(saof)}
}

func (saof *StreamAnalyticsOutputFunction) ImportState(av io.Reader) error {
	saof.state = &streamAnalyticsOutputFunctionState{}
	if err := json.NewDecoder(av).Decode(saof.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", saof.Type(), saof.LocalName(), err)
	}
	return nil
}

func (saof *StreamAnalyticsOutputFunction) State() (*streamAnalyticsOutputFunctionState, bool) {
	return saof.state, saof.state != nil
}

func (saof *StreamAnalyticsOutputFunction) StateMust() *streamAnalyticsOutputFunctionState {
	if saof.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", saof.Type(), saof.LocalName()))
	}
	return saof.state
}

func (saof *StreamAnalyticsOutputFunction) DependOn() terra.Reference {
	return terra.ReferenceResource(saof)
}

type StreamAnalyticsOutputFunctionArgs struct {
	// ApiKey: string, required
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// BatchMaxCount: number, optional
	BatchMaxCount terra.NumberValue `hcl:"batch_max_count,attr"`
	// BatchMaxInBytes: number, optional
	BatchMaxInBytes terra.NumberValue `hcl:"batch_max_in_bytes,attr"`
	// FunctionApp: string, required
	FunctionApp terra.StringValue `hcl:"function_app,attr" validate:"required"`
	// FunctionName: string, required
	FunctionName terra.StringValue `hcl:"function_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// StreamAnalyticsJobName: string, required
	StreamAnalyticsJobName terra.StringValue `hcl:"stream_analytics_job_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *streamanalyticsoutputfunction.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that StreamAnalyticsOutputFunction depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type streamAnalyticsOutputFunctionAttributes struct {
	ref terra.Reference
}

func (saof streamAnalyticsOutputFunctionAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("api_key"))
}

func (saof streamAnalyticsOutputFunctionAttributes) BatchMaxCount() terra.NumberValue {
	return terra.ReferenceNumber(saof.ref.Append("batch_max_count"))
}

func (saof streamAnalyticsOutputFunctionAttributes) BatchMaxInBytes() terra.NumberValue {
	return terra.ReferenceNumber(saof.ref.Append("batch_max_in_bytes"))
}

func (saof streamAnalyticsOutputFunctionAttributes) FunctionApp() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("function_app"))
}

func (saof streamAnalyticsOutputFunctionAttributes) FunctionName() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("function_name"))
}

func (saof streamAnalyticsOutputFunctionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("id"))
}

func (saof streamAnalyticsOutputFunctionAttributes) Name() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("name"))
}

func (saof streamAnalyticsOutputFunctionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("resource_group_name"))
}

func (saof streamAnalyticsOutputFunctionAttributes) StreamAnalyticsJobName() terra.StringValue {
	return terra.ReferenceString(saof.ref.Append("stream_analytics_job_name"))
}

func (saof streamAnalyticsOutputFunctionAttributes) Timeouts() streamanalyticsoutputfunction.TimeoutsAttributes {
	return terra.ReferenceSingle[streamanalyticsoutputfunction.TimeoutsAttributes](saof.ref.Append("timeouts"))
}

type streamAnalyticsOutputFunctionState struct {
	ApiKey                 string                                       `json:"api_key"`
	BatchMaxCount          float64                                      `json:"batch_max_count"`
	BatchMaxInBytes        float64                                      `json:"batch_max_in_bytes"`
	FunctionApp            string                                       `json:"function_app"`
	FunctionName           string                                       `json:"function_name"`
	Id                     string                                       `json:"id"`
	Name                   string                                       `json:"name"`
	ResourceGroupName      string                                       `json:"resource_group_name"`
	StreamAnalyticsJobName string                                       `json:"stream_analytics_job_name"`
	Timeouts               *streamanalyticsoutputfunction.TimeoutsState `json:"timeouts"`
}
