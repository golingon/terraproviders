// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datastorageblob "github.com/golingon/terraproviders/azurerm/3.49.0/datastorageblob"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataStorageBlob(name string, args DataStorageBlobArgs) *DataStorageBlob {
	return &DataStorageBlob{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataStorageBlob)(nil)

type DataStorageBlob struct {
	Name string
	Args DataStorageBlobArgs
}

func (sb *DataStorageBlob) DataSource() string {
	return "azurerm_storage_blob"
}

func (sb *DataStorageBlob) LocalName() string {
	return sb.Name
}

func (sb *DataStorageBlob) Configuration() interface{} {
	return sb.Args
}

func (sb *DataStorageBlob) Attributes() dataStorageBlobAttributes {
	return dataStorageBlobAttributes{ref: terra.ReferenceDataResource(sb)}
}

type DataStorageBlobArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Metadata: map of string, optional
	Metadata terra.MapValue[terra.StringValue] `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// StorageAccountName: string, required
	StorageAccountName terra.StringValue `hcl:"storage_account_name,attr" validate:"required"`
	// StorageContainerName: string, required
	StorageContainerName terra.StringValue `hcl:"storage_container_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datastorageblob.Timeouts `hcl:"timeouts,block"`
}
type dataStorageBlobAttributes struct {
	ref terra.Reference
}

func (sb dataStorageBlobAttributes) AccessTier() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("access_tier"))
}

func (sb dataStorageBlobAttributes) ContentMd5() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("content_md5"))
}

func (sb dataStorageBlobAttributes) ContentType() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("content_type"))
}

func (sb dataStorageBlobAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("id"))
}

func (sb dataStorageBlobAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sb.ref.Append("metadata"))
}

func (sb dataStorageBlobAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("name"))
}

func (sb dataStorageBlobAttributes) StorageAccountName() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("storage_account_name"))
}

func (sb dataStorageBlobAttributes) StorageContainerName() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("storage_container_name"))
}

func (sb dataStorageBlobAttributes) Type() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("type"))
}

func (sb dataStorageBlobAttributes) Url() terra.StringValue {
	return terra.ReferenceString(sb.ref.Append("url"))
}

func (sb dataStorageBlobAttributes) Timeouts() datastorageblob.TimeoutsAttributes {
	return terra.ReferenceSingle[datastorageblob.TimeoutsAttributes](sb.ref.Append("timeouts"))
}
