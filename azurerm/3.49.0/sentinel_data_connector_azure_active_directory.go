// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentineldataconnectorazureactivedirectory "github.com/golingon/terraproviders/azurerm/3.49.0/sentineldataconnectorazureactivedirectory"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelDataConnectorAzureActiveDirectory(name string, args SentinelDataConnectorAzureActiveDirectoryArgs) *SentinelDataConnectorAzureActiveDirectory {
	return &SentinelDataConnectorAzureActiveDirectory{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelDataConnectorAzureActiveDirectory)(nil)

type SentinelDataConnectorAzureActiveDirectory struct {
	Name  string
	Args  SentinelDataConnectorAzureActiveDirectoryArgs
	state *sentinelDataConnectorAzureActiveDirectoryState
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) Type() string {
	return "azurerm_sentinel_data_connector_azure_active_directory"
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) LocalName() string {
	return sdcaad.Name
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) Configuration() interface{} {
	return sdcaad.Args
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) Attributes() sentinelDataConnectorAzureActiveDirectoryAttributes {
	return sentinelDataConnectorAzureActiveDirectoryAttributes{ref: terra.ReferenceResource(sdcaad)}
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) ImportState(av io.Reader) error {
	sdcaad.state = &sentinelDataConnectorAzureActiveDirectoryState{}
	if err := json.NewDecoder(av).Decode(sdcaad.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdcaad.Type(), sdcaad.LocalName(), err)
	}
	return nil
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) State() (*sentinelDataConnectorAzureActiveDirectoryState, bool) {
	return sdcaad.state, sdcaad.state != nil
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) StateMust() *sentinelDataConnectorAzureActiveDirectoryState {
	if sdcaad.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdcaad.Type(), sdcaad.LocalName()))
	}
	return sdcaad.state
}

func (sdcaad *SentinelDataConnectorAzureActiveDirectory) DependOn() terra.Reference {
	return terra.ReferenceResource(sdcaad)
}

type SentinelDataConnectorAzureActiveDirectoryArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// Timeouts: optional
	Timeouts *sentineldataconnectorazureactivedirectory.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelDataConnectorAzureActiveDirectory depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelDataConnectorAzureActiveDirectoryAttributes struct {
	ref terra.Reference
}

func (sdcaad sentinelDataConnectorAzureActiveDirectoryAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdcaad.ref.Append("id"))
}

func (sdcaad sentinelDataConnectorAzureActiveDirectoryAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sdcaad.ref.Append("log_analytics_workspace_id"))
}

func (sdcaad sentinelDataConnectorAzureActiveDirectoryAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdcaad.ref.Append("name"))
}

func (sdcaad sentinelDataConnectorAzureActiveDirectoryAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(sdcaad.ref.Append("tenant_id"))
}

func (sdcaad sentinelDataConnectorAzureActiveDirectoryAttributes) Timeouts() sentineldataconnectorazureactivedirectory.TimeoutsAttributes {
	return terra.ReferenceSingle[sentineldataconnectorazureactivedirectory.TimeoutsAttributes](sdcaad.ref.Append("timeouts"))
}

type sentinelDataConnectorAzureActiveDirectoryState struct {
	Id                      string                                                   `json:"id"`
	LogAnalyticsWorkspaceId string                                                   `json:"log_analytics_workspace_id"`
	Name                    string                                                   `json:"name"`
	TenantId                string                                                   `json:"tenant_id"`
	Timeouts                *sentineldataconnectorazureactivedirectory.TimeoutsState `json:"timeouts"`
}
