// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package springcloudbuildpackbinding

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Launch struct {
	// Properties: map of string, optional
	Properties terra.MapValue[terra.StringValue] `hcl:"properties,attr"`
	// Secrets: map of string, optional
	Secrets terra.MapValue[terra.StringValue] `hcl:"secrets,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LaunchAttributes struct {
	ref terra.Reference
}

func (l LaunchAttributes) InternalRef() terra.Reference {
	return l.ref
}

func (l LaunchAttributes) InternalWithRef(ref terra.Reference) LaunchAttributes {
	return LaunchAttributes{ref: ref}
}

func (l LaunchAttributes) InternalTokens() hclwrite.Tokens {
	return l.ref.InternalTokens()
}

func (l LaunchAttributes) Properties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](l.ref.Append("properties"))
}

func (l LaunchAttributes) Secrets() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](l.ref.Append("secrets"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type LaunchState struct {
	Properties map[string]string `json:"properties"`
	Secrets    map[string]string `json:"secrets"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
