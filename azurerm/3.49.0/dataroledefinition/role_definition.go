// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataroledefinition

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Permissions struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type PermissionsAttributes struct {
	ref terra.Reference
}

func (p PermissionsAttributes) InternalRef() terra.Reference {
	return p.ref
}

func (p PermissionsAttributes) InternalWithRef(ref terra.Reference) PermissionsAttributes {
	return PermissionsAttributes{ref: ref}
}

func (p PermissionsAttributes) InternalTokens() hclwrite.Tokens {
	return p.ref.InternalTokens()
}

func (p PermissionsAttributes) Actions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](p.ref.Append("actions"))
}

func (p PermissionsAttributes) DataActions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](p.ref.Append("data_actions"))
}

func (p PermissionsAttributes) NotActions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](p.ref.Append("not_actions"))
}

func (p PermissionsAttributes) NotDataActions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](p.ref.Append("not_data_actions"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type PermissionsState struct {
	Actions        []string `json:"actions"`
	DataActions    []string `json:"data_actions"`
	NotActions     []string `json:"not_actions"`
	NotDataActions []string `json:"not_data_actions"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
