// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datadataboxedgedevice

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type DeviceProperties struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DevicePropertiesAttributes struct {
	ref terra.Reference
}

func (dp DevicePropertiesAttributes) InternalRef() terra.Reference {
	return dp.ref
}

func (dp DevicePropertiesAttributes) InternalWithRef(ref terra.Reference) DevicePropertiesAttributes {
	return DevicePropertiesAttributes{ref: ref}
}

func (dp DevicePropertiesAttributes) InternalTokens() hclwrite.Tokens {
	return dp.ref.InternalTokens()
}

func (dp DevicePropertiesAttributes) Capacity() terra.NumberValue {
	return terra.ReferenceNumber(dp.ref.Append("capacity"))
}

func (dp DevicePropertiesAttributes) ConfiguredRoleTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](dp.ref.Append("configured_role_types"))
}

func (dp DevicePropertiesAttributes) Culture() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("culture"))
}

func (dp DevicePropertiesAttributes) HcsVersion() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("hcs_version"))
}

func (dp DevicePropertiesAttributes) Model() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("model"))
}

func (dp DevicePropertiesAttributes) NodeCount() terra.NumberValue {
	return terra.ReferenceNumber(dp.ref.Append("node_count"))
}

func (dp DevicePropertiesAttributes) SerialNumber() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("serial_number"))
}

func (dp DevicePropertiesAttributes) SoftwareVersion() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("software_version"))
}

func (dp DevicePropertiesAttributes) Status() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("status"))
}

func (dp DevicePropertiesAttributes) TimeZone() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("time_zone"))
}

func (dp DevicePropertiesAttributes) Type() terra.StringValue {
	return terra.ReferenceString(dp.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type DevicePropertiesState struct {
	Capacity            float64  `json:"capacity"`
	ConfiguredRoleTypes []string `json:"configured_role_types"`
	Culture             string   `json:"culture"`
	HcsVersion          string   `json:"hcs_version"`
	Model               string   `json:"model"`
	NodeCount           float64  `json:"node_count"`
	SerialNumber        string   `json:"serial_number"`
	SoftwareVersion     string   `json:"software_version"`
	Status              string   `json:"status"`
	TimeZone            string   `json:"time_zone"`
	Type                string   `json:"type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
