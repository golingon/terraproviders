// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentinelwatchlist "github.com/golingon/terraproviders/azurerm/3.49.0/sentinelwatchlist"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelWatchlist(name string, args SentinelWatchlistArgs) *SentinelWatchlist {
	return &SentinelWatchlist{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelWatchlist)(nil)

type SentinelWatchlist struct {
	Name  string
	Args  SentinelWatchlistArgs
	state *sentinelWatchlistState
}

func (sw *SentinelWatchlist) Type() string {
	return "azurerm_sentinel_watchlist"
}

func (sw *SentinelWatchlist) LocalName() string {
	return sw.Name
}

func (sw *SentinelWatchlist) Configuration() interface{} {
	return sw.Args
}

func (sw *SentinelWatchlist) Attributes() sentinelWatchlistAttributes {
	return sentinelWatchlistAttributes{ref: terra.ReferenceResource(sw)}
}

func (sw *SentinelWatchlist) ImportState(av io.Reader) error {
	sw.state = &sentinelWatchlistState{}
	if err := json.NewDecoder(av).Decode(sw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sw.Type(), sw.LocalName(), err)
	}
	return nil
}

func (sw *SentinelWatchlist) State() (*sentinelWatchlistState, bool) {
	return sw.state, sw.state != nil
}

func (sw *SentinelWatchlist) StateMust() *sentinelWatchlistState {
	if sw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sw.Type(), sw.LocalName()))
	}
	return sw.state
}

func (sw *SentinelWatchlist) DependOn() terra.Reference {
	return terra.ReferenceResource(sw)
}

type SentinelWatchlistArgs struct {
	// DefaultDuration: string, optional
	DefaultDuration terra.StringValue `hcl:"default_duration,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ItemSearchKey: string, required
	ItemSearchKey terra.StringValue `hcl:"item_search_key,attr" validate:"required"`
	// Labels: list of string, optional
	Labels terra.ListValue[terra.StringValue] `hcl:"labels,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *sentinelwatchlist.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelWatchlist depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelWatchlistAttributes struct {
	ref terra.Reference
}

func (sw sentinelWatchlistAttributes) DefaultDuration() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("default_duration"))
}

func (sw sentinelWatchlistAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("description"))
}

func (sw sentinelWatchlistAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("display_name"))
}

func (sw sentinelWatchlistAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("id"))
}

func (sw sentinelWatchlistAttributes) ItemSearchKey() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("item_search_key"))
}

func (sw sentinelWatchlistAttributes) Labels() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sw.ref.Append("labels"))
}

func (sw sentinelWatchlistAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("log_analytics_workspace_id"))
}

func (sw sentinelWatchlistAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sw.ref.Append("name"))
}

func (sw sentinelWatchlistAttributes) Timeouts() sentinelwatchlist.TimeoutsAttributes {
	return terra.ReferenceSingle[sentinelwatchlist.TimeoutsAttributes](sw.ref.Append("timeouts"))
}

type sentinelWatchlistState struct {
	DefaultDuration         string                           `json:"default_duration"`
	Description             string                           `json:"description"`
	DisplayName             string                           `json:"display_name"`
	Id                      string                           `json:"id"`
	ItemSearchKey           string                           `json:"item_search_key"`
	Labels                  []string                         `json:"labels"`
	LogAnalyticsWorkspaceId string                           `json:"log_analytics_workspace_id"`
	Name                    string                           `json:"name"`
	Timeouts                *sentinelwatchlist.TimeoutsState `json:"timeouts"`
}
