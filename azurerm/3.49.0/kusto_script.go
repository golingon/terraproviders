// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	kustoscript "github.com/golingon/terraproviders/azurerm/3.49.0/kustoscript"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKustoScript(name string, args KustoScriptArgs) *KustoScript {
	return &KustoScript{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KustoScript)(nil)

type KustoScript struct {
	Name  string
	Args  KustoScriptArgs
	state *kustoScriptState
}

func (ks *KustoScript) Type() string {
	return "azurerm_kusto_script"
}

func (ks *KustoScript) LocalName() string {
	return ks.Name
}

func (ks *KustoScript) Configuration() interface{} {
	return ks.Args
}

func (ks *KustoScript) Attributes() kustoScriptAttributes {
	return kustoScriptAttributes{ref: terra.ReferenceResource(ks)}
}

func (ks *KustoScript) ImportState(av io.Reader) error {
	ks.state = &kustoScriptState{}
	if err := json.NewDecoder(av).Decode(ks.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ks.Type(), ks.LocalName(), err)
	}
	return nil
}

func (ks *KustoScript) State() (*kustoScriptState, bool) {
	return ks.state, ks.state != nil
}

func (ks *KustoScript) StateMust() *kustoScriptState {
	if ks.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ks.Type(), ks.LocalName()))
	}
	return ks.state
}

func (ks *KustoScript) DependOn() terra.Reference {
	return terra.ReferenceResource(ks)
}

type KustoScriptArgs struct {
	// ContinueOnErrorsEnabled: bool, optional
	ContinueOnErrorsEnabled terra.BoolValue `hcl:"continue_on_errors_enabled,attr"`
	// DatabaseId: string, required
	DatabaseId terra.StringValue `hcl:"database_id,attr" validate:"required"`
	// ForceAnUpdateWhenValueChanged: string, optional
	ForceAnUpdateWhenValueChanged terra.StringValue `hcl:"force_an_update_when_value_changed,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SasToken: string, optional
	SasToken terra.StringValue `hcl:"sas_token,attr"`
	// ScriptContent: string, optional
	ScriptContent terra.StringValue `hcl:"script_content,attr"`
	// Url: string, optional
	Url terra.StringValue `hcl:"url,attr"`
	// Timeouts: optional
	Timeouts *kustoscript.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that KustoScript depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kustoScriptAttributes struct {
	ref terra.Reference
}

func (ks kustoScriptAttributes) ContinueOnErrorsEnabled() terra.BoolValue {
	return terra.ReferenceBool(ks.ref.Append("continue_on_errors_enabled"))
}

func (ks kustoScriptAttributes) DatabaseId() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("database_id"))
}

func (ks kustoScriptAttributes) ForceAnUpdateWhenValueChanged() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("force_an_update_when_value_changed"))
}

func (ks kustoScriptAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("id"))
}

func (ks kustoScriptAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("name"))
}

func (ks kustoScriptAttributes) SasToken() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("sas_token"))
}

func (ks kustoScriptAttributes) ScriptContent() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("script_content"))
}

func (ks kustoScriptAttributes) Url() terra.StringValue {
	return terra.ReferenceString(ks.ref.Append("url"))
}

func (ks kustoScriptAttributes) Timeouts() kustoscript.TimeoutsAttributes {
	return terra.ReferenceSingle[kustoscript.TimeoutsAttributes](ks.ref.Append("timeouts"))
}

type kustoScriptState struct {
	ContinueOnErrorsEnabled       bool                       `json:"continue_on_errors_enabled"`
	DatabaseId                    string                     `json:"database_id"`
	ForceAnUpdateWhenValueChanged string                     `json:"force_an_update_when_value_changed"`
	Id                            string                     `json:"id"`
	Name                          string                     `json:"name"`
	SasToken                      string                     `json:"sas_token"`
	ScriptContent                 string                     `json:"script_content"`
	Url                           string                     `json:"url"`
	Timeouts                      *kustoscript.TimeoutsState `json:"timeouts"`
}
