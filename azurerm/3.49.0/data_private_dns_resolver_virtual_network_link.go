// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataprivatednsresolvervirtualnetworklink "github.com/golingon/terraproviders/azurerm/3.49.0/dataprivatednsresolvervirtualnetworklink"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataPrivateDnsResolverVirtualNetworkLink(name string, args DataPrivateDnsResolverVirtualNetworkLinkArgs) *DataPrivateDnsResolverVirtualNetworkLink {
	return &DataPrivateDnsResolverVirtualNetworkLink{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataPrivateDnsResolverVirtualNetworkLink)(nil)

type DataPrivateDnsResolverVirtualNetworkLink struct {
	Name string
	Args DataPrivateDnsResolverVirtualNetworkLinkArgs
}

func (pdrvnl *DataPrivateDnsResolverVirtualNetworkLink) DataSource() string {
	return "azurerm_private_dns_resolver_virtual_network_link"
}

func (pdrvnl *DataPrivateDnsResolverVirtualNetworkLink) LocalName() string {
	return pdrvnl.Name
}

func (pdrvnl *DataPrivateDnsResolverVirtualNetworkLink) Configuration() interface{} {
	return pdrvnl.Args
}

func (pdrvnl *DataPrivateDnsResolverVirtualNetworkLink) Attributes() dataPrivateDnsResolverVirtualNetworkLinkAttributes {
	return dataPrivateDnsResolverVirtualNetworkLinkAttributes{ref: terra.ReferenceDataResource(pdrvnl)}
}

type DataPrivateDnsResolverVirtualNetworkLinkArgs struct {
	// DnsForwardingRulesetId: string, required
	DnsForwardingRulesetId terra.StringValue `hcl:"dns_forwarding_ruleset_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dataprivatednsresolvervirtualnetworklink.Timeouts `hcl:"timeouts,block"`
}
type dataPrivateDnsResolverVirtualNetworkLinkAttributes struct {
	ref terra.Reference
}

func (pdrvnl dataPrivateDnsResolverVirtualNetworkLinkAttributes) DnsForwardingRulesetId() terra.StringValue {
	return terra.ReferenceString(pdrvnl.ref.Append("dns_forwarding_ruleset_id"))
}

func (pdrvnl dataPrivateDnsResolverVirtualNetworkLinkAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pdrvnl.ref.Append("id"))
}

func (pdrvnl dataPrivateDnsResolverVirtualNetworkLinkAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](pdrvnl.ref.Append("metadata"))
}

func (pdrvnl dataPrivateDnsResolverVirtualNetworkLinkAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pdrvnl.ref.Append("name"))
}

func (pdrvnl dataPrivateDnsResolverVirtualNetworkLinkAttributes) VirtualNetworkId() terra.StringValue {
	return terra.ReferenceString(pdrvnl.ref.Append("virtual_network_id"))
}

func (pdrvnl dataPrivateDnsResolverVirtualNetworkLinkAttributes) Timeouts() dataprivatednsresolvervirtualnetworklink.TimeoutsAttributes {
	return terra.ReferenceSingle[dataprivatednsresolvervirtualnetworklink.TimeoutsAttributes](pdrvnl.ref.Append("timeouts"))
}
