// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datakustocluster "github.com/golingon/terraproviders/azurerm/3.49.0/datakustocluster"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKustoCluster(name string, args DataKustoClusterArgs) *DataKustoCluster {
	return &DataKustoCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKustoCluster)(nil)

type DataKustoCluster struct {
	Name string
	Args DataKustoClusterArgs
}

func (kc *DataKustoCluster) DataSource() string {
	return "azurerm_kusto_cluster"
}

func (kc *DataKustoCluster) LocalName() string {
	return kc.Name
}

func (kc *DataKustoCluster) Configuration() interface{} {
	return kc.Args
}

func (kc *DataKustoCluster) Attributes() dataKustoClusterAttributes {
	return dataKustoClusterAttributes{ref: terra.ReferenceDataResource(kc)}
}

type DataKustoClusterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datakustocluster.Timeouts `hcl:"timeouts,block"`
}
type dataKustoClusterAttributes struct {
	ref terra.Reference
}

func (kc dataKustoClusterAttributes) DataIngestionUri() terra.StringValue {
	return terra.ReferenceString(kc.ref.Append("data_ingestion_uri"))
}

func (kc dataKustoClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kc.ref.Append("id"))
}

func (kc dataKustoClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceString(kc.ref.Append("location"))
}

func (kc dataKustoClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kc.ref.Append("name"))
}

func (kc dataKustoClusterAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(kc.ref.Append("resource_group_name"))
}

func (kc dataKustoClusterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kc.ref.Append("tags"))
}

func (kc dataKustoClusterAttributes) Uri() terra.StringValue {
	return terra.ReferenceString(kc.ref.Append("uri"))
}

func (kc dataKustoClusterAttributes) Timeouts() datakustocluster.TimeoutsAttributes {
	return terra.ReferenceSingle[datakustocluster.TimeoutsAttributes](kc.ref.Append("timeouts"))
}
