// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iotsecuritysolution "github.com/golingon/terraproviders/azurerm/3.49.0/iotsecuritysolution"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewIotSecuritySolution(name string, args IotSecuritySolutionArgs) *IotSecuritySolution {
	return &IotSecuritySolution{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IotSecuritySolution)(nil)

type IotSecuritySolution struct {
	Name  string
	Args  IotSecuritySolutionArgs
	state *iotSecuritySolutionState
}

func (iss *IotSecuritySolution) Type() string {
	return "azurerm_iot_security_solution"
}

func (iss *IotSecuritySolution) LocalName() string {
	return iss.Name
}

func (iss *IotSecuritySolution) Configuration() interface{} {
	return iss.Args
}

func (iss *IotSecuritySolution) Attributes() iotSecuritySolutionAttributes {
	return iotSecuritySolutionAttributes{ref: terra.ReferenceResource(iss)}
}

func (iss *IotSecuritySolution) ImportState(av io.Reader) error {
	iss.state = &iotSecuritySolutionState{}
	if err := json.NewDecoder(av).Decode(iss.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iss.Type(), iss.LocalName(), err)
	}
	return nil
}

func (iss *IotSecuritySolution) State() (*iotSecuritySolutionState, bool) {
	return iss.state, iss.state != nil
}

func (iss *IotSecuritySolution) StateMust() *iotSecuritySolutionState {
	if iss.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iss.Type(), iss.LocalName()))
	}
	return iss.state
}

func (iss *IotSecuritySolution) DependOn() terra.Reference {
	return terra.ReferenceResource(iss)
}

type IotSecuritySolutionArgs struct {
	// DisabledDataSources: set of string, optional
	DisabledDataSources terra.SetValue[terra.StringValue] `hcl:"disabled_data_sources,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// EventsToExport: set of string, optional
	EventsToExport terra.SetValue[terra.StringValue] `hcl:"events_to_export,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubIds: set of string, required
	IothubIds terra.SetValue[terra.StringValue] `hcl:"iothub_ids,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LogAnalyticsWorkspaceId: string, optional
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr"`
	// LogUnmaskedIpsEnabled: bool, optional
	LogUnmaskedIpsEnabled terra.BoolValue `hcl:"log_unmasked_ips_enabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueryForResources: string, optional
	QueryForResources terra.StringValue `hcl:"query_for_resources,attr"`
	// QuerySubscriptionIds: set of string, optional
	QuerySubscriptionIds terra.SetValue[terra.StringValue] `hcl:"query_subscription_ids,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// AdditionalWorkspace: min=0
	AdditionalWorkspace []iotsecuritysolution.AdditionalWorkspace `hcl:"additional_workspace,block" validate:"min=0"`
	// RecommendationsEnabled: optional
	RecommendationsEnabled *iotsecuritysolution.RecommendationsEnabled `hcl:"recommendations_enabled,block"`
	// Timeouts: optional
	Timeouts *iotsecuritysolution.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that IotSecuritySolution depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type iotSecuritySolutionAttributes struct {
	ref terra.Reference
}

func (iss iotSecuritySolutionAttributes) DisabledDataSources() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iss.ref.Append("disabled_data_sources"))
}

func (iss iotSecuritySolutionAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("display_name"))
}

func (iss iotSecuritySolutionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(iss.ref.Append("enabled"))
}

func (iss iotSecuritySolutionAttributes) EventsToExport() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iss.ref.Append("events_to_export"))
}

func (iss iotSecuritySolutionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("id"))
}

func (iss iotSecuritySolutionAttributes) IothubIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iss.ref.Append("iothub_ids"))
}

func (iss iotSecuritySolutionAttributes) Location() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("location"))
}

func (iss iotSecuritySolutionAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("log_analytics_workspace_id"))
}

func (iss iotSecuritySolutionAttributes) LogUnmaskedIpsEnabled() terra.BoolValue {
	return terra.ReferenceBool(iss.ref.Append("log_unmasked_ips_enabled"))
}

func (iss iotSecuritySolutionAttributes) Name() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("name"))
}

func (iss iotSecuritySolutionAttributes) QueryForResources() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("query_for_resources"))
}

func (iss iotSecuritySolutionAttributes) QuerySubscriptionIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](iss.ref.Append("query_subscription_ids"))
}

func (iss iotSecuritySolutionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(iss.ref.Append("resource_group_name"))
}

func (iss iotSecuritySolutionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](iss.ref.Append("tags"))
}

func (iss iotSecuritySolutionAttributes) AdditionalWorkspace() terra.SetValue[iotsecuritysolution.AdditionalWorkspaceAttributes] {
	return terra.ReferenceSet[iotsecuritysolution.AdditionalWorkspaceAttributes](iss.ref.Append("additional_workspace"))
}

func (iss iotSecuritySolutionAttributes) RecommendationsEnabled() terra.ListValue[iotsecuritysolution.RecommendationsEnabledAttributes] {
	return terra.ReferenceList[iotsecuritysolution.RecommendationsEnabledAttributes](iss.ref.Append("recommendations_enabled"))
}

func (iss iotSecuritySolutionAttributes) Timeouts() iotsecuritysolution.TimeoutsAttributes {
	return terra.ReferenceSingle[iotsecuritysolution.TimeoutsAttributes](iss.ref.Append("timeouts"))
}

type iotSecuritySolutionState struct {
	DisabledDataSources     []string                                          `json:"disabled_data_sources"`
	DisplayName             string                                            `json:"display_name"`
	Enabled                 bool                                              `json:"enabled"`
	EventsToExport          []string                                          `json:"events_to_export"`
	Id                      string                                            `json:"id"`
	IothubIds               []string                                          `json:"iothub_ids"`
	Location                string                                            `json:"location"`
	LogAnalyticsWorkspaceId string                                            `json:"log_analytics_workspace_id"`
	LogUnmaskedIpsEnabled   bool                                              `json:"log_unmasked_ips_enabled"`
	Name                    string                                            `json:"name"`
	QueryForResources       string                                            `json:"query_for_resources"`
	QuerySubscriptionIds    []string                                          `json:"query_subscription_ids"`
	ResourceGroupName       string                                            `json:"resource_group_name"`
	Tags                    map[string]string                                 `json:"tags"`
	AdditionalWorkspace     []iotsecuritysolution.AdditionalWorkspaceState    `json:"additional_workspace"`
	RecommendationsEnabled  []iotsecuritysolution.RecommendationsEnabledState `json:"recommendations_enabled"`
	Timeouts                *iotsecuritysolution.TimeoutsState                `json:"timeouts"`
}
