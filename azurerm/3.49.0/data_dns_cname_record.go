// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datadnscnamerecord "github.com/golingon/terraproviders/azurerm/3.49.0/datadnscnamerecord"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataDnsCnameRecord(name string, args DataDnsCnameRecordArgs) *DataDnsCnameRecord {
	return &DataDnsCnameRecord{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDnsCnameRecord)(nil)

type DataDnsCnameRecord struct {
	Name string
	Args DataDnsCnameRecordArgs
}

func (dcr *DataDnsCnameRecord) DataSource() string {
	return "azurerm_dns_cname_record"
}

func (dcr *DataDnsCnameRecord) LocalName() string {
	return dcr.Name
}

func (dcr *DataDnsCnameRecord) Configuration() interface{} {
	return dcr.Args
}

func (dcr *DataDnsCnameRecord) Attributes() dataDnsCnameRecordAttributes {
	return dataDnsCnameRecordAttributes{ref: terra.ReferenceDataResource(dcr)}
}

type DataDnsCnameRecordArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ZoneName: string, required
	ZoneName terra.StringValue `hcl:"zone_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datadnscnamerecord.Timeouts `hcl:"timeouts,block"`
}
type dataDnsCnameRecordAttributes struct {
	ref terra.Reference
}

func (dcr dataDnsCnameRecordAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("fqdn"))
}

func (dcr dataDnsCnameRecordAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("id"))
}

func (dcr dataDnsCnameRecordAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("name"))
}

func (dcr dataDnsCnameRecordAttributes) Record() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("record"))
}

func (dcr dataDnsCnameRecordAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("resource_group_name"))
}

func (dcr dataDnsCnameRecordAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](dcr.ref.Append("tags"))
}

func (dcr dataDnsCnameRecordAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("target_resource_id"))
}

func (dcr dataDnsCnameRecordAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceNumber(dcr.ref.Append("ttl"))
}

func (dcr dataDnsCnameRecordAttributes) ZoneName() terra.StringValue {
	return terra.ReferenceString(dcr.ref.Append("zone_name"))
}

func (dcr dataDnsCnameRecordAttributes) Timeouts() datadnscnamerecord.TimeoutsAttributes {
	return terra.ReferenceSingle[datadnscnamerecord.TimeoutsAttributes](dcr.ref.Append("timeouts"))
}
