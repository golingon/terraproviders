// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataservicebusnamespaceauthorizationrule "github.com/golingon/terraproviders/azurerm/3.49.0/dataservicebusnamespaceauthorizationrule"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicebusNamespaceAuthorizationRule(name string, args DataServicebusNamespaceAuthorizationRuleArgs) *DataServicebusNamespaceAuthorizationRule {
	return &DataServicebusNamespaceAuthorizationRule{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicebusNamespaceAuthorizationRule)(nil)

type DataServicebusNamespaceAuthorizationRule struct {
	Name string
	Args DataServicebusNamespaceAuthorizationRuleArgs
}

func (snar *DataServicebusNamespaceAuthorizationRule) DataSource() string {
	return "azurerm_servicebus_namespace_authorization_rule"
}

func (snar *DataServicebusNamespaceAuthorizationRule) LocalName() string {
	return snar.Name
}

func (snar *DataServicebusNamespaceAuthorizationRule) Configuration() interface{} {
	return snar.Args
}

func (snar *DataServicebusNamespaceAuthorizationRule) Attributes() dataServicebusNamespaceAuthorizationRuleAttributes {
	return dataServicebusNamespaceAuthorizationRuleAttributes{ref: terra.ReferenceDataResource(snar)}
}

type DataServicebusNamespaceAuthorizationRuleArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NamespaceId: string, optional
	NamespaceId terra.StringValue `hcl:"namespace_id,attr"`
	// NamespaceName: string, optional
	NamespaceName terra.StringValue `hcl:"namespace_name,attr"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// Timeouts: optional
	Timeouts *dataservicebusnamespaceauthorizationrule.Timeouts `hcl:"timeouts,block"`
}
type dataServicebusNamespaceAuthorizationRuleAttributes struct {
	ref terra.Reference
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("id"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("name"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("namespace_id"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("namespace_name"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("primary_connection_string"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) PrimaryConnectionStringAlias() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("primary_connection_string_alias"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("primary_key"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("resource_group_name"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("secondary_connection_string"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) SecondaryConnectionStringAlias() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("secondary_connection_string_alias"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceString(snar.ref.Append("secondary_key"))
}

func (snar dataServicebusNamespaceAuthorizationRuleAttributes) Timeouts() dataservicebusnamespaceauthorizationrule.TimeoutsAttributes {
	return terra.ReferenceSingle[dataservicebusnamespaceauthorizationrule.TimeoutsAttributes](snar.ref.Append("timeouts"))
}
