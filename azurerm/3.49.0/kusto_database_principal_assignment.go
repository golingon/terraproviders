// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	kustodatabaseprincipalassignment "github.com/golingon/terraproviders/azurerm/3.49.0/kustodatabaseprincipalassignment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewKustoDatabasePrincipalAssignment(name string, args KustoDatabasePrincipalAssignmentArgs) *KustoDatabasePrincipalAssignment {
	return &KustoDatabasePrincipalAssignment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KustoDatabasePrincipalAssignment)(nil)

type KustoDatabasePrincipalAssignment struct {
	Name  string
	Args  KustoDatabasePrincipalAssignmentArgs
	state *kustoDatabasePrincipalAssignmentState
}

func (kdpa *KustoDatabasePrincipalAssignment) Type() string {
	return "azurerm_kusto_database_principal_assignment"
}

func (kdpa *KustoDatabasePrincipalAssignment) LocalName() string {
	return kdpa.Name
}

func (kdpa *KustoDatabasePrincipalAssignment) Configuration() interface{} {
	return kdpa.Args
}

func (kdpa *KustoDatabasePrincipalAssignment) Attributes() kustoDatabasePrincipalAssignmentAttributes {
	return kustoDatabasePrincipalAssignmentAttributes{ref: terra.ReferenceResource(kdpa)}
}

func (kdpa *KustoDatabasePrincipalAssignment) ImportState(av io.Reader) error {
	kdpa.state = &kustoDatabasePrincipalAssignmentState{}
	if err := json.NewDecoder(av).Decode(kdpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kdpa.Type(), kdpa.LocalName(), err)
	}
	return nil
}

func (kdpa *KustoDatabasePrincipalAssignment) State() (*kustoDatabasePrincipalAssignmentState, bool) {
	return kdpa.state, kdpa.state != nil
}

func (kdpa *KustoDatabasePrincipalAssignment) StateMust() *kustoDatabasePrincipalAssignmentState {
	if kdpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kdpa.Type(), kdpa.LocalName()))
	}
	return kdpa.state
}

func (kdpa *KustoDatabasePrincipalAssignment) DependOn() terra.Reference {
	return terra.ReferenceResource(kdpa)
}

type KustoDatabasePrincipalAssignmentArgs struct {
	// ClusterName: string, required
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// DatabaseName: string, required
	DatabaseName terra.StringValue `hcl:"database_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrincipalId: string, required
	PrincipalId terra.StringValue `hcl:"principal_id,attr" validate:"required"`
	// PrincipalType: string, required
	PrincipalType terra.StringValue `hcl:"principal_type,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// TenantId: string, required
	TenantId terra.StringValue `hcl:"tenant_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *kustodatabaseprincipalassignment.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that KustoDatabasePrincipalAssignment depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type kustoDatabasePrincipalAssignmentAttributes struct {
	ref terra.Reference
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("cluster_name"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("database_name"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("id"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("name"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) PrincipalId() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("principal_id"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) PrincipalName() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("principal_name"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) PrincipalType() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("principal_type"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("resource_group_name"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) Role() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("role"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("tenant_id"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) TenantName() terra.StringValue {
	return terra.ReferenceString(kdpa.ref.Append("tenant_name"))
}

func (kdpa kustoDatabasePrincipalAssignmentAttributes) Timeouts() kustodatabaseprincipalassignment.TimeoutsAttributes {
	return terra.ReferenceSingle[kustodatabaseprincipalassignment.TimeoutsAttributes](kdpa.ref.Append("timeouts"))
}

type kustoDatabasePrincipalAssignmentState struct {
	ClusterName       string                                          `json:"cluster_name"`
	DatabaseName      string                                          `json:"database_name"`
	Id                string                                          `json:"id"`
	Name              string                                          `json:"name"`
	PrincipalId       string                                          `json:"principal_id"`
	PrincipalName     string                                          `json:"principal_name"`
	PrincipalType     string                                          `json:"principal_type"`
	ResourceGroupName string                                          `json:"resource_group_name"`
	Role              string                                          `json:"role"`
	TenantId          string                                          `json:"tenant_id"`
	TenantName        string                                          `json:"tenant_name"`
	Timeouts          *kustodatabaseprincipalassignment.TimeoutsState `json:"timeouts"`
}
