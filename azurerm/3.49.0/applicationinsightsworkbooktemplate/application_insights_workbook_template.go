// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package applicationinsightsworkbooktemplate

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Galleries struct {
	// Category: string, required
	Category terra.StringValue `hcl:"category,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Order: number, optional
	Order terra.NumberValue `hcl:"order,attr"`
	// ResourceType: string, optional
	ResourceType terra.StringValue `hcl:"resource_type,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type GalleriesAttributes struct {
	ref terra.Reference
}

func (g GalleriesAttributes) InternalRef() terra.Reference {
	return g.ref
}

func (g GalleriesAttributes) InternalWithRef(ref terra.Reference) GalleriesAttributes {
	return GalleriesAttributes{ref: ref}
}

func (g GalleriesAttributes) InternalTokens() hclwrite.Tokens {
	return g.ref.InternalTokens()
}

func (g GalleriesAttributes) Category() terra.StringValue {
	return terra.ReferenceString(g.ref.Append("category"))
}

func (g GalleriesAttributes) Name() terra.StringValue {
	return terra.ReferenceString(g.ref.Append("name"))
}

func (g GalleriesAttributes) Order() terra.NumberValue {
	return terra.ReferenceNumber(g.ref.Append("order"))
}

func (g GalleriesAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceString(g.ref.Append("resource_type"))
}

func (g GalleriesAttributes) Type() terra.StringValue {
	return terra.ReferenceString(g.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type GalleriesState struct {
	Category     string  `json:"category"`
	Name         string  `json:"name"`
	Order        float64 `json:"order"`
	ResourceType string  `json:"resource_type"`
	Type         string  `json:"type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
