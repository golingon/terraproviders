// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	logicapptriggercustom "github.com/golingon/terraproviders/azurerm/3.49.0/logicapptriggercustom"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLogicAppTriggerCustom(name string, args LogicAppTriggerCustomArgs) *LogicAppTriggerCustom {
	return &LogicAppTriggerCustom{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LogicAppTriggerCustom)(nil)

type LogicAppTriggerCustom struct {
	Name  string
	Args  LogicAppTriggerCustomArgs
	state *logicAppTriggerCustomState
}

func (latc *LogicAppTriggerCustom) Type() string {
	return "azurerm_logic_app_trigger_custom"
}

func (latc *LogicAppTriggerCustom) LocalName() string {
	return latc.Name
}

func (latc *LogicAppTriggerCustom) Configuration() interface{} {
	return latc.Args
}

func (latc *LogicAppTriggerCustom) Attributes() logicAppTriggerCustomAttributes {
	return logicAppTriggerCustomAttributes{ref: terra.ReferenceResource(latc)}
}

func (latc *LogicAppTriggerCustom) ImportState(av io.Reader) error {
	latc.state = &logicAppTriggerCustomState{}
	if err := json.NewDecoder(av).Decode(latc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", latc.Type(), latc.LocalName(), err)
	}
	return nil
}

func (latc *LogicAppTriggerCustom) State() (*logicAppTriggerCustomState, bool) {
	return latc.state, latc.state != nil
}

func (latc *LogicAppTriggerCustom) StateMust() *logicAppTriggerCustomState {
	if latc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", latc.Type(), latc.LocalName()))
	}
	return latc.state
}

func (latc *LogicAppTriggerCustom) DependOn() terra.Reference {
	return terra.ReferenceResource(latc)
}

type LogicAppTriggerCustomArgs struct {
	// Body: string, required
	Body terra.StringValue `hcl:"body,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogicAppId: string, required
	LogicAppId terra.StringValue `hcl:"logic_app_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *logicapptriggercustom.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that LogicAppTriggerCustom depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type logicAppTriggerCustomAttributes struct {
	ref terra.Reference
}

func (latc logicAppTriggerCustomAttributes) Body() terra.StringValue {
	return terra.ReferenceString(latc.ref.Append("body"))
}

func (latc logicAppTriggerCustomAttributes) Id() terra.StringValue {
	return terra.ReferenceString(latc.ref.Append("id"))
}

func (latc logicAppTriggerCustomAttributes) LogicAppId() terra.StringValue {
	return terra.ReferenceString(latc.ref.Append("logic_app_id"))
}

func (latc logicAppTriggerCustomAttributes) Name() terra.StringValue {
	return terra.ReferenceString(latc.ref.Append("name"))
}

func (latc logicAppTriggerCustomAttributes) Timeouts() logicapptriggercustom.TimeoutsAttributes {
	return terra.ReferenceSingle[logicapptriggercustom.TimeoutsAttributes](latc.ref.Append("timeouts"))
}

type logicAppTriggerCustomState struct {
	Body       string                               `json:"body"`
	Id         string                               `json:"id"`
	LogicAppId string                               `json:"logic_app_id"`
	Name       string                               `json:"name"`
	Timeouts   *logicapptriggercustom.TimeoutsState `json:"timeouts"`
}
