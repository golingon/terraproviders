// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataservicebussubscription "github.com/golingon/terraproviders/azurerm/3.49.0/dataservicebussubscription"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicebusSubscription(name string, args DataServicebusSubscriptionArgs) *DataServicebusSubscription {
	return &DataServicebusSubscription{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicebusSubscription)(nil)

type DataServicebusSubscription struct {
	Name string
	Args DataServicebusSubscriptionArgs
}

func (ss *DataServicebusSubscription) DataSource() string {
	return "azurerm_servicebus_subscription"
}

func (ss *DataServicebusSubscription) LocalName() string {
	return ss.Name
}

func (ss *DataServicebusSubscription) Configuration() interface{} {
	return ss.Args
}

func (ss *DataServicebusSubscription) Attributes() dataServicebusSubscriptionAttributes {
	return dataServicebusSubscriptionAttributes{ref: terra.ReferenceDataResource(ss)}
}

type DataServicebusSubscriptionArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NamespaceName: string, optional
	NamespaceName terra.StringValue `hcl:"namespace_name,attr"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// TopicId: string, optional
	TopicId terra.StringValue `hcl:"topic_id,attr"`
	// TopicName: string, optional
	TopicName terra.StringValue `hcl:"topic_name,attr"`
	// Timeouts: optional
	Timeouts *dataservicebussubscription.Timeouts `hcl:"timeouts,block"`
}
type dataServicebusSubscriptionAttributes struct {
	ref terra.Reference
}

func (ss dataServicebusSubscriptionAttributes) AutoDeleteOnIdle() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("auto_delete_on_idle"))
}

func (ss dataServicebusSubscriptionAttributes) DeadLetteringOnFilterEvaluationError() terra.BoolValue {
	return terra.ReferenceBool(ss.ref.Append("dead_lettering_on_filter_evaluation_error"))
}

func (ss dataServicebusSubscriptionAttributes) DeadLetteringOnMessageExpiration() terra.BoolValue {
	return terra.ReferenceBool(ss.ref.Append("dead_lettering_on_message_expiration"))
}

func (ss dataServicebusSubscriptionAttributes) DefaultMessageTtl() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("default_message_ttl"))
}

func (ss dataServicebusSubscriptionAttributes) EnableBatchedOperations() terra.BoolValue {
	return terra.ReferenceBool(ss.ref.Append("enable_batched_operations"))
}

func (ss dataServicebusSubscriptionAttributes) ForwardDeadLetteredMessagesTo() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("forward_dead_lettered_messages_to"))
}

func (ss dataServicebusSubscriptionAttributes) ForwardTo() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("forward_to"))
}

func (ss dataServicebusSubscriptionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("id"))
}

func (ss dataServicebusSubscriptionAttributes) LockDuration() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("lock_duration"))
}

func (ss dataServicebusSubscriptionAttributes) MaxDeliveryCount() terra.NumberValue {
	return terra.ReferenceNumber(ss.ref.Append("max_delivery_count"))
}

func (ss dataServicebusSubscriptionAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("name"))
}

func (ss dataServicebusSubscriptionAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("namespace_name"))
}

func (ss dataServicebusSubscriptionAttributes) RequiresSession() terra.BoolValue {
	return terra.ReferenceBool(ss.ref.Append("requires_session"))
}

func (ss dataServicebusSubscriptionAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("resource_group_name"))
}

func (ss dataServicebusSubscriptionAttributes) TopicId() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("topic_id"))
}

func (ss dataServicebusSubscriptionAttributes) TopicName() terra.StringValue {
	return terra.ReferenceString(ss.ref.Append("topic_name"))
}

func (ss dataServicebusSubscriptionAttributes) Timeouts() dataservicebussubscription.TimeoutsAttributes {
	return terra.ReferenceSingle[dataservicebussubscription.TimeoutsAttributes](ss.ref.Append("timeouts"))
}
