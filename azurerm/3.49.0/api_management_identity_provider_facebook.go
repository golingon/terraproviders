// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementidentityproviderfacebook "github.com/golingon/terraproviders/azurerm/3.49.0/apimanagementidentityproviderfacebook"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiManagementIdentityProviderFacebook(name string, args ApiManagementIdentityProviderFacebookArgs) *ApiManagementIdentityProviderFacebook {
	return &ApiManagementIdentityProviderFacebook{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementIdentityProviderFacebook)(nil)

type ApiManagementIdentityProviderFacebook struct {
	Name  string
	Args  ApiManagementIdentityProviderFacebookArgs
	state *apiManagementIdentityProviderFacebookState
}

func (amipf *ApiManagementIdentityProviderFacebook) Type() string {
	return "azurerm_api_management_identity_provider_facebook"
}

func (amipf *ApiManagementIdentityProviderFacebook) LocalName() string {
	return amipf.Name
}

func (amipf *ApiManagementIdentityProviderFacebook) Configuration() interface{} {
	return amipf.Args
}

func (amipf *ApiManagementIdentityProviderFacebook) Attributes() apiManagementIdentityProviderFacebookAttributes {
	return apiManagementIdentityProviderFacebookAttributes{ref: terra.ReferenceResource(amipf)}
}

func (amipf *ApiManagementIdentityProviderFacebook) ImportState(av io.Reader) error {
	amipf.state = &apiManagementIdentityProviderFacebookState{}
	if err := json.NewDecoder(av).Decode(amipf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amipf.Type(), amipf.LocalName(), err)
	}
	return nil
}

func (amipf *ApiManagementIdentityProviderFacebook) State() (*apiManagementIdentityProviderFacebookState, bool) {
	return amipf.state, amipf.state != nil
}

func (amipf *ApiManagementIdentityProviderFacebook) StateMust() *apiManagementIdentityProviderFacebookState {
	if amipf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amipf.Type(), amipf.LocalName()))
	}
	return amipf.state
}

func (amipf *ApiManagementIdentityProviderFacebook) DependOn() terra.Reference {
	return terra.ReferenceResource(amipf)
}

type ApiManagementIdentityProviderFacebookArgs struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// AppSecret: string, required
	AppSecret terra.StringValue `hcl:"app_secret,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *apimanagementidentityproviderfacebook.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApiManagementIdentityProviderFacebook depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiManagementIdentityProviderFacebookAttributes struct {
	ref terra.Reference
}

func (amipf apiManagementIdentityProviderFacebookAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceString(amipf.ref.Append("api_management_name"))
}

func (amipf apiManagementIdentityProviderFacebookAttributes) AppId() terra.StringValue {
	return terra.ReferenceString(amipf.ref.Append("app_id"))
}

func (amipf apiManagementIdentityProviderFacebookAttributes) AppSecret() terra.StringValue {
	return terra.ReferenceString(amipf.ref.Append("app_secret"))
}

func (amipf apiManagementIdentityProviderFacebookAttributes) Id() terra.StringValue {
	return terra.ReferenceString(amipf.ref.Append("id"))
}

func (amipf apiManagementIdentityProviderFacebookAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(amipf.ref.Append("resource_group_name"))
}

func (amipf apiManagementIdentityProviderFacebookAttributes) Timeouts() apimanagementidentityproviderfacebook.TimeoutsAttributes {
	return terra.ReferenceSingle[apimanagementidentityproviderfacebook.TimeoutsAttributes](amipf.ref.Append("timeouts"))
}

type apiManagementIdentityProviderFacebookState struct {
	ApiManagementName string                                               `json:"api_management_name"`
	AppId             string                                               `json:"app_id"`
	AppSecret         string                                               `json:"app_secret"`
	Id                string                                               `json:"id"`
	ResourceGroupName string                                               `json:"resource_group_name"`
	Timeouts          *apimanagementidentityproviderfacebook.TimeoutsState `json:"timeouts"`
}
