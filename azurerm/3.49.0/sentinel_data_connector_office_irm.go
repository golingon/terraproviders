// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentineldataconnectorofficeirm "github.com/golingon/terraproviders/azurerm/3.49.0/sentineldataconnectorofficeirm"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelDataConnectorOfficeIrm(name string, args SentinelDataConnectorOfficeIrmArgs) *SentinelDataConnectorOfficeIrm {
	return &SentinelDataConnectorOfficeIrm{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelDataConnectorOfficeIrm)(nil)

type SentinelDataConnectorOfficeIrm struct {
	Name  string
	Args  SentinelDataConnectorOfficeIrmArgs
	state *sentinelDataConnectorOfficeIrmState
}

func (sdcoi *SentinelDataConnectorOfficeIrm) Type() string {
	return "azurerm_sentinel_data_connector_office_irm"
}

func (sdcoi *SentinelDataConnectorOfficeIrm) LocalName() string {
	return sdcoi.Name
}

func (sdcoi *SentinelDataConnectorOfficeIrm) Configuration() interface{} {
	return sdcoi.Args
}

func (sdcoi *SentinelDataConnectorOfficeIrm) Attributes() sentinelDataConnectorOfficeIrmAttributes {
	return sentinelDataConnectorOfficeIrmAttributes{ref: terra.ReferenceResource(sdcoi)}
}

func (sdcoi *SentinelDataConnectorOfficeIrm) ImportState(av io.Reader) error {
	sdcoi.state = &sentinelDataConnectorOfficeIrmState{}
	if err := json.NewDecoder(av).Decode(sdcoi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdcoi.Type(), sdcoi.LocalName(), err)
	}
	return nil
}

func (sdcoi *SentinelDataConnectorOfficeIrm) State() (*sentinelDataConnectorOfficeIrmState, bool) {
	return sdcoi.state, sdcoi.state != nil
}

func (sdcoi *SentinelDataConnectorOfficeIrm) StateMust() *sentinelDataConnectorOfficeIrmState {
	if sdcoi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdcoi.Type(), sdcoi.LocalName()))
	}
	return sdcoi.state
}

func (sdcoi *SentinelDataConnectorOfficeIrm) DependOn() terra.Reference {
	return terra.ReferenceResource(sdcoi)
}

type SentinelDataConnectorOfficeIrmArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// Timeouts: optional
	Timeouts *sentineldataconnectorofficeirm.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelDataConnectorOfficeIrm depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelDataConnectorOfficeIrmAttributes struct {
	ref terra.Reference
}

func (sdcoi sentinelDataConnectorOfficeIrmAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdcoi.ref.Append("id"))
}

func (sdcoi sentinelDataConnectorOfficeIrmAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sdcoi.ref.Append("log_analytics_workspace_id"))
}

func (sdcoi sentinelDataConnectorOfficeIrmAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdcoi.ref.Append("name"))
}

func (sdcoi sentinelDataConnectorOfficeIrmAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(sdcoi.ref.Append("tenant_id"))
}

func (sdcoi sentinelDataConnectorOfficeIrmAttributes) Timeouts() sentineldataconnectorofficeirm.TimeoutsAttributes {
	return terra.ReferenceSingle[sentineldataconnectorofficeirm.TimeoutsAttributes](sdcoi.ref.Append("timeouts"))
}

type sentinelDataConnectorOfficeIrmState struct {
	Id                      string                                        `json:"id"`
	LogAnalyticsWorkspaceId string                                        `json:"log_analytics_workspace_id"`
	Name                    string                                        `json:"name"`
	TenantId                string                                        `json:"tenant_id"`
	Timeouts                *sentineldataconnectorofficeirm.TimeoutsState `json:"timeouts"`
}
