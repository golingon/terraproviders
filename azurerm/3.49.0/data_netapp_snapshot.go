// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datanetappsnapshot "github.com/golingon/terraproviders/azurerm/3.49.0/datanetappsnapshot"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataNetappSnapshot(name string, args DataNetappSnapshotArgs) *DataNetappSnapshot {
	return &DataNetappSnapshot{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNetappSnapshot)(nil)

type DataNetappSnapshot struct {
	Name string
	Args DataNetappSnapshotArgs
}

func (ns *DataNetappSnapshot) DataSource() string {
	return "azurerm_netapp_snapshot"
}

func (ns *DataNetappSnapshot) LocalName() string {
	return ns.Name
}

func (ns *DataNetappSnapshot) Configuration() interface{} {
	return ns.Args
}

func (ns *DataNetappSnapshot) Attributes() dataNetappSnapshotAttributes {
	return dataNetappSnapshotAttributes{ref: terra.ReferenceDataResource(ns)}
}

type DataNetappSnapshotArgs struct {
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PoolName: string, required
	PoolName terra.StringValue `hcl:"pool_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// VolumeName: string, required
	VolumeName terra.StringValue `hcl:"volume_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datanetappsnapshot.Timeouts `hcl:"timeouts,block"`
}
type dataNetappSnapshotAttributes struct {
	ref terra.Reference
}

func (ns dataNetappSnapshotAttributes) AccountName() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("account_name"))
}

func (ns dataNetappSnapshotAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("id"))
}

func (ns dataNetappSnapshotAttributes) Location() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("location"))
}

func (ns dataNetappSnapshotAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("name"))
}

func (ns dataNetappSnapshotAttributes) PoolName() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("pool_name"))
}

func (ns dataNetappSnapshotAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("resource_group_name"))
}

func (ns dataNetappSnapshotAttributes) VolumeName() terra.StringValue {
	return terra.ReferenceString(ns.ref.Append("volume_name"))
}

func (ns dataNetappSnapshotAttributes) Timeouts() datanetappsnapshot.TimeoutsAttributes {
	return terra.ReferenceSingle[datanetappsnapshot.TimeoutsAttributes](ns.ref.Append("timeouts"))
}
