// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	localnetworkgateway "github.com/golingon/terraproviders/azurerm/3.49.0/localnetworkgateway"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLocalNetworkGateway(name string, args LocalNetworkGatewayArgs) *LocalNetworkGateway {
	return &LocalNetworkGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LocalNetworkGateway)(nil)

type LocalNetworkGateway struct {
	Name  string
	Args  LocalNetworkGatewayArgs
	state *localNetworkGatewayState
}

func (lng *LocalNetworkGateway) Type() string {
	return "azurerm_local_network_gateway"
}

func (lng *LocalNetworkGateway) LocalName() string {
	return lng.Name
}

func (lng *LocalNetworkGateway) Configuration() interface{} {
	return lng.Args
}

func (lng *LocalNetworkGateway) Attributes() localNetworkGatewayAttributes {
	return localNetworkGatewayAttributes{ref: terra.ReferenceResource(lng)}
}

func (lng *LocalNetworkGateway) ImportState(av io.Reader) error {
	lng.state = &localNetworkGatewayState{}
	if err := json.NewDecoder(av).Decode(lng.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lng.Type(), lng.LocalName(), err)
	}
	return nil
}

func (lng *LocalNetworkGateway) State() (*localNetworkGatewayState, bool) {
	return lng.state, lng.state != nil
}

func (lng *LocalNetworkGateway) StateMust() *localNetworkGatewayState {
	if lng.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lng.Type(), lng.LocalName()))
	}
	return lng.state
}

func (lng *LocalNetworkGateway) DependOn() terra.Reference {
	return terra.ReferenceResource(lng)
}

type LocalNetworkGatewayArgs struct {
	// AddressSpace: list of string, optional
	AddressSpace terra.ListValue[terra.StringValue] `hcl:"address_space,attr"`
	// GatewayAddress: string, optional
	GatewayAddress terra.StringValue `hcl:"gateway_address,attr"`
	// GatewayFqdn: string, optional
	GatewayFqdn terra.StringValue `hcl:"gateway_fqdn,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// BgpSettings: optional
	BgpSettings *localnetworkgateway.BgpSettings `hcl:"bgp_settings,block"`
	// Timeouts: optional
	Timeouts *localnetworkgateway.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that LocalNetworkGateway depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type localNetworkGatewayAttributes struct {
	ref terra.Reference
}

func (lng localNetworkGatewayAttributes) AddressSpace() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](lng.ref.Append("address_space"))
}

func (lng localNetworkGatewayAttributes) GatewayAddress() terra.StringValue {
	return terra.ReferenceString(lng.ref.Append("gateway_address"))
}

func (lng localNetworkGatewayAttributes) GatewayFqdn() terra.StringValue {
	return terra.ReferenceString(lng.ref.Append("gateway_fqdn"))
}

func (lng localNetworkGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(lng.ref.Append("id"))
}

func (lng localNetworkGatewayAttributes) Location() terra.StringValue {
	return terra.ReferenceString(lng.ref.Append("location"))
}

func (lng localNetworkGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceString(lng.ref.Append("name"))
}

func (lng localNetworkGatewayAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(lng.ref.Append("resource_group_name"))
}

func (lng localNetworkGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](lng.ref.Append("tags"))
}

func (lng localNetworkGatewayAttributes) BgpSettings() terra.ListValue[localnetworkgateway.BgpSettingsAttributes] {
	return terra.ReferenceList[localnetworkgateway.BgpSettingsAttributes](lng.ref.Append("bgp_settings"))
}

func (lng localNetworkGatewayAttributes) Timeouts() localnetworkgateway.TimeoutsAttributes {
	return terra.ReferenceSingle[localnetworkgateway.TimeoutsAttributes](lng.ref.Append("timeouts"))
}

type localNetworkGatewayState struct {
	AddressSpace      []string                               `json:"address_space"`
	GatewayAddress    string                                 `json:"gateway_address"`
	GatewayFqdn       string                                 `json:"gateway_fqdn"`
	Id                string                                 `json:"id"`
	Location          string                                 `json:"location"`
	Name              string                                 `json:"name"`
	ResourceGroupName string                                 `json:"resource_group_name"`
	Tags              map[string]string                      `json:"tags"`
	BgpSettings       []localnetworkgateway.BgpSettingsState `json:"bgp_settings"`
	Timeouts          *localnetworkgateway.TimeoutsState     `json:"timeouts"`
}
