// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentineldataconnectorazuresecuritycenter "github.com/golingon/terraproviders/azurerm/3.49.0/sentineldataconnectorazuresecuritycenter"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelDataConnectorAzureSecurityCenter(name string, args SentinelDataConnectorAzureSecurityCenterArgs) *SentinelDataConnectorAzureSecurityCenter {
	return &SentinelDataConnectorAzureSecurityCenter{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelDataConnectorAzureSecurityCenter)(nil)

type SentinelDataConnectorAzureSecurityCenter struct {
	Name  string
	Args  SentinelDataConnectorAzureSecurityCenterArgs
	state *sentinelDataConnectorAzureSecurityCenterState
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) Type() string {
	return "azurerm_sentinel_data_connector_azure_security_center"
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) LocalName() string {
	return sdcasc.Name
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) Configuration() interface{} {
	return sdcasc.Args
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) Attributes() sentinelDataConnectorAzureSecurityCenterAttributes {
	return sentinelDataConnectorAzureSecurityCenterAttributes{ref: terra.ReferenceResource(sdcasc)}
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) ImportState(av io.Reader) error {
	sdcasc.state = &sentinelDataConnectorAzureSecurityCenterState{}
	if err := json.NewDecoder(av).Decode(sdcasc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdcasc.Type(), sdcasc.LocalName(), err)
	}
	return nil
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) State() (*sentinelDataConnectorAzureSecurityCenterState, bool) {
	return sdcasc.state, sdcasc.state != nil
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) StateMust() *sentinelDataConnectorAzureSecurityCenterState {
	if sdcasc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdcasc.Type(), sdcasc.LocalName()))
	}
	return sdcasc.state
}

func (sdcasc *SentinelDataConnectorAzureSecurityCenter) DependOn() terra.Reference {
	return terra.ReferenceResource(sdcasc)
}

type SentinelDataConnectorAzureSecurityCenterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SubscriptionId: string, optional
	SubscriptionId terra.StringValue `hcl:"subscription_id,attr"`
	// Timeouts: optional
	Timeouts *sentineldataconnectorazuresecuritycenter.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelDataConnectorAzureSecurityCenter depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelDataConnectorAzureSecurityCenterAttributes struct {
	ref terra.Reference
}

func (sdcasc sentinelDataConnectorAzureSecurityCenterAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdcasc.ref.Append("id"))
}

func (sdcasc sentinelDataConnectorAzureSecurityCenterAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sdcasc.ref.Append("log_analytics_workspace_id"))
}

func (sdcasc sentinelDataConnectorAzureSecurityCenterAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdcasc.ref.Append("name"))
}

func (sdcasc sentinelDataConnectorAzureSecurityCenterAttributes) SubscriptionId() terra.StringValue {
	return terra.ReferenceString(sdcasc.ref.Append("subscription_id"))
}

func (sdcasc sentinelDataConnectorAzureSecurityCenterAttributes) Timeouts() sentineldataconnectorazuresecuritycenter.TimeoutsAttributes {
	return terra.ReferenceSingle[sentineldataconnectorazuresecuritycenter.TimeoutsAttributes](sdcasc.ref.Append("timeouts"))
}

type sentinelDataConnectorAzureSecurityCenterState struct {
	Id                      string                                                  `json:"id"`
	LogAnalyticsWorkspaceId string                                                  `json:"log_analytics_workspace_id"`
	Name                    string                                                  `json:"name"`
	SubscriptionId          string                                                  `json:"subscription_id"`
	Timeouts                *sentineldataconnectorazuresecuritycenter.TimeoutsState `json:"timeouts"`
}
