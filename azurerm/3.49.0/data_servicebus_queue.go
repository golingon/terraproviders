// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataservicebusqueue "github.com/golingon/terraproviders/azurerm/3.49.0/dataservicebusqueue"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicebusQueue(name string, args DataServicebusQueueArgs) *DataServicebusQueue {
	return &DataServicebusQueue{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicebusQueue)(nil)

type DataServicebusQueue struct {
	Name string
	Args DataServicebusQueueArgs
}

func (sq *DataServicebusQueue) DataSource() string {
	return "azurerm_servicebus_queue"
}

func (sq *DataServicebusQueue) LocalName() string {
	return sq.Name
}

func (sq *DataServicebusQueue) Configuration() interface{} {
	return sq.Args
}

func (sq *DataServicebusQueue) Attributes() dataServicebusQueueAttributes {
	return dataServicebusQueueAttributes{ref: terra.ReferenceDataResource(sq)}
}

type DataServicebusQueueArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NamespaceId: string, optional
	NamespaceId terra.StringValue `hcl:"namespace_id,attr"`
	// NamespaceName: string, optional
	NamespaceName terra.StringValue `hcl:"namespace_name,attr"`
	// ResourceGroupName: string, optional
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr"`
	// Timeouts: optional
	Timeouts *dataservicebusqueue.Timeouts `hcl:"timeouts,block"`
}
type dataServicebusQueueAttributes struct {
	ref terra.Reference
}

func (sq dataServicebusQueueAttributes) AutoDeleteOnIdle() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("auto_delete_on_idle"))
}

func (sq dataServicebusQueueAttributes) DeadLetteringOnMessageExpiration() terra.BoolValue {
	return terra.ReferenceBool(sq.ref.Append("dead_lettering_on_message_expiration"))
}

func (sq dataServicebusQueueAttributes) DefaultMessageTtl() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("default_message_ttl"))
}

func (sq dataServicebusQueueAttributes) DuplicateDetectionHistoryTimeWindow() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("duplicate_detection_history_time_window"))
}

func (sq dataServicebusQueueAttributes) EnableBatchedOperations() terra.BoolValue {
	return terra.ReferenceBool(sq.ref.Append("enable_batched_operations"))
}

func (sq dataServicebusQueueAttributes) EnableExpress() terra.BoolValue {
	return terra.ReferenceBool(sq.ref.Append("enable_express"))
}

func (sq dataServicebusQueueAttributes) EnablePartitioning() terra.BoolValue {
	return terra.ReferenceBool(sq.ref.Append("enable_partitioning"))
}

func (sq dataServicebusQueueAttributes) ForwardDeadLetteredMessagesTo() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("forward_dead_lettered_messages_to"))
}

func (sq dataServicebusQueueAttributes) ForwardTo() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("forward_to"))
}

func (sq dataServicebusQueueAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("id"))
}

func (sq dataServicebusQueueAttributes) LockDuration() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("lock_duration"))
}

func (sq dataServicebusQueueAttributes) MaxDeliveryCount() terra.NumberValue {
	return terra.ReferenceNumber(sq.ref.Append("max_delivery_count"))
}

func (sq dataServicebusQueueAttributes) MaxSizeInMegabytes() terra.NumberValue {
	return terra.ReferenceNumber(sq.ref.Append("max_size_in_megabytes"))
}

func (sq dataServicebusQueueAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("name"))
}

func (sq dataServicebusQueueAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("namespace_id"))
}

func (sq dataServicebusQueueAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("namespace_name"))
}

func (sq dataServicebusQueueAttributes) RequiresDuplicateDetection() terra.BoolValue {
	return terra.ReferenceBool(sq.ref.Append("requires_duplicate_detection"))
}

func (sq dataServicebusQueueAttributes) RequiresSession() terra.BoolValue {
	return terra.ReferenceBool(sq.ref.Append("requires_session"))
}

func (sq dataServicebusQueueAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("resource_group_name"))
}

func (sq dataServicebusQueueAttributes) Status() terra.StringValue {
	return terra.ReferenceString(sq.ref.Append("status"))
}

func (sq dataServicebusQueueAttributes) Timeouts() dataservicebusqueue.TimeoutsAttributes {
	return terra.ReferenceSingle[dataservicebusqueue.TimeoutsAttributes](sq.ref.Append("timeouts"))
}
