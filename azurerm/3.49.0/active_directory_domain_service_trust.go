// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	activedirectorydomainservicetrust "github.com/golingon/terraproviders/azurerm/3.49.0/activedirectorydomainservicetrust"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewActiveDirectoryDomainServiceTrust(name string, args ActiveDirectoryDomainServiceTrustArgs) *ActiveDirectoryDomainServiceTrust {
	return &ActiveDirectoryDomainServiceTrust{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ActiveDirectoryDomainServiceTrust)(nil)

type ActiveDirectoryDomainServiceTrust struct {
	Name  string
	Args  ActiveDirectoryDomainServiceTrustArgs
	state *activeDirectoryDomainServiceTrustState
}

func (addst *ActiveDirectoryDomainServiceTrust) Type() string {
	return "azurerm_active_directory_domain_service_trust"
}

func (addst *ActiveDirectoryDomainServiceTrust) LocalName() string {
	return addst.Name
}

func (addst *ActiveDirectoryDomainServiceTrust) Configuration() interface{} {
	return addst.Args
}

func (addst *ActiveDirectoryDomainServiceTrust) Attributes() activeDirectoryDomainServiceTrustAttributes {
	return activeDirectoryDomainServiceTrustAttributes{ref: terra.ReferenceResource(addst)}
}

func (addst *ActiveDirectoryDomainServiceTrust) ImportState(av io.Reader) error {
	addst.state = &activeDirectoryDomainServiceTrustState{}
	if err := json.NewDecoder(av).Decode(addst.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", addst.Type(), addst.LocalName(), err)
	}
	return nil
}

func (addst *ActiveDirectoryDomainServiceTrust) State() (*activeDirectoryDomainServiceTrustState, bool) {
	return addst.state, addst.state != nil
}

func (addst *ActiveDirectoryDomainServiceTrust) StateMust() *activeDirectoryDomainServiceTrustState {
	if addst.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", addst.Type(), addst.LocalName()))
	}
	return addst.state
}

func (addst *ActiveDirectoryDomainServiceTrust) DependOn() terra.Reference {
	return terra.ReferenceResource(addst)
}

type ActiveDirectoryDomainServiceTrustArgs struct {
	// DomainServiceId: string, required
	DomainServiceId terra.StringValue `hcl:"domain_service_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Password: string, required
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// TrustedDomainDnsIps: list of string, required
	TrustedDomainDnsIps terra.ListValue[terra.StringValue] `hcl:"trusted_domain_dns_ips,attr" validate:"required"`
	// TrustedDomainFqdn: string, required
	TrustedDomainFqdn terra.StringValue `hcl:"trusted_domain_fqdn,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *activedirectorydomainservicetrust.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ActiveDirectoryDomainServiceTrust depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type activeDirectoryDomainServiceTrustAttributes struct {
	ref terra.Reference
}

func (addst activeDirectoryDomainServiceTrustAttributes) DomainServiceId() terra.StringValue {
	return terra.ReferenceString(addst.ref.Append("domain_service_id"))
}

func (addst activeDirectoryDomainServiceTrustAttributes) Id() terra.StringValue {
	return terra.ReferenceString(addst.ref.Append("id"))
}

func (addst activeDirectoryDomainServiceTrustAttributes) Name() terra.StringValue {
	return terra.ReferenceString(addst.ref.Append("name"))
}

func (addst activeDirectoryDomainServiceTrustAttributes) Password() terra.StringValue {
	return terra.ReferenceString(addst.ref.Append("password"))
}

func (addst activeDirectoryDomainServiceTrustAttributes) TrustedDomainDnsIps() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](addst.ref.Append("trusted_domain_dns_ips"))
}

func (addst activeDirectoryDomainServiceTrustAttributes) TrustedDomainFqdn() terra.StringValue {
	return terra.ReferenceString(addst.ref.Append("trusted_domain_fqdn"))
}

func (addst activeDirectoryDomainServiceTrustAttributes) Timeouts() activedirectorydomainservicetrust.TimeoutsAttributes {
	return terra.ReferenceSingle[activedirectorydomainservicetrust.TimeoutsAttributes](addst.ref.Append("timeouts"))
}

type activeDirectoryDomainServiceTrustState struct {
	DomainServiceId     string                                           `json:"domain_service_id"`
	Id                  string                                           `json:"id"`
	Name                string                                           `json:"name"`
	Password            string                                           `json:"password"`
	TrustedDomainDnsIps []string                                         `json:"trusted_domain_dns_ips"`
	TrustedDomainFqdn   string                                           `json:"trusted_domain_fqdn"`
	Timeouts            *activedirectorydomainservicetrust.TimeoutsState `json:"timeouts"`
}
