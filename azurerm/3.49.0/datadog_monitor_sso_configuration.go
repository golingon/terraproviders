// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	datadogmonitorssoconfiguration "github.com/golingon/terraproviders/azurerm/3.49.0/datadogmonitorssoconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDatadogMonitorSsoConfiguration(name string, args DatadogMonitorSsoConfigurationArgs) *DatadogMonitorSsoConfiguration {
	return &DatadogMonitorSsoConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DatadogMonitorSsoConfiguration)(nil)

type DatadogMonitorSsoConfiguration struct {
	Name  string
	Args  DatadogMonitorSsoConfigurationArgs
	state *datadogMonitorSsoConfigurationState
}

func (dmsc *DatadogMonitorSsoConfiguration) Type() string {
	return "azurerm_datadog_monitor_sso_configuration"
}

func (dmsc *DatadogMonitorSsoConfiguration) LocalName() string {
	return dmsc.Name
}

func (dmsc *DatadogMonitorSsoConfiguration) Configuration() interface{} {
	return dmsc.Args
}

func (dmsc *DatadogMonitorSsoConfiguration) Attributes() datadogMonitorSsoConfigurationAttributes {
	return datadogMonitorSsoConfigurationAttributes{ref: terra.ReferenceResource(dmsc)}
}

func (dmsc *DatadogMonitorSsoConfiguration) ImportState(av io.Reader) error {
	dmsc.state = &datadogMonitorSsoConfigurationState{}
	if err := json.NewDecoder(av).Decode(dmsc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dmsc.Type(), dmsc.LocalName(), err)
	}
	return nil
}

func (dmsc *DatadogMonitorSsoConfiguration) State() (*datadogMonitorSsoConfigurationState, bool) {
	return dmsc.state, dmsc.state != nil
}

func (dmsc *DatadogMonitorSsoConfiguration) StateMust() *datadogMonitorSsoConfigurationState {
	if dmsc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dmsc.Type(), dmsc.LocalName()))
	}
	return dmsc.state
}

func (dmsc *DatadogMonitorSsoConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(dmsc)
}

type DatadogMonitorSsoConfigurationArgs struct {
	// DatadogMonitorId: string, required
	DatadogMonitorId terra.StringValue `hcl:"datadog_monitor_id,attr" validate:"required"`
	// EnterpriseApplicationId: string, required
	EnterpriseApplicationId terra.StringValue `hcl:"enterprise_application_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// SingleSignOnEnabled: string, required
	SingleSignOnEnabled terra.StringValue `hcl:"single_sign_on_enabled,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datadogmonitorssoconfiguration.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DatadogMonitorSsoConfiguration depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type datadogMonitorSsoConfigurationAttributes struct {
	ref terra.Reference
}

func (dmsc datadogMonitorSsoConfigurationAttributes) DatadogMonitorId() terra.StringValue {
	return terra.ReferenceString(dmsc.ref.Append("datadog_monitor_id"))
}

func (dmsc datadogMonitorSsoConfigurationAttributes) EnterpriseApplicationId() terra.StringValue {
	return terra.ReferenceString(dmsc.ref.Append("enterprise_application_id"))
}

func (dmsc datadogMonitorSsoConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dmsc.ref.Append("id"))
}

func (dmsc datadogMonitorSsoConfigurationAttributes) LoginUrl() terra.StringValue {
	return terra.ReferenceString(dmsc.ref.Append("login_url"))
}

func (dmsc datadogMonitorSsoConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dmsc.ref.Append("name"))
}

func (dmsc datadogMonitorSsoConfigurationAttributes) SingleSignOnEnabled() terra.StringValue {
	return terra.ReferenceString(dmsc.ref.Append("single_sign_on_enabled"))
}

func (dmsc datadogMonitorSsoConfigurationAttributes) Timeouts() datadogmonitorssoconfiguration.TimeoutsAttributes {
	return terra.ReferenceSingle[datadogmonitorssoconfiguration.TimeoutsAttributes](dmsc.ref.Append("timeouts"))
}

type datadogMonitorSsoConfigurationState struct {
	DatadogMonitorId        string                                        `json:"datadog_monitor_id"`
	EnterpriseApplicationId string                                        `json:"enterprise_application_id"`
	Id                      string                                        `json:"id"`
	LoginUrl                string                                        `json:"login_url"`
	Name                    string                                        `json:"name"`
	SingleSignOnEnabled     string                                        `json:"single_sign_on_enabled"`
	Timeouts                *datadogmonitorssoconfiguration.TimeoutsState `json:"timeouts"`
}
