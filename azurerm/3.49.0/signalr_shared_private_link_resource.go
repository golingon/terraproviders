// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	signalrsharedprivatelinkresource "github.com/golingon/terraproviders/azurerm/3.49.0/signalrsharedprivatelinkresource"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSignalrSharedPrivateLinkResource(name string, args SignalrSharedPrivateLinkResourceArgs) *SignalrSharedPrivateLinkResource {
	return &SignalrSharedPrivateLinkResource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SignalrSharedPrivateLinkResource)(nil)

type SignalrSharedPrivateLinkResource struct {
	Name  string
	Args  SignalrSharedPrivateLinkResourceArgs
	state *signalrSharedPrivateLinkResourceState
}

func (ssplr *SignalrSharedPrivateLinkResource) Type() string {
	return "azurerm_signalr_shared_private_link_resource"
}

func (ssplr *SignalrSharedPrivateLinkResource) LocalName() string {
	return ssplr.Name
}

func (ssplr *SignalrSharedPrivateLinkResource) Configuration() interface{} {
	return ssplr.Args
}

func (ssplr *SignalrSharedPrivateLinkResource) Attributes() signalrSharedPrivateLinkResourceAttributes {
	return signalrSharedPrivateLinkResourceAttributes{ref: terra.ReferenceResource(ssplr)}
}

func (ssplr *SignalrSharedPrivateLinkResource) ImportState(av io.Reader) error {
	ssplr.state = &signalrSharedPrivateLinkResourceState{}
	if err := json.NewDecoder(av).Decode(ssplr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssplr.Type(), ssplr.LocalName(), err)
	}
	return nil
}

func (ssplr *SignalrSharedPrivateLinkResource) State() (*signalrSharedPrivateLinkResourceState, bool) {
	return ssplr.state, ssplr.state != nil
}

func (ssplr *SignalrSharedPrivateLinkResource) StateMust() *signalrSharedPrivateLinkResourceState {
	if ssplr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssplr.Type(), ssplr.LocalName()))
	}
	return ssplr.state
}

func (ssplr *SignalrSharedPrivateLinkResource) DependOn() terra.Reference {
	return terra.ReferenceResource(ssplr)
}

type SignalrSharedPrivateLinkResourceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RequestMessage: string, optional
	RequestMessage terra.StringValue `hcl:"request_message,attr"`
	// SignalrServiceId: string, required
	SignalrServiceId terra.StringValue `hcl:"signalr_service_id,attr" validate:"required"`
	// SubResourceName: string, required
	SubResourceName terra.StringValue `hcl:"sub_resource_name,attr" validate:"required"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *signalrsharedprivatelinkresource.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SignalrSharedPrivateLinkResource depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type signalrSharedPrivateLinkResourceAttributes struct {
	ref terra.Reference
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("id"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("name"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) RequestMessage() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("request_message"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) SignalrServiceId() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("signalr_service_id"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) Status() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("status"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) SubResourceName() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("sub_resource_name"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceString(ssplr.ref.Append("target_resource_id"))
}

func (ssplr signalrSharedPrivateLinkResourceAttributes) Timeouts() signalrsharedprivatelinkresource.TimeoutsAttributes {
	return terra.ReferenceSingle[signalrsharedprivatelinkresource.TimeoutsAttributes](ssplr.ref.Append("timeouts"))
}

type signalrSharedPrivateLinkResourceState struct {
	Id               string                                          `json:"id"`
	Name             string                                          `json:"name"`
	RequestMessage   string                                          `json:"request_message"`
	SignalrServiceId string                                          `json:"signalr_service_id"`
	Status           string                                          `json:"status"`
	SubResourceName  string                                          `json:"sub_resource_name"`
	TargetResourceId string                                          `json:"target_resource_id"`
	Timeouts         *signalrsharedprivatelinkresource.TimeoutsState `json:"timeouts"`
}
