// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	applicationinsightsworkbook "github.com/golingon/terraproviders/azurerm/3.49.0/applicationinsightsworkbook"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApplicationInsightsWorkbook(name string, args ApplicationInsightsWorkbookArgs) *ApplicationInsightsWorkbook {
	return &ApplicationInsightsWorkbook{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationInsightsWorkbook)(nil)

type ApplicationInsightsWorkbook struct {
	Name  string
	Args  ApplicationInsightsWorkbookArgs
	state *applicationInsightsWorkbookState
}

func (aiw *ApplicationInsightsWorkbook) Type() string {
	return "azurerm_application_insights_workbook"
}

func (aiw *ApplicationInsightsWorkbook) LocalName() string {
	return aiw.Name
}

func (aiw *ApplicationInsightsWorkbook) Configuration() interface{} {
	return aiw.Args
}

func (aiw *ApplicationInsightsWorkbook) Attributes() applicationInsightsWorkbookAttributes {
	return applicationInsightsWorkbookAttributes{ref: terra.ReferenceResource(aiw)}
}

func (aiw *ApplicationInsightsWorkbook) ImportState(av io.Reader) error {
	aiw.state = &applicationInsightsWorkbookState{}
	if err := json.NewDecoder(av).Decode(aiw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiw.Type(), aiw.LocalName(), err)
	}
	return nil
}

func (aiw *ApplicationInsightsWorkbook) State() (*applicationInsightsWorkbookState, bool) {
	return aiw.state, aiw.state != nil
}

func (aiw *ApplicationInsightsWorkbook) StateMust() *applicationInsightsWorkbookState {
	if aiw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiw.Type(), aiw.LocalName()))
	}
	return aiw.state
}

func (aiw *ApplicationInsightsWorkbook) DependOn() terra.Reference {
	return terra.ReferenceResource(aiw)
}

type ApplicationInsightsWorkbookArgs struct {
	// Category: string, optional
	Category terra.StringValue `hcl:"category,attr"`
	// DataJson: string, required
	DataJson terra.StringValue `hcl:"data_json,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SourceId: string, optional
	SourceId terra.StringValue `hcl:"source_id,attr"`
	// StorageContainerId: string, optional
	StorageContainerId terra.StringValue `hcl:"storage_container_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: optional
	Identity *applicationinsightsworkbook.Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *applicationinsightsworkbook.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApplicationInsightsWorkbook depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type applicationInsightsWorkbookAttributes struct {
	ref terra.Reference
}

func (aiw applicationInsightsWorkbookAttributes) Category() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("category"))
}

func (aiw applicationInsightsWorkbookAttributes) DataJson() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("data_json"))
}

func (aiw applicationInsightsWorkbookAttributes) Description() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("description"))
}

func (aiw applicationInsightsWorkbookAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("display_name"))
}

func (aiw applicationInsightsWorkbookAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("id"))
}

func (aiw applicationInsightsWorkbookAttributes) Location() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("location"))
}

func (aiw applicationInsightsWorkbookAttributes) Name() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("name"))
}

func (aiw applicationInsightsWorkbookAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("resource_group_name"))
}

func (aiw applicationInsightsWorkbookAttributes) SourceId() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("source_id"))
}

func (aiw applicationInsightsWorkbookAttributes) StorageContainerId() terra.StringValue {
	return terra.ReferenceString(aiw.ref.Append("storage_container_id"))
}

func (aiw applicationInsightsWorkbookAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](aiw.ref.Append("tags"))
}

func (aiw applicationInsightsWorkbookAttributes) Identity() terra.ListValue[applicationinsightsworkbook.IdentityAttributes] {
	return terra.ReferenceList[applicationinsightsworkbook.IdentityAttributes](aiw.ref.Append("identity"))
}

func (aiw applicationInsightsWorkbookAttributes) Timeouts() applicationinsightsworkbook.TimeoutsAttributes {
	return terra.ReferenceSingle[applicationinsightsworkbook.TimeoutsAttributes](aiw.ref.Append("timeouts"))
}

type applicationInsightsWorkbookState struct {
	Category           string                                      `json:"category"`
	DataJson           string                                      `json:"data_json"`
	Description        string                                      `json:"description"`
	DisplayName        string                                      `json:"display_name"`
	Id                 string                                      `json:"id"`
	Location           string                                      `json:"location"`
	Name               string                                      `json:"name"`
	ResourceGroupName  string                                      `json:"resource_group_name"`
	SourceId           string                                      `json:"source_id"`
	StorageContainerId string                                      `json:"storage_container_id"`
	Tags               map[string]string                           `json:"tags"`
	Identity           []applicationinsightsworkbook.IdentityState `json:"identity"`
	Timeouts           *applicationinsightsworkbook.TimeoutsState  `json:"timeouts"`
}
