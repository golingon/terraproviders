// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataapimanagementgatewayhostnameconfiguration "github.com/golingon/terraproviders/azurerm/3.49.0/dataapimanagementgatewayhostnameconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataApiManagementGatewayHostNameConfiguration(name string, args DataApiManagementGatewayHostNameConfigurationArgs) *DataApiManagementGatewayHostNameConfiguration {
	return &DataApiManagementGatewayHostNameConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataApiManagementGatewayHostNameConfiguration)(nil)

type DataApiManagementGatewayHostNameConfiguration struct {
	Name string
	Args DataApiManagementGatewayHostNameConfigurationArgs
}

func (amghnc *DataApiManagementGatewayHostNameConfiguration) DataSource() string {
	return "azurerm_api_management_gateway_host_name_configuration"
}

func (amghnc *DataApiManagementGatewayHostNameConfiguration) LocalName() string {
	return amghnc.Name
}

func (amghnc *DataApiManagementGatewayHostNameConfiguration) Configuration() interface{} {
	return amghnc.Args
}

func (amghnc *DataApiManagementGatewayHostNameConfiguration) Attributes() dataApiManagementGatewayHostNameConfigurationAttributes {
	return dataApiManagementGatewayHostNameConfigurationAttributes{ref: terra.ReferenceDataResource(amghnc)}
}

type DataApiManagementGatewayHostNameConfigurationArgs struct {
	// ApiManagementId: string, required
	ApiManagementId terra.StringValue `hcl:"api_management_id,attr" validate:"required"`
	// GatewayName: string, required
	GatewayName terra.StringValue `hcl:"gateway_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dataapimanagementgatewayhostnameconfiguration.Timeouts `hcl:"timeouts,block"`
}
type dataApiManagementGatewayHostNameConfigurationAttributes struct {
	ref terra.Reference
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) ApiManagementId() terra.StringValue {
	return terra.ReferenceString(amghnc.ref.Append("api_management_id"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) CertificateId() terra.StringValue {
	return terra.ReferenceString(amghnc.ref.Append("certificate_id"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) GatewayName() terra.StringValue {
	return terra.ReferenceString(amghnc.ref.Append("gateway_name"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) HostName() terra.StringValue {
	return terra.ReferenceString(amghnc.ref.Append("host_name"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) Http2Enabled() terra.BoolValue {
	return terra.ReferenceBool(amghnc.ref.Append("http2_enabled"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(amghnc.ref.Append("id"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(amghnc.ref.Append("name"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) RequestClientCertificateEnabled() terra.BoolValue {
	return terra.ReferenceBool(amghnc.ref.Append("request_client_certificate_enabled"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) Tls10Enabled() terra.BoolValue {
	return terra.ReferenceBool(amghnc.ref.Append("tls10_enabled"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) Tls11Enabled() terra.BoolValue {
	return terra.ReferenceBool(amghnc.ref.Append("tls11_enabled"))
}

func (amghnc dataApiManagementGatewayHostNameConfigurationAttributes) Timeouts() dataapimanagementgatewayhostnameconfiguration.TimeoutsAttributes {
	return terra.ReferenceSingle[dataapimanagementgatewayhostnameconfiguration.TimeoutsAttributes](amghnc.ref.Append("timeouts"))
}
