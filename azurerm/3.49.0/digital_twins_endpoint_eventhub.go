// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	digitaltwinsendpointeventhub "github.com/golingon/terraproviders/azurerm/3.49.0/digitaltwinsendpointeventhub"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewDigitalTwinsEndpointEventhub(name string, args DigitalTwinsEndpointEventhubArgs) *DigitalTwinsEndpointEventhub {
	return &DigitalTwinsEndpointEventhub{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DigitalTwinsEndpointEventhub)(nil)

type DigitalTwinsEndpointEventhub struct {
	Name  string
	Args  DigitalTwinsEndpointEventhubArgs
	state *digitalTwinsEndpointEventhubState
}

func (dtee *DigitalTwinsEndpointEventhub) Type() string {
	return "azurerm_digital_twins_endpoint_eventhub"
}

func (dtee *DigitalTwinsEndpointEventhub) LocalName() string {
	return dtee.Name
}

func (dtee *DigitalTwinsEndpointEventhub) Configuration() interface{} {
	return dtee.Args
}

func (dtee *DigitalTwinsEndpointEventhub) Attributes() digitalTwinsEndpointEventhubAttributes {
	return digitalTwinsEndpointEventhubAttributes{ref: terra.ReferenceResource(dtee)}
}

func (dtee *DigitalTwinsEndpointEventhub) ImportState(av io.Reader) error {
	dtee.state = &digitalTwinsEndpointEventhubState{}
	if err := json.NewDecoder(av).Decode(dtee.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dtee.Type(), dtee.LocalName(), err)
	}
	return nil
}

func (dtee *DigitalTwinsEndpointEventhub) State() (*digitalTwinsEndpointEventhubState, bool) {
	return dtee.state, dtee.state != nil
}

func (dtee *DigitalTwinsEndpointEventhub) StateMust() *digitalTwinsEndpointEventhubState {
	if dtee.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dtee.Type(), dtee.LocalName()))
	}
	return dtee.state
}

func (dtee *DigitalTwinsEndpointEventhub) DependOn() terra.Reference {
	return terra.ReferenceResource(dtee)
}

type DigitalTwinsEndpointEventhubArgs struct {
	// DeadLetterStorageSecret: string, optional
	DeadLetterStorageSecret terra.StringValue `hcl:"dead_letter_storage_secret,attr"`
	// DigitalTwinsId: string, required
	DigitalTwinsId terra.StringValue `hcl:"digital_twins_id,attr" validate:"required"`
	// EventhubPrimaryConnectionString: string, required
	EventhubPrimaryConnectionString terra.StringValue `hcl:"eventhub_primary_connection_string,attr" validate:"required"`
	// EventhubSecondaryConnectionString: string, required
	EventhubSecondaryConnectionString terra.StringValue `hcl:"eventhub_secondary_connection_string,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *digitaltwinsendpointeventhub.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that DigitalTwinsEndpointEventhub depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type digitalTwinsEndpointEventhubAttributes struct {
	ref terra.Reference
}

func (dtee digitalTwinsEndpointEventhubAttributes) DeadLetterStorageSecret() terra.StringValue {
	return terra.ReferenceString(dtee.ref.Append("dead_letter_storage_secret"))
}

func (dtee digitalTwinsEndpointEventhubAttributes) DigitalTwinsId() terra.StringValue {
	return terra.ReferenceString(dtee.ref.Append("digital_twins_id"))
}

func (dtee digitalTwinsEndpointEventhubAttributes) EventhubPrimaryConnectionString() terra.StringValue {
	return terra.ReferenceString(dtee.ref.Append("eventhub_primary_connection_string"))
}

func (dtee digitalTwinsEndpointEventhubAttributes) EventhubSecondaryConnectionString() terra.StringValue {
	return terra.ReferenceString(dtee.ref.Append("eventhub_secondary_connection_string"))
}

func (dtee digitalTwinsEndpointEventhubAttributes) Id() terra.StringValue {
	return terra.ReferenceString(dtee.ref.Append("id"))
}

func (dtee digitalTwinsEndpointEventhubAttributes) Name() terra.StringValue {
	return terra.ReferenceString(dtee.ref.Append("name"))
}

func (dtee digitalTwinsEndpointEventhubAttributes) Timeouts() digitaltwinsendpointeventhub.TimeoutsAttributes {
	return terra.ReferenceSingle[digitaltwinsendpointeventhub.TimeoutsAttributes](dtee.ref.Append("timeouts"))
}

type digitalTwinsEndpointEventhubState struct {
	DeadLetterStorageSecret           string                                      `json:"dead_letter_storage_secret"`
	DigitalTwinsId                    string                                      `json:"digital_twins_id"`
	EventhubPrimaryConnectionString   string                                      `json:"eventhub_primary_connection_string"`
	EventhubSecondaryConnectionString string                                      `json:"eventhub_secondary_connection_string"`
	Id                                string                                      `json:"id"`
	Name                              string                                      `json:"name"`
	Timeouts                          *digitaltwinsendpointeventhub.TimeoutsState `json:"timeouts"`
}
