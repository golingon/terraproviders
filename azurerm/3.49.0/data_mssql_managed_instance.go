// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datamssqlmanagedinstance "github.com/golingon/terraproviders/azurerm/3.49.0/datamssqlmanagedinstance"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataMssqlManagedInstance(name string, args DataMssqlManagedInstanceArgs) *DataMssqlManagedInstance {
	return &DataMssqlManagedInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMssqlManagedInstance)(nil)

type DataMssqlManagedInstance struct {
	Name string
	Args DataMssqlManagedInstanceArgs
}

func (mmi *DataMssqlManagedInstance) DataSource() string {
	return "azurerm_mssql_managed_instance"
}

func (mmi *DataMssqlManagedInstance) LocalName() string {
	return mmi.Name
}

func (mmi *DataMssqlManagedInstance) Configuration() interface{} {
	return mmi.Args
}

func (mmi *DataMssqlManagedInstance) Attributes() dataMssqlManagedInstanceAttributes {
	return dataMssqlManagedInstanceAttributes{ref: terra.ReferenceDataResource(mmi)}
}

type DataMssqlManagedInstanceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Identity: min=0
	Identity []datamssqlmanagedinstance.Identity `hcl:"identity,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datamssqlmanagedinstance.Timeouts `hcl:"timeouts,block"`
}
type dataMssqlManagedInstanceAttributes struct {
	ref terra.Reference
}

func (mmi dataMssqlManagedInstanceAttributes) AdministratorLogin() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("administrator_login"))
}

func (mmi dataMssqlManagedInstanceAttributes) Collation() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("collation"))
}

func (mmi dataMssqlManagedInstanceAttributes) CustomerManagedKeyId() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("customer_managed_key_id"))
}

func (mmi dataMssqlManagedInstanceAttributes) DnsZonePartnerId() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("dns_zone_partner_id"))
}

func (mmi dataMssqlManagedInstanceAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("fqdn"))
}

func (mmi dataMssqlManagedInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("id"))
}

func (mmi dataMssqlManagedInstanceAttributes) LicenseType() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("license_type"))
}

func (mmi dataMssqlManagedInstanceAttributes) Location() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("location"))
}

func (mmi dataMssqlManagedInstanceAttributes) MinimumTlsVersion() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("minimum_tls_version"))
}

func (mmi dataMssqlManagedInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("name"))
}

func (mmi dataMssqlManagedInstanceAttributes) ProxyOverride() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("proxy_override"))
}

func (mmi dataMssqlManagedInstanceAttributes) PublicDataEndpointEnabled() terra.BoolValue {
	return terra.ReferenceBool(mmi.ref.Append("public_data_endpoint_enabled"))
}

func (mmi dataMssqlManagedInstanceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("resource_group_name"))
}

func (mmi dataMssqlManagedInstanceAttributes) SkuName() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("sku_name"))
}

func (mmi dataMssqlManagedInstanceAttributes) StorageAccountType() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("storage_account_type"))
}

func (mmi dataMssqlManagedInstanceAttributes) StorageSizeInGb() terra.NumberValue {
	return terra.ReferenceNumber(mmi.ref.Append("storage_size_in_gb"))
}

func (mmi dataMssqlManagedInstanceAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("subnet_id"))
}

func (mmi dataMssqlManagedInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](mmi.ref.Append("tags"))
}

func (mmi dataMssqlManagedInstanceAttributes) TimezoneId() terra.StringValue {
	return terra.ReferenceString(mmi.ref.Append("timezone_id"))
}

func (mmi dataMssqlManagedInstanceAttributes) Vcores() terra.NumberValue {
	return terra.ReferenceNumber(mmi.ref.Append("vcores"))
}

func (mmi dataMssqlManagedInstanceAttributes) Identity() terra.ListValue[datamssqlmanagedinstance.IdentityAttributes] {
	return terra.ReferenceList[datamssqlmanagedinstance.IdentityAttributes](mmi.ref.Append("identity"))
}

func (mmi dataMssqlManagedInstanceAttributes) Timeouts() datamssqlmanagedinstance.TimeoutsAttributes {
	return terra.ReferenceSingle[datamssqlmanagedinstance.TimeoutsAttributes](mmi.ref.Append("timeouts"))
}
