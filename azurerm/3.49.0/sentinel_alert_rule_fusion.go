// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentinelalertrulefusion "github.com/golingon/terraproviders/azurerm/3.49.0/sentinelalertrulefusion"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelAlertRuleFusion(name string, args SentinelAlertRuleFusionArgs) *SentinelAlertRuleFusion {
	return &SentinelAlertRuleFusion{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelAlertRuleFusion)(nil)

type SentinelAlertRuleFusion struct {
	Name  string
	Args  SentinelAlertRuleFusionArgs
	state *sentinelAlertRuleFusionState
}

func (sarf *SentinelAlertRuleFusion) Type() string {
	return "azurerm_sentinel_alert_rule_fusion"
}

func (sarf *SentinelAlertRuleFusion) LocalName() string {
	return sarf.Name
}

func (sarf *SentinelAlertRuleFusion) Configuration() interface{} {
	return sarf.Args
}

func (sarf *SentinelAlertRuleFusion) Attributes() sentinelAlertRuleFusionAttributes {
	return sentinelAlertRuleFusionAttributes{ref: terra.ReferenceResource(sarf)}
}

func (sarf *SentinelAlertRuleFusion) ImportState(av io.Reader) error {
	sarf.state = &sentinelAlertRuleFusionState{}
	if err := json.NewDecoder(av).Decode(sarf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sarf.Type(), sarf.LocalName(), err)
	}
	return nil
}

func (sarf *SentinelAlertRuleFusion) State() (*sentinelAlertRuleFusionState, bool) {
	return sarf.state, sarf.state != nil
}

func (sarf *SentinelAlertRuleFusion) StateMust() *sentinelAlertRuleFusionState {
	if sarf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sarf.Type(), sarf.LocalName()))
	}
	return sarf.state
}

func (sarf *SentinelAlertRuleFusion) DependOn() terra.Reference {
	return terra.ReferenceResource(sarf)
}

type SentinelAlertRuleFusionArgs struct {
	// AlertRuleTemplateGuid: string, required
	AlertRuleTemplateGuid terra.StringValue `hcl:"alert_rule_template_guid,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Source: min=0
	Source []sentinelalertrulefusion.Source `hcl:"source,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *sentinelalertrulefusion.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelAlertRuleFusion depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelAlertRuleFusionAttributes struct {
	ref terra.Reference
}

func (sarf sentinelAlertRuleFusionAttributes) AlertRuleTemplateGuid() terra.StringValue {
	return terra.ReferenceString(sarf.ref.Append("alert_rule_template_guid"))
}

func (sarf sentinelAlertRuleFusionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(sarf.ref.Append("enabled"))
}

func (sarf sentinelAlertRuleFusionAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sarf.ref.Append("id"))
}

func (sarf sentinelAlertRuleFusionAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sarf.ref.Append("log_analytics_workspace_id"))
}

func (sarf sentinelAlertRuleFusionAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sarf.ref.Append("name"))
}

func (sarf sentinelAlertRuleFusionAttributes) Source() terra.ListValue[sentinelalertrulefusion.SourceAttributes] {
	return terra.ReferenceList[sentinelalertrulefusion.SourceAttributes](sarf.ref.Append("source"))
}

func (sarf sentinelAlertRuleFusionAttributes) Timeouts() sentinelalertrulefusion.TimeoutsAttributes {
	return terra.ReferenceSingle[sentinelalertrulefusion.TimeoutsAttributes](sarf.ref.Append("timeouts"))
}

type sentinelAlertRuleFusionState struct {
	AlertRuleTemplateGuid   string                                 `json:"alert_rule_template_guid"`
	Enabled                 bool                                   `json:"enabled"`
	Id                      string                                 `json:"id"`
	LogAnalyticsWorkspaceId string                                 `json:"log_analytics_workspace_id"`
	Name                    string                                 `json:"name"`
	Source                  []sentinelalertrulefusion.SourceState  `json:"source"`
	Timeouts                *sentinelalertrulefusion.TimeoutsState `json:"timeouts"`
}
