// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	networksecurityrule "github.com/golingon/terraproviders/azurerm/3.49.0/networksecurityrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewNetworkSecurityRule(name string, args NetworkSecurityRuleArgs) *NetworkSecurityRule {
	return &NetworkSecurityRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkSecurityRule)(nil)

type NetworkSecurityRule struct {
	Name  string
	Args  NetworkSecurityRuleArgs
	state *networkSecurityRuleState
}

func (nsr *NetworkSecurityRule) Type() string {
	return "azurerm_network_security_rule"
}

func (nsr *NetworkSecurityRule) LocalName() string {
	return nsr.Name
}

func (nsr *NetworkSecurityRule) Configuration() interface{} {
	return nsr.Args
}

func (nsr *NetworkSecurityRule) Attributes() networkSecurityRuleAttributes {
	return networkSecurityRuleAttributes{ref: terra.ReferenceResource(nsr)}
}

func (nsr *NetworkSecurityRule) ImportState(av io.Reader) error {
	nsr.state = &networkSecurityRuleState{}
	if err := json.NewDecoder(av).Decode(nsr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nsr.Type(), nsr.LocalName(), err)
	}
	return nil
}

func (nsr *NetworkSecurityRule) State() (*networkSecurityRuleState, bool) {
	return nsr.state, nsr.state != nil
}

func (nsr *NetworkSecurityRule) StateMust() *networkSecurityRuleState {
	if nsr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nsr.Type(), nsr.LocalName()))
	}
	return nsr.state
}

func (nsr *NetworkSecurityRule) DependOn() terra.Reference {
	return terra.ReferenceResource(nsr)
}

type NetworkSecurityRuleArgs struct {
	// Access: string, required
	Access terra.StringValue `hcl:"access,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DestinationAddressPrefix: string, optional
	DestinationAddressPrefix terra.StringValue `hcl:"destination_address_prefix,attr"`
	// DestinationAddressPrefixes: set of string, optional
	DestinationAddressPrefixes terra.SetValue[terra.StringValue] `hcl:"destination_address_prefixes,attr"`
	// DestinationApplicationSecurityGroupIds: set of string, optional
	DestinationApplicationSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"destination_application_security_group_ids,attr"`
	// DestinationPortRange: string, optional
	DestinationPortRange terra.StringValue `hcl:"destination_port_range,attr"`
	// DestinationPortRanges: set of string, optional
	DestinationPortRanges terra.SetValue[terra.StringValue] `hcl:"destination_port_ranges,attr"`
	// Direction: string, required
	Direction terra.StringValue `hcl:"direction,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NetworkSecurityGroupName: string, required
	NetworkSecurityGroupName terra.StringValue `hcl:"network_security_group_name,attr" validate:"required"`
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// Protocol: string, required
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SourceAddressPrefix: string, optional
	SourceAddressPrefix terra.StringValue `hcl:"source_address_prefix,attr"`
	// SourceAddressPrefixes: set of string, optional
	SourceAddressPrefixes terra.SetValue[terra.StringValue] `hcl:"source_address_prefixes,attr"`
	// SourceApplicationSecurityGroupIds: set of string, optional
	SourceApplicationSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"source_application_security_group_ids,attr"`
	// SourcePortRange: string, optional
	SourcePortRange terra.StringValue `hcl:"source_port_range,attr"`
	// SourcePortRanges: set of string, optional
	SourcePortRanges terra.SetValue[terra.StringValue] `hcl:"source_port_ranges,attr"`
	// Timeouts: optional
	Timeouts *networksecurityrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that NetworkSecurityRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type networkSecurityRuleAttributes struct {
	ref terra.Reference
}

func (nsr networkSecurityRuleAttributes) Access() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("access"))
}

func (nsr networkSecurityRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("description"))
}

func (nsr networkSecurityRuleAttributes) DestinationAddressPrefix() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("destination_address_prefix"))
}

func (nsr networkSecurityRuleAttributes) DestinationAddressPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](nsr.ref.Append("destination_address_prefixes"))
}

func (nsr networkSecurityRuleAttributes) DestinationApplicationSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](nsr.ref.Append("destination_application_security_group_ids"))
}

func (nsr networkSecurityRuleAttributes) DestinationPortRange() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("destination_port_range"))
}

func (nsr networkSecurityRuleAttributes) DestinationPortRanges() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](nsr.ref.Append("destination_port_ranges"))
}

func (nsr networkSecurityRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("direction"))
}

func (nsr networkSecurityRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("id"))
}

func (nsr networkSecurityRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("name"))
}

func (nsr networkSecurityRuleAttributes) NetworkSecurityGroupName() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("network_security_group_name"))
}

func (nsr networkSecurityRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceNumber(nsr.ref.Append("priority"))
}

func (nsr networkSecurityRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("protocol"))
}

func (nsr networkSecurityRuleAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("resource_group_name"))
}

func (nsr networkSecurityRuleAttributes) SourceAddressPrefix() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("source_address_prefix"))
}

func (nsr networkSecurityRuleAttributes) SourceAddressPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](nsr.ref.Append("source_address_prefixes"))
}

func (nsr networkSecurityRuleAttributes) SourceApplicationSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](nsr.ref.Append("source_application_security_group_ids"))
}

func (nsr networkSecurityRuleAttributes) SourcePortRange() terra.StringValue {
	return terra.ReferenceString(nsr.ref.Append("source_port_range"))
}

func (nsr networkSecurityRuleAttributes) SourcePortRanges() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](nsr.ref.Append("source_port_ranges"))
}

func (nsr networkSecurityRuleAttributes) Timeouts() networksecurityrule.TimeoutsAttributes {
	return terra.ReferenceSingle[networksecurityrule.TimeoutsAttributes](nsr.ref.Append("timeouts"))
}

type networkSecurityRuleState struct {
	Access                                 string                             `json:"access"`
	Description                            string                             `json:"description"`
	DestinationAddressPrefix               string                             `json:"destination_address_prefix"`
	DestinationAddressPrefixes             []string                           `json:"destination_address_prefixes"`
	DestinationApplicationSecurityGroupIds []string                           `json:"destination_application_security_group_ids"`
	DestinationPortRange                   string                             `json:"destination_port_range"`
	DestinationPortRanges                  []string                           `json:"destination_port_ranges"`
	Direction                              string                             `json:"direction"`
	Id                                     string                             `json:"id"`
	Name                                   string                             `json:"name"`
	NetworkSecurityGroupName               string                             `json:"network_security_group_name"`
	Priority                               float64                            `json:"priority"`
	Protocol                               string                             `json:"protocol"`
	ResourceGroupName                      string                             `json:"resource_group_name"`
	SourceAddressPrefix                    string                             `json:"source_address_prefix"`
	SourceAddressPrefixes                  []string                           `json:"source_address_prefixes"`
	SourceApplicationSecurityGroupIds      []string                           `json:"source_application_security_group_ids"`
	SourcePortRange                        string                             `json:"source_port_range"`
	SourcePortRanges                       []string                           `json:"source_port_ranges"`
	Timeouts                               *networksecurityrule.TimeoutsState `json:"timeouts"`
}
