// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataapimanagementgateway

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type LocationData struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type LocationDataAttributes struct {
	ref terra.Reference
}

func (ld LocationDataAttributes) InternalRef() terra.Reference {
	return ld.ref
}

func (ld LocationDataAttributes) InternalWithRef(ref terra.Reference) LocationDataAttributes {
	return LocationDataAttributes{ref: ref}
}

func (ld LocationDataAttributes) InternalTokens() hclwrite.Tokens {
	return ld.ref.InternalTokens()
}

func (ld LocationDataAttributes) City() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("city"))
}

func (ld LocationDataAttributes) District() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("district"))
}

func (ld LocationDataAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("name"))
}

func (ld LocationDataAttributes) Region() terra.StringValue {
	return terra.ReferenceString(ld.ref.Append("region"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type LocationDataState struct {
	City     string `json:"city"`
	District string `json:"district"`
	Name     string `json:"name"`
	Region   string `json:"region"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
