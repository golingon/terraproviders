// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentinelalertruleanomalyduplicate "github.com/golingon/terraproviders/azurerm/3.49.0/sentinelalertruleanomalyduplicate"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelAlertRuleAnomalyDuplicate(name string, args SentinelAlertRuleAnomalyDuplicateArgs) *SentinelAlertRuleAnomalyDuplicate {
	return &SentinelAlertRuleAnomalyDuplicate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelAlertRuleAnomalyDuplicate)(nil)

type SentinelAlertRuleAnomalyDuplicate struct {
	Name  string
	Args  SentinelAlertRuleAnomalyDuplicateArgs
	state *sentinelAlertRuleAnomalyDuplicateState
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) Type() string {
	return "azurerm_sentinel_alert_rule_anomaly_duplicate"
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) LocalName() string {
	return sarad.Name
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) Configuration() interface{} {
	return sarad.Args
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) Attributes() sentinelAlertRuleAnomalyDuplicateAttributes {
	return sentinelAlertRuleAnomalyDuplicateAttributes{ref: terra.ReferenceResource(sarad)}
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) ImportState(av io.Reader) error {
	sarad.state = &sentinelAlertRuleAnomalyDuplicateState{}
	if err := json.NewDecoder(av).Decode(sarad.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sarad.Type(), sarad.LocalName(), err)
	}
	return nil
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) State() (*sentinelAlertRuleAnomalyDuplicateState, bool) {
	return sarad.state, sarad.state != nil
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) StateMust() *sentinelAlertRuleAnomalyDuplicateState {
	if sarad.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sarad.Type(), sarad.LocalName()))
	}
	return sarad.state
}

func (sarad *SentinelAlertRuleAnomalyDuplicate) DependOn() terra.Reference {
	return terra.ReferenceResource(sarad)
}

type SentinelAlertRuleAnomalyDuplicateArgs struct {
	// BuiltInRuleId: string, required
	BuiltInRuleId terra.StringValue `hcl:"built_in_rule_id,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Mode: string, required
	Mode terra.StringValue `hcl:"mode,attr" validate:"required"`
	// RequiredDataConnector: min=0
	RequiredDataConnector []sentinelalertruleanomalyduplicate.RequiredDataConnector `hcl:"required_data_connector,block" validate:"min=0"`
	// MultiSelectObservation: min=0
	MultiSelectObservation []sentinelalertruleanomalyduplicate.MultiSelectObservation `hcl:"multi_select_observation,block" validate:"min=0"`
	// PrioritizedExcludeObservation: min=0
	PrioritizedExcludeObservation []sentinelalertruleanomalyduplicate.PrioritizedExcludeObservation `hcl:"prioritized_exclude_observation,block" validate:"min=0"`
	// SingleSelectObservation: min=0
	SingleSelectObservation []sentinelalertruleanomalyduplicate.SingleSelectObservation `hcl:"single_select_observation,block" validate:"min=0"`
	// ThresholdObservation: min=0
	ThresholdObservation []sentinelalertruleanomalyduplicate.ThresholdObservation `hcl:"threshold_observation,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *sentinelalertruleanomalyduplicate.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelAlertRuleAnomalyDuplicate depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelAlertRuleAnomalyDuplicateAttributes struct {
	ref terra.Reference
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) AnomalySettingsVersion() terra.NumberValue {
	return terra.ReferenceNumber(sarad.ref.Append("anomaly_settings_version"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) AnomalyVersion() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("anomaly_version"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) BuiltInRuleId() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("built_in_rule_id"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Description() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("description"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("display_name"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceBool(sarad.ref.Append("enabled"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Frequency() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("frequency"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("id"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) IsDefaultSettings() terra.BoolValue {
	return terra.ReferenceBool(sarad.ref.Append("is_default_settings"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("log_analytics_workspace_id"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Mode() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("mode"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("name"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) SettingsDefinitionId() terra.StringValue {
	return terra.ReferenceString(sarad.ref.Append("settings_definition_id"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Tactics() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sarad.ref.Append("tactics"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Techniques() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](sarad.ref.Append("techniques"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) RequiredDataConnector() terra.ListValue[sentinelalertruleanomalyduplicate.RequiredDataConnectorAttributes] {
	return terra.ReferenceList[sentinelalertruleanomalyduplicate.RequiredDataConnectorAttributes](sarad.ref.Append("required_data_connector"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) MultiSelectObservation() terra.ListValue[sentinelalertruleanomalyduplicate.MultiSelectObservationAttributes] {
	return terra.ReferenceList[sentinelalertruleanomalyduplicate.MultiSelectObservationAttributes](sarad.ref.Append("multi_select_observation"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) PrioritizedExcludeObservation() terra.ListValue[sentinelalertruleanomalyduplicate.PrioritizedExcludeObservationAttributes] {
	return terra.ReferenceList[sentinelalertruleanomalyduplicate.PrioritizedExcludeObservationAttributes](sarad.ref.Append("prioritized_exclude_observation"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) SingleSelectObservation() terra.ListValue[sentinelalertruleanomalyduplicate.SingleSelectObservationAttributes] {
	return terra.ReferenceList[sentinelalertruleanomalyduplicate.SingleSelectObservationAttributes](sarad.ref.Append("single_select_observation"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) ThresholdObservation() terra.ListValue[sentinelalertruleanomalyduplicate.ThresholdObservationAttributes] {
	return terra.ReferenceList[sentinelalertruleanomalyduplicate.ThresholdObservationAttributes](sarad.ref.Append("threshold_observation"))
}

func (sarad sentinelAlertRuleAnomalyDuplicateAttributes) Timeouts() sentinelalertruleanomalyduplicate.TimeoutsAttributes {
	return terra.ReferenceSingle[sentinelalertruleanomalyduplicate.TimeoutsAttributes](sarad.ref.Append("timeouts"))
}

type sentinelAlertRuleAnomalyDuplicateState struct {
	AnomalySettingsVersion        float64                                                                `json:"anomaly_settings_version"`
	AnomalyVersion                string                                                                 `json:"anomaly_version"`
	BuiltInRuleId                 string                                                                 `json:"built_in_rule_id"`
	Description                   string                                                                 `json:"description"`
	DisplayName                   string                                                                 `json:"display_name"`
	Enabled                       bool                                                                   `json:"enabled"`
	Frequency                     string                                                                 `json:"frequency"`
	Id                            string                                                                 `json:"id"`
	IsDefaultSettings             bool                                                                   `json:"is_default_settings"`
	LogAnalyticsWorkspaceId       string                                                                 `json:"log_analytics_workspace_id"`
	Mode                          string                                                                 `json:"mode"`
	Name                          string                                                                 `json:"name"`
	SettingsDefinitionId          string                                                                 `json:"settings_definition_id"`
	Tactics                       []string                                                               `json:"tactics"`
	Techniques                    []string                                                               `json:"techniques"`
	RequiredDataConnector         []sentinelalertruleanomalyduplicate.RequiredDataConnectorState         `json:"required_data_connector"`
	MultiSelectObservation        []sentinelalertruleanomalyduplicate.MultiSelectObservationState        `json:"multi_select_observation"`
	PrioritizedExcludeObservation []sentinelalertruleanomalyduplicate.PrioritizedExcludeObservationState `json:"prioritized_exclude_observation"`
	SingleSelectObservation       []sentinelalertruleanomalyduplicate.SingleSelectObservationState       `json:"single_select_observation"`
	ThresholdObservation          []sentinelalertruleanomalyduplicate.ThresholdObservationState          `json:"threshold_observation"`
	Timeouts                      *sentinelalertruleanomalyduplicate.TimeoutsState                       `json:"timeouts"`
}
