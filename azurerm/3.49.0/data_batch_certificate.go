// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	databatchcertificate "github.com/golingon/terraproviders/azurerm/3.49.0/databatchcertificate"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataBatchCertificate(name string, args DataBatchCertificateArgs) *DataBatchCertificate {
	return &DataBatchCertificate{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataBatchCertificate)(nil)

type DataBatchCertificate struct {
	Name string
	Args DataBatchCertificateArgs
}

func (bc *DataBatchCertificate) DataSource() string {
	return "azurerm_batch_certificate"
}

func (bc *DataBatchCertificate) LocalName() string {
	return bc.Name
}

func (bc *DataBatchCertificate) Configuration() interface{} {
	return bc.Args
}

func (bc *DataBatchCertificate) Attributes() dataBatchCertificateAttributes {
	return dataBatchCertificateAttributes{ref: terra.ReferenceDataResource(bc)}
}

type DataBatchCertificateArgs struct {
	// AccountName: string, required
	AccountName terra.StringValue `hcl:"account_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *databatchcertificate.Timeouts `hcl:"timeouts,block"`
}
type dataBatchCertificateAttributes struct {
	ref terra.Reference
}

func (bc dataBatchCertificateAttributes) AccountName() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("account_name"))
}

func (bc dataBatchCertificateAttributes) Format() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("format"))
}

func (bc dataBatchCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("id"))
}

func (bc dataBatchCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("name"))
}

func (bc dataBatchCertificateAttributes) PublicData() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("public_data"))
}

func (bc dataBatchCertificateAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("resource_group_name"))
}

func (bc dataBatchCertificateAttributes) Thumbprint() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("thumbprint"))
}

func (bc dataBatchCertificateAttributes) ThumbprintAlgorithm() terra.StringValue {
	return terra.ReferenceString(bc.ref.Append("thumbprint_algorithm"))
}

func (bc dataBatchCertificateAttributes) Timeouts() databatchcertificate.TimeoutsAttributes {
	return terra.ReferenceSingle[databatchcertificate.TimeoutsAttributes](bc.ref.Append("timeouts"))
}
