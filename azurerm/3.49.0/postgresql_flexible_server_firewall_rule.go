// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	postgresqlflexibleserverfirewallrule "github.com/golingon/terraproviders/azurerm/3.49.0/postgresqlflexibleserverfirewallrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPostgresqlFlexibleServerFirewallRule(name string, args PostgresqlFlexibleServerFirewallRuleArgs) *PostgresqlFlexibleServerFirewallRule {
	return &PostgresqlFlexibleServerFirewallRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PostgresqlFlexibleServerFirewallRule)(nil)

type PostgresqlFlexibleServerFirewallRule struct {
	Name  string
	Args  PostgresqlFlexibleServerFirewallRuleArgs
	state *postgresqlFlexibleServerFirewallRuleState
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) Type() string {
	return "azurerm_postgresql_flexible_server_firewall_rule"
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) LocalName() string {
	return pfsfr.Name
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) Configuration() interface{} {
	return pfsfr.Args
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) Attributes() postgresqlFlexibleServerFirewallRuleAttributes {
	return postgresqlFlexibleServerFirewallRuleAttributes{ref: terra.ReferenceResource(pfsfr)}
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) ImportState(av io.Reader) error {
	pfsfr.state = &postgresqlFlexibleServerFirewallRuleState{}
	if err := json.NewDecoder(av).Decode(pfsfr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pfsfr.Type(), pfsfr.LocalName(), err)
	}
	return nil
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) State() (*postgresqlFlexibleServerFirewallRuleState, bool) {
	return pfsfr.state, pfsfr.state != nil
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) StateMust() *postgresqlFlexibleServerFirewallRuleState {
	if pfsfr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pfsfr.Type(), pfsfr.LocalName()))
	}
	return pfsfr.state
}

func (pfsfr *PostgresqlFlexibleServerFirewallRule) DependOn() terra.Reference {
	return terra.ReferenceResource(pfsfr)
}

type PostgresqlFlexibleServerFirewallRuleArgs struct {
	// EndIpAddress: string, required
	EndIpAddress terra.StringValue `hcl:"end_ip_address,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServerId: string, required
	ServerId terra.StringValue `hcl:"server_id,attr" validate:"required"`
	// StartIpAddress: string, required
	StartIpAddress terra.StringValue `hcl:"start_ip_address,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *postgresqlflexibleserverfirewallrule.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that PostgresqlFlexibleServerFirewallRule depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type postgresqlFlexibleServerFirewallRuleAttributes struct {
	ref terra.Reference
}

func (pfsfr postgresqlFlexibleServerFirewallRuleAttributes) EndIpAddress() terra.StringValue {
	return terra.ReferenceString(pfsfr.ref.Append("end_ip_address"))
}

func (pfsfr postgresqlFlexibleServerFirewallRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pfsfr.ref.Append("id"))
}

func (pfsfr postgresqlFlexibleServerFirewallRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pfsfr.ref.Append("name"))
}

func (pfsfr postgresqlFlexibleServerFirewallRuleAttributes) ServerId() terra.StringValue {
	return terra.ReferenceString(pfsfr.ref.Append("server_id"))
}

func (pfsfr postgresqlFlexibleServerFirewallRuleAttributes) StartIpAddress() terra.StringValue {
	return terra.ReferenceString(pfsfr.ref.Append("start_ip_address"))
}

func (pfsfr postgresqlFlexibleServerFirewallRuleAttributes) Timeouts() postgresqlflexibleserverfirewallrule.TimeoutsAttributes {
	return terra.ReferenceSingle[postgresqlflexibleserverfirewallrule.TimeoutsAttributes](pfsfr.ref.Append("timeouts"))
}

type postgresqlFlexibleServerFirewallRuleState struct {
	EndIpAddress   string                                              `json:"end_ip_address"`
	Id             string                                              `json:"id"`
	Name           string                                              `json:"name"`
	ServerId       string                                              `json:"server_id"`
	StartIpAddress string                                              `json:"start_ip_address"`
	Timeouts       *postgresqlflexibleserverfirewallrule.TimeoutsState `json:"timeouts"`
}
