// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	logicappintegrationaccountschema "github.com/golingon/terraproviders/azurerm/3.49.0/logicappintegrationaccountschema"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewLogicAppIntegrationAccountSchema(name string, args LogicAppIntegrationAccountSchemaArgs) *LogicAppIntegrationAccountSchema {
	return &LogicAppIntegrationAccountSchema{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LogicAppIntegrationAccountSchema)(nil)

type LogicAppIntegrationAccountSchema struct {
	Name  string
	Args  LogicAppIntegrationAccountSchemaArgs
	state *logicAppIntegrationAccountSchemaState
}

func (laias *LogicAppIntegrationAccountSchema) Type() string {
	return "azurerm_logic_app_integration_account_schema"
}

func (laias *LogicAppIntegrationAccountSchema) LocalName() string {
	return laias.Name
}

func (laias *LogicAppIntegrationAccountSchema) Configuration() interface{} {
	return laias.Args
}

func (laias *LogicAppIntegrationAccountSchema) Attributes() logicAppIntegrationAccountSchemaAttributes {
	return logicAppIntegrationAccountSchemaAttributes{ref: terra.ReferenceResource(laias)}
}

func (laias *LogicAppIntegrationAccountSchema) ImportState(av io.Reader) error {
	laias.state = &logicAppIntegrationAccountSchemaState{}
	if err := json.NewDecoder(av).Decode(laias.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", laias.Type(), laias.LocalName(), err)
	}
	return nil
}

func (laias *LogicAppIntegrationAccountSchema) State() (*logicAppIntegrationAccountSchemaState, bool) {
	return laias.state, laias.state != nil
}

func (laias *LogicAppIntegrationAccountSchema) StateMust() *logicAppIntegrationAccountSchemaState {
	if laias.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", laias.Type(), laias.LocalName()))
	}
	return laias.state
}

func (laias *LogicAppIntegrationAccountSchema) DependOn() terra.Reference {
	return terra.ReferenceResource(laias)
}

type LogicAppIntegrationAccountSchemaArgs struct {
	// Content: string, required
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// FileName: string, optional
	FileName terra.StringValue `hcl:"file_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationAccountName: string, required
	IntegrationAccountName terra.StringValue `hcl:"integration_account_name,attr" validate:"required"`
	// Metadata: string, optional
	Metadata terra.StringValue `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *logicappintegrationaccountschema.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that LogicAppIntegrationAccountSchema depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type logicAppIntegrationAccountSchemaAttributes struct {
	ref terra.Reference
}

func (laias logicAppIntegrationAccountSchemaAttributes) Content() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("content"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) FileName() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("file_name"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("id"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) IntegrationAccountName() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("integration_account_name"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) Metadata() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("metadata"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) Name() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("name"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(laias.ref.Append("resource_group_name"))
}

func (laias logicAppIntegrationAccountSchemaAttributes) Timeouts() logicappintegrationaccountschema.TimeoutsAttributes {
	return terra.ReferenceSingle[logicappintegrationaccountschema.TimeoutsAttributes](laias.ref.Append("timeouts"))
}

type logicAppIntegrationAccountSchemaState struct {
	Content                string                                          `json:"content"`
	FileName               string                                          `json:"file_name"`
	Id                     string                                          `json:"id"`
	IntegrationAccountName string                                          `json:"integration_account_name"`
	Metadata               string                                          `json:"metadata"`
	Name                   string                                          `json:"name"`
	ResourceGroupName      string                                          `json:"resource_group_name"`
	Timeouts               *logicappintegrationaccountschema.TimeoutsState `json:"timeouts"`
}
