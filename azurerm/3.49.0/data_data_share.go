// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datadatashare "github.com/golingon/terraproviders/azurerm/3.49.0/datadatashare"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataDataShare(name string, args DataDataShareArgs) *DataDataShare {
	return &DataDataShare{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDataShare)(nil)

type DataDataShare struct {
	Name string
	Args DataDataShareArgs
}

func (ds *DataDataShare) DataSource() string {
	return "azurerm_data_share"
}

func (ds *DataDataShare) LocalName() string {
	return ds.Name
}

func (ds *DataDataShare) Configuration() interface{} {
	return ds.Args
}

func (ds *DataDataShare) Attributes() dataDataShareAttributes {
	return dataDataShareAttributes{ref: terra.ReferenceDataResource(ds)}
}

type DataDataShareArgs struct {
	// AccountId: string, required
	AccountId terra.StringValue `hcl:"account_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SnapshotSchedule: min=0
	SnapshotSchedule []datadatashare.SnapshotSchedule `hcl:"snapshot_schedule,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datadatashare.Timeouts `hcl:"timeouts,block"`
}
type dataDataShareAttributes struct {
	ref terra.Reference
}

func (ds dataDataShareAttributes) AccountId() terra.StringValue {
	return terra.ReferenceString(ds.ref.Append("account_id"))
}

func (ds dataDataShareAttributes) Description() terra.StringValue {
	return terra.ReferenceString(ds.ref.Append("description"))
}

func (ds dataDataShareAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ds.ref.Append("id"))
}

func (ds dataDataShareAttributes) Kind() terra.StringValue {
	return terra.ReferenceString(ds.ref.Append("kind"))
}

func (ds dataDataShareAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ds.ref.Append("name"))
}

func (ds dataDataShareAttributes) Terms() terra.StringValue {
	return terra.ReferenceString(ds.ref.Append("terms"))
}

func (ds dataDataShareAttributes) SnapshotSchedule() terra.ListValue[datadatashare.SnapshotScheduleAttributes] {
	return terra.ReferenceList[datadatashare.SnapshotScheduleAttributes](ds.ref.Append("snapshot_schedule"))
}

func (ds dataDataShareAttributes) Timeouts() datadatashare.TimeoutsAttributes {
	return terra.ReferenceSingle[datadatashare.TimeoutsAttributes](ds.ref.Append("timeouts"))
}
