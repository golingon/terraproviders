// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datacontainerregistryscopemap "github.com/golingon/terraproviders/azurerm/3.49.0/datacontainerregistryscopemap"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataContainerRegistryScopeMap(name string, args DataContainerRegistryScopeMapArgs) *DataContainerRegistryScopeMap {
	return &DataContainerRegistryScopeMap{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataContainerRegistryScopeMap)(nil)

type DataContainerRegistryScopeMap struct {
	Name string
	Args DataContainerRegistryScopeMapArgs
}

func (crsm *DataContainerRegistryScopeMap) DataSource() string {
	return "azurerm_container_registry_scope_map"
}

func (crsm *DataContainerRegistryScopeMap) LocalName() string {
	return crsm.Name
}

func (crsm *DataContainerRegistryScopeMap) Configuration() interface{} {
	return crsm.Args
}

func (crsm *DataContainerRegistryScopeMap) Attributes() dataContainerRegistryScopeMapAttributes {
	return dataContainerRegistryScopeMapAttributes{ref: terra.ReferenceDataResource(crsm)}
}

type DataContainerRegistryScopeMapArgs struct {
	// ContainerRegistryName: string, required
	ContainerRegistryName terra.StringValue `hcl:"container_registry_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datacontainerregistryscopemap.Timeouts `hcl:"timeouts,block"`
}
type dataContainerRegistryScopeMapAttributes struct {
	ref terra.Reference
}

func (crsm dataContainerRegistryScopeMapAttributes) Actions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](crsm.ref.Append("actions"))
}

func (crsm dataContainerRegistryScopeMapAttributes) ContainerRegistryName() terra.StringValue {
	return terra.ReferenceString(crsm.ref.Append("container_registry_name"))
}

func (crsm dataContainerRegistryScopeMapAttributes) Description() terra.StringValue {
	return terra.ReferenceString(crsm.ref.Append("description"))
}

func (crsm dataContainerRegistryScopeMapAttributes) Id() terra.StringValue {
	return terra.ReferenceString(crsm.ref.Append("id"))
}

func (crsm dataContainerRegistryScopeMapAttributes) Name() terra.StringValue {
	return terra.ReferenceString(crsm.ref.Append("name"))
}

func (crsm dataContainerRegistryScopeMapAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(crsm.ref.Append("resource_group_name"))
}

func (crsm dataContainerRegistryScopeMapAttributes) Timeouts() datacontainerregistryscopemap.TimeoutsAttributes {
	return terra.ReferenceSingle[datacontainerregistryscopemap.TimeoutsAttributes](crsm.ref.Append("timeouts"))
}
