// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementidentityprovidermicrosoft "github.com/golingon/terraproviders/azurerm/3.49.0/apimanagementidentityprovidermicrosoft"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApiManagementIdentityProviderMicrosoft(name string, args ApiManagementIdentityProviderMicrosoftArgs) *ApiManagementIdentityProviderMicrosoft {
	return &ApiManagementIdentityProviderMicrosoft{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementIdentityProviderMicrosoft)(nil)

type ApiManagementIdentityProviderMicrosoft struct {
	Name  string
	Args  ApiManagementIdentityProviderMicrosoftArgs
	state *apiManagementIdentityProviderMicrosoftState
}

func (amipm *ApiManagementIdentityProviderMicrosoft) Type() string {
	return "azurerm_api_management_identity_provider_microsoft"
}

func (amipm *ApiManagementIdentityProviderMicrosoft) LocalName() string {
	return amipm.Name
}

func (amipm *ApiManagementIdentityProviderMicrosoft) Configuration() interface{} {
	return amipm.Args
}

func (amipm *ApiManagementIdentityProviderMicrosoft) Attributes() apiManagementIdentityProviderMicrosoftAttributes {
	return apiManagementIdentityProviderMicrosoftAttributes{ref: terra.ReferenceResource(amipm)}
}

func (amipm *ApiManagementIdentityProviderMicrosoft) ImportState(av io.Reader) error {
	amipm.state = &apiManagementIdentityProviderMicrosoftState{}
	if err := json.NewDecoder(av).Decode(amipm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amipm.Type(), amipm.LocalName(), err)
	}
	return nil
}

func (amipm *ApiManagementIdentityProviderMicrosoft) State() (*apiManagementIdentityProviderMicrosoftState, bool) {
	return amipm.state, amipm.state != nil
}

func (amipm *ApiManagementIdentityProviderMicrosoft) StateMust() *apiManagementIdentityProviderMicrosoftState {
	if amipm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amipm.Type(), amipm.LocalName()))
	}
	return amipm.state
}

func (amipm *ApiManagementIdentityProviderMicrosoft) DependOn() terra.Reference {
	return terra.ReferenceResource(amipm)
}

type ApiManagementIdentityProviderMicrosoftArgs struct {
	// ApiManagementName: string, required
	ApiManagementName terra.StringValue `hcl:"api_management_name,attr" validate:"required"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *apimanagementidentityprovidermicrosoft.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApiManagementIdentityProviderMicrosoft depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type apiManagementIdentityProviderMicrosoftAttributes struct {
	ref terra.Reference
}

func (amipm apiManagementIdentityProviderMicrosoftAttributes) ApiManagementName() terra.StringValue {
	return terra.ReferenceString(amipm.ref.Append("api_management_name"))
}

func (amipm apiManagementIdentityProviderMicrosoftAttributes) ClientId() terra.StringValue {
	return terra.ReferenceString(amipm.ref.Append("client_id"))
}

func (amipm apiManagementIdentityProviderMicrosoftAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceString(amipm.ref.Append("client_secret"))
}

func (amipm apiManagementIdentityProviderMicrosoftAttributes) Id() terra.StringValue {
	return terra.ReferenceString(amipm.ref.Append("id"))
}

func (amipm apiManagementIdentityProviderMicrosoftAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(amipm.ref.Append("resource_group_name"))
}

func (amipm apiManagementIdentityProviderMicrosoftAttributes) Timeouts() apimanagementidentityprovidermicrosoft.TimeoutsAttributes {
	return terra.ReferenceSingle[apimanagementidentityprovidermicrosoft.TimeoutsAttributes](amipm.ref.Append("timeouts"))
}

type apiManagementIdentityProviderMicrosoftState struct {
	ApiManagementName string                                                `json:"api_management_name"`
	ClientId          string                                                `json:"client_id"`
	ClientSecret      string                                                `json:"client_secret"`
	Id                string                                                `json:"id"`
	ResourceGroupName string                                                `json:"resource_group_name"`
	Timeouts          *apimanagementidentityprovidermicrosoft.TimeoutsState `json:"timeouts"`
}
