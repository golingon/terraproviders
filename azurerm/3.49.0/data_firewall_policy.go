// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datafirewallpolicy "github.com/golingon/terraproviders/azurerm/3.49.0/datafirewallpolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataFirewallPolicy(name string, args DataFirewallPolicyArgs) *DataFirewallPolicy {
	return &DataFirewallPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataFirewallPolicy)(nil)

type DataFirewallPolicy struct {
	Name string
	Args DataFirewallPolicyArgs
}

func (fp *DataFirewallPolicy) DataSource() string {
	return "azurerm_firewall_policy"
}

func (fp *DataFirewallPolicy) LocalName() string {
	return fp.Name
}

func (fp *DataFirewallPolicy) Configuration() interface{} {
	return fp.Args
}

func (fp *DataFirewallPolicy) Attributes() dataFirewallPolicyAttributes {
	return dataFirewallPolicyAttributes{ref: terra.ReferenceDataResource(fp)}
}

type DataFirewallPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Dns: min=0
	Dns []datafirewallpolicy.Dns `hcl:"dns,block" validate:"min=0"`
	// ThreatIntelligenceAllowlist: min=0
	ThreatIntelligenceAllowlist []datafirewallpolicy.ThreatIntelligenceAllowlist `hcl:"threat_intelligence_allowlist,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datafirewallpolicy.Timeouts `hcl:"timeouts,block"`
}
type dataFirewallPolicyAttributes struct {
	ref terra.Reference
}

func (fp dataFirewallPolicyAttributes) BasePolicyId() terra.StringValue {
	return terra.ReferenceString(fp.ref.Append("base_policy_id"))
}

func (fp dataFirewallPolicyAttributes) ChildPolicies() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](fp.ref.Append("child_policies"))
}

func (fp dataFirewallPolicyAttributes) Firewalls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](fp.ref.Append("firewalls"))
}

func (fp dataFirewallPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(fp.ref.Append("id"))
}

func (fp dataFirewallPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceString(fp.ref.Append("location"))
}

func (fp dataFirewallPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(fp.ref.Append("name"))
}

func (fp dataFirewallPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(fp.ref.Append("resource_group_name"))
}

func (fp dataFirewallPolicyAttributes) RuleCollectionGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](fp.ref.Append("rule_collection_groups"))
}

func (fp dataFirewallPolicyAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](fp.ref.Append("tags"))
}

func (fp dataFirewallPolicyAttributes) ThreatIntelligenceMode() terra.StringValue {
	return terra.ReferenceString(fp.ref.Append("threat_intelligence_mode"))
}

func (fp dataFirewallPolicyAttributes) Dns() terra.ListValue[datafirewallpolicy.DnsAttributes] {
	return terra.ReferenceList[datafirewallpolicy.DnsAttributes](fp.ref.Append("dns"))
}

func (fp dataFirewallPolicyAttributes) ThreatIntelligenceAllowlist() terra.ListValue[datafirewallpolicy.ThreatIntelligenceAllowlistAttributes] {
	return terra.ReferenceList[datafirewallpolicy.ThreatIntelligenceAllowlistAttributes](fp.ref.Append("threat_intelligence_allowlist"))
}

func (fp dataFirewallPolicyAttributes) Timeouts() datafirewallpolicy.TimeoutsAttributes {
	return terra.ReferenceSingle[datafirewallpolicy.TimeoutsAttributes](fp.ref.Append("timeouts"))
}
