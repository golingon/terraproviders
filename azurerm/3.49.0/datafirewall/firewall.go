// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datafirewall

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type IpConfiguration struct{}

type ManagementIpConfiguration struct{}

type VirtualHub struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type IpConfigurationAttributes struct {
	ref terra.Reference
}

func (ic IpConfigurationAttributes) InternalRef() terra.Reference {
	return ic.ref
}

func (ic IpConfigurationAttributes) InternalWithRef(ref terra.Reference) IpConfigurationAttributes {
	return IpConfigurationAttributes{ref: ref}
}

func (ic IpConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return ic.ref.InternalTokens()
}

func (ic IpConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("name"))
}

func (ic IpConfigurationAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("private_ip_address"))
}

func (ic IpConfigurationAttributes) PublicIpAddressId() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("public_ip_address_id"))
}

func (ic IpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceString(ic.ref.Append("subnet_id"))
}

type ManagementIpConfigurationAttributes struct {
	ref terra.Reference
}

func (mic ManagementIpConfigurationAttributes) InternalRef() terra.Reference {
	return mic.ref
}

func (mic ManagementIpConfigurationAttributes) InternalWithRef(ref terra.Reference) ManagementIpConfigurationAttributes {
	return ManagementIpConfigurationAttributes{ref: ref}
}

func (mic ManagementIpConfigurationAttributes) InternalTokens() hclwrite.Tokens {
	return mic.ref.InternalTokens()
}

func (mic ManagementIpConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceString(mic.ref.Append("name"))
}

func (mic ManagementIpConfigurationAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceString(mic.ref.Append("private_ip_address"))
}

func (mic ManagementIpConfigurationAttributes) PublicIpAddressId() terra.StringValue {
	return terra.ReferenceString(mic.ref.Append("public_ip_address_id"))
}

func (mic ManagementIpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceString(mic.ref.Append("subnet_id"))
}

type VirtualHubAttributes struct {
	ref terra.Reference
}

func (vh VirtualHubAttributes) InternalRef() terra.Reference {
	return vh.ref
}

func (vh VirtualHubAttributes) InternalWithRef(ref terra.Reference) VirtualHubAttributes {
	return VirtualHubAttributes{ref: ref}
}

func (vh VirtualHubAttributes) InternalTokens() hclwrite.Tokens {
	return vh.ref.InternalTokens()
}

func (vh VirtualHubAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceString(vh.ref.Append("private_ip_address"))
}

func (vh VirtualHubAttributes) PublicIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](vh.ref.Append("public_ip_addresses"))
}

func (vh VirtualHubAttributes) PublicIpCount() terra.NumberValue {
	return terra.ReferenceNumber(vh.ref.Append("public_ip_count"))
}

func (vh VirtualHubAttributes) VirtualHubId() terra.StringValue {
	return terra.ReferenceString(vh.ref.Append("virtual_hub_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

type IpConfigurationState struct {
	Name              string `json:"name"`
	PrivateIpAddress  string `json:"private_ip_address"`
	PublicIpAddressId string `json:"public_ip_address_id"`
	SubnetId          string `json:"subnet_id"`
}

type ManagementIpConfigurationState struct {
	Name              string `json:"name"`
	PrivateIpAddress  string `json:"private_ip_address"`
	PublicIpAddressId string `json:"public_ip_address_id"`
	SubnetId          string `json:"subnet_id"`
}

type VirtualHubState struct {
	PrivateIpAddress  string   `json:"private_ip_address"`
	PublicIpAddresses []string `json:"public_ip_addresses"`
	PublicIpCount     float64  `json:"public_ip_count"`
	VirtualHubId      string   `json:"virtual_hub_id"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
