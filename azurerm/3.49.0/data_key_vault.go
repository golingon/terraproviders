// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datakeyvault "github.com/golingon/terraproviders/azurerm/3.49.0/datakeyvault"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataKeyVault(name string, args DataKeyVaultArgs) *DataKeyVault {
	return &DataKeyVault{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataKeyVault)(nil)

type DataKeyVault struct {
	Name string
	Args DataKeyVaultArgs
}

func (kv *DataKeyVault) DataSource() string {
	return "azurerm_key_vault"
}

func (kv *DataKeyVault) LocalName() string {
	return kv.Name
}

func (kv *DataKeyVault) Configuration() interface{} {
	return kv.Args
}

func (kv *DataKeyVault) Attributes() dataKeyVaultAttributes {
	return dataKeyVaultAttributes{ref: terra.ReferenceDataResource(kv)}
}

type DataKeyVaultArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// AccessPolicy: min=0
	AccessPolicy []datakeyvault.AccessPolicy `hcl:"access_policy,block" validate:"min=0"`
	// NetworkAcls: min=0
	NetworkAcls []datakeyvault.NetworkAcls `hcl:"network_acls,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datakeyvault.Timeouts `hcl:"timeouts,block"`
}
type dataKeyVaultAttributes struct {
	ref terra.Reference
}

func (kv dataKeyVaultAttributes) EnableRbacAuthorization() terra.BoolValue {
	return terra.ReferenceBool(kv.ref.Append("enable_rbac_authorization"))
}

func (kv dataKeyVaultAttributes) EnabledForDeployment() terra.BoolValue {
	return terra.ReferenceBool(kv.ref.Append("enabled_for_deployment"))
}

func (kv dataKeyVaultAttributes) EnabledForDiskEncryption() terra.BoolValue {
	return terra.ReferenceBool(kv.ref.Append("enabled_for_disk_encryption"))
}

func (kv dataKeyVaultAttributes) EnabledForTemplateDeployment() terra.BoolValue {
	return terra.ReferenceBool(kv.ref.Append("enabled_for_template_deployment"))
}

func (kv dataKeyVaultAttributes) Id() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("id"))
}

func (kv dataKeyVaultAttributes) Location() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("location"))
}

func (kv dataKeyVaultAttributes) Name() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("name"))
}

func (kv dataKeyVaultAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceBool(kv.ref.Append("public_network_access_enabled"))
}

func (kv dataKeyVaultAttributes) PurgeProtectionEnabled() terra.BoolValue {
	return terra.ReferenceBool(kv.ref.Append("purge_protection_enabled"))
}

func (kv dataKeyVaultAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("resource_group_name"))
}

func (kv dataKeyVaultAttributes) SkuName() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("sku_name"))
}

func (kv dataKeyVaultAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](kv.ref.Append("tags"))
}

func (kv dataKeyVaultAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("tenant_id"))
}

func (kv dataKeyVaultAttributes) VaultUri() terra.StringValue {
	return terra.ReferenceString(kv.ref.Append("vault_uri"))
}

func (kv dataKeyVaultAttributes) AccessPolicy() terra.ListValue[datakeyvault.AccessPolicyAttributes] {
	return terra.ReferenceList[datakeyvault.AccessPolicyAttributes](kv.ref.Append("access_policy"))
}

func (kv dataKeyVaultAttributes) NetworkAcls() terra.ListValue[datakeyvault.NetworkAclsAttributes] {
	return terra.ReferenceList[datakeyvault.NetworkAclsAttributes](kv.ref.Append("network_acls"))
}

func (kv dataKeyVaultAttributes) Timeouts() datakeyvault.TimeoutsAttributes {
	return terra.ReferenceSingle[datakeyvault.TimeoutsAttributes](kv.ref.Append("timeouts"))
}
