// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	privatednsresolverinboundendpoint "github.com/golingon/terraproviders/azurerm/3.49.0/privatednsresolverinboundendpoint"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewPrivateDnsResolverInboundEndpoint(name string, args PrivateDnsResolverInboundEndpointArgs) *PrivateDnsResolverInboundEndpoint {
	return &PrivateDnsResolverInboundEndpoint{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PrivateDnsResolverInboundEndpoint)(nil)

type PrivateDnsResolverInboundEndpoint struct {
	Name  string
	Args  PrivateDnsResolverInboundEndpointArgs
	state *privateDnsResolverInboundEndpointState
}

func (pdrie *PrivateDnsResolverInboundEndpoint) Type() string {
	return "azurerm_private_dns_resolver_inbound_endpoint"
}

func (pdrie *PrivateDnsResolverInboundEndpoint) LocalName() string {
	return pdrie.Name
}

func (pdrie *PrivateDnsResolverInboundEndpoint) Configuration() interface{} {
	return pdrie.Args
}

func (pdrie *PrivateDnsResolverInboundEndpoint) Attributes() privateDnsResolverInboundEndpointAttributes {
	return privateDnsResolverInboundEndpointAttributes{ref: terra.ReferenceResource(pdrie)}
}

func (pdrie *PrivateDnsResolverInboundEndpoint) ImportState(av io.Reader) error {
	pdrie.state = &privateDnsResolverInboundEndpointState{}
	if err := json.NewDecoder(av).Decode(pdrie.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", pdrie.Type(), pdrie.LocalName(), err)
	}
	return nil
}

func (pdrie *PrivateDnsResolverInboundEndpoint) State() (*privateDnsResolverInboundEndpointState, bool) {
	return pdrie.state, pdrie.state != nil
}

func (pdrie *PrivateDnsResolverInboundEndpoint) StateMust() *privateDnsResolverInboundEndpointState {
	if pdrie.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", pdrie.Type(), pdrie.LocalName()))
	}
	return pdrie.state
}

func (pdrie *PrivateDnsResolverInboundEndpoint) DependOn() terra.Reference {
	return terra.ReferenceResource(pdrie)
}

type PrivateDnsResolverInboundEndpointArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrivateDnsResolverId: string, required
	PrivateDnsResolverId terra.StringValue `hcl:"private_dns_resolver_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// IpConfigurations: min=1
	IpConfigurations []privatednsresolverinboundendpoint.IpConfigurations `hcl:"ip_configurations,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *privatednsresolverinboundendpoint.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that PrivateDnsResolverInboundEndpoint depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type privateDnsResolverInboundEndpointAttributes struct {
	ref terra.Reference
}

func (pdrie privateDnsResolverInboundEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceString(pdrie.ref.Append("id"))
}

func (pdrie privateDnsResolverInboundEndpointAttributes) Location() terra.StringValue {
	return terra.ReferenceString(pdrie.ref.Append("location"))
}

func (pdrie privateDnsResolverInboundEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceString(pdrie.ref.Append("name"))
}

func (pdrie privateDnsResolverInboundEndpointAttributes) PrivateDnsResolverId() terra.StringValue {
	return terra.ReferenceString(pdrie.ref.Append("private_dns_resolver_id"))
}

func (pdrie privateDnsResolverInboundEndpointAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](pdrie.ref.Append("tags"))
}

func (pdrie privateDnsResolverInboundEndpointAttributes) IpConfigurations() terra.ListValue[privatednsresolverinboundendpoint.IpConfigurationsAttributes] {
	return terra.ReferenceList[privatednsresolverinboundendpoint.IpConfigurationsAttributes](pdrie.ref.Append("ip_configurations"))
}

func (pdrie privateDnsResolverInboundEndpointAttributes) Timeouts() privatednsresolverinboundendpoint.TimeoutsAttributes {
	return terra.ReferenceSingle[privatednsresolverinboundendpoint.TimeoutsAttributes](pdrie.ref.Append("timeouts"))
}

type privateDnsResolverInboundEndpointState struct {
	Id                   string                                                    `json:"id"`
	Location             string                                                    `json:"location"`
	Name                 string                                                    `json:"name"`
	PrivateDnsResolverId string                                                    `json:"private_dns_resolver_id"`
	Tags                 map[string]string                                         `json:"tags"`
	IpConfigurations     []privatednsresolverinboundendpoint.IpConfigurationsState `json:"ip_configurations"`
	Timeouts             *privatednsresolverinboundendpoint.TimeoutsState          `json:"timeouts"`
}
