// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	cdnfrontdoorroutedisablelinktodefaultdomain "github.com/golingon/terraproviders/azurerm/3.49.0/cdnfrontdoorroutedisablelinktodefaultdomain"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewCdnFrontdoorRouteDisableLinkToDefaultDomain(name string, args CdnFrontdoorRouteDisableLinkToDefaultDomainArgs) *CdnFrontdoorRouteDisableLinkToDefaultDomain {
	return &CdnFrontdoorRouteDisableLinkToDefaultDomain{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*CdnFrontdoorRouteDisableLinkToDefaultDomain)(nil)

type CdnFrontdoorRouteDisableLinkToDefaultDomain struct {
	Name  string
	Args  CdnFrontdoorRouteDisableLinkToDefaultDomainArgs
	state *cdnFrontdoorRouteDisableLinkToDefaultDomainState
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) Type() string {
	return "azurerm_cdn_frontdoor_route_disable_link_to_default_domain"
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) LocalName() string {
	return cfrdltdd.Name
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) Configuration() interface{} {
	return cfrdltdd.Args
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) Attributes() cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes {
	return cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes{ref: terra.ReferenceResource(cfrdltdd)}
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) ImportState(av io.Reader) error {
	cfrdltdd.state = &cdnFrontdoorRouteDisableLinkToDefaultDomainState{}
	if err := json.NewDecoder(av).Decode(cfrdltdd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cfrdltdd.Type(), cfrdltdd.LocalName(), err)
	}
	return nil
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) State() (*cdnFrontdoorRouteDisableLinkToDefaultDomainState, bool) {
	return cfrdltdd.state, cfrdltdd.state != nil
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) StateMust() *cdnFrontdoorRouteDisableLinkToDefaultDomainState {
	if cfrdltdd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cfrdltdd.Type(), cfrdltdd.LocalName()))
	}
	return cfrdltdd.state
}

func (cfrdltdd *CdnFrontdoorRouteDisableLinkToDefaultDomain) DependOn() terra.Reference {
	return terra.ReferenceResource(cfrdltdd)
}

type CdnFrontdoorRouteDisableLinkToDefaultDomainArgs struct {
	// CdnFrontdoorCustomDomainIds: list of string, required
	CdnFrontdoorCustomDomainIds terra.ListValue[terra.StringValue] `hcl:"cdn_frontdoor_custom_domain_ids,attr" validate:"required"`
	// CdnFrontdoorRouteId: string, required
	CdnFrontdoorRouteId terra.StringValue `hcl:"cdn_frontdoor_route_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *cdnfrontdoorroutedisablelinktodefaultdomain.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that CdnFrontdoorRouteDisableLinkToDefaultDomain depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes struct {
	ref terra.Reference
}

func (cfrdltdd cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes) CdnFrontdoorCustomDomainIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceList[terra.StringValue](cfrdltdd.ref.Append("cdn_frontdoor_custom_domain_ids"))
}

func (cfrdltdd cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes) CdnFrontdoorRouteId() terra.StringValue {
	return terra.ReferenceString(cfrdltdd.ref.Append("cdn_frontdoor_route_id"))
}

func (cfrdltdd cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceString(cfrdltdd.ref.Append("id"))
}

func (cfrdltdd cdnFrontdoorRouteDisableLinkToDefaultDomainAttributes) Timeouts() cdnfrontdoorroutedisablelinktodefaultdomain.TimeoutsAttributes {
	return terra.ReferenceSingle[cdnfrontdoorroutedisablelinktodefaultdomain.TimeoutsAttributes](cfrdltdd.ref.Append("timeouts"))
}

type cdnFrontdoorRouteDisableLinkToDefaultDomainState struct {
	CdnFrontdoorCustomDomainIds []string                                                   `json:"cdn_frontdoor_custom_domain_ids"`
	CdnFrontdoorRouteId         string                                                     `json:"cdn_frontdoor_route_id"`
	Id                          string                                                     `json:"id"`
	Timeouts                    *cdnfrontdoorroutedisablelinktodefaultdomain.TimeoutsState `json:"timeouts"`
}
