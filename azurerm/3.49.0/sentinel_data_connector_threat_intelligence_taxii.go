// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentineldataconnectorthreatintelligencetaxii "github.com/golingon/terraproviders/azurerm/3.49.0/sentineldataconnectorthreatintelligencetaxii"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelDataConnectorThreatIntelligenceTaxii(name string, args SentinelDataConnectorThreatIntelligenceTaxiiArgs) *SentinelDataConnectorThreatIntelligenceTaxii {
	return &SentinelDataConnectorThreatIntelligenceTaxii{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelDataConnectorThreatIntelligenceTaxii)(nil)

type SentinelDataConnectorThreatIntelligenceTaxii struct {
	Name  string
	Args  SentinelDataConnectorThreatIntelligenceTaxiiArgs
	state *sentinelDataConnectorThreatIntelligenceTaxiiState
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) Type() string {
	return "azurerm_sentinel_data_connector_threat_intelligence_taxii"
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) LocalName() string {
	return sdctit.Name
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) Configuration() interface{} {
	return sdctit.Args
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) Attributes() sentinelDataConnectorThreatIntelligenceTaxiiAttributes {
	return sentinelDataConnectorThreatIntelligenceTaxiiAttributes{ref: terra.ReferenceResource(sdctit)}
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) ImportState(av io.Reader) error {
	sdctit.state = &sentinelDataConnectorThreatIntelligenceTaxiiState{}
	if err := json.NewDecoder(av).Decode(sdctit.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdctit.Type(), sdctit.LocalName(), err)
	}
	return nil
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) State() (*sentinelDataConnectorThreatIntelligenceTaxiiState, bool) {
	return sdctit.state, sdctit.state != nil
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) StateMust() *sentinelDataConnectorThreatIntelligenceTaxiiState {
	if sdctit.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdctit.Type(), sdctit.LocalName()))
	}
	return sdctit.state
}

func (sdctit *SentinelDataConnectorThreatIntelligenceTaxii) DependOn() terra.Reference {
	return terra.ReferenceResource(sdctit)
}

type SentinelDataConnectorThreatIntelligenceTaxiiArgs struct {
	// ApiRootUrl: string, required
	ApiRootUrl terra.StringValue `hcl:"api_root_url,attr" validate:"required"`
	// CollectionId: string, required
	CollectionId terra.StringValue `hcl:"collection_id,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// LookbackDate: string, optional
	LookbackDate terra.StringValue `hcl:"lookback_date,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Password: string, optional
	Password terra.StringValue `hcl:"password,attr"`
	// PollingFrequency: string, optional
	PollingFrequency terra.StringValue `hcl:"polling_frequency,attr"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// UserName: string, optional
	UserName terra.StringValue `hcl:"user_name,attr"`
	// Timeouts: optional
	Timeouts *sentineldataconnectorthreatintelligencetaxii.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelDataConnectorThreatIntelligenceTaxii depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelDataConnectorThreatIntelligenceTaxiiAttributes struct {
	ref terra.Reference
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) ApiRootUrl() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("api_root_url"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) CollectionId() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("collection_id"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("display_name"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("id"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("log_analytics_workspace_id"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) LookbackDate() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("lookback_date"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("name"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) Password() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("password"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) PollingFrequency() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("polling_frequency"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("tenant_id"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) UserName() terra.StringValue {
	return terra.ReferenceString(sdctit.ref.Append("user_name"))
}

func (sdctit sentinelDataConnectorThreatIntelligenceTaxiiAttributes) Timeouts() sentineldataconnectorthreatintelligencetaxii.TimeoutsAttributes {
	return terra.ReferenceSingle[sentineldataconnectorthreatintelligencetaxii.TimeoutsAttributes](sdctit.ref.Append("timeouts"))
}

type sentinelDataConnectorThreatIntelligenceTaxiiState struct {
	ApiRootUrl              string                                                      `json:"api_root_url"`
	CollectionId            string                                                      `json:"collection_id"`
	DisplayName             string                                                      `json:"display_name"`
	Id                      string                                                      `json:"id"`
	LogAnalyticsWorkspaceId string                                                      `json:"log_analytics_workspace_id"`
	LookbackDate            string                                                      `json:"lookback_date"`
	Name                    string                                                      `json:"name"`
	Password                string                                                      `json:"password"`
	PollingFrequency        string                                                      `json:"polling_frequency"`
	TenantId                string                                                      `json:"tenant_id"`
	UserName                string                                                      `json:"user_name"`
	Timeouts                *sentineldataconnectorthreatintelligencetaxii.TimeoutsState `json:"timeouts"`
}
