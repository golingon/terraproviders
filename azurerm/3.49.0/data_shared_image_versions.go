// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datasharedimageversions "github.com/golingon/terraproviders/azurerm/3.49.0/datasharedimageversions"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataSharedImageVersions(name string, args DataSharedImageVersionsArgs) *DataSharedImageVersions {
	return &DataSharedImageVersions{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSharedImageVersions)(nil)

type DataSharedImageVersions struct {
	Name string
	Args DataSharedImageVersionsArgs
}

func (siv *DataSharedImageVersions) DataSource() string {
	return "azurerm_shared_image_versions"
}

func (siv *DataSharedImageVersions) LocalName() string {
	return siv.Name
}

func (siv *DataSharedImageVersions) Configuration() interface{} {
	return siv.Args
}

func (siv *DataSharedImageVersions) Attributes() dataSharedImageVersionsAttributes {
	return dataSharedImageVersionsAttributes{ref: terra.ReferenceDataResource(siv)}
}

type DataSharedImageVersionsArgs struct {
	// GalleryName: string, required
	GalleryName terra.StringValue `hcl:"gallery_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImageName: string, required
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// TagsFilter: map of string, optional
	TagsFilter terra.MapValue[terra.StringValue] `hcl:"tags_filter,attr"`
	// Images: min=0
	Images []datasharedimageversions.Images `hcl:"images,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datasharedimageversions.Timeouts `hcl:"timeouts,block"`
}
type dataSharedImageVersionsAttributes struct {
	ref terra.Reference
}

func (siv dataSharedImageVersionsAttributes) GalleryName() terra.StringValue {
	return terra.ReferenceString(siv.ref.Append("gallery_name"))
}

func (siv dataSharedImageVersionsAttributes) Id() terra.StringValue {
	return terra.ReferenceString(siv.ref.Append("id"))
}

func (siv dataSharedImageVersionsAttributes) ImageName() terra.StringValue {
	return terra.ReferenceString(siv.ref.Append("image_name"))
}

func (siv dataSharedImageVersionsAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(siv.ref.Append("resource_group_name"))
}

func (siv dataSharedImageVersionsAttributes) TagsFilter() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](siv.ref.Append("tags_filter"))
}

func (siv dataSharedImageVersionsAttributes) Images() terra.ListValue[datasharedimageversions.ImagesAttributes] {
	return terra.ReferenceList[datasharedimageversions.ImagesAttributes](siv.ref.Append("images"))
}

func (siv dataSharedImageVersionsAttributes) Timeouts() datasharedimageversions.TimeoutsAttributes {
	return terra.ReferenceSingle[datasharedimageversions.TimeoutsAttributes](siv.ref.Append("timeouts"))
}
