// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package virtualnetworkgatewaynatrule

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ExternalMapping struct {
	// AddressSpace: string, required
	AddressSpace terra.StringValue `hcl:"address_space,attr" validate:"required"`
	// PortRange: string, optional
	PortRange terra.StringValue `hcl:"port_range,attr"`
}

type InternalMapping struct {
	// AddressSpace: string, required
	AddressSpace terra.StringValue `hcl:"address_space,attr" validate:"required"`
	// PortRange: string, optional
	PortRange terra.StringValue `hcl:"port_range,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ExternalMappingAttributes struct {
	ref terra.Reference
}

func (em ExternalMappingAttributes) InternalRef() terra.Reference {
	return em.ref
}

func (em ExternalMappingAttributes) InternalWithRef(ref terra.Reference) ExternalMappingAttributes {
	return ExternalMappingAttributes{ref: ref}
}

func (em ExternalMappingAttributes) InternalTokens() hclwrite.Tokens {
	return em.ref.InternalTokens()
}

func (em ExternalMappingAttributes) AddressSpace() terra.StringValue {
	return terra.ReferenceString(em.ref.Append("address_space"))
}

func (em ExternalMappingAttributes) PortRange() terra.StringValue {
	return terra.ReferenceString(em.ref.Append("port_range"))
}

type InternalMappingAttributes struct {
	ref terra.Reference
}

func (im InternalMappingAttributes) InternalRef() terra.Reference {
	return im.ref
}

func (im InternalMappingAttributes) InternalWithRef(ref terra.Reference) InternalMappingAttributes {
	return InternalMappingAttributes{ref: ref}
}

func (im InternalMappingAttributes) InternalTokens() hclwrite.Tokens {
	return im.ref.InternalTokens()
}

func (im InternalMappingAttributes) AddressSpace() terra.StringValue {
	return terra.ReferenceString(im.ref.Append("address_space"))
}

func (im InternalMappingAttributes) PortRange() terra.StringValue {
	return terra.ReferenceString(im.ref.Append("port_range"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type ExternalMappingState struct {
	AddressSpace string `json:"address_space"`
	PortRange    string `json:"port_range"`
}

type InternalMappingState struct {
	AddressSpace string `json:"address_space"`
	PortRange    string `json:"port_range"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
