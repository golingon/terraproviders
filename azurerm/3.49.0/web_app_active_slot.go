// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	webappactiveslot "github.com/golingon/terraproviders/azurerm/3.49.0/webappactiveslot"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewWebAppActiveSlot(name string, args WebAppActiveSlotArgs) *WebAppActiveSlot {
	return &WebAppActiveSlot{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WebAppActiveSlot)(nil)

type WebAppActiveSlot struct {
	Name  string
	Args  WebAppActiveSlotArgs
	state *webAppActiveSlotState
}

func (waas *WebAppActiveSlot) Type() string {
	return "azurerm_web_app_active_slot"
}

func (waas *WebAppActiveSlot) LocalName() string {
	return waas.Name
}

func (waas *WebAppActiveSlot) Configuration() interface{} {
	return waas.Args
}

func (waas *WebAppActiveSlot) Attributes() webAppActiveSlotAttributes {
	return webAppActiveSlotAttributes{ref: terra.ReferenceResource(waas)}
}

func (waas *WebAppActiveSlot) ImportState(av io.Reader) error {
	waas.state = &webAppActiveSlotState{}
	if err := json.NewDecoder(av).Decode(waas.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", waas.Type(), waas.LocalName(), err)
	}
	return nil
}

func (waas *WebAppActiveSlot) State() (*webAppActiveSlotState, bool) {
	return waas.state, waas.state != nil
}

func (waas *WebAppActiveSlot) StateMust() *webAppActiveSlotState {
	if waas.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", waas.Type(), waas.LocalName()))
	}
	return waas.state
}

func (waas *WebAppActiveSlot) DependOn() terra.Reference {
	return terra.ReferenceResource(waas)
}

type WebAppActiveSlotArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OverwriteNetworkConfig: bool, optional
	OverwriteNetworkConfig terra.BoolValue `hcl:"overwrite_network_config,attr"`
	// SlotId: string, required
	SlotId terra.StringValue `hcl:"slot_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *webappactiveslot.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that WebAppActiveSlot depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type webAppActiveSlotAttributes struct {
	ref terra.Reference
}

func (waas webAppActiveSlotAttributes) Id() terra.StringValue {
	return terra.ReferenceString(waas.ref.Append("id"))
}

func (waas webAppActiveSlotAttributes) LastSuccessfulSwap() terra.StringValue {
	return terra.ReferenceString(waas.ref.Append("last_successful_swap"))
}

func (waas webAppActiveSlotAttributes) OverwriteNetworkConfig() terra.BoolValue {
	return terra.ReferenceBool(waas.ref.Append("overwrite_network_config"))
}

func (waas webAppActiveSlotAttributes) SlotId() terra.StringValue {
	return terra.ReferenceString(waas.ref.Append("slot_id"))
}

func (waas webAppActiveSlotAttributes) Timeouts() webappactiveslot.TimeoutsAttributes {
	return terra.ReferenceSingle[webappactiveslot.TimeoutsAttributes](waas.ref.Append("timeouts"))
}

type webAppActiveSlotState struct {
	Id                     string                          `json:"id"`
	LastSuccessfulSwap     string                          `json:"last_successful_swap"`
	OverwriteNetworkConfig bool                            `json:"overwrite_network_config"`
	SlotId                 string                          `json:"slot_id"`
	Timeouts               *webappactiveslot.TimeoutsState `json:"timeouts"`
}
