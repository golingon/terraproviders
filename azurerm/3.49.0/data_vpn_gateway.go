// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datavpngateway "github.com/golingon/terraproviders/azurerm/3.49.0/datavpngateway"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataVpnGateway(name string, args DataVpnGatewayArgs) *DataVpnGateway {
	return &DataVpnGateway{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVpnGateway)(nil)

type DataVpnGateway struct {
	Name string
	Args DataVpnGatewayArgs
}

func (vg *DataVpnGateway) DataSource() string {
	return "azurerm_vpn_gateway"
}

func (vg *DataVpnGateway) LocalName() string {
	return vg.Name
}

func (vg *DataVpnGateway) Configuration() interface{} {
	return vg.Args
}

func (vg *DataVpnGateway) Attributes() dataVpnGatewayAttributes {
	return dataVpnGatewayAttributes{ref: terra.ReferenceDataResource(vg)}
}

type DataVpnGatewayArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// BgpSettings: min=0
	BgpSettings []datavpngateway.BgpSettings `hcl:"bgp_settings,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datavpngateway.Timeouts `hcl:"timeouts,block"`
}
type dataVpnGatewayAttributes struct {
	ref terra.Reference
}

func (vg dataVpnGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceString(vg.ref.Append("id"))
}

func (vg dataVpnGatewayAttributes) Location() terra.StringValue {
	return terra.ReferenceString(vg.ref.Append("location"))
}

func (vg dataVpnGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceString(vg.ref.Append("name"))
}

func (vg dataVpnGatewayAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(vg.ref.Append("resource_group_name"))
}

func (vg dataVpnGatewayAttributes) ScaleUnit() terra.NumberValue {
	return terra.ReferenceNumber(vg.ref.Append("scale_unit"))
}

func (vg dataVpnGatewayAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](vg.ref.Append("tags"))
}

func (vg dataVpnGatewayAttributes) VirtualHubId() terra.StringValue {
	return terra.ReferenceString(vg.ref.Append("virtual_hub_id"))
}

func (vg dataVpnGatewayAttributes) BgpSettings() terra.ListValue[datavpngateway.BgpSettingsAttributes] {
	return terra.ReferenceList[datavpngateway.BgpSettingsAttributes](vg.ref.Append("bgp_settings"))
}

func (vg dataVpnGatewayAttributes) Timeouts() datavpngateway.TimeoutsAttributes {
	return terra.ReferenceSingle[datavpngateway.TimeoutsAttributes](vg.ref.Append("timeouts"))
}
