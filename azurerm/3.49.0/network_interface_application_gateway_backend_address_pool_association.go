// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	networkinterfaceapplicationgatewaybackendaddresspoolassociation "github.com/golingon/terraproviders/azurerm/3.49.0/networkinterfaceapplicationgatewaybackendaddresspoolassociation"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewNetworkInterfaceApplicationGatewayBackendAddressPoolAssociation(name string, args NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationArgs) *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation {
	return &NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation)(nil)

type NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation struct {
	Name  string
	Args  NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationArgs
	state *networkInterfaceApplicationGatewayBackendAddressPoolAssociationState
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) Type() string {
	return "azurerm_network_interface_application_gateway_backend_address_pool_association"
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) LocalName() string {
	return niagbapa.Name
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) Configuration() interface{} {
	return niagbapa.Args
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) Attributes() networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes {
	return networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes{ref: terra.ReferenceResource(niagbapa)}
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) ImportState(av io.Reader) error {
	niagbapa.state = &networkInterfaceApplicationGatewayBackendAddressPoolAssociationState{}
	if err := json.NewDecoder(av).Decode(niagbapa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", niagbapa.Type(), niagbapa.LocalName(), err)
	}
	return nil
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) State() (*networkInterfaceApplicationGatewayBackendAddressPoolAssociationState, bool) {
	return niagbapa.state, niagbapa.state != nil
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) StateMust() *networkInterfaceApplicationGatewayBackendAddressPoolAssociationState {
	if niagbapa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", niagbapa.Type(), niagbapa.LocalName()))
	}
	return niagbapa.state
}

func (niagbapa *NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation) DependOn() terra.Reference {
	return terra.ReferenceResource(niagbapa)
}

type NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationArgs struct {
	// BackendAddressPoolId: string, required
	BackendAddressPoolId terra.StringValue `hcl:"backend_address_pool_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpConfigurationName: string, required
	IpConfigurationName terra.StringValue `hcl:"ip_configuration_name,attr" validate:"required"`
	// NetworkInterfaceId: string, required
	NetworkInterfaceId terra.StringValue `hcl:"network_interface_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *networkinterfaceapplicationgatewaybackendaddresspoolassociation.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes struct {
	ref terra.Reference
}

func (niagbapa networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes) BackendAddressPoolId() terra.StringValue {
	return terra.ReferenceString(niagbapa.ref.Append("backend_address_pool_id"))
}

func (niagbapa networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceString(niagbapa.ref.Append("id"))
}

func (niagbapa networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes) IpConfigurationName() terra.StringValue {
	return terra.ReferenceString(niagbapa.ref.Append("ip_configuration_name"))
}

func (niagbapa networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceString(niagbapa.ref.Append("network_interface_id"))
}

func (niagbapa networkInterfaceApplicationGatewayBackendAddressPoolAssociationAttributes) Timeouts() networkinterfaceapplicationgatewaybackendaddresspoolassociation.TimeoutsAttributes {
	return terra.ReferenceSingle[networkinterfaceapplicationgatewaybackendaddresspoolassociation.TimeoutsAttributes](niagbapa.ref.Append("timeouts"))
}

type networkInterfaceApplicationGatewayBackendAddressPoolAssociationState struct {
	BackendAddressPoolId string                                                                         `json:"backend_address_pool_id"`
	Id                   string                                                                         `json:"id"`
	IpConfigurationName  string                                                                         `json:"ip_configuration_name"`
	NetworkInterfaceId   string                                                                         `json:"network_interface_id"`
	Timeouts             *networkinterfaceapplicationgatewaybackendaddresspoolassociation.TimeoutsState `json:"timeouts"`
}
