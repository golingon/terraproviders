// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package monitorscheduledqueryrulesalert

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Action struct {
	// ActionGroup: set of string, required
	ActionGroup terra.SetValue[terra.StringValue] `hcl:"action_group,attr" validate:"required"`
	// CustomWebhookPayload: string, optional
	CustomWebhookPayload terra.StringValue `hcl:"custom_webhook_payload,attr"`
	// EmailSubject: string, optional
	EmailSubject terra.StringValue `hcl:"email_subject,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type Trigger struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Threshold: number, required
	Threshold terra.NumberValue `hcl:"threshold,attr" validate:"required"`
	// MetricTrigger: optional
	MetricTrigger *MetricTrigger `hcl:"metric_trigger,block"`
}

type MetricTrigger struct {
	// MetricColumn: string, required
	MetricColumn terra.StringValue `hcl:"metric_column,attr" validate:"required"`
	// MetricTriggerType: string, required
	MetricTriggerType terra.StringValue `hcl:"metric_trigger_type,attr" validate:"required"`
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Threshold: number, required
	Threshold terra.NumberValue `hcl:"threshold,attr" validate:"required"`
}

type ActionAttributes struct {
	ref terra.Reference
}

func (a ActionAttributes) InternalRef() terra.Reference {
	return a.ref
}

func (a ActionAttributes) InternalWithRef(ref terra.Reference) ActionAttributes {
	return ActionAttributes{ref: ref}
}

func (a ActionAttributes) InternalTokens() hclwrite.Tokens {
	return a.ref.InternalTokens()
}

func (a ActionAttributes) ActionGroup() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](a.ref.Append("action_group"))
}

func (a ActionAttributes) CustomWebhookPayload() terra.StringValue {
	return terra.ReferenceString(a.ref.Append("custom_webhook_payload"))
}

func (a ActionAttributes) EmailSubject() terra.StringValue {
	return terra.ReferenceString(a.ref.Append("email_subject"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("update"))
}

type TriggerAttributes struct {
	ref terra.Reference
}

func (t TriggerAttributes) InternalRef() terra.Reference {
	return t.ref
}

func (t TriggerAttributes) InternalWithRef(ref terra.Reference) TriggerAttributes {
	return TriggerAttributes{ref: ref}
}

func (t TriggerAttributes) InternalTokens() hclwrite.Tokens {
	return t.ref.InternalTokens()
}

func (t TriggerAttributes) Operator() terra.StringValue {
	return terra.ReferenceString(t.ref.Append("operator"))
}

func (t TriggerAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceNumber(t.ref.Append("threshold"))
}

func (t TriggerAttributes) MetricTrigger() terra.ListValue[MetricTriggerAttributes] {
	return terra.ReferenceList[MetricTriggerAttributes](t.ref.Append("metric_trigger"))
}

type MetricTriggerAttributes struct {
	ref terra.Reference
}

func (mt MetricTriggerAttributes) InternalRef() terra.Reference {
	return mt.ref
}

func (mt MetricTriggerAttributes) InternalWithRef(ref terra.Reference) MetricTriggerAttributes {
	return MetricTriggerAttributes{ref: ref}
}

func (mt MetricTriggerAttributes) InternalTokens() hclwrite.Tokens {
	return mt.ref.InternalTokens()
}

func (mt MetricTriggerAttributes) MetricColumn() terra.StringValue {
	return terra.ReferenceString(mt.ref.Append("metric_column"))
}

func (mt MetricTriggerAttributes) MetricTriggerType() terra.StringValue {
	return terra.ReferenceString(mt.ref.Append("metric_trigger_type"))
}

func (mt MetricTriggerAttributes) Operator() terra.StringValue {
	return terra.ReferenceString(mt.ref.Append("operator"))
}

func (mt MetricTriggerAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceNumber(mt.ref.Append("threshold"))
}

type ActionState struct {
	ActionGroup          []string `json:"action_group"`
	CustomWebhookPayload string   `json:"custom_webhook_payload"`
	EmailSubject         string   `json:"email_subject"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}

type TriggerState struct {
	Operator      string               `json:"operator"`
	Threshold     float64              `json:"threshold"`
	MetricTrigger []MetricTriggerState `json:"metric_trigger"`
}

type MetricTriggerState struct {
	MetricColumn      string  `json:"metric_column"`
	MetricTriggerType string  `json:"metric_trigger_type"`
	Operator          string  `json:"operator"`
	Threshold         float64 `json:"threshold"`
}
