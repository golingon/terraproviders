// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datasiterecoveryreplicationrecoveryplan "github.com/golingon/terraproviders/azurerm/3.49.0/datasiterecoveryreplicationrecoveryplan"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataSiteRecoveryReplicationRecoveryPlan(name string, args DataSiteRecoveryReplicationRecoveryPlanArgs) *DataSiteRecoveryReplicationRecoveryPlan {
	return &DataSiteRecoveryReplicationRecoveryPlan{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSiteRecoveryReplicationRecoveryPlan)(nil)

type DataSiteRecoveryReplicationRecoveryPlan struct {
	Name string
	Args DataSiteRecoveryReplicationRecoveryPlanArgs
}

func (srrrp *DataSiteRecoveryReplicationRecoveryPlan) DataSource() string {
	return "azurerm_site_recovery_replication_recovery_plan"
}

func (srrrp *DataSiteRecoveryReplicationRecoveryPlan) LocalName() string {
	return srrrp.Name
}

func (srrrp *DataSiteRecoveryReplicationRecoveryPlan) Configuration() interface{} {
	return srrrp.Args
}

func (srrrp *DataSiteRecoveryReplicationRecoveryPlan) Attributes() dataSiteRecoveryReplicationRecoveryPlanAttributes {
	return dataSiteRecoveryReplicationRecoveryPlanAttributes{ref: terra.ReferenceDataResource(srrrp)}
}

type DataSiteRecoveryReplicationRecoveryPlanArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RecoveryVaultId: string, required
	RecoveryVaultId terra.StringValue `hcl:"recovery_vault_id,attr" validate:"required"`
	// RecoveryGroup: min=0
	RecoveryGroup []datasiterecoveryreplicationrecoveryplan.RecoveryGroup `hcl:"recovery_group,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datasiterecoveryreplicationrecoveryplan.Timeouts `hcl:"timeouts,block"`
}
type dataSiteRecoveryReplicationRecoveryPlanAttributes struct {
	ref terra.Reference
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) FailoverDeploymentModel() terra.StringValue {
	return terra.ReferenceString(srrrp.ref.Append("failover_deployment_model"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) Id() terra.StringValue {
	return terra.ReferenceString(srrrp.ref.Append("id"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) Name() terra.StringValue {
	return terra.ReferenceString(srrrp.ref.Append("name"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) RecoveryVaultId() terra.StringValue {
	return terra.ReferenceString(srrrp.ref.Append("recovery_vault_id"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) SourceRecoveryFabricId() terra.StringValue {
	return terra.ReferenceString(srrrp.ref.Append("source_recovery_fabric_id"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) TargetRecoveryFabricId() terra.StringValue {
	return terra.ReferenceString(srrrp.ref.Append("target_recovery_fabric_id"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) RecoveryGroup() terra.SetValue[datasiterecoveryreplicationrecoveryplan.RecoveryGroupAttributes] {
	return terra.ReferenceSet[datasiterecoveryreplicationrecoveryplan.RecoveryGroupAttributes](srrrp.ref.Append("recovery_group"))
}

func (srrrp dataSiteRecoveryReplicationRecoveryPlanAttributes) Timeouts() datasiterecoveryreplicationrecoveryplan.TimeoutsAttributes {
	return terra.ReferenceSingle[datasiterecoveryreplicationrecoveryplan.TimeoutsAttributes](srrrp.ref.Append("timeouts"))
}
