// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datapostgresqlserver "github.com/golingon/terraproviders/azurerm/3.49.0/datapostgresqlserver"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataPostgresqlServer(name string, args DataPostgresqlServerArgs) *DataPostgresqlServer {
	return &DataPostgresqlServer{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataPostgresqlServer)(nil)

type DataPostgresqlServer struct {
	Name string
	Args DataPostgresqlServerArgs
}

func (ps *DataPostgresqlServer) DataSource() string {
	return "azurerm_postgresql_server"
}

func (ps *DataPostgresqlServer) LocalName() string {
	return ps.Name
}

func (ps *DataPostgresqlServer) Configuration() interface{} {
	return ps.Args
}

func (ps *DataPostgresqlServer) Attributes() dataPostgresqlServerAttributes {
	return dataPostgresqlServerAttributes{ref: terra.ReferenceDataResource(ps)}
}

type DataPostgresqlServerArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Identity: min=0
	Identity []datapostgresqlserver.Identity `hcl:"identity,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datapostgresqlserver.Timeouts `hcl:"timeouts,block"`
}
type dataPostgresqlServerAttributes struct {
	ref terra.Reference
}

func (ps dataPostgresqlServerAttributes) AdministratorLogin() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("administrator_login"))
}

func (ps dataPostgresqlServerAttributes) Fqdn() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("fqdn"))
}

func (ps dataPostgresqlServerAttributes) Id() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("id"))
}

func (ps dataPostgresqlServerAttributes) Location() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("location"))
}

func (ps dataPostgresqlServerAttributes) Name() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("name"))
}

func (ps dataPostgresqlServerAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("resource_group_name"))
}

func (ps dataPostgresqlServerAttributes) SkuName() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("sku_name"))
}

func (ps dataPostgresqlServerAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](ps.ref.Append("tags"))
}

func (ps dataPostgresqlServerAttributes) Version() terra.StringValue {
	return terra.ReferenceString(ps.ref.Append("version"))
}

func (ps dataPostgresqlServerAttributes) Identity() terra.ListValue[datapostgresqlserver.IdentityAttributes] {
	return terra.ReferenceList[datapostgresqlserver.IdentityAttributes](ps.ref.Append("identity"))
}

func (ps dataPostgresqlServerAttributes) Timeouts() datapostgresqlserver.TimeoutsAttributes {
	return terra.ReferenceSingle[datapostgresqlserver.TimeoutsAttributes](ps.ref.Append("timeouts"))
}
