// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	mssqlserversecurityalertpolicy "github.com/golingon/terraproviders/azurerm/3.49.0/mssqlserversecurityalertpolicy"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewMssqlServerSecurityAlertPolicy(name string, args MssqlServerSecurityAlertPolicyArgs) *MssqlServerSecurityAlertPolicy {
	return &MssqlServerSecurityAlertPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MssqlServerSecurityAlertPolicy)(nil)

type MssqlServerSecurityAlertPolicy struct {
	Name  string
	Args  MssqlServerSecurityAlertPolicyArgs
	state *mssqlServerSecurityAlertPolicyState
}

func (mssap *MssqlServerSecurityAlertPolicy) Type() string {
	return "azurerm_mssql_server_security_alert_policy"
}

func (mssap *MssqlServerSecurityAlertPolicy) LocalName() string {
	return mssap.Name
}

func (mssap *MssqlServerSecurityAlertPolicy) Configuration() interface{} {
	return mssap.Args
}

func (mssap *MssqlServerSecurityAlertPolicy) Attributes() mssqlServerSecurityAlertPolicyAttributes {
	return mssqlServerSecurityAlertPolicyAttributes{ref: terra.ReferenceResource(mssap)}
}

func (mssap *MssqlServerSecurityAlertPolicy) ImportState(av io.Reader) error {
	mssap.state = &mssqlServerSecurityAlertPolicyState{}
	if err := json.NewDecoder(av).Decode(mssap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mssap.Type(), mssap.LocalName(), err)
	}
	return nil
}

func (mssap *MssqlServerSecurityAlertPolicy) State() (*mssqlServerSecurityAlertPolicyState, bool) {
	return mssap.state, mssap.state != nil
}

func (mssap *MssqlServerSecurityAlertPolicy) StateMust() *mssqlServerSecurityAlertPolicyState {
	if mssap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mssap.Type(), mssap.LocalName()))
	}
	return mssap.state
}

func (mssap *MssqlServerSecurityAlertPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(mssap)
}

type MssqlServerSecurityAlertPolicyArgs struct {
	// DisabledAlerts: set of string, optional
	DisabledAlerts terra.SetValue[terra.StringValue] `hcl:"disabled_alerts,attr"`
	// EmailAccountAdmins: bool, optional
	EmailAccountAdmins terra.BoolValue `hcl:"email_account_admins,attr"`
	// EmailAddresses: set of string, optional
	EmailAddresses terra.SetValue[terra.StringValue] `hcl:"email_addresses,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RetentionDays: number, optional
	RetentionDays terra.NumberValue `hcl:"retention_days,attr"`
	// ServerName: string, required
	ServerName terra.StringValue `hcl:"server_name,attr" validate:"required"`
	// State: string, required
	State terra.StringValue `hcl:"state,attr" validate:"required"`
	// StorageAccountAccessKey: string, optional
	StorageAccountAccessKey terra.StringValue `hcl:"storage_account_access_key,attr"`
	// StorageEndpoint: string, optional
	StorageEndpoint terra.StringValue `hcl:"storage_endpoint,attr"`
	// Timeouts: optional
	Timeouts *mssqlserversecurityalertpolicy.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that MssqlServerSecurityAlertPolicy depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type mssqlServerSecurityAlertPolicyAttributes struct {
	ref terra.Reference
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) DisabledAlerts() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](mssap.ref.Append("disabled_alerts"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) EmailAccountAdmins() terra.BoolValue {
	return terra.ReferenceBool(mssap.ref.Append("email_account_admins"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) EmailAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](mssap.ref.Append("email_addresses"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(mssap.ref.Append("id"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(mssap.ref.Append("resource_group_name"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) RetentionDays() terra.NumberValue {
	return terra.ReferenceNumber(mssap.ref.Append("retention_days"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) ServerName() terra.StringValue {
	return terra.ReferenceString(mssap.ref.Append("server_name"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) State() terra.StringValue {
	return terra.ReferenceString(mssap.ref.Append("state"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceString(mssap.ref.Append("storage_account_access_key"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) StorageEndpoint() terra.StringValue {
	return terra.ReferenceString(mssap.ref.Append("storage_endpoint"))
}

func (mssap mssqlServerSecurityAlertPolicyAttributes) Timeouts() mssqlserversecurityalertpolicy.TimeoutsAttributes {
	return terra.ReferenceSingle[mssqlserversecurityalertpolicy.TimeoutsAttributes](mssap.ref.Append("timeouts"))
}

type mssqlServerSecurityAlertPolicyState struct {
	DisabledAlerts          []string                                      `json:"disabled_alerts"`
	EmailAccountAdmins      bool                                          `json:"email_account_admins"`
	EmailAddresses          []string                                      `json:"email_addresses"`
	Id                      string                                        `json:"id"`
	ResourceGroupName       string                                        `json:"resource_group_name"`
	RetentionDays           float64                                       `json:"retention_days"`
	ServerName              string                                        `json:"server_name"`
	State                   string                                        `json:"state"`
	StorageAccountAccessKey string                                        `json:"storage_account_access_key"`
	StorageEndpoint         string                                        `json:"storage_endpoint"`
	Timeouts                *mssqlserversecurityalertpolicy.TimeoutsState `json:"timeouts"`
}
