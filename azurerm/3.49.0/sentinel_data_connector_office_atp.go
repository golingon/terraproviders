// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	sentineldataconnectorofficeatp "github.com/golingon/terraproviders/azurerm/3.49.0/sentineldataconnectorofficeatp"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSentinelDataConnectorOfficeAtp(name string, args SentinelDataConnectorOfficeAtpArgs) *SentinelDataConnectorOfficeAtp {
	return &SentinelDataConnectorOfficeAtp{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SentinelDataConnectorOfficeAtp)(nil)

type SentinelDataConnectorOfficeAtp struct {
	Name  string
	Args  SentinelDataConnectorOfficeAtpArgs
	state *sentinelDataConnectorOfficeAtpState
}

func (sdcoa *SentinelDataConnectorOfficeAtp) Type() string {
	return "azurerm_sentinel_data_connector_office_atp"
}

func (sdcoa *SentinelDataConnectorOfficeAtp) LocalName() string {
	return sdcoa.Name
}

func (sdcoa *SentinelDataConnectorOfficeAtp) Configuration() interface{} {
	return sdcoa.Args
}

func (sdcoa *SentinelDataConnectorOfficeAtp) Attributes() sentinelDataConnectorOfficeAtpAttributes {
	return sentinelDataConnectorOfficeAtpAttributes{ref: terra.ReferenceResource(sdcoa)}
}

func (sdcoa *SentinelDataConnectorOfficeAtp) ImportState(av io.Reader) error {
	sdcoa.state = &sentinelDataConnectorOfficeAtpState{}
	if err := json.NewDecoder(av).Decode(sdcoa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdcoa.Type(), sdcoa.LocalName(), err)
	}
	return nil
}

func (sdcoa *SentinelDataConnectorOfficeAtp) State() (*sentinelDataConnectorOfficeAtpState, bool) {
	return sdcoa.state, sdcoa.state != nil
}

func (sdcoa *SentinelDataConnectorOfficeAtp) StateMust() *sentinelDataConnectorOfficeAtpState {
	if sdcoa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdcoa.Type(), sdcoa.LocalName()))
	}
	return sdcoa.state
}

func (sdcoa *SentinelDataConnectorOfficeAtp) DependOn() terra.Reference {
	return terra.ReferenceResource(sdcoa)
}

type SentinelDataConnectorOfficeAtpArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LogAnalyticsWorkspaceId: string, required
	LogAnalyticsWorkspaceId terra.StringValue `hcl:"log_analytics_workspace_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// Timeouts: optional
	Timeouts *sentineldataconnectorofficeatp.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SentinelDataConnectorOfficeAtp depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sentinelDataConnectorOfficeAtpAttributes struct {
	ref terra.Reference
}

func (sdcoa sentinelDataConnectorOfficeAtpAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sdcoa.ref.Append("id"))
}

func (sdcoa sentinelDataConnectorOfficeAtpAttributes) LogAnalyticsWorkspaceId() terra.StringValue {
	return terra.ReferenceString(sdcoa.ref.Append("log_analytics_workspace_id"))
}

func (sdcoa sentinelDataConnectorOfficeAtpAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sdcoa.ref.Append("name"))
}

func (sdcoa sentinelDataConnectorOfficeAtpAttributes) TenantId() terra.StringValue {
	return terra.ReferenceString(sdcoa.ref.Append("tenant_id"))
}

func (sdcoa sentinelDataConnectorOfficeAtpAttributes) Timeouts() sentineldataconnectorofficeatp.TimeoutsAttributes {
	return terra.ReferenceSingle[sentineldataconnectorofficeatp.TimeoutsAttributes](sdcoa.ref.Append("timeouts"))
}

type sentinelDataConnectorOfficeAtpState struct {
	Id                      string                                        `json:"id"`
	LogAnalyticsWorkspaceId string                                        `json:"log_analytics_workspace_id"`
	Name                    string                                        `json:"name"`
	TenantId                string                                        `json:"tenant_id"`
	Timeouts                *sentineldataconnectorofficeatp.TimeoutsState `json:"timeouts"`
}
