// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	searchsharedprivatelinkservice "github.com/golingon/terraproviders/azurerm/3.49.0/searchsharedprivatelinkservice"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSearchSharedPrivateLinkService(name string, args SearchSharedPrivateLinkServiceArgs) *SearchSharedPrivateLinkService {
	return &SearchSharedPrivateLinkService{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SearchSharedPrivateLinkService)(nil)

type SearchSharedPrivateLinkService struct {
	Name  string
	Args  SearchSharedPrivateLinkServiceArgs
	state *searchSharedPrivateLinkServiceState
}

func (sspls *SearchSharedPrivateLinkService) Type() string {
	return "azurerm_search_shared_private_link_service"
}

func (sspls *SearchSharedPrivateLinkService) LocalName() string {
	return sspls.Name
}

func (sspls *SearchSharedPrivateLinkService) Configuration() interface{} {
	return sspls.Args
}

func (sspls *SearchSharedPrivateLinkService) Attributes() searchSharedPrivateLinkServiceAttributes {
	return searchSharedPrivateLinkServiceAttributes{ref: terra.ReferenceResource(sspls)}
}

func (sspls *SearchSharedPrivateLinkService) ImportState(av io.Reader) error {
	sspls.state = &searchSharedPrivateLinkServiceState{}
	if err := json.NewDecoder(av).Decode(sspls.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sspls.Type(), sspls.LocalName(), err)
	}
	return nil
}

func (sspls *SearchSharedPrivateLinkService) State() (*searchSharedPrivateLinkServiceState, bool) {
	return sspls.state, sspls.state != nil
}

func (sspls *SearchSharedPrivateLinkService) StateMust() *searchSharedPrivateLinkServiceState {
	if sspls.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sspls.Type(), sspls.LocalName()))
	}
	return sspls.state
}

func (sspls *SearchSharedPrivateLinkService) DependOn() terra.Reference {
	return terra.ReferenceResource(sspls)
}

type SearchSharedPrivateLinkServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RequestMessage: string, optional
	RequestMessage terra.StringValue `hcl:"request_message,attr"`
	// SearchServiceId: string, required
	SearchServiceId terra.StringValue `hcl:"search_service_id,attr" validate:"required"`
	// SubresourceName: string, required
	SubresourceName terra.StringValue `hcl:"subresource_name,attr" validate:"required"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *searchsharedprivatelinkservice.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that SearchSharedPrivateLinkService depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type searchSharedPrivateLinkServiceAttributes struct {
	ref terra.Reference
}

func (sspls searchSharedPrivateLinkServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("id"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("name"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) RequestMessage() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("request_message"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) SearchServiceId() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("search_service_id"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) Status() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("status"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) SubresourceName() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("subresource_name"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceString(sspls.ref.Append("target_resource_id"))
}

func (sspls searchSharedPrivateLinkServiceAttributes) Timeouts() searchsharedprivatelinkservice.TimeoutsAttributes {
	return terra.ReferenceSingle[searchsharedprivatelinkservice.TimeoutsAttributes](sspls.ref.Append("timeouts"))
}

type searchSharedPrivateLinkServiceState struct {
	Id               string                                        `json:"id"`
	Name             string                                        `json:"name"`
	RequestMessage   string                                        `json:"request_message"`
	SearchServiceId  string                                        `json:"search_service_id"`
	Status           string                                        `json:"status"`
	SubresourceName  string                                        `json:"subresource_name"`
	TargetResourceId string                                        `json:"target_resource_id"`
	Timeouts         *searchsharedprivatelinkservice.TimeoutsState `json:"timeouts"`
}
