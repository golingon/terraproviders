// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	streamanalyticsstreaminputiothub "github.com/golingon/terraproviders/azurerm/3.49.0/streamanalyticsstreaminputiothub"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewStreamAnalyticsStreamInputIothub(name string, args StreamAnalyticsStreamInputIothubArgs) *StreamAnalyticsStreamInputIothub {
	return &StreamAnalyticsStreamInputIothub{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StreamAnalyticsStreamInputIothub)(nil)

type StreamAnalyticsStreamInputIothub struct {
	Name  string
	Args  StreamAnalyticsStreamInputIothubArgs
	state *streamAnalyticsStreamInputIothubState
}

func (sasii *StreamAnalyticsStreamInputIothub) Type() string {
	return "azurerm_stream_analytics_stream_input_iothub"
}

func (sasii *StreamAnalyticsStreamInputIothub) LocalName() string {
	return sasii.Name
}

func (sasii *StreamAnalyticsStreamInputIothub) Configuration() interface{} {
	return sasii.Args
}

func (sasii *StreamAnalyticsStreamInputIothub) Attributes() streamAnalyticsStreamInputIothubAttributes {
	return streamAnalyticsStreamInputIothubAttributes{ref: terra.ReferenceResource(sasii)}
}

func (sasii *StreamAnalyticsStreamInputIothub) ImportState(av io.Reader) error {
	sasii.state = &streamAnalyticsStreamInputIothubState{}
	if err := json.NewDecoder(av).Decode(sasii.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sasii.Type(), sasii.LocalName(), err)
	}
	return nil
}

func (sasii *StreamAnalyticsStreamInputIothub) State() (*streamAnalyticsStreamInputIothubState, bool) {
	return sasii.state, sasii.state != nil
}

func (sasii *StreamAnalyticsStreamInputIothub) StateMust() *streamAnalyticsStreamInputIothubState {
	if sasii.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sasii.Type(), sasii.LocalName()))
	}
	return sasii.state
}

func (sasii *StreamAnalyticsStreamInputIothub) DependOn() terra.Reference {
	return terra.ReferenceResource(sasii)
}

type StreamAnalyticsStreamInputIothubArgs struct {
	// Endpoint: string, required
	Endpoint terra.StringValue `hcl:"endpoint,attr" validate:"required"`
	// EventhubConsumerGroupName: string, required
	EventhubConsumerGroupName terra.StringValue `hcl:"eventhub_consumer_group_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IothubNamespace: string, required
	IothubNamespace terra.StringValue `hcl:"iothub_namespace,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SharedAccessPolicyKey: string, required
	SharedAccessPolicyKey terra.StringValue `hcl:"shared_access_policy_key,attr" validate:"required"`
	// SharedAccessPolicyName: string, required
	SharedAccessPolicyName terra.StringValue `hcl:"shared_access_policy_name,attr" validate:"required"`
	// StreamAnalyticsJobName: string, required
	StreamAnalyticsJobName terra.StringValue `hcl:"stream_analytics_job_name,attr" validate:"required"`
	// Serialization: required
	Serialization *streamanalyticsstreaminputiothub.Serialization `hcl:"serialization,block" validate:"required"`
	// Timeouts: optional
	Timeouts *streamanalyticsstreaminputiothub.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that StreamAnalyticsStreamInputIothub depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type streamAnalyticsStreamInputIothubAttributes struct {
	ref terra.Reference
}

func (sasii streamAnalyticsStreamInputIothubAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("endpoint"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) EventhubConsumerGroupName() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("eventhub_consumer_group_name"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("id"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) IothubNamespace() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("iothub_namespace"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("name"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("resource_group_name"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) SharedAccessPolicyKey() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("shared_access_policy_key"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) SharedAccessPolicyName() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("shared_access_policy_name"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) StreamAnalyticsJobName() terra.StringValue {
	return terra.ReferenceString(sasii.ref.Append("stream_analytics_job_name"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) Serialization() terra.ListValue[streamanalyticsstreaminputiothub.SerializationAttributes] {
	return terra.ReferenceList[streamanalyticsstreaminputiothub.SerializationAttributes](sasii.ref.Append("serialization"))
}

func (sasii streamAnalyticsStreamInputIothubAttributes) Timeouts() streamanalyticsstreaminputiothub.TimeoutsAttributes {
	return terra.ReferenceSingle[streamanalyticsstreaminputiothub.TimeoutsAttributes](sasii.ref.Append("timeouts"))
}

type streamAnalyticsStreamInputIothubState struct {
	Endpoint                  string                                                `json:"endpoint"`
	EventhubConsumerGroupName string                                                `json:"eventhub_consumer_group_name"`
	Id                        string                                                `json:"id"`
	IothubNamespace           string                                                `json:"iothub_namespace"`
	Name                      string                                                `json:"name"`
	ResourceGroupName         string                                                `json:"resource_group_name"`
	SharedAccessPolicyKey     string                                                `json:"shared_access_policy_key"`
	SharedAccessPolicyName    string                                                `json:"shared_access_policy_name"`
	StreamAnalyticsJobName    string                                                `json:"stream_analytics_job_name"`
	Serialization             []streamanalyticsstreaminputiothub.SerializationState `json:"serialization"`
	Timeouts                  *streamanalyticsstreaminputiothub.TimeoutsState       `json:"timeouts"`
}
