// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataserviceplan "github.com/golingon/terraproviders/azurerm/3.49.0/dataserviceplan"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataServicePlan(name string, args DataServicePlanArgs) *DataServicePlan {
	return &DataServicePlan{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataServicePlan)(nil)

type DataServicePlan struct {
	Name string
	Args DataServicePlanArgs
}

func (sp *DataServicePlan) DataSource() string {
	return "azurerm_service_plan"
}

func (sp *DataServicePlan) LocalName() string {
	return sp.Name
}

func (sp *DataServicePlan) Configuration() interface{} {
	return sp.Args
}

func (sp *DataServicePlan) Attributes() dataServicePlanAttributes {
	return dataServicePlanAttributes{ref: terra.ReferenceDataResource(sp)}
}

type DataServicePlanArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *dataserviceplan.Timeouts `hcl:"timeouts,block"`
}
type dataServicePlanAttributes struct {
	ref terra.Reference
}

func (sp dataServicePlanAttributes) AppServiceEnvironmentId() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("app_service_environment_id"))
}

func (sp dataServicePlanAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("id"))
}

func (sp dataServicePlanAttributes) Kind() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("kind"))
}

func (sp dataServicePlanAttributes) Location() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("location"))
}

func (sp dataServicePlanAttributes) MaximumElasticWorkerCount() terra.NumberValue {
	return terra.ReferenceNumber(sp.ref.Append("maximum_elastic_worker_count"))
}

func (sp dataServicePlanAttributes) Name() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("name"))
}

func (sp dataServicePlanAttributes) OsType() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("os_type"))
}

func (sp dataServicePlanAttributes) PerSiteScalingEnabled() terra.BoolValue {
	return terra.ReferenceBool(sp.ref.Append("per_site_scaling_enabled"))
}

func (sp dataServicePlanAttributes) Reserved() terra.BoolValue {
	return terra.ReferenceBool(sp.ref.Append("reserved"))
}

func (sp dataServicePlanAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("resource_group_name"))
}

func (sp dataServicePlanAttributes) SkuName() terra.StringValue {
	return terra.ReferenceString(sp.ref.Append("sku_name"))
}

func (sp dataServicePlanAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceMap[terra.StringValue](sp.ref.Append("tags"))
}

func (sp dataServicePlanAttributes) WorkerCount() terra.NumberValue {
	return terra.ReferenceNumber(sp.ref.Append("worker_count"))
}

func (sp dataServicePlanAttributes) ZoneBalancingEnabled() terra.BoolValue {
	return terra.ReferenceBool(sp.ref.Append("zone_balancing_enabled"))
}

func (sp dataServicePlanAttributes) Timeouts() dataserviceplan.TimeoutsAttributes {
	return terra.ReferenceSingle[dataserviceplan.TimeoutsAttributes](sp.ref.Append("timeouts"))
}
