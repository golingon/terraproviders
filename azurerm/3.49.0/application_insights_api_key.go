// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	applicationinsightsapikey "github.com/golingon/terraproviders/azurerm/3.49.0/applicationinsightsapikey"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewApplicationInsightsApiKey(name string, args ApplicationInsightsApiKeyArgs) *ApplicationInsightsApiKey {
	return &ApplicationInsightsApiKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationInsightsApiKey)(nil)

type ApplicationInsightsApiKey struct {
	Name  string
	Args  ApplicationInsightsApiKeyArgs
	state *applicationInsightsApiKeyState
}

func (aiak *ApplicationInsightsApiKey) Type() string {
	return "azurerm_application_insights_api_key"
}

func (aiak *ApplicationInsightsApiKey) LocalName() string {
	return aiak.Name
}

func (aiak *ApplicationInsightsApiKey) Configuration() interface{} {
	return aiak.Args
}

func (aiak *ApplicationInsightsApiKey) Attributes() applicationInsightsApiKeyAttributes {
	return applicationInsightsApiKeyAttributes{ref: terra.ReferenceResource(aiak)}
}

func (aiak *ApplicationInsightsApiKey) ImportState(av io.Reader) error {
	aiak.state = &applicationInsightsApiKeyState{}
	if err := json.NewDecoder(av).Decode(aiak.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiak.Type(), aiak.LocalName(), err)
	}
	return nil
}

func (aiak *ApplicationInsightsApiKey) State() (*applicationInsightsApiKeyState, bool) {
	return aiak.state, aiak.state != nil
}

func (aiak *ApplicationInsightsApiKey) StateMust() *applicationInsightsApiKeyState {
	if aiak.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiak.Type(), aiak.LocalName()))
	}
	return aiak.state
}

func (aiak *ApplicationInsightsApiKey) DependOn() terra.Reference {
	return terra.ReferenceResource(aiak)
}

type ApplicationInsightsApiKeyArgs struct {
	// ApplicationInsightsId: string, required
	ApplicationInsightsId terra.StringValue `hcl:"application_insights_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ReadPermissions: set of string, optional
	ReadPermissions terra.SetValue[terra.StringValue] `hcl:"read_permissions,attr"`
	// WritePermissions: set of string, optional
	WritePermissions terra.SetValue[terra.StringValue] `hcl:"write_permissions,attr"`
	// Timeouts: optional
	Timeouts *applicationinsightsapikey.Timeouts `hcl:"timeouts,block"`
	// DependsOn contains resources that ApplicationInsightsApiKey depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type applicationInsightsApiKeyAttributes struct {
	ref terra.Reference
}

func (aiak applicationInsightsApiKeyAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceString(aiak.ref.Append("api_key"))
}

func (aiak applicationInsightsApiKeyAttributes) ApplicationInsightsId() terra.StringValue {
	return terra.ReferenceString(aiak.ref.Append("application_insights_id"))
}

func (aiak applicationInsightsApiKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceString(aiak.ref.Append("id"))
}

func (aiak applicationInsightsApiKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceString(aiak.ref.Append("name"))
}

func (aiak applicationInsightsApiKeyAttributes) ReadPermissions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](aiak.ref.Append("read_permissions"))
}

func (aiak applicationInsightsApiKeyAttributes) WritePermissions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceSet[terra.StringValue](aiak.ref.Append("write_permissions"))
}

func (aiak applicationInsightsApiKeyAttributes) Timeouts() applicationinsightsapikey.TimeoutsAttributes {
	return terra.ReferenceSingle[applicationinsightsapikey.TimeoutsAttributes](aiak.ref.Append("timeouts"))
}

type applicationInsightsApiKeyState struct {
	ApiKey                string                                   `json:"api_key"`
	ApplicationInsightsId string                                   `json:"application_insights_id"`
	Id                    string                                   `json:"id"`
	Name                  string                                   `json:"name"`
	ReadPermissions       []string                                 `json:"read_permissions"`
	WritePermissions      []string                                 `json:"write_permissions"`
	Timeouts              *applicationinsightsapikey.TimeoutsState `json:"timeouts"`
}
