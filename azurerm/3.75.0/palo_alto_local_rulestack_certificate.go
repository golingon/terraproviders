// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	paloaltolocalrulestackcertificate "github.com/golingon/terraproviders/azurerm/3.75.0/paloaltolocalrulestackcertificate"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewPaloAltoLocalRulestackCertificate creates a new instance of [PaloAltoLocalRulestackCertificate].
func NewPaloAltoLocalRulestackCertificate(name string, args PaloAltoLocalRulestackCertificateArgs) *PaloAltoLocalRulestackCertificate {
	return &PaloAltoLocalRulestackCertificate{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PaloAltoLocalRulestackCertificate)(nil)

// PaloAltoLocalRulestackCertificate represents the Terraform resource azurerm_palo_alto_local_rulestack_certificate.
type PaloAltoLocalRulestackCertificate struct {
	Name      string
	Args      PaloAltoLocalRulestackCertificateArgs
	state     *paloAltoLocalRulestackCertificateState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PaloAltoLocalRulestackCertificate].
func (palrc *PaloAltoLocalRulestackCertificate) Type() string {
	return "azurerm_palo_alto_local_rulestack_certificate"
}

// LocalName returns the local name for [PaloAltoLocalRulestackCertificate].
func (palrc *PaloAltoLocalRulestackCertificate) LocalName() string {
	return palrc.Name
}

// Configuration returns the configuration (args) for [PaloAltoLocalRulestackCertificate].
func (palrc *PaloAltoLocalRulestackCertificate) Configuration() interface{} {
	return palrc.Args
}

// DependOn is used for other resources to depend on [PaloAltoLocalRulestackCertificate].
func (palrc *PaloAltoLocalRulestackCertificate) DependOn() terra.Reference {
	return terra.ReferenceResource(palrc)
}

// Dependencies returns the list of resources [PaloAltoLocalRulestackCertificate] depends_on.
func (palrc *PaloAltoLocalRulestackCertificate) Dependencies() terra.Dependencies {
	return palrc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PaloAltoLocalRulestackCertificate].
func (palrc *PaloAltoLocalRulestackCertificate) LifecycleManagement() *terra.Lifecycle {
	return palrc.Lifecycle
}

// Attributes returns the attributes for [PaloAltoLocalRulestackCertificate].
func (palrc *PaloAltoLocalRulestackCertificate) Attributes() paloAltoLocalRulestackCertificateAttributes {
	return paloAltoLocalRulestackCertificateAttributes{ref: terra.ReferenceResource(palrc)}
}

// ImportState imports the given attribute values into [PaloAltoLocalRulestackCertificate]'s state.
func (palrc *PaloAltoLocalRulestackCertificate) ImportState(av io.Reader) error {
	palrc.state = &paloAltoLocalRulestackCertificateState{}
	if err := json.NewDecoder(av).Decode(palrc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", palrc.Type(), palrc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PaloAltoLocalRulestackCertificate] has state.
func (palrc *PaloAltoLocalRulestackCertificate) State() (*paloAltoLocalRulestackCertificateState, bool) {
	return palrc.state, palrc.state != nil
}

// StateMust returns the state for [PaloAltoLocalRulestackCertificate]. Panics if the state is nil.
func (palrc *PaloAltoLocalRulestackCertificate) StateMust() *paloAltoLocalRulestackCertificateState {
	if palrc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", palrc.Type(), palrc.LocalName()))
	}
	return palrc.state
}

// PaloAltoLocalRulestackCertificateArgs contains the configurations for azurerm_palo_alto_local_rulestack_certificate.
type PaloAltoLocalRulestackCertificateArgs struct {
	// AuditComment: string, optional
	AuditComment terra.StringValue `hcl:"audit_comment,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultCertificateId: string, optional
	KeyVaultCertificateId terra.StringValue `hcl:"key_vault_certificate_id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RulestackId: string, required
	RulestackId terra.StringValue `hcl:"rulestack_id,attr" validate:"required"`
	// SelfSigned: bool, optional
	SelfSigned terra.BoolValue `hcl:"self_signed,attr"`
	// Timeouts: optional
	Timeouts *paloaltolocalrulestackcertificate.Timeouts `hcl:"timeouts,block"`
}
type paloAltoLocalRulestackCertificateAttributes struct {
	ref terra.Reference
}

// AuditComment returns a reference to field audit_comment of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) AuditComment() terra.StringValue {
	return terra.ReferenceAsString(palrc.ref.Append("audit_comment"))
}

// Description returns a reference to field description of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(palrc.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(palrc.ref.Append("id"))
}

// KeyVaultCertificateId returns a reference to field key_vault_certificate_id of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) KeyVaultCertificateId() terra.StringValue {
	return terra.ReferenceAsString(palrc.ref.Append("key_vault_certificate_id"))
}

// Name returns a reference to field name of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(palrc.ref.Append("name"))
}

// RulestackId returns a reference to field rulestack_id of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) RulestackId() terra.StringValue {
	return terra.ReferenceAsString(palrc.ref.Append("rulestack_id"))
}

// SelfSigned returns a reference to field self_signed of azurerm_palo_alto_local_rulestack_certificate.
func (palrc paloAltoLocalRulestackCertificateAttributes) SelfSigned() terra.BoolValue {
	return terra.ReferenceAsBool(palrc.ref.Append("self_signed"))
}

func (palrc paloAltoLocalRulestackCertificateAttributes) Timeouts() paloaltolocalrulestackcertificate.TimeoutsAttributes {
	return terra.ReferenceAsSingle[paloaltolocalrulestackcertificate.TimeoutsAttributes](palrc.ref.Append("timeouts"))
}

type paloAltoLocalRulestackCertificateState struct {
	AuditComment          string                                           `json:"audit_comment"`
	Description           string                                           `json:"description"`
	Id                    string                                           `json:"id"`
	KeyVaultCertificateId string                                           `json:"key_vault_certificate_id"`
	Name                  string                                           `json:"name"`
	RulestackId           string                                           `json:"rulestack_id"`
	SelfSigned            bool                                             `json:"self_signed"`
	Timeouts              *paloaltolocalrulestackcertificate.TimeoutsState `json:"timeouts"`
}
