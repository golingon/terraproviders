// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataroutetable

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Route struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type RouteAttributes struct {
	ref terra.Reference
}

func (r RouteAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RouteAttributes) InternalWithRef(ref terra.Reference) RouteAttributes {
	return RouteAttributes{ref: ref}
}

func (r RouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RouteAttributes) AddressPrefix() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("address_prefix"))
}

func (r RouteAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("name"))
}

func (r RouteAttributes) NextHopInIpAddress() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("next_hop_in_ip_address"))
}

func (r RouteAttributes) NextHopType() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("next_hop_type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type RouteState struct {
	AddressPrefix      string `json:"address_prefix"`
	Name               string `json:"name"`
	NextHopInIpAddress string `json:"next_hop_in_ip_address"`
	NextHopType        string `json:"next_hop_type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
