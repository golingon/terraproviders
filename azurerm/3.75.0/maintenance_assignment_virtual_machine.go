// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	maintenanceassignmentvirtualmachine "github.com/golingon/terraproviders/azurerm/3.75.0/maintenanceassignmentvirtualmachine"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewMaintenanceAssignmentVirtualMachine creates a new instance of [MaintenanceAssignmentVirtualMachine].
func NewMaintenanceAssignmentVirtualMachine(name string, args MaintenanceAssignmentVirtualMachineArgs) *MaintenanceAssignmentVirtualMachine {
	return &MaintenanceAssignmentVirtualMachine{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MaintenanceAssignmentVirtualMachine)(nil)

// MaintenanceAssignmentVirtualMachine represents the Terraform resource azurerm_maintenance_assignment_virtual_machine.
type MaintenanceAssignmentVirtualMachine struct {
	Name      string
	Args      MaintenanceAssignmentVirtualMachineArgs
	state     *maintenanceAssignmentVirtualMachineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [MaintenanceAssignmentVirtualMachine].
func (mavm *MaintenanceAssignmentVirtualMachine) Type() string {
	return "azurerm_maintenance_assignment_virtual_machine"
}

// LocalName returns the local name for [MaintenanceAssignmentVirtualMachine].
func (mavm *MaintenanceAssignmentVirtualMachine) LocalName() string {
	return mavm.Name
}

// Configuration returns the configuration (args) for [MaintenanceAssignmentVirtualMachine].
func (mavm *MaintenanceAssignmentVirtualMachine) Configuration() interface{} {
	return mavm.Args
}

// DependOn is used for other resources to depend on [MaintenanceAssignmentVirtualMachine].
func (mavm *MaintenanceAssignmentVirtualMachine) DependOn() terra.Reference {
	return terra.ReferenceResource(mavm)
}

// Dependencies returns the list of resources [MaintenanceAssignmentVirtualMachine] depends_on.
func (mavm *MaintenanceAssignmentVirtualMachine) Dependencies() terra.Dependencies {
	return mavm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [MaintenanceAssignmentVirtualMachine].
func (mavm *MaintenanceAssignmentVirtualMachine) LifecycleManagement() *terra.Lifecycle {
	return mavm.Lifecycle
}

// Attributes returns the attributes for [MaintenanceAssignmentVirtualMachine].
func (mavm *MaintenanceAssignmentVirtualMachine) Attributes() maintenanceAssignmentVirtualMachineAttributes {
	return maintenanceAssignmentVirtualMachineAttributes{ref: terra.ReferenceResource(mavm)}
}

// ImportState imports the given attribute values into [MaintenanceAssignmentVirtualMachine]'s state.
func (mavm *MaintenanceAssignmentVirtualMachine) ImportState(av io.Reader) error {
	mavm.state = &maintenanceAssignmentVirtualMachineState{}
	if err := json.NewDecoder(av).Decode(mavm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mavm.Type(), mavm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [MaintenanceAssignmentVirtualMachine] has state.
func (mavm *MaintenanceAssignmentVirtualMachine) State() (*maintenanceAssignmentVirtualMachineState, bool) {
	return mavm.state, mavm.state != nil
}

// StateMust returns the state for [MaintenanceAssignmentVirtualMachine]. Panics if the state is nil.
func (mavm *MaintenanceAssignmentVirtualMachine) StateMust() *maintenanceAssignmentVirtualMachineState {
	if mavm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mavm.Type(), mavm.LocalName()))
	}
	return mavm.state
}

// MaintenanceAssignmentVirtualMachineArgs contains the configurations for azurerm_maintenance_assignment_virtual_machine.
type MaintenanceAssignmentVirtualMachineArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MaintenanceConfigurationId: string, required
	MaintenanceConfigurationId terra.StringValue `hcl:"maintenance_configuration_id,attr" validate:"required"`
	// VirtualMachineId: string, required
	VirtualMachineId terra.StringValue `hcl:"virtual_machine_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *maintenanceassignmentvirtualmachine.Timeouts `hcl:"timeouts,block"`
}
type maintenanceAssignmentVirtualMachineAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_maintenance_assignment_virtual_machine.
func (mavm maintenanceAssignmentVirtualMachineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mavm.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_maintenance_assignment_virtual_machine.
func (mavm maintenanceAssignmentVirtualMachineAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mavm.ref.Append("location"))
}

// MaintenanceConfigurationId returns a reference to field maintenance_configuration_id of azurerm_maintenance_assignment_virtual_machine.
func (mavm maintenanceAssignmentVirtualMachineAttributes) MaintenanceConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(mavm.ref.Append("maintenance_configuration_id"))
}

// VirtualMachineId returns a reference to field virtual_machine_id of azurerm_maintenance_assignment_virtual_machine.
func (mavm maintenanceAssignmentVirtualMachineAttributes) VirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(mavm.ref.Append("virtual_machine_id"))
}

func (mavm maintenanceAssignmentVirtualMachineAttributes) Timeouts() maintenanceassignmentvirtualmachine.TimeoutsAttributes {
	return terra.ReferenceAsSingle[maintenanceassignmentvirtualmachine.TimeoutsAttributes](mavm.ref.Append("timeouts"))
}

type maintenanceAssignmentVirtualMachineState struct {
	Id                         string                                             `json:"id"`
	Location                   string                                             `json:"location"`
	MaintenanceConfigurationId string                                             `json:"maintenance_configuration_id"`
	VirtualMachineId           string                                             `json:"virtual_machine_id"`
	Timeouts                   *maintenanceassignmentvirtualmachine.TimeoutsState `json:"timeouts"`
}
