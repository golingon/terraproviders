// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datanetworkservicetags "github.com/golingon/terraproviders/azurerm/3.75.0/datanetworkservicetags"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataNetworkServiceTags creates a new instance of [DataNetworkServiceTags].
func NewDataNetworkServiceTags(name string, args DataNetworkServiceTagsArgs) *DataNetworkServiceTags {
	return &DataNetworkServiceTags{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNetworkServiceTags)(nil)

// DataNetworkServiceTags represents the Terraform data resource azurerm_network_service_tags.
type DataNetworkServiceTags struct {
	Name string
	Args DataNetworkServiceTagsArgs
}

// DataSource returns the Terraform object type for [DataNetworkServiceTags].
func (nst *DataNetworkServiceTags) DataSource() string {
	return "azurerm_network_service_tags"
}

// LocalName returns the local name for [DataNetworkServiceTags].
func (nst *DataNetworkServiceTags) LocalName() string {
	return nst.Name
}

// Configuration returns the configuration (args) for [DataNetworkServiceTags].
func (nst *DataNetworkServiceTags) Configuration() interface{} {
	return nst.Args
}

// Attributes returns the attributes for [DataNetworkServiceTags].
func (nst *DataNetworkServiceTags) Attributes() dataNetworkServiceTagsAttributes {
	return dataNetworkServiceTagsAttributes{ref: terra.ReferenceDataResource(nst)}
}

// DataNetworkServiceTagsArgs contains the configurations for azurerm_network_service_tags.
type DataNetworkServiceTagsArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// LocationFilter: string, optional
	LocationFilter terra.StringValue `hcl:"location_filter,attr"`
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datanetworkservicetags.Timeouts `hcl:"timeouts,block"`
}
type dataNetworkServiceTagsAttributes struct {
	ref terra.Reference
}

// AddressPrefixes returns a reference to field address_prefixes of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) AddressPrefixes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nst.ref.Append("address_prefixes"))
}

// Id returns a reference to field id of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nst.ref.Append("id"))
}

// Ipv4Cidrs returns a reference to field ipv4_cidrs of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) Ipv4Cidrs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nst.ref.Append("ipv4_cidrs"))
}

// Ipv6Cidrs returns a reference to field ipv6_cidrs of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) Ipv6Cidrs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nst.ref.Append("ipv6_cidrs"))
}

// Location returns a reference to field location of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(nst.ref.Append("location"))
}

// LocationFilter returns a reference to field location_filter of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) LocationFilter() terra.StringValue {
	return terra.ReferenceAsString(nst.ref.Append("location_filter"))
}

// Service returns a reference to field service of azurerm_network_service_tags.
func (nst dataNetworkServiceTagsAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(nst.ref.Append("service"))
}

func (nst dataNetworkServiceTagsAttributes) Timeouts() datanetworkservicetags.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datanetworkservicetags.TimeoutsAttributes](nst.ref.Append("timeouts"))
}
