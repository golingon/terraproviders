// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datacommunicationservice "github.com/golingon/terraproviders/azurerm/3.75.0/datacommunicationservice"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataCommunicationService creates a new instance of [DataCommunicationService].
func NewDataCommunicationService(name string, args DataCommunicationServiceArgs) *DataCommunicationService {
	return &DataCommunicationService{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCommunicationService)(nil)

// DataCommunicationService represents the Terraform data resource azurerm_communication_service.
type DataCommunicationService struct {
	Name string
	Args DataCommunicationServiceArgs
}

// DataSource returns the Terraform object type for [DataCommunicationService].
func (cs *DataCommunicationService) DataSource() string {
	return "azurerm_communication_service"
}

// LocalName returns the local name for [DataCommunicationService].
func (cs *DataCommunicationService) LocalName() string {
	return cs.Name
}

// Configuration returns the configuration (args) for [DataCommunicationService].
func (cs *DataCommunicationService) Configuration() interface{} {
	return cs.Args
}

// Attributes returns the attributes for [DataCommunicationService].
func (cs *DataCommunicationService) Attributes() dataCommunicationServiceAttributes {
	return dataCommunicationServiceAttributes{ref: terra.ReferenceDataResource(cs)}
}

// DataCommunicationServiceArgs contains the configurations for azurerm_communication_service.
type DataCommunicationServiceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datacommunicationservice.Timeouts `hcl:"timeouts,block"`
}
type dataCommunicationServiceAttributes struct {
	ref terra.Reference
}

// DataLocation returns a reference to field data_location of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) DataLocation() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("data_location"))
}

// Id returns a reference to field id of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("name"))
}

// PrimaryConnectionString returns a reference to field primary_connection_string of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) PrimaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("primary_connection_string"))
}

// PrimaryKey returns a reference to field primary_key of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("primary_key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("resource_group_name"))
}

// SecondaryConnectionString returns a reference to field secondary_connection_string of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) SecondaryConnectionString() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("secondary_connection_string"))
}

// SecondaryKey returns a reference to field secondary_key of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("secondary_key"))
}

// Tags returns a reference to field tags of azurerm_communication_service.
func (cs dataCommunicationServiceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cs.ref.Append("tags"))
}

func (cs dataCommunicationServiceAttributes) Timeouts() datacommunicationservice.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datacommunicationservice.TimeoutsAttributes](cs.ref.Append("timeouts"))
}
