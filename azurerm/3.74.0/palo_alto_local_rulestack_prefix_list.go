// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	paloaltolocalrulestackprefixlist "github.com/golingon/terraproviders/azurerm/3.74.0/paloaltolocalrulestackprefixlist"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewPaloAltoLocalRulestackPrefixList creates a new instance of [PaloAltoLocalRulestackPrefixList].
func NewPaloAltoLocalRulestackPrefixList(name string, args PaloAltoLocalRulestackPrefixListArgs) *PaloAltoLocalRulestackPrefixList {
	return &PaloAltoLocalRulestackPrefixList{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PaloAltoLocalRulestackPrefixList)(nil)

// PaloAltoLocalRulestackPrefixList represents the Terraform resource azurerm_palo_alto_local_rulestack_prefix_list.
type PaloAltoLocalRulestackPrefixList struct {
	Name      string
	Args      PaloAltoLocalRulestackPrefixListArgs
	state     *paloAltoLocalRulestackPrefixListState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PaloAltoLocalRulestackPrefixList].
func (palrpl *PaloAltoLocalRulestackPrefixList) Type() string {
	return "azurerm_palo_alto_local_rulestack_prefix_list"
}

// LocalName returns the local name for [PaloAltoLocalRulestackPrefixList].
func (palrpl *PaloAltoLocalRulestackPrefixList) LocalName() string {
	return palrpl.Name
}

// Configuration returns the configuration (args) for [PaloAltoLocalRulestackPrefixList].
func (palrpl *PaloAltoLocalRulestackPrefixList) Configuration() interface{} {
	return palrpl.Args
}

// DependOn is used for other resources to depend on [PaloAltoLocalRulestackPrefixList].
func (palrpl *PaloAltoLocalRulestackPrefixList) DependOn() terra.Reference {
	return terra.ReferenceResource(palrpl)
}

// Dependencies returns the list of resources [PaloAltoLocalRulestackPrefixList] depends_on.
func (palrpl *PaloAltoLocalRulestackPrefixList) Dependencies() terra.Dependencies {
	return palrpl.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PaloAltoLocalRulestackPrefixList].
func (palrpl *PaloAltoLocalRulestackPrefixList) LifecycleManagement() *terra.Lifecycle {
	return palrpl.Lifecycle
}

// Attributes returns the attributes for [PaloAltoLocalRulestackPrefixList].
func (palrpl *PaloAltoLocalRulestackPrefixList) Attributes() paloAltoLocalRulestackPrefixListAttributes {
	return paloAltoLocalRulestackPrefixListAttributes{ref: terra.ReferenceResource(palrpl)}
}

// ImportState imports the given attribute values into [PaloAltoLocalRulestackPrefixList]'s state.
func (palrpl *PaloAltoLocalRulestackPrefixList) ImportState(av io.Reader) error {
	palrpl.state = &paloAltoLocalRulestackPrefixListState{}
	if err := json.NewDecoder(av).Decode(palrpl.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", palrpl.Type(), palrpl.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PaloAltoLocalRulestackPrefixList] has state.
func (palrpl *PaloAltoLocalRulestackPrefixList) State() (*paloAltoLocalRulestackPrefixListState, bool) {
	return palrpl.state, palrpl.state != nil
}

// StateMust returns the state for [PaloAltoLocalRulestackPrefixList]. Panics if the state is nil.
func (palrpl *PaloAltoLocalRulestackPrefixList) StateMust() *paloAltoLocalRulestackPrefixListState {
	if palrpl.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", palrpl.Type(), palrpl.LocalName()))
	}
	return palrpl.state
}

// PaloAltoLocalRulestackPrefixListArgs contains the configurations for azurerm_palo_alto_local_rulestack_prefix_list.
type PaloAltoLocalRulestackPrefixListArgs struct {
	// AuditComment: string, optional
	AuditComment terra.StringValue `hcl:"audit_comment,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PrefixList: list of string, required
	PrefixList terra.ListValue[terra.StringValue] `hcl:"prefix_list,attr" validate:"required"`
	// RulestackId: string, required
	RulestackId terra.StringValue `hcl:"rulestack_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *paloaltolocalrulestackprefixlist.Timeouts `hcl:"timeouts,block"`
}
type paloAltoLocalRulestackPrefixListAttributes struct {
	ref terra.Reference
}

// AuditComment returns a reference to field audit_comment of azurerm_palo_alto_local_rulestack_prefix_list.
func (palrpl paloAltoLocalRulestackPrefixListAttributes) AuditComment() terra.StringValue {
	return terra.ReferenceAsString(palrpl.ref.Append("audit_comment"))
}

// Description returns a reference to field description of azurerm_palo_alto_local_rulestack_prefix_list.
func (palrpl paloAltoLocalRulestackPrefixListAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(palrpl.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_palo_alto_local_rulestack_prefix_list.
func (palrpl paloAltoLocalRulestackPrefixListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(palrpl.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_palo_alto_local_rulestack_prefix_list.
func (palrpl paloAltoLocalRulestackPrefixListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(palrpl.ref.Append("name"))
}

// PrefixList returns a reference to field prefix_list of azurerm_palo_alto_local_rulestack_prefix_list.
func (palrpl paloAltoLocalRulestackPrefixListAttributes) PrefixList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](palrpl.ref.Append("prefix_list"))
}

// RulestackId returns a reference to field rulestack_id of azurerm_palo_alto_local_rulestack_prefix_list.
func (palrpl paloAltoLocalRulestackPrefixListAttributes) RulestackId() terra.StringValue {
	return terra.ReferenceAsString(palrpl.ref.Append("rulestack_id"))
}

func (palrpl paloAltoLocalRulestackPrefixListAttributes) Timeouts() paloaltolocalrulestackprefixlist.TimeoutsAttributes {
	return terra.ReferenceAsSingle[paloaltolocalrulestackprefixlist.TimeoutsAttributes](palrpl.ref.Append("timeouts"))
}

type paloAltoLocalRulestackPrefixListState struct {
	AuditComment string                                          `json:"audit_comment"`
	Description  string                                          `json:"description"`
	Id           string                                          `json:"id"`
	Name         string                                          `json:"name"`
	PrefixList   []string                                        `json:"prefix_list"`
	RulestackId  string                                          `json:"rulestack_id"`
	Timeouts     *paloaltolocalrulestackprefixlist.TimeoutsState `json:"timeouts"`
}
