// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datamapsaccount "github.com/golingon/terraproviders/azurerm/3.74.0/datamapsaccount"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataMapsAccount creates a new instance of [DataMapsAccount].
func NewDataMapsAccount(name string, args DataMapsAccountArgs) *DataMapsAccount {
	return &DataMapsAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMapsAccount)(nil)

// DataMapsAccount represents the Terraform data resource azurerm_maps_account.
type DataMapsAccount struct {
	Name string
	Args DataMapsAccountArgs
}

// DataSource returns the Terraform object type for [DataMapsAccount].
func (ma *DataMapsAccount) DataSource() string {
	return "azurerm_maps_account"
}

// LocalName returns the local name for [DataMapsAccount].
func (ma *DataMapsAccount) LocalName() string {
	return ma.Name
}

// Configuration returns the configuration (args) for [DataMapsAccount].
func (ma *DataMapsAccount) Configuration() interface{} {
	return ma.Args
}

// Attributes returns the attributes for [DataMapsAccount].
func (ma *DataMapsAccount) Attributes() dataMapsAccountAttributes {
	return dataMapsAccountAttributes{ref: terra.ReferenceDataResource(ma)}
}

// DataMapsAccountArgs contains the configurations for azurerm_maps_account.
type DataMapsAccountArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *datamapsaccount.Timeouts `hcl:"timeouts,block"`
}
type dataMapsAccountAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_maps_account.
func (ma dataMapsAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_maps_account.
func (ma dataMapsAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("name"))
}

// PrimaryAccessKey returns a reference to field primary_access_key of azurerm_maps_account.
func (ma dataMapsAccountAttributes) PrimaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("primary_access_key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_maps_account.
func (ma dataMapsAccountAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("resource_group_name"))
}

// SecondaryAccessKey returns a reference to field secondary_access_key of azurerm_maps_account.
func (ma dataMapsAccountAttributes) SecondaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("secondary_access_key"))
}

// SkuName returns a reference to field sku_name of azurerm_maps_account.
func (ma dataMapsAccountAttributes) SkuName() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("sku_name"))
}

// Tags returns a reference to field tags of azurerm_maps_account.
func (ma dataMapsAccountAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ma.ref.Append("tags"))
}

// XMsClientId returns a reference to field x_ms_client_id of azurerm_maps_account.
func (ma dataMapsAccountAttributes) XMsClientId() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("x_ms_client_id"))
}

func (ma dataMapsAccountAttributes) Timeouts() datamapsaccount.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datamapsaccount.TimeoutsAttributes](ma.ref.Append("timeouts"))
}
