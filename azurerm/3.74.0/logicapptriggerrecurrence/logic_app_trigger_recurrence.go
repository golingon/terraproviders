// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package logicapptriggerrecurrence

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Schedule struct {
	// AtTheseHours: set of number, optional
	AtTheseHours terra.SetValue[terra.NumberValue] `hcl:"at_these_hours,attr"`
	// AtTheseMinutes: set of number, optional
	AtTheseMinutes terra.SetValue[terra.NumberValue] `hcl:"at_these_minutes,attr"`
	// OnTheseDays: set of string, optional
	OnTheseDays terra.SetValue[terra.StringValue] `hcl:"on_these_days,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ScheduleAttributes struct {
	ref terra.Reference
}

func (s ScheduleAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ScheduleAttributes) InternalWithRef(ref terra.Reference) ScheduleAttributes {
	return ScheduleAttributes{ref: ref}
}

func (s ScheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ScheduleAttributes) AtTheseHours() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](s.ref.Append("at_these_hours"))
}

func (s ScheduleAttributes) AtTheseMinutes() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](s.ref.Append("at_these_minutes"))
}

func (s ScheduleAttributes) OnTheseDays() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("on_these_days"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ScheduleState struct {
	AtTheseHours   []float64 `json:"at_these_hours"`
	AtTheseMinutes []float64 `json:"at_these_minutes"`
	OnTheseDays    []string  `json:"on_these_days"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
