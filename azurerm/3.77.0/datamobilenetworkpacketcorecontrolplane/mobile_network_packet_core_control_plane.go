// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datamobilenetworkpacketcorecontrolplane

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Identity struct{}

type LocalDiagnosticsAccess struct{}

type Platform struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i IdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type LocalDiagnosticsAccessAttributes struct {
	ref terra.Reference
}

func (lda LocalDiagnosticsAccessAttributes) InternalRef() (terra.Reference, error) {
	return lda.ref, nil
}

func (lda LocalDiagnosticsAccessAttributes) InternalWithRef(ref terra.Reference) LocalDiagnosticsAccessAttributes {
	return LocalDiagnosticsAccessAttributes{ref: ref}
}

func (lda LocalDiagnosticsAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lda.ref.InternalTokens()
}

func (lda LocalDiagnosticsAccessAttributes) AuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(lda.ref.Append("authentication_type"))
}

func (lda LocalDiagnosticsAccessAttributes) HttpsServerCertificateUrl() terra.StringValue {
	return terra.ReferenceAsString(lda.ref.Append("https_server_certificate_url"))
}

type PlatformAttributes struct {
	ref terra.Reference
}

func (p PlatformAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PlatformAttributes) InternalWithRef(ref terra.Reference) PlatformAttributes {
	return PlatformAttributes{ref: ref}
}

func (p PlatformAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PlatformAttributes) ArcKubernetesClusterId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("arc_kubernetes_cluster_id"))
}

func (p PlatformAttributes) CustomLocationId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("custom_location_id"))
}

func (p PlatformAttributes) EdgeDeviceId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("edge_device_id"))
}

func (p PlatformAttributes) StackHciClusterId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("stack_hci_cluster_id"))
}

func (p PlatformAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type IdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	Type        string   `json:"type"`
}

type LocalDiagnosticsAccessState struct {
	AuthenticationType        string `json:"authentication_type"`
	HttpsServerCertificateUrl string `json:"https_server_certificate_url"`
}

type PlatformState struct {
	ArcKubernetesClusterId string `json:"arc_kubernetes_cluster_id"`
	CustomLocationId       string `json:"custom_location_id"`
	EdgeDeviceId           string `json:"edge_device_id"`
	StackHciClusterId      string `json:"stack_hci_cluster_id"`
	Type                   string `json:"type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
