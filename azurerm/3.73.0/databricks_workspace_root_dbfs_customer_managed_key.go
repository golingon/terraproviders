// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	databricksworkspacerootdbfscustomermanagedkey "github.com/golingon/terraproviders/azurerm/3.73.0/databricksworkspacerootdbfscustomermanagedkey"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDatabricksWorkspaceRootDbfsCustomerManagedKey creates a new instance of [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func NewDatabricksWorkspaceRootDbfsCustomerManagedKey(name string, args DatabricksWorkspaceRootDbfsCustomerManagedKeyArgs) *DatabricksWorkspaceRootDbfsCustomerManagedKey {
	return &DatabricksWorkspaceRootDbfsCustomerManagedKey{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DatabricksWorkspaceRootDbfsCustomerManagedKey)(nil)

// DatabricksWorkspaceRootDbfsCustomerManagedKey represents the Terraform resource azurerm_databricks_workspace_root_dbfs_customer_managed_key.
type DatabricksWorkspaceRootDbfsCustomerManagedKey struct {
	Name      string
	Args      DatabricksWorkspaceRootDbfsCustomerManagedKeyArgs
	state     *databricksWorkspaceRootDbfsCustomerManagedKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) Type() string {
	return "azurerm_databricks_workspace_root_dbfs_customer_managed_key"
}

// LocalName returns the local name for [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) LocalName() string {
	return dwrdcmk.Name
}

// Configuration returns the configuration (args) for [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) Configuration() interface{} {
	return dwrdcmk.Args
}

// DependOn is used for other resources to depend on [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) DependOn() terra.Reference {
	return terra.ReferenceResource(dwrdcmk)
}

// Dependencies returns the list of resources [DatabricksWorkspaceRootDbfsCustomerManagedKey] depends_on.
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) Dependencies() terra.Dependencies {
	return dwrdcmk.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) LifecycleManagement() *terra.Lifecycle {
	return dwrdcmk.Lifecycle
}

// Attributes returns the attributes for [DatabricksWorkspaceRootDbfsCustomerManagedKey].
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) Attributes() databricksWorkspaceRootDbfsCustomerManagedKeyAttributes {
	return databricksWorkspaceRootDbfsCustomerManagedKeyAttributes{ref: terra.ReferenceResource(dwrdcmk)}
}

// ImportState imports the given attribute values into [DatabricksWorkspaceRootDbfsCustomerManagedKey]'s state.
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) ImportState(av io.Reader) error {
	dwrdcmk.state = &databricksWorkspaceRootDbfsCustomerManagedKeyState{}
	if err := json.NewDecoder(av).Decode(dwrdcmk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dwrdcmk.Type(), dwrdcmk.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DatabricksWorkspaceRootDbfsCustomerManagedKey] has state.
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) State() (*databricksWorkspaceRootDbfsCustomerManagedKeyState, bool) {
	return dwrdcmk.state, dwrdcmk.state != nil
}

// StateMust returns the state for [DatabricksWorkspaceRootDbfsCustomerManagedKey]. Panics if the state is nil.
func (dwrdcmk *DatabricksWorkspaceRootDbfsCustomerManagedKey) StateMust() *databricksWorkspaceRootDbfsCustomerManagedKeyState {
	if dwrdcmk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dwrdcmk.Type(), dwrdcmk.LocalName()))
	}
	return dwrdcmk.state
}

// DatabricksWorkspaceRootDbfsCustomerManagedKeyArgs contains the configurations for azurerm_databricks_workspace_root_dbfs_customer_managed_key.
type DatabricksWorkspaceRootDbfsCustomerManagedKeyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeyVaultKeyId: string, required
	KeyVaultKeyId terra.StringValue `hcl:"key_vault_key_id,attr" validate:"required"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *databricksworkspacerootdbfscustomermanagedkey.Timeouts `hcl:"timeouts,block"`
}
type databricksWorkspaceRootDbfsCustomerManagedKeyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (dwrdcmk databricksWorkspaceRootDbfsCustomerManagedKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dwrdcmk.ref.Append("id"))
}

// KeyVaultKeyId returns a reference to field key_vault_key_id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (dwrdcmk databricksWorkspaceRootDbfsCustomerManagedKeyAttributes) KeyVaultKeyId() terra.StringValue {
	return terra.ReferenceAsString(dwrdcmk.ref.Append("key_vault_key_id"))
}

// WorkspaceId returns a reference to field workspace_id of azurerm_databricks_workspace_root_dbfs_customer_managed_key.
func (dwrdcmk databricksWorkspaceRootDbfsCustomerManagedKeyAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(dwrdcmk.ref.Append("workspace_id"))
}

func (dwrdcmk databricksWorkspaceRootDbfsCustomerManagedKeyAttributes) Timeouts() databricksworkspacerootdbfscustomermanagedkey.TimeoutsAttributes {
	return terra.ReferenceAsSingle[databricksworkspacerootdbfscustomermanagedkey.TimeoutsAttributes](dwrdcmk.ref.Append("timeouts"))
}

type databricksWorkspaceRootDbfsCustomerManagedKeyState struct {
	Id            string                                                       `json:"id"`
	KeyVaultKeyId string                                                       `json:"key_vault_key_id"`
	WorkspaceId   string                                                       `json:"workspace_id"`
	Timeouts      *databricksworkspacerootdbfscustomermanagedkey.TimeoutsState `json:"timeouts"`
}
