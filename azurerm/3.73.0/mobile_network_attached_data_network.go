// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	mobilenetworkattacheddatanetwork "github.com/golingon/terraproviders/azurerm/3.73.0/mobilenetworkattacheddatanetwork"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewMobileNetworkAttachedDataNetwork creates a new instance of [MobileNetworkAttachedDataNetwork].
func NewMobileNetworkAttachedDataNetwork(name string, args MobileNetworkAttachedDataNetworkArgs) *MobileNetworkAttachedDataNetwork {
	return &MobileNetworkAttachedDataNetwork{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MobileNetworkAttachedDataNetwork)(nil)

// MobileNetworkAttachedDataNetwork represents the Terraform resource azurerm_mobile_network_attached_data_network.
type MobileNetworkAttachedDataNetwork struct {
	Name      string
	Args      MobileNetworkAttachedDataNetworkArgs
	state     *mobileNetworkAttachedDataNetworkState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [MobileNetworkAttachedDataNetwork].
func (mnadn *MobileNetworkAttachedDataNetwork) Type() string {
	return "azurerm_mobile_network_attached_data_network"
}

// LocalName returns the local name for [MobileNetworkAttachedDataNetwork].
func (mnadn *MobileNetworkAttachedDataNetwork) LocalName() string {
	return mnadn.Name
}

// Configuration returns the configuration (args) for [MobileNetworkAttachedDataNetwork].
func (mnadn *MobileNetworkAttachedDataNetwork) Configuration() interface{} {
	return mnadn.Args
}

// DependOn is used for other resources to depend on [MobileNetworkAttachedDataNetwork].
func (mnadn *MobileNetworkAttachedDataNetwork) DependOn() terra.Reference {
	return terra.ReferenceResource(mnadn)
}

// Dependencies returns the list of resources [MobileNetworkAttachedDataNetwork] depends_on.
func (mnadn *MobileNetworkAttachedDataNetwork) Dependencies() terra.Dependencies {
	return mnadn.DependsOn
}

// LifecycleManagement returns the lifecycle block for [MobileNetworkAttachedDataNetwork].
func (mnadn *MobileNetworkAttachedDataNetwork) LifecycleManagement() *terra.Lifecycle {
	return mnadn.Lifecycle
}

// Attributes returns the attributes for [MobileNetworkAttachedDataNetwork].
func (mnadn *MobileNetworkAttachedDataNetwork) Attributes() mobileNetworkAttachedDataNetworkAttributes {
	return mobileNetworkAttachedDataNetworkAttributes{ref: terra.ReferenceResource(mnadn)}
}

// ImportState imports the given attribute values into [MobileNetworkAttachedDataNetwork]'s state.
func (mnadn *MobileNetworkAttachedDataNetwork) ImportState(av io.Reader) error {
	mnadn.state = &mobileNetworkAttachedDataNetworkState{}
	if err := json.NewDecoder(av).Decode(mnadn.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mnadn.Type(), mnadn.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [MobileNetworkAttachedDataNetwork] has state.
func (mnadn *MobileNetworkAttachedDataNetwork) State() (*mobileNetworkAttachedDataNetworkState, bool) {
	return mnadn.state, mnadn.state != nil
}

// StateMust returns the state for [MobileNetworkAttachedDataNetwork]. Panics if the state is nil.
func (mnadn *MobileNetworkAttachedDataNetwork) StateMust() *mobileNetworkAttachedDataNetworkState {
	if mnadn.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mnadn.Type(), mnadn.LocalName()))
	}
	return mnadn.state
}

// MobileNetworkAttachedDataNetworkArgs contains the configurations for azurerm_mobile_network_attached_data_network.
type MobileNetworkAttachedDataNetworkArgs struct {
	// DnsAddresses: list of string, required
	DnsAddresses terra.ListValue[terra.StringValue] `hcl:"dns_addresses,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MobileNetworkDataNetworkName: string, required
	MobileNetworkDataNetworkName terra.StringValue `hcl:"mobile_network_data_network_name,attr" validate:"required"`
	// MobileNetworkPacketCoreDataPlaneId: string, required
	MobileNetworkPacketCoreDataPlaneId terra.StringValue `hcl:"mobile_network_packet_core_data_plane_id,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// UserEquipmentAddressPoolPrefixes: list of string, optional
	UserEquipmentAddressPoolPrefixes terra.ListValue[terra.StringValue] `hcl:"user_equipment_address_pool_prefixes,attr"`
	// UserEquipmentStaticAddressPoolPrefixes: list of string, optional
	UserEquipmentStaticAddressPoolPrefixes terra.ListValue[terra.StringValue] `hcl:"user_equipment_static_address_pool_prefixes,attr"`
	// UserPlaneAccessIpv4Address: string, optional
	UserPlaneAccessIpv4Address terra.StringValue `hcl:"user_plane_access_ipv4_address,attr"`
	// UserPlaneAccessIpv4Gateway: string, optional
	UserPlaneAccessIpv4Gateway terra.StringValue `hcl:"user_plane_access_ipv4_gateway,attr"`
	// UserPlaneAccessIpv4Subnet: string, optional
	UserPlaneAccessIpv4Subnet terra.StringValue `hcl:"user_plane_access_ipv4_subnet,attr"`
	// UserPlaneAccessName: string, optional
	UserPlaneAccessName terra.StringValue `hcl:"user_plane_access_name,attr"`
	// NetworkAddressPortTranslation: optional
	NetworkAddressPortTranslation *mobilenetworkattacheddatanetwork.NetworkAddressPortTranslation `hcl:"network_address_port_translation,block"`
	// Timeouts: optional
	Timeouts *mobilenetworkattacheddatanetwork.Timeouts `hcl:"timeouts,block"`
}
type mobileNetworkAttachedDataNetworkAttributes struct {
	ref terra.Reference
}

// DnsAddresses returns a reference to field dns_addresses of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) DnsAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mnadn.ref.Append("dns_addresses"))
}

// Id returns a reference to field id of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("location"))
}

// MobileNetworkDataNetworkName returns a reference to field mobile_network_data_network_name of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) MobileNetworkDataNetworkName() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("mobile_network_data_network_name"))
}

// MobileNetworkPacketCoreDataPlaneId returns a reference to field mobile_network_packet_core_data_plane_id of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) MobileNetworkPacketCoreDataPlaneId() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("mobile_network_packet_core_data_plane_id"))
}

// Tags returns a reference to field tags of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mnadn.ref.Append("tags"))
}

// UserEquipmentAddressPoolPrefixes returns a reference to field user_equipment_address_pool_prefixes of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) UserEquipmentAddressPoolPrefixes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mnadn.ref.Append("user_equipment_address_pool_prefixes"))
}

// UserEquipmentStaticAddressPoolPrefixes returns a reference to field user_equipment_static_address_pool_prefixes of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) UserEquipmentStaticAddressPoolPrefixes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mnadn.ref.Append("user_equipment_static_address_pool_prefixes"))
}

// UserPlaneAccessIpv4Address returns a reference to field user_plane_access_ipv4_address of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) UserPlaneAccessIpv4Address() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("user_plane_access_ipv4_address"))
}

// UserPlaneAccessIpv4Gateway returns a reference to field user_plane_access_ipv4_gateway of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) UserPlaneAccessIpv4Gateway() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("user_plane_access_ipv4_gateway"))
}

// UserPlaneAccessIpv4Subnet returns a reference to field user_plane_access_ipv4_subnet of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) UserPlaneAccessIpv4Subnet() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("user_plane_access_ipv4_subnet"))
}

// UserPlaneAccessName returns a reference to field user_plane_access_name of azurerm_mobile_network_attached_data_network.
func (mnadn mobileNetworkAttachedDataNetworkAttributes) UserPlaneAccessName() terra.StringValue {
	return terra.ReferenceAsString(mnadn.ref.Append("user_plane_access_name"))
}

func (mnadn mobileNetworkAttachedDataNetworkAttributes) NetworkAddressPortTranslation() terra.ListValue[mobilenetworkattacheddatanetwork.NetworkAddressPortTranslationAttributes] {
	return terra.ReferenceAsList[mobilenetworkattacheddatanetwork.NetworkAddressPortTranslationAttributes](mnadn.ref.Append("network_address_port_translation"))
}

func (mnadn mobileNetworkAttachedDataNetworkAttributes) Timeouts() mobilenetworkattacheddatanetwork.TimeoutsAttributes {
	return terra.ReferenceAsSingle[mobilenetworkattacheddatanetwork.TimeoutsAttributes](mnadn.ref.Append("timeouts"))
}

type mobileNetworkAttachedDataNetworkState struct {
	DnsAddresses                           []string                                                              `json:"dns_addresses"`
	Id                                     string                                                                `json:"id"`
	Location                               string                                                                `json:"location"`
	MobileNetworkDataNetworkName           string                                                                `json:"mobile_network_data_network_name"`
	MobileNetworkPacketCoreDataPlaneId     string                                                                `json:"mobile_network_packet_core_data_plane_id"`
	Tags                                   map[string]string                                                     `json:"tags"`
	UserEquipmentAddressPoolPrefixes       []string                                                              `json:"user_equipment_address_pool_prefixes"`
	UserEquipmentStaticAddressPoolPrefixes []string                                                              `json:"user_equipment_static_address_pool_prefixes"`
	UserPlaneAccessIpv4Address             string                                                                `json:"user_plane_access_ipv4_address"`
	UserPlaneAccessIpv4Gateway             string                                                                `json:"user_plane_access_ipv4_gateway"`
	UserPlaneAccessIpv4Subnet              string                                                                `json:"user_plane_access_ipv4_subnet"`
	UserPlaneAccessName                    string                                                                `json:"user_plane_access_name"`
	NetworkAddressPortTranslation          []mobilenetworkattacheddatanetwork.NetworkAddressPortTranslationState `json:"network_address_port_translation"`
	Timeouts                               *mobilenetworkattacheddatanetwork.TimeoutsState                       `json:"timeouts"`
}
