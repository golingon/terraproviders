// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataplatformimage "github.com/golingon/terraproviders/azurerm/3.73.0/dataplatformimage"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataPlatformImage creates a new instance of [DataPlatformImage].
func NewDataPlatformImage(name string, args DataPlatformImageArgs) *DataPlatformImage {
	return &DataPlatformImage{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataPlatformImage)(nil)

// DataPlatformImage represents the Terraform data resource azurerm_platform_image.
type DataPlatformImage struct {
	Name string
	Args DataPlatformImageArgs
}

// DataSource returns the Terraform object type for [DataPlatformImage].
func (pi *DataPlatformImage) DataSource() string {
	return "azurerm_platform_image"
}

// LocalName returns the local name for [DataPlatformImage].
func (pi *DataPlatformImage) LocalName() string {
	return pi.Name
}

// Configuration returns the configuration (args) for [DataPlatformImage].
func (pi *DataPlatformImage) Configuration() interface{} {
	return pi.Args
}

// Attributes returns the attributes for [DataPlatformImage].
func (pi *DataPlatformImage) Attributes() dataPlatformImageAttributes {
	return dataPlatformImageAttributes{ref: terra.ReferenceDataResource(pi)}
}

// DataPlatformImageArgs contains the configurations for azurerm_platform_image.
type DataPlatformImageArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Offer: string, required
	Offer terra.StringValue `hcl:"offer,attr" validate:"required"`
	// Publisher: string, required
	Publisher terra.StringValue `hcl:"publisher,attr" validate:"required"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// Timeouts: optional
	Timeouts *dataplatformimage.Timeouts `hcl:"timeouts,block"`
}
type dataPlatformImageAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_platform_image.
func (pi dataPlatformImageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_platform_image.
func (pi dataPlatformImageAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("location"))
}

// Offer returns a reference to field offer of azurerm_platform_image.
func (pi dataPlatformImageAttributes) Offer() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("offer"))
}

// Publisher returns a reference to field publisher of azurerm_platform_image.
func (pi dataPlatformImageAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("publisher"))
}

// Sku returns a reference to field sku of azurerm_platform_image.
func (pi dataPlatformImageAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("sku"))
}

// Version returns a reference to field version of azurerm_platform_image.
func (pi dataPlatformImageAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(pi.ref.Append("version"))
}

func (pi dataPlatformImageAttributes) Timeouts() dataplatformimage.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataplatformimage.TimeoutsAttributes](pi.ref.Append("timeouts"))
}
