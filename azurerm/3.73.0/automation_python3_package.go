// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	automationpython3package "github.com/golingon/terraproviders/azurerm/3.73.0/automationpython3package"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewAutomationPython3Package creates a new instance of [AutomationPython3Package].
func NewAutomationPython3Package(name string, args AutomationPython3PackageArgs) *AutomationPython3Package {
	return &AutomationPython3Package{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AutomationPython3Package)(nil)

// AutomationPython3Package represents the Terraform resource azurerm_automation_python3_package.
type AutomationPython3Package struct {
	Name      string
	Args      AutomationPython3PackageArgs
	state     *automationPython3PackageState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AutomationPython3Package].
func (app *AutomationPython3Package) Type() string {
	return "azurerm_automation_python3_package"
}

// LocalName returns the local name for [AutomationPython3Package].
func (app *AutomationPython3Package) LocalName() string {
	return app.Name
}

// Configuration returns the configuration (args) for [AutomationPython3Package].
func (app *AutomationPython3Package) Configuration() interface{} {
	return app.Args
}

// DependOn is used for other resources to depend on [AutomationPython3Package].
func (app *AutomationPython3Package) DependOn() terra.Reference {
	return terra.ReferenceResource(app)
}

// Dependencies returns the list of resources [AutomationPython3Package] depends_on.
func (app *AutomationPython3Package) Dependencies() terra.Dependencies {
	return app.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AutomationPython3Package].
func (app *AutomationPython3Package) LifecycleManagement() *terra.Lifecycle {
	return app.Lifecycle
}

// Attributes returns the attributes for [AutomationPython3Package].
func (app *AutomationPython3Package) Attributes() automationPython3PackageAttributes {
	return automationPython3PackageAttributes{ref: terra.ReferenceResource(app)}
}

// ImportState imports the given attribute values into [AutomationPython3Package]'s state.
func (app *AutomationPython3Package) ImportState(av io.Reader) error {
	app.state = &automationPython3PackageState{}
	if err := json.NewDecoder(av).Decode(app.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", app.Type(), app.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AutomationPython3Package] has state.
func (app *AutomationPython3Package) State() (*automationPython3PackageState, bool) {
	return app.state, app.state != nil
}

// StateMust returns the state for [AutomationPython3Package]. Panics if the state is nil.
func (app *AutomationPython3Package) StateMust() *automationPython3PackageState {
	if app.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", app.Type(), app.LocalName()))
	}
	return app.state
}

// AutomationPython3PackageArgs contains the configurations for azurerm_automation_python3_package.
type AutomationPython3PackageArgs struct {
	// AutomationAccountName: string, required
	AutomationAccountName terra.StringValue `hcl:"automation_account_name,attr" validate:"required"`
	// ContentUri: string, required
	ContentUri terra.StringValue `hcl:"content_uri,attr" validate:"required"`
	// ContentVersion: string, optional
	ContentVersion terra.StringValue `hcl:"content_version,attr"`
	// HashAlgorithm: string, optional
	HashAlgorithm terra.StringValue `hcl:"hash_algorithm,attr"`
	// HashValue: string, optional
	HashValue terra.StringValue `hcl:"hash_value,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *automationpython3package.Timeouts `hcl:"timeouts,block"`
}
type automationPython3PackageAttributes struct {
	ref terra.Reference
}

// AutomationAccountName returns a reference to field automation_account_name of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) AutomationAccountName() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("automation_account_name"))
}

// ContentUri returns a reference to field content_uri of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) ContentUri() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("content_uri"))
}

// ContentVersion returns a reference to field content_version of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) ContentVersion() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("content_version"))
}

// HashAlgorithm returns a reference to field hash_algorithm of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) HashAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("hash_algorithm"))
}

// HashValue returns a reference to field hash_value of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) HashValue() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("hash_value"))
}

// Id returns a reference to field id of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(app.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_automation_python3_package.
func (app automationPython3PackageAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](app.ref.Append("tags"))
}

func (app automationPython3PackageAttributes) Timeouts() automationpython3package.TimeoutsAttributes {
	return terra.ReferenceAsSingle[automationpython3package.TimeoutsAttributes](app.ref.Append("timeouts"))
}

type automationPython3PackageState struct {
	AutomationAccountName string                                  `json:"automation_account_name"`
	ContentUri            string                                  `json:"content_uri"`
	ContentVersion        string                                  `json:"content_version"`
	HashAlgorithm         string                                  `json:"hash_algorithm"`
	HashValue             string                                  `json:"hash_value"`
	Id                    string                                  `json:"id"`
	Name                  string                                  `json:"name"`
	ResourceGroupName     string                                  `json:"resource_group_name"`
	Tags                  map[string]string                       `json:"tags"`
	Timeouts              *automationpython3package.TimeoutsState `json:"timeouts"`
}
