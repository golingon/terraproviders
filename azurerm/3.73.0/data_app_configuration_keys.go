// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataappconfigurationkeys "github.com/golingon/terraproviders/azurerm/3.73.0/dataappconfigurationkeys"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataAppConfigurationKeys creates a new instance of [DataAppConfigurationKeys].
func NewDataAppConfigurationKeys(name string, args DataAppConfigurationKeysArgs) *DataAppConfigurationKeys {
	return &DataAppConfigurationKeys{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAppConfigurationKeys)(nil)

// DataAppConfigurationKeys represents the Terraform data resource azurerm_app_configuration_keys.
type DataAppConfigurationKeys struct {
	Name string
	Args DataAppConfigurationKeysArgs
}

// DataSource returns the Terraform object type for [DataAppConfigurationKeys].
func (ack *DataAppConfigurationKeys) DataSource() string {
	return "azurerm_app_configuration_keys"
}

// LocalName returns the local name for [DataAppConfigurationKeys].
func (ack *DataAppConfigurationKeys) LocalName() string {
	return ack.Name
}

// Configuration returns the configuration (args) for [DataAppConfigurationKeys].
func (ack *DataAppConfigurationKeys) Configuration() interface{} {
	return ack.Args
}

// Attributes returns the attributes for [DataAppConfigurationKeys].
func (ack *DataAppConfigurationKeys) Attributes() dataAppConfigurationKeysAttributes {
	return dataAppConfigurationKeysAttributes{ref: terra.ReferenceDataResource(ack)}
}

// DataAppConfigurationKeysArgs contains the configurations for azurerm_app_configuration_keys.
type DataAppConfigurationKeysArgs struct {
	// ConfigurationStoreId: string, required
	ConfigurationStoreId terra.StringValue `hcl:"configuration_store_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Label: string, optional
	Label terra.StringValue `hcl:"label,attr"`
	// Items: min=0
	Items []dataappconfigurationkeys.Items `hcl:"items,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataappconfigurationkeys.Timeouts `hcl:"timeouts,block"`
}
type dataAppConfigurationKeysAttributes struct {
	ref terra.Reference
}

// ConfigurationStoreId returns a reference to field configuration_store_id of azurerm_app_configuration_keys.
func (ack dataAppConfigurationKeysAttributes) ConfigurationStoreId() terra.StringValue {
	return terra.ReferenceAsString(ack.ref.Append("configuration_store_id"))
}

// Id returns a reference to field id of azurerm_app_configuration_keys.
func (ack dataAppConfigurationKeysAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ack.ref.Append("id"))
}

// Key returns a reference to field key of azurerm_app_configuration_keys.
func (ack dataAppConfigurationKeysAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ack.ref.Append("key"))
}

// Label returns a reference to field label of azurerm_app_configuration_keys.
func (ack dataAppConfigurationKeysAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(ack.ref.Append("label"))
}

func (ack dataAppConfigurationKeysAttributes) Items() terra.ListValue[dataappconfigurationkeys.ItemsAttributes] {
	return terra.ReferenceAsList[dataappconfigurationkeys.ItemsAttributes](ack.ref.Append("items"))
}

func (ack dataAppConfigurationKeysAttributes) Timeouts() dataappconfigurationkeys.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataappconfigurationkeys.TimeoutsAttributes](ack.ref.Append("timeouts"))
}
