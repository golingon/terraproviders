// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"github.com/golingon/lingon/pkg/terra"
	datanetappaccountencryption "github.com/golingon/terraproviders/azurerm/3.98.0/datanetappaccountencryption"
)

// NewDataNetappAccountEncryption creates a new instance of [DataNetappAccountEncryption].
func NewDataNetappAccountEncryption(name string, args DataNetappAccountEncryptionArgs) *DataNetappAccountEncryption {
	return &DataNetappAccountEncryption{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNetappAccountEncryption)(nil)

// DataNetappAccountEncryption represents the Terraform data resource azurerm_netapp_account_encryption.
type DataNetappAccountEncryption struct {
	Name string
	Args DataNetappAccountEncryptionArgs
}

// DataSource returns the Terraform object type for [DataNetappAccountEncryption].
func (nae *DataNetappAccountEncryption) DataSource() string {
	return "azurerm_netapp_account_encryption"
}

// LocalName returns the local name for [DataNetappAccountEncryption].
func (nae *DataNetappAccountEncryption) LocalName() string {
	return nae.Name
}

// Configuration returns the configuration (args) for [DataNetappAccountEncryption].
func (nae *DataNetappAccountEncryption) Configuration() interface{} {
	return nae.Args
}

// Attributes returns the attributes for [DataNetappAccountEncryption].
func (nae *DataNetappAccountEncryption) Attributes() dataNetappAccountEncryptionAttributes {
	return dataNetappAccountEncryptionAttributes{ref: terra.ReferenceDataResource(nae)}
}

// DataNetappAccountEncryptionArgs contains the configurations for azurerm_netapp_account_encryption.
type DataNetappAccountEncryptionArgs struct {
	// EncryptionKey: string, optional
	EncryptionKey terra.StringValue `hcl:"encryption_key,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NetappAccountId: string, required
	NetappAccountId terra.StringValue `hcl:"netapp_account_id,attr" validate:"required"`
	// SystemAssignedIdentityPrincipalId: string, optional
	SystemAssignedIdentityPrincipalId terra.StringValue `hcl:"system_assigned_identity_principal_id,attr"`
	// UserAssignedIdentityId: string, optional
	UserAssignedIdentityId terra.StringValue `hcl:"user_assigned_identity_id,attr"`
	// Timeouts: optional
	Timeouts *datanetappaccountencryption.Timeouts `hcl:"timeouts,block"`
}
type dataNetappAccountEncryptionAttributes struct {
	ref terra.Reference
}

// EncryptionKey returns a reference to field encryption_key of azurerm_netapp_account_encryption.
func (nae dataNetappAccountEncryptionAttributes) EncryptionKey() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("encryption_key"))
}

// Id returns a reference to field id of azurerm_netapp_account_encryption.
func (nae dataNetappAccountEncryptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("id"))
}

// NetappAccountId returns a reference to field netapp_account_id of azurerm_netapp_account_encryption.
func (nae dataNetappAccountEncryptionAttributes) NetappAccountId() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("netapp_account_id"))
}

// SystemAssignedIdentityPrincipalId returns a reference to field system_assigned_identity_principal_id of azurerm_netapp_account_encryption.
func (nae dataNetappAccountEncryptionAttributes) SystemAssignedIdentityPrincipalId() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("system_assigned_identity_principal_id"))
}

// UserAssignedIdentityId returns a reference to field user_assigned_identity_id of azurerm_netapp_account_encryption.
func (nae dataNetappAccountEncryptionAttributes) UserAssignedIdentityId() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("user_assigned_identity_id"))
}

func (nae dataNetappAccountEncryptionAttributes) Timeouts() datanetappaccountencryption.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datanetappaccountencryption.TimeoutsAttributes](nae.ref.Append("timeouts"))
}
