// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	kubernetesfleetupdaterun "github.com/golingon/terraproviders/azurerm/3.98.0/kubernetesfleetupdaterun"
	"io"
)

// NewKubernetesFleetUpdateRun creates a new instance of [KubernetesFleetUpdateRun].
func NewKubernetesFleetUpdateRun(name string, args KubernetesFleetUpdateRunArgs) *KubernetesFleetUpdateRun {
	return &KubernetesFleetUpdateRun{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KubernetesFleetUpdateRun)(nil)

// KubernetesFleetUpdateRun represents the Terraform resource azurerm_kubernetes_fleet_update_run.
type KubernetesFleetUpdateRun struct {
	Name      string
	Args      KubernetesFleetUpdateRunArgs
	state     *kubernetesFleetUpdateRunState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [KubernetesFleetUpdateRun].
func (kfur *KubernetesFleetUpdateRun) Type() string {
	return "azurerm_kubernetes_fleet_update_run"
}

// LocalName returns the local name for [KubernetesFleetUpdateRun].
func (kfur *KubernetesFleetUpdateRun) LocalName() string {
	return kfur.Name
}

// Configuration returns the configuration (args) for [KubernetesFleetUpdateRun].
func (kfur *KubernetesFleetUpdateRun) Configuration() interface{} {
	return kfur.Args
}

// DependOn is used for other resources to depend on [KubernetesFleetUpdateRun].
func (kfur *KubernetesFleetUpdateRun) DependOn() terra.Reference {
	return terra.ReferenceResource(kfur)
}

// Dependencies returns the list of resources [KubernetesFleetUpdateRun] depends_on.
func (kfur *KubernetesFleetUpdateRun) Dependencies() terra.Dependencies {
	return kfur.DependsOn
}

// LifecycleManagement returns the lifecycle block for [KubernetesFleetUpdateRun].
func (kfur *KubernetesFleetUpdateRun) LifecycleManagement() *terra.Lifecycle {
	return kfur.Lifecycle
}

// Attributes returns the attributes for [KubernetesFleetUpdateRun].
func (kfur *KubernetesFleetUpdateRun) Attributes() kubernetesFleetUpdateRunAttributes {
	return kubernetesFleetUpdateRunAttributes{ref: terra.ReferenceResource(kfur)}
}

// ImportState imports the given attribute values into [KubernetesFleetUpdateRun]'s state.
func (kfur *KubernetesFleetUpdateRun) ImportState(av io.Reader) error {
	kfur.state = &kubernetesFleetUpdateRunState{}
	if err := json.NewDecoder(av).Decode(kfur.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kfur.Type(), kfur.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [KubernetesFleetUpdateRun] has state.
func (kfur *KubernetesFleetUpdateRun) State() (*kubernetesFleetUpdateRunState, bool) {
	return kfur.state, kfur.state != nil
}

// StateMust returns the state for [KubernetesFleetUpdateRun]. Panics if the state is nil.
func (kfur *KubernetesFleetUpdateRun) StateMust() *kubernetesFleetUpdateRunState {
	if kfur.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kfur.Type(), kfur.LocalName()))
	}
	return kfur.state
}

// KubernetesFleetUpdateRunArgs contains the configurations for azurerm_kubernetes_fleet_update_run.
type KubernetesFleetUpdateRunArgs struct {
	// FleetUpdateStrategyId: string, optional
	FleetUpdateStrategyId terra.StringValue `hcl:"fleet_update_strategy_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesFleetManagerId: string, required
	KubernetesFleetManagerId terra.StringValue `hcl:"kubernetes_fleet_manager_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ManagedClusterUpdate: required
	ManagedClusterUpdate *kubernetesfleetupdaterun.ManagedClusterUpdate `hcl:"managed_cluster_update,block" validate:"required"`
	// Stage: min=0
	Stage []kubernetesfleetupdaterun.Stage `hcl:"stage,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *kubernetesfleetupdaterun.Timeouts `hcl:"timeouts,block"`
}
type kubernetesFleetUpdateRunAttributes struct {
	ref terra.Reference
}

// FleetUpdateStrategyId returns a reference to field fleet_update_strategy_id of azurerm_kubernetes_fleet_update_run.
func (kfur kubernetesFleetUpdateRunAttributes) FleetUpdateStrategyId() terra.StringValue {
	return terra.ReferenceAsString(kfur.ref.Append("fleet_update_strategy_id"))
}

// Id returns a reference to field id of azurerm_kubernetes_fleet_update_run.
func (kfur kubernetesFleetUpdateRunAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(kfur.ref.Append("id"))
}

// KubernetesFleetManagerId returns a reference to field kubernetes_fleet_manager_id of azurerm_kubernetes_fleet_update_run.
func (kfur kubernetesFleetUpdateRunAttributes) KubernetesFleetManagerId() terra.StringValue {
	return terra.ReferenceAsString(kfur.ref.Append("kubernetes_fleet_manager_id"))
}

// Name returns a reference to field name of azurerm_kubernetes_fleet_update_run.
func (kfur kubernetesFleetUpdateRunAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(kfur.ref.Append("name"))
}

func (kfur kubernetesFleetUpdateRunAttributes) ManagedClusterUpdate() terra.ListValue[kubernetesfleetupdaterun.ManagedClusterUpdateAttributes] {
	return terra.ReferenceAsList[kubernetesfleetupdaterun.ManagedClusterUpdateAttributes](kfur.ref.Append("managed_cluster_update"))
}

func (kfur kubernetesFleetUpdateRunAttributes) Stage() terra.ListValue[kubernetesfleetupdaterun.StageAttributes] {
	return terra.ReferenceAsList[kubernetesfleetupdaterun.StageAttributes](kfur.ref.Append("stage"))
}

func (kfur kubernetesFleetUpdateRunAttributes) Timeouts() kubernetesfleetupdaterun.TimeoutsAttributes {
	return terra.ReferenceAsSingle[kubernetesfleetupdaterun.TimeoutsAttributes](kfur.ref.Append("timeouts"))
}

type kubernetesFleetUpdateRunState struct {
	FleetUpdateStrategyId    string                                               `json:"fleet_update_strategy_id"`
	Id                       string                                               `json:"id"`
	KubernetesFleetManagerId string                                               `json:"kubernetes_fleet_manager_id"`
	Name                     string                                               `json:"name"`
	ManagedClusterUpdate     []kubernetesfleetupdaterun.ManagedClusterUpdateState `json:"managed_cluster_update"`
	Stage                    []kubernetesfleetupdaterun.StageState                `json:"stage"`
	Timeouts                 *kubernetesfleetupdaterun.TimeoutsState              `json:"timeouts"`
}
