// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cdnfrontdoororigingroup

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type HealthProbe struct {
	// IntervalInSeconds: number, required
	IntervalInSeconds terra.NumberValue `hcl:"interval_in_seconds,attr" validate:"required"`
	// Path: string, optional
	Path terra.StringValue `hcl:"path,attr"`
	// Protocol: string, required
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
	// RequestType: string, optional
	RequestType terra.StringValue `hcl:"request_type,attr"`
}

type LoadBalancing struct {
	// AdditionalLatencyInMilliseconds: number, optional
	AdditionalLatencyInMilliseconds terra.NumberValue `hcl:"additional_latency_in_milliseconds,attr"`
	// SampleSize: number, optional
	SampleSize terra.NumberValue `hcl:"sample_size,attr"`
	// SuccessfulSamplesRequired: number, optional
	SuccessfulSamplesRequired terra.NumberValue `hcl:"successful_samples_required,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type HealthProbeAttributes struct {
	ref terra.Reference
}

func (hp HealthProbeAttributes) InternalRef() (terra.Reference, error) {
	return hp.ref, nil
}

func (hp HealthProbeAttributes) InternalWithRef(ref terra.Reference) HealthProbeAttributes {
	return HealthProbeAttributes{ref: ref}
}

func (hp HealthProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hp.ref.InternalTokens()
}

func (hp HealthProbeAttributes) IntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hp.ref.Append("interval_in_seconds"))
}

func (hp HealthProbeAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("path"))
}

func (hp HealthProbeAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("protocol"))
}

func (hp HealthProbeAttributes) RequestType() terra.StringValue {
	return terra.ReferenceAsString(hp.ref.Append("request_type"))
}

type LoadBalancingAttributes struct {
	ref terra.Reference
}

func (lb LoadBalancingAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb LoadBalancingAttributes) InternalWithRef(ref terra.Reference) LoadBalancingAttributes {
	return LoadBalancingAttributes{ref: ref}
}

func (lb LoadBalancingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb LoadBalancingAttributes) AdditionalLatencyInMilliseconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("additional_latency_in_milliseconds"))
}

func (lb LoadBalancingAttributes) SampleSize() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("sample_size"))
}

func (lb LoadBalancingAttributes) SuccessfulSamplesRequired() terra.NumberValue {
	return terra.ReferenceAsNumber(lb.ref.Append("successful_samples_required"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type HealthProbeState struct {
	IntervalInSeconds float64 `json:"interval_in_seconds"`
	Path              string  `json:"path"`
	Protocol          string  `json:"protocol"`
	RequestType       string  `json:"request_type"`
}

type LoadBalancingState struct {
	AdditionalLatencyInMilliseconds float64 `json:"additional_latency_in_milliseconds"`
	SampleSize                      float64 `json:"sample_size"`
	SuccessfulSamplesRequired       float64 `json:"successful_samples_required"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
