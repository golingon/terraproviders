// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	staticwebapp "github.com/golingon/terraproviders/azurerm/3.98.0/staticwebapp"
	"io"
)

// NewStaticWebApp creates a new instance of [StaticWebApp].
func NewStaticWebApp(name string, args StaticWebAppArgs) *StaticWebApp {
	return &StaticWebApp{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*StaticWebApp)(nil)

// StaticWebApp represents the Terraform resource azurerm_static_web_app.
type StaticWebApp struct {
	Name      string
	Args      StaticWebAppArgs
	state     *staticWebAppState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [StaticWebApp].
func (swa *StaticWebApp) Type() string {
	return "azurerm_static_web_app"
}

// LocalName returns the local name for [StaticWebApp].
func (swa *StaticWebApp) LocalName() string {
	return swa.Name
}

// Configuration returns the configuration (args) for [StaticWebApp].
func (swa *StaticWebApp) Configuration() interface{} {
	return swa.Args
}

// DependOn is used for other resources to depend on [StaticWebApp].
func (swa *StaticWebApp) DependOn() terra.Reference {
	return terra.ReferenceResource(swa)
}

// Dependencies returns the list of resources [StaticWebApp] depends_on.
func (swa *StaticWebApp) Dependencies() terra.Dependencies {
	return swa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [StaticWebApp].
func (swa *StaticWebApp) LifecycleManagement() *terra.Lifecycle {
	return swa.Lifecycle
}

// Attributes returns the attributes for [StaticWebApp].
func (swa *StaticWebApp) Attributes() staticWebAppAttributes {
	return staticWebAppAttributes{ref: terra.ReferenceResource(swa)}
}

// ImportState imports the given attribute values into [StaticWebApp]'s state.
func (swa *StaticWebApp) ImportState(av io.Reader) error {
	swa.state = &staticWebAppState{}
	if err := json.NewDecoder(av).Decode(swa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", swa.Type(), swa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [StaticWebApp] has state.
func (swa *StaticWebApp) State() (*staticWebAppState, bool) {
	return swa.state, swa.state != nil
}

// StateMust returns the state for [StaticWebApp]. Panics if the state is nil.
func (swa *StaticWebApp) StateMust() *staticWebAppState {
	if swa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", swa.Type(), swa.LocalName()))
	}
	return swa.state
}

// StaticWebAppArgs contains the configurations for azurerm_static_web_app.
type StaticWebAppArgs struct {
	// AppSettings: map of string, optional
	AppSettings terra.MapValue[terra.StringValue] `hcl:"app_settings,attr"`
	// ConfigurationFileChangesEnabled: bool, optional
	ConfigurationFileChangesEnabled terra.BoolValue `hcl:"configuration_file_changes_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PreviewEnvironmentsEnabled: bool, optional
	PreviewEnvironmentsEnabled terra.BoolValue `hcl:"preview_environments_enabled,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SkuSize: string, optional
	SkuSize terra.StringValue `hcl:"sku_size,attr"`
	// SkuTier: string, optional
	SkuTier terra.StringValue `hcl:"sku_tier,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// BasicAuth: optional
	BasicAuth *staticwebapp.BasicAuth `hcl:"basic_auth,block"`
	// Identity: optional
	Identity *staticwebapp.Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *staticwebapp.Timeouts `hcl:"timeouts,block"`
}
type staticWebAppAttributes struct {
	ref terra.Reference
}

// ApiKey returns a reference to field api_key of azurerm_static_web_app.
func (swa staticWebAppAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("api_key"))
}

// AppSettings returns a reference to field app_settings of azurerm_static_web_app.
func (swa staticWebAppAttributes) AppSettings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](swa.ref.Append("app_settings"))
}

// ConfigurationFileChangesEnabled returns a reference to field configuration_file_changes_enabled of azurerm_static_web_app.
func (swa staticWebAppAttributes) ConfigurationFileChangesEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(swa.ref.Append("configuration_file_changes_enabled"))
}

// DefaultHostName returns a reference to field default_host_name of azurerm_static_web_app.
func (swa staticWebAppAttributes) DefaultHostName() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("default_host_name"))
}

// Id returns a reference to field id of azurerm_static_web_app.
func (swa staticWebAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_static_web_app.
func (swa staticWebAppAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_static_web_app.
func (swa staticWebAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("name"))
}

// PreviewEnvironmentsEnabled returns a reference to field preview_environments_enabled of azurerm_static_web_app.
func (swa staticWebAppAttributes) PreviewEnvironmentsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(swa.ref.Append("preview_environments_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_static_web_app.
func (swa staticWebAppAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("resource_group_name"))
}

// SkuSize returns a reference to field sku_size of azurerm_static_web_app.
func (swa staticWebAppAttributes) SkuSize() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("sku_size"))
}

// SkuTier returns a reference to field sku_tier of azurerm_static_web_app.
func (swa staticWebAppAttributes) SkuTier() terra.StringValue {
	return terra.ReferenceAsString(swa.ref.Append("sku_tier"))
}

// Tags returns a reference to field tags of azurerm_static_web_app.
func (swa staticWebAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](swa.ref.Append("tags"))
}

func (swa staticWebAppAttributes) BasicAuth() terra.ListValue[staticwebapp.BasicAuthAttributes] {
	return terra.ReferenceAsList[staticwebapp.BasicAuthAttributes](swa.ref.Append("basic_auth"))
}

func (swa staticWebAppAttributes) Identity() terra.ListValue[staticwebapp.IdentityAttributes] {
	return terra.ReferenceAsList[staticwebapp.IdentityAttributes](swa.ref.Append("identity"))
}

func (swa staticWebAppAttributes) Timeouts() staticwebapp.TimeoutsAttributes {
	return terra.ReferenceAsSingle[staticwebapp.TimeoutsAttributes](swa.ref.Append("timeouts"))
}

type staticWebAppState struct {
	ApiKey                          string                        `json:"api_key"`
	AppSettings                     map[string]string             `json:"app_settings"`
	ConfigurationFileChangesEnabled bool                          `json:"configuration_file_changes_enabled"`
	DefaultHostName                 string                        `json:"default_host_name"`
	Id                              string                        `json:"id"`
	Location                        string                        `json:"location"`
	Name                            string                        `json:"name"`
	PreviewEnvironmentsEnabled      bool                          `json:"preview_environments_enabled"`
	ResourceGroupName               string                        `json:"resource_group_name"`
	SkuSize                         string                        `json:"sku_size"`
	SkuTier                         string                        `json:"sku_tier"`
	Tags                            map[string]string             `json:"tags"`
	BasicAuth                       []staticwebapp.BasicAuthState `json:"basic_auth"`
	Identity                        []staticwebapp.IdentityState  `json:"identity"`
	Timeouts                        *staticwebapp.TimeoutsState   `json:"timeouts"`
}
