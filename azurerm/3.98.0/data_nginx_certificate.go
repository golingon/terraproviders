// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"github.com/golingon/lingon/pkg/terra"
	datanginxcertificate "github.com/golingon/terraproviders/azurerm/3.98.0/datanginxcertificate"
)

// NewDataNginxCertificate creates a new instance of [DataNginxCertificate].
func NewDataNginxCertificate(name string, args DataNginxCertificateArgs) *DataNginxCertificate {
	return &DataNginxCertificate{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNginxCertificate)(nil)

// DataNginxCertificate represents the Terraform data resource azurerm_nginx_certificate.
type DataNginxCertificate struct {
	Name string
	Args DataNginxCertificateArgs
}

// DataSource returns the Terraform object type for [DataNginxCertificate].
func (nc *DataNginxCertificate) DataSource() string {
	return "azurerm_nginx_certificate"
}

// LocalName returns the local name for [DataNginxCertificate].
func (nc *DataNginxCertificate) LocalName() string {
	return nc.Name
}

// Configuration returns the configuration (args) for [DataNginxCertificate].
func (nc *DataNginxCertificate) Configuration() interface{} {
	return nc.Args
}

// Attributes returns the attributes for [DataNginxCertificate].
func (nc *DataNginxCertificate) Attributes() dataNginxCertificateAttributes {
	return dataNginxCertificateAttributes{ref: terra.ReferenceDataResource(nc)}
}

// DataNginxCertificateArgs contains the configurations for azurerm_nginx_certificate.
type DataNginxCertificateArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NginxDeploymentId: string, required
	NginxDeploymentId terra.StringValue `hcl:"nginx_deployment_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datanginxcertificate.Timeouts `hcl:"timeouts,block"`
}
type dataNginxCertificateAttributes struct {
	ref terra.Reference
}

// CertificateVirtualPath returns a reference to field certificate_virtual_path of azurerm_nginx_certificate.
func (nc dataNginxCertificateAttributes) CertificateVirtualPath() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("certificate_virtual_path"))
}

// Id returns a reference to field id of azurerm_nginx_certificate.
func (nc dataNginxCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("id"))
}

// KeyVaultSecretId returns a reference to field key_vault_secret_id of azurerm_nginx_certificate.
func (nc dataNginxCertificateAttributes) KeyVaultSecretId() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("key_vault_secret_id"))
}

// KeyVirtualPath returns a reference to field key_virtual_path of azurerm_nginx_certificate.
func (nc dataNginxCertificateAttributes) KeyVirtualPath() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("key_virtual_path"))
}

// Name returns a reference to field name of azurerm_nginx_certificate.
func (nc dataNginxCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("name"))
}

// NginxDeploymentId returns a reference to field nginx_deployment_id of azurerm_nginx_certificate.
func (nc dataNginxCertificateAttributes) NginxDeploymentId() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("nginx_deployment_id"))
}

func (nc dataNginxCertificateAttributes) Timeouts() datanginxcertificate.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datanginxcertificate.TimeoutsAttributes](nc.ref.Append("timeouts"))
}
