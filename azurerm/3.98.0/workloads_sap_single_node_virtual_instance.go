// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	workloadssapsinglenodevirtualinstance "github.com/golingon/terraproviders/azurerm/3.98.0/workloadssapsinglenodevirtualinstance"
	"io"
)

// NewWorkloadsSapSingleNodeVirtualInstance creates a new instance of [WorkloadsSapSingleNodeVirtualInstance].
func NewWorkloadsSapSingleNodeVirtualInstance(name string, args WorkloadsSapSingleNodeVirtualInstanceArgs) *WorkloadsSapSingleNodeVirtualInstance {
	return &WorkloadsSapSingleNodeVirtualInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WorkloadsSapSingleNodeVirtualInstance)(nil)

// WorkloadsSapSingleNodeVirtualInstance represents the Terraform resource azurerm_workloads_sap_single_node_virtual_instance.
type WorkloadsSapSingleNodeVirtualInstance struct {
	Name      string
	Args      WorkloadsSapSingleNodeVirtualInstanceArgs
	state     *workloadsSapSingleNodeVirtualInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [WorkloadsSapSingleNodeVirtualInstance].
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) Type() string {
	return "azurerm_workloads_sap_single_node_virtual_instance"
}

// LocalName returns the local name for [WorkloadsSapSingleNodeVirtualInstance].
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) LocalName() string {
	return wssnvi.Name
}

// Configuration returns the configuration (args) for [WorkloadsSapSingleNodeVirtualInstance].
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) Configuration() interface{} {
	return wssnvi.Args
}

// DependOn is used for other resources to depend on [WorkloadsSapSingleNodeVirtualInstance].
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) DependOn() terra.Reference {
	return terra.ReferenceResource(wssnvi)
}

// Dependencies returns the list of resources [WorkloadsSapSingleNodeVirtualInstance] depends_on.
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) Dependencies() terra.Dependencies {
	return wssnvi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [WorkloadsSapSingleNodeVirtualInstance].
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) LifecycleManagement() *terra.Lifecycle {
	return wssnvi.Lifecycle
}

// Attributes returns the attributes for [WorkloadsSapSingleNodeVirtualInstance].
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) Attributes() workloadsSapSingleNodeVirtualInstanceAttributes {
	return workloadsSapSingleNodeVirtualInstanceAttributes{ref: terra.ReferenceResource(wssnvi)}
}

// ImportState imports the given attribute values into [WorkloadsSapSingleNodeVirtualInstance]'s state.
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) ImportState(av io.Reader) error {
	wssnvi.state = &workloadsSapSingleNodeVirtualInstanceState{}
	if err := json.NewDecoder(av).Decode(wssnvi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wssnvi.Type(), wssnvi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [WorkloadsSapSingleNodeVirtualInstance] has state.
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) State() (*workloadsSapSingleNodeVirtualInstanceState, bool) {
	return wssnvi.state, wssnvi.state != nil
}

// StateMust returns the state for [WorkloadsSapSingleNodeVirtualInstance]. Panics if the state is nil.
func (wssnvi *WorkloadsSapSingleNodeVirtualInstance) StateMust() *workloadsSapSingleNodeVirtualInstanceState {
	if wssnvi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wssnvi.Type(), wssnvi.LocalName()))
	}
	return wssnvi.state
}

// WorkloadsSapSingleNodeVirtualInstanceArgs contains the configurations for azurerm_workloads_sap_single_node_virtual_instance.
type WorkloadsSapSingleNodeVirtualInstanceArgs struct {
	// AppLocation: string, required
	AppLocation terra.StringValue `hcl:"app_location,attr" validate:"required"`
	// Environment: string, required
	Environment terra.StringValue `hcl:"environment,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ManagedResourceGroupName: string, optional
	ManagedResourceGroupName terra.StringValue `hcl:"managed_resource_group_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SapFqdn: string, required
	SapFqdn terra.StringValue `hcl:"sap_fqdn,attr" validate:"required"`
	// SapProduct: string, required
	SapProduct terra.StringValue `hcl:"sap_product,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: optional
	Identity *workloadssapsinglenodevirtualinstance.Identity `hcl:"identity,block"`
	// SingleServerConfiguration: required
	SingleServerConfiguration *workloadssapsinglenodevirtualinstance.SingleServerConfiguration `hcl:"single_server_configuration,block" validate:"required"`
	// Timeouts: optional
	Timeouts *workloadssapsinglenodevirtualinstance.Timeouts `hcl:"timeouts,block"`
}
type workloadsSapSingleNodeVirtualInstanceAttributes struct {
	ref terra.Reference
}

// AppLocation returns a reference to field app_location of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) AppLocation() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("app_location"))
}

// Environment returns a reference to field environment of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Environment() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("environment"))
}

// Id returns a reference to field id of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("location"))
}

// ManagedResourceGroupName returns a reference to field managed_resource_group_name of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) ManagedResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("managed_resource_group_name"))
}

// Name returns a reference to field name of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("resource_group_name"))
}

// SapFqdn returns a reference to field sap_fqdn of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) SapFqdn() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("sap_fqdn"))
}

// SapProduct returns a reference to field sap_product of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) SapProduct() terra.StringValue {
	return terra.ReferenceAsString(wssnvi.ref.Append("sap_product"))
}

// Tags returns a reference to field tags of azurerm_workloads_sap_single_node_virtual_instance.
func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](wssnvi.ref.Append("tags"))
}

func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Identity() terra.ListValue[workloadssapsinglenodevirtualinstance.IdentityAttributes] {
	return terra.ReferenceAsList[workloadssapsinglenodevirtualinstance.IdentityAttributes](wssnvi.ref.Append("identity"))
}

func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) SingleServerConfiguration() terra.ListValue[workloadssapsinglenodevirtualinstance.SingleServerConfigurationAttributes] {
	return terra.ReferenceAsList[workloadssapsinglenodevirtualinstance.SingleServerConfigurationAttributes](wssnvi.ref.Append("single_server_configuration"))
}

func (wssnvi workloadsSapSingleNodeVirtualInstanceAttributes) Timeouts() workloadssapsinglenodevirtualinstance.TimeoutsAttributes {
	return terra.ReferenceAsSingle[workloadssapsinglenodevirtualinstance.TimeoutsAttributes](wssnvi.ref.Append("timeouts"))
}

type workloadsSapSingleNodeVirtualInstanceState struct {
	AppLocation               string                                                                 `json:"app_location"`
	Environment               string                                                                 `json:"environment"`
	Id                        string                                                                 `json:"id"`
	Location                  string                                                                 `json:"location"`
	ManagedResourceGroupName  string                                                                 `json:"managed_resource_group_name"`
	Name                      string                                                                 `json:"name"`
	ResourceGroupName         string                                                                 `json:"resource_group_name"`
	SapFqdn                   string                                                                 `json:"sap_fqdn"`
	SapProduct                string                                                                 `json:"sap_product"`
	Tags                      map[string]string                                                      `json:"tags"`
	Identity                  []workloadssapsinglenodevirtualinstance.IdentityState                  `json:"identity"`
	SingleServerConfiguration []workloadssapsinglenodevirtualinstance.SingleServerConfigurationState `json:"single_server_configuration"`
	Timeouts                  *workloadssapsinglenodevirtualinstance.TimeoutsState                   `json:"timeouts"`
}
