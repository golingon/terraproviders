// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package iotsecuritysolution

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AdditionalWorkspace struct {
	// DataTypes: set of string, required
	DataTypes terra.SetValue[terra.StringValue] `hcl:"data_types,attr" validate:"required"`
	// WorkspaceId: string, required
	WorkspaceId terra.StringValue `hcl:"workspace_id,attr" validate:"required"`
}

type RecommendationsEnabled struct {
	// AcrAuthentication: bool, optional
	AcrAuthentication terra.BoolValue `hcl:"acr_authentication,attr"`
	// AgentSendUnutilizedMsg: bool, optional
	AgentSendUnutilizedMsg terra.BoolValue `hcl:"agent_send_unutilized_msg,attr"`
	// Baseline: bool, optional
	Baseline terra.BoolValue `hcl:"baseline,attr"`
	// EdgeHubMemOptimize: bool, optional
	EdgeHubMemOptimize terra.BoolValue `hcl:"edge_hub_mem_optimize,attr"`
	// EdgeLoggingOption: bool, optional
	EdgeLoggingOption terra.BoolValue `hcl:"edge_logging_option,attr"`
	// InconsistentModuleSettings: bool, optional
	InconsistentModuleSettings terra.BoolValue `hcl:"inconsistent_module_settings,attr"`
	// InstallAgent: bool, optional
	InstallAgent terra.BoolValue `hcl:"install_agent,attr"`
	// IpFilterDenyAll: bool, optional
	IpFilterDenyAll terra.BoolValue `hcl:"ip_filter_deny_all,attr"`
	// IpFilterPermissiveRule: bool, optional
	IpFilterPermissiveRule terra.BoolValue `hcl:"ip_filter_permissive_rule,attr"`
	// OpenPorts: bool, optional
	OpenPorts terra.BoolValue `hcl:"open_ports,attr"`
	// PermissiveFirewallPolicy: bool, optional
	PermissiveFirewallPolicy terra.BoolValue `hcl:"permissive_firewall_policy,attr"`
	// PermissiveInputFirewallRules: bool, optional
	PermissiveInputFirewallRules terra.BoolValue `hcl:"permissive_input_firewall_rules,attr"`
	// PermissiveOutputFirewallRules: bool, optional
	PermissiveOutputFirewallRules terra.BoolValue `hcl:"permissive_output_firewall_rules,attr"`
	// PrivilegedDockerOptions: bool, optional
	PrivilegedDockerOptions terra.BoolValue `hcl:"privileged_docker_options,attr"`
	// SharedCredentials: bool, optional
	SharedCredentials terra.BoolValue `hcl:"shared_credentials,attr"`
	// VulnerableTlsCipherSuite: bool, optional
	VulnerableTlsCipherSuite terra.BoolValue `hcl:"vulnerable_tls_cipher_suite,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AdditionalWorkspaceAttributes struct {
	ref terra.Reference
}

func (aw AdditionalWorkspaceAttributes) InternalRef() (terra.Reference, error) {
	return aw.ref, nil
}

func (aw AdditionalWorkspaceAttributes) InternalWithRef(ref terra.Reference) AdditionalWorkspaceAttributes {
	return AdditionalWorkspaceAttributes{ref: ref}
}

func (aw AdditionalWorkspaceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aw.ref.InternalTokens()
}

func (aw AdditionalWorkspaceAttributes) DataTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aw.ref.Append("data_types"))
}

func (aw AdditionalWorkspaceAttributes) WorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(aw.ref.Append("workspace_id"))
}

type RecommendationsEnabledAttributes struct {
	ref terra.Reference
}

func (re RecommendationsEnabledAttributes) InternalRef() (terra.Reference, error) {
	return re.ref, nil
}

func (re RecommendationsEnabledAttributes) InternalWithRef(ref terra.Reference) RecommendationsEnabledAttributes {
	return RecommendationsEnabledAttributes{ref: ref}
}

func (re RecommendationsEnabledAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return re.ref.InternalTokens()
}

func (re RecommendationsEnabledAttributes) AcrAuthentication() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("acr_authentication"))
}

func (re RecommendationsEnabledAttributes) AgentSendUnutilizedMsg() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("agent_send_unutilized_msg"))
}

func (re RecommendationsEnabledAttributes) Baseline() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("baseline"))
}

func (re RecommendationsEnabledAttributes) EdgeHubMemOptimize() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("edge_hub_mem_optimize"))
}

func (re RecommendationsEnabledAttributes) EdgeLoggingOption() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("edge_logging_option"))
}

func (re RecommendationsEnabledAttributes) InconsistentModuleSettings() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("inconsistent_module_settings"))
}

func (re RecommendationsEnabledAttributes) InstallAgent() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("install_agent"))
}

func (re RecommendationsEnabledAttributes) IpFilterDenyAll() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("ip_filter_deny_all"))
}

func (re RecommendationsEnabledAttributes) IpFilterPermissiveRule() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("ip_filter_permissive_rule"))
}

func (re RecommendationsEnabledAttributes) OpenPorts() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("open_ports"))
}

func (re RecommendationsEnabledAttributes) PermissiveFirewallPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("permissive_firewall_policy"))
}

func (re RecommendationsEnabledAttributes) PermissiveInputFirewallRules() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("permissive_input_firewall_rules"))
}

func (re RecommendationsEnabledAttributes) PermissiveOutputFirewallRules() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("permissive_output_firewall_rules"))
}

func (re RecommendationsEnabledAttributes) PrivilegedDockerOptions() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("privileged_docker_options"))
}

func (re RecommendationsEnabledAttributes) SharedCredentials() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("shared_credentials"))
}

func (re RecommendationsEnabledAttributes) VulnerableTlsCipherSuite() terra.BoolValue {
	return terra.ReferenceAsBool(re.ref.Append("vulnerable_tls_cipher_suite"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AdditionalWorkspaceState struct {
	DataTypes   []string `json:"data_types"`
	WorkspaceId string   `json:"workspace_id"`
}

type RecommendationsEnabledState struct {
	AcrAuthentication             bool `json:"acr_authentication"`
	AgentSendUnutilizedMsg        bool `json:"agent_send_unutilized_msg"`
	Baseline                      bool `json:"baseline"`
	EdgeHubMemOptimize            bool `json:"edge_hub_mem_optimize"`
	EdgeLoggingOption             bool `json:"edge_logging_option"`
	InconsistentModuleSettings    bool `json:"inconsistent_module_settings"`
	InstallAgent                  bool `json:"install_agent"`
	IpFilterDenyAll               bool `json:"ip_filter_deny_all"`
	IpFilterPermissiveRule        bool `json:"ip_filter_permissive_rule"`
	OpenPorts                     bool `json:"open_ports"`
	PermissiveFirewallPolicy      bool `json:"permissive_firewall_policy"`
	PermissiveInputFirewallRules  bool `json:"permissive_input_firewall_rules"`
	PermissiveOutputFirewallRules bool `json:"permissive_output_firewall_rules"`
	PrivilegedDockerOptions       bool `json:"privileged_docker_options"`
	SharedCredentials             bool `json:"shared_credentials"`
	VulnerableTlsCipherSuite      bool `json:"vulnerable_tls_cipher_suite"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
