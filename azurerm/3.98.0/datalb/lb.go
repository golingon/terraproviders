// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datalb

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type FrontendIpConfiguration struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type FrontendIpConfigurationAttributes struct {
	ref terra.Reference
}

func (fic FrontendIpConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return fic.ref, nil
}

func (fic FrontendIpConfigurationAttributes) InternalWithRef(ref terra.Reference) FrontendIpConfigurationAttributes {
	return FrontendIpConfigurationAttributes{ref: ref}
}

func (fic FrontendIpConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fic.ref.InternalTokens()
}

func (fic FrontendIpConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("id"))
}

func (fic FrontendIpConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("name"))
}

func (fic FrontendIpConfigurationAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("private_ip_address"))
}

func (fic FrontendIpConfigurationAttributes) PrivateIpAddressAllocation() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("private_ip_address_allocation"))
}

func (fic FrontendIpConfigurationAttributes) PrivateIpAddressVersion() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("private_ip_address_version"))
}

func (fic FrontendIpConfigurationAttributes) PublicIpAddressId() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("public_ip_address_id"))
}

func (fic FrontendIpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(fic.ref.Append("subnet_id"))
}

func (fic FrontendIpConfigurationAttributes) Zones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fic.ref.Append("zones"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type FrontendIpConfigurationState struct {
	Id                         string   `json:"id"`
	Name                       string   `json:"name"`
	PrivateIpAddress           string   `json:"private_ip_address"`
	PrivateIpAddressAllocation string   `json:"private_ip_address_allocation"`
	PrivateIpAddressVersion    string   `json:"private_ip_address_version"`
	PublicIpAddressId          string   `json:"public_ip_address_id"`
	SubnetId                   string   `json:"subnet_id"`
	Zones                      []string `json:"zones"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
