// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package kustoattacheddatabaseconfiguration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Sharing struct {
	// ExternalTablesToExclude: set of string, optional
	ExternalTablesToExclude terra.SetValue[terra.StringValue] `hcl:"external_tables_to_exclude,attr"`
	// ExternalTablesToInclude: set of string, optional
	ExternalTablesToInclude terra.SetValue[terra.StringValue] `hcl:"external_tables_to_include,attr"`
	// MaterializedViewsToExclude: set of string, optional
	MaterializedViewsToExclude terra.SetValue[terra.StringValue] `hcl:"materialized_views_to_exclude,attr"`
	// MaterializedViewsToInclude: set of string, optional
	MaterializedViewsToInclude terra.SetValue[terra.StringValue] `hcl:"materialized_views_to_include,attr"`
	// TablesToExclude: set of string, optional
	TablesToExclude terra.SetValue[terra.StringValue] `hcl:"tables_to_exclude,attr"`
	// TablesToInclude: set of string, optional
	TablesToInclude terra.SetValue[terra.StringValue] `hcl:"tables_to_include,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type SharingAttributes struct {
	ref terra.Reference
}

func (s SharingAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SharingAttributes) InternalWithRef(ref terra.Reference) SharingAttributes {
	return SharingAttributes{ref: ref}
}

func (s SharingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SharingAttributes) ExternalTablesToExclude() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("external_tables_to_exclude"))
}

func (s SharingAttributes) ExternalTablesToInclude() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("external_tables_to_include"))
}

func (s SharingAttributes) MaterializedViewsToExclude() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("materialized_views_to_exclude"))
}

func (s SharingAttributes) MaterializedViewsToInclude() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("materialized_views_to_include"))
}

func (s SharingAttributes) TablesToExclude() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("tables_to_exclude"))
}

func (s SharingAttributes) TablesToInclude() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("tables_to_include"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type SharingState struct {
	ExternalTablesToExclude    []string `json:"external_tables_to_exclude"`
	ExternalTablesToInclude    []string `json:"external_tables_to_include"`
	MaterializedViewsToExclude []string `json:"materialized_views_to_exclude"`
	MaterializedViewsToInclude []string `json:"materialized_views_to_include"`
	TablesToExclude            []string `json:"tables_to_exclude"`
	TablesToInclude            []string `json:"tables_to_include"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
