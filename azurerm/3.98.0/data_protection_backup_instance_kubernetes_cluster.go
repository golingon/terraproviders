// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	dataprotectionbackupinstancekubernetescluster "github.com/golingon/terraproviders/azurerm/3.98.0/dataprotectionbackupinstancekubernetescluster"
	"io"
)

// NewDataProtectionBackupInstanceKubernetesCluster creates a new instance of [DataProtectionBackupInstanceKubernetesCluster].
func NewDataProtectionBackupInstanceKubernetesCluster(name string, args DataProtectionBackupInstanceKubernetesClusterArgs) *DataProtectionBackupInstanceKubernetesCluster {
	return &DataProtectionBackupInstanceKubernetesCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataProtectionBackupInstanceKubernetesCluster)(nil)

// DataProtectionBackupInstanceKubernetesCluster represents the Terraform resource azurerm_data_protection_backup_instance_kubernetes_cluster.
type DataProtectionBackupInstanceKubernetesCluster struct {
	Name      string
	Args      DataProtectionBackupInstanceKubernetesClusterArgs
	state     *dataProtectionBackupInstanceKubernetesClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DataProtectionBackupInstanceKubernetesCluster].
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) Type() string {
	return "azurerm_data_protection_backup_instance_kubernetes_cluster"
}

// LocalName returns the local name for [DataProtectionBackupInstanceKubernetesCluster].
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) LocalName() string {
	return dpbikc.Name
}

// Configuration returns the configuration (args) for [DataProtectionBackupInstanceKubernetesCluster].
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) Configuration() interface{} {
	return dpbikc.Args
}

// DependOn is used for other resources to depend on [DataProtectionBackupInstanceKubernetesCluster].
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) DependOn() terra.Reference {
	return terra.ReferenceResource(dpbikc)
}

// Dependencies returns the list of resources [DataProtectionBackupInstanceKubernetesCluster] depends_on.
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) Dependencies() terra.Dependencies {
	return dpbikc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DataProtectionBackupInstanceKubernetesCluster].
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) LifecycleManagement() *terra.Lifecycle {
	return dpbikc.Lifecycle
}

// Attributes returns the attributes for [DataProtectionBackupInstanceKubernetesCluster].
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) Attributes() dataProtectionBackupInstanceKubernetesClusterAttributes {
	return dataProtectionBackupInstanceKubernetesClusterAttributes{ref: terra.ReferenceResource(dpbikc)}
}

// ImportState imports the given attribute values into [DataProtectionBackupInstanceKubernetesCluster]'s state.
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) ImportState(av io.Reader) error {
	dpbikc.state = &dataProtectionBackupInstanceKubernetesClusterState{}
	if err := json.NewDecoder(av).Decode(dpbikc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dpbikc.Type(), dpbikc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DataProtectionBackupInstanceKubernetesCluster] has state.
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) State() (*dataProtectionBackupInstanceKubernetesClusterState, bool) {
	return dpbikc.state, dpbikc.state != nil
}

// StateMust returns the state for [DataProtectionBackupInstanceKubernetesCluster]. Panics if the state is nil.
func (dpbikc *DataProtectionBackupInstanceKubernetesCluster) StateMust() *dataProtectionBackupInstanceKubernetesClusterState {
	if dpbikc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dpbikc.Type(), dpbikc.LocalName()))
	}
	return dpbikc.state
}

// DataProtectionBackupInstanceKubernetesClusterArgs contains the configurations for azurerm_data_protection_backup_instance_kubernetes_cluster.
type DataProtectionBackupInstanceKubernetesClusterArgs struct {
	// BackupPolicyId: string, required
	BackupPolicyId terra.StringValue `hcl:"backup_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesClusterId: string, required
	KubernetesClusterId terra.StringValue `hcl:"kubernetes_cluster_id,attr" validate:"required"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SnapshotResourceGroupName: string, required
	SnapshotResourceGroupName terra.StringValue `hcl:"snapshot_resource_group_name,attr" validate:"required"`
	// VaultId: string, required
	VaultId terra.StringValue `hcl:"vault_id,attr" validate:"required"`
	// BackupDatasourceParameters: optional
	BackupDatasourceParameters *dataprotectionbackupinstancekubernetescluster.BackupDatasourceParameters `hcl:"backup_datasource_parameters,block"`
	// Timeouts: optional
	Timeouts *dataprotectionbackupinstancekubernetescluster.Timeouts `hcl:"timeouts,block"`
}
type dataProtectionBackupInstanceKubernetesClusterAttributes struct {
	ref terra.Reference
}

// BackupPolicyId returns a reference to field backup_policy_id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) BackupPolicyId() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("backup_policy_id"))
}

// Id returns a reference to field id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("id"))
}

// KubernetesClusterId returns a reference to field kubernetes_cluster_id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) KubernetesClusterId() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("kubernetes_cluster_id"))
}

// Location returns a reference to field location of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("name"))
}

// SnapshotResourceGroupName returns a reference to field snapshot_resource_group_name of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) SnapshotResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("snapshot_resource_group_name"))
}

// VaultId returns a reference to field vault_id of azurerm_data_protection_backup_instance_kubernetes_cluster.
func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) VaultId() terra.StringValue {
	return terra.ReferenceAsString(dpbikc.ref.Append("vault_id"))
}

func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) BackupDatasourceParameters() terra.ListValue[dataprotectionbackupinstancekubernetescluster.BackupDatasourceParametersAttributes] {
	return terra.ReferenceAsList[dataprotectionbackupinstancekubernetescluster.BackupDatasourceParametersAttributes](dpbikc.ref.Append("backup_datasource_parameters"))
}

func (dpbikc dataProtectionBackupInstanceKubernetesClusterAttributes) Timeouts() dataprotectionbackupinstancekubernetescluster.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataprotectionbackupinstancekubernetescluster.TimeoutsAttributes](dpbikc.ref.Append("timeouts"))
}

type dataProtectionBackupInstanceKubernetesClusterState struct {
	BackupPolicyId             string                                                                          `json:"backup_policy_id"`
	Id                         string                                                                          `json:"id"`
	KubernetesClusterId        string                                                                          `json:"kubernetes_cluster_id"`
	Location                   string                                                                          `json:"location"`
	Name                       string                                                                          `json:"name"`
	SnapshotResourceGroupName  string                                                                          `json:"snapshot_resource_group_name"`
	VaultId                    string                                                                          `json:"vault_id"`
	BackupDatasourceParameters []dataprotectionbackupinstancekubernetescluster.BackupDatasourceParametersState `json:"backup_datasource_parameters"`
	Timeouts                   *dataprotectionbackupinstancekubernetescluster.TimeoutsState                    `json:"timeouts"`
}
