// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"github.com/golingon/lingon/pkg/terra"
	datadatabricksaccessconnector "github.com/golingon/terraproviders/azurerm/3.98.0/datadatabricksaccessconnector"
)

// NewDataDatabricksAccessConnector creates a new instance of [DataDatabricksAccessConnector].
func NewDataDatabricksAccessConnector(name string, args DataDatabricksAccessConnectorArgs) *DataDatabricksAccessConnector {
	return &DataDatabricksAccessConnector{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDatabricksAccessConnector)(nil)

// DataDatabricksAccessConnector represents the Terraform data resource azurerm_databricks_access_connector.
type DataDatabricksAccessConnector struct {
	Name string
	Args DataDatabricksAccessConnectorArgs
}

// DataSource returns the Terraform object type for [DataDatabricksAccessConnector].
func (dac *DataDatabricksAccessConnector) DataSource() string {
	return "azurerm_databricks_access_connector"
}

// LocalName returns the local name for [DataDatabricksAccessConnector].
func (dac *DataDatabricksAccessConnector) LocalName() string {
	return dac.Name
}

// Configuration returns the configuration (args) for [DataDatabricksAccessConnector].
func (dac *DataDatabricksAccessConnector) Configuration() interface{} {
	return dac.Args
}

// Attributes returns the attributes for [DataDatabricksAccessConnector].
func (dac *DataDatabricksAccessConnector) Attributes() dataDatabricksAccessConnectorAttributes {
	return dataDatabricksAccessConnectorAttributes{ref: terra.ReferenceDataResource(dac)}
}

// DataDatabricksAccessConnectorArgs contains the configurations for azurerm_databricks_access_connector.
type DataDatabricksAccessConnectorArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Identity: min=0
	Identity []datadatabricksaccessconnector.Identity `hcl:"identity,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datadatabricksaccessconnector.Timeouts `hcl:"timeouts,block"`
}
type dataDatabricksAccessConnectorAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_databricks_access_connector.
func (dac dataDatabricksAccessConnectorAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dac.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_databricks_access_connector.
func (dac dataDatabricksAccessConnectorAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(dac.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_databricks_access_connector.
func (dac dataDatabricksAccessConnectorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dac.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_databricks_access_connector.
func (dac dataDatabricksAccessConnectorAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(dac.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_databricks_access_connector.
func (dac dataDatabricksAccessConnectorAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dac.ref.Append("tags"))
}

func (dac dataDatabricksAccessConnectorAttributes) Identity() terra.ListValue[datadatabricksaccessconnector.IdentityAttributes] {
	return terra.ReferenceAsList[datadatabricksaccessconnector.IdentityAttributes](dac.ref.Append("identity"))
}

func (dac dataDatabricksAccessConnectorAttributes) Timeouts() datadatabricksaccessconnector.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datadatabricksaccessconnector.TimeoutsAttributes](dac.ref.Append("timeouts"))
}
