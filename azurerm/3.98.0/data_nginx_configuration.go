// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"github.com/golingon/lingon/pkg/terra"
	datanginxconfiguration "github.com/golingon/terraproviders/azurerm/3.98.0/datanginxconfiguration"
)

// NewDataNginxConfiguration creates a new instance of [DataNginxConfiguration].
func NewDataNginxConfiguration(name string, args DataNginxConfigurationArgs) *DataNginxConfiguration {
	return &DataNginxConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataNginxConfiguration)(nil)

// DataNginxConfiguration represents the Terraform data resource azurerm_nginx_configuration.
type DataNginxConfiguration struct {
	Name string
	Args DataNginxConfigurationArgs
}

// DataSource returns the Terraform object type for [DataNginxConfiguration].
func (nc *DataNginxConfiguration) DataSource() string {
	return "azurerm_nginx_configuration"
}

// LocalName returns the local name for [DataNginxConfiguration].
func (nc *DataNginxConfiguration) LocalName() string {
	return nc.Name
}

// Configuration returns the configuration (args) for [DataNginxConfiguration].
func (nc *DataNginxConfiguration) Configuration() interface{} {
	return nc.Args
}

// Attributes returns the attributes for [DataNginxConfiguration].
func (nc *DataNginxConfiguration) Attributes() dataNginxConfigurationAttributes {
	return dataNginxConfigurationAttributes{ref: terra.ReferenceDataResource(nc)}
}

// DataNginxConfigurationArgs contains the configurations for azurerm_nginx_configuration.
type DataNginxConfigurationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// NginxDeploymentId: string, required
	NginxDeploymentId terra.StringValue `hcl:"nginx_deployment_id,attr" validate:"required"`
	// ConfigFile: min=0
	ConfigFile []datanginxconfiguration.ConfigFile `hcl:"config_file,block" validate:"min=0"`
	// ProtectedFile: min=0
	ProtectedFile []datanginxconfiguration.ProtectedFile `hcl:"protected_file,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datanginxconfiguration.Timeouts `hcl:"timeouts,block"`
}
type dataNginxConfigurationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_nginx_configuration.
func (nc dataNginxConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("id"))
}

// NginxDeploymentId returns a reference to field nginx_deployment_id of azurerm_nginx_configuration.
func (nc dataNginxConfigurationAttributes) NginxDeploymentId() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("nginx_deployment_id"))
}

// PackageData returns a reference to field package_data of azurerm_nginx_configuration.
func (nc dataNginxConfigurationAttributes) PackageData() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("package_data"))
}

// RootFile returns a reference to field root_file of azurerm_nginx_configuration.
func (nc dataNginxConfigurationAttributes) RootFile() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("root_file"))
}

func (nc dataNginxConfigurationAttributes) ConfigFile() terra.SetValue[datanginxconfiguration.ConfigFileAttributes] {
	return terra.ReferenceAsSet[datanginxconfiguration.ConfigFileAttributes](nc.ref.Append("config_file"))
}

func (nc dataNginxConfigurationAttributes) ProtectedFile() terra.SetValue[datanginxconfiguration.ProtectedFileAttributes] {
	return terra.ReferenceAsSet[datanginxconfiguration.ProtectedFileAttributes](nc.ref.Append("protected_file"))
}

func (nc dataNginxConfigurationAttributes) Timeouts() datanginxconfiguration.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datanginxconfiguration.TimeoutsAttributes](nc.ref.Append("timeouts"))
}
