// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	virtualmachineruncommand "github.com/golingon/terraproviders/azurerm/3.98.0/virtualmachineruncommand"
	"io"
)

// NewVirtualMachineRunCommand creates a new instance of [VirtualMachineRunCommand].
func NewVirtualMachineRunCommand(name string, args VirtualMachineRunCommandArgs) *VirtualMachineRunCommand {
	return &VirtualMachineRunCommand{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VirtualMachineRunCommand)(nil)

// VirtualMachineRunCommand represents the Terraform resource azurerm_virtual_machine_run_command.
type VirtualMachineRunCommand struct {
	Name      string
	Args      VirtualMachineRunCommandArgs
	state     *virtualMachineRunCommandState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VirtualMachineRunCommand].
func (vmrc *VirtualMachineRunCommand) Type() string {
	return "azurerm_virtual_machine_run_command"
}

// LocalName returns the local name for [VirtualMachineRunCommand].
func (vmrc *VirtualMachineRunCommand) LocalName() string {
	return vmrc.Name
}

// Configuration returns the configuration (args) for [VirtualMachineRunCommand].
func (vmrc *VirtualMachineRunCommand) Configuration() interface{} {
	return vmrc.Args
}

// DependOn is used for other resources to depend on [VirtualMachineRunCommand].
func (vmrc *VirtualMachineRunCommand) DependOn() terra.Reference {
	return terra.ReferenceResource(vmrc)
}

// Dependencies returns the list of resources [VirtualMachineRunCommand] depends_on.
func (vmrc *VirtualMachineRunCommand) Dependencies() terra.Dependencies {
	return vmrc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VirtualMachineRunCommand].
func (vmrc *VirtualMachineRunCommand) LifecycleManagement() *terra.Lifecycle {
	return vmrc.Lifecycle
}

// Attributes returns the attributes for [VirtualMachineRunCommand].
func (vmrc *VirtualMachineRunCommand) Attributes() virtualMachineRunCommandAttributes {
	return virtualMachineRunCommandAttributes{ref: terra.ReferenceResource(vmrc)}
}

// ImportState imports the given attribute values into [VirtualMachineRunCommand]'s state.
func (vmrc *VirtualMachineRunCommand) ImportState(av io.Reader) error {
	vmrc.state = &virtualMachineRunCommandState{}
	if err := json.NewDecoder(av).Decode(vmrc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vmrc.Type(), vmrc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VirtualMachineRunCommand] has state.
func (vmrc *VirtualMachineRunCommand) State() (*virtualMachineRunCommandState, bool) {
	return vmrc.state, vmrc.state != nil
}

// StateMust returns the state for [VirtualMachineRunCommand]. Panics if the state is nil.
func (vmrc *VirtualMachineRunCommand) StateMust() *virtualMachineRunCommandState {
	if vmrc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vmrc.Type(), vmrc.LocalName()))
	}
	return vmrc.state
}

// VirtualMachineRunCommandArgs contains the configurations for azurerm_virtual_machine_run_command.
type VirtualMachineRunCommandArgs struct {
	// ErrorBlobUri: string, optional
	ErrorBlobUri terra.StringValue `hcl:"error_blob_uri,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OutputBlobUri: string, optional
	OutputBlobUri terra.StringValue `hcl:"output_blob_uri,attr"`
	// RunAsPassword: string, optional
	RunAsPassword terra.StringValue `hcl:"run_as_password,attr"`
	// RunAsUser: string, optional
	RunAsUser terra.StringValue `hcl:"run_as_user,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VirtualMachineId: string, required
	VirtualMachineId terra.StringValue `hcl:"virtual_machine_id,attr" validate:"required"`
	// InstanceView: min=0
	InstanceView []virtualmachineruncommand.InstanceView `hcl:"instance_view,block" validate:"min=0"`
	// ErrorBlobManagedIdentity: optional
	ErrorBlobManagedIdentity *virtualmachineruncommand.ErrorBlobManagedIdentity `hcl:"error_blob_managed_identity,block"`
	// OutputBlobManagedIdentity: optional
	OutputBlobManagedIdentity *virtualmachineruncommand.OutputBlobManagedIdentity `hcl:"output_blob_managed_identity,block"`
	// Parameter: min=0
	Parameter []virtualmachineruncommand.Parameter `hcl:"parameter,block" validate:"min=0"`
	// ProtectedParameter: min=0
	ProtectedParameter []virtualmachineruncommand.ProtectedParameter `hcl:"protected_parameter,block" validate:"min=0"`
	// Source: required
	Source *virtualmachineruncommand.Source `hcl:"source,block" validate:"required"`
	// Timeouts: optional
	Timeouts *virtualmachineruncommand.Timeouts `hcl:"timeouts,block"`
}
type virtualMachineRunCommandAttributes struct {
	ref terra.Reference
}

// ErrorBlobUri returns a reference to field error_blob_uri of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) ErrorBlobUri() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("error_blob_uri"))
}

// Id returns a reference to field id of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("name"))
}

// OutputBlobUri returns a reference to field output_blob_uri of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) OutputBlobUri() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("output_blob_uri"))
}

// RunAsPassword returns a reference to field run_as_password of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) RunAsPassword() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("run_as_password"))
}

// RunAsUser returns a reference to field run_as_user of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) RunAsUser() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("run_as_user"))
}

// Tags returns a reference to field tags of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vmrc.ref.Append("tags"))
}

// VirtualMachineId returns a reference to field virtual_machine_id of azurerm_virtual_machine_run_command.
func (vmrc virtualMachineRunCommandAttributes) VirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(vmrc.ref.Append("virtual_machine_id"))
}

func (vmrc virtualMachineRunCommandAttributes) InstanceView() terra.ListValue[virtualmachineruncommand.InstanceViewAttributes] {
	return terra.ReferenceAsList[virtualmachineruncommand.InstanceViewAttributes](vmrc.ref.Append("instance_view"))
}

func (vmrc virtualMachineRunCommandAttributes) ErrorBlobManagedIdentity() terra.ListValue[virtualmachineruncommand.ErrorBlobManagedIdentityAttributes] {
	return terra.ReferenceAsList[virtualmachineruncommand.ErrorBlobManagedIdentityAttributes](vmrc.ref.Append("error_blob_managed_identity"))
}

func (vmrc virtualMachineRunCommandAttributes) OutputBlobManagedIdentity() terra.ListValue[virtualmachineruncommand.OutputBlobManagedIdentityAttributes] {
	return terra.ReferenceAsList[virtualmachineruncommand.OutputBlobManagedIdentityAttributes](vmrc.ref.Append("output_blob_managed_identity"))
}

func (vmrc virtualMachineRunCommandAttributes) Parameter() terra.ListValue[virtualmachineruncommand.ParameterAttributes] {
	return terra.ReferenceAsList[virtualmachineruncommand.ParameterAttributes](vmrc.ref.Append("parameter"))
}

func (vmrc virtualMachineRunCommandAttributes) ProtectedParameter() terra.ListValue[virtualmachineruncommand.ProtectedParameterAttributes] {
	return terra.ReferenceAsList[virtualmachineruncommand.ProtectedParameterAttributes](vmrc.ref.Append("protected_parameter"))
}

func (vmrc virtualMachineRunCommandAttributes) Source() terra.ListValue[virtualmachineruncommand.SourceAttributes] {
	return terra.ReferenceAsList[virtualmachineruncommand.SourceAttributes](vmrc.ref.Append("source"))
}

func (vmrc virtualMachineRunCommandAttributes) Timeouts() virtualmachineruncommand.TimeoutsAttributes {
	return terra.ReferenceAsSingle[virtualmachineruncommand.TimeoutsAttributes](vmrc.ref.Append("timeouts"))
}

type virtualMachineRunCommandState struct {
	ErrorBlobUri              string                                                    `json:"error_blob_uri"`
	Id                        string                                                    `json:"id"`
	Location                  string                                                    `json:"location"`
	Name                      string                                                    `json:"name"`
	OutputBlobUri             string                                                    `json:"output_blob_uri"`
	RunAsPassword             string                                                    `json:"run_as_password"`
	RunAsUser                 string                                                    `json:"run_as_user"`
	Tags                      map[string]string                                         `json:"tags"`
	VirtualMachineId          string                                                    `json:"virtual_machine_id"`
	InstanceView              []virtualmachineruncommand.InstanceViewState              `json:"instance_view"`
	ErrorBlobManagedIdentity  []virtualmachineruncommand.ErrorBlobManagedIdentityState  `json:"error_blob_managed_identity"`
	OutputBlobManagedIdentity []virtualmachineruncommand.OutputBlobManagedIdentityState `json:"output_blob_managed_identity"`
	Parameter                 []virtualmachineruncommand.ParameterState                 `json:"parameter"`
	ProtectedParameter        []virtualmachineruncommand.ProtectedParameterState        `json:"protected_parameter"`
	Source                    []virtualmachineruncommand.SourceState                    `json:"source"`
	Timeouts                  *virtualmachineruncommand.TimeoutsState                   `json:"timeouts"`
}
