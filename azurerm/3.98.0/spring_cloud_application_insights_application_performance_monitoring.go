// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	springcloudapplicationinsightsapplicationperformancemonitoring "github.com/golingon/terraproviders/azurerm/3.98.0/springcloudapplicationinsightsapplicationperformancemonitoring"
	"io"
)

// NewSpringCloudApplicationInsightsApplicationPerformanceMonitoring creates a new instance of [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func NewSpringCloudApplicationInsightsApplicationPerformanceMonitoring(name string, args SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs) *SpringCloudApplicationInsightsApplicationPerformanceMonitoring {
	return &SpringCloudApplicationInsightsApplicationPerformanceMonitoring{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)

// SpringCloudApplicationInsightsApplicationPerformanceMonitoring represents the Terraform resource azurerm_spring_cloud_application_insights_application_performance_monitoring.
type SpringCloudApplicationInsightsApplicationPerformanceMonitoring struct {
	Name      string
	Args      SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs
	state     *springCloudApplicationInsightsApplicationPerformanceMonitoringState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) Type() string {
	return "azurerm_spring_cloud_application_insights_application_performance_monitoring"
}

// LocalName returns the local name for [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) LocalName() string {
	return scaiapm.Name
}

// Configuration returns the configuration (args) for [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) Configuration() interface{} {
	return scaiapm.Args
}

// DependOn is used for other resources to depend on [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) DependOn() terra.Reference {
	return terra.ReferenceResource(scaiapm)
}

// Dependencies returns the list of resources [SpringCloudApplicationInsightsApplicationPerformanceMonitoring] depends_on.
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) Dependencies() terra.Dependencies {
	return scaiapm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) LifecycleManagement() *terra.Lifecycle {
	return scaiapm.Lifecycle
}

// Attributes returns the attributes for [SpringCloudApplicationInsightsApplicationPerformanceMonitoring].
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) Attributes() springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes {
	return springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes{ref: terra.ReferenceResource(scaiapm)}
}

// ImportState imports the given attribute values into [SpringCloudApplicationInsightsApplicationPerformanceMonitoring]'s state.
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) ImportState(av io.Reader) error {
	scaiapm.state = &springCloudApplicationInsightsApplicationPerformanceMonitoringState{}
	if err := json.NewDecoder(av).Decode(scaiapm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", scaiapm.Type(), scaiapm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SpringCloudApplicationInsightsApplicationPerformanceMonitoring] has state.
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) State() (*springCloudApplicationInsightsApplicationPerformanceMonitoringState, bool) {
	return scaiapm.state, scaiapm.state != nil
}

// StateMust returns the state for [SpringCloudApplicationInsightsApplicationPerformanceMonitoring]. Panics if the state is nil.
func (scaiapm *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) StateMust() *springCloudApplicationInsightsApplicationPerformanceMonitoringState {
	if scaiapm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", scaiapm.Type(), scaiapm.LocalName()))
	}
	return scaiapm.state
}

// SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs contains the configurations for azurerm_spring_cloud_application_insights_application_performance_monitoring.
type SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs struct {
	// ConnectionString: string, optional
	ConnectionString terra.StringValue `hcl:"connection_string,attr"`
	// GloballyEnabled: bool, optional
	GloballyEnabled terra.BoolValue `hcl:"globally_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RoleInstance: string, optional
	RoleInstance terra.StringValue `hcl:"role_instance,attr"`
	// RoleName: string, optional
	RoleName terra.StringValue `hcl:"role_name,attr"`
	// SamplingPercentage: number, optional
	SamplingPercentage terra.NumberValue `hcl:"sampling_percentage,attr"`
	// SamplingRequestsPerSecond: number, optional
	SamplingRequestsPerSecond terra.NumberValue `hcl:"sampling_requests_per_second,attr"`
	// SpringCloudServiceId: string, required
	SpringCloudServiceId terra.StringValue `hcl:"spring_cloud_service_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *springcloudapplicationinsightsapplicationperformancemonitoring.Timeouts `hcl:"timeouts,block"`
}
type springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes struct {
	ref terra.Reference
}

// ConnectionString returns a reference to field connection_string of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) ConnectionString() terra.StringValue {
	return terra.ReferenceAsString(scaiapm.ref.Append("connection_string"))
}

// GloballyEnabled returns a reference to field globally_enabled of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) GloballyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(scaiapm.ref.Append("globally_enabled"))
}

// Id returns a reference to field id of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(scaiapm.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(scaiapm.ref.Append("name"))
}

// RoleInstance returns a reference to field role_instance of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) RoleInstance() terra.StringValue {
	return terra.ReferenceAsString(scaiapm.ref.Append("role_instance"))
}

// RoleName returns a reference to field role_name of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) RoleName() terra.StringValue {
	return terra.ReferenceAsString(scaiapm.ref.Append("role_name"))
}

// SamplingPercentage returns a reference to field sampling_percentage of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) SamplingPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(scaiapm.ref.Append("sampling_percentage"))
}

// SamplingRequestsPerSecond returns a reference to field sampling_requests_per_second of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) SamplingRequestsPerSecond() terra.NumberValue {
	return terra.ReferenceAsNumber(scaiapm.ref.Append("sampling_requests_per_second"))
}

// SpringCloudServiceId returns a reference to field spring_cloud_service_id of azurerm_spring_cloud_application_insights_application_performance_monitoring.
func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) SpringCloudServiceId() terra.StringValue {
	return terra.ReferenceAsString(scaiapm.ref.Append("spring_cloud_service_id"))
}

func (scaiapm springCloudApplicationInsightsApplicationPerformanceMonitoringAttributes) Timeouts() springcloudapplicationinsightsapplicationperformancemonitoring.TimeoutsAttributes {
	return terra.ReferenceAsSingle[springcloudapplicationinsightsapplicationperformancemonitoring.TimeoutsAttributes](scaiapm.ref.Append("timeouts"))
}

type springCloudApplicationInsightsApplicationPerformanceMonitoringState struct {
	ConnectionString          string                                                                        `json:"connection_string"`
	GloballyEnabled           bool                                                                          `json:"globally_enabled"`
	Id                        string                                                                        `json:"id"`
	Name                      string                                                                        `json:"name"`
	RoleInstance              string                                                                        `json:"role_instance"`
	RoleName                  string                                                                        `json:"role_name"`
	SamplingPercentage        float64                                                                       `json:"sampling_percentage"`
	SamplingRequestsPerSecond float64                                                                       `json:"sampling_requests_per_second"`
	SpringCloudServiceId      string                                                                        `json:"spring_cloud_service_id"`
	Timeouts                  *springcloudapplicationinsightsapplicationperformancemonitoring.TimeoutsState `json:"timeouts"`
}
