// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datanetworkinterface

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type IpConfiguration struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type IpConfigurationAttributes struct {
	ref terra.Reference
}

func (ic IpConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic IpConfigurationAttributes) InternalWithRef(ref terra.Reference) IpConfigurationAttributes {
	return IpConfigurationAttributes{ref: ref}
}

func (ic IpConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic IpConfigurationAttributes) ApplicationGatewayBackendAddressPoolsIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ic.ref.Append("application_gateway_backend_address_pools_ids"))
}

func (ic IpConfigurationAttributes) ApplicationSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ic.ref.Append("application_security_group_ids"))
}

func (ic IpConfigurationAttributes) GatewayLoadBalancerFrontendIpConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("gateway_load_balancer_frontend_ip_configuration_id"))
}

func (ic IpConfigurationAttributes) LoadBalancerBackendAddressPoolsIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ic.ref.Append("load_balancer_backend_address_pools_ids"))
}

func (ic IpConfigurationAttributes) LoadBalancerInboundNatRulesIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ic.ref.Append("load_balancer_inbound_nat_rules_ids"))
}

func (ic IpConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("name"))
}

func (ic IpConfigurationAttributes) Primary() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("primary"))
}

func (ic IpConfigurationAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("private_ip_address"))
}

func (ic IpConfigurationAttributes) PrivateIpAddressAllocation() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("private_ip_address_allocation"))
}

func (ic IpConfigurationAttributes) PrivateIpAddressVersion() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("private_ip_address_version"))
}

func (ic IpConfigurationAttributes) PublicIpAddressId() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("public_ip_address_id"))
}

func (ic IpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("subnet_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type IpConfigurationState struct {
	ApplicationGatewayBackendAddressPoolsIds     []string `json:"application_gateway_backend_address_pools_ids"`
	ApplicationSecurityGroupIds                  []string `json:"application_security_group_ids"`
	GatewayLoadBalancerFrontendIpConfigurationId string   `json:"gateway_load_balancer_frontend_ip_configuration_id"`
	LoadBalancerBackendAddressPoolsIds           []string `json:"load_balancer_backend_address_pools_ids"`
	LoadBalancerInboundNatRulesIds               []string `json:"load_balancer_inbound_nat_rules_ids"`
	Name                                         string   `json:"name"`
	Primary                                      bool     `json:"primary"`
	PrivateIpAddress                             string   `json:"private_ip_address"`
	PrivateIpAddressAllocation                   string   `json:"private_ip_address_allocation"`
	PrivateIpAddressVersion                      string   `json:"private_ip_address_version"`
	PublicIpAddressId                            string   `json:"public_ip_address_id"`
	SubnetId                                     string   `json:"subnet_id"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
