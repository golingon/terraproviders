// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datamobilenetworkslice

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SingleNetworkSliceSelectionAssistanceInformation struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type SingleNetworkSliceSelectionAssistanceInformationAttributes struct {
	ref terra.Reference
}

func (snssai SingleNetworkSliceSelectionAssistanceInformationAttributes) InternalRef() (terra.Reference, error) {
	return snssai.ref, nil
}

func (snssai SingleNetworkSliceSelectionAssistanceInformationAttributes) InternalWithRef(ref terra.Reference) SingleNetworkSliceSelectionAssistanceInformationAttributes {
	return SingleNetworkSliceSelectionAssistanceInformationAttributes{ref: ref}
}

func (snssai SingleNetworkSliceSelectionAssistanceInformationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return snssai.ref.InternalTokens()
}

func (snssai SingleNetworkSliceSelectionAssistanceInformationAttributes) SliceDifferentiator() terra.StringValue {
	return terra.ReferenceAsString(snssai.ref.Append("slice_differentiator"))
}

func (snssai SingleNetworkSliceSelectionAssistanceInformationAttributes) SliceServiceType() terra.NumberValue {
	return terra.ReferenceAsNumber(snssai.ref.Append("slice_service_type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type SingleNetworkSliceSelectionAssistanceInformationState struct {
	SliceDifferentiator string  `json:"slice_differentiator"`
	SliceServiceType    float64 `json:"slice_service_type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
