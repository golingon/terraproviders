// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	datafactorycredentialusermanagedidentity "github.com/golingon/terraproviders/azurerm/3.98.0/datafactorycredentialusermanagedidentity"
	"io"
)

// NewDataFactoryCredentialUserManagedIdentity creates a new instance of [DataFactoryCredentialUserManagedIdentity].
func NewDataFactoryCredentialUserManagedIdentity(name string, args DataFactoryCredentialUserManagedIdentityArgs) *DataFactoryCredentialUserManagedIdentity {
	return &DataFactoryCredentialUserManagedIdentity{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataFactoryCredentialUserManagedIdentity)(nil)

// DataFactoryCredentialUserManagedIdentity represents the Terraform resource azurerm_data_factory_credential_user_managed_identity.
type DataFactoryCredentialUserManagedIdentity struct {
	Name      string
	Args      DataFactoryCredentialUserManagedIdentityArgs
	state     *dataFactoryCredentialUserManagedIdentityState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DataFactoryCredentialUserManagedIdentity].
func (dfcumi *DataFactoryCredentialUserManagedIdentity) Type() string {
	return "azurerm_data_factory_credential_user_managed_identity"
}

// LocalName returns the local name for [DataFactoryCredentialUserManagedIdentity].
func (dfcumi *DataFactoryCredentialUserManagedIdentity) LocalName() string {
	return dfcumi.Name
}

// Configuration returns the configuration (args) for [DataFactoryCredentialUserManagedIdentity].
func (dfcumi *DataFactoryCredentialUserManagedIdentity) Configuration() interface{} {
	return dfcumi.Args
}

// DependOn is used for other resources to depend on [DataFactoryCredentialUserManagedIdentity].
func (dfcumi *DataFactoryCredentialUserManagedIdentity) DependOn() terra.Reference {
	return terra.ReferenceResource(dfcumi)
}

// Dependencies returns the list of resources [DataFactoryCredentialUserManagedIdentity] depends_on.
func (dfcumi *DataFactoryCredentialUserManagedIdentity) Dependencies() terra.Dependencies {
	return dfcumi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DataFactoryCredentialUserManagedIdentity].
func (dfcumi *DataFactoryCredentialUserManagedIdentity) LifecycleManagement() *terra.Lifecycle {
	return dfcumi.Lifecycle
}

// Attributes returns the attributes for [DataFactoryCredentialUserManagedIdentity].
func (dfcumi *DataFactoryCredentialUserManagedIdentity) Attributes() dataFactoryCredentialUserManagedIdentityAttributes {
	return dataFactoryCredentialUserManagedIdentityAttributes{ref: terra.ReferenceResource(dfcumi)}
}

// ImportState imports the given attribute values into [DataFactoryCredentialUserManagedIdentity]'s state.
func (dfcumi *DataFactoryCredentialUserManagedIdentity) ImportState(av io.Reader) error {
	dfcumi.state = &dataFactoryCredentialUserManagedIdentityState{}
	if err := json.NewDecoder(av).Decode(dfcumi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dfcumi.Type(), dfcumi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DataFactoryCredentialUserManagedIdentity] has state.
func (dfcumi *DataFactoryCredentialUserManagedIdentity) State() (*dataFactoryCredentialUserManagedIdentityState, bool) {
	return dfcumi.state, dfcumi.state != nil
}

// StateMust returns the state for [DataFactoryCredentialUserManagedIdentity]. Panics if the state is nil.
func (dfcumi *DataFactoryCredentialUserManagedIdentity) StateMust() *dataFactoryCredentialUserManagedIdentityState {
	if dfcumi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dfcumi.Type(), dfcumi.LocalName()))
	}
	return dfcumi.state
}

// DataFactoryCredentialUserManagedIdentityArgs contains the configurations for azurerm_data_factory_credential_user_managed_identity.
type DataFactoryCredentialUserManagedIdentityArgs struct {
	// Annotations: list of string, optional
	Annotations terra.ListValue[terra.StringValue] `hcl:"annotations,attr"`
	// DataFactoryId: string, required
	DataFactoryId terra.StringValue `hcl:"data_factory_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityId: string, required
	IdentityId terra.StringValue `hcl:"identity_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datafactorycredentialusermanagedidentity.Timeouts `hcl:"timeouts,block"`
}
type dataFactoryCredentialUserManagedIdentityAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of azurerm_data_factory_credential_user_managed_identity.
func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) Annotations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dfcumi.ref.Append("annotations"))
}

// DataFactoryId returns a reference to field data_factory_id of azurerm_data_factory_credential_user_managed_identity.
func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) DataFactoryId() terra.StringValue {
	return terra.ReferenceAsString(dfcumi.ref.Append("data_factory_id"))
}

// Description returns a reference to field description of azurerm_data_factory_credential_user_managed_identity.
func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(dfcumi.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_data_factory_credential_user_managed_identity.
func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dfcumi.ref.Append("id"))
}

// IdentityId returns a reference to field identity_id of azurerm_data_factory_credential_user_managed_identity.
func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) IdentityId() terra.StringValue {
	return terra.ReferenceAsString(dfcumi.ref.Append("identity_id"))
}

// Name returns a reference to field name of azurerm_data_factory_credential_user_managed_identity.
func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dfcumi.ref.Append("name"))
}

func (dfcumi dataFactoryCredentialUserManagedIdentityAttributes) Timeouts() datafactorycredentialusermanagedidentity.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datafactorycredentialusermanagedidentity.TimeoutsAttributes](dfcumi.ref.Append("timeouts"))
}

type dataFactoryCredentialUserManagedIdentityState struct {
	Annotations   []string                                                `json:"annotations"`
	DataFactoryId string                                                  `json:"data_factory_id"`
	Description   string                                                  `json:"description"`
	Id            string                                                  `json:"id"`
	IdentityId    string                                                  `json:"identity_id"`
	Name          string                                                  `json:"name"`
	Timeouts      *datafactorycredentialusermanagedidentity.TimeoutsState `json:"timeouts"`
}
