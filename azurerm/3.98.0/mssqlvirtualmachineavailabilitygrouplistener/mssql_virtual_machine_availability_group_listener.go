// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package mssqlvirtualmachineavailabilitygrouplistener

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LoadBalancerConfiguration struct {
	// LoadBalancerId: string, required
	LoadBalancerId terra.StringValue `hcl:"load_balancer_id,attr" validate:"required"`
	// PrivateIpAddress: string, required
	PrivateIpAddress terra.StringValue `hcl:"private_ip_address,attr" validate:"required"`
	// ProbePort: number, required
	ProbePort terra.NumberValue `hcl:"probe_port,attr" validate:"required"`
	// SqlVirtualMachineIds: set of string, required
	SqlVirtualMachineIds terra.SetValue[terra.StringValue] `hcl:"sql_virtual_machine_ids,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
}

type MultiSubnetIpConfiguration struct {
	// PrivateIpAddress: string, required
	PrivateIpAddress terra.StringValue `hcl:"private_ip_address,attr" validate:"required"`
	// SqlVirtualMachineId: string, required
	SqlVirtualMachineId terra.StringValue `hcl:"sql_virtual_machine_id,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
}

type Replica struct {
	// Commit: string, required
	Commit terra.StringValue `hcl:"commit,attr" validate:"required"`
	// FailoverMode: string, required
	FailoverMode terra.StringValue `hcl:"failover_mode,attr" validate:"required"`
	// ReadableSecondary: string, required
	ReadableSecondary terra.StringValue `hcl:"readable_secondary,attr" validate:"required"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// SqlVirtualMachineId: string, required
	SqlVirtualMachineId terra.StringValue `hcl:"sql_virtual_machine_id,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type LoadBalancerConfigurationAttributes struct {
	ref terra.Reference
}

func (lbc LoadBalancerConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lbc.ref, nil
}

func (lbc LoadBalancerConfigurationAttributes) InternalWithRef(ref terra.Reference) LoadBalancerConfigurationAttributes {
	return LoadBalancerConfigurationAttributes{ref: ref}
}

func (lbc LoadBalancerConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lbc.ref.InternalTokens()
}

func (lbc LoadBalancerConfigurationAttributes) LoadBalancerId() terra.StringValue {
	return terra.ReferenceAsString(lbc.ref.Append("load_balancer_id"))
}

func (lbc LoadBalancerConfigurationAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(lbc.ref.Append("private_ip_address"))
}

func (lbc LoadBalancerConfigurationAttributes) ProbePort() terra.NumberValue {
	return terra.ReferenceAsNumber(lbc.ref.Append("probe_port"))
}

func (lbc LoadBalancerConfigurationAttributes) SqlVirtualMachineIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](lbc.ref.Append("sql_virtual_machine_ids"))
}

func (lbc LoadBalancerConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(lbc.ref.Append("subnet_id"))
}

type MultiSubnetIpConfigurationAttributes struct {
	ref terra.Reference
}

func (msic MultiSubnetIpConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return msic.ref, nil
}

func (msic MultiSubnetIpConfigurationAttributes) InternalWithRef(ref terra.Reference) MultiSubnetIpConfigurationAttributes {
	return MultiSubnetIpConfigurationAttributes{ref: ref}
}

func (msic MultiSubnetIpConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return msic.ref.InternalTokens()
}

func (msic MultiSubnetIpConfigurationAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(msic.ref.Append("private_ip_address"))
}

func (msic MultiSubnetIpConfigurationAttributes) SqlVirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(msic.ref.Append("sql_virtual_machine_id"))
}

func (msic MultiSubnetIpConfigurationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(msic.ref.Append("subnet_id"))
}

type ReplicaAttributes struct {
	ref terra.Reference
}

func (r ReplicaAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r ReplicaAttributes) InternalWithRef(ref terra.Reference) ReplicaAttributes {
	return ReplicaAttributes{ref: ref}
}

func (r ReplicaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r ReplicaAttributes) Commit() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("commit"))
}

func (r ReplicaAttributes) FailoverMode() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("failover_mode"))
}

func (r ReplicaAttributes) ReadableSecondary() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("readable_secondary"))
}

func (r ReplicaAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("role"))
}

func (r ReplicaAttributes) SqlVirtualMachineId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("sql_virtual_machine_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type LoadBalancerConfigurationState struct {
	LoadBalancerId       string   `json:"load_balancer_id"`
	PrivateIpAddress     string   `json:"private_ip_address"`
	ProbePort            float64  `json:"probe_port"`
	SqlVirtualMachineIds []string `json:"sql_virtual_machine_ids"`
	SubnetId             string   `json:"subnet_id"`
}

type MultiSubnetIpConfigurationState struct {
	PrivateIpAddress    string `json:"private_ip_address"`
	SqlVirtualMachineId string `json:"sql_virtual_machine_id"`
	SubnetId            string `json:"subnet_id"`
}

type ReplicaState struct {
	Commit              string `json:"commit"`
	FailoverMode        string `json:"failover_mode"`
	ReadableSecondary   string `json:"readable_secondary"`
	Role                string `json:"role"`
	SqlVirtualMachineId string `json:"sql_virtual_machine_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
}
