// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	chaosstudiotarget "github.com/golingon/terraproviders/azurerm/3.98.0/chaosstudiotarget"
	"io"
)

// NewChaosStudioTarget creates a new instance of [ChaosStudioTarget].
func NewChaosStudioTarget(name string, args ChaosStudioTargetArgs) *ChaosStudioTarget {
	return &ChaosStudioTarget{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ChaosStudioTarget)(nil)

// ChaosStudioTarget represents the Terraform resource azurerm_chaos_studio_target.
type ChaosStudioTarget struct {
	Name      string
	Args      ChaosStudioTargetArgs
	state     *chaosStudioTargetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ChaosStudioTarget].
func (cst *ChaosStudioTarget) Type() string {
	return "azurerm_chaos_studio_target"
}

// LocalName returns the local name for [ChaosStudioTarget].
func (cst *ChaosStudioTarget) LocalName() string {
	return cst.Name
}

// Configuration returns the configuration (args) for [ChaosStudioTarget].
func (cst *ChaosStudioTarget) Configuration() interface{} {
	return cst.Args
}

// DependOn is used for other resources to depend on [ChaosStudioTarget].
func (cst *ChaosStudioTarget) DependOn() terra.Reference {
	return terra.ReferenceResource(cst)
}

// Dependencies returns the list of resources [ChaosStudioTarget] depends_on.
func (cst *ChaosStudioTarget) Dependencies() terra.Dependencies {
	return cst.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ChaosStudioTarget].
func (cst *ChaosStudioTarget) LifecycleManagement() *terra.Lifecycle {
	return cst.Lifecycle
}

// Attributes returns the attributes for [ChaosStudioTarget].
func (cst *ChaosStudioTarget) Attributes() chaosStudioTargetAttributes {
	return chaosStudioTargetAttributes{ref: terra.ReferenceResource(cst)}
}

// ImportState imports the given attribute values into [ChaosStudioTarget]'s state.
func (cst *ChaosStudioTarget) ImportState(av io.Reader) error {
	cst.state = &chaosStudioTargetState{}
	if err := json.NewDecoder(av).Decode(cst.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cst.Type(), cst.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ChaosStudioTarget] has state.
func (cst *ChaosStudioTarget) State() (*chaosStudioTargetState, bool) {
	return cst.state, cst.state != nil
}

// StateMust returns the state for [ChaosStudioTarget]. Panics if the state is nil.
func (cst *ChaosStudioTarget) StateMust() *chaosStudioTargetState {
	if cst.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cst.Type(), cst.LocalName()))
	}
	return cst.state
}

// ChaosStudioTargetArgs contains the configurations for azurerm_chaos_studio_target.
type ChaosStudioTargetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// TargetResourceId: string, required
	TargetResourceId terra.StringValue `hcl:"target_resource_id,attr" validate:"required"`
	// TargetType: string, required
	TargetType terra.StringValue `hcl:"target_type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *chaosstudiotarget.Timeouts `hcl:"timeouts,block"`
}
type chaosStudioTargetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_chaos_studio_target.
func (cst chaosStudioTargetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cst.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_chaos_studio_target.
func (cst chaosStudioTargetAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(cst.ref.Append("location"))
}

// TargetResourceId returns a reference to field target_resource_id of azurerm_chaos_studio_target.
func (cst chaosStudioTargetAttributes) TargetResourceId() terra.StringValue {
	return terra.ReferenceAsString(cst.ref.Append("target_resource_id"))
}

// TargetType returns a reference to field target_type of azurerm_chaos_studio_target.
func (cst chaosStudioTargetAttributes) TargetType() terra.StringValue {
	return terra.ReferenceAsString(cst.ref.Append("target_type"))
}

func (cst chaosStudioTargetAttributes) Timeouts() chaosstudiotarget.TimeoutsAttributes {
	return terra.ReferenceAsSingle[chaosstudiotarget.TimeoutsAttributes](cst.ref.Append("timeouts"))
}

type chaosStudioTargetState struct {
	Id               string                           `json:"id"`
	Location         string                           `json:"location"`
	TargetResourceId string                           `json:"target_resource_id"`
	TargetType       string                           `json:"target_type"`
	Timeouts         *chaosstudiotarget.TimeoutsState `json:"timeouts"`
}
