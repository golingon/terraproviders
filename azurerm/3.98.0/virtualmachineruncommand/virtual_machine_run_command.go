// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package virtualmachineruncommand

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type InstanceView struct{}

type ErrorBlobManagedIdentity struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ObjectId: string, optional
	ObjectId terra.StringValue `hcl:"object_id,attr"`
}

type OutputBlobManagedIdentity struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ObjectId: string, optional
	ObjectId terra.StringValue `hcl:"object_id,attr"`
}

type Parameter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ProtectedParameter struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Source struct {
	// CommandId: string, optional
	CommandId terra.StringValue `hcl:"command_id,attr"`
	// Script: string, optional
	Script terra.StringValue `hcl:"script,attr"`
	// ScriptUri: string, optional
	ScriptUri terra.StringValue `hcl:"script_uri,attr"`
	// ScriptUriManagedIdentity: optional
	ScriptUriManagedIdentity *ScriptUriManagedIdentity `hcl:"script_uri_managed_identity,block"`
}

type ScriptUriManagedIdentity struct {
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ObjectId: string, optional
	ObjectId terra.StringValue `hcl:"object_id,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type InstanceViewAttributes struct {
	ref terra.Reference
}

func (iv InstanceViewAttributes) InternalRef() (terra.Reference, error) {
	return iv.ref, nil
}

func (iv InstanceViewAttributes) InternalWithRef(ref terra.Reference) InstanceViewAttributes {
	return InstanceViewAttributes{ref: ref}
}

func (iv InstanceViewAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return iv.ref.InternalTokens()
}

func (iv InstanceViewAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(iv.ref.Append("end_time"))
}

func (iv InstanceViewAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(iv.ref.Append("error_message"))
}

func (iv InstanceViewAttributes) ExecutionMessage() terra.StringValue {
	return terra.ReferenceAsString(iv.ref.Append("execution_message"))
}

func (iv InstanceViewAttributes) ExecutionState() terra.StringValue {
	return terra.ReferenceAsString(iv.ref.Append("execution_state"))
}

func (iv InstanceViewAttributes) ExitCode() terra.NumberValue {
	return terra.ReferenceAsNumber(iv.ref.Append("exit_code"))
}

func (iv InstanceViewAttributes) Output() terra.StringValue {
	return terra.ReferenceAsString(iv.ref.Append("output"))
}

func (iv InstanceViewAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(iv.ref.Append("start_time"))
}

type ErrorBlobManagedIdentityAttributes struct {
	ref terra.Reference
}

func (ebmi ErrorBlobManagedIdentityAttributes) InternalRef() (terra.Reference, error) {
	return ebmi.ref, nil
}

func (ebmi ErrorBlobManagedIdentityAttributes) InternalWithRef(ref terra.Reference) ErrorBlobManagedIdentityAttributes {
	return ErrorBlobManagedIdentityAttributes{ref: ref}
}

func (ebmi ErrorBlobManagedIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ebmi.ref.InternalTokens()
}

func (ebmi ErrorBlobManagedIdentityAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ebmi.ref.Append("client_id"))
}

func (ebmi ErrorBlobManagedIdentityAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(ebmi.ref.Append("object_id"))
}

type OutputBlobManagedIdentityAttributes struct {
	ref terra.Reference
}

func (obmi OutputBlobManagedIdentityAttributes) InternalRef() (terra.Reference, error) {
	return obmi.ref, nil
}

func (obmi OutputBlobManagedIdentityAttributes) InternalWithRef(ref terra.Reference) OutputBlobManagedIdentityAttributes {
	return OutputBlobManagedIdentityAttributes{ref: ref}
}

func (obmi OutputBlobManagedIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return obmi.ref.InternalTokens()
}

func (obmi OutputBlobManagedIdentityAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(obmi.ref.Append("client_id"))
}

func (obmi OutputBlobManagedIdentityAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(obmi.ref.Append("object_id"))
}

type ParameterAttributes struct {
	ref terra.Reference
}

func (p ParameterAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p ParameterAttributes) InternalWithRef(ref terra.Reference) ParameterAttributes {
	return ParameterAttributes{ref: ref}
}

func (p ParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p ParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p ParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("value"))
}

type ProtectedParameterAttributes struct {
	ref terra.Reference
}

func (pp ProtectedParameterAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp ProtectedParameterAttributes) InternalWithRef(ref terra.Reference) ProtectedParameterAttributes {
	return ProtectedParameterAttributes{ref: ref}
}

func (pp ProtectedParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp ProtectedParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("name"))
}

func (pp ProtectedParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("value"))
}

type SourceAttributes struct {
	ref terra.Reference
}

func (s SourceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SourceAttributes) InternalWithRef(ref terra.Reference) SourceAttributes {
	return SourceAttributes{ref: ref}
}

func (s SourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SourceAttributes) CommandId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("command_id"))
}

func (s SourceAttributes) Script() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("script"))
}

func (s SourceAttributes) ScriptUri() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("script_uri"))
}

func (s SourceAttributes) ScriptUriManagedIdentity() terra.ListValue[ScriptUriManagedIdentityAttributes] {
	return terra.ReferenceAsList[ScriptUriManagedIdentityAttributes](s.ref.Append("script_uri_managed_identity"))
}

type ScriptUriManagedIdentityAttributes struct {
	ref terra.Reference
}

func (sumi ScriptUriManagedIdentityAttributes) InternalRef() (terra.Reference, error) {
	return sumi.ref, nil
}

func (sumi ScriptUriManagedIdentityAttributes) InternalWithRef(ref terra.Reference) ScriptUriManagedIdentityAttributes {
	return ScriptUriManagedIdentityAttributes{ref: ref}
}

func (sumi ScriptUriManagedIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sumi.ref.InternalTokens()
}

func (sumi ScriptUriManagedIdentityAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(sumi.ref.Append("client_id"))
}

func (sumi ScriptUriManagedIdentityAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(sumi.ref.Append("object_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type InstanceViewState struct {
	EndTime          string  `json:"end_time"`
	ErrorMessage     string  `json:"error_message"`
	ExecutionMessage string  `json:"execution_message"`
	ExecutionState   string  `json:"execution_state"`
	ExitCode         float64 `json:"exit_code"`
	Output           string  `json:"output"`
	StartTime        string  `json:"start_time"`
}

type ErrorBlobManagedIdentityState struct {
	ClientId string `json:"client_id"`
	ObjectId string `json:"object_id"`
}

type OutputBlobManagedIdentityState struct {
	ClientId string `json:"client_id"`
	ObjectId string `json:"object_id"`
}

type ParameterState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type ProtectedParameterState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type SourceState struct {
	CommandId                string                          `json:"command_id"`
	Script                   string                          `json:"script"`
	ScriptUri                string                          `json:"script_uri"`
	ScriptUriManagedIdentity []ScriptUriManagedIdentityState `json:"script_uri_managed_identity"`
}

type ScriptUriManagedIdentityState struct {
	ClientId string `json:"client_id"`
	ObjectId string `json:"object_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
