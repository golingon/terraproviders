// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	springcloudelasticapplicationperformancemonitoring "github.com/golingon/terraproviders/azurerm/3.98.0/springcloudelasticapplicationperformancemonitoring"
	"io"
)

// NewSpringCloudElasticApplicationPerformanceMonitoring creates a new instance of [SpringCloudElasticApplicationPerformanceMonitoring].
func NewSpringCloudElasticApplicationPerformanceMonitoring(name string, args SpringCloudElasticApplicationPerformanceMonitoringArgs) *SpringCloudElasticApplicationPerformanceMonitoring {
	return &SpringCloudElasticApplicationPerformanceMonitoring{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SpringCloudElasticApplicationPerformanceMonitoring)(nil)

// SpringCloudElasticApplicationPerformanceMonitoring represents the Terraform resource azurerm_spring_cloud_elastic_application_performance_monitoring.
type SpringCloudElasticApplicationPerformanceMonitoring struct {
	Name      string
	Args      SpringCloudElasticApplicationPerformanceMonitoringArgs
	state     *springCloudElasticApplicationPerformanceMonitoringState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SpringCloudElasticApplicationPerformanceMonitoring].
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) Type() string {
	return "azurerm_spring_cloud_elastic_application_performance_monitoring"
}

// LocalName returns the local name for [SpringCloudElasticApplicationPerformanceMonitoring].
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) LocalName() string {
	return sceapm.Name
}

// Configuration returns the configuration (args) for [SpringCloudElasticApplicationPerformanceMonitoring].
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) Configuration() interface{} {
	return sceapm.Args
}

// DependOn is used for other resources to depend on [SpringCloudElasticApplicationPerformanceMonitoring].
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) DependOn() terra.Reference {
	return terra.ReferenceResource(sceapm)
}

// Dependencies returns the list of resources [SpringCloudElasticApplicationPerformanceMonitoring] depends_on.
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) Dependencies() terra.Dependencies {
	return sceapm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SpringCloudElasticApplicationPerformanceMonitoring].
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) LifecycleManagement() *terra.Lifecycle {
	return sceapm.Lifecycle
}

// Attributes returns the attributes for [SpringCloudElasticApplicationPerformanceMonitoring].
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) Attributes() springCloudElasticApplicationPerformanceMonitoringAttributes {
	return springCloudElasticApplicationPerformanceMonitoringAttributes{ref: terra.ReferenceResource(sceapm)}
}

// ImportState imports the given attribute values into [SpringCloudElasticApplicationPerformanceMonitoring]'s state.
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) ImportState(av io.Reader) error {
	sceapm.state = &springCloudElasticApplicationPerformanceMonitoringState{}
	if err := json.NewDecoder(av).Decode(sceapm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sceapm.Type(), sceapm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SpringCloudElasticApplicationPerformanceMonitoring] has state.
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) State() (*springCloudElasticApplicationPerformanceMonitoringState, bool) {
	return sceapm.state, sceapm.state != nil
}

// StateMust returns the state for [SpringCloudElasticApplicationPerformanceMonitoring]. Panics if the state is nil.
func (sceapm *SpringCloudElasticApplicationPerformanceMonitoring) StateMust() *springCloudElasticApplicationPerformanceMonitoringState {
	if sceapm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sceapm.Type(), sceapm.LocalName()))
	}
	return sceapm.state
}

// SpringCloudElasticApplicationPerformanceMonitoringArgs contains the configurations for azurerm_spring_cloud_elastic_application_performance_monitoring.
type SpringCloudElasticApplicationPerformanceMonitoringArgs struct {
	// ApplicationPackages: list of string, required
	ApplicationPackages terra.ListValue[terra.StringValue] `hcl:"application_packages,attr" validate:"required"`
	// GloballyEnabled: bool, optional
	GloballyEnabled terra.BoolValue `hcl:"globally_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ServerUrl: string, required
	ServerUrl terra.StringValue `hcl:"server_url,attr" validate:"required"`
	// ServiceName: string, required
	ServiceName terra.StringValue `hcl:"service_name,attr" validate:"required"`
	// SpringCloudServiceId: string, required
	SpringCloudServiceId terra.StringValue `hcl:"spring_cloud_service_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *springcloudelasticapplicationperformancemonitoring.Timeouts `hcl:"timeouts,block"`
}
type springCloudElasticApplicationPerformanceMonitoringAttributes struct {
	ref terra.Reference
}

// ApplicationPackages returns a reference to field application_packages of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) ApplicationPackages() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sceapm.ref.Append("application_packages"))
}

// GloballyEnabled returns a reference to field globally_enabled of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) GloballyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(sceapm.ref.Append("globally_enabled"))
}

// Id returns a reference to field id of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sceapm.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sceapm.ref.Append("name"))
}

// ServerUrl returns a reference to field server_url of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) ServerUrl() terra.StringValue {
	return terra.ReferenceAsString(sceapm.ref.Append("server_url"))
}

// ServiceName returns a reference to field service_name of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(sceapm.ref.Append("service_name"))
}

// SpringCloudServiceId returns a reference to field spring_cloud_service_id of azurerm_spring_cloud_elastic_application_performance_monitoring.
func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) SpringCloudServiceId() terra.StringValue {
	return terra.ReferenceAsString(sceapm.ref.Append("spring_cloud_service_id"))
}

func (sceapm springCloudElasticApplicationPerformanceMonitoringAttributes) Timeouts() springcloudelasticapplicationperformancemonitoring.TimeoutsAttributes {
	return terra.ReferenceAsSingle[springcloudelasticapplicationperformancemonitoring.TimeoutsAttributes](sceapm.ref.Append("timeouts"))
}

type springCloudElasticApplicationPerformanceMonitoringState struct {
	ApplicationPackages  []string                                                          `json:"application_packages"`
	GloballyEnabled      bool                                                              `json:"globally_enabled"`
	Id                   string                                                            `json:"id"`
	Name                 string                                                            `json:"name"`
	ServerUrl            string                                                            `json:"server_url"`
	ServiceName          string                                                            `json:"service_name"`
	SpringCloudServiceId string                                                            `json:"spring_cloud_service_id"`
	Timeouts             *springcloudelasticapplicationperformancemonitoring.TimeoutsState `json:"timeouts"`
}
