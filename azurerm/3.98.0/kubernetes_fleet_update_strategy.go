// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	kubernetesfleetupdatestrategy "github.com/golingon/terraproviders/azurerm/3.98.0/kubernetesfleetupdatestrategy"
	"io"
)

// NewKubernetesFleetUpdateStrategy creates a new instance of [KubernetesFleetUpdateStrategy].
func NewKubernetesFleetUpdateStrategy(name string, args KubernetesFleetUpdateStrategyArgs) *KubernetesFleetUpdateStrategy {
	return &KubernetesFleetUpdateStrategy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KubernetesFleetUpdateStrategy)(nil)

// KubernetesFleetUpdateStrategy represents the Terraform resource azurerm_kubernetes_fleet_update_strategy.
type KubernetesFleetUpdateStrategy struct {
	Name      string
	Args      KubernetesFleetUpdateStrategyArgs
	state     *kubernetesFleetUpdateStrategyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [KubernetesFleetUpdateStrategy].
func (kfus *KubernetesFleetUpdateStrategy) Type() string {
	return "azurerm_kubernetes_fleet_update_strategy"
}

// LocalName returns the local name for [KubernetesFleetUpdateStrategy].
func (kfus *KubernetesFleetUpdateStrategy) LocalName() string {
	return kfus.Name
}

// Configuration returns the configuration (args) for [KubernetesFleetUpdateStrategy].
func (kfus *KubernetesFleetUpdateStrategy) Configuration() interface{} {
	return kfus.Args
}

// DependOn is used for other resources to depend on [KubernetesFleetUpdateStrategy].
func (kfus *KubernetesFleetUpdateStrategy) DependOn() terra.Reference {
	return terra.ReferenceResource(kfus)
}

// Dependencies returns the list of resources [KubernetesFleetUpdateStrategy] depends_on.
func (kfus *KubernetesFleetUpdateStrategy) Dependencies() terra.Dependencies {
	return kfus.DependsOn
}

// LifecycleManagement returns the lifecycle block for [KubernetesFleetUpdateStrategy].
func (kfus *KubernetesFleetUpdateStrategy) LifecycleManagement() *terra.Lifecycle {
	return kfus.Lifecycle
}

// Attributes returns the attributes for [KubernetesFleetUpdateStrategy].
func (kfus *KubernetesFleetUpdateStrategy) Attributes() kubernetesFleetUpdateStrategyAttributes {
	return kubernetesFleetUpdateStrategyAttributes{ref: terra.ReferenceResource(kfus)}
}

// ImportState imports the given attribute values into [KubernetesFleetUpdateStrategy]'s state.
func (kfus *KubernetesFleetUpdateStrategy) ImportState(av io.Reader) error {
	kfus.state = &kubernetesFleetUpdateStrategyState{}
	if err := json.NewDecoder(av).Decode(kfus.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kfus.Type(), kfus.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [KubernetesFleetUpdateStrategy] has state.
func (kfus *KubernetesFleetUpdateStrategy) State() (*kubernetesFleetUpdateStrategyState, bool) {
	return kfus.state, kfus.state != nil
}

// StateMust returns the state for [KubernetesFleetUpdateStrategy]. Panics if the state is nil.
func (kfus *KubernetesFleetUpdateStrategy) StateMust() *kubernetesFleetUpdateStrategyState {
	if kfus.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kfus.Type(), kfus.LocalName()))
	}
	return kfus.state
}

// KubernetesFleetUpdateStrategyArgs contains the configurations for azurerm_kubernetes_fleet_update_strategy.
type KubernetesFleetUpdateStrategyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesFleetManagerId: string, required
	KubernetesFleetManagerId terra.StringValue `hcl:"kubernetes_fleet_manager_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Stage: min=1
	Stage []kubernetesfleetupdatestrategy.Stage `hcl:"stage,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *kubernetesfleetupdatestrategy.Timeouts `hcl:"timeouts,block"`
}
type kubernetesFleetUpdateStrategyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_kubernetes_fleet_update_strategy.
func (kfus kubernetesFleetUpdateStrategyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(kfus.ref.Append("id"))
}

// KubernetesFleetManagerId returns a reference to field kubernetes_fleet_manager_id of azurerm_kubernetes_fleet_update_strategy.
func (kfus kubernetesFleetUpdateStrategyAttributes) KubernetesFleetManagerId() terra.StringValue {
	return terra.ReferenceAsString(kfus.ref.Append("kubernetes_fleet_manager_id"))
}

// Name returns a reference to field name of azurerm_kubernetes_fleet_update_strategy.
func (kfus kubernetesFleetUpdateStrategyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(kfus.ref.Append("name"))
}

func (kfus kubernetesFleetUpdateStrategyAttributes) Stage() terra.ListValue[kubernetesfleetupdatestrategy.StageAttributes] {
	return terra.ReferenceAsList[kubernetesfleetupdatestrategy.StageAttributes](kfus.ref.Append("stage"))
}

func (kfus kubernetesFleetUpdateStrategyAttributes) Timeouts() kubernetesfleetupdatestrategy.TimeoutsAttributes {
	return terra.ReferenceAsSingle[kubernetesfleetupdatestrategy.TimeoutsAttributes](kfus.ref.Append("timeouts"))
}

type kubernetesFleetUpdateStrategyState struct {
	Id                       string                                       `json:"id"`
	KubernetesFleetManagerId string                                       `json:"kubernetes_fleet_manager_id"`
	Name                     string                                       `json:"name"`
	Stage                    []kubernetesfleetupdatestrategy.StageState   `json:"stage"`
	Timeouts                 *kubernetesfleetupdatestrategy.TimeoutsState `json:"timeouts"`
}
