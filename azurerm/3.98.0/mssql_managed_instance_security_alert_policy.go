// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	mssqlmanagedinstancesecurityalertpolicy "github.com/golingon/terraproviders/azurerm/3.98.0/mssqlmanagedinstancesecurityalertpolicy"
	"io"
)

// NewMssqlManagedInstanceSecurityAlertPolicy creates a new instance of [MssqlManagedInstanceSecurityAlertPolicy].
func NewMssqlManagedInstanceSecurityAlertPolicy(name string, args MssqlManagedInstanceSecurityAlertPolicyArgs) *MssqlManagedInstanceSecurityAlertPolicy {
	return &MssqlManagedInstanceSecurityAlertPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MssqlManagedInstanceSecurityAlertPolicy)(nil)

// MssqlManagedInstanceSecurityAlertPolicy represents the Terraform resource azurerm_mssql_managed_instance_security_alert_policy.
type MssqlManagedInstanceSecurityAlertPolicy struct {
	Name      string
	Args      MssqlManagedInstanceSecurityAlertPolicyArgs
	state     *mssqlManagedInstanceSecurityAlertPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [MssqlManagedInstanceSecurityAlertPolicy].
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) Type() string {
	return "azurerm_mssql_managed_instance_security_alert_policy"
}

// LocalName returns the local name for [MssqlManagedInstanceSecurityAlertPolicy].
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) LocalName() string {
	return mmisap.Name
}

// Configuration returns the configuration (args) for [MssqlManagedInstanceSecurityAlertPolicy].
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) Configuration() interface{} {
	return mmisap.Args
}

// DependOn is used for other resources to depend on [MssqlManagedInstanceSecurityAlertPolicy].
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(mmisap)
}

// Dependencies returns the list of resources [MssqlManagedInstanceSecurityAlertPolicy] depends_on.
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) Dependencies() terra.Dependencies {
	return mmisap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [MssqlManagedInstanceSecurityAlertPolicy].
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) LifecycleManagement() *terra.Lifecycle {
	return mmisap.Lifecycle
}

// Attributes returns the attributes for [MssqlManagedInstanceSecurityAlertPolicy].
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) Attributes() mssqlManagedInstanceSecurityAlertPolicyAttributes {
	return mssqlManagedInstanceSecurityAlertPolicyAttributes{ref: terra.ReferenceResource(mmisap)}
}

// ImportState imports the given attribute values into [MssqlManagedInstanceSecurityAlertPolicy]'s state.
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) ImportState(av io.Reader) error {
	mmisap.state = &mssqlManagedInstanceSecurityAlertPolicyState{}
	if err := json.NewDecoder(av).Decode(mmisap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mmisap.Type(), mmisap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [MssqlManagedInstanceSecurityAlertPolicy] has state.
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) State() (*mssqlManagedInstanceSecurityAlertPolicyState, bool) {
	return mmisap.state, mmisap.state != nil
}

// StateMust returns the state for [MssqlManagedInstanceSecurityAlertPolicy]. Panics if the state is nil.
func (mmisap *MssqlManagedInstanceSecurityAlertPolicy) StateMust() *mssqlManagedInstanceSecurityAlertPolicyState {
	if mmisap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mmisap.Type(), mmisap.LocalName()))
	}
	return mmisap.state
}

// MssqlManagedInstanceSecurityAlertPolicyArgs contains the configurations for azurerm_mssql_managed_instance_security_alert_policy.
type MssqlManagedInstanceSecurityAlertPolicyArgs struct {
	// DisabledAlerts: set of string, optional
	DisabledAlerts terra.SetValue[terra.StringValue] `hcl:"disabled_alerts,attr"`
	// EmailAccountAdminsEnabled: bool, optional
	EmailAccountAdminsEnabled terra.BoolValue `hcl:"email_account_admins_enabled,attr"`
	// EmailAddresses: set of string, optional
	EmailAddresses terra.SetValue[terra.StringValue] `hcl:"email_addresses,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagedInstanceName: string, required
	ManagedInstanceName terra.StringValue `hcl:"managed_instance_name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// RetentionDays: number, optional
	RetentionDays terra.NumberValue `hcl:"retention_days,attr"`
	// StorageAccountAccessKey: string, optional
	StorageAccountAccessKey terra.StringValue `hcl:"storage_account_access_key,attr"`
	// StorageEndpoint: string, optional
	StorageEndpoint terra.StringValue `hcl:"storage_endpoint,attr"`
	// Timeouts: optional
	Timeouts *mssqlmanagedinstancesecurityalertpolicy.Timeouts `hcl:"timeouts,block"`
}
type mssqlManagedInstanceSecurityAlertPolicyAttributes struct {
	ref terra.Reference
}

// DisabledAlerts returns a reference to field disabled_alerts of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) DisabledAlerts() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](mmisap.ref.Append("disabled_alerts"))
}

// EmailAccountAdminsEnabled returns a reference to field email_account_admins_enabled of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) EmailAccountAdminsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(mmisap.ref.Append("email_account_admins_enabled"))
}

// EmailAddresses returns a reference to field email_addresses of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) EmailAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](mmisap.ref.Append("email_addresses"))
}

// Enabled returns a reference to field enabled of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(mmisap.ref.Append("enabled"))
}

// Id returns a reference to field id of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mmisap.ref.Append("id"))
}

// ManagedInstanceName returns a reference to field managed_instance_name of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) ManagedInstanceName() terra.StringValue {
	return terra.ReferenceAsString(mmisap.ref.Append("managed_instance_name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(mmisap.ref.Append("resource_group_name"))
}

// RetentionDays returns a reference to field retention_days of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) RetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(mmisap.ref.Append("retention_days"))
}

// StorageAccountAccessKey returns a reference to field storage_account_access_key of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(mmisap.ref.Append("storage_account_access_key"))
}

// StorageEndpoint returns a reference to field storage_endpoint of azurerm_mssql_managed_instance_security_alert_policy.
func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) StorageEndpoint() terra.StringValue {
	return terra.ReferenceAsString(mmisap.ref.Append("storage_endpoint"))
}

func (mmisap mssqlManagedInstanceSecurityAlertPolicyAttributes) Timeouts() mssqlmanagedinstancesecurityalertpolicy.TimeoutsAttributes {
	return terra.ReferenceAsSingle[mssqlmanagedinstancesecurityalertpolicy.TimeoutsAttributes](mmisap.ref.Append("timeouts"))
}

type mssqlManagedInstanceSecurityAlertPolicyState struct {
	DisabledAlerts            []string                                               `json:"disabled_alerts"`
	EmailAccountAdminsEnabled bool                                                   `json:"email_account_admins_enabled"`
	EmailAddresses            []string                                               `json:"email_addresses"`
	Enabled                   bool                                                   `json:"enabled"`
	Id                        string                                                 `json:"id"`
	ManagedInstanceName       string                                                 `json:"managed_instance_name"`
	ResourceGroupName         string                                                 `json:"resource_group_name"`
	RetentionDays             float64                                                `json:"retention_days"`
	StorageAccountAccessKey   string                                                 `json:"storage_account_access_key"`
	StorageEndpoint           string                                                 `json:"storage_endpoint"`
	Timeouts                  *mssqlmanagedinstancesecurityalertpolicy.TimeoutsState `json:"timeouts"`
}
