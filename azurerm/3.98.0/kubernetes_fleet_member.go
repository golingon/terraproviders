// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	kubernetesfleetmember "github.com/golingon/terraproviders/azurerm/3.98.0/kubernetesfleetmember"
	"io"
)

// NewKubernetesFleetMember creates a new instance of [KubernetesFleetMember].
func NewKubernetesFleetMember(name string, args KubernetesFleetMemberArgs) *KubernetesFleetMember {
	return &KubernetesFleetMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KubernetesFleetMember)(nil)

// KubernetesFleetMember represents the Terraform resource azurerm_kubernetes_fleet_member.
type KubernetesFleetMember struct {
	Name      string
	Args      KubernetesFleetMemberArgs
	state     *kubernetesFleetMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [KubernetesFleetMember].
func (kfm *KubernetesFleetMember) Type() string {
	return "azurerm_kubernetes_fleet_member"
}

// LocalName returns the local name for [KubernetesFleetMember].
func (kfm *KubernetesFleetMember) LocalName() string {
	return kfm.Name
}

// Configuration returns the configuration (args) for [KubernetesFleetMember].
func (kfm *KubernetesFleetMember) Configuration() interface{} {
	return kfm.Args
}

// DependOn is used for other resources to depend on [KubernetesFleetMember].
func (kfm *KubernetesFleetMember) DependOn() terra.Reference {
	return terra.ReferenceResource(kfm)
}

// Dependencies returns the list of resources [KubernetesFleetMember] depends_on.
func (kfm *KubernetesFleetMember) Dependencies() terra.Dependencies {
	return kfm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [KubernetesFleetMember].
func (kfm *KubernetesFleetMember) LifecycleManagement() *terra.Lifecycle {
	return kfm.Lifecycle
}

// Attributes returns the attributes for [KubernetesFleetMember].
func (kfm *KubernetesFleetMember) Attributes() kubernetesFleetMemberAttributes {
	return kubernetesFleetMemberAttributes{ref: terra.ReferenceResource(kfm)}
}

// ImportState imports the given attribute values into [KubernetesFleetMember]'s state.
func (kfm *KubernetesFleetMember) ImportState(av io.Reader) error {
	kfm.state = &kubernetesFleetMemberState{}
	if err := json.NewDecoder(av).Decode(kfm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kfm.Type(), kfm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [KubernetesFleetMember] has state.
func (kfm *KubernetesFleetMember) State() (*kubernetesFleetMemberState, bool) {
	return kfm.state, kfm.state != nil
}

// StateMust returns the state for [KubernetesFleetMember]. Panics if the state is nil.
func (kfm *KubernetesFleetMember) StateMust() *kubernetesFleetMemberState {
	if kfm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kfm.Type(), kfm.LocalName()))
	}
	return kfm.state
}

// KubernetesFleetMemberArgs contains the configurations for azurerm_kubernetes_fleet_member.
type KubernetesFleetMemberArgs struct {
	// Group: string, optional
	Group terra.StringValue `hcl:"group,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesClusterId: string, required
	KubernetesClusterId terra.StringValue `hcl:"kubernetes_cluster_id,attr" validate:"required"`
	// KubernetesFleetId: string, required
	KubernetesFleetId terra.StringValue `hcl:"kubernetes_fleet_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *kubernetesfleetmember.Timeouts `hcl:"timeouts,block"`
}
type kubernetesFleetMemberAttributes struct {
	ref terra.Reference
}

// Group returns a reference to field group of azurerm_kubernetes_fleet_member.
func (kfm kubernetesFleetMemberAttributes) Group() terra.StringValue {
	return terra.ReferenceAsString(kfm.ref.Append("group"))
}

// Id returns a reference to field id of azurerm_kubernetes_fleet_member.
func (kfm kubernetesFleetMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(kfm.ref.Append("id"))
}

// KubernetesClusterId returns a reference to field kubernetes_cluster_id of azurerm_kubernetes_fleet_member.
func (kfm kubernetesFleetMemberAttributes) KubernetesClusterId() terra.StringValue {
	return terra.ReferenceAsString(kfm.ref.Append("kubernetes_cluster_id"))
}

// KubernetesFleetId returns a reference to field kubernetes_fleet_id of azurerm_kubernetes_fleet_member.
func (kfm kubernetesFleetMemberAttributes) KubernetesFleetId() terra.StringValue {
	return terra.ReferenceAsString(kfm.ref.Append("kubernetes_fleet_id"))
}

// Name returns a reference to field name of azurerm_kubernetes_fleet_member.
func (kfm kubernetesFleetMemberAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(kfm.ref.Append("name"))
}

func (kfm kubernetesFleetMemberAttributes) Timeouts() kubernetesfleetmember.TimeoutsAttributes {
	return terra.ReferenceAsSingle[kubernetesfleetmember.TimeoutsAttributes](kfm.ref.Append("timeouts"))
}

type kubernetesFleetMemberState struct {
	Group               string                               `json:"group"`
	Id                  string                               `json:"id"`
	KubernetesClusterId string                               `json:"kubernetes_cluster_id"`
	KubernetesFleetId   string                               `json:"kubernetes_fleet_id"`
	Name                string                               `json:"name"`
	Timeouts            *kubernetesfleetmember.TimeoutsState `json:"timeouts"`
}
