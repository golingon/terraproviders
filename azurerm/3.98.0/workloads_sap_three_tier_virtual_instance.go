// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	workloadssapthreetiervirtualinstance "github.com/golingon/terraproviders/azurerm/3.98.0/workloadssapthreetiervirtualinstance"
	"io"
)

// NewWorkloadsSapThreeTierVirtualInstance creates a new instance of [WorkloadsSapThreeTierVirtualInstance].
func NewWorkloadsSapThreeTierVirtualInstance(name string, args WorkloadsSapThreeTierVirtualInstanceArgs) *WorkloadsSapThreeTierVirtualInstance {
	return &WorkloadsSapThreeTierVirtualInstance{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*WorkloadsSapThreeTierVirtualInstance)(nil)

// WorkloadsSapThreeTierVirtualInstance represents the Terraform resource azurerm_workloads_sap_three_tier_virtual_instance.
type WorkloadsSapThreeTierVirtualInstance struct {
	Name      string
	Args      WorkloadsSapThreeTierVirtualInstanceArgs
	state     *workloadsSapThreeTierVirtualInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [WorkloadsSapThreeTierVirtualInstance].
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) Type() string {
	return "azurerm_workloads_sap_three_tier_virtual_instance"
}

// LocalName returns the local name for [WorkloadsSapThreeTierVirtualInstance].
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) LocalName() string {
	return wsttvi.Name
}

// Configuration returns the configuration (args) for [WorkloadsSapThreeTierVirtualInstance].
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) Configuration() interface{} {
	return wsttvi.Args
}

// DependOn is used for other resources to depend on [WorkloadsSapThreeTierVirtualInstance].
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) DependOn() terra.Reference {
	return terra.ReferenceResource(wsttvi)
}

// Dependencies returns the list of resources [WorkloadsSapThreeTierVirtualInstance] depends_on.
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) Dependencies() terra.Dependencies {
	return wsttvi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [WorkloadsSapThreeTierVirtualInstance].
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) LifecycleManagement() *terra.Lifecycle {
	return wsttvi.Lifecycle
}

// Attributes returns the attributes for [WorkloadsSapThreeTierVirtualInstance].
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) Attributes() workloadsSapThreeTierVirtualInstanceAttributes {
	return workloadsSapThreeTierVirtualInstanceAttributes{ref: terra.ReferenceResource(wsttvi)}
}

// ImportState imports the given attribute values into [WorkloadsSapThreeTierVirtualInstance]'s state.
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) ImportState(av io.Reader) error {
	wsttvi.state = &workloadsSapThreeTierVirtualInstanceState{}
	if err := json.NewDecoder(av).Decode(wsttvi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", wsttvi.Type(), wsttvi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [WorkloadsSapThreeTierVirtualInstance] has state.
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) State() (*workloadsSapThreeTierVirtualInstanceState, bool) {
	return wsttvi.state, wsttvi.state != nil
}

// StateMust returns the state for [WorkloadsSapThreeTierVirtualInstance]. Panics if the state is nil.
func (wsttvi *WorkloadsSapThreeTierVirtualInstance) StateMust() *workloadsSapThreeTierVirtualInstanceState {
	if wsttvi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", wsttvi.Type(), wsttvi.LocalName()))
	}
	return wsttvi.state
}

// WorkloadsSapThreeTierVirtualInstanceArgs contains the configurations for azurerm_workloads_sap_three_tier_virtual_instance.
type WorkloadsSapThreeTierVirtualInstanceArgs struct {
	// AppLocation: string, required
	AppLocation terra.StringValue `hcl:"app_location,attr" validate:"required"`
	// Environment: string, required
	Environment terra.StringValue `hcl:"environment,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ManagedResourceGroupName: string, optional
	ManagedResourceGroupName terra.StringValue `hcl:"managed_resource_group_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SapFqdn: string, required
	SapFqdn terra.StringValue `hcl:"sap_fqdn,attr" validate:"required"`
	// SapProduct: string, required
	SapProduct terra.StringValue `hcl:"sap_product,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: optional
	Identity *workloadssapthreetiervirtualinstance.Identity `hcl:"identity,block"`
	// ThreeTierConfiguration: required
	ThreeTierConfiguration *workloadssapthreetiervirtualinstance.ThreeTierConfiguration `hcl:"three_tier_configuration,block" validate:"required"`
	// Timeouts: optional
	Timeouts *workloadssapthreetiervirtualinstance.Timeouts `hcl:"timeouts,block"`
}
type workloadsSapThreeTierVirtualInstanceAttributes struct {
	ref terra.Reference
}

// AppLocation returns a reference to field app_location of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) AppLocation() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("app_location"))
}

// Environment returns a reference to field environment of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Environment() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("environment"))
}

// Id returns a reference to field id of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("location"))
}

// ManagedResourceGroupName returns a reference to field managed_resource_group_name of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) ManagedResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("managed_resource_group_name"))
}

// Name returns a reference to field name of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("resource_group_name"))
}

// SapFqdn returns a reference to field sap_fqdn of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) SapFqdn() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("sap_fqdn"))
}

// SapProduct returns a reference to field sap_product of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) SapProduct() terra.StringValue {
	return terra.ReferenceAsString(wsttvi.ref.Append("sap_product"))
}

// Tags returns a reference to field tags of azurerm_workloads_sap_three_tier_virtual_instance.
func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](wsttvi.ref.Append("tags"))
}

func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Identity() terra.ListValue[workloadssapthreetiervirtualinstance.IdentityAttributes] {
	return terra.ReferenceAsList[workloadssapthreetiervirtualinstance.IdentityAttributes](wsttvi.ref.Append("identity"))
}

func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) ThreeTierConfiguration() terra.ListValue[workloadssapthreetiervirtualinstance.ThreeTierConfigurationAttributes] {
	return terra.ReferenceAsList[workloadssapthreetiervirtualinstance.ThreeTierConfigurationAttributes](wsttvi.ref.Append("three_tier_configuration"))
}

func (wsttvi workloadsSapThreeTierVirtualInstanceAttributes) Timeouts() workloadssapthreetiervirtualinstance.TimeoutsAttributes {
	return terra.ReferenceAsSingle[workloadssapthreetiervirtualinstance.TimeoutsAttributes](wsttvi.ref.Append("timeouts"))
}

type workloadsSapThreeTierVirtualInstanceState struct {
	AppLocation              string                                                             `json:"app_location"`
	Environment              string                                                             `json:"environment"`
	Id                       string                                                             `json:"id"`
	Location                 string                                                             `json:"location"`
	ManagedResourceGroupName string                                                             `json:"managed_resource_group_name"`
	Name                     string                                                             `json:"name"`
	ResourceGroupName        string                                                             `json:"resource_group_name"`
	SapFqdn                  string                                                             `json:"sap_fqdn"`
	SapProduct               string                                                             `json:"sap_product"`
	Tags                     map[string]string                                                  `json:"tags"`
	Identity                 []workloadssapthreetiervirtualinstance.IdentityState               `json:"identity"`
	ThreeTierConfiguration   []workloadssapthreetiervirtualinstance.ThreeTierConfigurationState `json:"three_tier_configuration"`
	Timeouts                 *workloadssapthreetiervirtualinstance.TimeoutsState                `json:"timeouts"`
}
