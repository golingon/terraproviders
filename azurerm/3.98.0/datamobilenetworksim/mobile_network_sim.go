// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datamobilenetworksim

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type StaticIpConfiguration struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type StaticIpConfigurationAttributes struct {
	ref terra.Reference
}

func (sic StaticIpConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sic.ref, nil
}

func (sic StaticIpConfigurationAttributes) InternalWithRef(ref terra.Reference) StaticIpConfigurationAttributes {
	return StaticIpConfigurationAttributes{ref: ref}
}

func (sic StaticIpConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sic.ref.InternalTokens()
}

func (sic StaticIpConfigurationAttributes) AttachedDataNetworkId() terra.StringValue {
	return terra.ReferenceAsString(sic.ref.Append("attached_data_network_id"))
}

func (sic StaticIpConfigurationAttributes) SliceId() terra.StringValue {
	return terra.ReferenceAsString(sic.ref.Append("slice_id"))
}

func (sic StaticIpConfigurationAttributes) StaticIpv4Address() terra.StringValue {
	return terra.ReferenceAsString(sic.ref.Append("static_ipv4_address"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type StaticIpConfigurationState struct {
	AttachedDataNetworkId string `json:"attached_data_network_id"`
	SliceId               string `json:"slice_id"`
	StaticIpv4Address     string `json:"static_ipv4_address"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
