// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	springcloudappdynamicsapplicationperformancemonitoring "github.com/golingon/terraproviders/azurerm/3.98.0/springcloudappdynamicsapplicationperformancemonitoring"
	"io"
)

// NewSpringCloudAppDynamicsApplicationPerformanceMonitoring creates a new instance of [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func NewSpringCloudAppDynamicsApplicationPerformanceMonitoring(name string, args SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs) *SpringCloudAppDynamicsApplicationPerformanceMonitoring {
	return &SpringCloudAppDynamicsApplicationPerformanceMonitoring{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)

// SpringCloudAppDynamicsApplicationPerformanceMonitoring represents the Terraform resource azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
type SpringCloudAppDynamicsApplicationPerformanceMonitoring struct {
	Name      string
	Args      SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs
	state     *springCloudAppDynamicsApplicationPerformanceMonitoringState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) Type() string {
	return "azurerm_spring_cloud_app_dynamics_application_performance_monitoring"
}

// LocalName returns the local name for [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) LocalName() string {
	return scadapm.Name
}

// Configuration returns the configuration (args) for [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) Configuration() interface{} {
	return scadapm.Args
}

// DependOn is used for other resources to depend on [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) DependOn() terra.Reference {
	return terra.ReferenceResource(scadapm)
}

// Dependencies returns the list of resources [SpringCloudAppDynamicsApplicationPerformanceMonitoring] depends_on.
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) Dependencies() terra.Dependencies {
	return scadapm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) LifecycleManagement() *terra.Lifecycle {
	return scadapm.Lifecycle
}

// Attributes returns the attributes for [SpringCloudAppDynamicsApplicationPerformanceMonitoring].
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) Attributes() springCloudAppDynamicsApplicationPerformanceMonitoringAttributes {
	return springCloudAppDynamicsApplicationPerformanceMonitoringAttributes{ref: terra.ReferenceResource(scadapm)}
}

// ImportState imports the given attribute values into [SpringCloudAppDynamicsApplicationPerformanceMonitoring]'s state.
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) ImportState(av io.Reader) error {
	scadapm.state = &springCloudAppDynamicsApplicationPerformanceMonitoringState{}
	if err := json.NewDecoder(av).Decode(scadapm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", scadapm.Type(), scadapm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SpringCloudAppDynamicsApplicationPerformanceMonitoring] has state.
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) State() (*springCloudAppDynamicsApplicationPerformanceMonitoringState, bool) {
	return scadapm.state, scadapm.state != nil
}

// StateMust returns the state for [SpringCloudAppDynamicsApplicationPerformanceMonitoring]. Panics if the state is nil.
func (scadapm *SpringCloudAppDynamicsApplicationPerformanceMonitoring) StateMust() *springCloudAppDynamicsApplicationPerformanceMonitoringState {
	if scadapm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", scadapm.Type(), scadapm.LocalName()))
	}
	return scadapm.state
}

// SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs contains the configurations for azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
type SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs struct {
	// AgentAccountAccessKey: string, required
	AgentAccountAccessKey terra.StringValue `hcl:"agent_account_access_key,attr" validate:"required"`
	// AgentAccountName: string, required
	AgentAccountName terra.StringValue `hcl:"agent_account_name,attr" validate:"required"`
	// AgentApplicationName: string, optional
	AgentApplicationName terra.StringValue `hcl:"agent_application_name,attr"`
	// AgentNodeName: string, optional
	AgentNodeName terra.StringValue `hcl:"agent_node_name,attr"`
	// AgentTierName: string, optional
	AgentTierName terra.StringValue `hcl:"agent_tier_name,attr"`
	// AgentUniqueHostId: string, optional
	AgentUniqueHostId terra.StringValue `hcl:"agent_unique_host_id,attr"`
	// ControllerHostName: string, required
	ControllerHostName terra.StringValue `hcl:"controller_host_name,attr" validate:"required"`
	// ControllerPort: number, optional
	ControllerPort terra.NumberValue `hcl:"controller_port,attr"`
	// ControllerSslEnabled: bool, optional
	ControllerSslEnabled terra.BoolValue `hcl:"controller_ssl_enabled,attr"`
	// GloballyEnabled: bool, optional
	GloballyEnabled terra.BoolValue `hcl:"globally_enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SpringCloudServiceId: string, required
	SpringCloudServiceId terra.StringValue `hcl:"spring_cloud_service_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *springcloudappdynamicsapplicationperformancemonitoring.Timeouts `hcl:"timeouts,block"`
}
type springCloudAppDynamicsApplicationPerformanceMonitoringAttributes struct {
	ref terra.Reference
}

// AgentAccountAccessKey returns a reference to field agent_account_access_key of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) AgentAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("agent_account_access_key"))
}

// AgentAccountName returns a reference to field agent_account_name of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) AgentAccountName() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("agent_account_name"))
}

// AgentApplicationName returns a reference to field agent_application_name of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) AgentApplicationName() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("agent_application_name"))
}

// AgentNodeName returns a reference to field agent_node_name of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) AgentNodeName() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("agent_node_name"))
}

// AgentTierName returns a reference to field agent_tier_name of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) AgentTierName() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("agent_tier_name"))
}

// AgentUniqueHostId returns a reference to field agent_unique_host_id of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) AgentUniqueHostId() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("agent_unique_host_id"))
}

// ControllerHostName returns a reference to field controller_host_name of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) ControllerHostName() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("controller_host_name"))
}

// ControllerPort returns a reference to field controller_port of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) ControllerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(scadapm.ref.Append("controller_port"))
}

// ControllerSslEnabled returns a reference to field controller_ssl_enabled of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) ControllerSslEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(scadapm.ref.Append("controller_ssl_enabled"))
}

// GloballyEnabled returns a reference to field globally_enabled of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) GloballyEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(scadapm.ref.Append("globally_enabled"))
}

// Id returns a reference to field id of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("name"))
}

// SpringCloudServiceId returns a reference to field spring_cloud_service_id of azurerm_spring_cloud_app_dynamics_application_performance_monitoring.
func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) SpringCloudServiceId() terra.StringValue {
	return terra.ReferenceAsString(scadapm.ref.Append("spring_cloud_service_id"))
}

func (scadapm springCloudAppDynamicsApplicationPerformanceMonitoringAttributes) Timeouts() springcloudappdynamicsapplicationperformancemonitoring.TimeoutsAttributes {
	return terra.ReferenceAsSingle[springcloudappdynamicsapplicationperformancemonitoring.TimeoutsAttributes](scadapm.ref.Append("timeouts"))
}

type springCloudAppDynamicsApplicationPerformanceMonitoringState struct {
	AgentAccountAccessKey string                                                                `json:"agent_account_access_key"`
	AgentAccountName      string                                                                `json:"agent_account_name"`
	AgentApplicationName  string                                                                `json:"agent_application_name"`
	AgentNodeName         string                                                                `json:"agent_node_name"`
	AgentTierName         string                                                                `json:"agent_tier_name"`
	AgentUniqueHostId     string                                                                `json:"agent_unique_host_id"`
	ControllerHostName    string                                                                `json:"controller_host_name"`
	ControllerPort        float64                                                               `json:"controller_port"`
	ControllerSslEnabled  bool                                                                  `json:"controller_ssl_enabled"`
	GloballyEnabled       bool                                                                  `json:"globally_enabled"`
	Id                    string                                                                `json:"id"`
	Name                  string                                                                `json:"name"`
	SpringCloudServiceId  string                                                                `json:"spring_cloud_service_id"`
	Timeouts              *springcloudappdynamicsapplicationperformancemonitoring.TimeoutsState `json:"timeouts"`
}
