// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package pointtositevpngateway

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ConnectionConfiguration struct {
	// InternetSecurityEnabled: bool, optional
	InternetSecurityEnabled terra.BoolValue `hcl:"internet_security_enabled,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Route: optional
	Route *Route `hcl:"route,block"`
	// VpnClientAddressPool: required
	VpnClientAddressPool *VpnClientAddressPool `hcl:"vpn_client_address_pool,block" validate:"required"`
}

type Route struct {
	// AssociatedRouteTableId: string, required
	AssociatedRouteTableId terra.StringValue `hcl:"associated_route_table_id,attr" validate:"required"`
	// InboundRouteMapId: string, optional
	InboundRouteMapId terra.StringValue `hcl:"inbound_route_map_id,attr"`
	// OutboundRouteMapId: string, optional
	OutboundRouteMapId terra.StringValue `hcl:"outbound_route_map_id,attr"`
	// PropagatedRouteTable: optional
	PropagatedRouteTable *PropagatedRouteTable `hcl:"propagated_route_table,block"`
}

type PropagatedRouteTable struct {
	// Ids: list of string, required
	Ids terra.ListValue[terra.StringValue] `hcl:"ids,attr" validate:"required"`
	// Labels: set of string, optional
	Labels terra.SetValue[terra.StringValue] `hcl:"labels,attr"`
}

type VpnClientAddressPool struct {
	// AddressPrefixes: set of string, required
	AddressPrefixes terra.SetValue[terra.StringValue] `hcl:"address_prefixes,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ConnectionConfigurationAttributes struct {
	ref terra.Reference
}

func (cc ConnectionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc ConnectionConfigurationAttributes) InternalWithRef(ref terra.Reference) ConnectionConfigurationAttributes {
	return ConnectionConfigurationAttributes{ref: ref}
}

func (cc ConnectionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc ConnectionConfigurationAttributes) InternetSecurityEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("internet_security_enabled"))
}

func (cc ConnectionConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("name"))
}

func (cc ConnectionConfigurationAttributes) Route() terra.ListValue[RouteAttributes] {
	return terra.ReferenceAsList[RouteAttributes](cc.ref.Append("route"))
}

func (cc ConnectionConfigurationAttributes) VpnClientAddressPool() terra.ListValue[VpnClientAddressPoolAttributes] {
	return terra.ReferenceAsList[VpnClientAddressPoolAttributes](cc.ref.Append("vpn_client_address_pool"))
}

type RouteAttributes struct {
	ref terra.Reference
}

func (r RouteAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RouteAttributes) InternalWithRef(ref terra.Reference) RouteAttributes {
	return RouteAttributes{ref: ref}
}

func (r RouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RouteAttributes) AssociatedRouteTableId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("associated_route_table_id"))
}

func (r RouteAttributes) InboundRouteMapId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("inbound_route_map_id"))
}

func (r RouteAttributes) OutboundRouteMapId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("outbound_route_map_id"))
}

func (r RouteAttributes) PropagatedRouteTable() terra.ListValue[PropagatedRouteTableAttributes] {
	return terra.ReferenceAsList[PropagatedRouteTableAttributes](r.ref.Append("propagated_route_table"))
}

type PropagatedRouteTableAttributes struct {
	ref terra.Reference
}

func (prt PropagatedRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return prt.ref, nil
}

func (prt PropagatedRouteTableAttributes) InternalWithRef(ref terra.Reference) PropagatedRouteTableAttributes {
	return PropagatedRouteTableAttributes{ref: ref}
}

func (prt PropagatedRouteTableAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return prt.ref.InternalTokens()
}

func (prt PropagatedRouteTableAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](prt.ref.Append("ids"))
}

func (prt PropagatedRouteTableAttributes) Labels() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](prt.ref.Append("labels"))
}

type VpnClientAddressPoolAttributes struct {
	ref terra.Reference
}

func (vcap VpnClientAddressPoolAttributes) InternalRef() (terra.Reference, error) {
	return vcap.ref, nil
}

func (vcap VpnClientAddressPoolAttributes) InternalWithRef(ref terra.Reference) VpnClientAddressPoolAttributes {
	return VpnClientAddressPoolAttributes{ref: ref}
}

func (vcap VpnClientAddressPoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vcap.ref.InternalTokens()
}

func (vcap VpnClientAddressPoolAttributes) AddressPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vcap.ref.Append("address_prefixes"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ConnectionConfigurationState struct {
	InternetSecurityEnabled bool                        `json:"internet_security_enabled"`
	Name                    string                      `json:"name"`
	Route                   []RouteState                `json:"route"`
	VpnClientAddressPool    []VpnClientAddressPoolState `json:"vpn_client_address_pool"`
}

type RouteState struct {
	AssociatedRouteTableId string                      `json:"associated_route_table_id"`
	InboundRouteMapId      string                      `json:"inbound_route_map_id"`
	OutboundRouteMapId     string                      `json:"outbound_route_map_id"`
	PropagatedRouteTable   []PropagatedRouteTableState `json:"propagated_route_table"`
}

type PropagatedRouteTableState struct {
	Ids    []string `json:"ids"`
	Labels []string `json:"labels"`
}

type VpnClientAddressPoolState struct {
	AddressPrefixes []string `json:"address_prefixes"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
