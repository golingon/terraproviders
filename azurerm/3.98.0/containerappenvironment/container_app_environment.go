// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package containerappenvironment

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type WorkloadProfile struct {
	// MaximumCount: number, optional
	MaximumCount terra.NumberValue `hcl:"maximum_count,attr"`
	// MinimumCount: number, optional
	MinimumCount terra.NumberValue `hcl:"minimum_count,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// WorkloadProfileType: string, required
	WorkloadProfileType terra.StringValue `hcl:"workload_profile_type,attr" validate:"required"`
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type WorkloadProfileAttributes struct {
	ref terra.Reference
}

func (wp WorkloadProfileAttributes) InternalRef() (terra.Reference, error) {
	return wp.ref, nil
}

func (wp WorkloadProfileAttributes) InternalWithRef(ref terra.Reference) WorkloadProfileAttributes {
	return WorkloadProfileAttributes{ref: ref}
}

func (wp WorkloadProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wp.ref.InternalTokens()
}

func (wp WorkloadProfileAttributes) MaximumCount() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("maximum_count"))
}

func (wp WorkloadProfileAttributes) MinimumCount() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("minimum_count"))
}

func (wp WorkloadProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("name"))
}

func (wp WorkloadProfileAttributes) WorkloadProfileType() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("workload_profile_type"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}

type WorkloadProfileState struct {
	MaximumCount        float64 `json:"maximum_count"`
	MinimumCount        float64 `json:"minimum_count"`
	Name                string  `json:"name"`
	WorkloadProfileType string  `json:"workload_profile_type"`
}
