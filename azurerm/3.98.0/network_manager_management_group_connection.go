// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	networkmanagermanagementgroupconnection "github.com/golingon/terraproviders/azurerm/3.98.0/networkmanagermanagementgroupconnection"
	"io"
)

// NewNetworkManagerManagementGroupConnection creates a new instance of [NetworkManagerManagementGroupConnection].
func NewNetworkManagerManagementGroupConnection(name string, args NetworkManagerManagementGroupConnectionArgs) *NetworkManagerManagementGroupConnection {
	return &NetworkManagerManagementGroupConnection{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkManagerManagementGroupConnection)(nil)

// NetworkManagerManagementGroupConnection represents the Terraform resource azurerm_network_manager_management_group_connection.
type NetworkManagerManagementGroupConnection struct {
	Name      string
	Args      NetworkManagerManagementGroupConnectionArgs
	state     *networkManagerManagementGroupConnectionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [NetworkManagerManagementGroupConnection].
func (nmmgc *NetworkManagerManagementGroupConnection) Type() string {
	return "azurerm_network_manager_management_group_connection"
}

// LocalName returns the local name for [NetworkManagerManagementGroupConnection].
func (nmmgc *NetworkManagerManagementGroupConnection) LocalName() string {
	return nmmgc.Name
}

// Configuration returns the configuration (args) for [NetworkManagerManagementGroupConnection].
func (nmmgc *NetworkManagerManagementGroupConnection) Configuration() interface{} {
	return nmmgc.Args
}

// DependOn is used for other resources to depend on [NetworkManagerManagementGroupConnection].
func (nmmgc *NetworkManagerManagementGroupConnection) DependOn() terra.Reference {
	return terra.ReferenceResource(nmmgc)
}

// Dependencies returns the list of resources [NetworkManagerManagementGroupConnection] depends_on.
func (nmmgc *NetworkManagerManagementGroupConnection) Dependencies() terra.Dependencies {
	return nmmgc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [NetworkManagerManagementGroupConnection].
func (nmmgc *NetworkManagerManagementGroupConnection) LifecycleManagement() *terra.Lifecycle {
	return nmmgc.Lifecycle
}

// Attributes returns the attributes for [NetworkManagerManagementGroupConnection].
func (nmmgc *NetworkManagerManagementGroupConnection) Attributes() networkManagerManagementGroupConnectionAttributes {
	return networkManagerManagementGroupConnectionAttributes{ref: terra.ReferenceResource(nmmgc)}
}

// ImportState imports the given attribute values into [NetworkManagerManagementGroupConnection]'s state.
func (nmmgc *NetworkManagerManagementGroupConnection) ImportState(av io.Reader) error {
	nmmgc.state = &networkManagerManagementGroupConnectionState{}
	if err := json.NewDecoder(av).Decode(nmmgc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nmmgc.Type(), nmmgc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [NetworkManagerManagementGroupConnection] has state.
func (nmmgc *NetworkManagerManagementGroupConnection) State() (*networkManagerManagementGroupConnectionState, bool) {
	return nmmgc.state, nmmgc.state != nil
}

// StateMust returns the state for [NetworkManagerManagementGroupConnection]. Panics if the state is nil.
func (nmmgc *NetworkManagerManagementGroupConnection) StateMust() *networkManagerManagementGroupConnectionState {
	if nmmgc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nmmgc.Type(), nmmgc.LocalName()))
	}
	return nmmgc.state
}

// NetworkManagerManagementGroupConnectionArgs contains the configurations for azurerm_network_manager_management_group_connection.
type NetworkManagerManagementGroupConnectionArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ManagementGroupId: string, required
	ManagementGroupId terra.StringValue `hcl:"management_group_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NetworkManagerId: string, required
	NetworkManagerId terra.StringValue `hcl:"network_manager_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *networkmanagermanagementgroupconnection.Timeouts `hcl:"timeouts,block"`
}
type networkManagerManagementGroupConnectionAttributes struct {
	ref terra.Reference
}

// ConnectionState returns a reference to field connection_state of azurerm_network_manager_management_group_connection.
func (nmmgc networkManagerManagementGroupConnectionAttributes) ConnectionState() terra.StringValue {
	return terra.ReferenceAsString(nmmgc.ref.Append("connection_state"))
}

// Description returns a reference to field description of azurerm_network_manager_management_group_connection.
func (nmmgc networkManagerManagementGroupConnectionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(nmmgc.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_network_manager_management_group_connection.
func (nmmgc networkManagerManagementGroupConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nmmgc.ref.Append("id"))
}

// ManagementGroupId returns a reference to field management_group_id of azurerm_network_manager_management_group_connection.
func (nmmgc networkManagerManagementGroupConnectionAttributes) ManagementGroupId() terra.StringValue {
	return terra.ReferenceAsString(nmmgc.ref.Append("management_group_id"))
}

// Name returns a reference to field name of azurerm_network_manager_management_group_connection.
func (nmmgc networkManagerManagementGroupConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nmmgc.ref.Append("name"))
}

// NetworkManagerId returns a reference to field network_manager_id of azurerm_network_manager_management_group_connection.
func (nmmgc networkManagerManagementGroupConnectionAttributes) NetworkManagerId() terra.StringValue {
	return terra.ReferenceAsString(nmmgc.ref.Append("network_manager_id"))
}

func (nmmgc networkManagerManagementGroupConnectionAttributes) Timeouts() networkmanagermanagementgroupconnection.TimeoutsAttributes {
	return terra.ReferenceAsSingle[networkmanagermanagementgroupconnection.TimeoutsAttributes](nmmgc.ref.Append("timeouts"))
}

type networkManagerManagementGroupConnectionState struct {
	ConnectionState   string                                                 `json:"connection_state"`
	Description       string                                                 `json:"description"`
	Id                string                                                 `json:"id"`
	ManagementGroupId string                                                 `json:"management_group_id"`
	Name              string                                                 `json:"name"`
	NetworkManagerId  string                                                 `json:"network_manager_id"`
	Timeouts          *networkmanagermanagementgroupconnection.TimeoutsState `json:"timeouts"`
}
