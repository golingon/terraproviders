// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"github.com/golingon/lingon/pkg/terra"
	datadatafactorytriggerschedule "github.com/golingon/terraproviders/azurerm/3.98.0/datadatafactorytriggerschedule"
)

// NewDataDataFactoryTriggerSchedule creates a new instance of [DataDataFactoryTriggerSchedule].
func NewDataDataFactoryTriggerSchedule(name string, args DataDataFactoryTriggerScheduleArgs) *DataDataFactoryTriggerSchedule {
	return &DataDataFactoryTriggerSchedule{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDataFactoryTriggerSchedule)(nil)

// DataDataFactoryTriggerSchedule represents the Terraform data resource azurerm_data_factory_trigger_schedule.
type DataDataFactoryTriggerSchedule struct {
	Name string
	Args DataDataFactoryTriggerScheduleArgs
}

// DataSource returns the Terraform object type for [DataDataFactoryTriggerSchedule].
func (dfts *DataDataFactoryTriggerSchedule) DataSource() string {
	return "azurerm_data_factory_trigger_schedule"
}

// LocalName returns the local name for [DataDataFactoryTriggerSchedule].
func (dfts *DataDataFactoryTriggerSchedule) LocalName() string {
	return dfts.Name
}

// Configuration returns the configuration (args) for [DataDataFactoryTriggerSchedule].
func (dfts *DataDataFactoryTriggerSchedule) Configuration() interface{} {
	return dfts.Args
}

// Attributes returns the attributes for [DataDataFactoryTriggerSchedule].
func (dfts *DataDataFactoryTriggerSchedule) Attributes() dataDataFactoryTriggerScheduleAttributes {
	return dataDataFactoryTriggerScheduleAttributes{ref: terra.ReferenceDataResource(dfts)}
}

// DataDataFactoryTriggerScheduleArgs contains the configurations for azurerm_data_factory_trigger_schedule.
type DataDataFactoryTriggerScheduleArgs struct {
	// DataFactoryId: string, required
	DataFactoryId terra.StringValue `hcl:"data_factory_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Schedule: min=0
	Schedule []datadatafactorytriggerschedule.Schedule `hcl:"schedule,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datadatafactorytriggerschedule.Timeouts `hcl:"timeouts,block"`
}
type dataDataFactoryTriggerScheduleAttributes struct {
	ref terra.Reference
}

// Activated returns a reference to field activated of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Activated() terra.BoolValue {
	return terra.ReferenceAsBool(dfts.ref.Append("activated"))
}

// Annotations returns a reference to field annotations of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Annotations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dfts.ref.Append("annotations"))
}

// DataFactoryId returns a reference to field data_factory_id of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) DataFactoryId() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("data_factory_id"))
}

// Description returns a reference to field description of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("description"))
}

// EndTime returns a reference to field end_time of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("end_time"))
}

// Frequency returns a reference to field frequency of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Frequency() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("frequency"))
}

// Id returns a reference to field id of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("id"))
}

// Interval returns a reference to field interval of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(dfts.ref.Append("interval"))
}

// Name returns a reference to field name of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("name"))
}

// PipelineName returns a reference to field pipeline_name of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) PipelineName() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("pipeline_name"))
}

// StartTime returns a reference to field start_time of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("start_time"))
}

// TimeZone returns a reference to field time_zone of azurerm_data_factory_trigger_schedule.
func (dfts dataDataFactoryTriggerScheduleAttributes) TimeZone() terra.StringValue {
	return terra.ReferenceAsString(dfts.ref.Append("time_zone"))
}

func (dfts dataDataFactoryTriggerScheduleAttributes) Schedule() terra.ListValue[datadatafactorytriggerschedule.ScheduleAttributes] {
	return terra.ReferenceAsList[datadatafactorytriggerschedule.ScheduleAttributes](dfts.ref.Append("schedule"))
}

func (dfts dataDataFactoryTriggerScheduleAttributes) Timeouts() datadatafactorytriggerschedule.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datadatafactorytriggerschedule.TimeoutsAttributes](dfts.ref.Append("timeouts"))
}
