// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azurerm

import (
	"github.com/golingon/lingon/pkg/terra"
	datamonitorworkspace "github.com/golingon/terraproviders/azurerm/3.98.0/datamonitorworkspace"
)

// NewDataMonitorWorkspace creates a new instance of [DataMonitorWorkspace].
func NewDataMonitorWorkspace(name string, args DataMonitorWorkspaceArgs) *DataMonitorWorkspace {
	return &DataMonitorWorkspace{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMonitorWorkspace)(nil)

// DataMonitorWorkspace represents the Terraform data resource azurerm_monitor_workspace.
type DataMonitorWorkspace struct {
	Name string
	Args DataMonitorWorkspaceArgs
}

// DataSource returns the Terraform object type for [DataMonitorWorkspace].
func (mw *DataMonitorWorkspace) DataSource() string {
	return "azurerm_monitor_workspace"
}

// LocalName returns the local name for [DataMonitorWorkspace].
func (mw *DataMonitorWorkspace) LocalName() string {
	return mw.Name
}

// Configuration returns the configuration (args) for [DataMonitorWorkspace].
func (mw *DataMonitorWorkspace) Configuration() interface{} {
	return mw.Args
}

// Attributes returns the attributes for [DataMonitorWorkspace].
func (mw *DataMonitorWorkspace) Attributes() dataMonitorWorkspaceAttributes {
	return dataMonitorWorkspaceAttributes{ref: terra.ReferenceDataResource(mw)}
}

// DataMonitorWorkspaceArgs contains the configurations for azurerm_monitor_workspace.
type DataMonitorWorkspaceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *datamonitorworkspace.Timeouts `hcl:"timeouts,block"`
}
type dataMonitorWorkspaceAttributes struct {
	ref terra.Reference
}

// DefaultDataCollectionEndpointId returns a reference to field default_data_collection_endpoint_id of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) DefaultDataCollectionEndpointId() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("default_data_collection_endpoint_id"))
}

// DefaultDataCollectionRuleId returns a reference to field default_data_collection_rule_id of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) DefaultDataCollectionRuleId() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("default_data_collection_rule_id"))
}

// Id returns a reference to field id of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("name"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(mw.ref.Append("public_network_access_enabled"))
}

// QueryEndpoint returns a reference to field query_endpoint of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) QueryEndpoint() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("query_endpoint"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_monitor_workspace.
func (mw dataMonitorWorkspaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mw.ref.Append("tags"))
}

func (mw dataMonitorWorkspaceAttributes) Timeouts() datamonitorworkspace.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datamonitorworkspace.TimeoutsAttributes](mw.ref.Append("timeouts"))
}
