// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	networkfunctionazuretrafficcollector "github.com/golingon/terraproviders/azurerm/3.68.0/networkfunctionazuretrafficcollector"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewNetworkFunctionAzureTrafficCollector creates a new instance of [NetworkFunctionAzureTrafficCollector].
func NewNetworkFunctionAzureTrafficCollector(name string, args NetworkFunctionAzureTrafficCollectorArgs) *NetworkFunctionAzureTrafficCollector {
	return &NetworkFunctionAzureTrafficCollector{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkFunctionAzureTrafficCollector)(nil)

// NetworkFunctionAzureTrafficCollector represents the Terraform resource azurerm_network_function_azure_traffic_collector.
type NetworkFunctionAzureTrafficCollector struct {
	Name      string
	Args      NetworkFunctionAzureTrafficCollectorArgs
	state     *networkFunctionAzureTrafficCollectorState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [NetworkFunctionAzureTrafficCollector].
func (nfatc *NetworkFunctionAzureTrafficCollector) Type() string {
	return "azurerm_network_function_azure_traffic_collector"
}

// LocalName returns the local name for [NetworkFunctionAzureTrafficCollector].
func (nfatc *NetworkFunctionAzureTrafficCollector) LocalName() string {
	return nfatc.Name
}

// Configuration returns the configuration (args) for [NetworkFunctionAzureTrafficCollector].
func (nfatc *NetworkFunctionAzureTrafficCollector) Configuration() interface{} {
	return nfatc.Args
}

// DependOn is used for other resources to depend on [NetworkFunctionAzureTrafficCollector].
func (nfatc *NetworkFunctionAzureTrafficCollector) DependOn() terra.Reference {
	return terra.ReferenceResource(nfatc)
}

// Dependencies returns the list of resources [NetworkFunctionAzureTrafficCollector] depends_on.
func (nfatc *NetworkFunctionAzureTrafficCollector) Dependencies() terra.Dependencies {
	return nfatc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [NetworkFunctionAzureTrafficCollector].
func (nfatc *NetworkFunctionAzureTrafficCollector) LifecycleManagement() *terra.Lifecycle {
	return nfatc.Lifecycle
}

// Attributes returns the attributes for [NetworkFunctionAzureTrafficCollector].
func (nfatc *NetworkFunctionAzureTrafficCollector) Attributes() networkFunctionAzureTrafficCollectorAttributes {
	return networkFunctionAzureTrafficCollectorAttributes{ref: terra.ReferenceResource(nfatc)}
}

// ImportState imports the given attribute values into [NetworkFunctionAzureTrafficCollector]'s state.
func (nfatc *NetworkFunctionAzureTrafficCollector) ImportState(av io.Reader) error {
	nfatc.state = &networkFunctionAzureTrafficCollectorState{}
	if err := json.NewDecoder(av).Decode(nfatc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nfatc.Type(), nfatc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [NetworkFunctionAzureTrafficCollector] has state.
func (nfatc *NetworkFunctionAzureTrafficCollector) State() (*networkFunctionAzureTrafficCollectorState, bool) {
	return nfatc.state, nfatc.state != nil
}

// StateMust returns the state for [NetworkFunctionAzureTrafficCollector]. Panics if the state is nil.
func (nfatc *NetworkFunctionAzureTrafficCollector) StateMust() *networkFunctionAzureTrafficCollectorState {
	if nfatc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nfatc.Type(), nfatc.LocalName()))
	}
	return nfatc.state
}

// NetworkFunctionAzureTrafficCollectorArgs contains the configurations for azurerm_network_function_azure_traffic_collector.
type NetworkFunctionAzureTrafficCollectorArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Timeouts: optional
	Timeouts *networkfunctionazuretrafficcollector.Timeouts `hcl:"timeouts,block"`
}
type networkFunctionAzureTrafficCollectorAttributes struct {
	ref terra.Reference
}

// CollectorPolicyIds returns a reference to field collector_policy_ids of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) CollectorPolicyIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nfatc.ref.Append("collector_policy_ids"))
}

// Id returns a reference to field id of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nfatc.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(nfatc.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nfatc.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(nfatc.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nfatc.ref.Append("tags"))
}

// VirtualHubId returns a reference to field virtual_hub_id of azurerm_network_function_azure_traffic_collector.
func (nfatc networkFunctionAzureTrafficCollectorAttributes) VirtualHubId() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nfatc.ref.Append("virtual_hub_id"))
}

func (nfatc networkFunctionAzureTrafficCollectorAttributes) Timeouts() networkfunctionazuretrafficcollector.TimeoutsAttributes {
	return terra.ReferenceAsSingle[networkfunctionazuretrafficcollector.TimeoutsAttributes](nfatc.ref.Append("timeouts"))
}

type networkFunctionAzureTrafficCollectorState struct {
	CollectorPolicyIds []string                                            `json:"collector_policy_ids"`
	Id                 string                                              `json:"id"`
	Location           string                                              `json:"location"`
	Name               string                                              `json:"name"`
	ResourceGroupName  string                                              `json:"resource_group_name"`
	Tags               map[string]string                                   `json:"tags"`
	VirtualHubId       []string                                            `json:"virtual_hub_id"`
	Timeouts           *networkfunctionazuretrafficcollector.TimeoutsState `json:"timeouts"`
}
