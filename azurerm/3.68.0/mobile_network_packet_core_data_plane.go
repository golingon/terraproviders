// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	mobilenetworkpacketcoredataplane "github.com/golingon/terraproviders/azurerm/3.68.0/mobilenetworkpacketcoredataplane"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewMobileNetworkPacketCoreDataPlane creates a new instance of [MobileNetworkPacketCoreDataPlane].
func NewMobileNetworkPacketCoreDataPlane(name string, args MobileNetworkPacketCoreDataPlaneArgs) *MobileNetworkPacketCoreDataPlane {
	return &MobileNetworkPacketCoreDataPlane{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*MobileNetworkPacketCoreDataPlane)(nil)

// MobileNetworkPacketCoreDataPlane represents the Terraform resource azurerm_mobile_network_packet_core_data_plane.
type MobileNetworkPacketCoreDataPlane struct {
	Name      string
	Args      MobileNetworkPacketCoreDataPlaneArgs
	state     *mobileNetworkPacketCoreDataPlaneState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [MobileNetworkPacketCoreDataPlane].
func (mnpcdp *MobileNetworkPacketCoreDataPlane) Type() string {
	return "azurerm_mobile_network_packet_core_data_plane"
}

// LocalName returns the local name for [MobileNetworkPacketCoreDataPlane].
func (mnpcdp *MobileNetworkPacketCoreDataPlane) LocalName() string {
	return mnpcdp.Name
}

// Configuration returns the configuration (args) for [MobileNetworkPacketCoreDataPlane].
func (mnpcdp *MobileNetworkPacketCoreDataPlane) Configuration() interface{} {
	return mnpcdp.Args
}

// DependOn is used for other resources to depend on [MobileNetworkPacketCoreDataPlane].
func (mnpcdp *MobileNetworkPacketCoreDataPlane) DependOn() terra.Reference {
	return terra.ReferenceResource(mnpcdp)
}

// Dependencies returns the list of resources [MobileNetworkPacketCoreDataPlane] depends_on.
func (mnpcdp *MobileNetworkPacketCoreDataPlane) Dependencies() terra.Dependencies {
	return mnpcdp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [MobileNetworkPacketCoreDataPlane].
func (mnpcdp *MobileNetworkPacketCoreDataPlane) LifecycleManagement() *terra.Lifecycle {
	return mnpcdp.Lifecycle
}

// Attributes returns the attributes for [MobileNetworkPacketCoreDataPlane].
func (mnpcdp *MobileNetworkPacketCoreDataPlane) Attributes() mobileNetworkPacketCoreDataPlaneAttributes {
	return mobileNetworkPacketCoreDataPlaneAttributes{ref: terra.ReferenceResource(mnpcdp)}
}

// ImportState imports the given attribute values into [MobileNetworkPacketCoreDataPlane]'s state.
func (mnpcdp *MobileNetworkPacketCoreDataPlane) ImportState(av io.Reader) error {
	mnpcdp.state = &mobileNetworkPacketCoreDataPlaneState{}
	if err := json.NewDecoder(av).Decode(mnpcdp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", mnpcdp.Type(), mnpcdp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [MobileNetworkPacketCoreDataPlane] has state.
func (mnpcdp *MobileNetworkPacketCoreDataPlane) State() (*mobileNetworkPacketCoreDataPlaneState, bool) {
	return mnpcdp.state, mnpcdp.state != nil
}

// StateMust returns the state for [MobileNetworkPacketCoreDataPlane]. Panics if the state is nil.
func (mnpcdp *MobileNetworkPacketCoreDataPlane) StateMust() *mobileNetworkPacketCoreDataPlaneState {
	if mnpcdp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", mnpcdp.Type(), mnpcdp.LocalName()))
	}
	return mnpcdp.state
}

// MobileNetworkPacketCoreDataPlaneArgs contains the configurations for azurerm_mobile_network_packet_core_data_plane.
type MobileNetworkPacketCoreDataPlaneArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MobileNetworkPacketCoreControlPlaneId: string, required
	MobileNetworkPacketCoreControlPlaneId terra.StringValue `hcl:"mobile_network_packet_core_control_plane_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// UserPlaneAccessIpv4Address: string, optional
	UserPlaneAccessIpv4Address terra.StringValue `hcl:"user_plane_access_ipv4_address,attr"`
	// UserPlaneAccessIpv4Gateway: string, optional
	UserPlaneAccessIpv4Gateway terra.StringValue `hcl:"user_plane_access_ipv4_gateway,attr"`
	// UserPlaneAccessIpv4Subnet: string, optional
	UserPlaneAccessIpv4Subnet terra.StringValue `hcl:"user_plane_access_ipv4_subnet,attr"`
	// UserPlaneAccessName: string, optional
	UserPlaneAccessName terra.StringValue `hcl:"user_plane_access_name,attr"`
	// Timeouts: optional
	Timeouts *mobilenetworkpacketcoredataplane.Timeouts `hcl:"timeouts,block"`
}
type mobileNetworkPacketCoreDataPlaneAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("location"))
}

// MobileNetworkPacketCoreControlPlaneId returns a reference to field mobile_network_packet_core_control_plane_id of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) MobileNetworkPacketCoreControlPlaneId() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("mobile_network_packet_core_control_plane_id"))
}

// Name returns a reference to field name of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("name"))
}

// Tags returns a reference to field tags of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mnpcdp.ref.Append("tags"))
}

// UserPlaneAccessIpv4Address returns a reference to field user_plane_access_ipv4_address of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) UserPlaneAccessIpv4Address() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("user_plane_access_ipv4_address"))
}

// UserPlaneAccessIpv4Gateway returns a reference to field user_plane_access_ipv4_gateway of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) UserPlaneAccessIpv4Gateway() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("user_plane_access_ipv4_gateway"))
}

// UserPlaneAccessIpv4Subnet returns a reference to field user_plane_access_ipv4_subnet of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) UserPlaneAccessIpv4Subnet() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("user_plane_access_ipv4_subnet"))
}

// UserPlaneAccessName returns a reference to field user_plane_access_name of azurerm_mobile_network_packet_core_data_plane.
func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) UserPlaneAccessName() terra.StringValue {
	return terra.ReferenceAsString(mnpcdp.ref.Append("user_plane_access_name"))
}

func (mnpcdp mobileNetworkPacketCoreDataPlaneAttributes) Timeouts() mobilenetworkpacketcoredataplane.TimeoutsAttributes {
	return terra.ReferenceAsSingle[mobilenetworkpacketcoredataplane.TimeoutsAttributes](mnpcdp.ref.Append("timeouts"))
}

type mobileNetworkPacketCoreDataPlaneState struct {
	Id                                    string                                          `json:"id"`
	Location                              string                                          `json:"location"`
	MobileNetworkPacketCoreControlPlaneId string                                          `json:"mobile_network_packet_core_control_plane_id"`
	Name                                  string                                          `json:"name"`
	Tags                                  map[string]string                               `json:"tags"`
	UserPlaneAccessIpv4Address            string                                          `json:"user_plane_access_ipv4_address"`
	UserPlaneAccessIpv4Gateway            string                                          `json:"user_plane_access_ipv4_gateway"`
	UserPlaneAccessIpv4Subnet             string                                          `json:"user_plane_access_ipv4_subnet"`
	UserPlaneAccessName                   string                                          `json:"user_plane_access_name"`
	Timeouts                              *mobilenetworkpacketcoredataplane.TimeoutsState `json:"timeouts"`
}
