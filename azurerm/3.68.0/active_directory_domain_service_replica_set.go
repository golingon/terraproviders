// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	activedirectorydomainservicereplicaset "github.com/golingon/terraproviders/azurerm/3.68.0/activedirectorydomainservicereplicaset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewActiveDirectoryDomainServiceReplicaSet creates a new instance of [ActiveDirectoryDomainServiceReplicaSet].
func NewActiveDirectoryDomainServiceReplicaSet(name string, args ActiveDirectoryDomainServiceReplicaSetArgs) *ActiveDirectoryDomainServiceReplicaSet {
	return &ActiveDirectoryDomainServiceReplicaSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ActiveDirectoryDomainServiceReplicaSet)(nil)

// ActiveDirectoryDomainServiceReplicaSet represents the Terraform resource azurerm_active_directory_domain_service_replica_set.
type ActiveDirectoryDomainServiceReplicaSet struct {
	Name      string
	Args      ActiveDirectoryDomainServiceReplicaSetArgs
	state     *activeDirectoryDomainServiceReplicaSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ActiveDirectoryDomainServiceReplicaSet].
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) Type() string {
	return "azurerm_active_directory_domain_service_replica_set"
}

// LocalName returns the local name for [ActiveDirectoryDomainServiceReplicaSet].
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) LocalName() string {
	return addsrs.Name
}

// Configuration returns the configuration (args) for [ActiveDirectoryDomainServiceReplicaSet].
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) Configuration() interface{} {
	return addsrs.Args
}

// DependOn is used for other resources to depend on [ActiveDirectoryDomainServiceReplicaSet].
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) DependOn() terra.Reference {
	return terra.ReferenceResource(addsrs)
}

// Dependencies returns the list of resources [ActiveDirectoryDomainServiceReplicaSet] depends_on.
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) Dependencies() terra.Dependencies {
	return addsrs.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ActiveDirectoryDomainServiceReplicaSet].
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) LifecycleManagement() *terra.Lifecycle {
	return addsrs.Lifecycle
}

// Attributes returns the attributes for [ActiveDirectoryDomainServiceReplicaSet].
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) Attributes() activeDirectoryDomainServiceReplicaSetAttributes {
	return activeDirectoryDomainServiceReplicaSetAttributes{ref: terra.ReferenceResource(addsrs)}
}

// ImportState imports the given attribute values into [ActiveDirectoryDomainServiceReplicaSet]'s state.
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) ImportState(av io.Reader) error {
	addsrs.state = &activeDirectoryDomainServiceReplicaSetState{}
	if err := json.NewDecoder(av).Decode(addsrs.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", addsrs.Type(), addsrs.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ActiveDirectoryDomainServiceReplicaSet] has state.
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) State() (*activeDirectoryDomainServiceReplicaSetState, bool) {
	return addsrs.state, addsrs.state != nil
}

// StateMust returns the state for [ActiveDirectoryDomainServiceReplicaSet]. Panics if the state is nil.
func (addsrs *ActiveDirectoryDomainServiceReplicaSet) StateMust() *activeDirectoryDomainServiceReplicaSetState {
	if addsrs.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", addsrs.Type(), addsrs.LocalName()))
	}
	return addsrs.state
}

// ActiveDirectoryDomainServiceReplicaSetArgs contains the configurations for azurerm_active_directory_domain_service_replica_set.
type ActiveDirectoryDomainServiceReplicaSetArgs struct {
	// DomainServiceId: string, required
	DomainServiceId terra.StringValue `hcl:"domain_service_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// SubnetId: string, required
	SubnetId terra.StringValue `hcl:"subnet_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *activedirectorydomainservicereplicaset.Timeouts `hcl:"timeouts,block"`
}
type activeDirectoryDomainServiceReplicaSetAttributes struct {
	ref terra.Reference
}

// DomainControllerIpAddresses returns a reference to field domain_controller_ip_addresses of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) DomainControllerIpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](addsrs.ref.Append("domain_controller_ip_addresses"))
}

// DomainServiceId returns a reference to field domain_service_id of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) DomainServiceId() terra.StringValue {
	return terra.ReferenceAsString(addsrs.ref.Append("domain_service_id"))
}

// ExternalAccessIpAddress returns a reference to field external_access_ip_address of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) ExternalAccessIpAddress() terra.StringValue {
	return terra.ReferenceAsString(addsrs.ref.Append("external_access_ip_address"))
}

// Id returns a reference to field id of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(addsrs.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(addsrs.ref.Append("location"))
}

// ServiceStatus returns a reference to field service_status of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) ServiceStatus() terra.StringValue {
	return terra.ReferenceAsString(addsrs.ref.Append("service_status"))
}

// SubnetId returns a reference to field subnet_id of azurerm_active_directory_domain_service_replica_set.
func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(addsrs.ref.Append("subnet_id"))
}

func (addsrs activeDirectoryDomainServiceReplicaSetAttributes) Timeouts() activedirectorydomainservicereplicaset.TimeoutsAttributes {
	return terra.ReferenceAsSingle[activedirectorydomainservicereplicaset.TimeoutsAttributes](addsrs.ref.Append("timeouts"))
}

type activeDirectoryDomainServiceReplicaSetState struct {
	DomainControllerIpAddresses []string                                              `json:"domain_controller_ip_addresses"`
	DomainServiceId             string                                                `json:"domain_service_id"`
	ExternalAccessIpAddress     string                                                `json:"external_access_ip_address"`
	Id                          string                                                `json:"id"`
	Location                    string                                                `json:"location"`
	ServiceStatus               string                                                `json:"service_status"`
	SubnetId                    string                                                `json:"subnet_id"`
	Timeouts                    *activedirectorydomainservicereplicaset.TimeoutsState `json:"timeouts"`
}
