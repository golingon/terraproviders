// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datakeyvaultsecrets

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Secrets struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type SecretsAttributes struct {
	ref terra.Reference
}

func (s SecretsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SecretsAttributes) InternalWithRef(ref terra.Reference) SecretsAttributes {
	return SecretsAttributes{ref: ref}
}

func (s SecretsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SecretsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("enabled"))
}

func (s SecretsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s SecretsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type SecretsState struct {
	Enabled bool   `json:"enabled"`
	Id      string `json:"id"`
	Name    string `json:"name"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
