// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	datafactorylinkedservicepostgresql "github.com/golingon/terraproviders/azurerm/3.67.0/datafactorylinkedservicepostgresql"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDataFactoryLinkedServicePostgresql creates a new instance of [DataFactoryLinkedServicePostgresql].
func NewDataFactoryLinkedServicePostgresql(name string, args DataFactoryLinkedServicePostgresqlArgs) *DataFactoryLinkedServicePostgresql {
	return &DataFactoryLinkedServicePostgresql{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DataFactoryLinkedServicePostgresql)(nil)

// DataFactoryLinkedServicePostgresql represents the Terraform resource azurerm_data_factory_linked_service_postgresql.
type DataFactoryLinkedServicePostgresql struct {
	Name      string
	Args      DataFactoryLinkedServicePostgresqlArgs
	state     *dataFactoryLinkedServicePostgresqlState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DataFactoryLinkedServicePostgresql].
func (dflsp *DataFactoryLinkedServicePostgresql) Type() string {
	return "azurerm_data_factory_linked_service_postgresql"
}

// LocalName returns the local name for [DataFactoryLinkedServicePostgresql].
func (dflsp *DataFactoryLinkedServicePostgresql) LocalName() string {
	return dflsp.Name
}

// Configuration returns the configuration (args) for [DataFactoryLinkedServicePostgresql].
func (dflsp *DataFactoryLinkedServicePostgresql) Configuration() interface{} {
	return dflsp.Args
}

// DependOn is used for other resources to depend on [DataFactoryLinkedServicePostgresql].
func (dflsp *DataFactoryLinkedServicePostgresql) DependOn() terra.Reference {
	return terra.ReferenceResource(dflsp)
}

// Dependencies returns the list of resources [DataFactoryLinkedServicePostgresql] depends_on.
func (dflsp *DataFactoryLinkedServicePostgresql) Dependencies() terra.Dependencies {
	return dflsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DataFactoryLinkedServicePostgresql].
func (dflsp *DataFactoryLinkedServicePostgresql) LifecycleManagement() *terra.Lifecycle {
	return dflsp.Lifecycle
}

// Attributes returns the attributes for [DataFactoryLinkedServicePostgresql].
func (dflsp *DataFactoryLinkedServicePostgresql) Attributes() dataFactoryLinkedServicePostgresqlAttributes {
	return dataFactoryLinkedServicePostgresqlAttributes{ref: terra.ReferenceResource(dflsp)}
}

// ImportState imports the given attribute values into [DataFactoryLinkedServicePostgresql]'s state.
func (dflsp *DataFactoryLinkedServicePostgresql) ImportState(av io.Reader) error {
	dflsp.state = &dataFactoryLinkedServicePostgresqlState{}
	if err := json.NewDecoder(av).Decode(dflsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dflsp.Type(), dflsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DataFactoryLinkedServicePostgresql] has state.
func (dflsp *DataFactoryLinkedServicePostgresql) State() (*dataFactoryLinkedServicePostgresqlState, bool) {
	return dflsp.state, dflsp.state != nil
}

// StateMust returns the state for [DataFactoryLinkedServicePostgresql]. Panics if the state is nil.
func (dflsp *DataFactoryLinkedServicePostgresql) StateMust() *dataFactoryLinkedServicePostgresqlState {
	if dflsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dflsp.Type(), dflsp.LocalName()))
	}
	return dflsp.state
}

// DataFactoryLinkedServicePostgresqlArgs contains the configurations for azurerm_data_factory_linked_service_postgresql.
type DataFactoryLinkedServicePostgresqlArgs struct {
	// AdditionalProperties: map of string, optional
	AdditionalProperties terra.MapValue[terra.StringValue] `hcl:"additional_properties,attr"`
	// Annotations: list of string, optional
	Annotations terra.ListValue[terra.StringValue] `hcl:"annotations,attr"`
	// ConnectionString: string, required
	ConnectionString terra.StringValue `hcl:"connection_string,attr" validate:"required"`
	// DataFactoryId: string, required
	DataFactoryId terra.StringValue `hcl:"data_factory_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationRuntimeName: string, optional
	IntegrationRuntimeName terra.StringValue `hcl:"integration_runtime_name,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// Timeouts: optional
	Timeouts *datafactorylinkedservicepostgresql.Timeouts `hcl:"timeouts,block"`
}
type dataFactoryLinkedServicePostgresqlAttributes struct {
	ref terra.Reference
}

// AdditionalProperties returns a reference to field additional_properties of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) AdditionalProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dflsp.ref.Append("additional_properties"))
}

// Annotations returns a reference to field annotations of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) Annotations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dflsp.ref.Append("annotations"))
}

// ConnectionString returns a reference to field connection_string of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) ConnectionString() terra.StringValue {
	return terra.ReferenceAsString(dflsp.ref.Append("connection_string"))
}

// DataFactoryId returns a reference to field data_factory_id of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) DataFactoryId() terra.StringValue {
	return terra.ReferenceAsString(dflsp.ref.Append("data_factory_id"))
}

// Description returns a reference to field description of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(dflsp.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dflsp.ref.Append("id"))
}

// IntegrationRuntimeName returns a reference to field integration_runtime_name of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) IntegrationRuntimeName() terra.StringValue {
	return terra.ReferenceAsString(dflsp.ref.Append("integration_runtime_name"))
}

// Name returns a reference to field name of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dflsp.ref.Append("name"))
}

// Parameters returns a reference to field parameters of azurerm_data_factory_linked_service_postgresql.
func (dflsp dataFactoryLinkedServicePostgresqlAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dflsp.ref.Append("parameters"))
}

func (dflsp dataFactoryLinkedServicePostgresqlAttributes) Timeouts() datafactorylinkedservicepostgresql.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datafactorylinkedservicepostgresql.TimeoutsAttributes](dflsp.ref.Append("timeouts"))
}

type dataFactoryLinkedServicePostgresqlState struct {
	AdditionalProperties   map[string]string                                 `json:"additional_properties"`
	Annotations            []string                                          `json:"annotations"`
	ConnectionString       string                                            `json:"connection_string"`
	DataFactoryId          string                                            `json:"data_factory_id"`
	Description            string                                            `json:"description"`
	Id                     string                                            `json:"id"`
	IntegrationRuntimeName string                                            `json:"integration_runtime_name"`
	Name                   string                                            `json:"name"`
	Parameters             map[string]string                                 `json:"parameters"`
	Timeouts               *datafactorylinkedservicepostgresql.TimeoutsState `json:"timeouts"`
}
