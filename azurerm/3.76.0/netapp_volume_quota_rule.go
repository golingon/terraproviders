// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	netappvolumequotarule "github.com/golingon/terraproviders/azurerm/3.76.0/netappvolumequotarule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewNetappVolumeQuotaRule creates a new instance of [NetappVolumeQuotaRule].
func NewNetappVolumeQuotaRule(name string, args NetappVolumeQuotaRuleArgs) *NetappVolumeQuotaRule {
	return &NetappVolumeQuotaRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetappVolumeQuotaRule)(nil)

// NetappVolumeQuotaRule represents the Terraform resource azurerm_netapp_volume_quota_rule.
type NetappVolumeQuotaRule struct {
	Name      string
	Args      NetappVolumeQuotaRuleArgs
	state     *netappVolumeQuotaRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [NetappVolumeQuotaRule].
func (nvqr *NetappVolumeQuotaRule) Type() string {
	return "azurerm_netapp_volume_quota_rule"
}

// LocalName returns the local name for [NetappVolumeQuotaRule].
func (nvqr *NetappVolumeQuotaRule) LocalName() string {
	return nvqr.Name
}

// Configuration returns the configuration (args) for [NetappVolumeQuotaRule].
func (nvqr *NetappVolumeQuotaRule) Configuration() interface{} {
	return nvqr.Args
}

// DependOn is used for other resources to depend on [NetappVolumeQuotaRule].
func (nvqr *NetappVolumeQuotaRule) DependOn() terra.Reference {
	return terra.ReferenceResource(nvqr)
}

// Dependencies returns the list of resources [NetappVolumeQuotaRule] depends_on.
func (nvqr *NetappVolumeQuotaRule) Dependencies() terra.Dependencies {
	return nvqr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [NetappVolumeQuotaRule].
func (nvqr *NetappVolumeQuotaRule) LifecycleManagement() *terra.Lifecycle {
	return nvqr.Lifecycle
}

// Attributes returns the attributes for [NetappVolumeQuotaRule].
func (nvqr *NetappVolumeQuotaRule) Attributes() netappVolumeQuotaRuleAttributes {
	return netappVolumeQuotaRuleAttributes{ref: terra.ReferenceResource(nvqr)}
}

// ImportState imports the given attribute values into [NetappVolumeQuotaRule]'s state.
func (nvqr *NetappVolumeQuotaRule) ImportState(av io.Reader) error {
	nvqr.state = &netappVolumeQuotaRuleState{}
	if err := json.NewDecoder(av).Decode(nvqr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nvqr.Type(), nvqr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [NetappVolumeQuotaRule] has state.
func (nvqr *NetappVolumeQuotaRule) State() (*netappVolumeQuotaRuleState, bool) {
	return nvqr.state, nvqr.state != nil
}

// StateMust returns the state for [NetappVolumeQuotaRule]. Panics if the state is nil.
func (nvqr *NetappVolumeQuotaRule) StateMust() *netappVolumeQuotaRuleState {
	if nvqr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nvqr.Type(), nvqr.LocalName()))
	}
	return nvqr.state
}

// NetappVolumeQuotaRuleArgs contains the configurations for azurerm_netapp_volume_quota_rule.
type NetappVolumeQuotaRuleArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QuotaSizeInKib: number, required
	QuotaSizeInKib terra.NumberValue `hcl:"quota_size_in_kib,attr" validate:"required"`
	// QuotaTarget: string, optional
	QuotaTarget terra.StringValue `hcl:"quota_target,attr"`
	// QuotaType: string, required
	QuotaType terra.StringValue `hcl:"quota_type,attr" validate:"required"`
	// VolumeId: string, required
	VolumeId terra.StringValue `hcl:"volume_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *netappvolumequotarule.Timeouts `hcl:"timeouts,block"`
}
type netappVolumeQuotaRuleAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nvqr.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(nvqr.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nvqr.ref.Append("name"))
}

// QuotaSizeInKib returns a reference to field quota_size_in_kib of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) QuotaSizeInKib() terra.NumberValue {
	return terra.ReferenceAsNumber(nvqr.ref.Append("quota_size_in_kib"))
}

// QuotaTarget returns a reference to field quota_target of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) QuotaTarget() terra.StringValue {
	return terra.ReferenceAsString(nvqr.ref.Append("quota_target"))
}

// QuotaType returns a reference to field quota_type of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) QuotaType() terra.StringValue {
	return terra.ReferenceAsString(nvqr.ref.Append("quota_type"))
}

// VolumeId returns a reference to field volume_id of azurerm_netapp_volume_quota_rule.
func (nvqr netappVolumeQuotaRuleAttributes) VolumeId() terra.StringValue {
	return terra.ReferenceAsString(nvqr.ref.Append("volume_id"))
}

func (nvqr netappVolumeQuotaRuleAttributes) Timeouts() netappvolumequotarule.TimeoutsAttributes {
	return terra.ReferenceAsSingle[netappvolumequotarule.TimeoutsAttributes](nvqr.ref.Append("timeouts"))
}

type netappVolumeQuotaRuleState struct {
	Id             string                               `json:"id"`
	Location       string                               `json:"location"`
	Name           string                               `json:"name"`
	QuotaSizeInKib float64                              `json:"quota_size_in_kib"`
	QuotaTarget    string                               `json:"quota_target"`
	QuotaType      string                               `json:"quota_type"`
	VolumeId       string                               `json:"volume_id"`
	Timeouts       *netappvolumequotarule.TimeoutsState `json:"timeouts"`
}
